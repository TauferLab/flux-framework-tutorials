
/usr/lib64/flux/connectors/local.so:     file format elf64-x86-64


Disassembly of section .init:

000000000000e8d8 <_init>:
    e8d8:	f3 0f 1e fa          	endbr64 
    e8dc:	48 83 ec 08          	sub    $0x8,%rsp
    e8e0:	48 8b 05 d9 46 24 00 	mov    0x2446d9(%rip),%rax        # 252fc0 <__gmon_start__@Base>
    e8e7:	48 85 c0             	test   %rax,%rax
    e8ea:	74 02                	je     e8ee <_init+0x16>
    e8ec:	ff d0                	callq  *%rax
    e8ee:	48 83 c4 08          	add    $0x8,%rsp
    e8f2:	c3                   	retq   

Disassembly of section .plt:

000000000000e900 <.plt>:
    e900:	ff 35 f2 3d 24 00    	pushq  0x243df2(%rip)        # 2526f8 <_GLOBAL_OFFSET_TABLE_+0x8>
    e906:	f2 ff 25 f3 3d 24 00 	bnd jmpq *0x243df3(%rip)        # 252700 <_GLOBAL_OFFSET_TABLE_+0x10>
    e90d:	0f 1f 00             	nopl   (%rax)
    e910:	f3 0f 1e fa          	endbr64 
    e914:	68 00 00 00 00       	pushq  $0x0
    e919:	f2 e9 e1 ff ff ff    	bnd jmpq e900 <.plt>
    e91f:	90                   	nop
    e920:	f3 0f 1e fa          	endbr64 
    e924:	68 01 00 00 00       	pushq  $0x1
    e929:	f2 e9 d1 ff ff ff    	bnd jmpq e900 <.plt>
    e92f:	90                   	nop
    e930:	f3 0f 1e fa          	endbr64 
    e934:	68 02 00 00 00       	pushq  $0x2
    e939:	f2 e9 c1 ff ff ff    	bnd jmpq e900 <.plt>
    e93f:	90                   	nop
    e940:	f3 0f 1e fa          	endbr64 
    e944:	68 03 00 00 00       	pushq  $0x3
    e949:	f2 e9 b1 ff ff ff    	bnd jmpq e900 <.plt>
    e94f:	90                   	nop
    e950:	f3 0f 1e fa          	endbr64 
    e954:	68 04 00 00 00       	pushq  $0x4
    e959:	f2 e9 a1 ff ff ff    	bnd jmpq e900 <.plt>
    e95f:	90                   	nop
    e960:	f3 0f 1e fa          	endbr64 
    e964:	68 05 00 00 00       	pushq  $0x5
    e969:	f2 e9 91 ff ff ff    	bnd jmpq e900 <.plt>
    e96f:	90                   	nop
    e970:	f3 0f 1e fa          	endbr64 
    e974:	68 06 00 00 00       	pushq  $0x6
    e979:	f2 e9 81 ff ff ff    	bnd jmpq e900 <.plt>
    e97f:	90                   	nop
    e980:	f3 0f 1e fa          	endbr64 
    e984:	68 07 00 00 00       	pushq  $0x7
    e989:	f2 e9 71 ff ff ff    	bnd jmpq e900 <.plt>
    e98f:	90                   	nop
    e990:	f3 0f 1e fa          	endbr64 
    e994:	68 08 00 00 00       	pushq  $0x8
    e999:	f2 e9 61 ff ff ff    	bnd jmpq e900 <.plt>
    e99f:	90                   	nop
    e9a0:	f3 0f 1e fa          	endbr64 
    e9a4:	68 09 00 00 00       	pushq  $0x9
    e9a9:	f2 e9 51 ff ff ff    	bnd jmpq e900 <.plt>
    e9af:	90                   	nop
    e9b0:	f3 0f 1e fa          	endbr64 
    e9b4:	68 0a 00 00 00       	pushq  $0xa
    e9b9:	f2 e9 41 ff ff ff    	bnd jmpq e900 <.plt>
    e9bf:	90                   	nop
    e9c0:	f3 0f 1e fa          	endbr64 
    e9c4:	68 0b 00 00 00       	pushq  $0xb
    e9c9:	f2 e9 31 ff ff ff    	bnd jmpq e900 <.plt>
    e9cf:	90                   	nop
    e9d0:	f3 0f 1e fa          	endbr64 
    e9d4:	68 0c 00 00 00       	pushq  $0xc
    e9d9:	f2 e9 21 ff ff ff    	bnd jmpq e900 <.plt>
    e9df:	90                   	nop
    e9e0:	f3 0f 1e fa          	endbr64 
    e9e4:	68 0d 00 00 00       	pushq  $0xd
    e9e9:	f2 e9 11 ff ff ff    	bnd jmpq e900 <.plt>
    e9ef:	90                   	nop
    e9f0:	f3 0f 1e fa          	endbr64 
    e9f4:	68 0e 00 00 00       	pushq  $0xe
    e9f9:	f2 e9 01 ff ff ff    	bnd jmpq e900 <.plt>
    e9ff:	90                   	nop
    ea00:	f3 0f 1e fa          	endbr64 
    ea04:	68 0f 00 00 00       	pushq  $0xf
    ea09:	f2 e9 f1 fe ff ff    	bnd jmpq e900 <.plt>
    ea0f:	90                   	nop
    ea10:	f3 0f 1e fa          	endbr64 
    ea14:	68 10 00 00 00       	pushq  $0x10
    ea19:	f2 e9 e1 fe ff ff    	bnd jmpq e900 <.plt>
    ea1f:	90                   	nop
    ea20:	f3 0f 1e fa          	endbr64 
    ea24:	68 11 00 00 00       	pushq  $0x11
    ea29:	f2 e9 d1 fe ff ff    	bnd jmpq e900 <.plt>
    ea2f:	90                   	nop
    ea30:	f3 0f 1e fa          	endbr64 
    ea34:	68 12 00 00 00       	pushq  $0x12
    ea39:	f2 e9 c1 fe ff ff    	bnd jmpq e900 <.plt>
    ea3f:	90                   	nop
    ea40:	f3 0f 1e fa          	endbr64 
    ea44:	68 13 00 00 00       	pushq  $0x13
    ea49:	f2 e9 b1 fe ff ff    	bnd jmpq e900 <.plt>
    ea4f:	90                   	nop
    ea50:	f3 0f 1e fa          	endbr64 
    ea54:	68 14 00 00 00       	pushq  $0x14
    ea59:	f2 e9 a1 fe ff ff    	bnd jmpq e900 <.plt>
    ea5f:	90                   	nop
    ea60:	f3 0f 1e fa          	endbr64 
    ea64:	68 15 00 00 00       	pushq  $0x15
    ea69:	f2 e9 91 fe ff ff    	bnd jmpq e900 <.plt>
    ea6f:	90                   	nop
    ea70:	f3 0f 1e fa          	endbr64 
    ea74:	68 16 00 00 00       	pushq  $0x16
    ea79:	f2 e9 81 fe ff ff    	bnd jmpq e900 <.plt>
    ea7f:	90                   	nop
    ea80:	f3 0f 1e fa          	endbr64 
    ea84:	68 17 00 00 00       	pushq  $0x17
    ea89:	f2 e9 71 fe ff ff    	bnd jmpq e900 <.plt>
    ea8f:	90                   	nop
    ea90:	f3 0f 1e fa          	endbr64 
    ea94:	68 18 00 00 00       	pushq  $0x18
    ea99:	f2 e9 61 fe ff ff    	bnd jmpq e900 <.plt>
    ea9f:	90                   	nop
    eaa0:	f3 0f 1e fa          	endbr64 
    eaa4:	68 19 00 00 00       	pushq  $0x19
    eaa9:	f2 e9 51 fe ff ff    	bnd jmpq e900 <.plt>
    eaaf:	90                   	nop
    eab0:	f3 0f 1e fa          	endbr64 
    eab4:	68 1a 00 00 00       	pushq  $0x1a
    eab9:	f2 e9 41 fe ff ff    	bnd jmpq e900 <.plt>
    eabf:	90                   	nop
    eac0:	f3 0f 1e fa          	endbr64 
    eac4:	68 1b 00 00 00       	pushq  $0x1b
    eac9:	f2 e9 31 fe ff ff    	bnd jmpq e900 <.plt>
    eacf:	90                   	nop
    ead0:	f3 0f 1e fa          	endbr64 
    ead4:	68 1c 00 00 00       	pushq  $0x1c
    ead9:	f2 e9 21 fe ff ff    	bnd jmpq e900 <.plt>
    eadf:	90                   	nop
    eae0:	f3 0f 1e fa          	endbr64 
    eae4:	68 1d 00 00 00       	pushq  $0x1d
    eae9:	f2 e9 11 fe ff ff    	bnd jmpq e900 <.plt>
    eaef:	90                   	nop
    eaf0:	f3 0f 1e fa          	endbr64 
    eaf4:	68 1e 00 00 00       	pushq  $0x1e
    eaf9:	f2 e9 01 fe ff ff    	bnd jmpq e900 <.plt>
    eaff:	90                   	nop
    eb00:	f3 0f 1e fa          	endbr64 
    eb04:	68 1f 00 00 00       	pushq  $0x1f
    eb09:	f2 e9 f1 fd ff ff    	bnd jmpq e900 <.plt>
    eb0f:	90                   	nop
    eb10:	f3 0f 1e fa          	endbr64 
    eb14:	68 20 00 00 00       	pushq  $0x20
    eb19:	f2 e9 e1 fd ff ff    	bnd jmpq e900 <.plt>
    eb1f:	90                   	nop
    eb20:	f3 0f 1e fa          	endbr64 
    eb24:	68 21 00 00 00       	pushq  $0x21
    eb29:	f2 e9 d1 fd ff ff    	bnd jmpq e900 <.plt>
    eb2f:	90                   	nop
    eb30:	f3 0f 1e fa          	endbr64 
    eb34:	68 22 00 00 00       	pushq  $0x22
    eb39:	f2 e9 c1 fd ff ff    	bnd jmpq e900 <.plt>
    eb3f:	90                   	nop
    eb40:	f3 0f 1e fa          	endbr64 
    eb44:	68 23 00 00 00       	pushq  $0x23
    eb49:	f2 e9 b1 fd ff ff    	bnd jmpq e900 <.plt>
    eb4f:	90                   	nop
    eb50:	f3 0f 1e fa          	endbr64 
    eb54:	68 24 00 00 00       	pushq  $0x24
    eb59:	f2 e9 a1 fd ff ff    	bnd jmpq e900 <.plt>
    eb5f:	90                   	nop
    eb60:	f3 0f 1e fa          	endbr64 
    eb64:	68 25 00 00 00       	pushq  $0x25
    eb69:	f2 e9 91 fd ff ff    	bnd jmpq e900 <.plt>
    eb6f:	90                   	nop
    eb70:	f3 0f 1e fa          	endbr64 
    eb74:	68 26 00 00 00       	pushq  $0x26
    eb79:	f2 e9 81 fd ff ff    	bnd jmpq e900 <.plt>
    eb7f:	90                   	nop
    eb80:	f3 0f 1e fa          	endbr64 
    eb84:	68 27 00 00 00       	pushq  $0x27
    eb89:	f2 e9 71 fd ff ff    	bnd jmpq e900 <.plt>
    eb8f:	90                   	nop
    eb90:	f3 0f 1e fa          	endbr64 
    eb94:	68 28 00 00 00       	pushq  $0x28
    eb99:	f2 e9 61 fd ff ff    	bnd jmpq e900 <.plt>
    eb9f:	90                   	nop
    eba0:	f3 0f 1e fa          	endbr64 
    eba4:	68 29 00 00 00       	pushq  $0x29
    eba9:	f2 e9 51 fd ff ff    	bnd jmpq e900 <.plt>
    ebaf:	90                   	nop
    ebb0:	f3 0f 1e fa          	endbr64 
    ebb4:	68 2a 00 00 00       	pushq  $0x2a
    ebb9:	f2 e9 41 fd ff ff    	bnd jmpq e900 <.plt>
    ebbf:	90                   	nop
    ebc0:	f3 0f 1e fa          	endbr64 
    ebc4:	68 2b 00 00 00       	pushq  $0x2b
    ebc9:	f2 e9 31 fd ff ff    	bnd jmpq e900 <.plt>
    ebcf:	90                   	nop
    ebd0:	f3 0f 1e fa          	endbr64 
    ebd4:	68 2c 00 00 00       	pushq  $0x2c
    ebd9:	f2 e9 21 fd ff ff    	bnd jmpq e900 <.plt>
    ebdf:	90                   	nop
    ebe0:	f3 0f 1e fa          	endbr64 
    ebe4:	68 2d 00 00 00       	pushq  $0x2d
    ebe9:	f2 e9 11 fd ff ff    	bnd jmpq e900 <.plt>
    ebef:	90                   	nop
    ebf0:	f3 0f 1e fa          	endbr64 
    ebf4:	68 2e 00 00 00       	pushq  $0x2e
    ebf9:	f2 e9 01 fd ff ff    	bnd jmpq e900 <.plt>
    ebff:	90                   	nop
    ec00:	f3 0f 1e fa          	endbr64 
    ec04:	68 2f 00 00 00       	pushq  $0x2f
    ec09:	f2 e9 f1 fc ff ff    	bnd jmpq e900 <.plt>
    ec0f:	90                   	nop
    ec10:	f3 0f 1e fa          	endbr64 
    ec14:	68 30 00 00 00       	pushq  $0x30
    ec19:	f2 e9 e1 fc ff ff    	bnd jmpq e900 <.plt>
    ec1f:	90                   	nop
    ec20:	f3 0f 1e fa          	endbr64 
    ec24:	68 31 00 00 00       	pushq  $0x31
    ec29:	f2 e9 d1 fc ff ff    	bnd jmpq e900 <.plt>
    ec2f:	90                   	nop
    ec30:	f3 0f 1e fa          	endbr64 
    ec34:	68 32 00 00 00       	pushq  $0x32
    ec39:	f2 e9 c1 fc ff ff    	bnd jmpq e900 <.plt>
    ec3f:	90                   	nop
    ec40:	f3 0f 1e fa          	endbr64 
    ec44:	68 33 00 00 00       	pushq  $0x33
    ec49:	f2 e9 b1 fc ff ff    	bnd jmpq e900 <.plt>
    ec4f:	90                   	nop
    ec50:	f3 0f 1e fa          	endbr64 
    ec54:	68 34 00 00 00       	pushq  $0x34
    ec59:	f2 e9 a1 fc ff ff    	bnd jmpq e900 <.plt>
    ec5f:	90                   	nop
    ec60:	f3 0f 1e fa          	endbr64 
    ec64:	68 35 00 00 00       	pushq  $0x35
    ec69:	f2 e9 91 fc ff ff    	bnd jmpq e900 <.plt>
    ec6f:	90                   	nop
    ec70:	f3 0f 1e fa          	endbr64 
    ec74:	68 36 00 00 00       	pushq  $0x36
    ec79:	f2 e9 81 fc ff ff    	bnd jmpq e900 <.plt>
    ec7f:	90                   	nop
    ec80:	f3 0f 1e fa          	endbr64 
    ec84:	68 37 00 00 00       	pushq  $0x37
    ec89:	f2 e9 71 fc ff ff    	bnd jmpq e900 <.plt>
    ec8f:	90                   	nop
    ec90:	f3 0f 1e fa          	endbr64 
    ec94:	68 38 00 00 00       	pushq  $0x38
    ec99:	f2 e9 61 fc ff ff    	bnd jmpq e900 <.plt>
    ec9f:	90                   	nop
    eca0:	f3 0f 1e fa          	endbr64 
    eca4:	68 39 00 00 00       	pushq  $0x39
    eca9:	f2 e9 51 fc ff ff    	bnd jmpq e900 <.plt>
    ecaf:	90                   	nop
    ecb0:	f3 0f 1e fa          	endbr64 
    ecb4:	68 3a 00 00 00       	pushq  $0x3a
    ecb9:	f2 e9 41 fc ff ff    	bnd jmpq e900 <.plt>
    ecbf:	90                   	nop
    ecc0:	f3 0f 1e fa          	endbr64 
    ecc4:	68 3b 00 00 00       	pushq  $0x3b
    ecc9:	f2 e9 31 fc ff ff    	bnd jmpq e900 <.plt>
    eccf:	90                   	nop
    ecd0:	f3 0f 1e fa          	endbr64 
    ecd4:	68 3c 00 00 00       	pushq  $0x3c
    ecd9:	f2 e9 21 fc ff ff    	bnd jmpq e900 <.plt>
    ecdf:	90                   	nop
    ece0:	f3 0f 1e fa          	endbr64 
    ece4:	68 3d 00 00 00       	pushq  $0x3d
    ece9:	f2 e9 11 fc ff ff    	bnd jmpq e900 <.plt>
    ecef:	90                   	nop
    ecf0:	f3 0f 1e fa          	endbr64 
    ecf4:	68 3e 00 00 00       	pushq  $0x3e
    ecf9:	f2 e9 01 fc ff ff    	bnd jmpq e900 <.plt>
    ecff:	90                   	nop
    ed00:	f3 0f 1e fa          	endbr64 
    ed04:	68 3f 00 00 00       	pushq  $0x3f
    ed09:	f2 e9 f1 fb ff ff    	bnd jmpq e900 <.plt>
    ed0f:	90                   	nop
    ed10:	f3 0f 1e fa          	endbr64 
    ed14:	68 40 00 00 00       	pushq  $0x40
    ed19:	f2 e9 e1 fb ff ff    	bnd jmpq e900 <.plt>
    ed1f:	90                   	nop
    ed20:	f3 0f 1e fa          	endbr64 
    ed24:	68 41 00 00 00       	pushq  $0x41
    ed29:	f2 e9 d1 fb ff ff    	bnd jmpq e900 <.plt>
    ed2f:	90                   	nop
    ed30:	f3 0f 1e fa          	endbr64 
    ed34:	68 42 00 00 00       	pushq  $0x42
    ed39:	f2 e9 c1 fb ff ff    	bnd jmpq e900 <.plt>
    ed3f:	90                   	nop
    ed40:	f3 0f 1e fa          	endbr64 
    ed44:	68 43 00 00 00       	pushq  $0x43
    ed49:	f2 e9 b1 fb ff ff    	bnd jmpq e900 <.plt>
    ed4f:	90                   	nop
    ed50:	f3 0f 1e fa          	endbr64 
    ed54:	68 44 00 00 00       	pushq  $0x44
    ed59:	f2 e9 a1 fb ff ff    	bnd jmpq e900 <.plt>
    ed5f:	90                   	nop
    ed60:	f3 0f 1e fa          	endbr64 
    ed64:	68 45 00 00 00       	pushq  $0x45
    ed69:	f2 e9 91 fb ff ff    	bnd jmpq e900 <.plt>
    ed6f:	90                   	nop
    ed70:	f3 0f 1e fa          	endbr64 
    ed74:	68 46 00 00 00       	pushq  $0x46
    ed79:	f2 e9 81 fb ff ff    	bnd jmpq e900 <.plt>
    ed7f:	90                   	nop
    ed80:	f3 0f 1e fa          	endbr64 
    ed84:	68 47 00 00 00       	pushq  $0x47
    ed89:	f2 e9 71 fb ff ff    	bnd jmpq e900 <.plt>
    ed8f:	90                   	nop
    ed90:	f3 0f 1e fa          	endbr64 
    ed94:	68 48 00 00 00       	pushq  $0x48
    ed99:	f2 e9 61 fb ff ff    	bnd jmpq e900 <.plt>
    ed9f:	90                   	nop
    eda0:	f3 0f 1e fa          	endbr64 
    eda4:	68 49 00 00 00       	pushq  $0x49
    eda9:	f2 e9 51 fb ff ff    	bnd jmpq e900 <.plt>
    edaf:	90                   	nop
    edb0:	f3 0f 1e fa          	endbr64 
    edb4:	68 4a 00 00 00       	pushq  $0x4a
    edb9:	f2 e9 41 fb ff ff    	bnd jmpq e900 <.plt>
    edbf:	90                   	nop
    edc0:	f3 0f 1e fa          	endbr64 
    edc4:	68 4b 00 00 00       	pushq  $0x4b
    edc9:	f2 e9 31 fb ff ff    	bnd jmpq e900 <.plt>
    edcf:	90                   	nop
    edd0:	f3 0f 1e fa          	endbr64 
    edd4:	68 4c 00 00 00       	pushq  $0x4c
    edd9:	f2 e9 21 fb ff ff    	bnd jmpq e900 <.plt>
    eddf:	90                   	nop
    ede0:	f3 0f 1e fa          	endbr64 
    ede4:	68 4d 00 00 00       	pushq  $0x4d
    ede9:	f2 e9 11 fb ff ff    	bnd jmpq e900 <.plt>
    edef:	90                   	nop
    edf0:	f3 0f 1e fa          	endbr64 
    edf4:	68 4e 00 00 00       	pushq  $0x4e
    edf9:	f2 e9 01 fb ff ff    	bnd jmpq e900 <.plt>
    edff:	90                   	nop
    ee00:	f3 0f 1e fa          	endbr64 
    ee04:	68 4f 00 00 00       	pushq  $0x4f
    ee09:	f2 e9 f1 fa ff ff    	bnd jmpq e900 <.plt>
    ee0f:	90                   	nop
    ee10:	f3 0f 1e fa          	endbr64 
    ee14:	68 50 00 00 00       	pushq  $0x50
    ee19:	f2 e9 e1 fa ff ff    	bnd jmpq e900 <.plt>
    ee1f:	90                   	nop
    ee20:	f3 0f 1e fa          	endbr64 
    ee24:	68 51 00 00 00       	pushq  $0x51
    ee29:	f2 e9 d1 fa ff ff    	bnd jmpq e900 <.plt>
    ee2f:	90                   	nop
    ee30:	f3 0f 1e fa          	endbr64 
    ee34:	68 52 00 00 00       	pushq  $0x52
    ee39:	f2 e9 c1 fa ff ff    	bnd jmpq e900 <.plt>
    ee3f:	90                   	nop
    ee40:	f3 0f 1e fa          	endbr64 
    ee44:	68 53 00 00 00       	pushq  $0x53
    ee49:	f2 e9 b1 fa ff ff    	bnd jmpq e900 <.plt>
    ee4f:	90                   	nop
    ee50:	f3 0f 1e fa          	endbr64 
    ee54:	68 54 00 00 00       	pushq  $0x54
    ee59:	f2 e9 a1 fa ff ff    	bnd jmpq e900 <.plt>
    ee5f:	90                   	nop
    ee60:	f3 0f 1e fa          	endbr64 
    ee64:	68 55 00 00 00       	pushq  $0x55
    ee69:	f2 e9 91 fa ff ff    	bnd jmpq e900 <.plt>
    ee6f:	90                   	nop
    ee70:	f3 0f 1e fa          	endbr64 
    ee74:	68 56 00 00 00       	pushq  $0x56
    ee79:	f2 e9 81 fa ff ff    	bnd jmpq e900 <.plt>
    ee7f:	90                   	nop
    ee80:	f3 0f 1e fa          	endbr64 
    ee84:	68 57 00 00 00       	pushq  $0x57
    ee89:	f2 e9 71 fa ff ff    	bnd jmpq e900 <.plt>
    ee8f:	90                   	nop
    ee90:	f3 0f 1e fa          	endbr64 
    ee94:	68 58 00 00 00       	pushq  $0x58
    ee99:	f2 e9 61 fa ff ff    	bnd jmpq e900 <.plt>
    ee9f:	90                   	nop
    eea0:	f3 0f 1e fa          	endbr64 
    eea4:	68 59 00 00 00       	pushq  $0x59
    eea9:	f2 e9 51 fa ff ff    	bnd jmpq e900 <.plt>
    eeaf:	90                   	nop
    eeb0:	f3 0f 1e fa          	endbr64 
    eeb4:	68 5a 00 00 00       	pushq  $0x5a
    eeb9:	f2 e9 41 fa ff ff    	bnd jmpq e900 <.plt>
    eebf:	90                   	nop
    eec0:	f3 0f 1e fa          	endbr64 
    eec4:	68 5b 00 00 00       	pushq  $0x5b
    eec9:	f2 e9 31 fa ff ff    	bnd jmpq e900 <.plt>
    eecf:	90                   	nop
    eed0:	f3 0f 1e fa          	endbr64 
    eed4:	68 5c 00 00 00       	pushq  $0x5c
    eed9:	f2 e9 21 fa ff ff    	bnd jmpq e900 <.plt>
    eedf:	90                   	nop
    eee0:	f3 0f 1e fa          	endbr64 
    eee4:	68 5d 00 00 00       	pushq  $0x5d
    eee9:	f2 e9 11 fa ff ff    	bnd jmpq e900 <.plt>
    eeef:	90                   	nop
    eef0:	f3 0f 1e fa          	endbr64 
    eef4:	68 5e 00 00 00       	pushq  $0x5e
    eef9:	f2 e9 01 fa ff ff    	bnd jmpq e900 <.plt>
    eeff:	90                   	nop
    ef00:	f3 0f 1e fa          	endbr64 
    ef04:	68 5f 00 00 00       	pushq  $0x5f
    ef09:	f2 e9 f1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef0f:	90                   	nop
    ef10:	f3 0f 1e fa          	endbr64 
    ef14:	68 60 00 00 00       	pushq  $0x60
    ef19:	f2 e9 e1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef1f:	90                   	nop
    ef20:	f3 0f 1e fa          	endbr64 
    ef24:	68 61 00 00 00       	pushq  $0x61
    ef29:	f2 e9 d1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef2f:	90                   	nop
    ef30:	f3 0f 1e fa          	endbr64 
    ef34:	68 62 00 00 00       	pushq  $0x62
    ef39:	f2 e9 c1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef3f:	90                   	nop
    ef40:	f3 0f 1e fa          	endbr64 
    ef44:	68 63 00 00 00       	pushq  $0x63
    ef49:	f2 e9 b1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef4f:	90                   	nop
    ef50:	f3 0f 1e fa          	endbr64 
    ef54:	68 64 00 00 00       	pushq  $0x64
    ef59:	f2 e9 a1 f9 ff ff    	bnd jmpq e900 <.plt>
    ef5f:	90                   	nop
    ef60:	f3 0f 1e fa          	endbr64 
    ef64:	68 65 00 00 00       	pushq  $0x65
    ef69:	f2 e9 91 f9 ff ff    	bnd jmpq e900 <.plt>
    ef6f:	90                   	nop
    ef70:	f3 0f 1e fa          	endbr64 
    ef74:	68 66 00 00 00       	pushq  $0x66
    ef79:	f2 e9 81 f9 ff ff    	bnd jmpq e900 <.plt>
    ef7f:	90                   	nop
    ef80:	f3 0f 1e fa          	endbr64 
    ef84:	68 67 00 00 00       	pushq  $0x67
    ef89:	f2 e9 71 f9 ff ff    	bnd jmpq e900 <.plt>
    ef8f:	90                   	nop
    ef90:	f3 0f 1e fa          	endbr64 
    ef94:	68 68 00 00 00       	pushq  $0x68
    ef99:	f2 e9 61 f9 ff ff    	bnd jmpq e900 <.plt>
    ef9f:	90                   	nop
    efa0:	f3 0f 1e fa          	endbr64 
    efa4:	68 69 00 00 00       	pushq  $0x69
    efa9:	f2 e9 51 f9 ff ff    	bnd jmpq e900 <.plt>
    efaf:	90                   	nop
    efb0:	f3 0f 1e fa          	endbr64 
    efb4:	68 6a 00 00 00       	pushq  $0x6a
    efb9:	f2 e9 41 f9 ff ff    	bnd jmpq e900 <.plt>
    efbf:	90                   	nop
    efc0:	f3 0f 1e fa          	endbr64 
    efc4:	68 6b 00 00 00       	pushq  $0x6b
    efc9:	f2 e9 31 f9 ff ff    	bnd jmpq e900 <.plt>
    efcf:	90                   	nop
    efd0:	f3 0f 1e fa          	endbr64 
    efd4:	68 6c 00 00 00       	pushq  $0x6c
    efd9:	f2 e9 21 f9 ff ff    	bnd jmpq e900 <.plt>
    efdf:	90                   	nop
    efe0:	f3 0f 1e fa          	endbr64 
    efe4:	68 6d 00 00 00       	pushq  $0x6d
    efe9:	f2 e9 11 f9 ff ff    	bnd jmpq e900 <.plt>
    efef:	90                   	nop
    eff0:	f3 0f 1e fa          	endbr64 
    eff4:	68 6e 00 00 00       	pushq  $0x6e
    eff9:	f2 e9 01 f9 ff ff    	bnd jmpq e900 <.plt>
    efff:	90                   	nop
    f000:	f3 0f 1e fa          	endbr64 
    f004:	68 6f 00 00 00       	pushq  $0x6f
    f009:	f2 e9 f1 f8 ff ff    	bnd jmpq e900 <.plt>
    f00f:	90                   	nop
    f010:	f3 0f 1e fa          	endbr64 
    f014:	68 70 00 00 00       	pushq  $0x70
    f019:	f2 e9 e1 f8 ff ff    	bnd jmpq e900 <.plt>
    f01f:	90                   	nop
    f020:	f3 0f 1e fa          	endbr64 
    f024:	68 71 00 00 00       	pushq  $0x71
    f029:	f2 e9 d1 f8 ff ff    	bnd jmpq e900 <.plt>
    f02f:	90                   	nop
    f030:	f3 0f 1e fa          	endbr64 
    f034:	68 72 00 00 00       	pushq  $0x72
    f039:	f2 e9 c1 f8 ff ff    	bnd jmpq e900 <.plt>
    f03f:	90                   	nop
    f040:	f3 0f 1e fa          	endbr64 
    f044:	68 73 00 00 00       	pushq  $0x73
    f049:	f2 e9 b1 f8 ff ff    	bnd jmpq e900 <.plt>
    f04f:	90                   	nop
    f050:	f3 0f 1e fa          	endbr64 
    f054:	68 74 00 00 00       	pushq  $0x74
    f059:	f2 e9 a1 f8 ff ff    	bnd jmpq e900 <.plt>
    f05f:	90                   	nop
    f060:	f3 0f 1e fa          	endbr64 
    f064:	68 75 00 00 00       	pushq  $0x75
    f069:	f2 e9 91 f8 ff ff    	bnd jmpq e900 <.plt>
    f06f:	90                   	nop
    f070:	f3 0f 1e fa          	endbr64 
    f074:	68 76 00 00 00       	pushq  $0x76
    f079:	f2 e9 81 f8 ff ff    	bnd jmpq e900 <.plt>
    f07f:	90                   	nop
    f080:	f3 0f 1e fa          	endbr64 
    f084:	68 77 00 00 00       	pushq  $0x77
    f089:	f2 e9 71 f8 ff ff    	bnd jmpq e900 <.plt>
    f08f:	90                   	nop
    f090:	f3 0f 1e fa          	endbr64 
    f094:	68 78 00 00 00       	pushq  $0x78
    f099:	f2 e9 61 f8 ff ff    	bnd jmpq e900 <.plt>
    f09f:	90                   	nop
    f0a0:	f3 0f 1e fa          	endbr64 
    f0a4:	68 79 00 00 00       	pushq  $0x79
    f0a9:	f2 e9 51 f8 ff ff    	bnd jmpq e900 <.plt>
    f0af:	90                   	nop
    f0b0:	f3 0f 1e fa          	endbr64 
    f0b4:	68 7a 00 00 00       	pushq  $0x7a
    f0b9:	f2 e9 41 f8 ff ff    	bnd jmpq e900 <.plt>
    f0bf:	90                   	nop
    f0c0:	f3 0f 1e fa          	endbr64 
    f0c4:	68 7b 00 00 00       	pushq  $0x7b
    f0c9:	f2 e9 31 f8 ff ff    	bnd jmpq e900 <.plt>
    f0cf:	90                   	nop
    f0d0:	f3 0f 1e fa          	endbr64 
    f0d4:	68 7c 00 00 00       	pushq  $0x7c
    f0d9:	f2 e9 21 f8 ff ff    	bnd jmpq e900 <.plt>
    f0df:	90                   	nop
    f0e0:	f3 0f 1e fa          	endbr64 
    f0e4:	68 7d 00 00 00       	pushq  $0x7d
    f0e9:	f2 e9 11 f8 ff ff    	bnd jmpq e900 <.plt>
    f0ef:	90                   	nop
    f0f0:	f3 0f 1e fa          	endbr64 
    f0f4:	68 7e 00 00 00       	pushq  $0x7e
    f0f9:	f2 e9 01 f8 ff ff    	bnd jmpq e900 <.plt>
    f0ff:	90                   	nop
    f100:	f3 0f 1e fa          	endbr64 
    f104:	68 7f 00 00 00       	pushq  $0x7f
    f109:	f2 e9 f1 f7 ff ff    	bnd jmpq e900 <.plt>
    f10f:	90                   	nop
    f110:	f3 0f 1e fa          	endbr64 
    f114:	68 80 00 00 00       	pushq  $0x80
    f119:	f2 e9 e1 f7 ff ff    	bnd jmpq e900 <.plt>
    f11f:	90                   	nop
    f120:	f3 0f 1e fa          	endbr64 
    f124:	68 81 00 00 00       	pushq  $0x81
    f129:	f2 e9 d1 f7 ff ff    	bnd jmpq e900 <.plt>
    f12f:	90                   	nop
    f130:	f3 0f 1e fa          	endbr64 
    f134:	68 82 00 00 00       	pushq  $0x82
    f139:	f2 e9 c1 f7 ff ff    	bnd jmpq e900 <.plt>
    f13f:	90                   	nop
    f140:	f3 0f 1e fa          	endbr64 
    f144:	68 83 00 00 00       	pushq  $0x83
    f149:	f2 e9 b1 f7 ff ff    	bnd jmpq e900 <.plt>
    f14f:	90                   	nop
    f150:	f3 0f 1e fa          	endbr64 
    f154:	68 84 00 00 00       	pushq  $0x84
    f159:	f2 e9 a1 f7 ff ff    	bnd jmpq e900 <.plt>
    f15f:	90                   	nop
    f160:	f3 0f 1e fa          	endbr64 
    f164:	68 85 00 00 00       	pushq  $0x85
    f169:	f2 e9 91 f7 ff ff    	bnd jmpq e900 <.plt>
    f16f:	90                   	nop
    f170:	f3 0f 1e fa          	endbr64 
    f174:	68 86 00 00 00       	pushq  $0x86
    f179:	f2 e9 81 f7 ff ff    	bnd jmpq e900 <.plt>
    f17f:	90                   	nop
    f180:	f3 0f 1e fa          	endbr64 
    f184:	68 87 00 00 00       	pushq  $0x87
    f189:	f2 e9 71 f7 ff ff    	bnd jmpq e900 <.plt>
    f18f:	90                   	nop
    f190:	f3 0f 1e fa          	endbr64 
    f194:	68 88 00 00 00       	pushq  $0x88
    f199:	f2 e9 61 f7 ff ff    	bnd jmpq e900 <.plt>
    f19f:	90                   	nop
    f1a0:	f3 0f 1e fa          	endbr64 
    f1a4:	68 89 00 00 00       	pushq  $0x89
    f1a9:	f2 e9 51 f7 ff ff    	bnd jmpq e900 <.plt>
    f1af:	90                   	nop
    f1b0:	f3 0f 1e fa          	endbr64 
    f1b4:	68 8a 00 00 00       	pushq  $0x8a
    f1b9:	f2 e9 41 f7 ff ff    	bnd jmpq e900 <.plt>
    f1bf:	90                   	nop
    f1c0:	f3 0f 1e fa          	endbr64 
    f1c4:	68 8b 00 00 00       	pushq  $0x8b
    f1c9:	f2 e9 31 f7 ff ff    	bnd jmpq e900 <.plt>
    f1cf:	90                   	nop
    f1d0:	f3 0f 1e fa          	endbr64 
    f1d4:	68 8c 00 00 00       	pushq  $0x8c
    f1d9:	f2 e9 21 f7 ff ff    	bnd jmpq e900 <.plt>
    f1df:	90                   	nop
    f1e0:	f3 0f 1e fa          	endbr64 
    f1e4:	68 8d 00 00 00       	pushq  $0x8d
    f1e9:	f2 e9 11 f7 ff ff    	bnd jmpq e900 <.plt>
    f1ef:	90                   	nop
    f1f0:	f3 0f 1e fa          	endbr64 
    f1f4:	68 8e 00 00 00       	pushq  $0x8e
    f1f9:	f2 e9 01 f7 ff ff    	bnd jmpq e900 <.plt>
    f1ff:	90                   	nop
    f200:	f3 0f 1e fa          	endbr64 
    f204:	68 8f 00 00 00       	pushq  $0x8f
    f209:	f2 e9 f1 f6 ff ff    	bnd jmpq e900 <.plt>
    f20f:	90                   	nop
    f210:	f3 0f 1e fa          	endbr64 
    f214:	68 90 00 00 00       	pushq  $0x90
    f219:	f2 e9 e1 f6 ff ff    	bnd jmpq e900 <.plt>
    f21f:	90                   	nop
    f220:	f3 0f 1e fa          	endbr64 
    f224:	68 91 00 00 00       	pushq  $0x91
    f229:	f2 e9 d1 f6 ff ff    	bnd jmpq e900 <.plt>
    f22f:	90                   	nop
    f230:	f3 0f 1e fa          	endbr64 
    f234:	68 92 00 00 00       	pushq  $0x92
    f239:	f2 e9 c1 f6 ff ff    	bnd jmpq e900 <.plt>
    f23f:	90                   	nop
    f240:	f3 0f 1e fa          	endbr64 
    f244:	68 93 00 00 00       	pushq  $0x93
    f249:	f2 e9 b1 f6 ff ff    	bnd jmpq e900 <.plt>
    f24f:	90                   	nop
    f250:	f3 0f 1e fa          	endbr64 
    f254:	68 94 00 00 00       	pushq  $0x94
    f259:	f2 e9 a1 f6 ff ff    	bnd jmpq e900 <.plt>
    f25f:	90                   	nop
    f260:	f3 0f 1e fa          	endbr64 
    f264:	68 95 00 00 00       	pushq  $0x95
    f269:	f2 e9 91 f6 ff ff    	bnd jmpq e900 <.plt>
    f26f:	90                   	nop
    f270:	f3 0f 1e fa          	endbr64 
    f274:	68 96 00 00 00       	pushq  $0x96
    f279:	f2 e9 81 f6 ff ff    	bnd jmpq e900 <.plt>
    f27f:	90                   	nop
    f280:	f3 0f 1e fa          	endbr64 
    f284:	68 97 00 00 00       	pushq  $0x97
    f289:	f2 e9 71 f6 ff ff    	bnd jmpq e900 <.plt>
    f28f:	90                   	nop
    f290:	f3 0f 1e fa          	endbr64 
    f294:	68 98 00 00 00       	pushq  $0x98
    f299:	f2 e9 61 f6 ff ff    	bnd jmpq e900 <.plt>
    f29f:	90                   	nop
    f2a0:	f3 0f 1e fa          	endbr64 
    f2a4:	68 99 00 00 00       	pushq  $0x99
    f2a9:	f2 e9 51 f6 ff ff    	bnd jmpq e900 <.plt>
    f2af:	90                   	nop
    f2b0:	f3 0f 1e fa          	endbr64 
    f2b4:	68 9a 00 00 00       	pushq  $0x9a
    f2b9:	f2 e9 41 f6 ff ff    	bnd jmpq e900 <.plt>
    f2bf:	90                   	nop
    f2c0:	f3 0f 1e fa          	endbr64 
    f2c4:	68 9b 00 00 00       	pushq  $0x9b
    f2c9:	f2 e9 31 f6 ff ff    	bnd jmpq e900 <.plt>
    f2cf:	90                   	nop
    f2d0:	f3 0f 1e fa          	endbr64 
    f2d4:	68 9c 00 00 00       	pushq  $0x9c
    f2d9:	f2 e9 21 f6 ff ff    	bnd jmpq e900 <.plt>
    f2df:	90                   	nop
    f2e0:	f3 0f 1e fa          	endbr64 
    f2e4:	68 9d 00 00 00       	pushq  $0x9d
    f2e9:	f2 e9 11 f6 ff ff    	bnd jmpq e900 <.plt>
    f2ef:	90                   	nop
    f2f0:	f3 0f 1e fa          	endbr64 
    f2f4:	68 9e 00 00 00       	pushq  $0x9e
    f2f9:	f2 e9 01 f6 ff ff    	bnd jmpq e900 <.plt>
    f2ff:	90                   	nop
    f300:	f3 0f 1e fa          	endbr64 
    f304:	68 9f 00 00 00       	pushq  $0x9f
    f309:	f2 e9 f1 f5 ff ff    	bnd jmpq e900 <.plt>
    f30f:	90                   	nop
    f310:	f3 0f 1e fa          	endbr64 
    f314:	68 a0 00 00 00       	pushq  $0xa0
    f319:	f2 e9 e1 f5 ff ff    	bnd jmpq e900 <.plt>
    f31f:	90                   	nop
    f320:	f3 0f 1e fa          	endbr64 
    f324:	68 a1 00 00 00       	pushq  $0xa1
    f329:	f2 e9 d1 f5 ff ff    	bnd jmpq e900 <.plt>
    f32f:	90                   	nop
    f330:	f3 0f 1e fa          	endbr64 
    f334:	68 a2 00 00 00       	pushq  $0xa2
    f339:	f2 e9 c1 f5 ff ff    	bnd jmpq e900 <.plt>
    f33f:	90                   	nop
    f340:	f3 0f 1e fa          	endbr64 
    f344:	68 a3 00 00 00       	pushq  $0xa3
    f349:	f2 e9 b1 f5 ff ff    	bnd jmpq e900 <.plt>
    f34f:	90                   	nop
    f350:	f3 0f 1e fa          	endbr64 
    f354:	68 a4 00 00 00       	pushq  $0xa4
    f359:	f2 e9 a1 f5 ff ff    	bnd jmpq e900 <.plt>
    f35f:	90                   	nop
    f360:	f3 0f 1e fa          	endbr64 
    f364:	68 a5 00 00 00       	pushq  $0xa5
    f369:	f2 e9 91 f5 ff ff    	bnd jmpq e900 <.plt>
    f36f:	90                   	nop
    f370:	f3 0f 1e fa          	endbr64 
    f374:	68 a6 00 00 00       	pushq  $0xa6
    f379:	f2 e9 81 f5 ff ff    	bnd jmpq e900 <.plt>
    f37f:	90                   	nop
    f380:	f3 0f 1e fa          	endbr64 
    f384:	68 a7 00 00 00       	pushq  $0xa7
    f389:	f2 e9 71 f5 ff ff    	bnd jmpq e900 <.plt>
    f38f:	90                   	nop
    f390:	f3 0f 1e fa          	endbr64 
    f394:	68 a8 00 00 00       	pushq  $0xa8
    f399:	f2 e9 61 f5 ff ff    	bnd jmpq e900 <.plt>
    f39f:	90                   	nop
    f3a0:	f3 0f 1e fa          	endbr64 
    f3a4:	68 a9 00 00 00       	pushq  $0xa9
    f3a9:	f2 e9 51 f5 ff ff    	bnd jmpq e900 <.plt>
    f3af:	90                   	nop
    f3b0:	f3 0f 1e fa          	endbr64 
    f3b4:	68 aa 00 00 00       	pushq  $0xaa
    f3b9:	f2 e9 41 f5 ff ff    	bnd jmpq e900 <.plt>
    f3bf:	90                   	nop
    f3c0:	f3 0f 1e fa          	endbr64 
    f3c4:	68 ab 00 00 00       	pushq  $0xab
    f3c9:	f2 e9 31 f5 ff ff    	bnd jmpq e900 <.plt>
    f3cf:	90                   	nop
    f3d0:	f3 0f 1e fa          	endbr64 
    f3d4:	68 ac 00 00 00       	pushq  $0xac
    f3d9:	f2 e9 21 f5 ff ff    	bnd jmpq e900 <.plt>
    f3df:	90                   	nop
    f3e0:	f3 0f 1e fa          	endbr64 
    f3e4:	68 ad 00 00 00       	pushq  $0xad
    f3e9:	f2 e9 11 f5 ff ff    	bnd jmpq e900 <.plt>
    f3ef:	90                   	nop
    f3f0:	f3 0f 1e fa          	endbr64 
    f3f4:	68 ae 00 00 00       	pushq  $0xae
    f3f9:	f2 e9 01 f5 ff ff    	bnd jmpq e900 <.plt>
    f3ff:	90                   	nop
    f400:	f3 0f 1e fa          	endbr64 
    f404:	68 af 00 00 00       	pushq  $0xaf
    f409:	f2 e9 f1 f4 ff ff    	bnd jmpq e900 <.plt>
    f40f:	90                   	nop
    f410:	f3 0f 1e fa          	endbr64 
    f414:	68 b0 00 00 00       	pushq  $0xb0
    f419:	f2 e9 e1 f4 ff ff    	bnd jmpq e900 <.plt>
    f41f:	90                   	nop
    f420:	f3 0f 1e fa          	endbr64 
    f424:	68 b1 00 00 00       	pushq  $0xb1
    f429:	f2 e9 d1 f4 ff ff    	bnd jmpq e900 <.plt>
    f42f:	90                   	nop
    f430:	f3 0f 1e fa          	endbr64 
    f434:	68 b2 00 00 00       	pushq  $0xb2
    f439:	f2 e9 c1 f4 ff ff    	bnd jmpq e900 <.plt>
    f43f:	90                   	nop
    f440:	f3 0f 1e fa          	endbr64 
    f444:	68 b3 00 00 00       	pushq  $0xb3
    f449:	f2 e9 b1 f4 ff ff    	bnd jmpq e900 <.plt>
    f44f:	90                   	nop
    f450:	f3 0f 1e fa          	endbr64 
    f454:	68 b4 00 00 00       	pushq  $0xb4
    f459:	f2 e9 a1 f4 ff ff    	bnd jmpq e900 <.plt>
    f45f:	90                   	nop
    f460:	f3 0f 1e fa          	endbr64 
    f464:	68 b5 00 00 00       	pushq  $0xb5
    f469:	f2 e9 91 f4 ff ff    	bnd jmpq e900 <.plt>
    f46f:	90                   	nop
    f470:	f3 0f 1e fa          	endbr64 
    f474:	68 b6 00 00 00       	pushq  $0xb6
    f479:	f2 e9 81 f4 ff ff    	bnd jmpq e900 <.plt>
    f47f:	90                   	nop
    f480:	f3 0f 1e fa          	endbr64 
    f484:	68 b7 00 00 00       	pushq  $0xb7
    f489:	f2 e9 71 f4 ff ff    	bnd jmpq e900 <.plt>
    f48f:	90                   	nop
    f490:	f3 0f 1e fa          	endbr64 
    f494:	68 b8 00 00 00       	pushq  $0xb8
    f499:	f2 e9 61 f4 ff ff    	bnd jmpq e900 <.plt>
    f49f:	90                   	nop
    f4a0:	f3 0f 1e fa          	endbr64 
    f4a4:	68 b9 00 00 00       	pushq  $0xb9
    f4a9:	f2 e9 51 f4 ff ff    	bnd jmpq e900 <.plt>
    f4af:	90                   	nop
    f4b0:	f3 0f 1e fa          	endbr64 
    f4b4:	68 ba 00 00 00       	pushq  $0xba
    f4b9:	f2 e9 41 f4 ff ff    	bnd jmpq e900 <.plt>
    f4bf:	90                   	nop
    f4c0:	f3 0f 1e fa          	endbr64 
    f4c4:	68 bb 00 00 00       	pushq  $0xbb
    f4c9:	f2 e9 31 f4 ff ff    	bnd jmpq e900 <.plt>
    f4cf:	90                   	nop
    f4d0:	f3 0f 1e fa          	endbr64 
    f4d4:	68 bc 00 00 00       	pushq  $0xbc
    f4d9:	f2 e9 21 f4 ff ff    	bnd jmpq e900 <.plt>
    f4df:	90                   	nop
    f4e0:	f3 0f 1e fa          	endbr64 
    f4e4:	68 bd 00 00 00       	pushq  $0xbd
    f4e9:	f2 e9 11 f4 ff ff    	bnd jmpq e900 <.plt>
    f4ef:	90                   	nop
    f4f0:	f3 0f 1e fa          	endbr64 
    f4f4:	68 be 00 00 00       	pushq  $0xbe
    f4f9:	f2 e9 01 f4 ff ff    	bnd jmpq e900 <.plt>
    f4ff:	90                   	nop
    f500:	f3 0f 1e fa          	endbr64 
    f504:	68 bf 00 00 00       	pushq  $0xbf
    f509:	f2 e9 f1 f3 ff ff    	bnd jmpq e900 <.plt>
    f50f:	90                   	nop
    f510:	f3 0f 1e fa          	endbr64 
    f514:	68 c0 00 00 00       	pushq  $0xc0
    f519:	f2 e9 e1 f3 ff ff    	bnd jmpq e900 <.plt>
    f51f:	90                   	nop
    f520:	f3 0f 1e fa          	endbr64 
    f524:	68 c1 00 00 00       	pushq  $0xc1
    f529:	f2 e9 d1 f3 ff ff    	bnd jmpq e900 <.plt>
    f52f:	90                   	nop
    f530:	f3 0f 1e fa          	endbr64 
    f534:	68 c2 00 00 00       	pushq  $0xc2
    f539:	f2 e9 c1 f3 ff ff    	bnd jmpq e900 <.plt>
    f53f:	90                   	nop
    f540:	f3 0f 1e fa          	endbr64 
    f544:	68 c3 00 00 00       	pushq  $0xc3
    f549:	f2 e9 b1 f3 ff ff    	bnd jmpq e900 <.plt>
    f54f:	90                   	nop
    f550:	f3 0f 1e fa          	endbr64 
    f554:	68 c4 00 00 00       	pushq  $0xc4
    f559:	f2 e9 a1 f3 ff ff    	bnd jmpq e900 <.plt>
    f55f:	90                   	nop
    f560:	f3 0f 1e fa          	endbr64 
    f564:	68 c5 00 00 00       	pushq  $0xc5
    f569:	f2 e9 91 f3 ff ff    	bnd jmpq e900 <.plt>
    f56f:	90                   	nop
    f570:	f3 0f 1e fa          	endbr64 
    f574:	68 c6 00 00 00       	pushq  $0xc6
    f579:	f2 e9 81 f3 ff ff    	bnd jmpq e900 <.plt>
    f57f:	90                   	nop
    f580:	f3 0f 1e fa          	endbr64 
    f584:	68 c7 00 00 00       	pushq  $0xc7
    f589:	f2 e9 71 f3 ff ff    	bnd jmpq e900 <.plt>
    f58f:	90                   	nop
    f590:	f3 0f 1e fa          	endbr64 
    f594:	68 c8 00 00 00       	pushq  $0xc8
    f599:	f2 e9 61 f3 ff ff    	bnd jmpq e900 <.plt>
    f59f:	90                   	nop
    f5a0:	f3 0f 1e fa          	endbr64 
    f5a4:	68 c9 00 00 00       	pushq  $0xc9
    f5a9:	f2 e9 51 f3 ff ff    	bnd jmpq e900 <.plt>
    f5af:	90                   	nop
    f5b0:	f3 0f 1e fa          	endbr64 
    f5b4:	68 ca 00 00 00       	pushq  $0xca
    f5b9:	f2 e9 41 f3 ff ff    	bnd jmpq e900 <.plt>
    f5bf:	90                   	nop
    f5c0:	f3 0f 1e fa          	endbr64 
    f5c4:	68 cb 00 00 00       	pushq  $0xcb
    f5c9:	f2 e9 31 f3 ff ff    	bnd jmpq e900 <.plt>
    f5cf:	90                   	nop
    f5d0:	f3 0f 1e fa          	endbr64 
    f5d4:	68 cc 00 00 00       	pushq  $0xcc
    f5d9:	f2 e9 21 f3 ff ff    	bnd jmpq e900 <.plt>
    f5df:	90                   	nop
    f5e0:	f3 0f 1e fa          	endbr64 
    f5e4:	68 cd 00 00 00       	pushq  $0xcd
    f5e9:	f2 e9 11 f3 ff ff    	bnd jmpq e900 <.plt>
    f5ef:	90                   	nop
    f5f0:	f3 0f 1e fa          	endbr64 
    f5f4:	68 ce 00 00 00       	pushq  $0xce
    f5f9:	f2 e9 01 f3 ff ff    	bnd jmpq e900 <.plt>
    f5ff:	90                   	nop
    f600:	f3 0f 1e fa          	endbr64 
    f604:	68 cf 00 00 00       	pushq  $0xcf
    f609:	f2 e9 f1 f2 ff ff    	bnd jmpq e900 <.plt>
    f60f:	90                   	nop
    f610:	f3 0f 1e fa          	endbr64 
    f614:	68 d0 00 00 00       	pushq  $0xd0
    f619:	f2 e9 e1 f2 ff ff    	bnd jmpq e900 <.plt>
    f61f:	90                   	nop
    f620:	f3 0f 1e fa          	endbr64 
    f624:	68 d1 00 00 00       	pushq  $0xd1
    f629:	f2 e9 d1 f2 ff ff    	bnd jmpq e900 <.plt>
    f62f:	90                   	nop
    f630:	f3 0f 1e fa          	endbr64 
    f634:	68 d2 00 00 00       	pushq  $0xd2
    f639:	f2 e9 c1 f2 ff ff    	bnd jmpq e900 <.plt>
    f63f:	90                   	nop
    f640:	f3 0f 1e fa          	endbr64 
    f644:	68 d3 00 00 00       	pushq  $0xd3
    f649:	f2 e9 b1 f2 ff ff    	bnd jmpq e900 <.plt>
    f64f:	90                   	nop
    f650:	f3 0f 1e fa          	endbr64 
    f654:	68 d4 00 00 00       	pushq  $0xd4
    f659:	f2 e9 a1 f2 ff ff    	bnd jmpq e900 <.plt>
    f65f:	90                   	nop
    f660:	f3 0f 1e fa          	endbr64 
    f664:	68 d5 00 00 00       	pushq  $0xd5
    f669:	f2 e9 91 f2 ff ff    	bnd jmpq e900 <.plt>
    f66f:	90                   	nop
    f670:	f3 0f 1e fa          	endbr64 
    f674:	68 d6 00 00 00       	pushq  $0xd6
    f679:	f2 e9 81 f2 ff ff    	bnd jmpq e900 <.plt>
    f67f:	90                   	nop
    f680:	f3 0f 1e fa          	endbr64 
    f684:	68 d7 00 00 00       	pushq  $0xd7
    f689:	f2 e9 71 f2 ff ff    	bnd jmpq e900 <.plt>
    f68f:	90                   	nop
    f690:	f3 0f 1e fa          	endbr64 
    f694:	68 d8 00 00 00       	pushq  $0xd8
    f699:	f2 e9 61 f2 ff ff    	bnd jmpq e900 <.plt>
    f69f:	90                   	nop
    f6a0:	f3 0f 1e fa          	endbr64 
    f6a4:	68 d9 00 00 00       	pushq  $0xd9
    f6a9:	f2 e9 51 f2 ff ff    	bnd jmpq e900 <.plt>
    f6af:	90                   	nop
    f6b0:	f3 0f 1e fa          	endbr64 
    f6b4:	68 da 00 00 00       	pushq  $0xda
    f6b9:	f2 e9 41 f2 ff ff    	bnd jmpq e900 <.plt>
    f6bf:	90                   	nop
    f6c0:	f3 0f 1e fa          	endbr64 
    f6c4:	68 db 00 00 00       	pushq  $0xdb
    f6c9:	f2 e9 31 f2 ff ff    	bnd jmpq e900 <.plt>
    f6cf:	90                   	nop
    f6d0:	f3 0f 1e fa          	endbr64 
    f6d4:	68 dc 00 00 00       	pushq  $0xdc
    f6d9:	f2 e9 21 f2 ff ff    	bnd jmpq e900 <.plt>
    f6df:	90                   	nop
    f6e0:	f3 0f 1e fa          	endbr64 
    f6e4:	68 dd 00 00 00       	pushq  $0xdd
    f6e9:	f2 e9 11 f2 ff ff    	bnd jmpq e900 <.plt>
    f6ef:	90                   	nop
    f6f0:	f3 0f 1e fa          	endbr64 
    f6f4:	68 de 00 00 00       	pushq  $0xde
    f6f9:	f2 e9 01 f2 ff ff    	bnd jmpq e900 <.plt>
    f6ff:	90                   	nop
    f700:	f3 0f 1e fa          	endbr64 
    f704:	68 df 00 00 00       	pushq  $0xdf
    f709:	f2 e9 f1 f1 ff ff    	bnd jmpq e900 <.plt>
    f70f:	90                   	nop
    f710:	f3 0f 1e fa          	endbr64 
    f714:	68 e0 00 00 00       	pushq  $0xe0
    f719:	f2 e9 e1 f1 ff ff    	bnd jmpq e900 <.plt>
    f71f:	90                   	nop
    f720:	f3 0f 1e fa          	endbr64 
    f724:	68 e1 00 00 00       	pushq  $0xe1
    f729:	f2 e9 d1 f1 ff ff    	bnd jmpq e900 <.plt>
    f72f:	90                   	nop
    f730:	f3 0f 1e fa          	endbr64 
    f734:	68 e2 00 00 00       	pushq  $0xe2
    f739:	f2 e9 c1 f1 ff ff    	bnd jmpq e900 <.plt>
    f73f:	90                   	nop
    f740:	f3 0f 1e fa          	endbr64 
    f744:	68 e3 00 00 00       	pushq  $0xe3
    f749:	f2 e9 b1 f1 ff ff    	bnd jmpq e900 <.plt>
    f74f:	90                   	nop
    f750:	f3 0f 1e fa          	endbr64 
    f754:	68 e4 00 00 00       	pushq  $0xe4
    f759:	f2 e9 a1 f1 ff ff    	bnd jmpq e900 <.plt>
    f75f:	90                   	nop
    f760:	f3 0f 1e fa          	endbr64 
    f764:	68 e5 00 00 00       	pushq  $0xe5
    f769:	f2 e9 91 f1 ff ff    	bnd jmpq e900 <.plt>
    f76f:	90                   	nop
    f770:	f3 0f 1e fa          	endbr64 
    f774:	68 e6 00 00 00       	pushq  $0xe6
    f779:	f2 e9 81 f1 ff ff    	bnd jmpq e900 <.plt>
    f77f:	90                   	nop
    f780:	f3 0f 1e fa          	endbr64 
    f784:	68 e7 00 00 00       	pushq  $0xe7
    f789:	f2 e9 71 f1 ff ff    	bnd jmpq e900 <.plt>
    f78f:	90                   	nop
    f790:	f3 0f 1e fa          	endbr64 
    f794:	68 e8 00 00 00       	pushq  $0xe8
    f799:	f2 e9 61 f1 ff ff    	bnd jmpq e900 <.plt>
    f79f:	90                   	nop
    f7a0:	f3 0f 1e fa          	endbr64 
    f7a4:	68 e9 00 00 00       	pushq  $0xe9
    f7a9:	f2 e9 51 f1 ff ff    	bnd jmpq e900 <.plt>
    f7af:	90                   	nop
    f7b0:	f3 0f 1e fa          	endbr64 
    f7b4:	68 ea 00 00 00       	pushq  $0xea
    f7b9:	f2 e9 41 f1 ff ff    	bnd jmpq e900 <.plt>
    f7bf:	90                   	nop
    f7c0:	f3 0f 1e fa          	endbr64 
    f7c4:	68 eb 00 00 00       	pushq  $0xeb
    f7c9:	f2 e9 31 f1 ff ff    	bnd jmpq e900 <.plt>
    f7cf:	90                   	nop
    f7d0:	f3 0f 1e fa          	endbr64 
    f7d4:	68 ec 00 00 00       	pushq  $0xec
    f7d9:	f2 e9 21 f1 ff ff    	bnd jmpq e900 <.plt>
    f7df:	90                   	nop
    f7e0:	f3 0f 1e fa          	endbr64 
    f7e4:	68 ed 00 00 00       	pushq  $0xed
    f7e9:	f2 e9 11 f1 ff ff    	bnd jmpq e900 <.plt>
    f7ef:	90                   	nop
    f7f0:	f3 0f 1e fa          	endbr64 
    f7f4:	68 ee 00 00 00       	pushq  $0xee
    f7f9:	f2 e9 01 f1 ff ff    	bnd jmpq e900 <.plt>
    f7ff:	90                   	nop
    f800:	f3 0f 1e fa          	endbr64 
    f804:	68 ef 00 00 00       	pushq  $0xef
    f809:	f2 e9 f1 f0 ff ff    	bnd jmpq e900 <.plt>
    f80f:	90                   	nop
    f810:	f3 0f 1e fa          	endbr64 
    f814:	68 f0 00 00 00       	pushq  $0xf0
    f819:	f2 e9 e1 f0 ff ff    	bnd jmpq e900 <.plt>
    f81f:	90                   	nop
    f820:	f3 0f 1e fa          	endbr64 
    f824:	68 f1 00 00 00       	pushq  $0xf1
    f829:	f2 e9 d1 f0 ff ff    	bnd jmpq e900 <.plt>
    f82f:	90                   	nop
    f830:	f3 0f 1e fa          	endbr64 
    f834:	68 f2 00 00 00       	pushq  $0xf2
    f839:	f2 e9 c1 f0 ff ff    	bnd jmpq e900 <.plt>
    f83f:	90                   	nop
    f840:	f3 0f 1e fa          	endbr64 
    f844:	68 f3 00 00 00       	pushq  $0xf3
    f849:	f2 e9 b1 f0 ff ff    	bnd jmpq e900 <.plt>
    f84f:	90                   	nop
    f850:	f3 0f 1e fa          	endbr64 
    f854:	68 f4 00 00 00       	pushq  $0xf4
    f859:	f2 e9 a1 f0 ff ff    	bnd jmpq e900 <.plt>
    f85f:	90                   	nop
    f860:	f3 0f 1e fa          	endbr64 
    f864:	68 f5 00 00 00       	pushq  $0xf5
    f869:	f2 e9 91 f0 ff ff    	bnd jmpq e900 <.plt>
    f86f:	90                   	nop
    f870:	f3 0f 1e fa          	endbr64 
    f874:	68 f6 00 00 00       	pushq  $0xf6
    f879:	f2 e9 81 f0 ff ff    	bnd jmpq e900 <.plt>
    f87f:	90                   	nop
    f880:	f3 0f 1e fa          	endbr64 
    f884:	68 f7 00 00 00       	pushq  $0xf7
    f889:	f2 e9 71 f0 ff ff    	bnd jmpq e900 <.plt>
    f88f:	90                   	nop
    f890:	f3 0f 1e fa          	endbr64 
    f894:	68 f8 00 00 00       	pushq  $0xf8
    f899:	f2 e9 61 f0 ff ff    	bnd jmpq e900 <.plt>
    f89f:	90                   	nop
    f8a0:	f3 0f 1e fa          	endbr64 
    f8a4:	68 f9 00 00 00       	pushq  $0xf9
    f8a9:	f2 e9 51 f0 ff ff    	bnd jmpq e900 <.plt>
    f8af:	90                   	nop
    f8b0:	f3 0f 1e fa          	endbr64 
    f8b4:	68 fa 00 00 00       	pushq  $0xfa
    f8b9:	f2 e9 41 f0 ff ff    	bnd jmpq e900 <.plt>
    f8bf:	90                   	nop
    f8c0:	f3 0f 1e fa          	endbr64 
    f8c4:	68 fb 00 00 00       	pushq  $0xfb
    f8c9:	f2 e9 31 f0 ff ff    	bnd jmpq e900 <.plt>
    f8cf:	90                   	nop
    f8d0:	f3 0f 1e fa          	endbr64 
    f8d4:	68 fc 00 00 00       	pushq  $0xfc
    f8d9:	f2 e9 21 f0 ff ff    	bnd jmpq e900 <.plt>
    f8df:	90                   	nop
    f8e0:	f3 0f 1e fa          	endbr64 
    f8e4:	68 fd 00 00 00       	pushq  $0xfd
    f8e9:	f2 e9 11 f0 ff ff    	bnd jmpq e900 <.plt>
    f8ef:	90                   	nop
    f8f0:	f3 0f 1e fa          	endbr64 
    f8f4:	68 fe 00 00 00       	pushq  $0xfe
    f8f9:	f2 e9 01 f0 ff ff    	bnd jmpq e900 <.plt>
    f8ff:	90                   	nop
    f900:	f3 0f 1e fa          	endbr64 
    f904:	68 ff 00 00 00       	pushq  $0xff
    f909:	f2 e9 f1 ef ff ff    	bnd jmpq e900 <.plt>
    f90f:	90                   	nop
    f910:	f3 0f 1e fa          	endbr64 
    f914:	68 00 01 00 00       	pushq  $0x100
    f919:	f2 e9 e1 ef ff ff    	bnd jmpq e900 <.plt>
    f91f:	90                   	nop
    f920:	f3 0f 1e fa          	endbr64 
    f924:	68 01 01 00 00       	pushq  $0x101
    f929:	f2 e9 d1 ef ff ff    	bnd jmpq e900 <.plt>
    f92f:	90                   	nop
    f930:	f3 0f 1e fa          	endbr64 
    f934:	68 02 01 00 00       	pushq  $0x102
    f939:	f2 e9 c1 ef ff ff    	bnd jmpq e900 <.plt>
    f93f:	90                   	nop
    f940:	f3 0f 1e fa          	endbr64 
    f944:	68 03 01 00 00       	pushq  $0x103
    f949:	f2 e9 b1 ef ff ff    	bnd jmpq e900 <.plt>
    f94f:	90                   	nop
    f950:	f3 0f 1e fa          	endbr64 
    f954:	68 04 01 00 00       	pushq  $0x104
    f959:	f2 e9 a1 ef ff ff    	bnd jmpq e900 <.plt>
    f95f:	90                   	nop
    f960:	f3 0f 1e fa          	endbr64 
    f964:	68 05 01 00 00       	pushq  $0x105
    f969:	f2 e9 91 ef ff ff    	bnd jmpq e900 <.plt>
    f96f:	90                   	nop
    f970:	f3 0f 1e fa          	endbr64 
    f974:	68 06 01 00 00       	pushq  $0x106
    f979:	f2 e9 81 ef ff ff    	bnd jmpq e900 <.plt>
    f97f:	90                   	nop
    f980:	f3 0f 1e fa          	endbr64 
    f984:	68 07 01 00 00       	pushq  $0x107
    f989:	f2 e9 71 ef ff ff    	bnd jmpq e900 <.plt>
    f98f:	90                   	nop
    f990:	f3 0f 1e fa          	endbr64 
    f994:	68 08 01 00 00       	pushq  $0x108
    f999:	f2 e9 61 ef ff ff    	bnd jmpq e900 <.plt>
    f99f:	90                   	nop
    f9a0:	f3 0f 1e fa          	endbr64 
    f9a4:	68 09 01 00 00       	pushq  $0x109
    f9a9:	f2 e9 51 ef ff ff    	bnd jmpq e900 <.plt>
    f9af:	90                   	nop
    f9b0:	f3 0f 1e fa          	endbr64 
    f9b4:	68 0a 01 00 00       	pushq  $0x10a
    f9b9:	f2 e9 41 ef ff ff    	bnd jmpq e900 <.plt>
    f9bf:	90                   	nop
    f9c0:	f3 0f 1e fa          	endbr64 
    f9c4:	68 0b 01 00 00       	pushq  $0x10b
    f9c9:	f2 e9 31 ef ff ff    	bnd jmpq e900 <.plt>
    f9cf:	90                   	nop
    f9d0:	f3 0f 1e fa          	endbr64 
    f9d4:	68 0c 01 00 00       	pushq  $0x10c
    f9d9:	f2 e9 21 ef ff ff    	bnd jmpq e900 <.plt>
    f9df:	90                   	nop
    f9e0:	f3 0f 1e fa          	endbr64 
    f9e4:	68 0d 01 00 00       	pushq  $0x10d
    f9e9:	f2 e9 11 ef ff ff    	bnd jmpq e900 <.plt>
    f9ef:	90                   	nop
    f9f0:	f3 0f 1e fa          	endbr64 
    f9f4:	68 0e 01 00 00       	pushq  $0x10e
    f9f9:	f2 e9 01 ef ff ff    	bnd jmpq e900 <.plt>
    f9ff:	90                   	nop
    fa00:	f3 0f 1e fa          	endbr64 
    fa04:	68 0f 01 00 00       	pushq  $0x10f
    fa09:	f2 e9 f1 ee ff ff    	bnd jmpq e900 <.plt>
    fa0f:	90                   	nop
    fa10:	f3 0f 1e fa          	endbr64 
    fa14:	68 10 01 00 00       	pushq  $0x110
    fa19:	f2 e9 e1 ee ff ff    	bnd jmpq e900 <.plt>
    fa1f:	90                   	nop
    fa20:	f3 0f 1e fa          	endbr64 
    fa24:	68 11 01 00 00       	pushq  $0x111
    fa29:	f2 e9 d1 ee ff ff    	bnd jmpq e900 <.plt>
    fa2f:	90                   	nop
    fa30:	f3 0f 1e fa          	endbr64 
    fa34:	68 12 01 00 00       	pushq  $0x112
    fa39:	f2 e9 c1 ee ff ff    	bnd jmpq e900 <.plt>
    fa3f:	90                   	nop

Disassembly of section .plt.sec:

000000000000fa40 <__ctype_toupper_loc@plt>:
    fa40:	f3 0f 1e fa          	endbr64 
    fa44:	f2 ff 25 bd 2c 24 00 	bnd jmpq *0x242cbd(%rip)        # 252708 <__ctype_toupper_loc@GLIBC_2.3>
    fa4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa50 <getenv@plt>:
    fa50:	f3 0f 1e fa          	endbr64 
    fa54:	f2 ff 25 b5 2c 24 00 	bnd jmpq *0x242cb5(%rip)        # 252710 <getenv@GLIBC_2.2.5>
    fa5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa60 <json_true@plt>:
    fa60:	f3 0f 1e fa          	endbr64 
    fa64:	f2 ff 25 ad 2c 24 00 	bnd jmpq *0x242cad(%rip)        # 252718 <json_true@libjansson.so.4>
    fa6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa70 <flux_msg_route_delete_last@plt>:
    fa70:	f3 0f 1e fa          	endbr64 
    fa74:	f2 ff 25 a5 2c 24 00 	bnd jmpq *0x242ca5(%rip)        # 252720 <flux_msg_route_delete_last@Base>
    fa7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa80 <flux_msg_route_push@plt>:
    fa80:	f3 0f 1e fa          	endbr64 
    fa84:	f2 ff 25 9d 2c 24 00 	bnd jmpq *0x242c9d(%rip)        # 252728 <flux_msg_route_push@Base>
    fa8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa90 <sigprocmask@plt>:
    fa90:	f3 0f 1e fa          	endbr64 
    fa94:	f2 ff 25 95 2c 24 00 	bnd jmpq *0x242c95(%rip)        # 252730 <sigprocmask@GLIBC_2.2.5>
    fa9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000faa0 <__snprintf_chk@plt>:
    faa0:	f3 0f 1e fa          	endbr64 
    faa4:	f2 ff 25 8d 2c 24 00 	bnd jmpq *0x242c8d(%rip)        # 252738 <__snprintf_chk@GLIBC_2.3.4>
    faab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fab0 <free@plt>:
    fab0:	f3 0f 1e fa          	endbr64 
    fab4:	f2 ff 25 85 2c 24 00 	bnd jmpq *0x242c85(%rip)        # 252740 <free@GLIBC_2.2.5>
    fabb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fac0 <strcasecmp@plt>:
    fac0:	f3 0f 1e fa          	endbr64 
    fac4:	f2 ff 25 7d 2c 24 00 	bnd jmpq *0x242c7d(%rip)        # 252748 <strcasecmp@GLIBC_2.2.5>
    facb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fad0 <flux_watcher_start@plt>:
    fad0:	f3 0f 1e fa          	endbr64 
    fad4:	f2 ff 25 75 2c 24 00 	bnd jmpq *0x242c75(%rip)        # 252750 <flux_watcher_start@Base>
    fadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fae0 <flux_send@plt>:
    fae0:	f3 0f 1e fa          	endbr64 
    fae4:	f2 ff 25 6d 2c 24 00 	bnd jmpq *0x242c6d(%rip)        # 252758 <flux_send@Base>
    faeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000faf0 <abort@plt>:
    faf0:	f3 0f 1e fa          	endbr64 
    faf4:	f2 ff 25 65 2c 24 00 	bnd jmpq *0x242c65(%rip)        # 252760 <abort@GLIBC_2.2.5>
    fafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb00 <flux_future_wait_for@plt>:
    fb00:	f3 0f 1e fa          	endbr64 
    fb04:	f2 ff 25 5d 2c 24 00 	bnd jmpq *0x242c5d(%rip)        # 252768 <flux_future_wait_for@Base>
    fb0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb10 <__errno_location@plt>:
    fb10:	f3 0f 1e fa          	endbr64 
    fb14:	f2 ff 25 55 2c 24 00 	bnd jmpq *0x242c55(%rip)        # 252770 <__errno_location@GLIBC_2.2.5>
    fb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb20 <flux_handle_create@plt>:
    fb20:	f3 0f 1e fa          	endbr64 
    fb24:	f2 ff 25 4d 2c 24 00 	bnd jmpq *0x242c4d(%rip)        # 252778 <flux_handle_create@Base>
    fb2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb30 <unlink@plt>:
    fb30:	f3 0f 1e fa          	endbr64 
    fb34:	f2 ff 25 45 2c 24 00 	bnd jmpq *0x242c45(%rip)        # 252780 <unlink@GLIBC_2.2.5>
    fb3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb40 <uuid_unparse@plt>:
    fb40:	f3 0f 1e fa          	endbr64 
    fb44:	f2 ff 25 3d 2c 24 00 	bnd jmpq *0x242c3d(%rip)        # 252788 <uuid_unparse@UUID_1.0>
    fb4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb50 <open_memstream@plt>:
    fb50:	f3 0f 1e fa          	endbr64 
    fb54:	f2 ff 25 35 2c 24 00 	bnd jmpq *0x242c35(%rip)        # 252790 <open_memstream@GLIBC_2.2.5>
    fb5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb60 <strncpy@plt>:
    fb60:	f3 0f 1e fa          	endbr64 
    fb64:	f2 ff 25 2d 2c 24 00 	bnd jmpq *0x242c2d(%rip)        # 252798 <strncpy@GLIBC_2.2.5>
    fb6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb70 <flux_rpc_get_raw@plt>:
    fb70:	f3 0f 1e fa          	endbr64 
    fb74:	f2 ff 25 25 2c 24 00 	bnd jmpq *0x242c25(%rip)        # 2527a0 <flux_rpc_get_raw@Base>
    fb7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb80 <remove@plt>:
    fb80:	f3 0f 1e fa          	endbr64 
    fb84:	f2 ff 25 1d 2c 24 00 	bnd jmpq *0x242c1d(%rip)        # 2527a8 <remove@GLIBC_2.2.5>
    fb8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb90 <argz_create_sep@plt>:
    fb90:	f3 0f 1e fa          	endbr64 
    fb94:	f2 ff 25 15 2c 24 00 	bnd jmpq *0x242c15(%rip)        # 2527b0 <argz_create_sep@GLIBC_2.2.5>
    fb9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fba0 <flux_future_create@plt>:
    fba0:	f3 0f 1e fa          	endbr64 
    fba4:	f2 ff 25 0d 2c 24 00 	bnd jmpq *0x242c0d(%rip)        # 2527b8 <flux_future_create@Base>
    fbab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbb0 <strncmp@plt>:
    fbb0:	f3 0f 1e fa          	endbr64 
    fbb4:	f2 ff 25 05 2c 24 00 	bnd jmpq *0x242c05(%rip)        # 2527c0 <strncmp@GLIBC_2.2.5>
    fbbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbc0 <localtime_r@plt>:
    fbc0:	f3 0f 1e fa          	endbr64 
    fbc4:	f2 ff 25 fd 2b 24 00 	bnd jmpq *0x242bfd(%rip)        # 2527c8 <localtime_r@GLIBC_2.2.5>
    fbcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbd0 <json_real@plt>:
    fbd0:	f3 0f 1e fa          	endbr64 
    fbd4:	f2 ff 25 f5 2b 24 00 	bnd jmpq *0x242bf5(%rip)        # 2527d0 <json_real@libjansson.so.4>
    fbdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbe0 <flux_log_error@plt>:
    fbe0:	f3 0f 1e fa          	endbr64 
    fbe4:	f2 ff 25 ed 2b 24 00 	bnd jmpq *0x242bed(%rip)        # 2527d8 <flux_log_error@Base>
    fbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fbf0 <strcpy@plt>:
    fbf0:	f3 0f 1e fa          	endbr64 
    fbf4:	f2 ff 25 e5 2b 24 00 	bnd jmpq *0x242be5(%rip)        # 2527e0 <strcpy@GLIBC_2.2.5>
    fbfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc00 <json_object_del@plt>:
    fc00:	f3 0f 1e fa          	endbr64 
    fc04:	f2 ff 25 dd 2b 24 00 	bnd jmpq *0x242bdd(%rip)        # 2527e8 <json_object_del@libjansson.so.4>
    fc0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc10 <json_object_iter@plt>:
    fc10:	f3 0f 1e fa          	endbr64 
    fc14:	f2 ff 25 d5 2b 24 00 	bnd jmpq *0x242bd5(%rip)        # 2527f0 <json_object_iter@libjansson.so.4>
    fc1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc20 <flux_future_has_error@plt>:
    fc20:	f3 0f 1e fa          	endbr64 
    fc24:	f2 ff 25 cd 2b 24 00 	bnd jmpq *0x242bcd(%rip)        # 2527f8 <flux_future_has_error@Base>
    fc2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc30 <unlinkat@plt>:
    fc30:	f3 0f 1e fa          	endbr64 
    fc34:	f2 ff 25 c5 2b 24 00 	bnd jmpq *0x242bc5(%rip)        # 252800 <unlinkat@GLIBC_2.4>
    fc3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc40 <ferror@plt>:
    fc40:	f3 0f 1e fa          	endbr64 
    fc44:	f2 ff 25 bd 2b 24 00 	bnd jmpq *0x242bbd(%rip)        # 252808 <ferror@GLIBC_2.2.5>
    fc4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc50 <flux_msg_is_noresponse@plt>:
    fc50:	f3 0f 1e fa          	endbr64 
    fc54:	f2 ff 25 b5 2b 24 00 	bnd jmpq *0x242bb5(%rip)        # 252810 <flux_msg_is_noresponse@Base>
    fc5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc60 <qsort@plt>:
    fc60:	f3 0f 1e fa          	endbr64 
    fc64:	f2 ff 25 ad 2b 24 00 	bnd jmpq *0x242bad(%rip)        # 252818 <qsort@GLIBC_2.2.5>
    fc6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc70 <sigaction@plt>:
    fc70:	f3 0f 1e fa          	endbr64 
    fc74:	f2 ff 25 a5 2b 24 00 	bnd jmpq *0x242ba5(%rip)        # 252820 <sigaction@GLIBC_2.2.5>
    fc7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc80 <fread@plt>:
    fc80:	f3 0f 1e fa          	endbr64 
    fc84:	f2 ff 25 9d 2b 24 00 	bnd jmpq *0x242b9d(%rip)        # 252828 <fread@GLIBC_2.2.5>
    fc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc90 <strtod@plt>:
    fc90:	f3 0f 1e fa          	endbr64 
    fc94:	f2 ff 25 95 2b 24 00 	bnd jmpq *0x242b95(%rip)        # 252830 <strtod@GLIBC_2.2.5>
    fc9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fca0 <flux_rpc_pack@plt>:
    fca0:	f3 0f 1e fa          	endbr64 
    fca4:	f2 ff 25 8d 2b 24 00 	bnd jmpq *0x242b8d(%rip)        # 252838 <flux_rpc_pack@Base>
    fcab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fcb0 <readlink@plt>:
    fcb0:	f3 0f 1e fa          	endbr64 
    fcb4:	f2 ff 25 85 2b 24 00 	bnd jmpq *0x242b85(%rip)        # 252840 <readlink@GLIBC_2.2.5>
    fcbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fcc0 <fcntl@plt>:
    fcc0:	f3 0f 1e fa          	endbr64 
    fcc4:	f2 ff 25 7d 2b 24 00 	bnd jmpq *0x242b7d(%rip)        # 252848 <fcntl@GLIBC_2.2.5>
    fccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fcd0 <flux_msg_route_last@plt>:
    fcd0:	f3 0f 1e fa          	endbr64 
    fcd4:	f2 ff 25 75 2b 24 00 	bnd jmpq *0x242b75(%rip)        # 252850 <flux_msg_route_last@Base>
    fcdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fce0 <clock_gettime@plt>:
    fce0:	f3 0f 1e fa          	endbr64 
    fce4:	f2 ff 25 6d 2b 24 00 	bnd jmpq *0x242b6d(%rip)        # 252858 <clock_gettime@GLIBC_2.17>
    fceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fcf0 <setenv@plt>:
    fcf0:	f3 0f 1e fa          	endbr64 
    fcf4:	f2 ff 25 65 2b 24 00 	bnd jmpq *0x242b65(%rip)        # 252860 <setenv@GLIBC_2.2.5>
    fcfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd00 <write@plt>:
    fd00:	f3 0f 1e fa          	endbr64 
    fd04:	f2 ff 25 5d 2b 24 00 	bnd jmpq *0x242b5d(%rip)        # 252868 <write@GLIBC_2.2.5>
    fd0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd10 <getpid@plt>:
    fd10:	f3 0f 1e fa          	endbr64 
    fd14:	f2 ff 25 55 2b 24 00 	bnd jmpq *0x242b55(%rip)        # 252870 <getpid@GLIBC_2.2.5>
    fd1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd20 <json_array_size@plt>:
    fd20:	f3 0f 1e fa          	endbr64 
    fd24:	f2 ff 25 4d 2b 24 00 	bnd jmpq *0x242b4d(%rip)        # 252878 <json_array_size@libjansson.so.4>
    fd2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd30 <flux_msg_is_private@plt>:
    fd30:	f3 0f 1e fa          	endbr64 
    fd34:	f2 ff 25 45 2b 24 00 	bnd jmpq *0x242b45(%rip)        # 252880 <flux_msg_is_private@Base>
    fd3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd40 <flux_msg_route_clear@plt>:
    fd40:	f3 0f 1e fa          	endbr64 
    fd44:	f2 ff 25 3d 2b 24 00 	bnd jmpq *0x242b3d(%rip)        # 252888 <flux_msg_route_clear@Base>
    fd4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd50 <flux_future_destroy@plt>:
    fd50:	f3 0f 1e fa          	endbr64 
    fd54:	f2 ff 25 35 2b 24 00 	bnd jmpq *0x242b35(%rip)        # 252890 <flux_future_destroy@Base>
    fd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd60 <flux_future_aux_get@plt>:
    fd60:	f3 0f 1e fa          	endbr64 
    fd64:	f2 ff 25 2d 2b 24 00 	bnd jmpq *0x242b2d(%rip)        # 252898 <flux_future_aux_get@Base>
    fd6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd70 <flux_msg_route_first@plt>:
    fd70:	f3 0f 1e fa          	endbr64 
    fd74:	f2 ff 25 25 2b 24 00 	bnd jmpq *0x242b25(%rip)        # 2528a0 <flux_msg_route_first@Base>
    fd7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd80 <flux_msg_get_matchtag@plt>:
    fd80:	f3 0f 1e fa          	endbr64 
    fd84:	f2 ff 25 1d 2b 24 00 	bnd jmpq *0x242b1d(%rip)        # 2528a8 <flux_msg_get_matchtag@Base>
    fd8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fd90 <flux_strerror@plt>:
    fd90:	f3 0f 1e fa          	endbr64 
    fd94:	f2 ff 25 15 2b 24 00 	bnd jmpq *0x242b15(%rip)        # 2528b0 <flux_strerror@Base>
    fd9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fda0 <fclose@plt>:
    fda0:	f3 0f 1e fa          	endbr64 
    fda4:	f2 ff 25 0d 2b 24 00 	bnd jmpq *0x242b0d(%rip)        # 2528b8 <fclose@GLIBC_2.2.5>
    fdab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fdb0 <opendir@plt>:
    fdb0:	f3 0f 1e fa          	endbr64 
    fdb4:	f2 ff 25 05 2b 24 00 	bnd jmpq *0x242b05(%rip)        # 2528c0 <opendir@GLIBC_2.2.5>
    fdbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fdc0 <shutdown@plt>:
    fdc0:	f3 0f 1e fa          	endbr64 
    fdc4:	f2 ff 25 fd 2a 24 00 	bnd jmpq *0x242afd(%rip)        # 2528c8 <shutdown@GLIBC_2.2.5>
    fdcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fdd0 <json_integer@plt>:
    fdd0:	f3 0f 1e fa          	endbr64 
    fdd4:	f2 ff 25 f5 2a 24 00 	bnd jmpq *0x242af5(%rip)        # 2528d0 <json_integer@libjansson.so.4>
    fddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fde0 <flux_msg_encode@plt>:
    fde0:	f3 0f 1e fa          	endbr64 
    fde4:	f2 ff 25 ed 2a 24 00 	bnd jmpq *0x242aed(%rip)        # 2528d8 <flux_msg_encode@Base>
    fdeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fdf0 <flux_msg_set_matchtag@plt>:
    fdf0:	f3 0f 1e fa          	endbr64 
    fdf4:	f2 ff 25 e5 2a 24 00 	bnd jmpq *0x242ae5(%rip)        # 2528e0 <flux_msg_set_matchtag@Base>
    fdfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe00 <rmdir@plt>:
    fe00:	f3 0f 1e fa          	endbr64 
    fe04:	f2 ff 25 dd 2a 24 00 	bnd jmpq *0x242add(%rip)        # 2528e8 <rmdir@GLIBC_2.2.5>
    fe0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe10 <flux_msg_encode_size@plt>:
    fe10:	f3 0f 1e fa          	endbr64 
    fe14:	f2 ff 25 d5 2a 24 00 	bnd jmpq *0x242ad5(%rip)        # 2528f0 <flux_msg_encode_size@Base>
    fe1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe20 <strlen@plt>:
    fe20:	f3 0f 1e fa          	endbr64 
    fe24:	f2 ff 25 cd 2a 24 00 	bnd jmpq *0x242acd(%rip)        # 2528f8 <strlen@GLIBC_2.2.5>
    fe2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe30 <flux_future_get@plt>:
    fe30:	f3 0f 1e fa          	endbr64 
    fe34:	f2 ff 25 c5 2a 24 00 	bnd jmpq *0x242ac5(%rip)        # 252900 <flux_future_get@Base>
    fe3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe40 <__lxstat@plt>:
    fe40:	f3 0f 1e fa          	endbr64 
    fe44:	f2 ff 25 bd 2a 24 00 	bnd jmpq *0x242abd(%rip)        # 252908 <__lxstat@GLIBC_2.2.5>
    fe4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe50 <__stack_chk_fail@plt>:
    fe50:	f3 0f 1e fa          	endbr64 
    fe54:	f2 ff 25 b5 2a 24 00 	bnd jmpq *0x242ab5(%rip)        # 252910 <__stack_chk_fail@GLIBC_2.4>
    fe5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe60 <getuid@plt>:
    fe60:	f3 0f 1e fa          	endbr64 
    fe64:	f2 ff 25 ad 2a 24 00 	bnd jmpq *0x242aad(%rip)        # 252918 <getuid@GLIBC_2.2.5>
    fe6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe70 <mmap@plt>:
    fe70:	f3 0f 1e fa          	endbr64 
    fe74:	f2 ff 25 a5 2a 24 00 	bnd jmpq *0x242aa5(%rip)        # 252920 <mmap@GLIBC_2.2.5>
    fe7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe80 <flux_msg_typestr@plt>:
    fe80:	f3 0f 1e fa          	endbr64 
    fe84:	f2 ff 25 9d 2a 24 00 	bnd jmpq *0x242a9d(%rip)        # 252928 <flux_msg_typestr@Base>
    fe8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe90 <accept4@plt>:
    fe90:	f3 0f 1e fa          	endbr64 
    fe94:	f2 ff 25 95 2a 24 00 	bnd jmpq *0x242a95(%rip)        # 252930 <accept4@GLIBC_2.10>
    fe9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fea0 <dup2@plt>:
    fea0:	f3 0f 1e fa          	endbr64 
    fea4:	f2 ff 25 8d 2a 24 00 	bnd jmpq *0x242a8d(%rip)        # 252938 <dup2@GLIBC_2.2.5>
    feab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000feb0 <strchr@plt>:
    feb0:	f3 0f 1e fa          	endbr64 
    feb4:	f2 ff 25 85 2a 24 00 	bnd jmpq *0x242a85(%rip)        # 252940 <strchr@GLIBC_2.2.5>
    febb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fec0 <json_object_key_to_iter@plt>:
    fec0:	f3 0f 1e fa          	endbr64 
    fec4:	f2 ff 25 7d 2a 24 00 	bnd jmpq *0x242a7d(%rip)        # 252948 <json_object_key_to_iter@libjansson.so.4>
    fecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fed0 <argz_delete@plt>:
    fed0:	f3 0f 1e fa          	endbr64 
    fed4:	f2 ff 25 75 2a 24 00 	bnd jmpq *0x242a75(%rip)        # 252950 <argz_delete@GLIBC_2.2.5>
    fedb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fee0 <pthread_mutex_destroy@plt>:
    fee0:	f3 0f 1e fa          	endbr64 
    fee4:	f2 ff 25 6d 2a 24 00 	bnd jmpq *0x242a6d(%rip)        # 252958 <pthread_mutex_destroy@GLIBC_2.2.5>
    feeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fef0 <flux_request_unpack@plt>:
    fef0:	f3 0f 1e fa          	endbr64 
    fef4:	f2 ff 25 65 2a 24 00 	bnd jmpq *0x242a65(%rip)        # 252960 <flux_request_unpack@Base>
    fefb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff00 <flux_future_fulfill@plt>:
    ff00:	f3 0f 1e fa          	endbr64 
    ff04:	f2 ff 25 5d 2a 24 00 	bnd jmpq *0x242a5d(%rip)        # 252968 <flux_future_fulfill@Base>
    ff0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff10 <__fxstatat@plt>:
    ff10:	f3 0f 1e fa          	endbr64 
    ff14:	f2 ff 25 55 2a 24 00 	bnd jmpq *0x242a55(%rip)        # 252970 <__fxstatat@GLIBC_2.4>
    ff1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff20 <snprintf@plt>:
    ff20:	f3 0f 1e fa          	endbr64 
    ff24:	f2 ff 25 4d 2a 24 00 	bnd jmpq *0x242a4d(%rip)        # 252978 <snprintf@GLIBC_2.2.5>
    ff2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff30 <nanosleep@plt>:
    ff30:	f3 0f 1e fa          	endbr64 
    ff34:	f2 ff 25 45 2a 24 00 	bnd jmpq *0x242a45(%rip)        # 252980 <nanosleep@GLIBC_2.2.5>
    ff3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff40 <gai_strerror@plt>:
    ff40:	f3 0f 1e fa          	endbr64 
    ff44:	f2 ff 25 3d 2a 24 00 	bnd jmpq *0x242a3d(%rip)        # 252988 <gai_strerror@GLIBC_2.2.5>
    ff4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff50 <strrchr@plt>:
    ff50:	f3 0f 1e fa          	endbr64 
    ff54:	f2 ff 25 35 2a 24 00 	bnd jmpq *0x242a35(%rip)        # 252990 <strrchr@GLIBC_2.2.5>
    ff5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff60 <flux_future_get_flux@plt>:
    ff60:	f3 0f 1e fa          	endbr64 
    ff64:	f2 ff 25 2d 2a 24 00 	bnd jmpq *0x242a2d(%rip)        # 252998 <flux_future_get_flux@Base>
    ff6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff70 <flux_msg_get_rolemask@plt>:
    ff70:	f3 0f 1e fa          	endbr64 
    ff74:	f2 ff 25 25 2a 24 00 	bnd jmpq *0x242a25(%rip)        # 2529a0 <flux_msg_get_rolemask@Base>
    ff7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff80 <flux_kvs_txn_create@plt>:
    ff80:	f3 0f 1e fa          	endbr64 
    ff84:	f2 ff 25 1d 2a 24 00 	bnd jmpq *0x242a1d(%rip)        # 2529a8 <flux_kvs_txn_create@Base>
    ff8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff90 <uname@plt>:
    ff90:	f3 0f 1e fa          	endbr64 
    ff94:	f2 ff 25 15 2a 24 00 	bnd jmpq *0x242a15(%rip)        # 2529b0 <uname@GLIBC_2.2.5>
    ff9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ffa0 <gmtime_r@plt>:
    ffa0:	f3 0f 1e fa          	endbr64 
    ffa4:	f2 ff 25 0d 2a 24 00 	bnd jmpq *0x242a0d(%rip)        # 2529b8 <gmtime_r@GLIBC_2.2.5>
    ffab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ffb0 <dirname@plt>:
    ffb0:	f3 0f 1e fa          	endbr64 
    ffb4:	f2 ff 25 05 2a 24 00 	bnd jmpq *0x242a05(%rip)        # 2529c0 <dirname@GLIBC_2.2.5>
    ffbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ffc0 <lseek@plt>:
    ffc0:	f3 0f 1e fa          	endbr64 
    ffc4:	f2 ff 25 fd 29 24 00 	bnd jmpq *0x2429fd(%rip)        # 2529c8 <lseek@GLIBC_2.2.5>
    ffcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ffd0 <flux_msg_get_userid@plt>:
    ffd0:	f3 0f 1e fa          	endbr64 
    ffd4:	f2 ff 25 f5 29 24 00 	bnd jmpq *0x2429f5(%rip)        # 2529d0 <flux_msg_get_userid@Base>
    ffdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ffe0 <gettimeofday@plt>:
    ffe0:	f3 0f 1e fa          	endbr64 
    ffe4:	f2 ff 25 ed 29 24 00 	bnd jmpq *0x2429ed(%rip)        # 2529d8 <gettimeofday@GLIBC_2.2.5>
    ffeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fff0 <flux_msg_cmp@plt>:
    fff0:	f3 0f 1e fa          	endbr64 
    fff4:	f2 ff 25 e5 29 24 00 	bnd jmpq *0x2429e5(%rip)        # 2529e0 <flux_msg_cmp@Base>
    fffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010000 <__assert_fail@plt>:
   10000:	f3 0f 1e fa          	endbr64 
   10004:	f2 ff 25 dd 29 24 00 	bnd jmpq *0x2429dd(%rip)        # 2529e8 <__assert_fail@GLIBC_2.2.5>
   1000b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010010 <fnmatch@plt>:
   10010:	f3 0f 1e fa          	endbr64 
   10014:	f2 ff 25 d5 29 24 00 	bnd jmpq *0x2429d5(%rip)        # 2529f0 <fnmatch@GLIBC_2.2.5>
   1001b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010020 <json_delete@plt>:
   10020:	f3 0f 1e fa          	endbr64 
   10024:	f2 ff 25 cd 29 24 00 	bnd jmpq *0x2429cd(%rip)        # 2529f8 <json_delete@libjansson.so.4>
   1002b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010030 <memset@plt>:
   10030:	f3 0f 1e fa          	endbr64 
   10034:	f2 ff 25 c5 29 24 00 	bnd jmpq *0x2429c5(%rip)        # 252a00 <memset@GLIBC_2.2.5>
   1003b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010040 <flux_msg_get_topic@plt>:
   10040:	f3 0f 1e fa          	endbr64 
   10044:	f2 ff 25 bd 29 24 00 	bnd jmpq *0x2429bd(%rip)        # 252a08 <flux_msg_get_topic@Base>
   1004b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010050 <geteuid@plt>:
   10050:	f3 0f 1e fa          	endbr64 
   10054:	f2 ff 25 b5 29 24 00 	bnd jmpq *0x2429b5(%rip)        # 252a10 <geteuid@GLIBC_2.2.5>
   1005b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010060 <signalfd@plt>:
   10060:	f3 0f 1e fa          	endbr64 
   10064:	f2 ff 25 ad 29 24 00 	bnd jmpq *0x2429ad(%rip)        # 252a18 <signalfd@GLIBC_2.7>
   1006b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010070 <strnlen@plt>:
   10070:	f3 0f 1e fa          	endbr64 
   10074:	f2 ff 25 a5 29 24 00 	bnd jmpq *0x2429a5(%rip)        # 252a20 <strnlen@GLIBC_2.2.5>
   1007b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010080 <json_null@plt>:
   10080:	f3 0f 1e fa          	endbr64 
   10084:	f2 ff 25 9d 29 24 00 	bnd jmpq *0x24299d(%rip)        # 252a28 <json_null@libjansson.so.4>
   1008b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010090 <flux_match_init@plt>:
   10090:	f3 0f 1e fa          	endbr64 
   10094:	f2 ff 25 95 29 24 00 	bnd jmpq *0x242995(%rip)        # 252a30 <flux_match_init@Base>
   1009b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100a0 <flux_fd_watcher_create@plt>:
   100a0:	f3 0f 1e fa          	endbr64 
   100a4:	f2 ff 25 8d 29 24 00 	bnd jmpq *0x24298d(%rip)        # 252a38 <flux_fd_watcher_create@Base>
   100ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100b0 <close@plt>:
   100b0:	f3 0f 1e fa          	endbr64 
   100b4:	f2 ff 25 85 29 24 00 	bnd jmpq *0x242985(%rip)        # 252a40 <close@GLIBC_2.2.5>
   100bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100c0 <flux_msg_set_rolemask@plt>:
   100c0:	f3 0f 1e fa          	endbr64 
   100c4:	f2 ff 25 7d 29 24 00 	bnd jmpq *0x24297d(%rip)        # 252a48 <flux_msg_set_rolemask@Base>
   100cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100d0 <pipe@plt>:
   100d0:	f3 0f 1e fa          	endbr64 
   100d4:	f2 ff 25 75 29 24 00 	bnd jmpq *0x242975(%rip)        # 252a50 <pipe@GLIBC_2.2.5>
   100db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100e0 <getnameinfo@plt>:
   100e0:	f3 0f 1e fa          	endbr64 
   100e4:	f2 ff 25 6d 29 24 00 	bnd jmpq *0x24296d(%rip)        # 252a58 <getnameinfo@GLIBC_2.2.5>
   100eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000100f0 <flux_msg_copy@plt>:
   100f0:	f3 0f 1e fa          	endbr64 
   100f4:	f2 ff 25 65 29 24 00 	bnd jmpq *0x242965(%rip)        # 252a60 <flux_msg_copy@Base>
   100fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010100 <strspn@plt>:
   10100:	f3 0f 1e fa          	endbr64 
   10104:	f2 ff 25 5d 29 24 00 	bnd jmpq *0x24295d(%rip)        # 252a68 <strspn@GLIBC_2.2.5>
   1010b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010110 <closedir@plt>:
   10110:	f3 0f 1e fa          	endbr64 
   10114:	f2 ff 25 55 29 24 00 	bnd jmpq *0x242955(%rip)        # 252a70 <closedir@GLIBC_2.2.5>
   1011b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010120 <argz_add@plt>:
   10120:	f3 0f 1e fa          	endbr64 
   10124:	f2 ff 25 4d 29 24 00 	bnd jmpq *0x24294d(%rip)        # 252a78 <argz_add@GLIBC_2.2.5>
   1012b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010130 <fputc@plt>:
   10130:	f3 0f 1e fa          	endbr64 
   10134:	f2 ff 25 45 29 24 00 	bnd jmpq *0x242945(%rip)        # 252a80 <fputc@GLIBC_2.2.5>
   1013b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010140 <epoll_ctl@plt>:
   10140:	f3 0f 1e fa          	endbr64 
   10144:	f2 ff 25 3d 29 24 00 	bnd jmpq *0x24293d(%rip)        # 252a88 <epoll_ctl@GLIBC_2.3.2>
   1014b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010150 <json_array_remove@plt>:
   10150:	f3 0f 1e fa          	endbr64 
   10154:	f2 ff 25 35 29 24 00 	bnd jmpq *0x242935(%rip)        # 252a90 <json_array_remove@libjansson.so.4>
   1015b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010160 <json_unpack@plt>:
   10160:	f3 0f 1e fa          	endbr64 
   10164:	f2 ff 25 2d 29 24 00 	bnd jmpq *0x24292d(%rip)        # 252a98 <json_unpack@libjansson.so.4>
   1016b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010170 <strtok_r@plt>:
   10170:	f3 0f 1e fa          	endbr64 
   10174:	f2 ff 25 25 29 24 00 	bnd jmpq *0x242925(%rip)        # 252aa0 <strtok_r@GLIBC_2.2.5>
   1017b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010180 <read@plt>:
   10180:	f3 0f 1e fa          	endbr64 
   10184:	f2 ff 25 1d 29 24 00 	bnd jmpq *0x24291d(%rip)        # 252aa8 <read@GLIBC_2.2.5>
   1018b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010190 <strndup@plt>:
   10190:	f3 0f 1e fa          	endbr64 
   10194:	f2 ff 25 15 29 24 00 	bnd jmpq *0x242915(%rip)        # 252ab0 <strndup@GLIBC_2.2.5>
   1019b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101a0 <fgets@plt>:
   101a0:	f3 0f 1e fa          	endbr64 
   101a4:	f2 ff 25 0d 29 24 00 	bnd jmpq *0x24290d(%rip)        # 252ab8 <fgets@GLIBC_2.2.5>
   101ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101b0 <flux_msg_handler_addvec@plt>:
   101b0:	f3 0f 1e fa          	endbr64 
   101b4:	f2 ff 25 05 29 24 00 	bnd jmpq *0x242905(%rip)        # 252ac0 <flux_msg_handler_addvec@Base>
   101bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101c0 <getsockopt@plt>:
   101c0:	f3 0f 1e fa          	endbr64 
   101c4:	f2 ff 25 fd 28 24 00 	bnd jmpq *0x2428fd(%rip)        # 252ac8 <getsockopt@GLIBC_2.2.5>
   101cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101d0 <_setjmp@plt>:
   101d0:	f3 0f 1e fa          	endbr64 
   101d4:	f2 ff 25 f5 28 24 00 	bnd jmpq *0x2428f5(%rip)        # 252ad0 <_setjmp@GLIBC_2.2.5>
   101db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101e0 <strtoull@plt>:
   101e0:	f3 0f 1e fa          	endbr64 
   101e4:	f2 ff 25 ed 28 24 00 	bnd jmpq *0x2428ed(%rip)        # 252ad8 <strtoull@GLIBC_2.2.5>
   101eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000101f0 <__asprintf_chk@plt>:
   101f0:	f3 0f 1e fa          	endbr64 
   101f4:	f2 ff 25 e5 28 24 00 	bnd jmpq *0x2428e5(%rip)        # 252ae0 <__asprintf_chk@GLIBC_2.8>
   101fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010200 <json_dumps@plt>:
   10200:	f3 0f 1e fa          	endbr64 
   10204:	f2 ff 25 dd 28 24 00 	bnd jmpq *0x2428dd(%rip)        # 252ae8 <json_dumps@libjansson.so.4>
   1020b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010210 <calloc@plt>:
   10210:	f3 0f 1e fa          	endbr64 
   10214:	f2 ff 25 d5 28 24 00 	bnd jmpq *0x2428d5(%rip)        # 252af0 <calloc@GLIBC_2.2.5>
   1021b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010220 <strcmp@plt>:
   10220:	f3 0f 1e fa          	endbr64 
   10224:	f2 ff 25 cd 28 24 00 	bnd jmpq *0x2428cd(%rip)        # 252af8 <strcmp@GLIBC_2.2.5>
   1022b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010230 <flux_response_encode@plt>:
   10230:	f3 0f 1e fa          	endbr64 
   10234:	f2 ff 25 c5 28 24 00 	bnd jmpq *0x2428c5(%rip)        # 252b00 <flux_response_encode@Base>
   1023b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010240 <signal@plt>:
   10240:	f3 0f 1e fa          	endbr64 
   10244:	f2 ff 25 bd 28 24 00 	bnd jmpq *0x2428bd(%rip)        # 252b08 <signal@GLIBC_2.2.5>
   1024b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010250 <dirfd@plt>:
   10250:	f3 0f 1e fa          	endbr64 
   10254:	f2 ff 25 b5 28 24 00 	bnd jmpq *0x2428b5(%rip)        # 252b10 <dirfd@GLIBC_2.2.5>
   1025b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010260 <strtoll@plt>:
   10260:	f3 0f 1e fa          	endbr64 
   10264:	f2 ff 25 ad 28 24 00 	bnd jmpq *0x2428ad(%rip)        # 252b18 <strtoll@GLIBC_2.2.5>
   1026b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010270 <flux_msg_set_cred@plt>:
   10270:	f3 0f 1e fa          	endbr64 
   10274:	f2 ff 25 a5 28 24 00 	bnd jmpq *0x2428a5(%rip)        # 252b20 <flux_msg_set_cred@Base>
   1027b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010280 <__memcpy_chk@plt>:
   10280:	f3 0f 1e fa          	endbr64 
   10284:	f2 ff 25 9d 28 24 00 	bnd jmpq *0x24289d(%rip)        # 252b28 <__memcpy_chk@GLIBC_2.3.4>
   1028b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010290 <syscall@plt>:
   10290:	f3 0f 1e fa          	endbr64 
   10294:	f2 ff 25 95 28 24 00 	bnd jmpq *0x242895(%rip)        # 252b30 <syscall@GLIBC_2.2.5>
   1029b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102a0 <sigemptyset@plt>:
   102a0:	f3 0f 1e fa          	endbr64 
   102a4:	f2 ff 25 8d 28 24 00 	bnd jmpq *0x24288d(%rip)        # 252b38 <sigemptyset@GLIBC_2.2.5>
   102ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102b0 <feof@plt>:
   102b0:	f3 0f 1e fa          	endbr64 
   102b4:	f2 ff 25 85 28 24 00 	bnd jmpq *0x242885(%rip)        # 252b40 <feof@GLIBC_2.2.5>
   102bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102c0 <json_string_value@plt>:
   102c0:	f3 0f 1e fa          	endbr64 
   102c4:	f2 ff 25 7d 28 24 00 	bnd jmpq *0x24287d(%rip)        # 252b48 <json_string_value@libjansson.so.4>
   102cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102d0 <timerfd_create@plt>:
   102d0:	f3 0f 1e fa          	endbr64 
   102d4:	f2 ff 25 75 28 24 00 	bnd jmpq *0x242875(%rip)        # 252b50 <timerfd_create@GLIBC_2.8>
   102db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102e0 <strtol@plt>:
   102e0:	f3 0f 1e fa          	endbr64 
   102e4:	f2 ff 25 6d 28 24 00 	bnd jmpq *0x24286d(%rip)        # 252b58 <strtol@GLIBC_2.2.5>
   102eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000102f0 <realpath@plt>:
   102f0:	f3 0f 1e fa          	endbr64 
   102f4:	f2 ff 25 65 28 24 00 	bnd jmpq *0x242865(%rip)        # 252b60 <realpath@GLIBC_2.3>
   102fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010300 <flux_requeue@plt>:
   10300:	f3 0f 1e fa          	endbr64 
   10304:	f2 ff 25 5d 28 24 00 	bnd jmpq *0x24285d(%rip)        # 252b68 <flux_requeue@Base>
   1030b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010310 <memcpy@plt>:
   10310:	f3 0f 1e fa          	endbr64 
   10314:	f2 ff 25 55 28 24 00 	bnd jmpq *0x242855(%rip)        # 252b70 <memcpy@GLIBC_2.14>
   1031b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010320 <sigfillset@plt>:
   10320:	f3 0f 1e fa          	endbr64 
   10324:	f2 ff 25 4d 28 24 00 	bnd jmpq *0x24284d(%rip)        # 252b78 <sigfillset@GLIBC_2.2.5>
   1032b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010330 <socketpair@plt>:
   10330:	f3 0f 1e fa          	endbr64 
   10334:	f2 ff 25 45 28 24 00 	bnd jmpq *0x242845(%rip)        # 252b80 <socketpair@GLIBC_2.2.5>
   1033b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010340 <inotify_init@plt>:
   10340:	f3 0f 1e fa          	endbr64 
   10344:	f2 ff 25 3d 28 24 00 	bnd jmpq *0x24283d(%rip)        # 252b88 <inotify_init@GLIBC_2.4>
   1034b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010350 <__xpg_basename@plt>:
   10350:	f3 0f 1e fa          	endbr64 
   10354:	f2 ff 25 35 28 24 00 	bnd jmpq *0x242835(%rip)        # 252b90 <__xpg_basename@GLIBC_2.2.5>
   1035b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010360 <json_object_iter_key@plt>:
   10360:	f3 0f 1e fa          	endbr64 
   10364:	f2 ff 25 2d 28 24 00 	bnd jmpq *0x24282d(%rip)        # 252b98 <json_object_iter_key@libjansson.so.4>
   1036b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010370 <json_pack@plt>:
   10370:	f3 0f 1e fa          	endbr64 
   10374:	f2 ff 25 25 28 24 00 	bnd jmpq *0x242825(%rip)        # 252ba0 <json_pack@libjansson.so.4>
   1037b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010380 <getgid@plt>:
   10380:	f3 0f 1e fa          	endbr64 
   10384:	f2 ff 25 1d 28 24 00 	bnd jmpq *0x24281d(%rip)        # 252ba8 <getgid@GLIBC_2.2.5>
   1038b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010390 <statfs@plt>:
   10390:	f3 0f 1e fa          	endbr64 
   10394:	f2 ff 25 15 28 24 00 	bnd jmpq *0x242815(%rip)        # 252bb0 <statfs@GLIBC_2.2.5>
   1039b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103a0 <select@plt>:
   103a0:	f3 0f 1e fa          	endbr64 
   103a4:	f2 ff 25 0d 28 24 00 	bnd jmpq *0x24280d(%rip)        # 252bb8 <select@GLIBC_2.2.5>
   103ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103b0 <flux_request_encode@plt>:
   103b0:	f3 0f 1e fa          	endbr64 
   103b4:	f2 ff 25 05 28 24 00 	bnd jmpq *0x242805(%rip)        # 252bc0 <flux_request_encode@Base>
   103bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103c0 <__xstat@plt>:
   103c0:	f3 0f 1e fa          	endbr64 
   103c4:	f2 ff 25 fd 27 24 00 	bnd jmpq *0x2427fd(%rip)        # 252bc8 <__xstat@GLIBC_2.2.5>
   103cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103d0 <readdir@plt>:
   103d0:	f3 0f 1e fa          	endbr64 
   103d4:	f2 ff 25 f5 27 24 00 	bnd jmpq *0x2427f5(%rip)        # 252bd0 <readdir@GLIBC_2.2.5>
   103db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103e0 <json_object_size@plt>:
   103e0:	f3 0f 1e fa          	endbr64 
   103e4:	f2 ff 25 ed 27 24 00 	bnd jmpq *0x2427ed(%rip)        # 252bd8 <json_object_size@libjansson.so.4>
   103eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000103f0 <pthread_mutex_unlock@plt>:
   103f0:	f3 0f 1e fa          	endbr64 
   103f4:	f2 ff 25 e5 27 24 00 	bnd jmpq *0x2427e5(%rip)        # 252be0 <pthread_mutex_unlock@GLIBC_2.2.5>
   103fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010400 <flux_rpc_message@plt>:
   10400:	f3 0f 1e fa          	endbr64 
   10404:	f2 ff 25 dd 27 24 00 	bnd jmpq *0x2427dd(%rip)        # 252be8 <flux_rpc_message@Base>
   1040b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010410 <flux_response_encode_error@plt>:
   10410:	f3 0f 1e fa          	endbr64 
   10414:	f2 ff 25 d5 27 24 00 	bnd jmpq *0x2427d5(%rip)        # 252bf0 <flux_response_encode_error@Base>
   1041b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010420 <malloc@plt>:
   10420:	f3 0f 1e fa          	endbr64 
   10424:	f2 ff 25 cd 27 24 00 	bnd jmpq *0x2427cd(%rip)        # 252bf8 <malloc@GLIBC_2.2.5>
   1042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010430 <strncasecmp@plt>:
   10430:	f3 0f 1e fa          	endbr64 
   10434:	f2 ff 25 c5 27 24 00 	bnd jmpq *0x2427c5(%rip)        # 252c00 <strncasecmp@GLIBC_2.2.5>
   1043b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010440 <fflush@plt>:
   10440:	f3 0f 1e fa          	endbr64 
   10444:	f2 ff 25 bd 27 24 00 	bnd jmpq *0x2427bd(%rip)        # 252c08 <fflush@GLIBC_2.2.5>
   1044b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010450 <flux_msg_handler_delvec@plt>:
   10450:	f3 0f 1e fa          	endbr64 
   10454:	f2 ff 25 b5 27 24 00 	bnd jmpq *0x2427b5(%rip)        # 252c10 <flux_msg_handler_delvec@Base>
   1045b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010460 <inotify_add_watch@plt>:
   10460:	f3 0f 1e fa          	endbr64 
   10464:	f2 ff 25 ad 27 24 00 	bnd jmpq *0x2427ad(%rip)        # 252c18 <inotify_add_watch@GLIBC_2.4>
   1046b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010470 <flux_set_reactor@plt>:
   10470:	f3 0f 1e fa          	endbr64 
   10474:	f2 ff 25 a5 27 24 00 	bnd jmpq *0x2427a5(%rip)        # 252c20 <flux_set_reactor@Base>
   1047b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010480 <flux_msg_decref@plt>:
   10480:	f3 0f 1e fa          	endbr64 
   10484:	f2 ff 25 9d 27 24 00 	bnd jmpq *0x24279d(%rip)        # 252c28 <flux_msg_decref@Base>
   1048b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010490 <__vasprintf_chk@plt>:
   10490:	f3 0f 1e fa          	endbr64 
   10494:	f2 ff 25 95 27 24 00 	bnd jmpq *0x242795(%rip)        # 252c30 <__vasprintf_chk@GLIBC_2.8>
   1049b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104a0 <flux_msg_destroy@plt>:
   104a0:	f3 0f 1e fa          	endbr64 
   104a4:	f2 ff 25 8d 27 24 00 	bnd jmpq *0x24278d(%rip)        # 252c38 <flux_msg_destroy@Base>
   104ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104b0 <flux_msg_get_flags@plt>:
   104b0:	f3 0f 1e fa          	endbr64 
   104b4:	f2 ff 25 85 27 24 00 	bnd jmpq *0x242785(%rip)        # 252c40 <flux_msg_get_flags@Base>
   104bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104c0 <getifaddrs@plt>:
   104c0:	f3 0f 1e fa          	endbr64 
   104c4:	f2 ff 25 7d 27 24 00 	bnd jmpq *0x24277d(%rip)        # 252c48 <getifaddrs@GLIBC_2.3>
   104cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104d0 <flux_msg_get_nodeid@plt>:
   104d0:	f3 0f 1e fa          	endbr64 
   104d4:	f2 ff 25 75 27 24 00 	bnd jmpq *0x242775(%rip)        # 252c50 <flux_msg_get_nodeid@Base>
   104db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104e0 <json_array_get@plt>:
   104e0:	f3 0f 1e fa          	endbr64 
   104e4:	f2 ff 25 6d 27 24 00 	bnd jmpq *0x24276d(%rip)        # 252c58 <json_array_get@libjansson.so.4>
   104eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000104f0 <__fxstat@plt>:
   104f0:	f3 0f 1e fa          	endbr64 
   104f4:	f2 ff 25 65 27 24 00 	bnd jmpq *0x242765(%rip)        # 252c60 <__fxstat@GLIBC_2.2.5>
   104fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010500 <listen@plt>:
   10500:	f3 0f 1e fa          	endbr64 
   10504:	f2 ff 25 5d 27 24 00 	bnd jmpq *0x24275d(%rip)        # 252c68 <listen@GLIBC_2.2.5>
   1050b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010510 <json_loads@plt>:
   10510:	f3 0f 1e fa          	endbr64 
   10514:	f2 ff 25 55 27 24 00 	bnd jmpq *0x242755(%rip)        # 252c70 <json_loads@libjansson.so.4>
   1051b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010520 <sscanf@plt>:
   10520:	f3 0f 1e fa          	endbr64 
   10524:	f2 ff 25 4d 27 24 00 	bnd jmpq *0x24274d(%rip)        # 252c78 <sscanf@GLIBC_2.2.5>
   1052b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010530 <flux_msg_get_errnum@plt>:
   10530:	f3 0f 1e fa          	endbr64 
   10534:	f2 ff 25 45 27 24 00 	bnd jmpq *0x242745(%rip)        # 252c80 <flux_msg_get_errnum@Base>
   1053b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010540 <getegid@plt>:
   10540:	f3 0f 1e fa          	endbr64 
   10544:	f2 ff 25 3d 27 24 00 	bnd jmpq *0x24273d(%rip)        # 252c88 <getegid@GLIBC_2.2.5>
   1054b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010550 <mktime@plt>:
   10550:	f3 0f 1e fa          	endbr64 
   10554:	f2 ff 25 35 27 24 00 	bnd jmpq *0x242735(%rip)        # 252c90 <mktime@GLIBC_2.2.5>
   1055b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010560 <__vsnprintf_chk@plt>:
   10560:	f3 0f 1e fa          	endbr64 
   10564:	f2 ff 25 2d 27 24 00 	bnd jmpq *0x24272d(%rip)        # 252c98 <__vsnprintf_chk@GLIBC_2.3.4>
   1056b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010570 <flux_msg_is_streaming@plt>:
   10570:	f3 0f 1e fa          	endbr64 
   10574:	f2 ff 25 25 27 24 00 	bnd jmpq *0x242725(%rip)        # 252ca0 <flux_msg_is_streaming@Base>
   1057b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010580 <flux_msg_incref@plt>:
   10580:	f3 0f 1e fa          	endbr64 
   10584:	f2 ff 25 1d 27 24 00 	bnd jmpq *0x24271d(%rip)        # 252ca8 <flux_msg_incref@Base>
   1058b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010590 <flux_msg_set_topic@plt>:
   10590:	f3 0f 1e fa          	endbr64 
   10594:	f2 ff 25 15 27 24 00 	bnd jmpq *0x242715(%rip)        # 252cb0 <flux_msg_set_topic@Base>
   1059b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105a0 <uuid_generate@plt>:
   105a0:	f3 0f 1e fa          	endbr64 
   105a4:	f2 ff 25 0d 27 24 00 	bnd jmpq *0x24270d(%rip)        # 252cb8 <uuid_generate@UUID_1.0>
   105ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105b0 <__strncpy_chk@plt>:
   105b0:	f3 0f 1e fa          	endbr64 
   105b4:	f2 ff 25 05 27 24 00 	bnd jmpq *0x242705(%rip)        # 252cc0 <__strncpy_chk@GLIBC_2.3.4>
   105bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105c0 <argz_count@plt>:
   105c0:	f3 0f 1e fa          	endbr64 
   105c4:	f2 ff 25 fd 26 24 00 	bnd jmpq *0x2426fd(%rip)        # 252cc8 <argz_count@GLIBC_2.2.5>
   105cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105d0 <realloc@plt>:
   105d0:	f3 0f 1e fa          	endbr64 
   105d4:	f2 ff 25 f5 26 24 00 	bnd jmpq *0x2426f5(%rip)        # 252cd0 <realloc@GLIBC_2.2.5>
   105db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105e0 <munmap@plt>:
   105e0:	f3 0f 1e fa          	endbr64 
   105e4:	f2 ff 25 ed 26 24 00 	bnd jmpq *0x2426ed(%rip)        # 252cd8 <munmap@GLIBC_2.2.5>
   105eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000105f0 <flux_future_is_ready@plt>:
   105f0:	f3 0f 1e fa          	endbr64 
   105f4:	f2 ff 25 e5 26 24 00 	bnd jmpq *0x2426e5(%rip)        # 252ce0 <flux_future_is_ready@Base>
   105fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010600 <flux_future_then@plt>:
   10600:	f3 0f 1e fa          	endbr64 
   10604:	f2 ff 25 dd 26 24 00 	bnd jmpq *0x2426dd(%rip)        # 252ce8 <flux_future_then@Base>
   1060b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010610 <json_object_iter_value@plt>:
   10610:	f3 0f 1e fa          	endbr64 
   10614:	f2 ff 25 d5 26 24 00 	bnd jmpq *0x2426d5(%rip)        # 252cf0 <json_object_iter_value@libjansson.so.4>
   1061b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010620 <timegm@plt>:
   10620:	f3 0f 1e fa          	endbr64 
   10624:	f2 ff 25 cd 26 24 00 	bnd jmpq *0x2426cd(%rip)        # 252cf8 <timegm@GLIBC_2.2.5>
   1062b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010630 <flux_kvs_txn_put@plt>:
   10630:	f3 0f 1e fa          	endbr64 
   10634:	f2 ff 25 c5 26 24 00 	bnd jmpq *0x2426c5(%rip)        # 252d00 <flux_kvs_txn_put@Base>
   1063b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010640 <freeifaddrs@plt>:
   10640:	f3 0f 1e fa          	endbr64 
   10644:	f2 ff 25 bd 26 24 00 	bnd jmpq *0x2426bd(%rip)        # 252d08 <freeifaddrs@GLIBC_2.3>
   1064b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010650 <json_object_get@plt>:
   10650:	f3 0f 1e fa          	endbr64 
   10654:	f2 ff 25 b5 26 24 00 	bnd jmpq *0x2426b5(%rip)        # 252d10 <json_object_get@libjansson.so.4>
   1065b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010660 <flux_event_unsubscribe@plt>:
   10660:	f3 0f 1e fa          	endbr64 
   10664:	f2 ff 25 ad 26 24 00 	bnd jmpq *0x2426ad(%rip)        # 252d18 <flux_event_unsubscribe@Base>
   1066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010670 <epoll_wait@plt>:
   10670:	f3 0f 1e fa          	endbr64 
   10674:	f2 ff 25 a5 26 24 00 	bnd jmpq *0x2426a5(%rip)        # 252d20 <epoll_wait@GLIBC_2.3.2>
   1067b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010680 <poll@plt>:
   10680:	f3 0f 1e fa          	endbr64 
   10684:	f2 ff 25 9d 26 24 00 	bnd jmpq *0x24269d(%rip)        # 252d28 <poll@GLIBC_2.2.5>
   1068b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010690 <chmod@plt>:
   10690:	f3 0f 1e fa          	endbr64 
   10694:	f2 ff 25 95 26 24 00 	bnd jmpq *0x242695(%rip)        # 252d30 <chmod@GLIBC_2.2.5>
   1069b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106a0 <bind@plt>:
   106a0:	f3 0f 1e fa          	endbr64 
   106a4:	f2 ff 25 8d 26 24 00 	bnd jmpq *0x24268d(%rip)        # 252d38 <bind@GLIBC_2.2.5>
   106ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106b0 <__longjmp_chk@plt>:
   106b0:	f3 0f 1e fa          	endbr64 
   106b4:	f2 ff 25 85 26 24 00 	bnd jmpq *0x242685(%rip)        # 252d40 <__longjmp_chk@GLIBC_2.11>
   106bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106c0 <strftime@plt>:
   106c0:	f3 0f 1e fa          	endbr64 
   106c4:	f2 ff 25 7d 26 24 00 	bnd jmpq *0x24267d(%rip)        # 252d48 <strftime@GLIBC_2.2.5>
   106cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106d0 <memmove@plt>:
   106d0:	f3 0f 1e fa          	endbr64 
   106d4:	f2 ff 25 75 26 24 00 	bnd jmpq *0x242675(%rip)        # 252d50 <memmove@GLIBC_2.2.5>
   106db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106e0 <flux_get_reactor@plt>:
   106e0:	f3 0f 1e fa          	endbr64 
   106e4:	f2 ff 25 6d 26 24 00 	bnd jmpq *0x24266d(%rip)        # 252d58 <flux_get_reactor@Base>
   106eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000106f0 <flux_service_register@plt>:
   106f0:	f3 0f 1e fa          	endbr64 
   106f4:	f2 ff 25 65 26 24 00 	bnd jmpq *0x242665(%rip)        # 252d60 <flux_service_register@Base>
   106fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010700 <json_false@plt>:
   10700:	f3 0f 1e fa          	endbr64 
   10704:	f2 ff 25 5d 26 24 00 	bnd jmpq *0x24265d(%rip)        # 252d68 <json_false@libjansson.so.4>
   1070b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010710 <json_stringn@plt>:
   10710:	f3 0f 1e fa          	endbr64 
   10714:	f2 ff 25 55 26 24 00 	bnd jmpq *0x242655(%rip)        # 252d70 <json_stringn@libjansson.so.4>
   1071b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010720 <waitpid@plt>:
   10720:	f3 0f 1e fa          	endbr64 
   10724:	f2 ff 25 4d 26 24 00 	bnd jmpq *0x24264d(%rip)        # 252d78 <waitpid@GLIBC_2.2.5>
   1072b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010730 <flux_msg_frames@plt>:
   10730:	f3 0f 1e fa          	endbr64 
   10734:	f2 ff 25 45 26 24 00 	bnd jmpq *0x242645(%rip)        # 252d80 <flux_msg_frames@Base>
   1073b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010740 <flux_attr_get@plt>:
   10740:	f3 0f 1e fa          	endbr64 
   10744:	f2 ff 25 3d 26 24 00 	bnd jmpq *0x24263d(%rip)        # 252d88 <flux_attr_get@Base>
   1074b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010750 <json_object_set_new@plt>:
   10750:	f3 0f 1e fa          	endbr64 
   10754:	f2 ff 25 35 26 24 00 	bnd jmpq *0x242635(%rip)        # 252d90 <json_object_set_new@libjansson.so.4>
   1075b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010760 <open@plt>:
   10760:	f3 0f 1e fa          	endbr64 
   10764:	f2 ff 25 2d 26 24 00 	bnd jmpq *0x24262d(%rip)        # 252d98 <open@GLIBC_2.2.5>
   1076b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010770 <flux_future_error_string@plt>:
   10770:	f3 0f 1e fa          	endbr64 
   10774:	f2 ff 25 25 26 24 00 	bnd jmpq *0x242625(%rip)        # 252da0 <flux_future_error_string@Base>
   1077b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010780 <flux_watcher_destroy@plt>:
   10780:	f3 0f 1e fa          	endbr64 
   10784:	f2 ff 25 1d 26 24 00 	bnd jmpq *0x24261d(%rip)        # 252da8 <flux_watcher_destroy@Base>
   1078b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010790 <fopen@plt>:
   10790:	f3 0f 1e fa          	endbr64 
   10794:	f2 ff 25 15 26 24 00 	bnd jmpq *0x242615(%rip)        # 252db0 <fopen@GLIBC_2.2.5>
   1079b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107a0 <flux_timer_watcher_create@plt>:
   107a0:	f3 0f 1e fa          	endbr64 
   107a4:	f2 ff 25 0d 26 24 00 	bnd jmpq *0x24260d(%rip)        # 252db8 <flux_timer_watcher_create@Base>
   107ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107b0 <sigdelset@plt>:
   107b0:	f3 0f 1e fa          	endbr64 
   107b4:	f2 ff 25 05 26 24 00 	bnd jmpq *0x242605(%rip)        # 252dc0 <sigdelset@GLIBC_2.2.5>
   107bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107c0 <flux_respond_error@plt>:
   107c0:	f3 0f 1e fa          	endbr64 
   107c4:	f2 ff 25 fd 25 24 00 	bnd jmpq *0x2425fd(%rip)        # 252dc8 <flux_respond_error@Base>
   107cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107d0 <perror@plt>:
   107d0:	f3 0f 1e fa          	endbr64 
   107d4:	f2 ff 25 f5 25 24 00 	bnd jmpq *0x2425f5(%rip)        # 252dd0 <perror@GLIBC_2.2.5>
   107db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107e0 <sysconf@plt>:
   107e0:	f3 0f 1e fa          	endbr64 
   107e4:	f2 ff 25 ed 25 24 00 	bnd jmpq *0x2425ed(%rip)        # 252dd8 <sysconf@GLIBC_2.2.5>
   107eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107f0 <unsetenv@plt>:
   107f0:	f3 0f 1e fa          	endbr64 
   107f4:	f2 ff 25 e5 25 24 00 	bnd jmpq *0x2425e5(%rip)        # 252de0 <unsetenv@GLIBC_2.2.5>
   107fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010800 <flux_msg_decode@plt>:
   10800:	f3 0f 1e fa          	endbr64 
   10804:	f2 ff 25 dd 25 24 00 	bnd jmpq *0x2425dd(%rip)        # 252de8 <flux_msg_decode@Base>
   1080b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010810 <flux_msg_route_enable@plt>:
   10810:	f3 0f 1e fa          	endbr64 
   10814:	f2 ff 25 d5 25 24 00 	bnd jmpq *0x2425d5(%rip)        # 252df0 <flux_msg_route_enable@Base>
   1081b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010820 <flux_kvs_txn_destroy@plt>:
   10820:	f3 0f 1e fa          	endbr64 
   10824:	f2 ff 25 cd 25 24 00 	bnd jmpq *0x2425cd(%rip)        # 252df8 <flux_kvs_txn_destroy@Base>
   1082b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010830 <flux_watcher_stop@plt>:
   10830:	f3 0f 1e fa          	endbr64 
   10834:	f2 ff 25 c5 25 24 00 	bnd jmpq *0x2425c5(%rip)        # 252e00 <flux_watcher_stop@Base>
   1083b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010840 <json_unpack_ex@plt>:
   10840:	f3 0f 1e fa          	endbr64 
   10844:	f2 ff 25 bd 25 24 00 	bnd jmpq *0x2425bd(%rip)        # 252e08 <json_unpack_ex@libjansson.so.4>
   1084b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010850 <strtoul@plt>:
   10850:	f3 0f 1e fa          	endbr64 
   10854:	f2 ff 25 b5 25 24 00 	bnd jmpq *0x2425b5(%rip)        # 252e10 <strtoul@GLIBC_2.2.5>
   1085b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010860 <timerfd_settime@plt>:
   10860:	f3 0f 1e fa          	endbr64 
   10864:	f2 ff 25 ad 25 24 00 	bnd jmpq *0x2425ad(%rip)        # 252e18 <timerfd_settime@GLIBC_2.8>
   1086b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010870 <execvp@plt>:
   10870:	f3 0f 1e fa          	endbr64 
   10874:	f2 ff 25 a5 25 24 00 	bnd jmpq *0x2425a5(%rip)        # 252e20 <execvp@GLIBC_2.2.5>
   1087b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010880 <__cxa_atexit@plt>:
   10880:	f3 0f 1e fa          	endbr64 
   10884:	f2 ff 25 9d 25 24 00 	bnd jmpq *0x24259d(%rip)        # 252e28 <__cxa_atexit@GLIBC_2.2.5>
   1088b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010890 <flux_msg_set_userid@plt>:
   10890:	f3 0f 1e fa          	endbr64 
   10894:	f2 ff 25 95 25 24 00 	bnd jmpq *0x242595(%rip)        # 252e30 <flux_msg_set_userid@Base>
   1089b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108a0 <strcat@plt>:
   108a0:	f3 0f 1e fa          	endbr64 
   108a4:	f2 ff 25 8d 25 24 00 	bnd jmpq *0x24258d(%rip)        # 252e38 <strcat@GLIBC_2.2.5>
   108ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108b0 <flux_rpc@plt>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	f2 ff 25 85 25 24 00 	bnd jmpq *0x242585(%rip)        # 252e40 <flux_rpc@Base>
   108bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108c0 <flux_future_aux_set@plt>:
   108c0:	f3 0f 1e fa          	endbr64 
   108c4:	f2 ff 25 7d 25 24 00 	bnd jmpq *0x24257d(%rip)        # 252e48 <flux_future_aux_set@Base>
   108cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108d0 <gethostname@plt>:
   108d0:	f3 0f 1e fa          	endbr64 
   108d4:	f2 ff 25 75 25 24 00 	bnd jmpq *0x242575(%rip)        # 252e50 <gethostname@GLIBC_2.2.5>
   108db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108e0 <epoll_create@plt>:
   108e0:	f3 0f 1e fa          	endbr64 
   108e4:	f2 ff 25 6d 25 24 00 	bnd jmpq *0x24256d(%rip)        # 252e58 <epoll_create@GLIBC_2.3.2>
   108eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000108f0 <pipe2@plt>:
   108f0:	f3 0f 1e fa          	endbr64 
   108f4:	f2 ff 25 65 25 24 00 	bnd jmpq *0x242565(%rip)        # 252e60 <pipe2@GLIBC_2.9>
   108fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010900 <flux_rpc_raw@plt>:
   10900:	f3 0f 1e fa          	endbr64 
   10904:	f2 ff 25 5d 25 24 00 	bnd jmpq *0x24255d(%rip)        # 252e68 <flux_rpc_raw@Base>
   1090b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010910 <exit@plt>:
   10910:	f3 0f 1e fa          	endbr64 
   10914:	f2 ff 25 55 25 24 00 	bnd jmpq *0x242555(%rip)        # 252e70 <exit@GLIBC_2.2.5>
   1091b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010920 <connect@plt>:
   10920:	f3 0f 1e fa          	endbr64 
   10924:	f2 ff 25 4d 25 24 00 	bnd jmpq *0x24254d(%rip)        # 252e78 <connect@GLIBC_2.2.5>
   1092b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010930 <json_object_iter_next@plt>:
   10930:	f3 0f 1e fa          	endbr64 
   10934:	f2 ff 25 45 25 24 00 	bnd jmpq *0x242545(%rip)        # 252e80 <json_object_iter_next@libjansson.so.4>
   1093b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010940 <eventfd@plt>:
   10940:	f3 0f 1e fa          	endbr64 
   10944:	f2 ff 25 3d 25 24 00 	bnd jmpq *0x24253d(%rip)        # 252e88 <eventfd@GLIBC_2.7>
   1094b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010950 <fwrite@plt>:
   10950:	f3 0f 1e fa          	endbr64 
   10954:	f2 ff 25 35 25 24 00 	bnd jmpq *0x242535(%rip)        # 252e90 <fwrite@GLIBC_2.2.5>
   1095b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010960 <__fprintf_chk@plt>:
   10960:	f3 0f 1e fa          	endbr64 
   10964:	f2 ff 25 2d 25 24 00 	bnd jmpq *0x24252d(%rip)        # 252e98 <__fprintf_chk@GLIBC_2.3.4>
   1096b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010970 <json_object@plt>:
   10970:	f3 0f 1e fa          	endbr64 
   10974:	f2 ff 25 25 25 24 00 	bnd jmpq *0x242525(%rip)        # 252ea0 <json_object@libjansson.so.4>
   1097b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010980 <sqrt@plt>:
   10980:	f3 0f 1e fa          	endbr64 
   10984:	f2 ff 25 1d 25 24 00 	bnd jmpq *0x24251d(%rip)        # 252ea8 <sqrt@GLIBC_2.2.5>
   1098b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010990 <getaddrinfo@plt>:
   10990:	f3 0f 1e fa          	endbr64 
   10994:	f2 ff 25 15 25 24 00 	bnd jmpq *0x242515(%rip)        # 252eb0 <getaddrinfo@GLIBC_2.2.5>
   1099b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109a0 <strdup@plt>:
   109a0:	f3 0f 1e fa          	endbr64 
   109a4:	f2 ff 25 0d 25 24 00 	bnd jmpq *0x24250d(%rip)        # 252eb8 <strdup@GLIBC_2.2.5>
   109ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109b0 <flux_event_subscribe@plt>:
   109b0:	f3 0f 1e fa          	endbr64 
   109b4:	f2 ff 25 05 25 24 00 	bnd jmpq *0x242505(%rip)        # 252ec0 <flux_event_subscribe@Base>
   109bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109c0 <flux_msg_set_noresponse@plt>:
   109c0:	f3 0f 1e fa          	endbr64 
   109c4:	f2 ff 25 fd 24 24 00 	bnd jmpq *0x2424fd(%rip)        # 252ec8 <flux_msg_set_noresponse@Base>
   109cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109d0 <strerror@plt>:
   109d0:	f3 0f 1e fa          	endbr64 
   109d4:	f2 ff 25 f5 24 24 00 	bnd jmpq *0x2424f5(%rip)        # 252ed0 <strerror@GLIBC_2.2.5>
   109db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109e0 <flux_msg_get_type@plt>:
   109e0:	f3 0f 1e fa          	endbr64 
   109e4:	f2 ff 25 ed 24 24 00 	bnd jmpq *0x2424ed(%rip)        # 252ed8 <flux_msg_get_type@Base>
   109eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000109f0 <inotify_rm_watch@plt>:
   109f0:	f3 0f 1e fa          	endbr64 
   109f4:	f2 ff 25 e5 24 24 00 	bnd jmpq *0x2424e5(%rip)        # 252ee0 <inotify_rm_watch@GLIBC_2.4>
   109fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a00 <flux_kvs_commit@plt>:
   10a00:	f3 0f 1e fa          	endbr64 
   10a04:	f2 ff 25 dd 24 24 00 	bnd jmpq *0x2424dd(%rip)        # 252ee8 <flux_kvs_commit@Base>
   10a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a10 <flux_future_and_then@plt>:
   10a10:	f3 0f 1e fa          	endbr64 
   10a14:	f2 ff 25 d5 24 24 00 	bnd jmpq *0x2424d5(%rip)        # 252ef0 <flux_future_and_then@Base>
   10a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a20 <json_array@plt>:
   10a20:	f3 0f 1e fa          	endbr64 
   10a24:	f2 ff 25 cd 24 24 00 	bnd jmpq *0x2424cd(%rip)        # 252ef8 <json_array@libjansson.so.4>
   10a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a30 <strptime@plt>:
   10a30:	f3 0f 1e fa          	endbr64 
   10a34:	f2 ff 25 c5 24 24 00 	bnd jmpq *0x2424c5(%rip)        # 252f00 <strptime@GLIBC_2.2.5>
   10a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a40 <pthread_mutex_init@plt>:
   10a40:	f3 0f 1e fa          	endbr64 
   10a44:	f2 ff 25 bd 24 24 00 	bnd jmpq *0x2424bd(%rip)        # 252f08 <pthread_mutex_init@GLIBC_2.2.5>
   10a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a50 <epoll_create1@plt>:
   10a50:	f3 0f 1e fa          	endbr64 
   10a54:	f2 ff 25 b5 24 24 00 	bnd jmpq *0x2424b5(%rip)        # 252f10 <epoll_create1@GLIBC_2.9>
   10a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a60 <__cxa_finalize@plt>:
   10a60:	f3 0f 1e fa          	endbr64 
   10a64:	f2 ff 25 ad 24 24 00 	bnd jmpq *0x2424ad(%rip)        # 252f18 <__cxa_finalize@GLIBC_2.2.5>
   10a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a70 <argz_stringify@plt>:
   10a70:	f3 0f 1e fa          	endbr64 
   10a74:	f2 ff 25 a5 24 24 00 	bnd jmpq *0x2424a5(%rip)        # 252f20 <argz_stringify@GLIBC_2.2.5>
   10a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a80 <sigaddset@plt>:
   10a80:	f3 0f 1e fa          	endbr64 
   10a84:	f2 ff 25 9d 24 24 00 	bnd jmpq *0x24249d(%rip)        # 252f28 <sigaddset@GLIBC_2.2.5>
   10a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010a90 <inotify_init1@plt>:
   10a90:	f3 0f 1e fa          	endbr64 
   10a94:	f2 ff 25 95 24 24 00 	bnd jmpq *0x242495(%rip)        # 252f30 <inotify_init1@GLIBC_2.9>
   10a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010aa0 <fork@plt>:
   10aa0:	f3 0f 1e fa          	endbr64 
   10aa4:	f2 ff 25 8d 24 24 00 	bnd jmpq *0x24248d(%rip)        # 252f38 <fork@GLIBC_2.2.5>
   10aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ab0 <strstr@plt>:
   10ab0:	f3 0f 1e fa          	endbr64 
   10ab4:	f2 ff 25 85 24 24 00 	bnd jmpq *0x242485(%rip)        # 252f40 <strstr@GLIBC_2.2.5>
   10abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ac0 <json_array_append_new@plt>:
   10ac0:	f3 0f 1e fa          	endbr64 
   10ac4:	f2 ff 25 7d 24 24 00 	bnd jmpq *0x24247d(%rip)        # 252f48 <json_array_append_new@libjansson.so.4>
   10acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ad0 <pthread_mutex_lock@plt>:
   10ad0:	f3 0f 1e fa          	endbr64 
   10ad4:	f2 ff 25 75 24 24 00 	bnd jmpq *0x242475(%rip)        # 252f50 <pthread_mutex_lock@GLIBC_2.2.5>
   10adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ae0 <pthread_mutex_trylock@plt>:
   10ae0:	f3 0f 1e fa          	endbr64 
   10ae4:	f2 ff 25 6d 24 24 00 	bnd jmpq *0x24246d(%rip)        # 252f58 <pthread_mutex_trylock@GLIBC_2.2.5>
   10aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010af0 <argz_insert@plt>:
   10af0:	f3 0f 1e fa          	endbr64 
   10af4:	f2 ff 25 65 24 24 00 	bnd jmpq *0x242465(%rip)        # 252f60 <argz_insert@GLIBC_2.2.5>
   10afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b00 <__ctype_b_loc@plt>:
   10b00:	f3 0f 1e fa          	endbr64 
   10b04:	f2 ff 25 5d 24 24 00 	bnd jmpq *0x24245d(%rip)        # 252f68 <__ctype_b_loc@GLIBC_2.3>
   10b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b10 <usleep@plt>:
   10b10:	f3 0f 1e fa          	endbr64 
   10b14:	f2 ff 25 55 24 24 00 	bnd jmpq *0x242455(%rip)        # 252f70 <usleep@GLIBC_2.2.5>
   10b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b20 <json_vpack_ex@plt>:
   10b20:	f3 0f 1e fa          	endbr64 
   10b24:	f2 ff 25 4d 24 24 00 	bnd jmpq *0x24244d(%rip)        # 252f78 <json_vpack_ex@libjansson.so.4>
   10b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b30 <freeaddrinfo@plt>:
   10b30:	f3 0f 1e fa          	endbr64 
   10b34:	f2 ff 25 45 24 24 00 	bnd jmpq *0x242445(%rip)        # 252f80 <freeaddrinfo@GLIBC_2.2.5>
   10b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b40 <json_string@plt>:
   10b40:	f3 0f 1e fa          	endbr64 
   10b44:	f2 ff 25 3d 24 24 00 	bnd jmpq *0x24243d(%rip)        # 252f88 <json_string@libjansson.so.4>
   10b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b50 <__sprintf_chk@plt>:
   10b50:	f3 0f 1e fa          	endbr64 
   10b54:	f2 ff 25 35 24 24 00 	bnd jmpq *0x242435(%rip)        # 252f90 <__sprintf_chk@GLIBC_2.3.4>
   10b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010b60 <socket@plt>:
   10b60:	f3 0f 1e fa          	endbr64 
   10b64:	f2 ff 25 2d 24 24 00 	bnd jmpq *0x24242d(%rip)        # 252f98 <socket@GLIBC_2.2.5>
   10b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000010b70 <lru_cache_put.cold.3>:
   10b70:	e8 7b ef ff ff       	callq  faf0 <abort@plt>

0000000000010b75 <timers_reschedule>:
   10b75:	8b b7 64 02 00 00    	mov    0x264(%rdi),%esi
   10b7b:	31 c0                	xor    %eax,%eax
   10b7d:	39 c6                	cmp    %eax,%esi
   10b7f:	7e 2e                	jle    10baf <timers_reschedule+0x3a>
   10b81:	48 8b 8f 58 02 00 00 	mov    0x258(%rdi),%rcx
   10b88:	48 89 c2             	mov    %rax,%rdx
   10b8b:	48 ff c0             	inc    %rax
   10b8e:	48 c1 e2 04          	shl    $0x4,%rdx
   10b92:	48 8d 54 11 30       	lea    0x30(%rcx,%rdx,1),%rdx
   10b97:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   10b9b:	f2 0f 10 49 20       	movsd  0x20(%rcx),%xmm1
   10ba0:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   10ba4:	f2 0f 11 49 20       	movsd  %xmm1,0x20(%rcx)
   10ba9:	f2 0f 11 0a          	movsd  %xmm1,(%rdx)
   10bad:	eb ce                	jmp    10b7d <timers_reschedule+0x8>
   10baf:	c3                   	retq   

0000000000010bb0 <ev_linux_version>:
   10bb0:	53                   	push   %rbx
   10bb1:	48 81 ec 90 01 00 00 	sub    $0x190,%rsp
   10bb8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10bbf:	00 00 
   10bc1:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   10bc8:	00 
   10bc9:	31 c0                	xor    %eax,%eax
   10bcb:	48 89 e3             	mov    %rsp,%rbx
   10bce:	48 89 df             	mov    %rbx,%rdi
   10bd1:	e8 ba f3 ff ff       	callq  ff90 <uname@plt>
   10bd6:	31 d2                	xor    %edx,%edx
   10bd8:	85 c0                	test   %eax,%eax
   10bda:	75 3e                	jne    10c1a <ev_linux_version+0x6a>
   10bdc:	be 04 00 00 00       	mov    $0x4,%esi
   10be1:	48 8d bb 82 00 00 00 	lea    0x82(%rbx),%rdi
   10be8:	ff ce                	dec    %esi
   10bea:	74 2e                	je     10c1a <ev_linux_version+0x6a>
   10bec:	31 c0                	xor    %eax,%eax
   10bee:	0f be 0f             	movsbl (%rdi),%ecx
   10bf1:	44 8d 41 d0          	lea    -0x30(%rcx),%r8d
   10bf5:	41 80 f8 09          	cmp    $0x9,%r8b
   10bf9:	77 0c                	ja     10c07 <ev_linux_version+0x57>
   10bfb:	6b c0 0a             	imul   $0xa,%eax,%eax
   10bfe:	48 ff c7             	inc    %rdi
   10c01:	8d 44 08 d0          	lea    -0x30(%rax,%rcx,1),%eax
   10c05:	eb e7                	jmp    10bee <ev_linux_version+0x3e>
   10c07:	80 f9 2e             	cmp    $0x2e,%cl
   10c0a:	0f 94 c1             	sete   %cl
   10c0d:	c1 e2 08             	shl    $0x8,%edx
   10c10:	0f b6 c9             	movzbl %cl,%ecx
   10c13:	09 c2                	or     %eax,%edx
   10c15:	48 01 cf             	add    %rcx,%rdi
   10c18:	eb ce                	jmp    10be8 <ev_linux_version+0x38>
   10c1a:	48 8b b4 24 88 01 00 	mov    0x188(%rsp),%rsi
   10c21:	00 
   10c22:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   10c29:	00 00 
   10c2b:	89 d0                	mov    %edx,%eax
   10c2d:	74 05                	je     10c34 <ev_linux_version+0x84>
   10c2f:	e8 1c f2 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   10c34:	48 81 c4 90 01 00 00 	add    $0x190,%rsp
   10c3b:	5b                   	pop    %rbx
   10c3c:	c3                   	retq   

0000000000010c3d <verify_watcher>:
   10c3d:	52                   	push   %rdx
   10c3e:	8b 46 08             	mov    0x8(%rsi),%eax
   10c41:	8d 50 02             	lea    0x2(%rax),%edx
   10c44:	83 fa 04             	cmp    $0x4,%edx
   10c47:	76 1f                	jbe    10c68 <verify_watcher+0x2b>
   10c49:	48 8d 0d 68 24 03 00 	lea    0x32468(%rip),%rcx        # 430b8 <__PRETTY_FUNCTION__.11212>
   10c50:	ba f5 0d 00 00       	mov    $0xdf5,%edx
   10c55:	48 8d 35 05 16 03 00 	lea    0x31605(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10c5c:	48 8d 3d d5 17 03 00 	lea    0x317d5(%rip),%rdi        # 42438 <__FUNCTION__.3752+0x1f8>
   10c63:	e8 98 f3 ff ff       	callq  10000 <__assert_fail@plt>
   10c68:	48 63 46 04          	movslq 0x4(%rsi),%rax
   10c6c:	85 c0                	test   %eax,%eax
   10c6e:	74 31                	je     10ca1 <verify_watcher+0x64>
   10c70:	48 63 d2             	movslq %edx,%rdx
   10c73:	48 c1 e0 04          	shl    $0x4,%rax
   10c77:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   10c7c:	48 39 70 f0          	cmp    %rsi,-0x10(%rax)
   10c80:	74 1f                	je     10ca1 <verify_watcher+0x64>
   10c82:	48 8d 0d 2f 24 03 00 	lea    0x3242f(%rip),%rcx        # 430b8 <__PRETTY_FUNCTION__.11212>
   10c89:	ba f8 0d 00 00       	mov    $0xdf8,%edx
   10c8e:	48 8d 35 cc 15 03 00 	lea    0x315cc(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10c95:	48 8d 3d ec 17 03 00 	lea    0x317ec(%rip),%rdi        # 42488 <__FUNCTION__.3752+0x248>
   10c9c:	e8 5f f3 ff ff       	callq  10000 <__assert_fail@plt>
   10ca1:	58                   	pop    %rax
   10ca2:	c3                   	retq   

0000000000010ca3 <verify_heap>:
   10ca3:	41 56                	push   %r14
   10ca5:	49 89 f6             	mov    %rsi,%r14
   10ca8:	41 55                	push   %r13
   10caa:	4c 8d 6e 30          	lea    0x30(%rsi),%r13
   10cae:	41 54                	push   %r12
   10cb0:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   10cb6:	55                   	push   %rbp
   10cb7:	48 89 fd             	mov    %rdi,%rbp
   10cba:	53                   	push   %rbx
   10cbb:	8d 5a 02             	lea    0x2(%rdx),%ebx
   10cbe:	44 39 e3             	cmp    %r12d,%ebx
   10cc1:	0f 8c a9 00 00 00    	jl     10d70 <verify_heap+0xcd>
   10cc7:	49 8b 75 08          	mov    0x8(%r13),%rsi
   10ccb:	44 39 26             	cmp    %r12d,(%rsi)
   10cce:	74 1f                	je     10cef <verify_heap+0x4c>
   10cd0:	48 8d 0d d1 23 03 00 	lea    0x323d1(%rip),%rcx        # 430a8 <__PRETTY_FUNCTION__.11219>
   10cd7:	ba 03 0e 00 00       	mov    $0xe03,%edx
   10cdc:	48 8d 35 7e 15 03 00 	lea    0x3157e(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10ce3:	48 8d 3d fe 17 03 00 	lea    0x317fe(%rip),%rdi        # 424e8 <__FUNCTION__.3752+0x2a8>
   10cea:	e8 11 f3 ff ff       	callq  10000 <__assert_fail@plt>
   10cef:	f2 41 0f 10 45 00    	movsd  0x0(%r13),%xmm0
   10cf5:	41 83 fc 03          	cmp    $0x3,%r12d
   10cf9:	74 39                	je     10d34 <verify_heap+0x91>
   10cfb:	41 8d 44 24 fc       	lea    -0x4(%r12),%eax
   10d00:	c1 f8 02             	sar    $0x2,%eax
   10d03:	48 98                	cltq   
   10d05:	48 83 c0 03          	add    $0x3,%rax
   10d09:	48 c1 e0 04          	shl    $0x4,%rax
   10d0d:	66 41 0f 2f 04 06    	comisd (%r14,%rax,1),%xmm0
   10d13:	73 1f                	jae    10d34 <verify_heap+0x91>
   10d15:	48 8d 0d 8c 23 03 00 	lea    0x3238c(%rip),%rcx        # 430a8 <__PRETTY_FUNCTION__.11219>
   10d1c:	ba 04 0e 00 00       	mov    $0xe04,%edx
   10d21:	48 8d 35 39 15 03 00 	lea    0x31539(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10d28:	48 8d 3d 09 18 03 00 	lea    0x31809(%rip),%rdi        # 42538 <__FUNCTION__.3752+0x2f8>
   10d2f:	e8 cc f2 ff ff       	callq  10000 <__assert_fail@plt>
   10d34:	49 83 c5 10          	add    $0x10,%r13
   10d38:	66 0f 2e 46 20       	ucomisd 0x20(%rsi),%xmm0
   10d3d:	7a 02                	jp     10d41 <verify_heap+0x9e>
   10d3f:	74 1f                	je     10d60 <verify_heap+0xbd>
   10d41:	48 8d 0d 60 23 03 00 	lea    0x32360(%rip),%rcx        # 430a8 <__PRETTY_FUNCTION__.11219>
   10d48:	ba 05 0e 00 00       	mov    $0xe05,%edx
   10d4d:	48 8d 35 0d 15 03 00 	lea    0x3150d(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10d54:	48 8d 3d 45 18 03 00 	lea    0x31845(%rip),%rdi        # 425a0 <__FUNCTION__.3752+0x360>
   10d5b:	e8 a0 f2 ff ff       	callq  10000 <__assert_fail@plt>
   10d60:	48 89 ef             	mov    %rbp,%rdi
   10d63:	41 ff c4             	inc    %r12d
   10d66:	e8 d2 fe ff ff       	callq  10c3d <verify_watcher>
   10d6b:	e9 4e ff ff ff       	jmpq   10cbe <verify_heap+0x1b>
   10d70:	5b                   	pop    %rbx
   10d71:	5d                   	pop    %rbp
   10d72:	41 5c                	pop    %r12
   10d74:	41 5d                	pop    %r13
   10d76:	41 5e                	pop    %r14
   10d78:	c3                   	retq   

0000000000010d79 <array_verify>:
   10d79:	41 54                	push   %r12
   10d7b:	49 89 fc             	mov    %rdi,%r12
   10d7e:	55                   	push   %rbp
   10d7f:	48 89 f5             	mov    %rsi,%rbp
   10d82:	53                   	push   %rbx
   10d83:	48 63 da             	movslq %edx,%rbx
   10d86:	85 db                	test   %ebx,%ebx
   10d88:	74 35                	je     10dbf <array_verify+0x46>
   10d8a:	48 8b 74 dd f8       	mov    -0x8(%rbp,%rbx,8),%rsi
   10d8f:	39 1e                	cmp    %ebx,(%rsi)
   10d91:	74 1f                	je     10db2 <array_verify+0x39>
   10d93:	48 8d 0d fe 22 03 00 	lea    0x322fe(%rip),%rcx        # 43098 <__PRETTY_FUNCTION__.11228>
   10d9a:	ba 11 0e 00 00       	mov    $0xe11,%edx
   10d9f:	48 8d 35 bb 14 03 00 	lea    0x314bb(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   10da6:	48 8d 3d 4b 18 03 00 	lea    0x3184b(%rip),%rdi        # 425f8 <__FUNCTION__.3752+0x3b8>
   10dad:	e8 4e f2 ff ff       	callq  10000 <__assert_fail@plt>
   10db2:	4c 89 e7             	mov    %r12,%rdi
   10db5:	48 ff cb             	dec    %rbx
   10db8:	e8 80 fe ff ff       	callq  10c3d <verify_watcher>
   10dbd:	eb c7                	jmp    10d86 <array_verify+0xd>
   10dbf:	5b                   	pop    %rbx
   10dc0:	5d                   	pop    %rbp
   10dc1:	41 5c                	pop    %r12
   10dc3:	c3                   	retq   

0000000000010dc4 <ev_syserr>:
   10dc4:	48 8b 05 3d 73 24 00 	mov    0x24733d(%rip),%rax        # 258108 <syserr_cb>
   10dcb:	48 85 c0             	test   %rax,%rax
   10dce:	74 02                	je     10dd2 <ev_syserr+0xe>
   10dd0:	ff e0                	jmpq   *%rax
   10dd2:	50                   	push   %rax
   10dd3:	e8 f8 f9 ff ff       	callq  107d0 <perror@plt>
   10dd8:	e8 13 ed ff ff       	callq  faf0 <abort@plt>

0000000000010ddd <iouring_internal_init>:
   10ddd:	55                   	push   %rbp
   10dde:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   10de3:	53                   	push   %rbx
   10de4:	48 89 fb             	mov    %rdi,%rbx
   10de7:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   10dee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10df5:	00 00 
   10df7:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   10dfc:	31 c0                	xor    %eax,%eax
   10dfe:	48 89 e7             	mov    %rsp,%rdi
   10e01:	48 89 e5             	mov    %rsp,%rbp
   10e04:	c7 83 a4 01 00 00 00 	movl   $0x0,0x1a4(%rbx)
   10e0b:	00 00 00 
   10e0e:	c7 83 10 02 00 00 ff 	movl   $0xffffffff,0x210(%rbx)
   10e15:	ff ff ff 
   10e18:	f3 ab                	rep stos %eax,%es:(%rdi)
   10e1a:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   10e1e:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   10e25:	48 89 83 b8 01 00 00 	mov    %rax,0x1b8(%rbx)
   10e2c:	48 89 83 c0 01 00 00 	mov    %rax,0x1c0(%rbx)
   10e33:	8b 05 d7 72 24 00    	mov    0x2472d7(%rip),%eax        # 258110 <have_monotonic>
   10e39:	85 c0                	test   %eax,%eax
   10e3b:	75 2f                	jne    10e6c <iouring_internal_init+0x8f>
   10e3d:	83 c8 ff             	or     $0xffffffff,%eax
   10e40:	e9 84 01 00 00       	jmpq   10fc9 <iouring_internal_init+0x1ec>
   10e45:	e8 c6 ec ff ff       	callq  fb10 <__errno_location@plt>
   10e4a:	83 38 16             	cmpl   $0x16,(%rax)
   10e4d:	75 ee                	jne    10e3d <iouring_internal_init+0x60>
   10e4f:	83 bb ac 01 00 00 00 	cmpl   $0x0,0x1ac(%rbx)
   10e56:	75 e5                	jne    10e3d <iouring_internal_init+0x60>
   10e58:	8b 83 a8 01 00 00    	mov    0x1a8(%rbx),%eax
   10e5e:	d1 f8                	sar    %eax
   10e60:	89 83 a8 01 00 00    	mov    %eax,0x1a8(%rbx)
   10e66:	89 83 ac 01 00 00    	mov    %eax,0x1ac(%rbx)
   10e6c:	8b b3 a8 01 00 00    	mov    0x1a8(%rbx),%esi
   10e72:	48 89 ea             	mov    %rbp,%rdx
   10e75:	bf a9 01 00 00       	mov    $0x1a9,%edi
   10e7a:	31 c0                	xor    %eax,%eax
   10e7c:	e8 0f f4 ff ff       	callq  10290 <syscall@plt>
   10e81:	89 83 a0 01 00 00    	mov    %eax,0x1a0(%rbx)
   10e87:	85 c0                	test   %eax,%eax
   10e89:	78 ba                	js     10e45 <iouring_internal_init+0x68>
   10e8b:	8b 0c 24             	mov    (%rsp),%ecx
   10e8e:	8b 54 24 40          	mov    0x40(%rsp),%edx
   10e92:	45 31 c9             	xor    %r9d,%r9d
   10e95:	31 ff                	xor    %edi,%edi
   10e97:	41 89 c0             	mov    %eax,%r8d
   10e9a:	8d 34 8a             	lea    (%rdx,%rcx,4),%esi
   10e9d:	8b 54 24 04          	mov    0x4(%rsp),%edx
   10ea1:	c1 e1 06             	shl    $0x6,%ecx
   10ea4:	89 b3 c8 01 00 00    	mov    %esi,0x1c8(%rbx)
   10eaa:	c1 e2 04             	shl    $0x4,%edx
   10ead:	03 54 24 64          	add    0x64(%rsp),%edx
   10eb1:	89 8b d0 01 00 00    	mov    %ecx,0x1d0(%rbx)
   10eb7:	b9 01 80 00 00       	mov    $0x8001,%ecx
   10ebc:	89 93 cc 01 00 00    	mov    %edx,0x1cc(%rbx)
   10ec2:	ba 03 00 00 00       	mov    $0x3,%edx
   10ec7:	e8 a4 ef ff ff       	callq  fe70 <mmap@plt>
   10ecc:	8b b3 cc 01 00 00    	mov    0x1cc(%rbx),%esi
   10ed2:	31 ff                	xor    %edi,%edi
   10ed4:	44 8b 83 a0 01 00 00 	mov    0x1a0(%rbx),%r8d
   10edb:	41 b9 00 00 00 08    	mov    $0x8000000,%r9d
   10ee1:	b9 01 80 00 00       	mov    $0x8001,%ecx
   10ee6:	ba 03 00 00 00       	mov    $0x3,%edx
   10eeb:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   10ef2:	e8 79 ef ff ff       	callq  fe70 <mmap@plt>
   10ef7:	8b b3 d0 01 00 00    	mov    0x1d0(%rbx),%esi
   10efd:	31 ff                	xor    %edi,%edi
   10eff:	44 8b 83 a0 01 00 00 	mov    0x1a0(%rbx),%r8d
   10f06:	41 b9 00 00 00 10    	mov    $0x10000000,%r9d
   10f0c:	b9 01 80 00 00       	mov    $0x8001,%ecx
   10f11:	ba 03 00 00 00       	mov    $0x3,%edx
   10f16:	48 89 83 b8 01 00 00 	mov    %rax,0x1b8(%rbx)
   10f1d:	e8 4e ef ff ff       	callq  fe70 <mmap@plt>
   10f22:	48 83 bb b0 01 00 00 	cmpq   $0xffffffffffffffff,0x1b0(%rbx)
   10f29:	ff 
   10f2a:	48 89 83 c0 01 00 00 	mov    %rax,0x1c0(%rbx)
   10f31:	0f 84 06 ff ff ff    	je     10e3d <iouring_internal_init+0x60>
   10f37:	48 83 bb b8 01 00 00 	cmpq   $0xffffffffffffffff,0x1b8(%rbx)
   10f3e:	ff 
   10f3f:	0f 84 f8 fe ff ff    	je     10e3d <iouring_internal_init+0x60>
   10f45:	48 ff c0             	inc    %rax
   10f48:	0f 84 ef fe ff ff    	je     10e3d <iouring_internal_init+0x60>
   10f4e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   10f52:	be 00 00 08 00       	mov    $0x80000,%esi
   10f57:	bf 01 00 00 00       	mov    $0x1,%edi
   10f5c:	89 83 d4 01 00 00    	mov    %eax,0x1d4(%rbx)
   10f62:	48 8b 44 24 2c       	mov    0x2c(%rsp),%rax
   10f67:	48 89 83 d8 01 00 00 	mov    %rax,0x1d8(%rbx)
   10f6e:	48 8b 44 24 34       	mov    0x34(%rsp),%rax
   10f73:	48 89 83 e0 01 00 00 	mov    %rax,0x1e0(%rbx)
   10f7a:	48 8b 44 24 3c       	mov    0x3c(%rsp),%rax
   10f7f:	48 89 83 e8 01 00 00 	mov    %rax,0x1e8(%rbx)
   10f86:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   10f8b:	48 89 83 f0 01 00 00 	mov    %rax,0x1f0(%rbx)
   10f92:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   10f97:	48 89 83 f8 01 00 00 	mov    %rax,0x1f8(%rbx)
   10f9e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   10fa3:	48 89 83 00 02 00 00 	mov    %rax,0x200(%rbx)
   10faa:	e8 21 f3 ff ff       	callq  102d0 <timerfd_create@plt>
   10faf:	89 83 10 02 00 00    	mov    %eax,0x210(%rbx)
   10fb5:	85 c0                	test   %eax,%eax
   10fb7:	78 10                	js     10fc9 <iouring_internal_init+0x1ec>
   10fb9:	48 8b 05 98 21 03 00 	mov    0x32198(%rip),%rax        # 43158 <__PRETTY_FUNCTION__.11024+0x18>
   10fc0:	48 89 83 08 02 00 00 	mov    %rax,0x208(%rbx)
   10fc7:	31 c0                	xor    %eax,%eax
   10fc9:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   10fce:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   10fd5:	00 00 
   10fd7:	74 05                	je     10fde <iouring_internal_init+0x201>
   10fd9:	e8 72 ee ff ff       	callq  fe50 <__stack_chk_fail@plt>
   10fde:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   10fe5:	5b                   	pop    %rbx
   10fe6:	5d                   	pop    %rbp
   10fe7:	c3                   	retq   

0000000000010fe8 <periodics_reschedule>:
   10fe8:	41 55                	push   %r13
   10fea:	45 31 ed             	xor    %r13d,%r13d
   10fed:	41 54                	push   %r12
   10fef:	55                   	push   %rbp
   10ff0:	48 89 fd             	mov    %rdi,%rbp
   10ff3:	53                   	push   %rbx
   10ff4:	52                   	push   %rdx
   10ff5:	44 8b 95 74 02 00 00 	mov    0x274(%rbp),%r10d
   10ffc:	41 8d 45 03          	lea    0x3(%r13),%eax
   11000:	4c 8b 85 68 02 00 00 	mov    0x268(%rbp),%r8
   11007:	41 8d 52 02          	lea    0x2(%r10),%edx
   1100b:	39 c2                	cmp    %eax,%edx
   1100d:	7c 5f                	jl     1106e <periodics_reschedule+0x86>
   1100f:	4c 89 eb             	mov    %r13,%rbx
   11012:	48 c1 e3 04          	shl    $0x4,%rbx
   11016:	48 83 c3 30          	add    $0x30,%rbx
   1101a:	4d 8b 64 18 08       	mov    0x8(%r8,%rbx,1),%r12
   1101f:	49 8b 44 24 38       	mov    0x38(%r12),%rax
   11024:	48 85 c0             	test   %rax,%rax
   11027:	74 13                	je     1103c <periodics_reschedule+0x54>
   11029:	f2 0f 10 45 00       	movsd  0x0(%rbp),%xmm0
   1102e:	4c 89 e7             	mov    %r12,%rdi
   11031:	ff d0                	callq  *%rax
   11033:	f2 41 0f 11 44 24 20 	movsd  %xmm0,0x20(%r12)
   1103a:	eb 19                	jmp    11055 <periodics_reschedule+0x6d>
   1103c:	0f 57 c9             	xorps  %xmm1,%xmm1
   1103f:	66 41 0f 2e 4c 24 30 	ucomisd 0x30(%r12),%xmm1
   11046:	7a 02                	jp     1104a <periodics_reschedule+0x62>
   11048:	74 0b                	je     11055 <periodics_reschedule+0x6d>
   1104a:	4c 89 e6             	mov    %r12,%rsi
   1104d:	48 89 ef             	mov    %rbp,%rdi
   11050:	e8 bb 64 01 00       	callq  27510 <periodic_recalc>
   11055:	48 03 9d 68 02 00 00 	add    0x268(%rbp),%rbx
   1105c:	49 ff c5             	inc    %r13
   1105f:	48 8b 43 08          	mov    0x8(%rbx),%rax
   11063:	f2 0f 10 40 20       	movsd  0x20(%rax),%xmm0
   11068:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   1106c:	eb 87                	jmp    10ff5 <periodics_reschedule+0xd>
   1106e:	49 8d 78 30          	lea    0x30(%r8),%rdi
   11072:	31 f6                	xor    %esi,%esi
   11074:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1107a:	41 39 f2             	cmp    %esi,%r10d
   1107d:	7e 58                	jle    110d7 <periodics_reschedule+0xef>
   1107f:	f2 0f 10 07          	movsd  (%rdi),%xmm0
   11083:	4c 8b 5f 08          	mov    0x8(%rdi),%r11
   11087:	8d 4e 03             	lea    0x3(%rsi),%ecx
   1108a:	8d 41 fc             	lea    -0x4(%rcx),%eax
   1108d:	99                   	cltd   
   1108e:	41 f7 f9             	idiv   %r9d
   11091:	48 63 d1             	movslq %ecx,%rdx
   11094:	48 c1 e2 04          	shl    $0x4,%rdx
   11098:	4c 01 c2             	add    %r8,%rdx
   1109b:	83 c0 03             	add    $0x3,%eax
   1109e:	39 c1                	cmp    %eax,%ecx
   110a0:	74 22                	je     110c4 <periodics_reschedule+0xdc>
   110a2:	48 63 d8             	movslq %eax,%rbx
   110a5:	48 c1 e3 04          	shl    $0x4,%rbx
   110a9:	4c 01 c3             	add    %r8,%rbx
   110ac:	66 0f 2f 03          	comisd (%rbx),%xmm0
   110b0:	73 10                	jae    110c2 <periodics_reschedule+0xda>
   110b2:	0f 10 13             	movups (%rbx),%xmm2
   110b5:	0f 11 12             	movups %xmm2,(%rdx)
   110b8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   110bc:	89 0a                	mov    %ecx,(%rdx)
   110be:	89 c1                	mov    %eax,%ecx
   110c0:	eb c8                	jmp    1108a <periodics_reschedule+0xa2>
   110c2:	89 c8                	mov    %ecx,%eax
   110c4:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
   110c8:	ff c6                	inc    %esi
   110ca:	48 83 c7 10          	add    $0x10,%rdi
   110ce:	4c 89 5a 08          	mov    %r11,0x8(%rdx)
   110d2:	41 89 03             	mov    %eax,(%r11)
   110d5:	eb a3                	jmp    1107a <periodics_reschedule+0x92>
   110d7:	58                   	pop    %rax
   110d8:	5b                   	pop    %rbx
   110d9:	5d                   	pop    %rbp
   110da:	41 5c                	pop    %r12
   110dc:	41 5d                	pop    %r13
   110de:	c3                   	retq   

00000000000110df <array_realloc>:
   110df:	8b 02                	mov    (%rdx),%eax
   110e1:	49 89 f0             	mov    %rsi,%r8
   110e4:	48 89 d6             	mov    %rdx,%rsi
   110e7:	ff c0                	inc    %eax
   110e9:	01 c0                	add    %eax,%eax
   110eb:	39 c1                	cmp    %eax,%ecx
   110ed:	7f fa                	jg     110e9 <array_realloc+0xa>
   110ef:	89 fa                	mov    %edi,%edx
   110f1:	0f af d0             	imul   %eax,%edx
   110f4:	81 fa e0 0f 00 00    	cmp    $0xfe0,%edx
   110fa:	76 12                	jbe    1110e <array_realloc+0x2f>
   110fc:	8d 84 3a 1f 10 00 00 	lea    0x101f(%rdx,%rdi,1),%eax
   11103:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   11108:	83 e8 20             	sub    $0x20,%eax
   1110b:	99                   	cltd   
   1110c:	f7 ff                	idiv   %edi
   1110e:	89 06                	mov    %eax,(%rsi)
   11110:	0f af c7             	imul   %edi,%eax
   11113:	4c 89 c7             	mov    %r8,%rdi
   11116:	48 63 f0             	movslq %eax,%rsi
   11119:	e9 02 65 01 00       	jmpq   27620 <ev_realloc>

000000000001111e <fd_rearm_all>:
   1111e:	41 55                	push   %r13
   11120:	41 54                	push   %r12
   11122:	4c 8d a7 50 02 00 00 	lea    0x250(%rdi),%r12
   11129:	55                   	push   %rbp
   1112a:	31 ed                	xor    %ebp,%ebp
   1112c:	53                   	push   %rbx
   1112d:	48 89 fb             	mov    %rdi,%rbx
   11130:	52                   	push   %rdx
   11131:	41 89 ed             	mov    %ebp,%r13d
   11134:	39 ab e8 00 00 00    	cmp    %ebp,0xe8(%rbx)
   1113a:	7e 75                	jle    111b1 <fd_rearm_all+0x93>
   1113c:	48 89 e8             	mov    %rbp,%rax
   1113f:	48 c1 e0 04          	shl    $0x4,%rax
   11143:	48 03 83 e0 00 00 00 	add    0xe0(%rbx),%rax
   1114a:	80 78 08 00          	cmpb   $0x0,0x8(%rax)
   1114e:	74 5c                	je     111ac <fd_rearm_all+0x8e>
   11150:	8a 50 09             	mov    0x9(%rax),%dl
   11153:	c6 40 08 00          	movb   $0x0,0x8(%rax)
   11157:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
   1115b:	89 d1                	mov    %edx,%ecx
   1115d:	83 c9 81             	or     $0xffffff81,%ecx
   11160:	88 48 09             	mov    %cl,0x9(%rax)
   11163:	84 d2                	test   %dl,%dl
   11165:	75 45                	jne    111ac <fd_rearm_all+0x8e>
   11167:	8b 83 54 02 00 00    	mov    0x254(%rbx),%eax
   1116d:	48 8b b3 48 02 00 00 	mov    0x248(%rbx),%rsi
   11174:	8d 48 01             	lea    0x1(%rax),%ecx
   11177:	89 8b 54 02 00 00    	mov    %ecx,0x254(%rbx)
   1117d:	3b 8b 50 02 00 00    	cmp    0x250(%rbx),%ecx
   11183:	7e 14                	jle    11199 <fd_rearm_all+0x7b>
   11185:	4c 89 e2             	mov    %r12,%rdx
   11188:	bf 04 00 00 00       	mov    $0x4,%edi
   1118d:	e8 4d ff ff ff       	callq  110df <array_realloc>
   11192:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
   11199:	48 63 93 54 02 00 00 	movslq 0x254(%rbx),%rdx
   111a0:	48 8b 83 48 02 00 00 	mov    0x248(%rbx),%rax
   111a7:	44 89 6c 90 fc       	mov    %r13d,-0x4(%rax,%rdx,4)
   111ac:	48 ff c5             	inc    %rbp
   111af:	eb 80                	jmp    11131 <fd_rearm_all+0x13>
   111b1:	58                   	pop    %rax
   111b2:	5b                   	pop    %rbx
   111b3:	5d                   	pop    %rbp
   111b4:	41 5c                	pop    %r12
   111b6:	41 5d                	pop    %r13
   111b8:	c3                   	retq   

00000000000111b9 <poll_modify.cold.22>:
   111b9:	8d 4e 01             	lea    0x1(%rsi),%ecx
   111bc:	48 8d 97 78 01 00 00 	lea    0x178(%rdi),%rdx
   111c3:	48 89 c6             	mov    %rax,%rsi
   111c6:	bf 04 00 00 00       	mov    $0x4,%edi
   111cb:	e8 0f ff ff ff       	callq  110df <array_realloc>
   111d0:	8b 8b 78 01 00 00    	mov    0x178(%rbx),%ecx
   111d6:	49 63 d5             	movslq %r13d,%rdx
   111d9:	48 89 83 70 01 00 00 	mov    %rax,0x170(%rbx)
   111e0:	48 8d 34 90          	lea    (%rax,%rdx,4),%rsi
   111e4:	31 d2                	xor    %edx,%edx
   111e6:	44 29 e9             	sub    %r13d,%ecx
   111e9:	48 39 d1             	cmp    %rdx,%rcx
   111ec:	0f 84 81 64 01 00    	je     27673 <poll_modify+0x33>
   111f2:	c7 04 96 ff ff ff ff 	movl   $0xffffffff,(%rsi,%rdx,4)
   111f9:	48 83 c2 01          	add    $0x1,%rdx
   111fd:	eb ea                	jmp    111e9 <poll_modify.cold.22+0x30>
   111ff:	48 8d 93 68 01 00 00 	lea    0x168(%rbx),%rdx
   11206:	48 89 c6             	mov    %rax,%rsi
   11209:	bf 08 00 00 00       	mov    $0x8,%edi
   1120e:	e8 cc fe ff ff       	callq  110df <array_realloc>
   11213:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
   1121a:	e9 c7 64 01 00       	jmpq   276e6 <poll_modify+0xa6>

000000000001121f <epoll_epoll_create>:
   1121f:	53                   	push   %rbx
   11220:	bf 00 00 08 00       	mov    $0x80000,%edi
   11225:	e8 26 f8 ff ff       	callq  10a50 <epoll_create1@plt>
   1122a:	89 c3                	mov    %eax,%ebx
   1122c:	85 c0                	test   %eax,%eax
   1122e:	79 32                	jns    11262 <epoll_epoll_create+0x43>
   11230:	e8 db e8 ff ff       	callq  fb10 <__errno_location@plt>
   11235:	8b 00                	mov    (%rax),%eax
   11237:	83 e8 16             	sub    $0x16,%eax
   1123a:	83 e0 ef             	and    $0xffffffef,%eax
   1123d:	75 23                	jne    11262 <epoll_epoll_create+0x43>
   1123f:	bf 00 01 00 00       	mov    $0x100,%edi
   11244:	e8 97 f6 ff ff       	callq  108e0 <epoll_create@plt>
   11249:	89 c3                	mov    %eax,%ebx
   1124b:	85 c0                	test   %eax,%eax
   1124d:	78 13                	js     11262 <epoll_epoll_create+0x43>
   1124f:	89 c7                	mov    %eax,%edi
   11251:	ba 01 00 00 00       	mov    $0x1,%edx
   11256:	be 02 00 00 00       	mov    $0x2,%esi
   1125b:	31 c0                	xor    %eax,%eax
   1125d:	e8 5e ea ff ff       	callq  fcc0 <fcntl@plt>
   11262:	89 d8                	mov    %ebx,%eax
   11264:	5b                   	pop    %rbx
   11265:	c3                   	retq   

0000000000011266 <epoll_init.isra.9>:
   11266:	53                   	push   %rbx
   11267:	48 89 fb             	mov    %rdi,%rbx
   1126a:	e8 b0 ff ff ff       	callq  1121f <epoll_epoll_create>
   1126f:	31 d2                	xor    %edx,%edx
   11271:	89 83 c4 00 00 00    	mov    %eax,0xc4(%rbx)
   11277:	85 c0                	test   %eax,%eax
   11279:	78 4c                	js     112c7 <epoll_init.isra.9+0x61>
   1127b:	48 8b 05 3e e2 02 00 	mov    0x2e23e(%rip),%rax        # 3f4c0 <f58_prefix+0x5d>
   11282:	be 00 03 00 00       	mov    $0x300,%esi
   11287:	31 ff                	xor    %edi,%edi
   11289:	c7 83 88 01 00 00 40 	movl   $0x40,0x188(%rbx)
   11290:	00 00 00 
   11293:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
   1129a:	48 8d 05 af 7e 01 00 	lea    0x17eaf(%rip),%rax        # 29150 <epoll_modify>
   112a1:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
   112a8:	48 8d 05 a1 6a 01 00 	lea    0x16aa1(%rip),%rax        # 27d50 <epoll_poll>
   112af:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
   112b6:	e8 65 63 01 00       	callq  27620 <ev_realloc>
   112bb:	ba 04 00 00 00       	mov    $0x4,%edx
   112c0:	48 89 83 80 01 00 00 	mov    %rax,0x180(%rbx)
   112c7:	89 d0                	mov    %edx,%eax
   112c9:	5b                   	pop    %rbx
   112ca:	c3                   	retq   

00000000000112cb <ev_set_syserr_cb>:
   112cb:	f3 0f 1e fa          	endbr64 
   112cf:	48 89 3d 32 6e 24 00 	mov    %rdi,0x246e32(%rip)        # 258108 <syserr_cb>
   112d6:	c3                   	retq   

00000000000112d7 <ev_set_allocator>:
   112d7:	f3 0f 1e fa          	endbr64 
   112db:	48 89 3d b6 50 24 00 	mov    %rdi,0x2450b6(%rip)        # 256398 <alloc>
   112e2:	c3                   	retq   

00000000000112e3 <ev_feed_event.cold.23>:
   112e3:	48 63 ff             	movslq %edi,%rdi
   112e6:	48 8d 54 bd 58       	lea    0x58(%rbp,%rdi,4),%rdx
   112eb:	bf 10 00 00 00       	mov    $0x10,%edi
   112f0:	e8 ea fd ff ff       	callq  110df <array_realloc>
   112f5:	8b 4b 04             	mov    0x4(%rbx),%ecx
   112f8:	48 89 c6             	mov    %rax,%rsi
   112fb:	49 89 45 40          	mov    %rax,0x40(%r13)
   112ff:	e9 84 68 01 00       	jmpq   27b88 <ev_feed_event+0x48>

0000000000011304 <epoll_poll.cold.24>:
   11304:	48 83 c4 18          	add    $0x18,%rsp
   11308:	48 8d 3d 83 0f 03 00 	lea    0x30f83(%rip),%rdi        # 42292 <__FUNCTION__.3752+0x52>
   1130f:	5b                   	pop    %rbx
   11310:	5d                   	pop    %rbp
   11311:	41 5c                	pop    %r12
   11313:	41 5d                	pop    %r13
   11315:	41 5e                	pop    %r14
   11317:	41 5f                	pop    %r15
   11319:	e9 a6 fa ff ff       	jmpq   10dc4 <ev_syserr>

000000000001131e <ev_version_major>:
   1131e:	f3 0f 1e fa          	endbr64 
   11322:	b8 04 00 00 00       	mov    $0x4,%eax
   11327:	c3                   	retq   

0000000000011328 <ev_version_minor>:
   11328:	f3 0f 1e fa          	endbr64 
   1132c:	b8 21 00 00 00       	mov    $0x21,%eax
   11331:	c3                   	retq   

0000000000011332 <ev_supported_backends>:
   11332:	f3 0f 1e fa          	endbr64 
   11336:	50                   	push   %rax
   11337:	e8 74 f8 ff ff       	callq  10bb0 <ev_linux_version>
   1133c:	5a                   	pop    %rdx
   1133d:	3d 01 06 05 00       	cmp    $0x50601,%eax
   11342:	19 c0                	sbb    %eax,%eax
   11344:	83 e0 80             	and    $0xffffff80,%eax
   11347:	05 84 00 00 00       	add    $0x84,%eax
   1134c:	83 c8 03             	or     $0x3,%eax
   1134f:	c3                   	retq   

0000000000011350 <ev_recommended_backends>:
   11350:	f3 0f 1e fa          	endbr64 
   11354:	50                   	push   %rax
   11355:	e8 d8 ff ff ff       	callq  11332 <ev_supported_backends>
   1135a:	5a                   	pop    %rdx
   1135b:	24 37                	and    $0x37,%al
   1135d:	c3                   	retq   

000000000001135e <ev_embeddable_backends>:
   1135e:	f3 0f 1e fa          	endbr64 
   11362:	50                   	push   %rax
   11363:	e8 48 f8 ff ff       	callq  10bb0 <ev_linux_version>
   11368:	5a                   	pop    %rdx
   11369:	3d 20 06 02 00       	cmp    $0x20620,%eax
   1136e:	19 c0                	sbb    %eax,%eax
   11370:	83 e0 fc             	and    $0xfffffffc,%eax
   11373:	05 ac 00 00 00       	add    $0xac,%eax
   11378:	c3                   	retq   

0000000000011379 <ev_verify>:
   11379:	f3 0f 1e fa          	endbr64 
   1137d:	41 57                	push   %r15
   1137f:	41 56                	push   %r14
   11381:	41 55                	push   %r13
   11383:	41 54                	push   %r12
   11385:	55                   	push   %rbp
   11386:	53                   	push   %rbx
   11387:	48 83 ec 18          	sub    $0x18,%rsp
   1138b:	83 bf bc 00 00 00 ff 	cmpl   $0xffffffff,0xbc(%rdi)
   11392:	7d 1f                	jge    113b3 <ev_verify+0x3a>
   11394:	48 8d 0d 2d 1d 03 00 	lea    0x31d2d(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   1139b:	ba 1f 0e 00 00       	mov    $0xe1f,%edx
   113a0:	48 8d 35 ba 0e 03 00 	lea    0x30eba(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   113a7:	48 8d 3d f7 0e 03 00 	lea    0x30ef7(%rip),%rdi        # 422a5 <__FUNCTION__.3752+0x65>
   113ae:	e8 4d ec ff ff       	callq  10000 <__assert_fail@plt>
   113b3:	48 89 fb             	mov    %rdi,%rbx
   113b6:	8b 97 54 02 00 00    	mov    0x254(%rdi),%edx
   113bc:	31 c0                	xor    %eax,%eax
   113be:	39 97 50 02 00 00    	cmp    %edx,0x250(%rdi)
   113c4:	7d 1f                	jge    113e5 <ev_verify+0x6c>
   113c6:	48 8d 0d fb 1c 03 00 	lea    0x31cfb(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   113cd:	ba 21 0e 00 00       	mov    $0xe21,%edx
   113d2:	48 8d 35 88 0e 03 00 	lea    0x30e88(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   113d9:	48 8d 3d d5 0e 03 00 	lea    0x30ed5(%rip),%rdi        # 422b5 <__FUNCTION__.3752+0x75>
   113e0:	e8 1b ec ff ff       	callq  10000 <__assert_fail@plt>
   113e5:	39 c2                	cmp    %eax,%edx
   113e7:	7e 30                	jle    11419 <ev_verify+0xa0>
   113e9:	48 8b 8b 48 02 00 00 	mov    0x248(%rbx),%rcx
   113f0:	8b 0c 81             	mov    (%rcx,%rax,4),%ecx
   113f3:	48 ff c0             	inc    %rax
   113f6:	85 c9                	test   %ecx,%ecx
   113f8:	79 eb                	jns    113e5 <ev_verify+0x6c>
   113fa:	48 8d 0d c7 1c 03 00 	lea    0x31cc7(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   11401:	ba 23 0e 00 00       	mov    $0xe23,%edx
   11406:	48 8d 35 54 0e 03 00 	lea    0x30e54(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   1140d:	48 8d 3d bc 12 03 00 	lea    0x312bc(%rip),%rdi        # 426d0 <__FUNCTION__.3752+0x490>
   11414:	e8 e7 eb ff ff       	callq  10000 <__assert_fail@plt>
   11419:	44 8b bb e8 00 00 00 	mov    0xe8(%rbx),%r15d
   11420:	45 31 e4             	xor    %r12d,%r12d
   11423:	45 85 ff             	test   %r15d,%r15d
   11426:	79 2e                	jns    11456 <ev_verify+0xdd>
   11428:	48 8d 0d 99 1c 03 00 	lea    0x31c99(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   1142f:	ba 25 0e 00 00       	mov    $0xe25,%edx
   11434:	48 8d 35 26 0e 03 00 	lea    0x30e26(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   1143b:	48 8d 3d 8e 0e 03 00 	lea    0x30e8e(%rip),%rdi        # 422d0 <__FUNCTION__.3752+0x90>
   11442:	e8 b9 eb ff ff       	callq  10000 <__assert_fail@plt>
   11447:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   1144b:	41 89 c6             	mov    %eax,%r14d
   1144e:	48 85 ed             	test   %rbp,%rbp
   11451:	75 28                	jne    1147b <ev_verify+0x102>
   11453:	49 ff c4             	inc    %r12
   11456:	44 89 e2             	mov    %r12d,%edx
   11459:	45 39 e7             	cmp    %r12d,%r15d
   1145c:	0f 8e ab 00 00 00    	jle    1150d <ev_verify+0x194>
   11462:	4c 89 e0             	mov    %r12,%rax
   11465:	45 31 f6             	xor    %r14d,%r14d
   11468:	48 c1 e0 04          	shl    $0x4,%rax
   1146c:	48 03 83 e0 00 00 00 	add    0xe0(%rbx),%rax
   11473:	4c 8b 28             	mov    (%rax),%r13
   11476:	4c 89 ed             	mov    %r13,%rbp
   11479:	eb d3                	jmp    1144e <ev_verify+0xd5>
   1147b:	48 89 ee             	mov    %rbp,%rsi
   1147e:	48 89 df             	mov    %rbx,%rdi
   11481:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   11485:	e8 b3 f7 ff ff       	callq  10c3d <verify_watcher>
   1148a:	41 8d 46 01          	lea    0x1(%r14),%eax
   1148e:	41 80 e6 01          	and    $0x1,%r14b
   11492:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   11496:	74 28                	je     114c0 <ev_verify+0x147>
   11498:	4c 39 ed             	cmp    %r13,%rbp
   1149b:	75 1f                	jne    114bc <ev_verify+0x143>
   1149d:	48 8d 0d 24 1c 03 00 	lea    0x31c24(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   114a4:	ba 30 0e 00 00       	mov    $0xe30,%edx
   114a9:	48 8d 35 b1 0d 03 00 	lea    0x30db1(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   114b0:	48 8d 3d 51 12 03 00 	lea    0x31251(%rip),%rdi        # 42708 <__FUNCTION__.3752+0x4c8>
   114b7:	e8 44 eb ff ff       	callq  10000 <__assert_fail@plt>
   114bc:	4d 8b 6d 20          	mov    0x20(%r13),%r13
   114c0:	83 7d 00 01          	cmpl   $0x1,0x0(%rbp)
   114c4:	74 1f                	je     114e5 <ev_verify+0x16c>
   114c6:	48 8d 0d fb 1b 03 00 	lea    0x31bfb(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   114cd:	ba 34 0e 00 00       	mov    $0xe34,%edx
   114d2:	48 8d 35 88 0d 03 00 	lea    0x30d88(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   114d9:	48 8d 3d 60 12 03 00 	lea    0x31260(%rip),%rdi        # 42740 <__FUNCTION__.3752+0x500>
   114e0:	e8 1b eb ff ff       	callq  10000 <__assert_fail@plt>
   114e5:	39 55 28             	cmp    %edx,0x28(%rbp)
   114e8:	0f 84 59 ff ff ff    	je     11447 <ev_verify+0xce>
   114ee:	48 8d 0d d3 1b 03 00 	lea    0x31bd3(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   114f5:	ba 35 0e 00 00       	mov    $0xe35,%edx
   114fa:	48 8d 35 60 0d 03 00 	lea    0x30d60(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   11501:	48 8d 3d 78 12 03 00 	lea    0x31278(%rip),%rdi        # 42780 <__FUNCTION__.3752+0x540>
   11508:	e8 f3 ea ff ff       	callq  10000 <__assert_fail@plt>
   1150d:	8b 93 64 02 00 00    	mov    0x264(%rbx),%edx
   11513:	39 93 60 02 00 00    	cmp    %edx,0x260(%rbx)
   11519:	7d 1f                	jge    1153a <ev_verify+0x1c1>
   1151b:	48 8d 0d a6 1b 03 00 	lea    0x31ba6(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   11522:	ba 39 0e 00 00       	mov    $0xe39,%edx
   11527:	48 8d 35 33 0d 03 00 	lea    0x30d33(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   1152e:	48 8d 3d a8 0d 03 00 	lea    0x30da8(%rip),%rdi        # 422dd <__FUNCTION__.3752+0x9d>
   11535:	e8 c6 ea ff ff       	callq  10000 <__assert_fail@plt>
   1153a:	48 8b b3 58 02 00 00 	mov    0x258(%rbx),%rsi
   11541:	48 89 df             	mov    %rbx,%rdi
   11544:	e8 5a f7 ff ff       	callq  10ca3 <verify_heap>
   11549:	8b 93 74 02 00 00    	mov    0x274(%rbx),%edx
   1154f:	39 93 70 02 00 00    	cmp    %edx,0x270(%rbx)
   11555:	7d 1f                	jge    11576 <ev_verify+0x1fd>
   11557:	48 8d 0d 6a 1b 03 00 	lea    0x31b6a(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   1155e:	ba 3d 0e 00 00       	mov    $0xe3d,%edx
   11563:	48 8d 35 f7 0c 03 00 	lea    0x30cf7(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   1156a:	48 8d 3d 81 0d 03 00 	lea    0x30d81(%rip),%rdi        # 422f2 <__FUNCTION__.3752+0xb2>
   11571:	e8 8a ea ff ff       	callq  10000 <__assert_fail@plt>
   11576:	48 8b b3 68 02 00 00 	mov    0x268(%rbx),%rsi
   1157d:	48 89 df             	mov    %rbx,%rdi
   11580:	31 ed                	xor    %ebp,%ebp
   11582:	e8 1c f7 ff ff       	callq  10ca3 <verify_heap>
   11587:	8b 44 2b 7c          	mov    0x7c(%rbx,%rbp,1),%eax
   1158b:	39 44 2b 68          	cmp    %eax,0x68(%rbx,%rbp,1)
   1158f:	7d 1f                	jge    115b0 <ev_verify+0x237>
   11591:	48 8d 0d 30 1b 03 00 	lea    0x31b30(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   11598:	ba 43 0e 00 00       	mov    $0xe43,%edx
   1159d:	48 8d 35 bd 0c 03 00 	lea    0x30cbd(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   115a4:	48 8d 3d 1d 12 03 00 	lea    0x3121d(%rip),%rdi        # 427c8 <__FUNCTION__.3752+0x588>
   115ab:	e8 50 ea ff ff       	callq  10000 <__assert_fail@plt>
   115b0:	83 bb c8 02 00 00 00 	cmpl   $0x0,0x2c8(%rbx)
   115b7:	79 1f                	jns    115d8 <ev_verify+0x25f>
   115b9:	48 8d 0d 08 1b 03 00 	lea    0x31b08(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   115c0:	ba 45 0e 00 00       	mov    $0xe45,%edx
   115c5:	48 8d 35 95 0c 03 00 	lea    0x30c95(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   115cc:	48 8d 3d 3a 0d 03 00 	lea    0x30d3a(%rip),%rdi        # 4230d <__FUNCTION__.3752+0xcd>
   115d3:	e8 28 ea ff ff       	callq  10000 <__assert_fail@plt>
   115d8:	8b 84 2b b0 02 00 00 	mov    0x2b0(%rbx,%rbp,1),%eax
   115df:	48 83 ed 04          	sub    $0x4,%rbp
   115e3:	8b 94 2b c8 02 00 00 	mov    0x2c8(%rbx,%rbp,1),%edx
   115ea:	39 d0                	cmp    %edx,%eax
   115ec:	7d 1f                	jge    1160d <ev_verify+0x294>
   115ee:	48 8d 0d d3 1a 03 00 	lea    0x31ad3(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   115f5:	ba 46 0e 00 00       	mov    $0xe46,%edx
   115fa:	48 8d 35 60 0c 03 00 	lea    0x30c60(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   11601:	48 8d 3d 12 0d 03 00 	lea    0x30d12(%rip),%rdi        # 4231a <__FUNCTION__.3752+0xda>
   11608:	e8 f3 e9 ff ff       	callq  10000 <__assert_fail@plt>
   1160d:	48 8b b4 6b a0 02 00 	mov    0x2a0(%rbx,%rbp,2),%rsi
   11614:	00 
   11615:	48 89 df             	mov    %rbx,%rdi
   11618:	e8 5c f7 ff ff       	callq  10d79 <array_verify>
   1161d:	48 83 fd ec          	cmp    $0xffffffffffffffec,%rbp
   11621:	0f 85 60 ff ff ff    	jne    11587 <ev_verify+0x20e>
   11627:	8b 93 fc 02 00 00    	mov    0x2fc(%rbx),%edx
   1162d:	39 93 f8 02 00 00    	cmp    %edx,0x2f8(%rbx)
   11633:	7d 1f                	jge    11654 <ev_verify+0x2db>
   11635:	48 8d 0d 8c 1a 03 00 	lea    0x31a8c(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   1163c:	ba 4c 0e 00 00       	mov    $0xe4c,%edx
   11641:	48 8d 35 19 0c 03 00 	lea    0x30c19(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   11648:	48 8d 3d e6 0c 03 00 	lea    0x30ce6(%rip),%rdi        # 42335 <__FUNCTION__.3752+0xf5>
   1164f:	e8 ac e9 ff ff       	callq  10000 <__assert_fail@plt>
   11654:	48 8b b3 f0 02 00 00 	mov    0x2f0(%rbx),%rsi
   1165b:	48 89 df             	mov    %rbx,%rdi
   1165e:	e8 16 f7 ff ff       	callq  10d79 <array_verify>
   11663:	8b 93 0c 03 00 00    	mov    0x30c(%rbx),%edx
   11669:	39 93 08 03 00 00    	cmp    %edx,0x308(%rbx)
   1166f:	7d 1f                	jge    11690 <ev_verify+0x317>
   11671:	48 8d 0d 50 1a 03 00 	lea    0x31a50(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   11678:	ba 51 0e 00 00       	mov    $0xe51,%edx
   1167d:	48 8d 35 dd 0b 03 00 	lea    0x30bdd(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   11684:	48 8d 3d bd 0c 03 00 	lea    0x30cbd(%rip),%rdi        # 42348 <__FUNCTION__.3752+0x108>
   1168b:	e8 70 e9 ff ff       	callq  10000 <__assert_fail@plt>
   11690:	48 8b b3 00 03 00 00 	mov    0x300(%rbx),%rsi
   11697:	48 89 df             	mov    %rbx,%rdi
   1169a:	e8 da f6 ff ff       	callq  10d79 <array_verify>
   1169f:	8b 93 24 03 00 00    	mov    0x324(%rbx),%edx
   116a5:	39 93 20 03 00 00    	cmp    %edx,0x320(%rbx)
   116ab:	7d 1f                	jge    116cc <ev_verify+0x353>
   116ad:	48 8d 0d 14 1a 03 00 	lea    0x31a14(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   116b4:	ba 56 0e 00 00       	mov    $0xe56,%edx
   116b9:	48 8d 35 a1 0b 03 00 	lea    0x30ba1(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   116c0:	48 8d 3d 9a 0c 03 00 	lea    0x30c9a(%rip),%rdi        # 42361 <__FUNCTION__.3752+0x121>
   116c7:	e8 34 e9 ff ff       	callq  10000 <__assert_fail@plt>
   116cc:	48 8b b3 18 03 00 00 	mov    0x318(%rbx),%rsi
   116d3:	48 89 df             	mov    %rbx,%rdi
   116d6:	e8 9e f6 ff ff       	callq  10d79 <array_verify>
   116db:	8b 93 dc 02 00 00    	mov    0x2dc(%rbx),%edx
   116e1:	39 93 d8 02 00 00    	cmp    %edx,0x2d8(%rbx)
   116e7:	7d 1f                	jge    11708 <ev_verify+0x38f>
   116e9:	48 8d 0d d8 19 03 00 	lea    0x319d8(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   116f0:	ba 5b 0e 00 00       	mov    $0xe5b,%edx
   116f5:	48 8d 35 65 0b 03 00 	lea    0x30b65(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   116fc:	48 8d 3d 73 0c 03 00 	lea    0x30c73(%rip),%rdi        # 42376 <__FUNCTION__.3752+0x136>
   11703:	e8 f8 e8 ff ff       	callq  10000 <__assert_fail@plt>
   11708:	48 8b b3 d0 02 00 00 	mov    0x2d0(%rbx),%rsi
   1170f:	48 89 df             	mov    %rbx,%rdi
   11712:	e8 62 f6 ff ff       	callq  10d79 <array_verify>
   11717:	8b 93 ec 02 00 00    	mov    0x2ec(%rbx),%edx
   1171d:	39 93 e8 02 00 00    	cmp    %edx,0x2e8(%rbx)
   11723:	7d 1f                	jge    11744 <ev_verify+0x3cb>
   11725:	48 8d 0d 9c 19 03 00 	lea    0x3199c(%rip),%rcx        # 430c8 <__PRETTY_FUNCTION__.11238>
   1172c:	ba 60 0e 00 00       	mov    $0xe60,%edx
   11731:	48 8d 35 29 0b 03 00 	lea    0x30b29(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   11738:	48 8d 3d 50 0c 03 00 	lea    0x30c50(%rip),%rdi        # 4238f <__FUNCTION__.3752+0x14f>
   1173f:	e8 bc e8 ff ff       	callq  10000 <__assert_fail@plt>
   11744:	48 8b b3 e0 02 00 00 	mov    0x2e0(%rbx),%rsi
   1174b:	48 83 c4 18          	add    $0x18,%rsp
   1174f:	48 89 df             	mov    %rbx,%rdi
   11752:	5b                   	pop    %rbx
   11753:	5d                   	pop    %rbp
   11754:	41 5c                	pop    %r12
   11756:	41 5d                	pop    %r13
   11758:	41 5e                	pop    %r14
   1175a:	41 5f                	pop    %r15
   1175c:	e9 18 f6 ff ff       	jmpq   10d79 <array_verify>

0000000000011761 <ev_now_update.cold.25>:
   11761:	48 89 df             	mov    %rbx,%rdi
   11764:	e8 7f f8 ff ff       	callq  10fe8 <periodics_reschedule>
   11769:	e9 ee 6e 01 00       	jmpq   2865c <ev_now_update+0x9c>

000000000001176e <ev_io_start.cold.26>:
   1176e:	48 8b b5 e0 00 00 00 	mov    0xe0(%rbp),%rsi
   11775:	41 8d 4c 24 01       	lea    0x1(%r12),%ecx
   1177a:	bf 10 00 00 00       	mov    $0x10,%edi
   1177f:	48 8d 95 e8 00 00 00 	lea    0xe8(%rbp),%rdx
   11786:	e8 54 f9 ff ff       	callq  110df <array_realloc>
   1178b:	8b 95 e8 00 00 00    	mov    0xe8(%rbp),%edx
   11791:	49 63 cd             	movslq %r13d,%rcx
    {
      __warn_memset_zero_len ();
      return __dest;
    }
#endif
  return __builtin___memset_chk (__dest, __ch, __len,
   11794:	31 f6                	xor    %esi,%esi
   11796:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
   1179d:	48 c1 e1 04          	shl    $0x4,%rcx
   117a1:	44 29 ea             	sub    %r13d,%edx
   117a4:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
   117a8:	48 63 d2             	movslq %edx,%rdx
   117ab:	48 c1 e2 04          	shl    $0x4,%rdx
   117af:	e8 7c e8 ff ff       	callq  10030 <memset@plt>
   117b4:	e9 16 71 01 00       	jmpq   288cf <ev_io_start+0x6f>
   117b9:	48 8d 95 50 02 00 00 	lea    0x250(%rbp),%rdx
   117c0:	48 89 c6             	mov    %rax,%rsi
   117c3:	bf 04 00 00 00       	mov    $0x4,%edi
   117c8:	e8 12 f9 ff ff       	callq  110df <array_realloc>
   117cd:	8b 8d 54 02 00 00    	mov    0x254(%rbp),%ecx
   117d3:	48 89 85 48 02 00 00 	mov    %rax,0x248(%rbp)
   117da:	e9 50 71 01 00       	jmpq   2892f <ev_io_start+0xcf>

00000000000117df <evtimerfd_init>:
   117df:	83 bf a8 04 00 00 00 	cmpl   $0x0,0x4a8(%rdi)
   117e6:	0f 85 80 00 00 00    	jne    1186c <evtimerfd_init+0x8d>
   117ec:	53                   	push   %rbx
   117ed:	be 00 08 08 00       	mov    $0x80800,%esi
   117f2:	48 89 fb             	mov    %rdi,%rbx
   117f5:	31 ff                	xor    %edi,%edi
   117f7:	e8 d4 ea ff ff       	callq  102d0 <timerfd_create@plt>
   117fc:	89 83 a0 04 00 00    	mov    %eax,0x4a0(%rbx)
   11802:	85 c0                	test   %eax,%eax
   11804:	78 64                	js     1186a <evtimerfd_init+0x8b>
   11806:	89 c7                	mov    %eax,%edi
   11808:	e8 d3 5c 01 00       	callq  274e0 <fd_intern>
   1180d:	48 8d 05 2c 62 01 00 	lea    0x1622c(%rip),%rax        # 27a40 <timerfdcb>
   11814:	48 8d b3 a8 04 00 00 	lea    0x4a8(%rbx),%rsi
   1181b:	48 89 df             	mov    %rbx,%rdi
   1181e:	48 89 83 c0 04 00 00 	mov    %rax,0x4c0(%rbx)
   11825:	8b 83 a0 04 00 00    	mov    0x4a0(%rbx),%eax
   1182b:	c7 83 d4 04 00 00 81 	movl   $0x81,0x4d4(%rbx)
   11832:	00 00 00 
   11835:	89 83 d0 04 00 00    	mov    %eax,0x4d0(%rbx)
   1183b:	48 c7 83 a8 04 00 00 	movq   $0x0,0x4a8(%rbx)
   11842:	00 00 00 00 
   11846:	c7 83 b0 04 00 00 fe 	movl   $0xfffffffe,0x4b0(%rbx)
   1184d:	ff ff ff 
   11850:	e8 0b 70 01 00       	callq  28860 <ev_io_start>
   11855:	48 89 df             	mov    %rbx,%rdi
   11858:	e8 53 6d 01 00       	callq  285b0 <ev_unref>
   1185d:	48 89 df             	mov    %rbx,%rdi
   11860:	31 d2                	xor    %edx,%edx
   11862:	31 f6                	xor    %esi,%esi
   11864:	5b                   	pop    %rbx
   11865:	e9 d6 61 01 00       	jmpq   27a40 <timerfdcb>
   1186a:	5b                   	pop    %rbx
   1186b:	c3                   	retq   
   1186c:	c3                   	retq   

000000000001186d <evpipe_init>:
   1186d:	55                   	push   %rbp
   1186e:	53                   	push   %rbx
   1186f:	48 83 ec 18          	sub    $0x18,%rsp
   11873:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1187a:	00 00 
   1187c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11881:	31 c0                	xor    %eax,%eax
   11883:	83 bf f8 00 00 00 00 	cmpl   $0x0,0xf8(%rdi)
   1188a:	0f 85 cd 00 00 00    	jne    1195d <evpipe_init+0xf0>
   11890:	48 89 fb             	mov    %rdi,%rbx
   11893:	be 00 08 08 00       	mov    $0x80800,%esi
   11898:	31 ff                	xor    %edi,%edi
   1189a:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%rsp)
   118a1:	e8 9a f0 ff ff       	callq  10940 <eventfd@plt>
   118a6:	89 44 24 04          	mov    %eax,0x4(%rsp)
   118aa:	85 c0                	test   %eax,%eax
   118ac:	79 40                	jns    118ee <evpipe_init+0x81>
   118ae:	e8 5d e2 ff ff       	callq  fb10 <__errno_location@plt>
   118b3:	83 38 16             	cmpl   $0x16,(%rax)
   118b6:	75 11                	jne    118c9 <evpipe_init+0x5c>
   118b8:	31 f6                	xor    %esi,%esi
   118ba:	31 ff                	xor    %edi,%edi
   118bc:	e8 7f f0 ff ff       	callq  10940 <eventfd@plt>
   118c1:	89 44 24 04          	mov    %eax,0x4(%rsp)
   118c5:	85 c0                	test   %eax,%eax
   118c7:	79 25                	jns    118ee <evpipe_init+0x81>
   118c9:	48 89 e5             	mov    %rsp,%rbp
   118cc:	48 89 ef             	mov    %rbp,%rdi
   118cf:	e8 fc e7 ff ff       	callq  100d0 <pipe@plt>
   118d4:	85 c0                	test   %eax,%eax
   118d6:	74 0e                	je     118e6 <evpipe_init+0x79>
   118d8:	48 8d 3d 09 10 03 00 	lea    0x31009(%rip),%rdi        # 428e8 <__FUNCTION__.3752+0x6a8>
   118df:	e8 e0 f4 ff ff       	callq  10dc4 <ev_syserr>
   118e4:	eb e6                	jmp    118cc <evpipe_init+0x5f>
   118e6:	8b 3c 24             	mov    (%rsp),%edi
   118e9:	e8 f2 5b 01 00       	callq  274e0 <fd_intern>
   118ee:	8b 04 24             	mov    (%rsp),%eax
   118f1:	8b b3 f0 00 00 00    	mov    0xf0(%rbx),%esi
   118f7:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   118fb:	89 83 ec 00 00 00    	mov    %eax,0xec(%rbx)
   11901:	85 f6                	test   %esi,%esi
   11903:	79 08                	jns    1190d <evpipe_init+0xa0>
   11905:	89 bb f0 00 00 00    	mov    %edi,0xf0(%rbx)
   1190b:	eb 0e                	jmp    1191b <evpipe_init+0xae>
   1190d:	e8 8e e5 ff ff       	callq  fea0 <dup2@plt>
   11912:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   11916:	e8 95 e7 ff ff       	callq  100b0 <close@plt>
   1191b:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
   11921:	e8 ba 5b 01 00       	callq  274e0 <fd_intern>
   11926:	8b 83 ec 00 00 00    	mov    0xec(%rbx),%eax
   1192c:	85 c0                	test   %eax,%eax
   1192e:	79 06                	jns    11936 <evpipe_init+0xc9>
   11930:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
   11936:	89 83 20 01 00 00    	mov    %eax,0x120(%rbx)
   1193c:	48 89 df             	mov    %rbx,%rdi
   1193f:	48 8d b3 f8 00 00 00 	lea    0xf8(%rbx),%rsi
   11946:	c7 83 24 01 00 00 81 	movl   $0x81,0x124(%rbx)
   1194d:	00 00 00 
   11950:	e8 0b 6f 01 00       	callq  28860 <ev_io_start>
   11955:	48 89 df             	mov    %rbx,%rdi
   11958:	e8 53 6c 01 00       	callq  285b0 <ev_unref>
   1195d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11962:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11969:	00 00 
   1196b:	74 05                	je     11972 <evpipe_init+0x105>
   1196d:	e8 de e4 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   11972:	48 83 c4 18          	add    $0x18,%rsp
   11976:	5b                   	pop    %rbx
   11977:	5d                   	pop    %rbp
   11978:	c3                   	retq   

0000000000011979 <ev_io_stop.cold.27>:
   11979:	48 8d 93 50 02 00 00 	lea    0x250(%rbx),%rdx
   11980:	48 89 c6             	mov    %rax,%rsi
   11983:	bf 04 00 00 00       	mov    $0x4,%edi
   11988:	e8 52 f7 ff ff       	callq  110df <array_realloc>
   1198d:	8b 8b 54 02 00 00    	mov    0x254(%rbx),%ecx
   11993:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
   1199a:	e9 e1 70 01 00       	jmpq   28a80 <ev_io_stop+0xd0>

000000000001199f <iouring_internal_destroy>:
   1199f:	53                   	push   %rbx
   119a0:	48 89 fb             	mov    %rdi,%rbx
   119a3:	8b bf 10 02 00 00    	mov    0x210(%rdi),%edi
   119a9:	e8 02 e7 ff ff       	callq  100b0 <close@plt>
   119ae:	8b bb a0 01 00 00    	mov    0x1a0(%rbx),%edi
   119b4:	e8 f7 e6 ff ff       	callq  100b0 <close@plt>
   119b9:	48 8b bb b0 01 00 00 	mov    0x1b0(%rbx),%rdi
   119c0:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   119c4:	74 0b                	je     119d1 <iouring_internal_destroy+0x32>
   119c6:	8b b3 c8 01 00 00    	mov    0x1c8(%rbx),%esi
   119cc:	e8 0f ec ff ff       	callq  105e0 <munmap@plt>
   119d1:	48 8b bb b8 01 00 00 	mov    0x1b8(%rbx),%rdi
   119d8:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   119dc:	74 0b                	je     119e9 <iouring_internal_destroy+0x4a>
   119de:	8b b3 cc 01 00 00    	mov    0x1cc(%rbx),%esi
   119e4:	e8 f7 eb ff ff       	callq  105e0 <munmap@plt>
   119e9:	48 8b bb c0 01 00 00 	mov    0x1c0(%rbx),%rdi
   119f0:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   119f4:	74 0b                	je     11a01 <iouring_internal_destroy+0x62>
   119f6:	8b b3 d0 01 00 00    	mov    0x1d0(%rbx),%esi
   119fc:	e8 df eb ff ff       	callq  105e0 <munmap@plt>
   11a01:	83 bb 18 02 00 00 00 	cmpl   $0x0,0x218(%rbx)
   11a08:	74 17                	je     11a21 <iouring_internal_destroy+0x82>
   11a0a:	48 89 df             	mov    %rbx,%rdi
   11a0d:	e8 8e 6b 01 00       	callq  285a0 <ev_ref>
   11a12:	48 8d b3 18 02 00 00 	lea    0x218(%rbx),%rsi
   11a19:	48 89 df             	mov    %rbx,%rdi
   11a1c:	e8 8f 6f 01 00       	callq  289b0 <ev_io_stop>
   11a21:	5b                   	pop    %rbx
   11a22:	c3                   	retq   

0000000000011a23 <loop_init>:
   11a23:	41 54                	push   %r12
   11a25:	55                   	push   %rbp
   11a26:	53                   	push   %rbx
   11a27:	48 83 ec 20          	sub    $0x20,%rsp
   11a2b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11a32:	00 00 
   11a34:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11a39:	31 c0                	xor    %eax,%eax
   11a3b:	83 bf b8 00 00 00 00 	cmpl   $0x0,0xb8(%rdi)
   11a42:	0f 85 9f 03 00 00    	jne    11de7 <loop_init+0x3c4>
   11a48:	8b 05 c2 66 24 00    	mov    0x2466c2(%rip),%eax        # 258110 <have_monotonic>
   11a4e:	48 89 fb             	mov    %rdi,%rbx
   11a51:	89 f5                	mov    %esi,%ebp
   11a53:	89 b3 d8 04 00 00    	mov    %esi,0x4d8(%rbx)
   11a59:	85 c0                	test   %eax,%eax
   11a5b:	75 1b                	jne    11a78 <loop_init+0x55>
   11a5d:	48 89 e6             	mov    %rsp,%rsi
   11a60:	bf 01 00 00 00       	mov    $0x1,%edi
   11a65:	e8 76 e2 ff ff       	callq  fce0 <clock_gettime@plt>
   11a6a:	85 c0                	test   %eax,%eax
   11a6c:	75 0a                	jne    11a78 <loop_init+0x55>
   11a6e:	c7 05 98 66 24 00 01 	movl   $0x1,0x246698(%rip)        # 258110 <have_monotonic>
   11a75:	00 00 00 
   11a78:	0f ba e5 19          	bt     $0x19,%ebp
   11a7c:	73 0b                	jae    11a89 <loop_init+0x66>
   11a7e:	e8 8d e2 ff ff       	callq  fd10 <getpid@plt>
   11a83:	89 83 30 01 00 00    	mov    %eax,0x130(%rbx)
   11a89:	0f ba e5 18          	bt     $0x18,%ebp
   11a8d:	72 52                	jb     11ae1 <loop_init+0xbe>
   11a8f:	e8 cc e3 ff ff       	callq  fe60 <getuid@plt>
   11a94:	41 89 c4             	mov    %eax,%r12d
   11a97:	e8 b4 e5 ff ff       	callq  10050 <geteuid@plt>
   11a9c:	41 39 c4             	cmp    %eax,%r12d
   11a9f:	75 40                	jne    11ae1 <loop_init+0xbe>
   11aa1:	e8 da e8 ff ff       	callq  10380 <getgid@plt>
   11aa6:	41 89 c4             	mov    %eax,%r12d
   11aa9:	e8 92 ea ff ff       	callq  10540 <getegid@plt>
   11aae:	41 39 c4             	cmp    %eax,%r12d
   11ab1:	75 2e                	jne    11ae1 <loop_init+0xbe>
   11ab3:	48 8d 3d ea 08 03 00 	lea    0x308ea(%rip),%rdi        # 423a4 <__FUNCTION__.3752+0x164>
   11aba:	e8 91 df ff ff       	callq  fa50 <getenv@plt>
   11abf:	48 85 c0             	test   %rax,%rax
   11ac2:	74 1d                	je     11ae1 <loop_init+0xbe>
   11ac4:	48 8d 3d d9 08 03 00 	lea    0x308d9(%rip),%rdi        # 423a4 <__FUNCTION__.3752+0x164>
   11acb:	e8 80 df ff ff       	callq  fa50 <getenv@plt>

#ifdef __USE_EXTERN_INLINES
__extern_inline int
__NTH (atoi (const char *__nptr))
{
  return (int) strtol (__nptr, (char **) NULL, 10);
   11ad0:	ba 0a 00 00 00       	mov    $0xa,%edx
   11ad5:	31 f6                	xor    %esi,%esi
   11ad7:	48 89 c7             	mov    %rax,%rdi
   11ada:	e8 01 e8 ff ff       	callq  102e0 <strtol@plt>
   11adf:	89 c5                	mov    %eax,%ebp
   11ae1:	e8 fa 5e 01 00       	callq  279e0 <ev_time>
   11ae6:	8b 05 24 66 24 00    	mov    0x246624(%rip),%eax        # 258110 <have_monotonic>
   11aec:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   11af0:	85 c0                	test   %eax,%eax
   11af2:	74 28                	je     11b1c <loop_init+0xf9>
   11af4:	48 89 e6             	mov    %rsp,%rsi
   11af7:	bf 01 00 00 00       	mov    $0x1,%edi
   11afc:	e8 df e1 ff ff       	callq  fce0 <clock_gettime@plt>
   11b01:	f2 48 0f 2a 44 24 08 	cvtsi2sdq 0x8(%rsp),%xmm0
   11b08:	f2 0f 59 05 90 16 03 	mulsd  0x31690(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   11b0f:	00 
   11b10:	f2 48 0f 2a 0c 24    	cvtsi2sdq (%rsp),%xmm1
   11b16:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   11b1a:	eb 05                	jmp    11b21 <loop_init+0xfe>
   11b1c:	e8 bf 5e 01 00       	callq  279e0 <ev_time>
   11b21:	48 8d 05 18 59 01 00 	lea    0x15918(%rip),%rax        # 27440 <ev_invoke_pending>
   11b28:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
   11b2c:	f2 0f 11 43 10       	movsd  %xmm0,0x10(%rbx)
   11b31:	c7 83 e8 03 00 00 00 	movl   $0x0,0x3e8(%rbx)
   11b38:	00 00 00 
   11b3b:	48 89 83 00 05 00 00 	mov    %rax,0x500(%rbx)
   11b42:	89 e8                	mov    %ebp,%eax
   11b44:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   11b48:	25 00 00 10 00       	and    $0x100000,%eax
   11b4d:	f2 0f 11 43 08       	movsd  %xmm0,0x8(%rbx)
   11b52:	c7 83 10 03 00 00 00 	movl   $0x0,0x310(%rbx)
   11b59:	00 00 00 
   11b5c:	83 f8 01             	cmp    $0x1,%eax
   11b5f:	19 c0                	sbb    %eax,%eax
   11b61:	f2 0f 11 4b 18       	movsd  %xmm1,0x18(%rbx)
   11b66:	c7 83 2c 01 00 00 00 	movl   $0x0,0x12c(%rbx)
   11b6d:	00 00 00 
   11b70:	ff c8                	dec    %eax
   11b72:	89 83 28 03 00 00    	mov    %eax,0x328(%rbx)
   11b78:	89 e8                	mov    %ebp,%eax
   11b7a:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   11b81:	00 00 00 00 
   11b85:	25 00 00 20 00       	and    $0x200000,%eax
   11b8a:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
   11b91:	00 00 00 00 
   11b95:	83 f8 01             	cmp    $0x1,%eax
   11b98:	c7 83 b8 00 00 00 00 	movl   $0x0,0xb8(%rbx)
   11b9f:	00 00 00 
   11ba2:	19 c0                	sbb    %eax,%eax
   11ba4:	c7 83 c4 00 00 00 ff 	movl   $0xffffffff,0xc4(%rbx)
   11bab:	ff ff ff 
   11bae:	83 c8 fe             	or     $0xfffffffe,%eax
   11bb1:	89 83 ec 03 00 00    	mov    %eax,0x3ec(%rbx)
   11bb7:	89 e8                	mov    %ebp,%eax
   11bb9:	c7 83 28 01 00 00 00 	movl   $0x0,0x128(%rbx)
   11bc0:	00 00 00 
   11bc3:	25 00 00 80 00       	and    $0x800000,%eax
   11bc8:	48 c7 83 ec 00 00 00 	movq   $0xffffffffffffffff,0xec(%rbx)
   11bcf:	ff ff ff ff 
   11bd3:	83 f8 01             	cmp    $0x1,%eax
   11bd6:	19 c0                	sbb    %eax,%eax
   11bd8:	ff c8                	dec    %eax
   11bda:	89 83 a0 04 00 00    	mov    %eax,0x4a0(%rbx)
   11be0:	66 85 ed             	test   %bp,%bp
   11be3:	75 14                	jne    11bf9 <loop_init+0x1d6>
   11be5:	e8 66 f7 ff ff       	callq  11350 <ev_recommended_backends>
   11bea:	83 bb b8 00 00 00 00 	cmpl   $0x0,0xb8(%rbx)
   11bf1:	0f 85 aa 01 00 00    	jne    11da1 <loop_init+0x37e>
   11bf7:	09 c5                	or     %eax,%ebp
   11bf9:	40 f6 c5 80          	test   $0x80,%bpl
   11bfd:	75 0f                	jne    11c0e <loop_init+0x1eb>
   11bff:	40 f6 c5 04          	test   $0x4,%bpl
   11c03:	0f 84 c1 00 00 00    	je     11cca <loop_init+0x2a7>
   11c09:	e9 a6 00 00 00       	jmpq   11cb4 <loop_init+0x291>
   11c0e:	48 c7 83 a8 01 00 00 	movq   $0x20,0x1a8(%rbx)
   11c15:	20 00 00 00 
   11c19:	48 89 df             	mov    %rbx,%rdi
   11c1c:	e8 bc f1 ff ff       	callq  10ddd <iouring_internal_init>
   11c21:	85 c0                	test   %eax,%eax
   11c23:	79 14                	jns    11c39 <loop_init+0x216>
   11c25:	48 89 df             	mov    %rbx,%rdi
   11c28:	e8 72 fd ff ff       	callq  1199f <iouring_internal_destroy>
   11c2d:	c7 83 b8 00 00 00 00 	movl   $0x0,0xb8(%rbx)
   11c34:	00 00 00 
   11c37:	eb c6                	jmp    11bff <loop_init+0x1dc>
   11c39:	48 8d 05 e0 57 01 00 	lea    0x157e0(%rip),%rax        # 27420 <iouring_tfd_cb>
   11c40:	48 89 df             	mov    %rbx,%rdi
   11c43:	c7 83 44 02 00 00 81 	movl   $0x81,0x244(%rbx)
   11c4a:	00 00 00 
   11c4d:	48 8d b3 18 02 00 00 	lea    0x218(%rbx),%rsi
   11c54:	48 89 83 30 02 00 00 	mov    %rax,0x230(%rbx)
   11c5b:	8b 83 10 02 00 00    	mov    0x210(%rbx),%eax
   11c61:	48 c7 83 18 02 00 00 	movq   $0x0,0x218(%rbx)
   11c68:	00 00 00 00 
   11c6c:	89 83 40 02 00 00    	mov    %eax,0x240(%rbx)
   11c72:	c7 83 20 02 00 00 fe 	movl   $0xfffffffe,0x220(%rbx)
   11c79:	ff ff ff 
   11c7c:	e8 df 6b 01 00       	callq  28860 <ev_io_start>
   11c81:	48 89 df             	mov    %rbx,%rdi
   11c84:	e8 27 69 01 00       	callq  285b0 <ev_unref>
   11c89:	48 8d 05 80 73 01 00 	lea    0x17380(%rip),%rax        # 29010 <iouring_modify>
   11c90:	c7 83 b8 00 00 00 80 	movl   $0x80,0xb8(%rbx)
   11c97:	00 00 00 
   11c9a:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
   11ca1:	48 8d 05 68 70 01 00 	lea    0x17068(%rip),%rax        # 28d10 <iouring_poll>
   11ca8:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
   11caf:	e9 ed 00 00 00       	jmpq   11da1 <loop_init+0x37e>
   11cb4:	48 89 df             	mov    %rbx,%rdi
   11cb7:	e8 aa f5 ff ff       	callq  11266 <epoll_init.isra.9>
   11cbc:	89 83 b8 00 00 00    	mov    %eax,0xb8(%rbx)
   11cc2:	85 c0                	test   %eax,%eax
   11cc4:	0f 85 d7 00 00 00    	jne    11da1 <loop_init+0x37e>
   11cca:	40 f6 c5 02          	test   $0x2,%bpl
   11cce:	74 61                	je     11d31 <loop_init+0x30e>
   11cd0:	48 8b 05 e9 d7 02 00 	mov    0x2d7e9(%rip),%rax        # 3f4c0 <f58_prefix+0x5d>
   11cd7:	48 c7 83 60 01 00 00 	movq   $0x0,0x160(%rbx)
   11cde:	00 00 00 00 
   11ce2:	48 c7 83 68 01 00 00 	movq   $0x0,0x168(%rbx)
   11ce9:	00 00 00 00 
   11ced:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
   11cf4:	48 8d 05 45 59 01 00 	lea    0x15945(%rip),%rax        # 27640 <poll_modify>
   11cfb:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
   11d02:	48 8d 05 27 76 01 00 	lea    0x17627(%rip),%rax        # 29330 <poll_poll>
   11d09:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
   11d10:	48 c7 83 70 01 00 00 	movq   $0x0,0x170(%rbx)
   11d17:	00 00 00 00 
   11d1b:	c7 83 78 01 00 00 00 	movl   $0x0,0x178(%rbx)
   11d22:	00 00 00 
   11d25:	c7 83 b8 00 00 00 02 	movl   $0x2,0xb8(%rbx)
   11d2c:	00 00 00 
   11d2f:	eb 70                	jmp    11da1 <loop_init+0x37e>
   11d31:	40 80 e5 01          	and    $0x1,%bpl
   11d35:	74 6a                	je     11da1 <loop_init+0x37e>
   11d37:	48 8b 05 42 14 03 00 	mov    0x31442(%rip),%rax        # 43180 <__PRETTY_FUNCTION__.11024+0x40>
   11d3e:	c7 83 58 01 00 00 00 	movl   $0x0,0x158(%rbx)
   11d45:	00 00 00 
   11d48:	48 c7 83 38 01 00 00 	movq   $0x0,0x138(%rbx)
   11d4f:	00 00 00 00 
   11d53:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
   11d5a:	48 8d 05 8f 5a 01 00 	lea    0x15a8f(%rip),%rax        # 277f0 <select_modify>
   11d61:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
   11d68:	48 8d 05 a1 77 01 00 	lea    0x177a1(%rip),%rax        # 29510 <select_poll>
   11d6f:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
   11d76:	48 c7 83 40 01 00 00 	movq   $0x0,0x140(%rbx)
   11d7d:	00 00 00 00 
   11d81:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   11d88:	00 00 00 00 
   11d8c:	48 c7 83 50 01 00 00 	movq   $0x0,0x150(%rbx)
   11d93:	00 00 00 00 
   11d97:	c7 83 b8 00 00 00 01 	movl   $0x1,0xb8(%rbx)
   11d9e:	00 00 00 
   11da1:	48 8d 05 68 56 01 00 	lea    0x15668(%rip),%rax        # 27410 <pendingcb>
   11da8:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
   11daf:	00 00 00 00 
   11db3:	48 89 83 a0 00 00 00 	mov    %rax,0xa0(%rbx)
   11dba:	48 8d 05 df 64 01 00 	lea    0x164df(%rip),%rax        # 282a0 <pipecb>
   11dc1:	c7 83 90 00 00 00 00 	movl   $0x0,0x90(%rbx)
   11dc8:	00 00 00 
   11dcb:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
   11dd2:	48 c7 83 f8 00 00 00 	movq   $0x0,0xf8(%rbx)
   11dd9:	00 00 00 00 
   11ddd:	c7 83 00 01 00 00 02 	movl   $0x2,0x100(%rbx)
   11de4:	00 00 00 
   11de7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   11dec:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   11df3:	00 00 
   11df5:	74 05                	je     11dfc <loop_init+0x3d9>
   11df7:	e8 54 e0 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   11dfc:	48 83 c4 20          	add    $0x20,%rsp
   11e00:	5b                   	pop    %rbx
   11e01:	5d                   	pop    %rbp
   11e02:	41 5c                	pop    %r12
   11e04:	c3                   	retq   

0000000000011e05 <ev_loop_new>:
   11e05:	f3 0f 1e fa          	endbr64 
   11e09:	55                   	push   %rbp
   11e0a:	89 fd                	mov    %edi,%ebp
   11e0c:	be 08 05 00 00       	mov    $0x508,%esi
   11e11:	31 ff                	xor    %edi,%edi
   11e13:	53                   	push   %rbx
   11e14:	51                   	push   %rcx
   11e15:	e8 06 58 01 00       	callq  27620 <ev_realloc>
   11e1a:	b9 42 01 00 00       	mov    $0x142,%ecx
   11e1f:	89 ee                	mov    %ebp,%esi
   11e21:	48 89 c3             	mov    %rax,%rbx
   11e24:	31 c0                	xor    %eax,%eax
   11e26:	48 89 df             	mov    %rbx,%rdi
   11e29:	f3 ab                	rep stos %eax,%es:(%rdi)
   11e2b:	48 89 df             	mov    %rbx,%rdi
   11e2e:	e8 f0 fb ff ff       	callq  11a23 <loop_init>
   11e33:	48 89 df             	mov    %rbx,%rdi
   11e36:	e8 75 66 01 00       	callq  284b0 <ev_backend>
   11e3b:	85 c0                	test   %eax,%eax
   11e3d:	75 0c                	jne    11e4b <ev_loop_new+0x46>
   11e3f:	48 89 df             	mov    %rbx,%rdi
   11e42:	31 f6                	xor    %esi,%esi
   11e44:	31 db                	xor    %ebx,%ebx
   11e46:	e8 d5 57 01 00       	callq  27620 <ev_realloc>
   11e4b:	48 89 d8             	mov    %rbx,%rax
   11e4e:	5a                   	pop    %rdx
   11e4f:	5b                   	pop    %rbx
   11e50:	5d                   	pop    %rbp
   11e51:	c3                   	retq   

0000000000011e52 <iouring_fork>:
   11e52:	55                   	push   %rbp
   11e53:	48 8d 2d 56 05 03 00 	lea    0x30556(%rip),%rbp        # 423b0 <__FUNCTION__.3752+0x170>
   11e5a:	53                   	push   %rbx
   11e5b:	48 89 fb             	mov    %rdi,%rbx
   11e5e:	52                   	push   %rdx
   11e5f:	e8 3b fb ff ff       	callq  1199f <iouring_internal_destroy>
   11e64:	48 89 df             	mov    %rbx,%rdi
   11e67:	e8 71 ef ff ff       	callq  10ddd <iouring_internal_init>
   11e6c:	85 c0                	test   %eax,%eax
   11e6e:	79 0a                	jns    11e7a <iouring_fork+0x28>
   11e70:	48 89 ef             	mov    %rbp,%rdi
   11e73:	e8 4c ef ff ff       	callq  10dc4 <ev_syserr>
   11e78:	eb ea                	jmp    11e64 <iouring_fork+0x12>
   11e7a:	48 8d ab 18 02 00 00 	lea    0x218(%rbx),%rbp
   11e81:	48 89 df             	mov    %rbx,%rdi
   11e84:	e8 95 f2 ff ff       	callq  1111e <fd_rearm_all>
   11e89:	48 89 ee             	mov    %rbp,%rsi
   11e8c:	48 89 df             	mov    %rbx,%rdi
   11e8f:	e8 1c 6b 01 00       	callq  289b0 <ev_io_stop>
   11e94:	8b 83 10 02 00 00    	mov    0x210(%rbx),%eax
   11e9a:	48 89 ee             	mov    %rbp,%rsi
   11e9d:	48 89 df             	mov    %rbx,%rdi
   11ea0:	c7 83 44 02 00 00 81 	movl   $0x81,0x244(%rbx)
   11ea7:	00 00 00 
   11eaa:	89 83 40 02 00 00    	mov    %eax,0x240(%rbx)
   11eb0:	58                   	pop    %rax
   11eb1:	5b                   	pop    %rbx
   11eb2:	5d                   	pop    %rbp
   11eb3:	e9 a8 69 01 00       	jmpq   28860 <ev_io_start>

0000000000011eb8 <iouring_handle_cq.cold.28>:
   11eb8:	e8 53 dc ff ff       	callq  fb10 <__errno_location@plt>
   11ebd:	89 ea                	mov    %ebp,%edx
   11ebf:	48 8d 3d 01 05 03 00 	lea    0x30501(%rip),%rdi        # 423c7 <__FUNCTION__.3752+0x187>
   11ec6:	f7 da                	neg    %edx
   11ec8:	89 10                	mov    %edx,(%rax)
   11eca:	e8 f5 ee ff ff       	callq  10dc4 <ev_syserr>
   11ecf:	49 8b 95 b8 01 00 00 	mov    0x1b8(%r13),%rdx
   11ed6:	e9 6c 6d 01 00       	jmpq   28c47 <iouring_handle_cq+0x177>
   11edb:	49 8d 95 50 02 00 00 	lea    0x250(%r13),%rdx
   11ee2:	48 89 c6             	mov    %rax,%rsi
   11ee5:	bf 04 00 00 00       	mov    $0x4,%edi
   11eea:	e8 f0 f1 ff ff       	callq  110df <array_realloc>
   11eef:	41 8b 8d 54 02 00 00 	mov    0x254(%r13),%ecx
   11ef6:	49 89 85 48 02 00 00 	mov    %rax,0x248(%r13)
   11efd:	e9 36 6d 01 00       	jmpq   28c38 <iouring_handle_cq+0x168>
   11f02:	e8 17 f2 ff ff       	callq  1111e <fd_rearm_all>
   11f07:	41 83 bd ac 01 00 00 	cmpl   $0x0,0x1ac(%r13)
   11f0e:	00 
   11f0f:	75 19                	jne    11f2a <iouring_handle_cq.cold.28+0x72>
   11f11:	41 d1 a5 a8 01 00 00 	shll   0x1a8(%r13)
   11f18:	4c 89 ef             	mov    %r13,%rdi
   11f1b:	e8 32 ff ff ff       	callq  11e52 <iouring_fork>
   11f20:	b8 01 00 00 00       	mov    $0x1,%eax
   11f25:	e9 3e 6d 01 00       	jmpq   28c68 <iouring_handle_cq+0x198>
   11f2a:	4c 89 ef             	mov    %r13,%rdi
   11f2d:	48 8d 1d 54 0a 03 00 	lea    0x30a54(%rip),%rbx        # 42988 <__FUNCTION__.3752+0x748>
   11f34:	e8 66 fa ff ff       	callq  1199f <iouring_internal_destroy>
   11f39:	41 c7 85 a4 01 00 00 	movl   $0x0,0x1a4(%r13)
   11f40:	00 00 00 00 
   11f44:	4c 89 ef             	mov    %r13,%rdi
   11f47:	e8 1a f3 ff ff       	callq  11266 <epoll_init.isra.9>
   11f4c:	41 89 85 b8 00 00 00 	mov    %eax,0xb8(%r13)
   11f53:	85 c0                	test   %eax,%eax
   11f55:	74 0a                	je     11f61 <iouring_handle_cq.cold.28+0xa9>
   11f57:	b8 01 00 00 00       	mov    $0x1,%eax
   11f5c:	e9 07 6d 01 00       	jmpq   28c68 <iouring_handle_cq+0x198>
   11f61:	48 89 df             	mov    %rbx,%rdi
   11f64:	e8 5b ee ff ff       	callq  10dc4 <ev_syserr>
   11f69:	eb d9                	jmp    11f44 <iouring_handle_cq.cold.28+0x8c>

0000000000011f6b <fd_kill>:
   11f6b:	41 55                	push   %r13
   11f6d:	41 bd 03 00 00 80    	mov    $0x80000003,%r13d
   11f73:	41 54                	push   %r12
   11f75:	55                   	push   %rbp
   11f76:	48 89 fd             	mov    %rdi,%rbp
   11f79:	53                   	push   %rbx
   11f7a:	48 63 de             	movslq %esi,%rbx
   11f7d:	52                   	push   %rdx
   11f7e:	48 c1 e3 04          	shl    $0x4,%rbx
   11f82:	48 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%rax
   11f89:	4c 8b 24 18          	mov    (%rax,%rbx,1),%r12
   11f8d:	4d 85 e4             	test   %r12,%r12
   11f90:	74 1b                	je     11fad <fd_kill+0x42>
   11f92:	4c 89 e6             	mov    %r12,%rsi
   11f95:	48 89 ef             	mov    %rbp,%rdi
   11f98:	e8 13 6a 01 00       	callq  289b0 <ev_io_stop>
   11f9d:	44 89 ea             	mov    %r13d,%edx
   11fa0:	4c 89 e6             	mov    %r12,%rsi
   11fa3:	48 89 ef             	mov    %rbp,%rdi
   11fa6:	e8 95 5b 01 00       	callq  27b40 <ev_feed_event>
   11fab:	eb d5                	jmp    11f82 <fd_kill+0x17>
   11fad:	58                   	pop    %rax
   11fae:	5b                   	pop    %rbx
   11faf:	5d                   	pop    %rbp
   11fb0:	41 5c                	pop    %r12
   11fb2:	41 5d                	pop    %r13
   11fb4:	c3                   	retq   

0000000000011fb5 <epoll_modify.cold.29>:
   11fb5:	49 8d 96 9c 01 00 00 	lea    0x19c(%r14),%rdx
   11fbc:	bf 04 00 00 00       	mov    $0x4,%edi
   11fc1:	e8 19 f1 ff ff       	callq  110df <array_realloc>
   11fc6:	49 63 96 98 01 00 00 	movslq 0x198(%r14),%rdx
   11fcd:	49 89 86 90 01 00 00 	mov    %rax,0x190(%r14)
   11fd4:	48 89 c6             	mov    %rax,%rsi
   11fd7:	e9 ff 72 01 00       	jmpq   292db <epoll_modify+0x18b>

0000000000011fdc <fd_ebadf>:
   11fdc:	55                   	push   %rbp
   11fdd:	48 89 fd             	mov    %rdi,%rbp
   11fe0:	53                   	push   %rbx
   11fe1:	31 db                	xor    %ebx,%ebx
   11fe3:	52                   	push   %rdx
   11fe4:	39 9d e8 00 00 00    	cmp    %ebx,0xe8(%rbp)
   11fea:	7e 3f                	jle    1202b <fd_ebadf+0x4f>
   11fec:	48 89 d8             	mov    %rbx,%rax
   11fef:	48 c1 e0 04          	shl    $0x4,%rax
   11ff3:	48 03 85 e0 00 00 00 	add    0xe0(%rbp),%rax
   11ffa:	80 78 08 00          	cmpb   $0x0,0x8(%rax)
   11ffe:	74 26                	je     12026 <fd_ebadf+0x4a>
   12000:	31 c0                	xor    %eax,%eax
   12002:	be 01 00 00 00       	mov    $0x1,%esi
   12007:	89 df                	mov    %ebx,%edi
   12009:	e8 b2 dc ff ff       	callq  fcc0 <fcntl@plt>
   1200e:	ff c0                	inc    %eax
   12010:	75 14                	jne    12026 <fd_ebadf+0x4a>
   12012:	e8 f9 da ff ff       	callq  fb10 <__errno_location@plt>
   12017:	83 38 09             	cmpl   $0x9,(%rax)
   1201a:	75 0a                	jne    12026 <fd_ebadf+0x4a>
   1201c:	89 de                	mov    %ebx,%esi
   1201e:	48 89 ef             	mov    %rbp,%rdi
   12021:	e8 45 ff ff ff       	callq  11f6b <fd_kill>
   12026:	48 ff c3             	inc    %rbx
   12029:	eb b9                	jmp    11fe4 <fd_ebadf+0x8>
   1202b:	58                   	pop    %rax
   1202c:	5b                   	pop    %rbx
   1202d:	5d                   	pop    %rbp
   1202e:	c3                   	retq   

000000000001202f <fd_enomem>:
   1202f:	48 63 87 e8 00 00 00 	movslq 0xe8(%rdi),%rax
   12036:	8d 50 ff             	lea    -0x1(%rax),%edx
   12039:	48 c1 e0 04          	shl    $0x4,%rax
   1203d:	89 d6                	mov    %edx,%esi
   1203f:	83 fa ff             	cmp    $0xffffffff,%edx
   12042:	74 1a                	je     1205e <fd_enomem+0x2f>
   12044:	48 8b 8f e0 00 00 00 	mov    0xe0(%rdi),%rcx
   1204b:	ff ca                	dec    %edx
   1204d:	8a 4c 01 f8          	mov    -0x8(%rcx,%rax,1),%cl
   12051:	48 83 e8 10          	sub    $0x10,%rax
   12055:	84 c9                	test   %cl,%cl
   12057:	74 e4                	je     1203d <fd_enomem+0xe>
   12059:	e9 0d ff ff ff       	jmpq   11f6b <fd_kill>
   1205e:	c3                   	retq   

000000000001205f <poll_poll.cold.30>:
   1205f:	48 83 c4 10          	add    $0x10,%rsp
   12063:	4c 89 f7             	mov    %r14,%rdi
   12066:	5b                   	pop    %rbx
   12067:	5d                   	pop    %rbp
   12068:	41 5c                	pop    %r12
   1206a:	41 5d                	pop    %r13
   1206c:	41 5e                	pop    %r14
   1206e:	eb bf                	jmp    1202f <fd_enomem>
   12070:	48 83 c4 10          	add    $0x10,%rsp
   12074:	4c 89 f7             	mov    %r14,%rdi
   12077:	5b                   	pop    %rbx
   12078:	5d                   	pop    %rbp
   12079:	41 5c                	pop    %r12
   1207b:	41 5d                	pop    %r13
   1207d:	41 5e                	pop    %r14
   1207f:	e9 58 ff ff ff       	jmpq   11fdc <fd_ebadf>

0000000000012084 <select_poll.cold.31>:
   12084:	4c 89 ff             	mov    %r15,%rdi
   12087:	e8 a3 ff ff ff       	callq  1202f <fd_enomem>
   1208c:	e9 6e 76 01 00       	jmpq   296ff <select_poll+0x1ef>
   12091:	4c 89 ff             	mov    %r15,%rdi
   12094:	e8 43 ff ff ff       	callq  11fdc <fd_ebadf>
   12099:	e9 61 76 01 00       	jmpq   296ff <select_poll+0x1ef>

000000000001209e <ev_timer_start.cold.32>:
   1209e:	48 8b b5 58 02 00 00 	mov    0x258(%rbp),%rsi
   120a5:	8d 4f 01             	lea    0x1(%rdi),%ecx
   120a8:	48 8d 95 60 02 00 00 	lea    0x260(%rbp),%rdx
   120af:	bf 10 00 00 00       	mov    $0x10,%edi
   120b4:	e8 26 f0 ff ff       	callq  110df <array_realloc>
   120b9:	8b 3b                	mov    (%rbx),%edi
   120bb:	48 89 85 58 02 00 00 	mov    %rax,0x258(%rbp)
   120c2:	e9 28 77 01 00       	jmpq   297ef <ev_timer_start+0x7f>

00000000000120c7 <ev_periodic_start.cold.33>:
   120c7:	e8 13 f7 ff ff       	callq  117df <evtimerfd_init>
   120cc:	e9 66 81 01 00       	jmpq   2a237 <ev_periodic_start+0x27>
   120d1:	48 8b b5 68 02 00 00 	mov    0x268(%rbp),%rsi
   120d8:	8d 4f 01             	lea    0x1(%rdi),%ecx
   120db:	48 8d 95 70 02 00 00 	lea    0x270(%rbp),%rdx
   120e2:	bf 10 00 00 00       	mov    $0x10,%edi
   120e7:	e8 f3 ef ff ff       	callq  110df <array_realloc>
   120ec:	8b 3b                	mov    (%rbx),%edi
   120ee:	48 89 85 68 02 00 00 	mov    %rax,0x268(%rbp)
   120f5:	e9 9f 81 01 00       	jmpq   2a299 <ev_periodic_start+0x89>

00000000000120fa <ev_run.cold.34>:
   120fa:	4c 89 ff             	mov    %r15,%rdi
   120fd:	e8 6b f7 ff ff       	callq  1186d <evpipe_init>
   12102:	ba 00 00 00 01       	mov    $0x1000000,%edx
   12107:	48 89 de             	mov    %rbx,%rsi
   1210a:	4c 89 ff             	mov    %r15,%rdi
   1210d:	e8 2e 5a 01 00       	callq  27b40 <ev_feed_event>
   12112:	e9 27 92 01 00       	jmpq   2b33e <ev_run+0xc8e>
   12117:	41 8b bf c4 00 00 00 	mov    0xc4(%r15),%edi
   1211e:	48 8d 1d fa 02 03 00 	lea    0x302fa(%rip),%rbx        # 4241f <__FUNCTION__.3752+0x1df>
   12125:	e8 86 df ff ff       	callq  100b0 <close@plt>
   1212a:	e8 f0 f0 ff ff       	callq  1121f <epoll_epoll_create>
   1212f:	41 89 87 c4 00 00 00 	mov    %eax,0xc4(%r15)
   12136:	85 c0                	test   %eax,%eax
   12138:	79 60                	jns    1219a <ev_run.cold.34+0xa0>
   1213a:	48 89 df             	mov    %rbx,%rdi
   1213d:	e8 82 ec ff ff       	callq  10dc4 <ev_syserr>
   12142:	eb e6                	jmp    1212a <ev_run.cold.34+0x30>
   12144:	4c 89 ff             	mov    %r15,%rdi
   12147:	e8 06 fd ff ff       	callq  11e52 <iouring_fork>
   1214c:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   12153:	e9 3a 90 01 00       	jmpq   2b192 <ev_run+0xae2>
   12158:	49 8d 57 28          	lea    0x28(%r15),%rdx
   1215c:	48 89 c6             	mov    %rax,%rsi
   1215f:	bf 08 00 00 00       	mov    $0x8,%edi
   12164:	e8 76 ef ff ff       	callq  110df <array_realloc>
   12169:	49 63 57 2c          	movslq 0x2c(%r15),%rdx
   1216d:	49 89 47 20          	mov    %rax,0x20(%r15)
   12171:	8d 4a 01             	lea    0x1(%rdx),%ecx
   12174:	e9 8f 8c 01 00       	jmpq   2ae08 <ev_run+0x758>
   12179:	49 8d 57 28          	lea    0x28(%r15),%rdx
   1217d:	48 89 c6             	mov    %rax,%rsi
   12180:	bf 08 00 00 00       	mov    $0x8,%edi
   12185:	e8 55 ef ff ff       	callq  110df <array_realloc>
   1218a:	49 63 57 2c          	movslq 0x2c(%r15),%rdx
   1218e:	49 89 47 20          	mov    %rax,0x20(%r15)
   12192:	8d 4a 01             	lea    0x1(%rdx),%ecx
   12195:	e9 65 8a 01 00       	jmpq   2abff <ev_run+0x54f>
   1219a:	4c 89 ff             	mov    %r15,%rdi
   1219d:	e8 7c ef ff ff       	callq  1111e <fd_rearm_all>
   121a2:	e9 f4 8f 01 00       	jmpq   2b19b <ev_run+0xaeb>
   121a7:	4c 89 ff             	mov    %r15,%rdi
   121aa:	e8 39 ee ff ff       	callq  10fe8 <periodics_reschedule>
   121af:	e9 cd 86 01 00       	jmpq   2a881 <ev_run+0x1d1>
   121b4:	4c 89 ff             	mov    %r15,%rdi
   121b7:	e8 2c ee ff ff       	callq  10fe8 <periodics_reschedule>
   121bc:	e9 a2 88 01 00       	jmpq   2aa63 <ev_run+0x3b3>

00000000000121c1 <ev_signal_start.cold.35>:
   121c1:	49 89 e5             	mov    %rsp,%r13
   121c4:	48 89 ef             	mov    %rbp,%rdi
   121c7:	e8 a1 f6 ff ff       	callq  1186d <evpipe_init>
   121cc:	4d 8d 65 08          	lea    0x8(%r13),%r12
   121d0:	48 8d 05 49 60 01 00 	lea    0x16049(%rip),%rax        # 28220 <ev_sighandler>
   121d7:	4c 89 e7             	mov    %r12,%rdi
   121da:	48 89 04 24          	mov    %rax,(%rsp)
   121de:	e8 3d e1 ff ff       	callq  10320 <sigfillset@plt>
   121e3:	8b 7b 28             	mov    0x28(%rbx),%edi
   121e6:	31 d2                	xor    %edx,%edx
   121e8:	4c 89 ee             	mov    %r13,%rsi
   121eb:	c7 84 24 88 00 00 00 	movl   $0x10000000,0x88(%rsp)
   121f2:	00 00 00 10 
   121f6:	e8 75 da ff ff       	callq  fc70 <sigaction@plt>
   121fb:	f6 85 da 04 00 00 40 	testb  $0x40,0x4da(%rbp)
   12202:	0f 84 84 99 01 00    	je     2bb8c <ev_signal_start+0xcc>
   12208:	4c 89 e7             	mov    %r12,%rdi
   1220b:	e8 90 e0 ff ff       	callq  102a0 <sigemptyset@plt>
   12210:	8b 73 28             	mov    0x28(%rbx),%esi
   12213:	4c 89 e7             	mov    %r12,%rdi
   12216:	e8 65 e8 ff ff       	callq  10a80 <sigaddset@plt>
   1221b:	31 d2                	xor    %edx,%edx
   1221d:	4c 89 e6             	mov    %r12,%rsi
   12220:	bf 01 00 00 00       	mov    $0x1,%edi
   12225:	e8 66 d8 ff ff       	callq  fa90 <sigprocmask@plt>
   1222a:	e9 5d 99 01 00       	jmpq   2bb8c <ev_signal_start+0xcc>

000000000001222f <ev_default_loop>:
   1222f:	f3 0f 1e fa          	endbr64 
   12233:	55                   	push   %rbp
   12234:	53                   	push   %rbx
   12235:	51                   	push   %rcx
   12236:	48 8d 2d e3 52 24 00 	lea    0x2452e3(%rip),%rbp        # 257520 <ev_default_loop_ptr>
   1223d:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
   12242:	75 6f                	jne    122b3 <ev_default_loop+0x84>
   12244:	48 8d 1d b5 59 24 00 	lea    0x2459b5(%rip),%rbx        # 257c00 <default_loop_struct>
   1224b:	89 fe                	mov    %edi,%esi
   1224d:	48 89 df             	mov    %rbx,%rdi
   12250:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   12254:	e8 ca f7 ff ff       	callq  11a23 <loop_init>
   12259:	48 89 df             	mov    %rbx,%rdi
   1225c:	e8 4f 62 01 00       	callq  284b0 <ev_backend>
   12261:	85 c0                	test   %eax,%eax
   12263:	74 46                	je     122ab <ev_default_loop+0x7c>
  return __builtin___memmove_chk (__dest, __src, __len,
   12265:	48 8d 05 54 59 01 00 	lea    0x15954(%rip),%rax        # 27bc0 <childcb>
   1226c:	48 89 df             	mov    %rbx,%rdi
   1226f:	48 8d 35 ca 52 24 00 	lea    0x2452ca(%rip),%rsi        # 257540 <childev>
   12276:	c7 05 e8 52 24 00 11 	movl   $0x11,0x2452e8(%rip)        # 257568 <childev+0x28>
   1227d:	00 00 00 
   12280:	48 89 05 d1 52 24 00 	mov    %rax,0x2452d1(%rip)        # 257558 <childev+0x18>
   12287:	48 c7 05 ae 52 24 00 	movq   $0x0,0x2452ae(%rip)        # 257540 <childev>
   1228e:	00 00 00 00 
   12292:	c7 05 ac 52 24 00 02 	movl   $0x2,0x2452ac(%rip)        # 257548 <childev+0x8>
   12299:	00 00 00 
   1229c:	e8 1f 98 01 00       	callq  2bac0 <ev_signal_start>
   122a1:	48 89 df             	mov    %rbx,%rdi
   122a4:	e8 07 63 01 00       	callq  285b0 <ev_unref>
   122a9:	eb 08                	jmp    122b3 <ev_default_loop+0x84>
   122ab:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   122b2:	00 
   122b3:	48 8b 45 00          	mov    0x0(%rbp),%rax
   122b7:	5a                   	pop    %rdx
   122b8:	5b                   	pop    %rbx
   122b9:	5d                   	pop    %rbp
   122ba:	c3                   	retq   

00000000000122bb <ev_loop_destroy>:
   122bb:	f3 0f 1e fa          	endbr64 
   122bf:	48 85 ff             	test   %rdi,%rdi
   122c2:	0f 84 89 03 00 00    	je     12651 <ev_loop_destroy+0x396>
   122c8:	41 55                	push   %r13
   122ca:	41 54                	push   %r12
   122cc:	55                   	push   %rbp
   122cd:	53                   	push   %rbx
   122ce:	48 89 fb             	mov    %rdi,%rbx
   122d1:	51                   	push   %rcx
   122d2:	44 8b a7 0c 03 00 00 	mov    0x30c(%rdi),%r12d
   122d9:	45 85 e4             	test   %r12d,%r12d
   122dc:	74 2e                	je     1230c <ev_loop_destroy+0x51>
   122de:	4c 8b af 00 03 00 00 	mov    0x300(%rdi),%r13
   122e5:	31 ed                	xor    %ebp,%ebp
   122e7:	41 39 ec             	cmp    %ebp,%r12d
   122ea:	7e 17                	jle    12303 <ev_loop_destroy+0x48>
   122ec:	49 8b 74 ed 00       	mov    0x0(%r13,%rbp,8),%rsi
   122f1:	ba 00 00 04 00       	mov    $0x40000,%edx
   122f6:	48 89 df             	mov    %rbx,%rdi
   122f9:	48 ff c5             	inc    %rbp
   122fc:	e8 3f 58 01 00       	callq  27b40 <ev_feed_event>
   12301:	eb e4                	jmp    122e7 <ev_loop_destroy+0x2c>
   12303:	48 89 df             	mov    %rbx,%rdi
   12306:	ff 93 00 05 00 00    	callq  *0x500(%rbx)
   1230c:	4c 8d 25 0d 52 24 00 	lea    0x24520d(%rip),%r12        # 257520 <ev_default_loop_ptr>
   12313:	49 3b 1c 24          	cmp    (%r12),%rbx
   12317:	75 20                	jne    12339 <ev_loop_destroy+0x7e>
   12319:	83 3d 20 52 24 00 00 	cmpl   $0x0,0x245220(%rip)        # 257540 <childev>
   12320:	74 17                	je     12339 <ev_loop_destroy+0x7e>
   12322:	48 89 df             	mov    %rbx,%rdi
   12325:	e8 76 62 01 00       	callq  285a0 <ev_ref>
   1232a:	48 8d 35 0f 52 24 00 	lea    0x24520f(%rip),%rsi        # 257540 <childev>
   12331:	48 89 df             	mov    %rbx,%rdi
   12334:	e8 f7 99 01 00       	callq  2bd30 <ev_signal_stop>
   12339:	83 bb f8 00 00 00 00 	cmpl   $0x0,0xf8(%rbx)
   12340:	74 1e                	je     12360 <ev_loop_destroy+0xa5>
   12342:	8b bb ec 00 00 00    	mov    0xec(%rbx),%edi
   12348:	85 ff                	test   %edi,%edi
   1234a:	78 05                	js     12351 <ev_loop_destroy+0x96>
   1234c:	e8 5f dd ff ff       	callq  100b0 <close@plt>
   12351:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
   12357:	85 ff                	test   %edi,%edi
   12359:	78 05                	js     12360 <ev_loop_destroy+0xa5>
   1235b:	e8 50 dd ff ff       	callq  100b0 <close@plt>
   12360:	83 bb f0 03 00 00 00 	cmpl   $0x0,0x3f0(%rbx)
   12367:	74 0b                	je     12374 <ev_loop_destroy+0xb9>
   12369:	8b bb ec 03 00 00    	mov    0x3ec(%rbx),%edi
   1236f:	e8 3c dd ff ff       	callq  100b0 <close@plt>
   12374:	83 bb a8 04 00 00 00 	cmpl   $0x0,0x4a8(%rbx)
   1237b:	74 0b                	je     12388 <ev_loop_destroy+0xcd>
   1237d:	8b bb a0 04 00 00    	mov    0x4a0(%rbx),%edi
   12383:	e8 28 dd ff ff       	callq  100b0 <close@plt>
   12388:	8b bb 28 03 00 00    	mov    0x328(%rbx),%edi
   1238e:	85 ff                	test   %edi,%edi
   12390:	78 05                	js     12397 <ev_loop_destroy+0xdc>
   12392:	e8 19 dd ff ff       	callq  100b0 <close@plt>
   12397:	8b bb c4 00 00 00    	mov    0xc4(%rbx),%edi
   1239d:	85 ff                	test   %edi,%edi
   1239f:	78 05                	js     123a6 <ev_loop_destroy+0xeb>
   123a1:	e8 0a dd ff ff       	callq  100b0 <close@plt>
   123a6:	81 bb b8 00 00 00 80 	cmpl   $0x80,0xb8(%rbx)
   123ad:	00 00 00 
   123b0:	75 08                	jne    123ba <ev_loop_destroy+0xff>
   123b2:	48 89 df             	mov    %rbx,%rdi
   123b5:	e8 e5 f5 ff ff       	callq  1199f <iouring_internal_destroy>
   123ba:	83 bb b8 00 00 00 04 	cmpl   $0x4,0xb8(%rbx)
   123c1:	75 32                	jne    123f5 <ev_loop_destroy+0x13a>
   123c3:	48 8b bb 80 01 00 00 	mov    0x180(%rbx),%rdi
   123ca:	31 f6                	xor    %esi,%esi
   123cc:	e8 4f 52 01 00       	callq  27620 <ev_realloc>
   123d1:	48 8b bb 90 01 00 00 	mov    0x190(%rbx),%rdi
   123d8:	31 f6                	xor    %esi,%esi
   123da:	e8 41 52 01 00       	callq  27620 <ev_realloc>
   123df:	48 c7 83 90 01 00 00 	movq   $0x0,0x190(%rbx)
   123e6:	00 00 00 00 
   123ea:	48 c7 83 98 01 00 00 	movq   $0x0,0x198(%rbx)
   123f1:	00 00 00 00 
   123f5:	83 bb b8 00 00 00 02 	cmpl   $0x2,0xb8(%rbx)
   123fc:	75 1c                	jne    1241a <ev_loop_destroy+0x15f>
   123fe:	48 8b bb 70 01 00 00 	mov    0x170(%rbx),%rdi
   12405:	31 f6                	xor    %esi,%esi
   12407:	e8 14 52 01 00       	callq  27620 <ev_realloc>
   1240c:	48 8b bb 60 01 00 00 	mov    0x160(%rbx),%rdi
   12413:	31 f6                	xor    %esi,%esi
   12415:	e8 06 52 01 00       	callq  27620 <ev_realloc>
   1241a:	83 bb b8 00 00 00 01 	cmpl   $0x1,0xb8(%rbx)
   12421:	75 38                	jne    1245b <ev_loop_destroy+0x1a0>
   12423:	48 8b bb 38 01 00 00 	mov    0x138(%rbx),%rdi
   1242a:	31 f6                	xor    %esi,%esi
   1242c:	e8 ef 51 01 00       	callq  27620 <ev_realloc>
   12431:	48 8b bb 40 01 00 00 	mov    0x140(%rbx),%rdi
   12438:	31 f6                	xor    %esi,%esi
   1243a:	e8 e1 51 01 00       	callq  27620 <ev_realloc>
   1243f:	48 8b bb 48 01 00 00 	mov    0x148(%rbx),%rdi
   12446:	31 f6                	xor    %esi,%esi
   12448:	e8 d3 51 01 00       	callq  27620 <ev_realloc>
   1244d:	48 8b bb 50 01 00 00 	mov    0x150(%rbx),%rdi
   12454:	31 f6                	xor    %esi,%esi
   12456:	e8 c5 51 01 00       	callq  27620 <ev_realloc>
   1245b:	31 ed                	xor    %ebp,%ebp
   1245d:	48 83 ed 04          	sub    $0x4,%rbp
   12461:	48 83 fd e8          	cmp    $0xffffffffffffffe8,%rbp
   12465:	74 5b                	je     124c2 <ev_loop_destroy+0x207>
   12467:	48 8b 7c 6b 58       	mov    0x58(%rbx,%rbp,2),%rdi
   1246c:	31 f6                	xor    %esi,%esi
   1246e:	e8 ad 51 01 00       	callq  27620 <ev_realloc>
   12473:	c7 44 2b 6c 00 00 00 	movl   $0x0,0x6c(%rbx,%rbp,1)
   1247a:	00 
   1247b:	48 8b bc 6b a0 02 00 	mov    0x2a0(%rbx,%rbp,2),%rdi
   12482:	00 
   12483:	31 f6                	xor    %esi,%esi
   12485:	c7 84 2b 80 00 00 00 	movl   $0x0,0x80(%rbx,%rbp,1)
   1248c:	00 00 00 00 
   12490:	48 c7 44 6b 58 00 00 	movq   $0x0,0x58(%rbx,%rbp,2)
   12497:	00 00 
   12499:	e8 82 51 01 00       	callq  27620 <ev_realloc>
   1249e:	c7 84 2b b4 02 00 00 	movl   $0x0,0x2b4(%rbx,%rbp,1)
   124a5:	00 00 00 00 
   124a9:	c7 84 2b c8 02 00 00 	movl   $0x0,0x2c8(%rbx,%rbp,1)
   124b0:	00 00 00 00 
   124b4:	48 c7 84 6b a0 02 00 	movq   $0x0,0x2a0(%rbx,%rbp,2)
   124bb:	00 00 00 00 00 
   124c0:	eb 9b                	jmp    1245d <ev_loop_destroy+0x1a2>
   124c2:	48 8b bb e0 00 00 00 	mov    0xe0(%rbx),%rdi
   124c9:	31 f6                	xor    %esi,%esi
   124cb:	e8 50 51 01 00       	callq  27620 <ev_realloc>
   124d0:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   124d4:	31 f6                	xor    %esi,%esi
   124d6:	48 c7 83 e0 00 00 00 	movq   $0x0,0xe0(%rbx)
   124dd:	00 00 00 00 
   124e1:	c7 83 e8 00 00 00 00 	movl   $0x0,0xe8(%rbx)
   124e8:	00 00 00 
   124eb:	e8 30 51 01 00       	callq  27620 <ev_realloc>
   124f0:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   124f7:	00 
   124f8:	48 8b bb 48 02 00 00 	mov    0x248(%rbx),%rdi
   124ff:	31 f6                	xor    %esi,%esi
   12501:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
   12508:	00 
   12509:	e8 12 51 01 00       	callq  27620 <ev_realloc>
   1250e:	48 8b bb 58 02 00 00 	mov    0x258(%rbx),%rdi
   12515:	31 f6                	xor    %esi,%esi
   12517:	48 c7 83 48 02 00 00 	movq   $0x0,0x248(%rbx)
   1251e:	00 00 00 00 
   12522:	48 c7 83 50 02 00 00 	movq   $0x0,0x250(%rbx)
   12529:	00 00 00 00 
   1252d:	e8 ee 50 01 00       	callq  27620 <ev_realloc>
   12532:	48 8b bb 68 02 00 00 	mov    0x268(%rbx),%rdi
   12539:	31 f6                	xor    %esi,%esi
   1253b:	48 c7 83 58 02 00 00 	movq   $0x0,0x258(%rbx)
   12542:	00 00 00 00 
   12546:	48 c7 83 60 02 00 00 	movq   $0x0,0x260(%rbx)
   1254d:	00 00 00 00 
   12551:	e8 ca 50 01 00       	callq  27620 <ev_realloc>
   12556:	48 8b bb f0 02 00 00 	mov    0x2f0(%rbx),%rdi
   1255d:	31 f6                	xor    %esi,%esi
   1255f:	48 c7 83 68 02 00 00 	movq   $0x0,0x268(%rbx)
   12566:	00 00 00 00 
   1256a:	48 c7 83 70 02 00 00 	movq   $0x0,0x270(%rbx)
   12571:	00 00 00 00 
   12575:	e8 a6 50 01 00       	callq  27620 <ev_realloc>
   1257a:	48 8b bb 00 03 00 00 	mov    0x300(%rbx),%rdi
   12581:	31 f6                	xor    %esi,%esi
   12583:	48 c7 83 f0 02 00 00 	movq   $0x0,0x2f0(%rbx)
   1258a:	00 00 00 00 
   1258e:	48 c7 83 f8 02 00 00 	movq   $0x0,0x2f8(%rbx)
   12595:	00 00 00 00 
   12599:	e8 82 50 01 00       	callq  27620 <ev_realloc>
   1259e:	48 8b bb d0 02 00 00 	mov    0x2d0(%rbx),%rdi
   125a5:	31 f6                	xor    %esi,%esi
   125a7:	48 c7 83 00 03 00 00 	movq   $0x0,0x300(%rbx)
   125ae:	00 00 00 00 
   125b2:	48 c7 83 08 03 00 00 	movq   $0x0,0x308(%rbx)
   125b9:	00 00 00 00 
   125bd:	e8 5e 50 01 00       	callq  27620 <ev_realloc>
   125c2:	48 8b bb e0 02 00 00 	mov    0x2e0(%rbx),%rdi
   125c9:	31 f6                	xor    %esi,%esi
   125cb:	48 c7 83 d0 02 00 00 	movq   $0x0,0x2d0(%rbx)
   125d2:	00 00 00 00 
   125d6:	48 c7 83 d8 02 00 00 	movq   $0x0,0x2d8(%rbx)
   125dd:	00 00 00 00 
   125e1:	e8 3a 50 01 00       	callq  27620 <ev_realloc>
   125e6:	48 8b bb 18 03 00 00 	mov    0x318(%rbx),%rdi
   125ed:	31 f6                	xor    %esi,%esi
   125ef:	48 c7 83 e0 02 00 00 	movq   $0x0,0x2e0(%rbx)
   125f6:	00 00 00 00 
   125fa:	48 c7 83 e8 02 00 00 	movq   $0x0,0x2e8(%rbx)
   12601:	00 00 00 00 
   12605:	e8 16 50 01 00       	callq  27620 <ev_realloc>
   1260a:	48 c7 83 18 03 00 00 	movq   $0x0,0x318(%rbx)
   12611:	00 00 00 00 
   12615:	48 c7 83 20 03 00 00 	movq   $0x0,0x320(%rbx)
   1261c:	00 00 00 00 
   12620:	c7 83 b8 00 00 00 00 	movl   $0x0,0xb8(%rbx)
   12627:	00 00 00 
   1262a:	49 3b 1c 24          	cmp    (%r12),%rbx
   1262e:	75 10                	jne    12640 <ev_loop_destroy+0x385>
   12630:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   12637:	00 
   12638:	5a                   	pop    %rdx
   12639:	5b                   	pop    %rbx
   1263a:	5d                   	pop    %rbp
   1263b:	41 5c                	pop    %r12
   1263d:	41 5d                	pop    %r13
   1263f:	c3                   	retq   
   12640:	58                   	pop    %rax
   12641:	48 89 df             	mov    %rbx,%rdi
   12644:	31 f6                	xor    %esi,%esi
   12646:	5b                   	pop    %rbx
   12647:	5d                   	pop    %rbp
   12648:	41 5c                	pop    %r12
   1264a:	41 5d                	pop    %r13
   1264c:	e9 cf 4f 01 00       	jmpq   27620 <ev_realloc>
   12651:	c3                   	retq   

0000000000012652 <ev_stat_start.cold.36>:
   12652:	c7 85 28 03 00 00 ff 	movl   $0xffffffff,0x328(%rbp)
   12659:	ff ff ff 
   1265c:	e8 4f e5 ff ff       	callq  10bb0 <ev_linux_version>
   12661:	3d 18 06 02 00       	cmp    $0x20618,%eax
   12666:	77 76                	ja     126de <ev_stat_start.cold.36+0x8c>
   12668:	bf 00 08 08 00       	mov    $0x80800,%edi
   1266d:	e8 1e e4 ff ff       	callq  10a90 <inotify_init1@plt>
   12672:	85 c0                	test   %eax,%eax
   12674:	78 71                	js     126e7 <ev_stat_start.cold.36+0x95>
   12676:	89 85 28 03 00 00    	mov    %eax,0x328(%rbp)
   1267c:	89 c7                	mov    %eax,%edi
   1267e:	e8 5d 4e 01 00       	callq  274e0 <fd_intern>
   12683:	48 8d 05 d6 9d 01 00 	lea    0x19dd6(%rip),%rax        # 2c460 <infy_cb>
   1268a:	48 8d b5 30 03 00 00 	lea    0x330(%rbp),%rsi
   12691:	48 89 ef             	mov    %rbp,%rdi
   12694:	48 89 85 48 03 00 00 	mov    %rax,0x348(%rbp)
   1269b:	8b 85 28 03 00 00    	mov    0x328(%rbp),%eax
   126a1:	c7 85 5c 03 00 00 81 	movl   $0x81,0x35c(%rbp)
   126a8:	00 00 00 
   126ab:	89 85 58 03 00 00    	mov    %eax,0x358(%rbp)
   126b1:	48 c7 85 30 03 00 00 	movq   $0x0,0x330(%rbp)
   126b8:	00 00 00 00 
   126bc:	c7 85 38 03 00 00 02 	movl   $0x2,0x338(%rbp)
   126c3:	00 00 00 
   126c6:	e8 95 61 01 00       	callq  28860 <ev_io_start>
   126cb:	48 89 ef             	mov    %rbp,%rdi
   126ce:	e8 dd 5e 01 00       	callq  285b0 <ev_unref>
   126d3:	8b 85 28 03 00 00    	mov    0x328(%rbp),%eax
   126d9:	e9 c2 9e 01 00       	jmpq   2c5a0 <ev_stat_start+0xa0>
   126de:	c6 85 60 03 00 00 01 	movb   $0x1,0x360(%rbp)
   126e5:	eb 81                	jmp    12668 <ev_stat_start.cold.36+0x16>
   126e7:	e8 54 dc ff ff       	callq  10340 <inotify_init@plt>
   126ec:	89 85 28 03 00 00    	mov    %eax,0x328(%rbp)
   126f2:	85 c0                	test   %eax,%eax
   126f4:	79 86                	jns    1267c <ev_stat_start.cold.36+0x2a>
   126f6:	e9 15 9f 01 00       	jmpq   2c610 <ev_stat_start+0x110>

00000000000126fb <ev_idle_start.cold.37>:
   126fb:	4c 8d 6c d5 00       	lea    0x0(%rbp,%rdx,8),%r13
   12700:	bf 08 00 00 00       	mov    $0x8,%edi
   12705:	48 8d 54 8d 00       	lea    0x0(%rbp,%rcx,4),%rdx
   1270a:	44 89 e1             	mov    %r12d,%ecx
   1270d:	49 8b b5 88 02 00 00 	mov    0x288(%r13),%rsi
   12714:	e8 c6 e9 ff ff       	callq  110df <array_realloc>
   12719:	49 89 85 88 02 00 00 	mov    %rax,0x288(%r13)
   12720:	8b 43 08             	mov    0x8(%rbx),%eax
   12723:	83 c0 02             	add    $0x2,%eax
   12726:	48 98                	cltq   
   12728:	e9 34 a0 01 00       	jmpq   2c761 <ev_idle_start+0x91>

000000000001272d <ev_prepare_start.cold.38>:
   1272d:	48 8b b3 d0 02 00 00 	mov    0x2d0(%rbx),%rsi
   12734:	48 8d 93 d8 02 00 00 	lea    0x2d8(%rbx),%rdx
   1273b:	bf 08 00 00 00       	mov    $0x8,%edi
   12740:	e8 9a e9 ff ff       	callq  110df <array_realloc>
   12745:	48 63 8b dc 02 00 00 	movslq 0x2dc(%rbx),%rcx
   1274c:	48 89 83 d0 02 00 00 	mov    %rax,0x2d0(%rbx)
   12753:	e9 33 a1 01 00       	jmpq   2c88b <ev_prepare_start+0x5b>

0000000000012758 <ev_check_start.cold.39>:
   12758:	48 8b b3 e0 02 00 00 	mov    0x2e0(%rbx),%rsi
   1275f:	48 8d 93 e8 02 00 00 	lea    0x2e8(%rbx),%rdx
   12766:	bf 08 00 00 00       	mov    $0x8,%edi
   1276b:	e8 6f e9 ff ff       	callq  110df <array_realloc>
   12770:	48 63 8b ec 02 00 00 	movslq 0x2ec(%rbx),%rcx
   12777:	48 89 83 e0 02 00 00 	mov    %rax,0x2e0(%rbx)
   1277e:	e9 f8 a1 01 00       	jmpq   2c97b <ev_check_start+0x5b>

0000000000012783 <ev_fork_start.cold.40>:
   12783:	48 8b b3 f0 02 00 00 	mov    0x2f0(%rbx),%rsi
   1278a:	48 8d 93 f8 02 00 00 	lea    0x2f8(%rbx),%rdx
   12791:	bf 08 00 00 00       	mov    $0x8,%edi
   12796:	e8 44 e9 ff ff       	callq  110df <array_realloc>
   1279b:	48 63 8b fc 02 00 00 	movslq 0x2fc(%rbx),%rcx
   127a2:	48 89 83 f0 02 00 00 	mov    %rax,0x2f0(%rbx)
   127a9:	e9 dd a2 01 00       	jmpq   2ca8b <ev_fork_start+0x5b>

00000000000127ae <ev_embed_start.cold.41>:
   127ae:	4c 8b 66 20          	mov    0x20(%rsi),%r12
   127b2:	48 89 f3             	mov    %rsi,%rbx
   127b5:	48 89 fd             	mov    %rdi,%rbp
   127b8:	45 8b ac 24 b8 00 00 	mov    0xb8(%r12),%r13d
   127bf:	00 
   127c0:	e8 99 eb ff ff       	callq  1135e <ev_embeddable_backends>
   127c5:	41 85 c5             	test   %eax,%r13d
   127c8:	0f 84 c0 00 00 00    	je     1288e <ev_embed_start.cold.41+0xe0>
   127ce:	48 8d 05 8b 92 01 00 	lea    0x1928b(%rip),%rax        # 2ba60 <embed_io_cb>
   127d5:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
   127dc:	00 
   127dd:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   127e1:	48 89 ef             	mov    %rbp,%rdi
   127e4:	48 89 43 40          	mov    %rax,0x40(%rbx)
   127e8:	41 8b 84 24 c4 00 00 	mov    0xc4(%r12),%eax
   127ef:	00 
   127f0:	c7 43 54 81 00 00 00 	movl   $0x81,0x54(%rbx)
   127f7:	89 43 50             	mov    %eax,0x50(%rbx)
   127fa:	8b 43 08             	mov    0x8(%rbx),%eax
   127fd:	89 43 30             	mov    %eax,0x30(%rbx)
   12800:	e8 5b 60 01 00       	callq  28860 <ev_io_start>
   12805:	48 8d 05 34 91 01 00 	lea    0x19134(%rip),%rax        # 2b940 <embed_prepare_cb>
   1280c:	48 8d 73 58          	lea    0x58(%rbx),%rsi
   12810:	48 89 ef             	mov    %rbp,%rdi
   12813:	48 89 43 70          	mov    %rax,0x70(%rbx)
   12817:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
   1281e:	00 
   1281f:	c7 43 60 fe ff ff ff 	movl   $0xfffffffe,0x60(%rbx)
   12826:	e8 05 a0 01 00       	callq  2c830 <ev_prepare_start>
   1282b:	48 8d 05 ae a3 01 00 	lea    0x1a3ae(%rip),%rax        # 2cbe0 <embed_fork_cb>
   12832:	48 89 ef             	mov    %rbp,%rdi
   12835:	48 c7 83 28 01 00 00 	movq   $0x0,0x128(%rbx)
   1283c:	00 00 00 00 
   12840:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
   12847:	48 8d b3 28 01 00 00 	lea    0x128(%rbx),%rsi
   1284e:	c7 83 30 01 00 00 00 	movl   $0x0,0x130(%rbx)
   12855:	00 00 00 
   12858:	e8 d3 a1 01 00       	callq  2ca30 <ev_fork_start>
   1285d:	8b 43 08             	mov    0x8(%rbx),%eax
   12860:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   12865:	48 89 ef             	mov    %rbp,%rdi
   12868:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   1286e:	83 f8 fe             	cmp    $0xfffffffe,%eax
   12871:	0f 4c c2             	cmovl  %edx,%eax
   12874:	ba 02 00 00 00       	mov    $0x2,%edx
   12879:	83 f8 02             	cmp    $0x2,%eax
   1287c:	0f 4f c2             	cmovg  %edx,%eax
   1287f:	89 43 08             	mov    %eax,0x8(%rbx)
   12882:	58                   	pop    %rax
   12883:	5b                   	pop    %rbx
   12884:	5d                   	pop    %rbp
   12885:	41 5c                	pop    %r12
   12887:	41 5d                	pop    %r13
   12889:	e9 12 5d 01 00       	jmpq   285a0 <ev_ref>
   1288e:	48 8d 0d 2b 07 03 00 	lea    0x3072b(%rip),%rcx        # 42fc0 <__PRETTY_FUNCTION__.11628>
   12895:	ba 97 14 00 00       	mov    $0x1497,%edx
   1289a:	48 8d 35 c0 f9 02 00 	lea    0x2f9c0(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   128a1:	48 8d 3d c0 06 03 00 	lea    0x306c0(%rip),%rdi        # 42f68 <__FUNCTION__.3752+0xd28>
   128a8:	e8 53 d7 ff ff       	callq  10000 <__assert_fail@plt>

00000000000128ad <ev_cleanup_start.cold.42>:
   128ad:	48 8b b3 00 03 00 00 	mov    0x300(%rbx),%rsi
   128b4:	48 8d 93 08 03 00 00 	lea    0x308(%rbx),%rdx
   128bb:	bf 08 00 00 00       	mov    $0x8,%edi
   128c0:	e8 1a e8 ff ff       	callq  110df <array_realloc>
   128c5:	48 63 8b 0c 03 00 00 	movslq 0x30c(%rbx),%rcx
   128cc:	48 89 83 00 03 00 00 	mov    %rax,0x300(%rbx)
   128d3:	e9 b3 a3 01 00       	jmpq   2cc8b <ev_cleanup_start+0x5b>

00000000000128d8 <ev_async_start.cold.43>:
   128d8:	c7 46 20 00 00 00 00 	movl   $0x0,0x20(%rsi)
   128df:	48 89 fd             	mov    %rdi,%rbp
   128e2:	48 89 f3             	mov    %rsi,%rbx
   128e5:	e8 83 ef ff ff       	callq  1186d <evpipe_init>
   128ea:	8b 85 24 03 00 00    	mov    0x324(%rbp),%eax
   128f0:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   128f5:	48 89 ef             	mov    %rbp,%rdi
   128f8:	8d 50 01             	lea    0x1(%rax),%edx
   128fb:	89 95 24 03 00 00    	mov    %edx,0x324(%rbp)
   12901:	8b 43 08             	mov    0x8(%rbx),%eax
   12904:	89 13                	mov    %edx,(%rbx)
   12906:	83 f8 fe             	cmp    $0xfffffffe,%eax
   12909:	0f 4c c1             	cmovl  %ecx,%eax
   1290c:	b9 02 00 00 00       	mov    $0x2,%ecx
   12911:	83 f8 02             	cmp    $0x2,%eax
   12914:	0f 4f c1             	cmovg  %ecx,%eax
   12917:	89 43 08             	mov    %eax,0x8(%rbx)
   1291a:	e8 81 5c 01 00       	callq  285a0 <ev_ref>
   1291f:	48 63 8d 24 03 00 00 	movslq 0x324(%rbp),%rcx
   12926:	3b 8d 20 03 00 00    	cmp    0x320(%rbp),%ecx
   1292c:	7e 26                	jle    12954 <ev_async_start.cold.43+0x7c>
   1292e:	48 8b b5 18 03 00 00 	mov    0x318(%rbp),%rsi
   12935:	48 8d 95 20 03 00 00 	lea    0x320(%rbp),%rdx
   1293c:	bf 08 00 00 00       	mov    $0x8,%edi
   12941:	e8 99 e7 ff ff       	callq  110df <array_realloc>
   12946:	48 63 8d 24 03 00 00 	movslq 0x324(%rbp),%rcx
   1294d:	48 89 85 18 03 00 00 	mov    %rax,0x318(%rbp)
   12954:	48 8b 85 18 03 00 00 	mov    0x318(%rbp),%rax
   1295b:	48 89 5c c8 f8       	mov    %rbx,-0x8(%rax,%rcx,8)
   12960:	e9 ef a3 01 00       	jmpq   2cd54 <ev_async_start+0x14>

0000000000012965 <.annobin_atexit.c.exit>:
   12965:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1296c:	00 00 00 
   1296f:	90                   	nop

0000000000012970 <deregister_tm_clones>:
   12970:	48 8d 3d 49 3a 24 00 	lea    0x243a49(%rip),%rdi        # 2563c0 <__TMC_END__>
   12977:	48 8d 05 42 3a 24 00 	lea    0x243a42(%rip),%rax        # 2563c0 <__TMC_END__>
   1297e:	48 39 f8             	cmp    %rdi,%rax
   12981:	74 15                	je     12998 <deregister_tm_clones+0x28>
   12983:	48 8b 05 26 06 24 00 	mov    0x240626(%rip),%rax        # 252fb0 <_ITM_deregisterTMCloneTable@Base>
   1298a:	48 85 c0             	test   %rax,%rax
   1298d:	74 09                	je     12998 <deregister_tm_clones+0x28>
   1298f:	ff e0                	jmpq   *%rax
   12991:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12998:	c3                   	retq   
   12999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000129a0 <register_tm_clones>:
   129a0:	48 8d 3d 19 3a 24 00 	lea    0x243a19(%rip),%rdi        # 2563c0 <__TMC_END__>
   129a7:	48 8d 35 12 3a 24 00 	lea    0x243a12(%rip),%rsi        # 2563c0 <__TMC_END__>
   129ae:	48 29 fe             	sub    %rdi,%rsi
   129b1:	48 c1 fe 03          	sar    $0x3,%rsi
   129b5:	48 89 f0             	mov    %rsi,%rax
   129b8:	48 c1 e8 3f          	shr    $0x3f,%rax
   129bc:	48 01 c6             	add    %rax,%rsi
   129bf:	48 d1 fe             	sar    %rsi
   129c2:	74 14                	je     129d8 <register_tm_clones+0x38>
   129c4:	48 8b 05 05 06 24 00 	mov    0x240605(%rip),%rax        # 252fd0 <_ITM_registerTMCloneTable@Base>
   129cb:	48 85 c0             	test   %rax,%rax
   129ce:	74 08                	je     129d8 <register_tm_clones+0x38>
   129d0:	ff e0                	jmpq   *%rax
   129d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   129d8:	c3                   	retq   
   129d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000129e0 <__do_global_dtors_aux>:
   129e0:	f3 0f 1e fa          	endbr64 
   129e4:	80 3d d5 39 24 00 00 	cmpb   $0x0,0x2439d5(%rip)        # 2563c0 <__TMC_END__>
   129eb:	75 2b                	jne    12a18 <__do_global_dtors_aux+0x38>
   129ed:	55                   	push   %rbp
   129ee:	48 83 3d ea 05 24 00 	cmpq   $0x0,0x2405ea(%rip)        # 252fe0 <__cxa_finalize@GLIBC_2.2.5>
   129f5:	00 
   129f6:	48 89 e5             	mov    %rsp,%rbp
   129f9:	74 0c                	je     12a07 <__do_global_dtors_aux+0x27>
   129fb:	48 8d 3d 1e f8 23 00 	lea    0x23f81e(%rip),%rdi        # 252220 <__dso_handle>
   12a02:	e8 59 e0 ff ff       	callq  10a60 <__cxa_finalize@plt>
   12a07:	e8 64 ff ff ff       	callq  12970 <deregister_tm_clones>
   12a0c:	c6 05 ad 39 24 00 01 	movb   $0x1,0x2439ad(%rip)        # 2563c0 <__TMC_END__>
   12a13:	5d                   	pop    %rbp
   12a14:	c3                   	retq   
   12a15:	0f 1f 00             	nopl   (%rax)
   12a18:	c3                   	retq   
   12a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012a20 <frame_dummy>:
   12a20:	f3 0f 1e fa          	endbr64 
   12a24:	e9 77 ff ff ff       	jmpq   129a0 <register_tm_clones>
   12a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012a30 <local_disconnect>:
   12a30:	53                   	push   %rbx
   12a31:	48 89 fb             	mov    %rdi,%rbx
   12a34:	48 8b 3f             	mov    (%rdi),%rdi
   12a37:	48 85 ff             	test   %rdi,%rdi
   12a3a:	74 0c                	je     12a48 <local_disconnect+0x18>
   12a3c:	e8 8f 36 02 00       	callq  360d0 <usock_client_destroy>
   12a41:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   12a48:	8b 7b 20             	mov    0x20(%rbx),%edi
   12a4b:	85 ff                	test   %edi,%edi
   12a4d:	78 0c                	js     12a5b <local_disconnect+0x2b>
   12a4f:	e8 5c d6 ff ff       	callq  100b0 <close@plt>
   12a54:	c7 43 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rbx)
   12a5b:	c7 43 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rbx)
   12a62:	5b                   	pop    %rbx
   12a63:	c3                   	retq   

0000000000012a64 <.annobin_local_disconnect.end>:
   12a64:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12a6b:	00 00 00 00 
   12a6f:	90                   	nop

0000000000012a70 <op_recv>:
   12a70:	f3 0f 1e fa          	endbr64 
   12a74:	48 8b 3f             	mov    (%rdi),%rdi
   12a77:	e9 24 34 02 00       	jmpq   35ea0 <usock_client_recv>

0000000000012a7c <.annobin_op_pollevents.start>:
   12a7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012a80 <op_pollevents>:
   12a80:	f3 0f 1e fa          	endbr64 
   12a84:	48 8b 3f             	mov    (%rdi),%rdi
   12a87:	48 85 ff             	test   %rdi,%rdi
   12a8a:	74 0c                	je     12a98 <op_pollevents+0x18>
   12a8c:	e9 ff 32 02 00       	jmpq   35d90 <usock_client_pollevents>
   12a91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12a98:	31 c0                	xor    %eax,%eax
   12a9a:	c3                   	retq   

0000000000012a9b <.annobin_op_pollevents.end>:
   12a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000012aa0 <op_pollfd>:
   12aa0:	f3 0f 1e fa          	endbr64 
   12aa4:	48 8b 3f             	mov    (%rdi),%rdi
   12aa7:	48 85 ff             	test   %rdi,%rdi
   12aaa:	74 0c                	je     12ab8 <op_pollfd+0x18>
   12aac:	e9 5f 33 02 00       	jmpq   35e10 <usock_client_pollfd>
   12ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12ab8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12abd:	c3                   	retq   

0000000000012abe <.annobin_op_pollfd.end>:
   12abe:	66 90                	xchg   %ax,%ax

0000000000012ac0 <op_send>:
   12ac0:	f3 0f 1e fa          	endbr64 
   12ac4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12ac9:	48 39 47 08          	cmp    %rax,0x8(%rdi)
   12acd:	74 61                	je     12b30 <op_send+0x70>
   12acf:	41 54                	push   %r12
   12ad1:	48 89 f0             	mov    %rsi,%rax
   12ad4:	be 01 00 00 00       	mov    $0x1,%esi
   12ad9:	55                   	push   %rbp
   12ada:	89 d5                	mov    %edx,%ebp
   12adc:	53                   	push   %rbx
   12add:	48 89 fb             	mov    %rdi,%rbx
   12ae0:	48 89 c7             	mov    %rax,%rdi
   12ae3:	e8 08 d6 ff ff       	callq  100f0 <flux_msg_copy@plt>
   12ae8:	49 89 c4             	mov    %rax,%r12
   12aeb:	48 85 c0             	test   %rax,%rax
   12aee:	74 48                	je     12b38 <op_send+0x78>
   12af0:	8b 73 08             	mov    0x8(%rbx),%esi
   12af3:	48 89 c7             	mov    %rax,%rdi
   12af6:	e8 95 dd ff ff       	callq  10890 <flux_msg_set_userid@plt>
   12afb:	85 c0                	test   %eax,%eax
   12afd:	78 41                	js     12b40 <op_send+0x80>
   12aff:	8b 73 0c             	mov    0xc(%rbx),%esi
   12b02:	4c 89 e7             	mov    %r12,%rdi
   12b05:	e8 b6 d5 ff ff       	callq  100c0 <flux_msg_set_rolemask@plt>
   12b0a:	85 c0                	test   %eax,%eax
   12b0c:	78 32                	js     12b40 <op_send+0x80>
   12b0e:	48 8b 3b             	mov    (%rbx),%rdi
   12b11:	89 ea                	mov    %ebp,%edx
   12b13:	4c 89 e6             	mov    %r12,%rsi
   12b16:	e8 05 33 02 00       	callq  35e20 <usock_client_send>
   12b1b:	85 c0                	test   %eax,%eax
   12b1d:	78 21                	js     12b40 <op_send+0x80>
   12b1f:	4c 89 e7             	mov    %r12,%rdi
   12b22:	e8 79 d9 ff ff       	callq  104a0 <flux_msg_destroy@plt>
   12b27:	31 c0                	xor    %eax,%eax
   12b29:	5b                   	pop    %rbx
   12b2a:	5d                   	pop    %rbp
   12b2b:	41 5c                	pop    %r12
   12b2d:	c3                   	retq   
   12b2e:	66 90                	xchg   %ax,%ax
   12b30:	48 8b 3f             	mov    (%rdi),%rdi
   12b33:	e9 e8 32 02 00       	jmpq   35e20 <usock_client_send>
   12b38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12b3d:	eb ea                	jmp    12b29 <op_send+0x69>
   12b3f:	90                   	nop
   12b40:	4c 89 e7             	mov    %r12,%rdi
   12b43:	e8 58 d9 ff ff       	callq  104a0 <flux_msg_destroy@plt>
   12b48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12b4d:	eb da                	jmp    12b29 <op_send+0x69>

0000000000012b4f <.annobin_op_send.end>:
   12b4f:	90                   	nop

0000000000012b50 <op_setopt>:
   12b50:	f3 0f 1e fa          	endbr64 
   12b54:	48 83 ec 08          	sub    $0x8,%rsp
   12b58:	48 85 f6             	test   %rsi,%rsi
   12b5b:	74 6b                	je     12bc8 <op_setopt+0x78>
   12b5d:	49 89 fa             	mov    %rdi,%r10
   12b60:	49 89 c9             	mov    %rcx,%r9
   12b63:	48 8d 3d 96 b6 02 00 	lea    0x2b696(%rip),%rdi        # 3e200 <_fini+0x1c>
   12b6a:	49 89 f0             	mov    %rsi,%r8
   12b6d:	b9 15 00 00 00       	mov    $0x15,%ecx
   12b72:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   12b74:	0f 97 c0             	seta   %al
   12b77:	1c 00                	sbb    $0x0,%al
   12b79:	0f be c0             	movsbl %al,%eax
   12b7c:	85 c0                	test   %eax,%eax
   12b7e:	74 30                	je     12bb0 <op_setopt+0x60>
   12b80:	b9 17 00 00 00       	mov    $0x17,%ecx
   12b85:	48 8d 3d 89 b6 02 00 	lea    0x2b689(%rip),%rdi        # 3e215 <_fini+0x31>
   12b8c:	4c 89 c6             	mov    %r8,%rsi
   12b8f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   12b91:	0f 97 c0             	seta   %al
   12b94:	1c 00                	sbb    $0x0,%al
   12b96:	0f be c0             	movsbl %al,%eax
   12b99:	85 c0                	test   %eax,%eax
   12b9b:	75 2b                	jne    12bc8 <op_setopt+0x78>
   12b9d:	49 83 f9 04          	cmp    $0x4,%r9
   12ba1:	75 25                	jne    12bc8 <op_setopt+0x78>
  return __builtin___memcpy_chk (__dest, __src, __len,
   12ba3:	8b 12                	mov    (%rdx),%edx
   12ba5:	41 89 52 0c          	mov    %edx,0xc(%r10)
   12ba9:	48 83 c4 08          	add    $0x8,%rsp
   12bad:	c3                   	retq   
   12bae:	66 90                	xchg   %ax,%ax
   12bb0:	49 83 f9 04          	cmp    $0x4,%r9
   12bb4:	75 12                	jne    12bc8 <op_setopt+0x78>
   12bb6:	8b 12                	mov    (%rdx),%edx
   12bb8:	41 89 52 08          	mov    %edx,0x8(%r10)
   12bbc:	48 83 c4 08          	add    $0x8,%rsp
   12bc0:	c3                   	retq   
   12bc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12bc8:	f3 0f 1e fa          	endbr64 
   12bcc:	e8 3f cf ff ff       	callq  fb10 <__errno_location@plt>
   12bd1:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   12bd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12bdc:	eb cb                	jmp    12ba9 <op_setopt+0x59>

0000000000012bde <.annobin_op_fini.part.4.start>:
   12bde:	66 90                	xchg   %ax,%ax

0000000000012be0 <op_fini.part.4>:
   12be0:	41 54                	push   %r12
   12be2:	55                   	push   %rbp
   12be3:	53                   	push   %rbx
   12be4:	48 89 fb             	mov    %rdi,%rbx
   12be7:	e8 24 cf ff ff       	callq  fb10 <__errno_location@plt>
   12bec:	48 89 df             	mov    %rbx,%rdi
   12bef:	48 89 c5             	mov    %rax,%rbp
   12bf2:	44 8b 20             	mov    (%rax),%r12d
   12bf5:	e8 36 fe ff ff       	callq  12a30 <local_disconnect>
   12bfa:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   12bfe:	e8 ad ce ff ff       	callq  fab0 <free@plt>
   12c03:	48 89 df             	mov    %rbx,%rdi
   12c06:	e8 a5 ce ff ff       	callq  fab0 <free@plt>
   12c0b:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   12c0f:	5b                   	pop    %rbx
   12c10:	5d                   	pop    %rbp
   12c11:	41 5c                	pop    %r12
   12c13:	c3                   	retq   

0000000000012c14 <.annobin_op_fini.part.4.end>:
   12c14:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12c1b:	00 00 00 00 
   12c1f:	90                   	nop

0000000000012c20 <op_fini>:
   12c20:	f3 0f 1e fa          	endbr64 
   12c24:	48 85 ff             	test   %rdi,%rdi
   12c27:	74 07                	je     12c30 <op_fini+0x10>
   12c29:	eb b5                	jmp    12be0 <op_fini.part.4>
   12c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12c30:	c3                   	retq   

0000000000012c31 <.annobin_local_connect.start>:
   12c31:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12c38:	00 00 00 00 
   12c3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012c40 <local_connect>:
   12c40:	41 54                	push   %r12
   12c42:	55                   	push   %rbp
   12c43:	53                   	push   %rbx
   12c44:	48 89 fb             	mov    %rdi,%rbx
   12c47:	48 8d 3d ea b5 02 00 	lea    0x2b5ea(%rip),%rdi        # 3e238 <_fini+0x54>
   12c4e:	48 83 ec 30          	sub    $0x30,%rsp
   12c52:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12c59:	00 00 
   12c5b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   12c60:	31 c0                	xor    %eax,%eax
   12c62:	48 8b 05 17 b6 02 00 	mov    0x2b617(%rip),%rax        # 3e280 <_fini+0x9c>
   12c69:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%rsp)
   12c70:	00 
   12c71:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   12c76:	48 8b 05 0b b6 02 00 	mov    0x2b60b(%rip),%rax        # 3e288 <_fini+0xa4>
   12c7d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12c82:	e8 c9 cd ff ff       	callq  fa50 <getenv@plt>
   12c87:	48 85 c0             	test   %rax,%rax
   12c8a:	74 3d                	je     12cc9 <local_connect+0x89>
   12c8c:	48 89 c5             	mov    %rax,%rbp
   12c8f:	e8 7c ce ff ff       	callq  fb10 <__errno_location@plt>
   12c94:	ba 0a 00 00 00       	mov    $0xa,%edx
   12c99:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   12c9e:	48 89 ef             	mov    %rbp,%rdi
   12ca1:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   12ca7:	49 89 c4             	mov    %rax,%r12
   12caa:	e8 31 d6 ff ff       	callq  102e0 <strtol@plt>
   12caf:	41 8b 14 24          	mov    (%r12),%edx
   12cb3:	85 d2                	test   %edx,%edx
   12cb5:	0f 85 85 00 00 00    	jne    12d40 <local_connect+0x100>
   12cbb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   12cc0:	80 3a 00             	cmpb   $0x0,(%rdx)
   12cc3:	75 7b                	jne    12d40 <local_connect+0x100>
   12cc5:	89 44 24 10          	mov    %eax,0x10(%rsp)
   12cc9:	48 83 ec 08          	sub    $0x8,%rsp
   12ccd:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   12cd1:	ff 74 24 28          	pushq  0x28(%rsp)
   12cd5:	ff 74 24 28          	pushq  0x28(%rsp)
   12cd9:	ff 74 24 28          	pushq  0x28(%rsp)
   12cdd:	e8 1e 32 02 00       	callq  35f00 <usock_client_connect>
   12ce2:	48 83 c4 20          	add    $0x20,%rsp
   12ce6:	89 43 20             	mov    %eax,0x20(%rbx)
   12ce9:	85 c0                	test   %eax,%eax
   12ceb:	78 43                	js     12d30 <local_connect+0xf0>
   12ced:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   12cf2:	89 c7                	mov    %eax,%edi
   12cf4:	e8 a7 2b 02 00       	callq  358a0 <usock_get_cred>
   12cf9:	85 c0                	test   %eax,%eax
   12cfb:	78 33                	js     12d30 <local_connect+0xf0>
   12cfd:	8b 7b 20             	mov    0x20(%rbx),%edi
   12d00:	e8 1b 34 02 00       	callq  36120 <usock_client_create>
   12d05:	48 89 03             	mov    %rax,(%rbx)
   12d08:	48 85 c0             	test   %rax,%rax
   12d0b:	74 23                	je     12d30 <local_connect+0xf0>
   12d0d:	8b 44 24 08          	mov    0x8(%rsp),%eax
   12d11:	89 43 10             	mov    %eax,0x10(%rbx)
   12d14:	31 c0                	xor    %eax,%eax
   12d16:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   12d1b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   12d22:	00 00 
   12d24:	75 29                	jne    12d4f <local_connect+0x10f>
   12d26:	48 83 c4 30          	add    $0x30,%rsp
   12d2a:	5b                   	pop    %rbx
   12d2b:	5d                   	pop    %rbp
   12d2c:	41 5c                	pop    %r12
   12d2e:	c3                   	retq   
   12d2f:	90                   	nop
   12d30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12d35:	eb df                	jmp    12d16 <local_connect+0xd6>
   12d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   12d3e:	00 00 
   12d40:	41 c7 04 24 16 00 00 	movl   $0x16,(%r12)
   12d47:	00 
   12d48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12d4d:	eb c7                	jmp    12d16 <local_connect+0xd6>
   12d4f:	e8 fc d0 ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000012d54 <.annobin_local_connect.end>:
   12d54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12d5b:	00 00 00 00 
   12d5f:	90                   	nop

0000000000012d60 <op_reconnect>:
   12d60:	f3 0f 1e fa          	endbr64 
   12d64:	53                   	push   %rbx
   12d65:	48 89 fb             	mov    %rdi,%rbx
   12d68:	e8 c3 fc ff ff       	callq  12a30 <local_disconnect>
   12d6d:	48 89 df             	mov    %rbx,%rdi
   12d70:	5b                   	pop    %rbx
   12d71:	e9 ca fe ff ff       	jmpq   12c40 <local_connect>

0000000000012d76 <.annobin_op_getopt.start>:
   12d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12d7d:	00 00 00 

0000000000012d80 <op_getopt>:
   12d80:	f3 0f 1e fa          	endbr64 
   12d84:	48 83 ec 08          	sub    $0x8,%rsp
   12d88:	48 85 f6             	test   %rsi,%rsi
   12d8b:	74 33                	je     12dc0 <op_getopt+0x40>
   12d8d:	49 89 f9             	mov    %rdi,%r9
   12d90:	49 89 c8             	mov    %rcx,%r8
   12d93:	48 8d 3d 92 b4 02 00 	lea    0x2b492(%rip),%rdi        # 3e22c <_fini+0x48>
   12d9a:	b9 0c 00 00 00       	mov    $0xc,%ecx
   12d9f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   12da1:	0f 97 c0             	seta   %al
   12da4:	1c 00                	sbb    $0x0,%al
   12da6:	0f be c0             	movsbl %al,%eax
   12da9:	85 c0                	test   %eax,%eax
   12dab:	75 13                	jne    12dc0 <op_getopt+0x40>
   12dad:	49 83 f8 04          	cmp    $0x4,%r8
   12db1:	75 0d                	jne    12dc0 <op_getopt+0x40>
   12db3:	41 8b 49 10          	mov    0x10(%r9),%ecx
   12db7:	89 0a                	mov    %ecx,(%rdx)
   12db9:	48 83 c4 08          	add    $0x8,%rsp
   12dbd:	c3                   	retq   
   12dbe:	66 90                	xchg   %ax,%ax
   12dc0:	f3 0f 1e fa          	endbr64 
   12dc4:	e8 47 cd ff ff       	callq  fb10 <__errno_location@plt>
   12dc9:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   12dcf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12dd4:	eb e3                	jmp    12db9 <op_getopt+0x39>

0000000000012dd6 <.annobin_connector_init.start>:
   12dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12ddd:	00 00 00 

0000000000012de0 <connector_init>:
   12de0:	f3 0f 1e fa          	endbr64 
   12de4:	41 55                	push   %r13
   12de6:	41 54                	push   %r12
   12de8:	55                   	push   %rbp
   12de9:	53                   	push   %rbx
   12dea:	48 83 ec 08          	sub    $0x8,%rsp
   12dee:	48 85 ff             	test   %rdi,%rdi
   12df1:	0f 84 b9 00 00 00    	je     12eb0 <connector_init+0xd0>
   12df7:	48 89 fd             	mov    %rdi,%rbp
   12dfa:	41 89 f4             	mov    %esi,%r12d
   12dfd:	bf 01 00 00 00       	mov    $0x1,%edi
   12e02:	be 30 00 00 00       	mov    $0x30,%esi
   12e07:	49 89 d5             	mov    %rdx,%r13
   12e0a:	e8 01 d4 ff ff       	callq  10210 <calloc@plt>
   12e0f:	48 89 c3             	mov    %rax,%rbx
   12e12:	48 85 c0             	test   %rax,%rax
   12e15:	0f 84 b5 00 00 00    	je     12ed0 <connector_init+0xf0>
   12e1b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12e20:	48 89 ef             	mov    %rbp,%rdi
   12e23:	c7 43 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rbx)
   12e2a:	48 89 43 08          	mov    %rax,0x8(%rbx)
   12e2e:	c7 43 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rbx)
   12e35:	e8 66 db ff ff       	callq  109a0 <strdup@plt>
   12e3a:	48 89 43 28          	mov    %rax,0x28(%rbx)
   12e3e:	48 85 c0             	test   %rax,%rax
   12e41:	74 53                	je     12e96 <connector_init+0xb6>
   12e43:	48 89 df             	mov    %rbx,%rdi
   12e46:	e8 f5 fd ff ff       	callq  12c40 <local_connect>
   12e4b:	85 c0                	test   %eax,%eax
   12e4d:	78 29                	js     12e78 <connector_init+0x98>
   12e4f:	44 89 e2             	mov    %r12d,%edx
   12e52:	48 8d 35 e7 f3 23 00 	lea    0x23f3e7(%rip),%rsi        # 252240 <handle_ops>
   12e59:	48 89 df             	mov    %rbx,%rdi
   12e5c:	e8 bf cc ff ff       	callq  fb20 <flux_handle_create@plt>
   12e61:	48 89 43 18          	mov    %rax,0x18(%rbx)
   12e65:	48 85 c0             	test   %rax,%rax
   12e68:	74 2c                	je     12e96 <connector_init+0xb6>
   12e6a:	48 83 c4 08          	add    $0x8,%rsp
   12e6e:	5b                   	pop    %rbx
   12e6f:	5d                   	pop    %rbp
   12e70:	41 5c                	pop    %r12
   12e72:	41 5d                	pop    %r13
   12e74:	c3                   	retq   
   12e75:	0f 1f 00             	nopl   (%rax)
   12e78:	e8 93 cc ff ff       	callq  fb10 <__errno_location@plt>
   12e7d:	83 38 02             	cmpl   $0x2,(%rax)
   12e80:	75 14                	jne    12e96 <connector_init+0xb6>
   12e82:	48 89 ea             	mov    %rbp,%rdx
   12e85:	48 8d 35 d4 b3 02 00 	lea    0x2b3d4(%rip),%rsi        # 3e260 <_fini+0x7c>
   12e8c:	4c 89 ef             	mov    %r13,%rdi
   12e8f:	31 c0                	xor    %eax,%eax
   12e91:	e8 1a 92 00 00       	callq  1c0b0 <errprintf>
   12e96:	48 89 df             	mov    %rbx,%rdi
   12e99:	e8 42 fd ff ff       	callq  12be0 <op_fini.part.4>
   12e9e:	48 83 c4 08          	add    $0x8,%rsp
   12ea2:	31 c0                	xor    %eax,%eax
   12ea4:	5b                   	pop    %rbx
   12ea5:	5d                   	pop    %rbp
   12ea6:	41 5c                	pop    %r12
   12ea8:	41 5d                	pop    %r13
   12eaa:	c3                   	retq   
   12eab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12eb0:	e8 5b cc ff ff       	callq  fb10 <__errno_location@plt>
   12eb5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   12ebb:	48 83 c4 08          	add    $0x8,%rsp
   12ebf:	31 c0                	xor    %eax,%eax
   12ec1:	5b                   	pop    %rbx
   12ec2:	5d                   	pop    %rbp
   12ec3:	41 5c                	pop    %r12
   12ec5:	41 5d                	pop    %r13
   12ec7:	c3                   	retq   
   12ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12ecf:	00 
   12ed0:	48 83 c4 08          	add    $0x8,%rsp
   12ed4:	31 c0                	xor    %eax,%eax
   12ed6:	5b                   	pop    %rbx
   12ed7:	5d                   	pop    %rbp
   12ed8:	41 5c                	pop    %r12
   12eda:	41 5d                	pop    %r13
   12edc:	c3                   	retq   

0000000000012edd <.annobin_connector_init.end>:
   12edd:	0f 1f 00             	nopl   (%rax)

0000000000012ee0 <iovec_to_msg>:
   12ee0:	f3 0f 1e fa          	endbr64 
   12ee4:	41 57                	push   %r15
   12ee6:	41 56                	push   %r14
   12ee8:	41 55                	push   %r13
   12eea:	41 54                	push   %r12
   12eec:	55                   	push   %rbp
   12eed:	53                   	push   %rbx
   12eee:	48 83 ec 08          	sub    $0x8,%rsp
   12ef2:	48 85 ff             	test   %rdi,%rdi
   12ef5:	0f 84 22 02 00 00    	je     1311d <iovec_to_msg+0x23d>
   12efb:	49 89 f6             	mov    %rsi,%r14
   12efe:	48 85 f6             	test   %rsi,%rsi
   12f01:	0f 84 f7 01 00 00    	je     130fe <iovec_to_msg+0x21e>
   12f07:	41 89 d5             	mov    %edx,%r13d
   12f0a:	85 d2                	test   %edx,%edx
   12f0c:	0f 8e d5 01 00 00    	jle    130e7 <iovec_to_msg+0x207>
   12f12:	48 63 c2             	movslq %edx,%rax
   12f15:	49 89 fc             	mov    %rdi,%r12
   12f18:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
   12f1c:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   12f20:	48 8d 44 c6 e8       	lea    -0x18(%rsi,%rax,8),%rax
   12f25:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12f29:	48 8b 30             	mov    (%rax),%rsi
   12f2c:	e8 8f 06 00 00       	callq  135c0 <proto_decode>
   12f31:	85 c0                	test   %eax,%eax
   12f33:	78 69                	js     12f9e <iovec_to_msg+0xbe>
   12f35:	41 0f b6 44 24 30    	movzbl 0x30(%r12),%eax
   12f3b:	8d 50 fc             	lea    -0x4(%rax),%edx
   12f3e:	81 e2 fb 00 00 00    	and    $0xfb,%edx
   12f44:	74 0b                	je     12f51 <iovec_to_msg+0x71>
   12f46:	83 e8 01             	sub    $0x1,%eax
   12f49:	3c 01                	cmp    $0x1,%al
   12f4b:	0f 87 96 01 00 00    	ja     130e7 <iovec_to_msg+0x207>
   12f51:	41 0f b6 5c 24 31    	movzbl 0x31(%r12),%ebx
   12f57:	f6 c3 08             	test   $0x8,%bl
   12f5a:	74 5c                	je     12fb8 <iovec_to_msg+0xd8>
   12f5c:	49 8b 56 08          	mov    0x8(%r14),%rdx
   12f60:	48 85 d2             	test   %rdx,%rdx
   12f63:	0f 84 8e 01 00 00    	je     130f7 <iovec_to_msg+0x217>
   12f69:	4c 89 f3             	mov    %r14,%rbx
   12f6c:	31 ed                	xor    %ebp,%ebp
   12f6e:	eb 1f                	jmp    12f8f <iovec_to_msg+0xaf>
   12f70:	8d 45 01             	lea    0x1(%rbp),%eax
   12f73:	44 39 e8             	cmp    %r13d,%eax
   12f76:	0f 84 04 01 00 00    	je     13080 <iovec_to_msg+0x1a0>
   12f7c:	48 83 c3 18          	add    $0x18,%rbx
   12f80:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   12f84:	48 85 d2             	test   %rdx,%rdx
   12f87:	0f 84 0b 01 00 00    	je     13098 <iovec_to_msg+0x1b8>
   12f8d:	89 c5                	mov    %eax,%ebp
   12f8f:	48 8b 33             	mov    (%rbx),%rsi
   12f92:	4c 89 e7             	mov    %r12,%rdi
   12f95:	e8 26 08 00 00       	callq  137c0 <msg_route_append>
   12f9a:	85 c0                	test   %eax,%eax
   12f9c:	79 d2                	jns    12f70 <iovec_to_msg+0x90>
   12f9e:	48 83 c4 08          	add    $0x8,%rsp
   12fa2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12fa7:	5b                   	pop    %rbx
   12fa8:	5d                   	pop    %rbp
   12fa9:	41 5c                	pop    %r12
   12fab:	41 5d                	pop    %r13
   12fad:	41 5e                	pop    %r14
   12faf:	41 5f                	pop    %r15
   12fb1:	c3                   	retq   
   12fb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12fb8:	f6 c3 01             	test   $0x1,%bl
   12fbb:	0f 84 7f 00 00 00    	je     13040 <iovec_to_msg+0x160>
   12fc1:	49 8b 76 08          	mov    0x8(%r14),%rsi
   12fc5:	49 8b 3e             	mov    (%r14),%rdi
   12fc8:	e8 c3 d1 ff ff       	callq  10190 <strndup@plt>
   12fcd:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   12fd2:	48 85 c0             	test   %rax,%rax
   12fd5:	74 c7                	je     12f9e <iovec_to_msg+0xbe>
   12fd7:	bd 01 00 00 00       	mov    $0x1,%ebp
   12fdc:	83 e3 02             	and    $0x2,%ebx
   12fdf:	74 45                	je     13026 <iovec_to_msg+0x146>
   12fe1:	44 39 ed             	cmp    %r13d,%ebp
   12fe4:	0f 84 fd 00 00 00    	je     130e7 <iovec_to_msg+0x207>
   12fea:	41 89 ef             	mov    %ebp,%r15d
   12fed:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   12ff1:	4d 8d 34 c6          	lea    (%r14,%rax,8),%r14
   12ff5:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   12ff9:	49 89 5c 24 28       	mov    %rbx,0x28(%r12)
   12ffe:	48 89 df             	mov    %rbx,%rdi
   13001:	e8 1a d4 ff ff       	callq  10420 <malloc@plt>
   13006:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   1300b:	48 85 c0             	test   %rax,%rax
   1300e:	74 8e                	je     12f9e <iovec_to_msg+0xbe>
   13010:	49 8b 36             	mov    (%r14),%rsi
   13013:	48 89 da             	mov    %rbx,%rdx
   13016:	48 89 c7             	mov    %rax,%rdi
   13019:	e8 f2 d2 ff ff       	callq  10310 <memcpy@plt>
   1301e:	44 39 ed             	cmp    %r13d,%ebp
   13021:	73 0c                	jae    1302f <iovec_to_msg+0x14f>
   13023:	83 c5 01             	add    $0x1,%ebp
   13026:	44 39 ed             	cmp    %r13d,%ebp
   13029:	0f 84 b8 00 00 00    	je     130e7 <iovec_to_msg+0x207>
   1302f:	48 83 c4 08          	add    $0x8,%rsp
   13033:	31 c0                	xor    %eax,%eax
   13035:	5b                   	pop    %rbx
   13036:	5d                   	pop    %rbp
   13037:	41 5c                	pop    %r12
   13039:	41 5d                	pop    %r13
   1303b:	41 5e                	pop    %r14
   1303d:	41 5f                	pop    %r15
   1303f:	c3                   	retq   
   13040:	83 e3 02             	and    $0x2,%ebx
   13043:	74 ea                	je     1302f <iovec_to_msg+0x14f>
   13045:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   13049:	49 89 5c 24 28       	mov    %rbx,0x28(%r12)
   1304e:	48 89 df             	mov    %rbx,%rdi
   13051:	e8 ca d3 ff ff       	callq  10420 <malloc@plt>
   13056:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   1305b:	48 85 c0             	test   %rax,%rax
   1305e:	0f 84 3a ff ff ff    	je     12f9e <iovec_to_msg+0xbe>
   13064:	49 8b 36             	mov    (%r14),%rsi
   13067:	48 89 da             	mov    %rbx,%rdx
   1306a:	48 89 c7             	mov    %rax,%rdi
   1306d:	31 ed                	xor    %ebp,%ebp
   1306f:	e8 9c d2 ff ff       	callq  10310 <memcpy@plt>
   13074:	eb ad                	jmp    13023 <iovec_to_msg+0x143>
   13076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1307d:	00 00 00 
   13080:	41 0f b6 44 24 31    	movzbl 0x31(%r12),%eax
   13086:	a8 01                	test   $0x1,%al
   13088:	75 5d                	jne    130e7 <iovec_to_msg+0x207>
   1308a:	a8 02                	test   $0x2,%al
   1308c:	75 59                	jne    130e7 <iovec_to_msg+0x207>
   1308e:	44 89 ed             	mov    %r13d,%ebp
   13091:	eb 93                	jmp    13026 <iovec_to_msg+0x146>
   13093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13098:	41 0f b6 5c 24 31    	movzbl 0x31(%r12),%ebx
   1309e:	83 c5 02             	add    $0x2,%ebp
   130a1:	f6 c3 01             	test   $0x1,%bl
   130a4:	0f 84 32 ff ff ff    	je     12fdc <iovec_to_msg+0xfc>
   130aa:	44 39 ed             	cmp    %r13d,%ebp
   130ad:	74 38                	je     130e7 <iovec_to_msg+0x207>
   130af:	41 89 ef             	mov    %ebp,%r15d
   130b2:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   130b6:	49 8d 04 c6          	lea    (%r14,%rax,8),%rax
   130ba:	48 8b 70 08          	mov    0x8(%rax),%rsi
   130be:	48 8b 38             	mov    (%rax),%rdi
   130c1:	e8 ca d0 ff ff       	callq  10190 <strndup@plt>
   130c6:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   130cb:	48 85 c0             	test   %rax,%rax
   130ce:	0f 84 ca fe ff ff    	je     12f9e <iovec_to_msg+0xbe>
   130d4:	44 39 ed             	cmp    %r13d,%ebp
   130d7:	72 63                	jb     1313c <iovec_to_msg+0x25c>
   130d9:	83 e3 02             	and    $0x2,%ebx
   130dc:	0f 85 0b ff ff ff    	jne    12fed <iovec_to_msg+0x10d>
   130e2:	e9 3f ff ff ff       	jmpq   13026 <iovec_to_msg+0x146>
   130e7:	e8 24 ca ff ff       	callq  fb10 <__errno_location@plt>
   130ec:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   130f2:	e9 a7 fe ff ff       	jmpq   12f9e <iovec_to_msg+0xbe>
   130f7:	bd 01 00 00 00       	mov    $0x1,%ebp
   130fc:	eb a3                	jmp    130a1 <iovec_to_msg+0x1c1>
   130fe:	48 8d 0d cb b1 02 00 	lea    0x2b1cb(%rip),%rcx        # 3e2d0 <__PRETTY_FUNCTION__.5438>
   13105:	ba 22 00 00 00       	mov    $0x22,%edx
   1310a:	48 8d 35 7f b1 02 00 	lea    0x2b17f(%rip),%rsi        # 3e290 <_fini+0xac>
   13111:	48 8d 3d 8c b1 02 00 	lea    0x2b18c(%rip),%rdi        # 3e2a4 <_fini+0xc0>
   13118:	e8 e3 ce ff ff       	callq  10000 <__assert_fail@plt>
   1311d:	48 8d 0d ac b1 02 00 	lea    0x2b1ac(%rip),%rcx        # 3e2d0 <__PRETTY_FUNCTION__.5438>
   13124:	ba 21 00 00 00       	mov    $0x21,%edx
   13129:	48 8d 35 60 b1 02 00 	lea    0x2b160(%rip),%rsi        # 3e290 <_fini+0xac>
   13130:	48 8d 3d 69 b1 02 00 	lea    0x2b169(%rip),%rdi        # 3e2a0 <_fini+0xbc>
   13137:	e8 c4 ce ff ff       	callq  10000 <__assert_fail@plt>
   1313c:	83 c5 01             	add    $0x1,%ebp
   1313f:	e9 98 fe ff ff       	jmpq   12fdc <iovec_to_msg+0xfc>

0000000000013144 <.annobin_iovec_to_msg.end>:
   13144:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1314b:	00 00 00 00 
   1314f:	90                   	nop

0000000000013150 <msg_to_iovec>:
   13150:	f3 0f 1e fa          	endbr64 
   13154:	41 57                	push   %r15
   13156:	41 56                	push   %r14
   13158:	41 55                	push   %r13
   1315a:	41 54                	push   %r12
   1315c:	55                   	push   %rbp
   1315d:	48 89 f5             	mov    %rsi,%rbp
   13160:	53                   	push   %rbx
   13161:	48 89 fb             	mov    %rdi,%rbx
   13164:	48 83 ec 28          	sub    $0x28,%rsp
   13168:	0f b6 47 30          	movzbl 0x30(%rdi),%eax
   1316c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   13171:	8d 48 fc             	lea    -0x4(%rax),%ecx
   13174:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   13179:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
   1317f:	74 0b                	je     1318c <msg_to_iovec+0x3c>
   13181:	83 e8 01             	sub    $0x1,%eax
   13184:	3c 01                	cmp    $0x1,%al
   13186:	0f 87 67 01 00 00    	ja     132f3 <msg_to_iovec+0x1a3>
   1318c:	48 63 d2             	movslq %edx,%rdx
   1318f:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   13193:	48 89 ee             	mov    %rbp,%rsi
   13196:	e8 e5 02 00 00       	callq  13480 <proto_encode>
   1319b:	85 c0                	test   %eax,%eax
   1319d:	0f 88 62 01 00 00    	js     13305 <msg_to_iovec+0x1b5>
   131a3:	48 89 df             	mov    %rbx,%rdi
   131a6:	e8 85 d5 ff ff       	callq  10730 <flux_msg_frames@plt>
   131ab:	41 89 c5             	mov    %eax,%r13d
   131ae:	85 c0                	test   %eax,%eax
   131b0:	0f 88 4f 01 00 00    	js     13305 <msg_to_iovec+0x1b5>
   131b6:	0f 84 cc 01 00 00    	je     13388 <msg_to_iovec+0x238>
   131bc:	48 98                	cltq   
   131be:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   131c2:	4c 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%r14
   131c9:	00 
   131ca:	4c 89 f7             	mov    %r14,%rdi
   131cd:	e8 4e d2 ff ff       	callq  10420 <malloc@plt>
   131d2:	49 89 c4             	mov    %rax,%r12
   131d5:	48 85 c0             	test   %rax,%rax
   131d8:	0f 84 27 01 00 00    	je     13305 <msg_to_iovec+0x1b5>
   131de:	49 8d 46 e8          	lea    -0x18(%r14),%rax
   131e2:	41 8d 75 ff          	lea    -0x1(%r13),%esi
   131e6:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   131ea:	48 89 29             	mov    %rbp,(%rcx)
   131ed:	0f b6 6b 31          	movzbl 0x31(%rbx),%ebp
   131f1:	48 c7 41 08 14 00 00 	movq   $0x14,0x8(%rcx)
   131f8:	00 
   131f9:	40 f6 c5 02          	test   $0x2,%bpl
   131fd:	74 24                	je     13223 <msg_to_iovec+0xd3>
   131ff:	41 8d 75 fe          	lea    -0x2(%r13),%esi
   13203:	83 fe ff             	cmp    $0xffffffff,%esi
   13206:	0f 84 3e 01 00 00    	je     1334a <msg_to_iovec+0x1fa>
   1320c:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   13210:	49 8d 46 d0          	lea    -0x30(%r14),%rax
   13214:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
   13218:	48 89 0a             	mov    %rcx,(%rdx)
   1321b:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
   1321f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   13223:	40 f6 c5 01          	test   $0x1,%bpl
   13227:	74 29                	je     13252 <msg_to_iovec+0x102>
   13229:	83 ee 01             	sub    $0x1,%esi
   1322c:	83 fe ff             	cmp    $0xffffffff,%esi
   1322f:	0f 84 f6 00 00 00    	je     1332b <msg_to_iovec+0x1db>
   13235:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   13239:	4d 8d 74 04 e8       	lea    -0x18(%r12,%rax,1),%r14
   1323e:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
   13242:	49 89 3e             	mov    %rdi,(%r14)
   13245:	e8 d6 cb ff ff       	callq  fe20 <strlen@plt>
   1324a:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   1324e:	49 89 46 08          	mov    %rax,0x8(%r14)
   13252:	83 e5 08             	and    $0x8,%ebp
   13255:	74 7b                	je     132d2 <msg_to_iovec+0x182>
   13257:	8d 46 ff             	lea    -0x1(%rsi),%eax
   1325a:	83 f8 ff             	cmp    $0xffffffff,%eax
   1325d:	0f 84 06 01 00 00    	je     13369 <msg_to_iovec+0x219>
   13263:	48 98                	cltq   
   13265:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   13269:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1326d:	48 c1 e0 03          	shl    $0x3,%rax
   13271:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
   13275:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   1327c:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
   13283:	00 
   13284:	49 39 df             	cmp    %rbx,%r15
   13287:	74 49                	je     132d2 <msg_to_iovec+0x182>
   13289:	83 fe 01             	cmp    $0x1,%esi
   1328c:	74 7e                	je     1330c <msg_to_iovec+0x1bc>
   1328e:	49 8d 6c 04 d0       	lea    -0x30(%r12,%rax,1),%rbp
   13293:	4d 8d 74 04 e8       	lea    -0x18(%r12,%rax,1),%r14
   13298:	8d 46 fe             	lea    -0x2(%rsi),%eax
   1329b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1329f:	48 c1 e0 03          	shl    $0x3,%rax
   132a3:	48 29 c5             	sub    %rax,%rbp
   132a6:	eb 11                	jmp    132b9 <msg_to_iovec+0x169>
   132a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   132af:	00 
   132b0:	49 83 ee 18          	sub    $0x18,%r14
   132b4:	4c 39 f5             	cmp    %r14,%rbp
   132b7:	74 53                	je     1330c <msg_to_iovec+0x1bc>
   132b9:	49 8d 7f 10          	lea    0x10(%r15),%rdi
   132bd:	49 89 3e             	mov    %rdi,(%r14)
   132c0:	e8 5b cb ff ff       	callq  fe20 <strlen@plt>
   132c5:	4d 8b 7f 08          	mov    0x8(%r15),%r15
   132c9:	49 89 46 08          	mov    %rax,0x8(%r14)
   132cd:	49 39 df             	cmp    %rbx,%r15
   132d0:	75 de                	jne    132b0 <msg_to_iovec+0x160>
   132d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   132d7:	4c 89 20             	mov    %r12,(%rax)
   132da:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   132df:	44 89 28             	mov    %r13d,(%rax)
   132e2:	31 c0                	xor    %eax,%eax
   132e4:	48 83 c4 28          	add    $0x28,%rsp
   132e8:	5b                   	pop    %rbx
   132e9:	5d                   	pop    %rbp
   132ea:	41 5c                	pop    %r12
   132ec:	41 5d                	pop    %r13
   132ee:	41 5e                	pop    %r14
   132f0:	41 5f                	pop    %r15
   132f2:	c3                   	retq   
   132f3:	e8 18 c8 ff ff       	callq  fb10 <__errno_location@plt>
   132f8:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   132fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   13303:	eb df                	jmp    132e4 <msg_to_iovec+0x194>
   13305:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1330a:	eb d8                	jmp    132e4 <msg_to_iovec+0x194>
   1330c:	48 8d 0d ad af 02 00 	lea    0x2afad(%rip),%rcx        # 3e2c0 <__PRETTY_FUNCTION__.5452>
   13313:	ba 95 00 00 00       	mov    $0x95,%edx
   13318:	48 8d 35 71 af 02 00 	lea    0x2af71(%rip),%rsi        # 3e290 <_fini+0xac>
   1331f:	48 8d 3d 8e af 02 00 	lea    0x2af8e(%rip),%rdi        # 3e2b4 <_fini+0xd0>
   13326:	e8 d5 cc ff ff       	callq  10000 <__assert_fail@plt>
   1332b:	48 8d 0d 8e af 02 00 	lea    0x2af8e(%rip),%rcx        # 3e2c0 <__PRETTY_FUNCTION__.5452>
   13332:	ba 88 00 00 00       	mov    $0x88,%edx
   13337:	48 8d 35 52 af 02 00 	lea    0x2af52(%rip),%rsi        # 3e290 <_fini+0xac>
   1333e:	48 8d 3d 6f af 02 00 	lea    0x2af6f(%rip),%rdi        # 3e2b4 <_fini+0xd0>
   13345:	e8 b6 cc ff ff       	callq  10000 <__assert_fail@plt>
   1334a:	48 8d 0d 6f af 02 00 	lea    0x2af6f(%rip),%rcx        # 3e2c0 <__PRETTY_FUNCTION__.5452>
   13351:	ba 82 00 00 00       	mov    $0x82,%edx
   13356:	48 8d 35 33 af 02 00 	lea    0x2af33(%rip),%rsi        # 3e290 <_fini+0xac>
   1335d:	48 8d 3d 50 af 02 00 	lea    0x2af50(%rip),%rdi        # 3e2b4 <_fini+0xd0>
   13364:	e8 97 cc ff ff       	callq  10000 <__assert_fail@plt>
   13369:	48 8d 0d 50 af 02 00 	lea    0x2af50(%rip),%rcx        # 3e2c0 <__PRETTY_FUNCTION__.5452>
   13370:	ba 90 00 00 00       	mov    $0x90,%edx
   13375:	48 8d 35 14 af 02 00 	lea    0x2af14(%rip),%rsi        # 3e290 <_fini+0xac>
   1337c:	48 8d 3d 31 af 02 00 	lea    0x2af31(%rip),%rdi        # 3e2b4 <_fini+0xd0>
   13383:	e8 78 cc ff ff       	callq  10000 <__assert_fail@plt>
   13388:	48 8d 0d 31 af 02 00 	lea    0x2af31(%rip),%rcx        # 3e2c0 <__PRETTY_FUNCTION__.5452>
   1338f:	ba 77 00 00 00       	mov    $0x77,%edx
   13394:	48 8d 35 f5 ae 02 00 	lea    0x2aef5(%rip),%rsi        # 3e290 <_fini+0xac>
   1339b:	48 8d 3d 06 af 02 00 	lea    0x2af06(%rip),%rdi        # 3e2a8 <_fini+0xc4>
   133a2:	e8 59 cc ff ff       	callq  10000 <__assert_fail@plt>

00000000000133a7 <.annobin_message_iovec.c_end>:
   133a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   133ae:	00 00 

00000000000133b0 <proto_realloc>:
   133b0:	f3 0f 1e fa          	endbr64 
   133b4:	48 89 f8             	mov    %rdi,%rax
   133b7:	48 83 fe 15          	cmp    $0x15,%rsi
   133bb:	ba 00 00 00 00       	mov    $0x0,%edx
   133c0:	48 0f 43 c2          	cmovae %rdx,%rax
   133c4:	c3                   	retq   

00000000000133c5 <.annobin_be_push_u32.start>:
   133c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   133cc:	00 00 00 00 

00000000000133d0 <be_push_u32>:
   133d0:	48 83 ec 18          	sub    $0x18,%rsp
   133d4:	0f ca                	bswap  %edx
   133d6:	b9 04 00 00 00       	mov    $0x4,%ecx
   133db:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   133e2:	00 00 
   133e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   133e9:	31 c0                	xor    %eax,%eax
   133eb:	89 54 24 04          	mov    %edx,0x4(%rsp)
   133ef:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   133f4:	e8 97 61 00 00       	callq  19590 <push_bytes>
   133f9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   133fe:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13405:	00 00 
   13407:	75 05                	jne    1340e <be_push_u32+0x3e>
   13409:	48 83 c4 18          	add    $0x18,%rsp
   1340d:	c3                   	retq   
   1340e:	e8 3d ca ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000013413 <.annobin_be_pull_u32.start>:
   13413:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1341a:	00 00 00 00 
   1341e:	66 90                	xchg   %ax,%ax

0000000000013420 <be_pull_u32>:
   13420:	53                   	push   %rbx
   13421:	b9 04 00 00 00       	mov    $0x4,%ecx
   13426:	48 89 d3             	mov    %rdx,%rbx
   13429:	48 83 ec 10          	sub    $0x10,%rsp
   1342d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13434:	00 00 
   13436:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1343b:	31 c0                	xor    %eax,%eax
   1343d:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   13442:	e8 69 5e 00 00       	callq  192b0 <pull_bytes>
   13447:	84 c0                	test   %al,%al
   13449:	75 1d                	jne    13468 <be_pull_u32+0x48>
   1344b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   13450:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13457:	00 00 
   13459:	75 1c                	jne    13477 <be_pull_u32+0x57>
   1345b:	48 83 c4 10          	add    $0x10,%rsp
   1345f:	5b                   	pop    %rbx
   13460:	c3                   	retq   
   13461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13468:	48 85 db             	test   %rbx,%rbx
   1346b:	74 de                	je     1344b <be_pull_u32+0x2b>
   1346d:	8b 54 24 04          	mov    0x4(%rsp),%edx
   13471:	0f ca                	bswap  %edx
   13473:	89 13                	mov    %edx,(%rbx)
   13475:	eb d4                	jmp    1344b <be_pull_u32+0x2b>
   13477:	e8 d4 c9 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001347c <.annobin_be_pull_u32.end>:
   1347c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013480 <proto_encode>:
   13480:	f3 0f 1e fa          	endbr64 
   13484:	41 55                	push   %r13
   13486:	49 89 d5             	mov    %rdx,%r13
   13489:	41 54                	push   %r12
   1348b:	49 89 fc             	mov    %rdi,%r12
   1348e:	48 8d 3d 1b ff ff ff 	lea    -0xe5(%rip),%rdi        # 133b0 <proto_realloc>
   13495:	55                   	push   %rbp
   13496:	53                   	push   %rbx
   13497:	48 83 ec 28          	sub    $0x28,%rsp
   1349b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   134a2:	00 00 
   134a4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   134a9:	31 c0                	xor    %eax,%eax
   134ab:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   134b0:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   134b7:	00 00 
   134b9:	e8 b2 62 00 00       	callq  19770 <push_set_realloc>
   134be:	49 83 fd 13          	cmp    $0x13,%r13
   134c2:	0f 86 e0 00 00 00    	jbe    135a8 <proto_encode+0x128>
   134c8:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   134cd:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   134d2:	ba 8e 00 00 00       	mov    $0x8e,%edx
   134d7:	48 89 ee             	mov    %rbp,%rsi
   134da:	48 89 df             	mov    %rbx,%rdi
   134dd:	e8 1e 62 00 00       	callq  19700 <push_u8>
   134e2:	84 c0                	test   %al,%al
   134e4:	0f 84 be 00 00 00    	je     135a8 <proto_encode+0x128>
   134ea:	ba 01 00 00 00       	mov    $0x1,%edx
   134ef:	48 89 ee             	mov    %rbp,%rsi
   134f2:	48 89 df             	mov    %rbx,%rdi
   134f5:	e8 06 62 00 00       	callq  19700 <push_u8>
   134fa:	84 c0                	test   %al,%al
   134fc:	0f 84 a6 00 00 00    	je     135a8 <proto_encode+0x128>
   13502:	41 0f b6 14 24       	movzbl (%r12),%edx
   13507:	48 89 ee             	mov    %rbp,%rsi
   1350a:	48 89 df             	mov    %rbx,%rdi
   1350d:	e8 ee 61 00 00       	callq  19700 <push_u8>
   13512:	84 c0                	test   %al,%al
   13514:	0f 84 8e 00 00 00    	je     135a8 <proto_encode+0x128>
   1351a:	41 0f b6 54 24 01    	movzbl 0x1(%r12),%edx
   13520:	48 89 ee             	mov    %rbp,%rsi
   13523:	48 89 df             	mov    %rbx,%rdi
   13526:	e8 d5 61 00 00       	callq  19700 <push_u8>
   1352b:	84 c0                	test   %al,%al
   1352d:	74 79                	je     135a8 <proto_encode+0x128>
   1352f:	41 8b 54 24 04       	mov    0x4(%r12),%edx
   13534:	48 89 ee             	mov    %rbp,%rsi
   13537:	48 89 df             	mov    %rbx,%rdi
   1353a:	e8 91 fe ff ff       	callq  133d0 <be_push_u32>
   1353f:	84 c0                	test   %al,%al
   13541:	74 65                	je     135a8 <proto_encode+0x128>
   13543:	41 8b 54 24 08       	mov    0x8(%r12),%edx
   13548:	48 89 ee             	mov    %rbp,%rsi
   1354b:	48 89 df             	mov    %rbx,%rdi
   1354e:	e8 7d fe ff ff       	callq  133d0 <be_push_u32>
   13553:	84 c0                	test   %al,%al
   13555:	74 51                	je     135a8 <proto_encode+0x128>
   13557:	41 8b 54 24 0c       	mov    0xc(%r12),%edx
   1355c:	48 89 ee             	mov    %rbp,%rsi
   1355f:	48 89 df             	mov    %rbx,%rdi
   13562:	e8 69 fe ff ff       	callq  133d0 <be_push_u32>
   13567:	84 c0                	test   %al,%al
   13569:	74 3d                	je     135a8 <proto_encode+0x128>
   1356b:	41 8b 54 24 10       	mov    0x10(%r12),%edx
   13570:	48 89 ee             	mov    %rbp,%rsi
   13573:	48 89 df             	mov    %rbx,%rdi
   13576:	e8 55 fe ff ff       	callq  133d0 <be_push_u32>
   1357b:	84 c0                	test   %al,%al
   1357d:	74 29                	je     135a8 <proto_encode+0x128>
   1357f:	4c 39 6c 24 10       	cmp    %r13,0x10(%rsp)
   13584:	72 22                	jb     135a8 <proto_encode+0x128>
   13586:	31 c0                	xor    %eax,%eax
   13588:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1358d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13594:	00 00 
   13596:	75 22                	jne    135ba <proto_encode+0x13a>
   13598:	48 83 c4 28          	add    $0x28,%rsp
   1359c:	5b                   	pop    %rbx
   1359d:	5d                   	pop    %rbp
   1359e:	41 5c                	pop    %r12
   135a0:	41 5d                	pop    %r13
   135a2:	c3                   	retq   
   135a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   135a8:	e8 63 c5 ff ff       	callq  fb10 <__errno_location@plt>
   135ad:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   135b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   135b8:	eb ce                	jmp    13588 <proto_encode+0x108>
   135ba:	e8 91 c8 ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000135bf <.annobin_proto_decode.start>:
   135bf:	90                   	nop

00000000000135c0 <proto_decode>:
   135c0:	f3 0f 1e fa          	endbr64 
   135c4:	41 54                	push   %r12
   135c6:	49 89 fc             	mov    %rdi,%r12
   135c9:	55                   	push   %rbp
   135ca:	53                   	push   %rbx
   135cb:	48 83 ec 20          	sub    $0x20,%rsp
   135cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   135d6:	00 00 
   135d8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   135dd:	31 c0                	xor    %eax,%eax
   135df:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   135e4:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   135e9:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   135ee:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   135f3:	48 89 ee             	mov    %rbp,%rsi
   135f6:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   135fb:	48 89 df             	mov    %rbx,%rdi
   135fe:	e8 3d 5e 00 00       	callq  19440 <pull_u8>
   13603:	84 c0                	test   %al,%al
   13605:	0f 84 d5 00 00 00    	je     136e0 <proto_decode+0x120>
   1360b:	80 7c 24 06 8e       	cmpb   $0x8e,0x6(%rsp)
   13610:	0f 85 ca 00 00 00    	jne    136e0 <proto_decode+0x120>
   13616:	48 8d 54 24 07       	lea    0x7(%rsp),%rdx
   1361b:	48 89 ee             	mov    %rbp,%rsi
   1361e:	48 89 df             	mov    %rbx,%rdi
   13621:	e8 1a 5e 00 00       	callq  19440 <pull_u8>
   13626:	84 c0                	test   %al,%al
   13628:	0f 84 b2 00 00 00    	je     136e0 <proto_decode+0x120>
   1362e:	80 7c 24 07 01       	cmpb   $0x1,0x7(%rsp)
   13633:	0f 85 a7 00 00 00    	jne    136e0 <proto_decode+0x120>
   13639:	4c 89 e2             	mov    %r12,%rdx
   1363c:	48 89 ee             	mov    %rbp,%rsi
   1363f:	48 89 df             	mov    %rbx,%rdi
   13642:	e8 f9 5d 00 00       	callq  19440 <pull_u8>
   13647:	84 c0                	test   %al,%al
   13649:	0f 84 91 00 00 00    	je     136e0 <proto_decode+0x120>
   1364f:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
   13654:	48 89 ee             	mov    %rbp,%rsi
   13657:	48 89 df             	mov    %rbx,%rdi
   1365a:	e8 e1 5d 00 00       	callq  19440 <pull_u8>
   1365f:	84 c0                	test   %al,%al
   13661:	74 7d                	je     136e0 <proto_decode+0x120>
   13663:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
   13668:	48 89 ee             	mov    %rbp,%rsi
   1366b:	48 89 df             	mov    %rbx,%rdi
   1366e:	e8 ad fd ff ff       	callq  13420 <be_pull_u32>
   13673:	84 c0                	test   %al,%al
   13675:	74 69                	je     136e0 <proto_decode+0x120>
   13677:	49 8d 54 24 08       	lea    0x8(%r12),%rdx
   1367c:	48 89 ee             	mov    %rbp,%rsi
   1367f:	48 89 df             	mov    %rbx,%rdi
   13682:	e8 99 fd ff ff       	callq  13420 <be_pull_u32>
   13687:	84 c0                	test   %al,%al
   13689:	74 55                	je     136e0 <proto_decode+0x120>
   1368b:	49 8d 54 24 0c       	lea    0xc(%r12),%rdx
   13690:	48 89 ee             	mov    %rbp,%rsi
   13693:	48 89 df             	mov    %rbx,%rdi
   13696:	e8 85 fd ff ff       	callq  13420 <be_pull_u32>
   1369b:	84 c0                	test   %al,%al
   1369d:	74 41                	je     136e0 <proto_decode+0x120>
   1369f:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   136a4:	48 89 ee             	mov    %rbp,%rsi
   136a7:	48 89 df             	mov    %rbx,%rdi
   136aa:	e8 71 fd ff ff       	callq  13420 <be_pull_u32>
   136af:	84 c0                	test   %al,%al
   136b1:	74 2d                	je     136e0 <proto_decode+0x120>
   136b3:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   136b9:	75 25                	jne    136e0 <proto_decode+0x120>
   136bb:	31 c0                	xor    %eax,%eax
   136bd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   136c2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   136c9:	00 00 
   136cb:	75 25                	jne    136f2 <proto_decode+0x132>
   136cd:	48 83 c4 20          	add    $0x20,%rsp
   136d1:	5b                   	pop    %rbx
   136d2:	5d                   	pop    %rbp
   136d3:	41 5c                	pop    %r12
   136d5:	c3                   	retq   
   136d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   136dd:	00 00 00 
   136e0:	e8 2b c4 ff ff       	callq  fb10 <__errno_location@plt>
   136e5:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   136eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   136f0:	eb cb                	jmp    136bd <proto_decode+0xfd>
   136f2:	e8 59 c7 ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000136f7 <.annobin_message_proto.c_end>:
   136f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   136fe:	00 00 

0000000000013700 <route_id_create>:
   13700:	41 55                	push   %r13
   13702:	49 89 fd             	mov    %rdi,%r13
   13705:	bf 01 00 00 00       	mov    $0x1,%edi
   1370a:	41 54                	push   %r12
   1370c:	41 89 f4             	mov    %esi,%r12d
   1370f:	55                   	push   %rbp
   13710:	49 8d 74 24 11       	lea    0x11(%r12),%rsi
   13715:	53                   	push   %rbx
   13716:	48 83 ec 08          	sub    $0x8,%rsp
   1371a:	e8 f1 ca ff ff       	callq  10210 <calloc@plt>
   1371f:	48 89 c3             	mov    %rax,%rbx
   13722:	48 85 c0             	test   %rax,%rax
   13725:	74 0a                	je     13731 <route_id_create+0x31>
   13727:	4d 85 ed             	test   %r13,%r13
   1372a:	74 05                	je     13731 <route_id_create+0x31>
   1372c:	45 85 e4             	test   %r12d,%r12d
   1372f:	75 0f                	jne    13740 <route_id_create+0x40>
   13731:	48 83 c4 08          	add    $0x8,%rsp
   13735:	48 89 d8             	mov    %rbx,%rax
   13738:	5b                   	pop    %rbx
   13739:	5d                   	pop    %rbp
   1373a:	41 5c                	pop    %r12
   1373c:	41 5d                	pop    %r13
   1373e:	c3                   	retq   
   1373f:	90                   	nop
   13740:	4c 89 e2             	mov    %r12,%rdx
   13743:	4c 89 ee             	mov    %r13,%rsi
   13746:	48 8d 78 10          	lea    0x10(%rax),%rdi
   1374a:	e8 c1 cb ff ff       	callq  10310 <memcpy@plt>
   1374f:	48 89 5b 08          	mov    %rbx,0x8(%rbx)
   13753:	48 89 d8             	mov    %rbx,%rax
   13756:	48 89 1b             	mov    %rbx,(%rbx)
   13759:	48 83 c4 08          	add    $0x8,%rsp
   1375d:	5b                   	pop    %rbx
   1375e:	5d                   	pop    %rbp
   1375f:	41 5c                	pop    %r12
   13761:	41 5d                	pop    %r13
   13763:	c3                   	retq   

0000000000013764 <.annobin_msg_route_push.start>:
   13764:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1376b:	00 00 00 00 
   1376f:	90                   	nop

0000000000013770 <msg_route_push>:
   13770:	f3 0f 1e fa          	endbr64 
   13774:	55                   	push   %rbp
   13775:	48 89 f5             	mov    %rsi,%rbp
   13778:	53                   	push   %rbx
   13779:	48 89 fb             	mov    %rdi,%rbx
   1377c:	48 89 f7             	mov    %rsi,%rdi
   1377f:	48 83 ec 08          	sub    $0x8,%rsp
   13783:	e8 98 c6 ff ff       	callq  fe20 <strlen@plt>
   13788:	48 89 ef             	mov    %rbp,%rdi
   1378b:	89 c6                	mov    %eax,%esi
   1378d:	e8 6e ff ff ff       	callq  13700 <route_id_create>
   13792:	48 85 c0             	test   %rax,%rax
   13795:	74 1e                	je     137b5 <msg_route_push+0x45>
   13797:	48 8b 13             	mov    (%rbx),%rdx
   1379a:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1379e:	48 89 10             	mov    %rdx,(%rax)
   137a1:	48 89 42 08          	mov    %rax,0x8(%rdx)
   137a5:	83 43 10 01          	addl   $0x1,0x10(%rbx)
   137a9:	48 89 03             	mov    %rax,(%rbx)
   137ac:	31 c0                	xor    %eax,%eax
   137ae:	48 83 c4 08          	add    $0x8,%rsp
   137b2:	5b                   	pop    %rbx
   137b3:	5d                   	pop    %rbp
   137b4:	c3                   	retq   
   137b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   137ba:	eb f2                	jmp    137ae <msg_route_push+0x3e>

00000000000137bc <.annobin_msg_route_append.start>:
   137bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000137c0 <msg_route_append>:
   137c0:	f3 0f 1e fa          	endbr64 
   137c4:	53                   	push   %rbx
   137c5:	48 89 fb             	mov    %rdi,%rbx
   137c8:	48 85 ff             	test   %rdi,%rdi
   137cb:	74 7d                	je     1384a <msg_route_append+0x8a>
   137cd:	f6 47 31 08          	testb  $0x8,0x31(%rdi)
   137d1:	74 58                	je     1382b <msg_route_append+0x6b>
   137d3:	48 89 f7             	mov    %rsi,%rdi
   137d6:	48 85 f6             	test   %rsi,%rsi
   137d9:	74 31                	je     1380c <msg_route_append+0x4c>
   137db:	89 d6                	mov    %edx,%esi
   137dd:	e8 1e ff ff ff       	callq  13700 <route_id_create>
   137e2:	48 85 c0             	test   %rax,%rax
   137e5:	74 1e                	je     13805 <msg_route_append+0x45>
   137e7:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   137eb:	48 89 18             	mov    %rbx,(%rax)
   137ee:	48 89 50 08          	mov    %rdx,0x8(%rax)
   137f2:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   137f6:	48 89 02             	mov    %rax,(%rdx)
   137f9:	48 89 43 08          	mov    %rax,0x8(%rbx)
   137fd:	31 c0                	xor    %eax,%eax
   137ff:	83 43 10 01          	addl   $0x1,0x10(%rbx)
   13803:	5b                   	pop    %rbx
   13804:	c3                   	retq   
   13805:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1380a:	5b                   	pop    %rbx
   1380b:	c3                   	retq   
   1380c:	48 8d 0d 2d ab 02 00 	lea    0x2ab2d(%rip),%rcx        # 3e340 <__PRETTY_FUNCTION__.5439>
   13813:	ba 40 00 00 00       	mov    $0x40,%edx
   13818:	48 8d 35 be aa 02 00 	lea    0x2aabe(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   1381f:	48 8d 3d 3c e1 02 00 	lea    0x2e13c(%rip),%rdi        # 41962 <f58_prefix+0x24ff>
   13826:	e8 d5 c7 ff ff       	callq  10000 <__assert_fail@plt>
   1382b:	48 8d 0d 0e ab 02 00 	lea    0x2ab0e(%rip),%rcx        # 3e340 <__PRETTY_FUNCTION__.5439>
   13832:	ba 3f 00 00 00       	mov    $0x3f,%edx
   13837:	48 8d 35 9f aa 02 00 	lea    0x2aa9f(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   1383e:	48 8d 3d a8 aa 02 00 	lea    0x2aaa8(%rip),%rdi        # 3e2ed <__PRETTY_FUNCTION__.5438+0x1d>
   13845:	e8 b6 c7 ff ff       	callq  10000 <__assert_fail@plt>
   1384a:	48 8d 0d ef aa 02 00 	lea    0x2aaef(%rip),%rcx        # 3e340 <__PRETTY_FUNCTION__.5439>
   13851:	ba 3e 00 00 00       	mov    $0x3e,%edx
   13856:	48 8d 35 80 aa 02 00 	lea    0x2aa80(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   1385d:	48 8d 3d 3c aa 02 00 	lea    0x2aa3c(%rip),%rdi        # 3e2a0 <_fini+0xbc>
   13864:	e8 97 c7 ff ff       	callq  10000 <__assert_fail@plt>

0000000000013869 <.annobin_msg_route_append.end>:
   13869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013870 <msg_route_clear>:
   13870:	f3 0f 1e fa          	endbr64 
   13874:	53                   	push   %rbx
   13875:	48 85 ff             	test   %rdi,%rdi
   13878:	74 41                	je     138bb <msg_route_clear+0x4b>
   1387a:	48 89 fb             	mov    %rdi,%rbx
   1387d:	f6 47 31 08          	testb  $0x8,0x31(%rdi)
   13881:	74 57                	je     138da <msg_route_clear+0x6a>
   13883:	48 8b 3f             	mov    (%rdi),%rdi
   13886:	48 39 fb             	cmp    %rdi,%rbx
   13889:	74 20                	je     138ab <msg_route_clear+0x3b>
   1388b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13890:	48 8b 17             	mov    (%rdi),%rdx
   13893:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13897:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1389b:	48 89 10             	mov    %rdx,(%rax)
   1389e:	e8 0d c2 ff ff       	callq  fab0 <free@plt>
   138a3:	48 8b 3b             	mov    (%rbx),%rdi
   138a6:	48 39 df             	cmp    %rbx,%rdi
   138a9:	75 e5                	jne    13890 <msg_route_clear+0x20>
   138ab:	48 89 5b 08          	mov    %rbx,0x8(%rbx)
   138af:	48 89 1b             	mov    %rbx,(%rbx)
   138b2:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
   138b9:	5b                   	pop    %rbx
   138ba:	c3                   	retq   
   138bb:	48 8d 0d 6e aa 02 00 	lea    0x2aa6e(%rip),%rcx        # 3e330 <__PRETTY_FUNCTION__.5444>
   138c2:	ba 4b 00 00 00       	mov    $0x4b,%edx
   138c7:	48 8d 35 0f aa 02 00 	lea    0x2aa0f(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   138ce:	48 8d 3d cb a9 02 00 	lea    0x2a9cb(%rip),%rdi        # 3e2a0 <_fini+0xbc>
   138d5:	e8 26 c7 ff ff       	callq  10000 <__assert_fail@plt>
   138da:	48 8d 0d 4f aa 02 00 	lea    0x2aa4f(%rip),%rcx        # 3e330 <__PRETTY_FUNCTION__.5444>
   138e1:	ba 4c 00 00 00       	mov    $0x4c,%edx
   138e6:	48 8d 35 f0 a9 02 00 	lea    0x2a9f0(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   138ed:	48 8d 3d f9 a9 02 00 	lea    0x2a9f9(%rip),%rdi        # 3e2ed <__PRETTY_FUNCTION__.5438+0x1d>
   138f4:	e8 07 c7 ff ff       	callq  10000 <__assert_fail@plt>

00000000000138f9 <.annobin_msg_route_clear.end>:
   138f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013900 <msg_route_delete_last>:
   13900:	f3 0f 1e fa          	endbr64 
   13904:	53                   	push   %rbx
   13905:	48 85 ff             	test   %rdi,%rdi
   13908:	74 2c                	je     13936 <msg_route_delete_last+0x36>
   1390a:	48 89 fb             	mov    %rdi,%rbx
   1390d:	f6 47 31 08          	testb  $0x8,0x31(%rdi)
   13911:	74 42                	je     13955 <msg_route_delete_last+0x55>
   13913:	48 8b 3f             	mov    (%rdi),%rdi
   13916:	48 39 df             	cmp    %rbx,%rdi
   13919:	74 17                	je     13932 <msg_route_delete_last+0x32>
   1391b:	48 8b 17             	mov    (%rdi),%rdx
   1391e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13922:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13926:	48 89 10             	mov    %rdx,(%rax)
   13929:	e8 82 c1 ff ff       	callq  fab0 <free@plt>
   1392e:	83 6b 10 01          	subl   $0x1,0x10(%rbx)
   13932:	31 c0                	xor    %eax,%eax
   13934:	5b                   	pop    %rbx
   13935:	c3                   	retq   
   13936:	48 8d 0d d3 a9 02 00 	lea    0x2a9d3(%rip),%rcx        # 3e310 <__PRETTY_FUNCTION__.5452>
   1393d:	ba 56 00 00 00       	mov    $0x56,%edx
   13942:	48 8d 35 94 a9 02 00 	lea    0x2a994(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   13949:	48 8d 3d 50 a9 02 00 	lea    0x2a950(%rip),%rdi        # 3e2a0 <_fini+0xbc>
   13950:	e8 ab c6 ff ff       	callq  10000 <__assert_fail@plt>
   13955:	48 8d 0d b4 a9 02 00 	lea    0x2a9b4(%rip),%rcx        # 3e310 <__PRETTY_FUNCTION__.5452>
   1395c:	ba 57 00 00 00       	mov    $0x57,%edx
   13961:	48 8d 35 75 a9 02 00 	lea    0x2a975(%rip),%rsi        # 3e2dd <__PRETTY_FUNCTION__.5438+0xd>
   13968:	48 8d 3d 7e a9 02 00 	lea    0x2a97e(%rip),%rdi        # 3e2ed <__PRETTY_FUNCTION__.5438+0x1d>
   1396f:	e8 8c c6 ff ff       	callq  10000 <__assert_fail@plt>

0000000000013974 <.annobin_message_route.c_end>:
   13974:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1397b:	00 00 00 
   1397e:	66 90                	xchg   %ax,%ax

0000000000013980 <cbuf_is_valid>:
   13980:	53                   	push   %rbx
   13981:	48 85 ff             	test   %rdi,%rdi
   13984:	0f 84 38 04 00 00    	je     13dc2 <cbuf_is_valid+0x442>
   1398a:	48 89 fb             	mov    %rdi,%rbx
   1398d:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   13991:	e8 4a d1 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   13996:	83 f8 10             	cmp    $0x10,%eax
   13999:	0f 85 90 02 00 00    	jne    13c2f <cbuf_is_valid+0x2af>
   1399f:	48 8b 53 58          	mov    0x58(%rbx),%rdx
   139a3:	48 85 d2             	test   %rdx,%rdx
   139a6:	0f 84 c1 02 00 00    	je     13c6d <cbuf_is_valid+0x2ed>
   139ac:	b8 ef be ad de       	mov    $0xdeadbeef,%eax
   139b1:	48 39 03             	cmp    %rax,(%rbx)
   139b4:	0f 85 94 02 00 00    	jne    13c4e <cbuf_is_valid+0x2ce>
   139ba:	48 8b 4a f8          	mov    -0x8(%rdx),%rcx
   139be:	48 3b 0b             	cmp    (%rbx),%rcx
   139c1:	0f 85 22 03 00 00    	jne    13ce9 <cbuf_is_valid+0x369>
   139c7:	48 63 73 3c          	movslq 0x3c(%rbx),%rsi
   139cb:	48 89 f0             	mov    %rsi,%rax
   139ce:	48 3b 4c 32 01       	cmp    0x1(%rdx,%rsi,1),%rcx
   139d3:	0f 85 f1 02 00 00    	jne    13cca <cbuf_is_valid+0x34a>
   139d9:	8b 53 30             	mov    0x30(%rbx),%edx
   139dc:	85 d2                	test   %edx,%edx
   139de:	0f 8e c7 02 00 00    	jle    13cab <cbuf_is_valid+0x32b>
   139e4:	39 d6                	cmp    %edx,%esi
   139e6:	0f 8d a0 02 00 00    	jge    13c8c <cbuf_is_valid+0x30c>
   139ec:	85 f6                	test   %esi,%esi
   139ee:	0f 8e ed 03 00 00    	jle    13de1 <cbuf_is_valid+0x461>
   139f4:	8b 4b 34             	mov    0x34(%rbx),%ecx
   139f7:	39 ce                	cmp    %ecx,%esi
   139f9:	0f 8c d3 01 00 00    	jl     13bd2 <cbuf_is_valid+0x252>
   139ff:	8b 53 38             	mov    0x38(%rbx),%edx
   13a02:	39 d6                	cmp    %edx,%esi
   13a04:	0f 8f a9 01 00 00    	jg     13bb3 <cbuf_is_valid+0x233>
   13a0a:	85 c9                	test   %ecx,%ecx
   13a0c:	0f 8e 82 01 00 00    	jle    13b94 <cbuf_is_valid+0x214>
   13a12:	85 d2                	test   %edx,%edx
   13a14:	0f 8e 5b 01 00 00    	jle    13b75 <cbuf_is_valid+0x1f5>
   13a1a:	8b 7b 40             	mov    0x40(%rbx),%edi
   13a1d:	85 ff                	test   %edi,%edi
   13a1f:	0f 88 31 01 00 00    	js     13b56 <cbuf_is_valid+0x1d6>
   13a25:	39 fe                	cmp    %edi,%esi
   13a27:	0f 8c 0a 01 00 00    	jl     13b37 <cbuf_is_valid+0x1b7>
   13a2d:	83 7b 44 02          	cmpl   $0x2,0x44(%rbx)
   13a31:	0f 87 e1 00 00 00    	ja     13b18 <cbuf_is_valid+0x198>
   13a37:	8b 4b 48             	mov    0x48(%rbx),%ecx
   13a3a:	85 c9                	test   %ecx,%ecx
   13a3c:	0f 84 7e 00 00 00    	je     13ac0 <cbuf_is_valid+0x140>
   13a42:	8b 73 4c             	mov    0x4c(%rbx),%esi
   13a45:	85 f6                	test   %esi,%esi
   13a47:	0f 88 c3 01 00 00    	js     13c10 <cbuf_is_valid+0x290>
   13a4d:	39 f0                	cmp    %esi,%eax
   13a4f:	0f 8c f1 02 00 00    	jl     13d46 <cbuf_is_valid+0x3c6>
   13a55:	8b 53 50             	mov    0x50(%rbx),%edx
   13a58:	85 d2                	test   %edx,%edx
   13a5a:	0f 88 c7 02 00 00    	js     13d27 <cbuf_is_valid+0x3a7>
   13a60:	39 d0                	cmp    %edx,%eax
   13a62:	0f 8c a0 02 00 00    	jl     13d08 <cbuf_is_valid+0x388>
   13a68:	8b 4b 54             	mov    0x54(%rbx),%ecx
   13a6b:	85 c9                	test   %ecx,%ecx
   13a6d:	0f 88 7e 01 00 00    	js     13bf1 <cbuf_is_valid+0x271>
   13a73:	39 c8                	cmp    %ecx,%eax
   13a75:	0f 8c 28 03 00 00    	jl     13da3 <cbuf_is_valid+0x423>
   13a7b:	39 ca                	cmp    %ecx,%edx
   13a7d:	41 0f 9d c0          	setge  %r8b
   13a81:	39 ce                	cmp    %ecx,%esi
   13a83:	0f 9c c1             	setl   %cl
   13a86:	39 d6                	cmp    %edx,%esi
   13a88:	7d 66                	jge    13af0 <cbuf_is_valid+0x170>
   13a8a:	45 84 c0             	test   %r8b,%r8b
   13a8d:	0f 84 d2 02 00 00    	je     13d65 <cbuf_is_valid+0x3e5>
   13a93:	84 c9                	test   %cl,%cl
   13a95:	0f 84 ca 02 00 00    	je     13d65 <cbuf_is_valid+0x3e5>
   13a9b:	44 8d 40 01          	lea    0x1(%rax),%r8d
   13a9f:	29 f2                	sub    %esi,%edx
   13aa1:	29 f8                	sub    %edi,%eax
   13aa3:	89 c1                	mov    %eax,%ecx
   13aa5:	41 8d 44 10 ff       	lea    -0x1(%r8,%rdx,1),%eax
   13aaa:	99                   	cltd   
   13aab:	41 f7 f8             	idiv   %r8d
   13aae:	39 d1                	cmp    %edx,%ecx
   13ab0:	0f 85 ce 02 00 00    	jne    13d84 <cbuf_is_valid+0x404>
   13ab6:	b8 01 00 00 00       	mov    $0x1,%eax
   13abb:	5b                   	pop    %rbx
   13abc:	c3                   	retq   
   13abd:	0f 1f 00             	nopl   (%rax)
   13ac0:	8b 53 54             	mov    0x54(%rbx),%edx
   13ac3:	85 d2                	test   %edx,%edx
   13ac5:	0f 84 77 ff ff ff    	je     13a42 <cbuf_is_valid+0xc2>
   13acb:	48 8d 0d de b0 02 00 	lea    0x2b0de(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13ad2:	ba ff 06 00 00       	mov    $0x6ff,%edx
   13ad7:	48 8d 35 73 a8 02 00 	lea    0x2a873(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13ade:	48 8d 3d 64 a9 02 00 	lea    0x2a964(%rip),%rdi        # 3e449 <__PRETTY_FUNCTION__.5439+0x109>
   13ae5:	e8 16 c5 ff ff       	callq  10000 <__assert_fail@plt>
   13aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13af0:	45 84 c0             	test   %r8b,%r8b
   13af3:	75 a6                	jne    13a9b <cbuf_is_valid+0x11b>
   13af5:	84 c9                	test   %cl,%cl
   13af7:	75 a2                	jne    13a9b <cbuf_is_valid+0x11b>
   13af9:	48 8d 0d b0 b0 02 00 	lea    0x2b0b0(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b00:	ba 08 07 00 00       	mov    $0x708,%edx
   13b05:	48 8d 35 45 a8 02 00 	lea    0x2a845(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13b0c:	48 8d 3d b5 ac 02 00 	lea    0x2acb5(%rip),%rdi        # 3e7c8 <__PRETTY_FUNCTION__.5439+0x488>
   13b13:	e8 e8 c4 ff ff       	callq  10000 <__assert_fail@plt>
   13b18:	48 8d 0d 91 b0 02 00 	lea    0x2b091(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b1f:	ba fe 06 00 00       	mov    $0x6fe,%edx
   13b24:	48 8d 35 26 a8 02 00 	lea    0x2a826(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13b2b:	48 8d 3d 2e ac 02 00 	lea    0x2ac2e(%rip),%rdi        # 3e760 <__PRETTY_FUNCTION__.5439+0x420>
   13b32:	e8 c9 c4 ff ff       	callq  10000 <__assert_fail@plt>
   13b37:	48 8d 0d 72 b0 02 00 	lea    0x2b072(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b3e:	ba fb 06 00 00       	mov    $0x6fb,%edx
   13b43:	48 8d 35 07 a8 02 00 	lea    0x2a807(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13b4a:	48 8d 3d e3 a8 02 00 	lea    0x2a8e3(%rip),%rdi        # 3e434 <__PRETTY_FUNCTION__.5439+0xf4>
   13b51:	e8 aa c4 ff ff       	callq  10000 <__assert_fail@plt>
   13b56:	48 8d 0d 53 b0 02 00 	lea    0x2b053(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b5d:	ba fa 06 00 00       	mov    $0x6fa,%edx
   13b62:	48 8d 35 e8 a7 02 00 	lea    0x2a7e8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13b69:	48 8d 3d b6 a8 02 00 	lea    0x2a8b6(%rip),%rdi        # 3e426 <__PRETTY_FUNCTION__.5439+0xe6>
   13b70:	e8 8b c4 ff ff       	callq  10000 <__assert_fail@plt>
   13b75:	48 8d 0d 34 b0 02 00 	lea    0x2b034(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b7c:	ba f9 06 00 00       	mov    $0x6f9,%edx
   13b81:	48 8d 35 c9 a7 02 00 	lea    0x2a7c9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13b88:	48 8d 3d 87 a8 02 00 	lea    0x2a887(%rip),%rdi        # 3e416 <__PRETTY_FUNCTION__.5439+0xd6>
   13b8f:	e8 6c c4 ff ff       	callq  10000 <__assert_fail@plt>
   13b94:	48 8d 0d 15 b0 02 00 	lea    0x2b015(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13b9b:	ba f8 06 00 00       	mov    $0x6f8,%edx
   13ba0:	48 8d 35 aa a7 02 00 	lea    0x2a7aa(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13ba7:	48 8d 3d 58 a8 02 00 	lea    0x2a858(%rip),%rdi        # 3e406 <__PRETTY_FUNCTION__.5439+0xc6>
   13bae:	e8 4d c4 ff ff       	callq  10000 <__assert_fail@plt>
   13bb3:	48 8d 0d f6 af 02 00 	lea    0x2aff6(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13bba:	ba f7 06 00 00       	mov    $0x6f7,%edx
   13bbf:	48 8d 35 8b a7 02 00 	lea    0x2a78b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13bc6:	48 8d 3d 21 a8 02 00 	lea    0x2a821(%rip),%rdi        # 3e3ee <__PRETTY_FUNCTION__.5439+0xae>
   13bcd:	e8 2e c4 ff ff       	callq  10000 <__assert_fail@plt>
   13bd2:	48 8d 0d d7 af 02 00 	lea    0x2afd7(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13bd9:	ba f6 06 00 00       	mov    $0x6f6,%edx
   13bde:	48 8d 35 6c a7 02 00 	lea    0x2a76c(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13be5:	48 8d 3d ea a7 02 00 	lea    0x2a7ea(%rip),%rdi        # 3e3d6 <__PRETTY_FUNCTION__.5439+0x96>
   13bec:	e8 0f c4 ff ff       	callq  10000 <__assert_fail@plt>
   13bf1:	48 8d 0d b8 af 02 00 	lea    0x2afb8(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13bf8:	ba 04 07 00 00       	mov    $0x704,%edx
   13bfd:	48 8d 35 4d a7 02 00 	lea    0x2a74d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c04:	48 8d 3d a1 a8 02 00 	lea    0x2a8a1(%rip),%rdi        # 3e4ac <__PRETTY_FUNCTION__.5439+0x16c>
   13c0b:	e8 f0 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13c10:	48 8d 0d 99 af 02 00 	lea    0x2af99(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13c17:	ba 00 07 00 00       	mov    $0x700,%edx
   13c1c:	48 8d 35 2e a7 02 00 	lea    0x2a72e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c23:	48 8d 3d 3a a8 02 00 	lea    0x2a83a(%rip),%rdi        # 3e464 <__PRETTY_FUNCTION__.5439+0x124>
   13c2a:	e8 d1 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13c2f:	48 8d 0d 7a af 02 00 	lea    0x2af7a(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13c36:	ba e8 06 00 00       	mov    $0x6e8,%edx
   13c3b:	48 8d 35 0f a7 02 00 	lea    0x2a70f(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c42:	48 8d 3d 1a a7 02 00 	lea    0x2a71a(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   13c49:	e8 b2 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13c4e:	48 8d 0d 5b af 02 00 	lea    0x2af5b(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13c55:	ba ea 06 00 00       	mov    $0x6ea,%edx
   13c5a:	48 8d 35 f0 a6 02 00 	lea    0x2a6f0(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c61:	48 8d 3d 26 a7 02 00 	lea    0x2a726(%rip),%rdi        # 3e38e <__PRETTY_FUNCTION__.5439+0x4e>
   13c68:	e8 93 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13c6d:	48 8d 0d 3c af 02 00 	lea    0x2af3c(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13c74:	ba e9 06 00 00       	mov    $0x6e9,%edx
   13c79:	48 8d 35 d1 a6 02 00 	lea    0x2a6d1(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c80:	48 8d 3d f6 a6 02 00 	lea    0x2a6f6(%rip),%rdi        # 3e37d <__PRETTY_FUNCTION__.5439+0x3d>
   13c87:	e8 74 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13c8c:	48 8d 0d 1d af 02 00 	lea    0x2af1d(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13c93:	ba f4 06 00 00       	mov    $0x6f4,%edx
   13c98:	48 8d 35 b2 a6 02 00 	lea    0x2a6b2(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13c9f:	48 8d 3d 0e a7 02 00 	lea    0x2a70e(%rip),%rdi        # 3e3b4 <__PRETTY_FUNCTION__.5439+0x74>
   13ca6:	e8 55 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13cab:	48 8d 0d fe ae 02 00 	lea    0x2aefe(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13cb2:	ba f3 06 00 00       	mov    $0x6f3,%edx
   13cb7:	48 8d 35 93 a6 02 00 	lea    0x2a693(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13cbe:	48 8d 3d e1 a6 02 00 	lea    0x2a6e1(%rip),%rdi        # 3e3a6 <__PRETTY_FUNCTION__.5439+0x66>
   13cc5:	e8 36 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13cca:	48 8d 0d df ae 02 00 	lea    0x2aedf(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13cd1:	ba f1 06 00 00       	mov    $0x6f1,%edx
   13cd6:	48 8d 35 74 a6 02 00 	lea    0x2a674(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13cdd:	48 8d 3d 2c aa 02 00 	lea    0x2aa2c(%rip),%rdi        # 3e710 <__PRETTY_FUNCTION__.5439+0x3d0>
   13ce4:	e8 17 c3 ff ff       	callq  10000 <__assert_fail@plt>
   13ce9:	48 8d 0d c0 ae 02 00 	lea    0x2aec0(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13cf0:	ba ef 06 00 00       	mov    $0x6ef,%edx
   13cf5:	48 8d 35 55 a6 02 00 	lea    0x2a655(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13cfc:	48 8d 3d bd a9 02 00 	lea    0x2a9bd(%rip),%rdi        # 3e6c0 <__PRETTY_FUNCTION__.5439+0x380>
   13d03:	e8 f8 c2 ff ff       	callq  10000 <__assert_fail@plt>
   13d08:	48 8d 0d a1 ae 02 00 	lea    0x2aea1(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13d0f:	ba 03 07 00 00       	mov    $0x703,%edx
   13d14:	48 8d 35 36 a6 02 00 	lea    0x2a636(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13d1b:	48 8d 3d 74 a7 02 00 	lea    0x2a774(%rip),%rdi        # 3e496 <__PRETTY_FUNCTION__.5439+0x156>
   13d22:	e8 d9 c2 ff ff       	callq  10000 <__assert_fail@plt>
   13d27:	48 8d 0d 82 ae 02 00 	lea    0x2ae82(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13d2e:	ba 02 07 00 00       	mov    $0x702,%edx
   13d33:	48 8d 35 17 a6 02 00 	lea    0x2a617(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13d3a:	48 8d 3d 46 a7 02 00 	lea    0x2a746(%rip),%rdi        # 3e487 <__PRETTY_FUNCTION__.5439+0x147>
   13d41:	e8 ba c2 ff ff       	callq  10000 <__assert_fail@plt>
   13d46:	48 8d 0d 63 ae 02 00 	lea    0x2ae63(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13d4d:	ba 01 07 00 00       	mov    $0x701,%edx
   13d52:	48 8d 35 f8 a5 02 00 	lea    0x2a5f8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13d59:	48 8d 3d 12 a7 02 00 	lea    0x2a712(%rip),%rdi        # 3e472 <__PRETTY_FUNCTION__.5439+0x132>
   13d60:	e8 9b c2 ff ff       	callq  10000 <__assert_fail@plt>
   13d65:	48 8d 0d 44 ae 02 00 	lea    0x2ae44(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13d6c:	ba 0b 07 00 00       	mov    $0x70b,%edx
   13d71:	48 8d 35 d9 a5 02 00 	lea    0x2a5d9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13d78:	48 8d 3d 81 aa 02 00 	lea    0x2aa81(%rip),%rdi        # 3e800 <__PRETTY_FUNCTION__.5439+0x4c0>
   13d7f:	e8 7c c2 ff ff       	callq  10000 <__assert_fail@plt>
   13d84:	48 8d 0d 25 ae 02 00 	lea    0x2ae25(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13d8b:	ba 0e 07 00 00       	mov    $0x70e,%edx
   13d90:	48 8d 35 ba a5 02 00 	lea    0x2a5ba(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13d97:	48 8d 3d 33 a7 02 00 	lea    0x2a733(%rip),%rdi        # 3e4d1 <__PRETTY_FUNCTION__.5439+0x191>
   13d9e:	e8 5d c2 ff ff       	callq  10000 <__assert_fail@plt>
   13da3:	48 8d 0d 06 ae 02 00 	lea    0x2ae06(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13daa:	ba 05 07 00 00       	mov    $0x705,%edx
   13daf:	48 8d 35 9b a5 02 00 	lea    0x2a59b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13db6:	48 8d 3d fe a6 02 00 	lea    0x2a6fe(%rip),%rdi        # 3e4bb <__PRETTY_FUNCTION__.5439+0x17b>
   13dbd:	e8 3e c2 ff ff       	callq  10000 <__assert_fail@plt>
   13dc2:	48 8d 0d e7 ad 02 00 	lea    0x2ade7(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13dc9:	ba e7 06 00 00       	mov    $0x6e7,%edx
   13dce:	48 8d 35 7c a5 02 00 	lea    0x2a57c(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13dd5:	48 8d 3d 7c a5 02 00 	lea    0x2a57c(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   13ddc:	e8 1f c2 ff ff       	callq  10000 <__assert_fail@plt>
   13de1:	48 8d 0d c8 ad 02 00 	lea    0x2adc8(%rip),%rcx        # 3ebb0 <__PRETTY_FUNCTION__.5905>
   13de8:	ba f5 06 00 00       	mov    $0x6f5,%edx
   13ded:	48 8d 35 5d a5 02 00 	lea    0x2a55d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13df4:	48 8d 3d ce a5 02 00 	lea    0x2a5ce(%rip),%rdi        # 3e3c9 <__PRETTY_FUNCTION__.5439+0x89>
   13dfb:	e8 00 c2 ff ff       	callq  10000 <__assert_fail@plt>

0000000000013e00 <cbuf_find_unread_line>:
   13e00:	41 54                	push   %r12
   13e02:	55                   	push   %rbp
   13e03:	53                   	push   %rbx
   13e04:	48 85 ff             	test   %rdi,%rdi
   13e07:	0f 84 2a 01 00 00    	je     13f37 <cbuf_find_unread_line+0x137>
   13e0d:	83 3a ff             	cmpl   $0xffffffff,(%rdx)
   13e10:	49 89 d4             	mov    %rdx,%r12
   13e13:	0f 8c ff 00 00 00    	jl     13f18 <cbuf_find_unread_line+0x118>
   13e19:	48 89 fd             	mov    %rdi,%rbp
   13e1c:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   13e20:	89 f3                	mov    %esi,%ebx
   13e22:	e8 b9 cc ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   13e27:	83 f8 10             	cmp    $0x10,%eax
   13e2a:	0f 85 c9 00 00 00    	jne    13ef9 <cbuf_find_unread_line+0xf9>
   13e30:	41 8b 34 24          	mov    (%r12),%esi
   13e34:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
   13e3b:	00 
   13e3c:	85 f6                	test   %esi,%esi
   13e3e:	0f 84 86 00 00 00    	je     13eca <cbuf_find_unread_line+0xca>
   13e44:	79 08                	jns    13e4e <cbuf_find_unread_line+0x4e>
   13e46:	85 db                	test   %ebx,%ebx
   13e48:	0f 8e 8a 00 00 00    	jle    13ed8 <cbuf_find_unread_line+0xd8>
   13e4e:	8b 45 40             	mov    0x40(%rbp),%eax
   13e51:	85 c0                	test   %eax,%eax
   13e53:	0f 84 7f 00 00 00    	je     13ed8 <cbuf_find_unread_line+0xd8>
   13e59:	44 8b 45 4c          	mov    0x4c(%rbp),%r8d
   13e5d:	8b 55 50             	mov    0x50(%rbp),%edx
   13e60:	85 f6                	test   %esi,%esi
   13e62:	0f 8e 80 00 00 00    	jle    13ee8 <cbuf_find_unread_line+0xe8>
   13e68:	41 39 d0             	cmp    %edx,%r8d
   13e6b:	74 6b                	je     13ed8 <cbuf_find_unread_line+0xd8>
   13e6d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   13e72:	4c 8b 4d 58          	mov    0x58(%rbp),%r9
   13e76:	45 31 d2             	xor    %r10d,%r10d
   13e79:	45 31 db             	xor    %r11d,%r11d
   13e7c:	31 ff                	xor    %edi,%edi
   13e7e:	66 90                	xchg   %ax,%ax
   13e80:	31 c0                	xor    %eax,%eax
   13e82:	83 c7 01             	add    $0x1,%edi
   13e85:	85 db                	test   %ebx,%ebx
   13e87:	0f 9f c0             	setg   %al
   13e8a:	29 c3                	sub    %eax,%ebx
   13e8c:	48 63 c2             	movslq %edx,%rax
   13e8f:	41 80 3c 01 0a       	cmpb   $0xa,(%r9,%rax,1)
   13e94:	75 10                	jne    13ea6 <cbuf_find_unread_line+0xa6>
   13e96:	31 c0                	xor    %eax,%eax
   13e98:	85 f6                	test   %esi,%esi
   13e9a:	41 89 fb             	mov    %edi,%r11d
   13e9d:	0f 9f c0             	setg   %al
   13ea0:	41 83 c2 01          	add    $0x1,%r10d
   13ea4:	29 c6                	sub    %eax,%esi
   13ea6:	85 db                	test   %ebx,%ebx
   13ea8:	74 15                	je     13ebf <cbuf_find_unread_line+0xbf>
   13eaa:	85 f6                	test   %esi,%esi
   13eac:	74 11                	je     13ebf <cbuf_find_unread_line+0xbf>
   13eae:	8b 4d 3c             	mov    0x3c(%rbp),%ecx
   13eb1:	8d 42 01             	lea    0x1(%rdx),%eax
   13eb4:	99                   	cltd   
   13eb5:	83 c1 01             	add    $0x1,%ecx
   13eb8:	f7 f9                	idiv   %ecx
   13eba:	44 39 c2             	cmp    %r8d,%edx
   13ebd:	75 c1                	jne    13e80 <cbuf_find_unread_line+0x80>
   13ebf:	85 f6                	test   %esi,%esi
   13ec1:	7f 15                	jg     13ed8 <cbuf_find_unread_line+0xd8>
   13ec3:	45 89 14 24          	mov    %r10d,(%r12)
   13ec7:	44 89 de             	mov    %r11d,%esi
   13eca:	5b                   	pop    %rbx
   13ecb:	89 f0                	mov    %esi,%eax
   13ecd:	5d                   	pop    %rbp
   13ece:	41 5c                	pop    %r12
   13ed0:	c3                   	retq   
   13ed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13ed8:	31 f6                	xor    %esi,%esi
   13eda:	5b                   	pop    %rbx
   13edb:	5d                   	pop    %rbp
   13edc:	89 f0                	mov    %esi,%eax
   13ede:	41 5c                	pop    %r12
   13ee0:	c3                   	retq   
   13ee1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13ee8:	45 31 d2             	xor    %r10d,%r10d
   13eeb:	45 31 db             	xor    %r11d,%r11d
   13eee:	41 39 d0             	cmp    %edx,%r8d
   13ef1:	0f 85 7b ff ff ff    	jne    13e72 <cbuf_find_unread_line+0x72>
   13ef7:	eb ca                	jmp    13ec3 <cbuf_find_unread_line+0xc3>
   13ef9:	48 8d 0d 30 ac 02 00 	lea    0x2ac30(%rip),%rcx        # 3eb30 <__PRETTY_FUNCTION__.5782>
   13f00:	ba bf 04 00 00       	mov    $0x4bf,%edx
   13f05:	48 8d 35 45 a4 02 00 	lea    0x2a445(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13f0c:	48 8d 3d 50 a4 02 00 	lea    0x2a450(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   13f13:	e8 e8 c0 ff ff       	callq  10000 <__assert_fail@plt>
   13f18:	48 8d 0d 11 ac 02 00 	lea    0x2ac11(%rip),%rcx        # 3eb30 <__PRETTY_FUNCTION__.5782>
   13f1f:	ba be 04 00 00       	mov    $0x4be,%edx
   13f24:	48 8d 35 26 a4 02 00 	lea    0x2a426(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13f2b:	48 8d 3d bc a5 02 00 	lea    0x2a5bc(%rip),%rdi        # 3e4ee <__PRETTY_FUNCTION__.5439+0x1ae>
   13f32:	e8 c9 c0 ff ff       	callq  10000 <__assert_fail@plt>
   13f37:	48 8d 0d f2 ab 02 00 	lea    0x2abf2(%rip),%rcx        # 3eb30 <__PRETTY_FUNCTION__.5782>
   13f3e:	ba bc 04 00 00       	mov    $0x4bc,%edx
   13f43:	48 8d 35 07 a4 02 00 	lea    0x2a407(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   13f4a:	48 8d 3d 07 a4 02 00 	lea    0x2a407(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   13f51:	e8 aa c0 ff ff       	callq  10000 <__assert_fail@plt>

0000000000013f56 <.annobin_cbuf_find_replay_line.start>:
   13f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f5d:	00 00 00 

0000000000013f60 <cbuf_find_replay_line>:
   13f60:	41 55                	push   %r13
   13f62:	41 54                	push   %r12
   13f64:	55                   	push   %rbp
   13f65:	53                   	push   %rbx
   13f66:	48 83 ec 08          	sub    $0x8,%rsp
   13f6a:	48 85 ff             	test   %rdi,%rdi
   13f6d:	0f 84 94 01 00 00    	je     14107 <cbuf_find_replay_line+0x1a7>
   13f73:	83 3a ff             	cmpl   $0xffffffff,(%rdx)
   13f76:	49 89 d4             	mov    %rdx,%r12
   13f79:	0f 8c 69 01 00 00    	jl     140e8 <cbuf_find_replay_line+0x188>
   13f7f:	48 89 fd             	mov    %rdi,%rbp
   13f82:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   13f86:	89 f3                	mov    %esi,%ebx
   13f88:	49 89 cd             	mov    %rcx,%r13
   13f8b:	e8 50 cb ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   13f90:	83 f8 10             	cmp    $0x10,%eax
   13f93:	0f 85 8d 01 00 00    	jne    14126 <cbuf_find_replay_line+0x1c6>
   13f99:	41 8b 3c 24          	mov    (%r12),%edi
   13f9d:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
   13fa4:	00 
   13fa5:	4d 85 ed             	test   %r13,%r13
   13fa8:	74 08                	je     13fb2 <cbuf_find_replay_line+0x52>
   13faa:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
   13fb1:	00 
   13fb2:	85 ff                	test   %edi,%edi
   13fb4:	0f 84 ea 00 00 00    	je     140a4 <cbuf_find_replay_line+0x144>
   13fba:	79 08                	jns    13fc4 <cbuf_find_replay_line+0x64>
   13fbc:	85 db                	test   %ebx,%ebx
   13fbe:	0f 8e e0 00 00 00    	jle    140a4 <cbuf_find_replay_line+0x144>
   13fc4:	8b 75 50             	mov    0x50(%rbp),%esi
   13fc7:	44 8b 4d 54          	mov    0x54(%rbp),%r9d
   13fcb:	44 39 ce             	cmp    %r9d,%esi
   13fce:	0f 84 d0 00 00 00    	je     140a4 <cbuf_find_replay_line+0x144>
   13fd4:	8b 4d 3c             	mov    0x3c(%rbp),%ecx
   13fd7:	4c 8b 55 58          	mov    0x58(%rbp),%r10
   13fdb:	8d 04 0e             	lea    (%rsi,%rcx,1),%eax
   13fde:	83 c1 01             	add    $0x1,%ecx
   13fe1:	99                   	cltd   
   13fe2:	f7 f9                	idiv   %ecx
   13fe4:	48 63 d2             	movslq %edx,%rdx
   13fe7:	41 0f b6 04 12       	movzbl (%r10,%rdx,1),%eax
   13fec:	85 ff                	test   %edi,%edi
   13fee:	0f 8e dc 00 00 00    	jle    140d0 <cbuf_find_replay_line+0x170>
   13ff4:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
   13ff9:	3c 0a                	cmp    $0xa,%al
   13ffb:	0f 84 b7 00 00 00    	je     140b8 <cbuf_find_replay_line+0x158>
   14001:	4d 85 ed             	test   %r13,%r13
   14004:	74 0f                	je     14015 <cbuf_find_replay_line+0xb5>
   14006:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
   1400d:	00 
   1400e:	44 8b 4d 54          	mov    0x54(%rbp),%r9d
   14012:	8b 75 50             	mov    0x50(%rbp),%esi
   14015:	45 31 ed             	xor    %r13d,%r13d
   14018:	45 31 db             	xor    %r11d,%r11d
   1401b:	45 31 c0             	xor    %r8d,%r8d
   1401e:	eb 40                	jmp    14060 <cbuf_find_replay_line+0x100>
   14020:	8b 4d 3c             	mov    0x3c(%rbp),%ecx
   14023:	8d 04 31             	lea    (%rcx,%rsi,1),%eax
   14026:	83 c1 01             	add    $0x1,%ecx
   14029:	99                   	cltd   
   1402a:	f7 f9                	idiv   %ecx
   1402c:	41 8d 40 01          	lea    0x1(%r8),%eax
   14030:	89 d6                	mov    %edx,%esi
   14032:	31 d2                	xor    %edx,%edx
   14034:	85 db                	test   %ebx,%ebx
   14036:	0f 9f c2             	setg   %dl
   14039:	29 d3                	sub    %edx,%ebx
   1403b:	48 63 d6             	movslq %esi,%rdx
   1403e:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
   14043:	75 10                	jne    14055 <cbuf_find_replay_line+0xf5>
   14045:	31 d2                	xor    %edx,%edx
   14047:	85 ff                	test   %edi,%edi
   14049:	45 89 c3             	mov    %r8d,%r11d
   1404c:	0f 9f c2             	setg   %dl
   1404f:	41 83 c5 01          	add    $0x1,%r13d
   14053:	29 d7                	sub    %edx,%edi
   14055:	41 89 c0             	mov    %eax,%r8d
   14058:	85 db                	test   %ebx,%ebx
   1405a:	74 09                	je     14065 <cbuf_find_replay_line+0x105>
   1405c:	85 ff                	test   %edi,%edi
   1405e:	74 05                	je     14065 <cbuf_find_replay_line+0x105>
   14060:	41 39 f1             	cmp    %esi,%r9d
   14063:	75 bb                	jne    14020 <cbuf_find_replay_line+0xc0>
   14065:	8b 45 48             	mov    0x48(%rbp),%eax
   14068:	85 c0                	test   %eax,%eax
   1406a:	75 34                	jne    140a0 <cbuf_find_replay_line+0x140>
   1406c:	85 db                	test   %ebx,%ebx
   1406e:	7f 20                	jg     14090 <cbuf_find_replay_line+0x130>
   14070:	85 ff                	test   %edi,%edi
   14072:	7f 1c                	jg     14090 <cbuf_find_replay_line+0x130>
   14074:	45 89 2c 24          	mov    %r13d,(%r12)
   14078:	48 83 c4 08          	add    $0x8,%rsp
   1407c:	44 89 d8             	mov    %r11d,%eax
   1407f:	5b                   	pop    %rbx
   14080:	5d                   	pop    %rbp
   14081:	41 5c                	pop    %r12
   14083:	41 5d                	pop    %r13
   14085:	c3                   	retq   
   14086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1408d:	00 00 00 
   14090:	31 c0                	xor    %eax,%eax
   14092:	85 ff                	test   %edi,%edi
   14094:	45 89 c3             	mov    %r8d,%r11d
   14097:	0f 9f c0             	setg   %al
   1409a:	41 83 c5 01          	add    $0x1,%r13d
   1409e:	29 c7                	sub    %eax,%edi
   140a0:	85 ff                	test   %edi,%edi
   140a2:	7e d0                	jle    14074 <cbuf_find_replay_line+0x114>
   140a4:	48 83 c4 08          	add    $0x8,%rsp
   140a8:	45 31 db             	xor    %r11d,%r11d
   140ab:	5b                   	pop    %rbx
   140ac:	44 89 d8             	mov    %r11d,%eax
   140af:	5d                   	pop    %rbp
   140b0:	41 5c                	pop    %r12
   140b2:	41 5d                	pop    %r13
   140b4:	c3                   	retq   
   140b5:	0f 1f 00             	nopl   (%rax)
   140b8:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   140bd:	83 c7 01             	add    $0x1,%edi
   140c0:	41 89 dd             	mov    %ebx,%r13d
   140c3:	e9 50 ff ff ff       	jmpq   14018 <cbuf_find_replay_line+0xb8>
   140c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   140cf:	00 
   140d0:	8d 53 01             	lea    0x1(%rbx),%edx
   140d3:	3c 0a                	cmp    $0xa,%al
   140d5:	0f 85 26 ff ff ff    	jne    14001 <cbuf_find_replay_line+0xa1>
   140db:	89 d3                	mov    %edx,%ebx
   140dd:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   140e3:	e9 30 ff ff ff       	jmpq   14018 <cbuf_find_replay_line+0xb8>
   140e8:	48 8d 0d f1 a9 02 00 	lea    0x2a9f1(%rip),%rcx        # 3eae0 <__PRETTY_FUNCTION__.5768>
   140ef:	ba 62 04 00 00       	mov    $0x462,%edx
   140f4:	48 8d 35 56 a2 02 00 	lea    0x2a256(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   140fb:	48 8d 3d ec a3 02 00 	lea    0x2a3ec(%rip),%rdi        # 3e4ee <__PRETTY_FUNCTION__.5439+0x1ae>
   14102:	e8 f9 be ff ff       	callq  10000 <__assert_fail@plt>
   14107:	48 8d 0d d2 a9 02 00 	lea    0x2a9d2(%rip),%rcx        # 3eae0 <__PRETTY_FUNCTION__.5768>
   1410e:	ba 60 04 00 00       	mov    $0x460,%edx
   14113:	48 8d 35 37 a2 02 00 	lea    0x2a237(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1411a:	48 8d 3d 37 a2 02 00 	lea    0x2a237(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   14121:	e8 da be ff ff       	callq  10000 <__assert_fail@plt>
   14126:	48 8d 0d b3 a9 02 00 	lea    0x2a9b3(%rip),%rcx        # 3eae0 <__PRETTY_FUNCTION__.5768>
   1412d:	ba 63 04 00 00       	mov    $0x463,%edx
   14132:	48 8d 35 18 a2 02 00 	lea    0x2a218(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14139:	48 8d 3d 23 a2 02 00 	lea    0x2a223(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   14140:	e8 bb be ff ff       	callq  10000 <__assert_fail@plt>

0000000000014145 <.annobin_cbuf_dropper.start>:
   14145:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1414c:	00 00 00 00 

0000000000014150 <cbuf_dropper>:
   14150:	41 54                	push   %r12
   14152:	55                   	push   %rbp
   14153:	53                   	push   %rbx
   14154:	48 85 ff             	test   %rdi,%rdi
   14157:	0f 84 c1 00 00 00    	je     1421e <cbuf_dropper+0xce>
   1415d:	89 f5                	mov    %esi,%ebp
   1415f:	85 f6                	test   %esi,%esi
   14161:	0f 8e 14 01 00 00    	jle    1427b <cbuf_dropper+0x12b>
   14167:	48 89 fb             	mov    %rdi,%rbx
   1416a:	39 77 40             	cmp    %esi,0x40(%rdi)
   1416d:	0f 8c e9 00 00 00    	jl     1425c <cbuf_dropper+0x10c>
   14173:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   14177:	4c 89 e7             	mov    %r12,%rdi
   1417a:	e8 61 c9 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   1417f:	83 f8 10             	cmp    $0x10,%eax
   14182:	0f 85 b5 00 00 00    	jne    1423d <cbuf_dropper+0xed>
   14188:	8b 43 50             	mov    0x50(%rbx),%eax
   1418b:	8b 73 3c             	mov    0x3c(%rbx),%esi
   1418e:	8b 4b 40             	mov    0x40(%rbx),%ecx
   14191:	01 e8                	add    %ebp,%eax
   14193:	8d 7e 01             	lea    0x1(%rsi),%edi
   14196:	99                   	cltd   
   14197:	29 e9                	sub    %ebp,%ecx
   14199:	f7 ff                	idiv   %edi
   1419b:	89 4b 40             	mov    %ecx,0x40(%rbx)
   1419e:	89 f0                	mov    %esi,%eax
   141a0:	29 c8                	sub    %ecx,%eax
   141a2:	89 53 50             	mov    %edx,0x50(%rbx)
   141a5:	3d e8 03 00 00       	cmp    $0x3e8,%eax
   141aa:	7e 05                	jle    141b1 <cbuf_dropper+0x61>
   141ac:	3b 73 34             	cmp    0x34(%rbx),%esi
   141af:	7f 0f                	jg     141c0 <cbuf_dropper+0x70>
   141b1:	89 e8                	mov    %ebp,%eax
   141b3:	5b                   	pop    %rbx
   141b4:	5d                   	pop    %rbp
   141b5:	41 5c                	pop    %r12
   141b7:	c3                   	retq   
   141b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   141bf:	00 
   141c0:	4c 89 e7             	mov    %r12,%rdi
   141c3:	e8 18 c9 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   141c8:	83 f8 10             	cmp    $0x10,%eax
   141cb:	0f 85 c9 00 00 00    	jne    1429a <cbuf_dropper+0x14a>
   141d1:	48 89 df             	mov    %rbx,%rdi
   141d4:	e8 a7 f7 ff ff       	callq  13980 <cbuf_is_valid>
   141d9:	85 c0                	test   %eax,%eax
   141db:	0f 84 d8 00 00 00    	je     142b9 <cbuf_dropper+0x169>
   141e1:	8b 43 3c             	mov    0x3c(%rbx),%eax
   141e4:	3b 43 34             	cmp    0x34(%rbx),%eax
   141e7:	74 c8                	je     141b1 <cbuf_dropper+0x61>
   141e9:	2b 43 40             	sub    0x40(%rbx),%eax
   141ec:	3d e8 03 00 00       	cmp    $0x3e8,%eax
   141f1:	7e be                	jle    141b1 <cbuf_dropper+0x61>
   141f3:	48 89 df             	mov    %rbx,%rdi
   141f6:	e8 85 f7 ff ff       	callq  13980 <cbuf_is_valid>
   141fb:	85 c0                	test   %eax,%eax
   141fd:	75 b2                	jne    141b1 <cbuf_dropper+0x61>
   141ff:	48 8d 0d 72 a8 02 00 	lea    0x2a872(%rip),%rcx        # 3ea78 <__PRETTY_FUNCTION__.5895>
   14206:	ba c8 06 00 00       	mov    $0x6c8,%edx
   1420b:	48 8d 35 3f a1 02 00 	lea    0x2a13f(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14212:	48 8d 3d fb a2 02 00 	lea    0x2a2fb(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   14219:	e8 e2 bd ff ff       	callq  10000 <__assert_fail@plt>
   1421e:	48 8d 0d 63 a8 02 00 	lea    0x2a863(%rip),%rcx        # 3ea88 <__PRETTY_FUNCTION__.5837>
   14225:	ba 90 05 00 00       	mov    $0x590,%edx
   1422a:	48 8d 35 20 a1 02 00 	lea    0x2a120(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14231:	48 8d 3d 20 a1 02 00 	lea    0x2a120(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   14238:	e8 c3 bd ff ff       	callq  10000 <__assert_fail@plt>
   1423d:	48 8d 0d 44 a8 02 00 	lea    0x2a844(%rip),%rcx        # 3ea88 <__PRETTY_FUNCTION__.5837>
   14244:	ba 93 05 00 00       	mov    $0x593,%edx
   14249:	48 8d 35 01 a1 02 00 	lea    0x2a101(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14250:	48 8d 3d 0c a1 02 00 	lea    0x2a10c(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   14257:	e8 a4 bd ff ff       	callq  10000 <__assert_fail@plt>
   1425c:	48 8d 0d 25 a8 02 00 	lea    0x2a825(%rip),%rcx        # 3ea88 <__PRETTY_FUNCTION__.5837>
   14263:	ba 92 05 00 00       	mov    $0x592,%edx
   14268:	48 8d 35 e2 a0 02 00 	lea    0x2a0e2(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1426f:	48 8d 3d 8e a2 02 00 	lea    0x2a28e(%rip),%rdi        # 3e504 <__PRETTY_FUNCTION__.5439+0x1c4>
   14276:	e8 85 bd ff ff       	callq  10000 <__assert_fail@plt>
   1427b:	48 8d 0d 06 a8 02 00 	lea    0x2a806(%rip),%rcx        # 3ea88 <__PRETTY_FUNCTION__.5837>
   14282:	ba 91 05 00 00       	mov    $0x591,%edx
   14287:	48 8d 35 c3 a0 02 00 	lea    0x2a0c3(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1428e:	48 8d 3d 67 a2 02 00 	lea    0x2a267(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14295:	e8 66 bd ff ff       	callq  10000 <__assert_fail@plt>
   1429a:	48 8d 0d d7 a7 02 00 	lea    0x2a7d7(%rip),%rcx        # 3ea78 <__PRETTY_FUNCTION__.5895>
   142a1:	ba bd 06 00 00       	mov    $0x6bd,%edx
   142a6:	48 8d 35 a4 a0 02 00 	lea    0x2a0a4(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   142ad:	48 8d 3d af a0 02 00 	lea    0x2a0af(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   142b4:	e8 47 bd ff ff       	callq  10000 <__assert_fail@plt>
   142b9:	48 8d 0d b8 a7 02 00 	lea    0x2a7b8(%rip),%rcx        # 3ea78 <__PRETTY_FUNCTION__.5895>
   142c0:	ba be 06 00 00       	mov    $0x6be,%edx
   142c5:	48 8d 35 85 a0 02 00 	lea    0x2a085(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   142cc:	48 8d 3d 41 a2 02 00 	lea    0x2a241(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   142d3:	e8 28 bd ff ff       	callq  10000 <__assert_fail@plt>

00000000000142d8 <.annobin_cbuf_dropper.end>:
   142d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   142df:	00 

00000000000142e0 <cbuf_reader>:
   142e0:	41 57                	push   %r15
   142e2:	41 56                	push   %r14
   142e4:	41 55                	push   %r13
   142e6:	41 54                	push   %r12
   142e8:	55                   	push   %rbp
   142e9:	53                   	push   %rbx
   142ea:	48 83 ec 18          	sub    $0x18,%rsp
   142ee:	48 89 0c 24          	mov    %rcx,(%rsp)
   142f2:	48 85 ff             	test   %rdi,%rdi
   142f5:	0f 84 1c 01 00 00    	je     14417 <cbuf_reader+0x137>
   142fb:	89 f5                	mov    %esi,%ebp
   142fd:	85 f6                	test   %esi,%esi
   142ff:	0f 8e f3 00 00 00    	jle    143f8 <cbuf_reader+0x118>
   14305:	49 89 ff             	mov    %rdi,%r15
   14308:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1430c:	49 89 d4             	mov    %rdx,%r12
   1430f:	e8 cc c7 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14314:	83 f8 10             	cmp    $0x10,%eax
   14317:	0f 85 bc 00 00 00    	jne    143d9 <cbuf_reader+0xf9>
   1431d:	41 39 6f 40          	cmp    %ebp,0x40(%r15)
   14321:	41 0f 4e 6f 40       	cmovle 0x40(%r15),%ebp
   14326:	41 89 ee             	mov    %ebp,%r14d
   14329:	89 6c 24 0c          	mov    %ebp,0xc(%rsp)
   1432d:	85 ed                	test   %ebp,%ebp
   1432f:	0f 84 93 00 00 00    	je     143c8 <cbuf_reader+0xe8>
   14335:	41 8b 6f 50          	mov    0x50(%r15),%ebp
   14339:	0f 8e f7 00 00 00    	jle    14436 <cbuf_reader+0x156>
   1433f:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   14343:	eb 1f                	jmp    14364 <cbuf_reader+0x84>
   14345:	0f 1f 00             	nopl   (%rax)
   14348:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   1434c:	41 29 c6             	sub    %eax,%r14d
   1434f:	8d 04 28             	lea    (%rax,%rbp,1),%eax
   14352:	99                   	cltd   
   14353:	8d 59 01             	lea    0x1(%rcx),%ebx
   14356:	f7 fb                	idiv   %ebx
   14358:	89 d5                	mov    %edx,%ebp
   1435a:	41 39 f5             	cmp    %esi,%r13d
   1435d:	75 39                	jne    14398 <cbuf_reader+0xb8>
   1435f:	45 85 f6             	test   %r14d,%r14d
   14362:	7e 34                	jle    14398 <cbuf_reader+0xb8>
   14364:	48 63 dd             	movslq %ebp,%rbx
   14367:	8d 51 01             	lea    0x1(%rcx),%edx
   1436a:	49 8b 7f 58          	mov    0x58(%r15),%rdi
   1436e:	48 8b 34 24          	mov    (%rsp),%rsi
   14372:	29 ea                	sub    %ebp,%edx
   14374:	44 39 f2             	cmp    %r14d,%edx
   14377:	41 0f 4f d6          	cmovg  %r14d,%edx
   1437b:	48 01 df             	add    %rbx,%rdi
   1437e:	41 89 d5             	mov    %edx,%r13d
   14381:	41 ff d4             	callq  *%r12
   14384:	89 c6                	mov    %eax,%esi
   14386:	85 c0                	test   %eax,%eax
   14388:	7f be                	jg     14348 <cbuf_reader+0x68>
   1438a:	41 39 c5             	cmp    %eax,%r13d
   1438d:	75 09                	jne    14398 <cbuf_reader+0xb8>
   1438f:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   14393:	eb d2                	jmp    14367 <cbuf_reader+0x87>
   14395:	0f 1f 00             	nopl   (%rax)
   14398:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   1439c:	89 d8                	mov    %ebx,%eax
   1439e:	44 29 f0             	sub    %r14d,%eax
   143a1:	0f 88 8f 00 00 00    	js     14436 <cbuf_reader+0x156>
   143a7:	39 c3                	cmp    %eax,%ebx
   143a9:	0f 8c 87 00 00 00    	jl     14436 <cbuf_reader+0x156>
   143af:	85 c0                	test   %eax,%eax
   143b1:	0f 44 c6             	cmove  %esi,%eax
   143b4:	48 83 c4 18          	add    $0x18,%rsp
   143b8:	5b                   	pop    %rbx
   143b9:	5d                   	pop    %rbp
   143ba:	41 5c                	pop    %r12
   143bc:	41 5d                	pop    %r13
   143be:	41 5e                	pop    %r14
   143c0:	41 5f                	pop    %r15
   143c2:	c3                   	retq   
   143c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   143c8:	48 83 c4 18          	add    $0x18,%rsp
   143cc:	31 c0                	xor    %eax,%eax
   143ce:	5b                   	pop    %rbx
   143cf:	5d                   	pop    %rbp
   143d0:	41 5c                	pop    %r12
   143d2:	41 5d                	pop    %r13
   143d4:	41 5e                	pop    %r14
   143d6:	41 5f                	pop    %r15
   143d8:	c3                   	retq   
   143d9:	48 8d 0d 68 a6 02 00 	lea    0x2a668(%rip),%rcx        # 3ea48 <__PRETTY_FUNCTION__.5848>
   143e0:	ba b4 05 00 00       	mov    $0x5b4,%edx
   143e5:	48 8d 35 65 9f 02 00 	lea    0x29f65(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   143ec:	48 8d 3d 40 a1 02 00 	lea    0x2a140(%rip),%rdi        # 3e533 <__PRETTY_FUNCTION__.5439+0x1f3>
   143f3:	e8 08 bc ff ff       	callq  10000 <__assert_fail@plt>
   143f8:	48 8d 0d 49 a6 02 00 	lea    0x2a649(%rip),%rcx        # 3ea48 <__PRETTY_FUNCTION__.5848>
   143ff:	ba b1 05 00 00       	mov    $0x5b1,%edx
   14404:	48 8d 35 46 9f 02 00 	lea    0x29f46(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1440b:	48 8d 3d ea a0 02 00 	lea    0x2a0ea(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14412:	e8 e9 bb ff ff       	callq  10000 <__assert_fail@plt>
   14417:	48 8d 0d 2a a6 02 00 	lea    0x2a62a(%rip),%rcx        # 3ea48 <__PRETTY_FUNCTION__.5848>
   1441e:	ba b0 05 00 00       	mov    $0x5b0,%edx
   14423:	48 8d 35 27 9f 02 00 	lea    0x29f27(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1442a:	48 8d 3d f6 a0 02 00 	lea    0x2a0f6(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   14431:	e8 ca bb ff ff       	callq  10000 <__assert_fail@plt>
   14436:	48 8d 0d 0b a6 02 00 	lea    0x2a60b(%rip),%rcx        # 3ea48 <__PRETTY_FUNCTION__.5848>
   1443d:	ba d1 05 00 00       	mov    $0x5d1,%edx
   14442:	48 8d 35 08 9f 02 00 	lea    0x29f08(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14449:	48 8d 3d fe a0 02 00 	lea    0x2a0fe(%rip),%rdi        # 3e54e <__PRETTY_FUNCTION__.5439+0x20e>
   14450:	e8 ab bb ff ff       	callq  10000 <__assert_fail@plt>

0000000000014455 <.annobin_cbuf_reader.end>:
   14455:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1445c:	00 00 00 00 

0000000000014460 <cbuf_replayer>:
   14460:	41 57                	push   %r15
   14462:	41 56                	push   %r14
   14464:	41 55                	push   %r13
   14466:	41 54                	push   %r12
   14468:	55                   	push   %rbp
   14469:	53                   	push   %rbx
   1446a:	48 83 ec 18          	sub    $0x18,%rsp
   1446e:	48 89 0c 24          	mov    %rcx,(%rsp)
   14472:	48 85 ff             	test   %rdi,%rdi
   14475:	0f 84 00 01 00 00    	je     1457b <cbuf_replayer+0x11b>
   1447b:	89 f5                	mov    %esi,%ebp
   1447d:	85 f6                	test   %esi,%esi
   1447f:	0f 8e 34 01 00 00    	jle    145b9 <cbuf_replayer+0x159>
   14485:	48 89 fb             	mov    %rdi,%rbx
   14488:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1448c:	49 89 d4             	mov    %rdx,%r12
   1448f:	e8 4c c6 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14494:	83 f8 10             	cmp    $0x10,%eax
   14497:	0f 85 fd 00 00 00    	jne    1459a <cbuf_replayer+0x13a>
   1449d:	8b 43 3c             	mov    0x3c(%rbx),%eax
   144a0:	44 8b 4b 50          	mov    0x50(%rbx),%r9d
   144a4:	8d 48 01             	lea    0x1(%rax),%ecx
   144a7:	44 89 c8             	mov    %r9d,%eax
   144aa:	2b 43 54             	sub    0x54(%rbx),%eax
   144ad:	01 c8                	add    %ecx,%eax
   144af:	99                   	cltd   
   144b0:	f7 f9                	idiv   %ecx
   144b2:	39 ea                	cmp    %ebp,%edx
   144b4:	0f 4e ea             	cmovle %edx,%ebp
   144b7:	89 6c 24 0c          	mov    %ebp,0xc(%rsp)
   144bb:	85 ed                	test   %ebp,%ebp
   144bd:	0f 84 8d 00 00 00    	je     14550 <cbuf_replayer+0xf0>
   144c3:	41 29 e9             	sub    %ebp,%r9d
   144c6:	41 8d 04 09          	lea    (%r9,%rcx,1),%eax
   144ca:	99                   	cltd   
   144cb:	f7 f9                	idiv   %ecx
   144cd:	41 89 d5             	mov    %edx,%r13d
   144d0:	85 ed                	test   %ebp,%ebp
   144d2:	0f 8e 00 01 00 00    	jle    145d8 <cbuf_replayer+0x178>
   144d8:	41 89 ef             	mov    %ebp,%r15d
   144db:	48 63 ea             	movslq %edx,%rbp
   144de:	eb 23                	jmp    14503 <cbuf_replayer+0xa3>
   144e0:	8b 73 3c             	mov    0x3c(%rbx),%esi
   144e3:	41 29 c7             	sub    %eax,%r15d
   144e6:	42 8d 04 28          	lea    (%rax,%r13,1),%eax
   144ea:	99                   	cltd   
   144eb:	8d 7e 01             	lea    0x1(%rsi),%edi
   144ee:	f7 ff                	idiv   %edi
   144f0:	41 89 d5             	mov    %edx,%r13d
   144f3:	41 39 ce             	cmp    %ecx,%r14d
   144f6:	75 38                	jne    14530 <cbuf_replayer+0xd0>
   144f8:	45 85 ff             	test   %r15d,%r15d
   144fb:	7e 6b                	jle    14568 <cbuf_replayer+0x108>
   144fd:	48 63 ea             	movslq %edx,%rbp
   14500:	8d 4e 01             	lea    0x1(%rsi),%ecx
   14503:	89 ca                	mov    %ecx,%edx
   14505:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   14509:	48 8b 34 24          	mov    (%rsp),%rsi
   1450d:	44 29 ea             	sub    %r13d,%edx
   14510:	44 39 fa             	cmp    %r15d,%edx
   14513:	41 0f 4f d7          	cmovg  %r15d,%edx
   14517:	48 01 ef             	add    %rbp,%rdi
   1451a:	41 89 d6             	mov    %edx,%r14d
   1451d:	41 ff d4             	callq  *%r12
   14520:	89 c1                	mov    %eax,%ecx
   14522:	85 c0                	test   %eax,%eax
   14524:	7f ba                	jg     144e0 <cbuf_replayer+0x80>
   14526:	41 39 c6             	cmp    %eax,%r14d
   14529:	75 05                	jne    14530 <cbuf_replayer+0xd0>
   1452b:	8b 73 3c             	mov    0x3c(%rbx),%esi
   1452e:	eb d0                	jmp    14500 <cbuf_replayer+0xa0>
   14530:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   14534:	89 d8                	mov    %ebx,%eax
   14536:	44 29 f8             	sub    %r15d,%eax
   14539:	0f 88 99 00 00 00    	js     145d8 <cbuf_replayer+0x178>
   1453f:	39 c3                	cmp    %eax,%ebx
   14541:	0f 8c 91 00 00 00    	jl     145d8 <cbuf_replayer+0x178>
   14547:	85 c0                	test   %eax,%eax
   14549:	0f 45 c8             	cmovne %eax,%ecx
   1454c:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   14550:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   14554:	48 83 c4 18          	add    $0x18,%rsp
   14558:	5b                   	pop    %rbx
   14559:	5d                   	pop    %rbp
   1455a:	41 5c                	pop    %r12
   1455c:	41 5d                	pop    %r13
   1455e:	41 5e                	pop    %r14
   14560:	41 5f                	pop    %r15
   14562:	c3                   	retq   
   14563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14568:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   1456c:	89 d8                	mov    %ebx,%eax
   1456e:	44 29 f8             	sub    %r15d,%eax
   14571:	39 d8                	cmp    %ebx,%eax
   14573:	7f 63                	jg     145d8 <cbuf_replayer+0x178>
   14575:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   14579:	eb d5                	jmp    14550 <cbuf_replayer+0xf0>
   1457b:	48 8d 0d 96 a4 02 00 	lea    0x2a496(%rip),%rcx        # 3ea18 <__PRETTY_FUNCTION__.5862>
   14582:	ba e8 05 00 00       	mov    $0x5e8,%edx
   14587:	48 8d 35 c3 9d 02 00 	lea    0x29dc3(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1458e:	48 8d 3d 92 9f 02 00 	lea    0x29f92(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   14595:	e8 66 ba ff ff       	callq  10000 <__assert_fail@plt>
   1459a:	48 8d 0d 77 a4 02 00 	lea    0x2a477(%rip),%rcx        # 3ea18 <__PRETTY_FUNCTION__.5862>
   145a1:	ba ec 05 00 00       	mov    $0x5ec,%edx
   145a6:	48 8d 35 a4 9d 02 00 	lea    0x29da4(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   145ad:	48 8d 3d 7f 9f 02 00 	lea    0x29f7f(%rip),%rdi        # 3e533 <__PRETTY_FUNCTION__.5439+0x1f3>
   145b4:	e8 47 ba ff ff       	callq  10000 <__assert_fail@plt>
   145b9:	48 8d 0d 58 a4 02 00 	lea    0x2a458(%rip),%rcx        # 3ea18 <__PRETTY_FUNCTION__.5862>
   145c0:	ba e9 05 00 00       	mov    $0x5e9,%edx
   145c5:	48 8d 35 85 9d 02 00 	lea    0x29d85(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   145cc:	48 8d 3d 29 9f 02 00 	lea    0x29f29(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   145d3:	e8 28 ba ff ff       	callq  10000 <__assert_fail@plt>
   145d8:	48 8d 0d 39 a4 02 00 	lea    0x2a439(%rip),%rcx        # 3ea18 <__PRETTY_FUNCTION__.5862>
   145df:	ba 0a 06 00 00       	mov    $0x60a,%edx
   145e4:	48 8d 35 66 9d 02 00 	lea    0x29d66(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   145eb:	48 8d 3d 5c 9f 02 00 	lea    0x29f5c(%rip),%rdi        # 3e54e <__PRETTY_FUNCTION__.5439+0x20e>
   145f2:	e8 09 ba ff ff       	callq  10000 <__assert_fail@plt>

00000000000145f7 <.annobin_cbuf_grow.start>:
   145f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   145fe:	00 00 

0000000000014600 <cbuf_grow>:
   14600:	41 56                	push   %r14
   14602:	41 55                	push   %r13
   14604:	41 54                	push   %r12
   14606:	55                   	push   %rbp
   14607:	53                   	push   %rbx
   14608:	48 85 ff             	test   %rdi,%rdi
   1460b:	0f 84 13 01 00 00    	je     14724 <cbuf_grow+0x124>
   14611:	48 89 fb             	mov    %rdi,%rbx
   14614:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   14618:	41 89 f6             	mov    %esi,%r14d
   1461b:	e8 c0 c4 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14620:	83 f8 10             	cmp    $0x10,%eax
   14623:	0f 85 1a 01 00 00    	jne    14743 <cbuf_grow+0x143>
   14629:	44 8b 63 3c          	mov    0x3c(%rbx),%r12d
   1462d:	8b 6b 38             	mov    0x38(%rbx),%ebp
   14630:	41 39 ec             	cmp    %ebp,%r12d
   14633:	0f 84 9f 00 00 00    	je     146d8 <cbuf_grow+0xd8>
   14639:	8b 4b 30             	mov    0x30(%rbx),%ecx
   1463c:	41 89 cd             	mov    %ecx,%r13d
   1463f:	45 29 e5             	sub    %r12d,%r13d
   14642:	45 85 ed             	test   %r13d,%r13d
   14645:	0f 8e 17 01 00 00    	jle    14762 <cbuf_grow+0x162>
   1464b:	42 8d 34 31          	lea    (%rcx,%r14,1),%esi
   1464f:	ba d3 4d 62 10       	mov    $0x10624dd3,%edx
   14654:	44 01 ed             	add    %r13d,%ebp
   14657:	89 f0                	mov    %esi,%eax
   14659:	c1 fe 1f             	sar    $0x1f,%esi
   1465c:	f7 ea                	imul   %edx
   1465e:	c1 fa 06             	sar    $0x6,%edx
   14661:	29 f2                	sub    %esi,%edx
   14663:	69 d2 e8 03 00 00    	imul   $0x3e8,%edx,%edx
   14669:	8d 82 e8 03 00 00    	lea    0x3e8(%rdx),%eax
   1466f:	39 c5                	cmp    %eax,%ebp
   14671:	0f 4f e8             	cmovg  %eax,%ebp
   14674:	39 e9                	cmp    %ebp,%ecx
   14676:	0f 8d 05 01 00 00    	jge    14781 <cbuf_grow+0x181>
   1467c:	48 8b 43 58          	mov    0x58(%rbx),%rax
   14680:	48 63 f5             	movslq %ebp,%rsi
   14683:	48 8d 78 f8          	lea    -0x8(%rax),%rdi
   14687:	e8 44 bf ff ff       	callq  105d0 <realloc@plt>
   1468c:	48 85 c0             	test   %rax,%rax
   1468f:	74 47                	je     146d8 <cbuf_grow+0xd8>
   14691:	89 6b 30             	mov    %ebp,0x30(%rbx)
   14694:	48 8b 13             	mov    (%rbx),%rdx
   14697:	44 29 ed             	sub    %r13d,%ebp
   1469a:	48 83 c0 08          	add    $0x8,%rax
   1469e:	89 6b 3c             	mov    %ebp,0x3c(%rbx)
   146a1:	48 63 ed             	movslq %ebp,%rbp
   146a4:	48 89 43 58          	mov    %rax,0x58(%rbx)
   146a8:	48 89 54 28 01       	mov    %rdx,0x1(%rax,%rbp,1)
   146ad:	48 63 73 54          	movslq 0x54(%rbx),%rsi
   146b1:	3b 73 4c             	cmp    0x4c(%rbx),%esi
   146b4:	7f 32                	jg     146e8 <cbuf_grow+0xe8>
   146b6:	48 89 df             	mov    %rbx,%rdi
   146b9:	e8 c2 f2 ff ff       	callq  13980 <cbuf_is_valid>
   146be:	85 c0                	test   %eax,%eax
   146c0:	0f 84 da 00 00 00    	je     147a0 <cbuf_grow+0x1a0>
   146c6:	8b 43 3c             	mov    0x3c(%rbx),%eax
   146c9:	5b                   	pop    %rbx
   146ca:	5d                   	pop    %rbp
   146cb:	44 29 e0             	sub    %r12d,%eax
   146ce:	41 5c                	pop    %r12
   146d0:	41 5d                	pop    %r13
   146d2:	41 5e                	pop    %r14
   146d4:	c3                   	retq   
   146d5:	0f 1f 00             	nopl   (%rax)
   146d8:	5b                   	pop    %rbx
   146d9:	31 c0                	xor    %eax,%eax
   146db:	5d                   	pop    %rbp
   146dc:	41 5c                	pop    %r12
   146de:	41 5d                	pop    %r13
   146e0:	41 5e                	pop    %r14
   146e2:	c3                   	retq   
   146e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   146e8:	8b 43 3c             	mov    0x3c(%rbx),%eax
   146eb:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   146f0:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   146f4:	29 f2                	sub    %esi,%edx
   146f6:	8d 68 01             	lea    0x1(%rax),%ebp
   146f9:	48 01 fe             	add    %rdi,%rsi
   146fc:	29 d5                	sub    %edx,%ebp
   146fe:	48 63 d2             	movslq %edx,%rdx
   14701:	48 63 c5             	movslq %ebp,%rax
   14704:	48 01 c7             	add    %rax,%rdi
  return __builtin___memmove_chk (__dest, __src, __len,
   14707:	e8 c4 bf ff ff       	callq  106d0 <memmove@plt>
   1470c:	8b 43 50             	mov    0x50(%rbx),%eax
   1470f:	8b 53 54             	mov    0x54(%rbx),%edx
   14712:	39 d0                	cmp    %edx,%eax
   14714:	7c 09                	jl     1471f <cbuf_grow+0x11f>
   14716:	89 e9                	mov    %ebp,%ecx
   14718:	29 d1                	sub    %edx,%ecx
   1471a:	01 c8                	add    %ecx,%eax
   1471c:	89 43 50             	mov    %eax,0x50(%rbx)
   1471f:	89 6b 54             	mov    %ebp,0x54(%rbx)
   14722:	eb 92                	jmp    146b6 <cbuf_grow+0xb6>
   14724:	48 8d 0d 9d a2 02 00 	lea    0x2a29d(%rip),%rcx        # 3e9c8 <__PRETTY_FUNCTION__.5891>
   1472b:	ba 77 06 00 00       	mov    $0x677,%edx
   14730:	48 8d 35 1a 9c 02 00 	lea    0x29c1a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14737:	48 8d 3d 1a 9c 02 00 	lea    0x29c1a(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   1473e:	e8 bd b8 ff ff       	callq  10000 <__assert_fail@plt>
   14743:	48 8d 0d 7e a2 02 00 	lea    0x2a27e(%rip),%rcx        # 3e9c8 <__PRETTY_FUNCTION__.5891>
   1474a:	ba 79 06 00 00       	mov    $0x679,%edx
   1474f:	48 8d 35 fb 9b 02 00 	lea    0x29bfb(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14756:	48 8d 3d 06 9c 02 00 	lea    0x29c06(%rip),%rdi        # 3e363 <__PRETTY_FUNCTION__.5439+0x23>
   1475d:	e8 9e b8 ff ff       	callq  10000 <__assert_fail@plt>
   14762:	48 8d 0d 5f a2 02 00 	lea    0x2a25f(%rip),%rcx        # 3e9c8 <__PRETTY_FUNCTION__.5891>
   14769:	ba 80 06 00 00       	mov    $0x680,%edx
   1476e:	48 8d 35 dc 9b 02 00 	lea    0x29bdc(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14775:	48 8d 3d e9 9d 02 00 	lea    0x29de9(%rip),%rdi        # 3e565 <__PRETTY_FUNCTION__.5439+0x225>
   1477c:	e8 7f b8 ff ff       	callq  10000 <__assert_fail@plt>
   14781:	48 8d 0d 40 a2 02 00 	lea    0x2a240(%rip),%rcx        # 3e9c8 <__PRETTY_FUNCTION__.5891>
   14788:	ba 87 06 00 00       	mov    $0x687,%edx
   1478d:	48 8d 35 bd 9b 02 00 	lea    0x29bbd(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14794:	48 8d 3d d8 9d 02 00 	lea    0x29dd8(%rip),%rdi        # 3e573 <__PRETTY_FUNCTION__.5439+0x233>
   1479b:	e8 60 b8 ff ff       	callq  10000 <__assert_fail@plt>
   147a0:	48 8d 0d 21 a2 02 00 	lea    0x2a221(%rip),%rcx        # 3e9c8 <__PRETTY_FUNCTION__.5891>
   147a7:	ba b2 06 00 00       	mov    $0x6b2,%edx
   147ac:	48 8d 35 9e 9b 02 00 	lea    0x29b9e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   147b3:	48 8d 3d 5a 9d 02 00 	lea    0x29d5a(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   147ba:	e8 41 b8 ff ff       	callq  10000 <__assert_fail@plt>

00000000000147bf <.annobin_cbuf_grow.end>:
   147bf:	90                   	nop

00000000000147c0 <cbuf_writer>:
   147c0:	41 57                	push   %r15
   147c2:	41 56                	push   %r14
   147c4:	41 55                	push   %r13
   147c6:	41 54                	push   %r12
   147c8:	55                   	push   %rbp
   147c9:	53                   	push   %rbx
   147ca:	48 83 ec 28          	sub    $0x28,%rsp
   147ce:	89 74 24 10          	mov    %esi,0x10(%rsp)
   147d2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   147d7:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   147dc:	48 85 ff             	test   %rdi,%rdi
   147df:	0f 84 68 02 00 00    	je     14a4d <cbuf_writer+0x28d>
   147e5:	8b 44 24 10          	mov    0x10(%rsp),%eax
   147e9:	85 c0                	test   %eax,%eax
   147eb:	0f 8e 3d 02 00 00    	jle    14a2e <cbuf_writer+0x26e>
   147f1:	49 89 ff             	mov    %rdi,%r15
   147f4:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   147f8:	48 89 d5             	mov    %rdx,%rbp
   147fb:	e8 e0 c2 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14800:	83 f8 10             	cmp    $0x10,%eax
   14803:	0f 85 06 02 00 00    	jne    14a0f <cbuf_writer+0x24f>
   14809:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   1480d:	89 c8                	mov    %ecx,%eax
   1480f:	41 2b 47 40          	sub    0x40(%r15),%eax
   14813:	89 44 24 14          	mov    %eax,0x14(%rsp)
   14817:	39 44 24 10          	cmp    %eax,0x10(%rsp)
   1481b:	7e 0a                	jle    14827 <cbuf_writer+0x67>
   1481d:	41 3b 4f 38          	cmp    0x38(%r15),%ecx
   14821:	0f 8c 81 01 00 00    	jl     149a8 <cbuf_writer+0x1e8>
   14827:	41 8b 47 44          	mov    0x44(%r15),%eax
   1482b:	85 c0                	test   %eax,%eax
   1482d:	74 71                	je     148a0 <cbuf_writer+0xe0>
   1482f:	45 8b 77 4c          	mov    0x4c(%r15),%r14d
   14833:	83 f8 01             	cmp    $0x1,%eax
   14836:	0f 84 9c 01 00 00    	je     149d8 <cbuf_writer+0x218>
   1483c:	44 8b 6c 24 10       	mov    0x10(%rsp),%r13d
   14841:	eb 27                	jmp    1486a <cbuf_writer+0xaa>
   14843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14848:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   1484c:	41 29 c5             	sub    %eax,%r13d
   1484f:	42 8d 04 30          	lea    (%rax,%r14,1),%eax
   14853:	99                   	cltd   
   14854:	8d 59 01             	lea    0x1(%rcx),%ebx
   14857:	f7 fb                	idiv   %ebx
   14859:	41 89 d6             	mov    %edx,%r14d
   1485c:	41 39 f4             	cmp    %esi,%r12d
   1485f:	0f 85 83 00 00 00    	jne    148e8 <cbuf_writer+0x128>
   14865:	45 85 ed             	test   %r13d,%r13d
   14868:	7e 7e                	jle    148e8 <cbuf_writer+0x128>
   1486a:	49 63 de             	movslq %r14d,%rbx
   1486d:	8d 51 01             	lea    0x1(%rcx),%edx
   14870:	49 8b 7f 58          	mov    0x58(%r15),%rdi
   14874:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   14879:	44 29 f2             	sub    %r14d,%edx
   1487c:	44 39 ea             	cmp    %r13d,%edx
   1487f:	41 0f 4f d5          	cmovg  %r13d,%edx
   14883:	48 01 df             	add    %rbx,%rdi
   14886:	41 89 d4             	mov    %edx,%r12d
   14889:	ff d5                	callq  *%rbp
   1488b:	89 c6                	mov    %eax,%esi
   1488d:	85 c0                	test   %eax,%eax
   1488f:	7f b7                	jg     14848 <cbuf_writer+0x88>
   14891:	41 39 c4             	cmp    %eax,%r12d
   14894:	75 52                	jne    148e8 <cbuf_writer+0x128>
   14896:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   1489a:	eb d1                	jmp    1486d <cbuf_writer+0xad>
   1489c:	0f 1f 40 00          	nopl   0x0(%rax)
   148a0:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   148a4:	89 c8                	mov    %ecx,%eax
   148a6:	41 2b 47 40          	sub    0x40(%r15),%eax
   148aa:	39 c3                	cmp    %eax,%ebx
   148ac:	0f 4e c3             	cmovle %ebx,%eax
   148af:	89 44 24 10          	mov    %eax,0x10(%rsp)
   148b3:	85 c0                	test   %eax,%eax
   148b5:	0f 84 3f 01 00 00    	je     149fa <cbuf_writer+0x23a>
   148bb:	45 8b 77 4c          	mov    0x4c(%r15),%r14d
   148bf:	0f 8f 77 ff ff ff    	jg     1483c <cbuf_writer+0x7c>
   148c5:	48 8d 0d 0c a1 02 00 	lea    0x2a10c(%rip),%rcx        # 3e9d8 <__PRETTY_FUNCTION__.5879>
   148cc:	ba 4f 06 00 00       	mov    $0x64f,%edx
   148d1:	48 8d 35 79 9a 02 00 	lea    0x29a79(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   148d8:	48 8d 3d 6f 9c 02 00 	lea    0x29c6f(%rip),%rdi        # 3e54e <__PRETTY_FUNCTION__.5439+0x20e>
   148df:	e8 1c b7 ff ff       	callq  10000 <__assert_fail@plt>
   148e4:	0f 1f 40 00          	nopl   0x0(%rax)
   148e8:	8b 44 24 10          	mov    0x10(%rsp),%eax
   148ec:	89 c1                	mov    %eax,%ecx
   148ee:	44 29 e9             	sub    %r13d,%ecx
   148f1:	78 d2                	js     148c5 <cbuf_writer+0x105>
   148f3:	39 c1                	cmp    %eax,%ecx
   148f5:	7f ce                	jg     148c5 <cbuf_writer+0x105>
   148f7:	85 c9                	test   %ecx,%ecx
   148f9:	0f 84 91 00 00 00    	je     14990 <cbuf_writer+0x1d0>
   148ff:	41 8b 7f 3c          	mov    0x3c(%r15),%edi
   14903:	41 8b 47 50          	mov    0x50(%r15),%eax
   14907:	8d 77 01             	lea    0x1(%rdi),%esi
   1490a:	01 f0                	add    %esi,%eax
   1490c:	41 2b 47 54          	sub    0x54(%r15),%eax
   14910:	99                   	cltd   
   14911:	f7 fe                	idiv   %esi
   14913:	41 8b 47 40          	mov    0x40(%r15),%eax
   14917:	01 c8                	add    %ecx,%eax
   14919:	39 f8                	cmp    %edi,%eax
   1491b:	0f 4f c7             	cmovg  %edi,%eax
   1491e:	41 89 47 40          	mov    %eax,0x40(%r15)
   14922:	41 8b 47 4c          	mov    0x4c(%r15),%eax
   14926:	01 c8                	add    %ecx,%eax
   14928:	41 89 d0             	mov    %edx,%r8d
   1492b:	99                   	cltd   
   1492c:	f7 fe                	idiv   %esi
   1492e:	44 39 f2             	cmp    %r14d,%edx
   14931:	0f 85 35 01 00 00    	jne    14a6c <cbuf_writer+0x2ac>
   14937:	8b 44 24 14          	mov    0x14(%rsp),%eax
   1493b:	45 89 77 4c          	mov    %r14d,0x4c(%r15)
   1493f:	44 29 c0             	sub    %r8d,%eax
   14942:	39 c8                	cmp    %ecx,%eax
   14944:	7d 13                	jge    14959 <cbuf_writer+0x199>
   14946:	41 8d 46 01          	lea    0x1(%r14),%eax
   1494a:	41 c7 47 48 01 00 00 	movl   $0x1,0x48(%r15)
   14951:	00 
   14952:	99                   	cltd   
   14953:	f7 fe                	idiv   %esi
   14955:	41 89 57 54          	mov    %edx,0x54(%r15)
   14959:	39 4c 24 14          	cmp    %ecx,0x14(%rsp)
   1495d:	7c 39                	jl     14998 <cbuf_writer+0x1d8>
   1495f:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   14964:	48 85 db             	test   %rbx,%rbx
   14967:	74 10                	je     14979 <cbuf_writer+0x1b9>
   14969:	89 c8                	mov    %ecx,%eax
   1496b:	ba 00 00 00 00       	mov    $0x0,%edx
   14970:	2b 44 24 14          	sub    0x14(%rsp),%eax
   14974:	0f 48 c2             	cmovs  %edx,%eax
   14977:	89 03                	mov    %eax,(%rbx)
   14979:	48 83 c4 28          	add    $0x28,%rsp
   1497d:	89 c8                	mov    %ecx,%eax
   1497f:	5b                   	pop    %rbx
   14980:	5d                   	pop    %rbp
   14981:	41 5c                	pop    %r12
   14983:	41 5d                	pop    %r13
   14985:	41 5e                	pop    %r14
   14987:	41 5f                	pop    %r15
   14989:	c3                   	retq   
   1498a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14990:	89 f1                	mov    %esi,%ecx
   14992:	eb e5                	jmp    14979 <cbuf_writer+0x1b9>
   14994:	0f 1f 40 00          	nopl   0x0(%rax)
   14998:	41 8b 47 54          	mov    0x54(%r15),%eax
   1499c:	41 89 47 50          	mov    %eax,0x50(%r15)
   149a0:	eb bd                	jmp    1495f <cbuf_writer+0x19f>
   149a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   149a8:	8b 74 24 10          	mov    0x10(%rsp),%esi
   149ac:	4c 89 ff             	mov    %r15,%rdi
   149af:	89 c3                	mov    %eax,%ebx
   149b1:	29 c6                	sub    %eax,%esi
   149b3:	e8 48 fc ff ff       	callq  14600 <cbuf_grow>
   149b8:	41 8b 4f 3c          	mov    0x3c(%r15),%ecx
   149bc:	01 c3                	add    %eax,%ebx
   149be:	41 8b 47 44          	mov    0x44(%r15),%eax
   149c2:	89 5c 24 14          	mov    %ebx,0x14(%rsp)
   149c6:	85 c0                	test   %eax,%eax
   149c8:	0f 85 61 fe ff ff    	jne    1482f <cbuf_writer+0x6f>
   149ce:	e9 cd fe ff ff       	jmpq   148a0 <cbuf_writer+0xe0>
   149d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   149d8:	8b 44 24 10          	mov    0x10(%rsp),%eax
   149dc:	39 c8                	cmp    %ecx,%eax
   149de:	0f 4f c1             	cmovg  %ecx,%eax
   149e1:	89 44 24 10          	mov    %eax,0x10(%rsp)
   149e5:	85 c0                	test   %eax,%eax
   149e7:	0f 8f 4f fe ff ff    	jg     1483c <cbuf_writer+0x7c>
   149ed:	0f 85 d2 fe ff ff    	jne    148c5 <cbuf_writer+0x105>
   149f3:	31 c9                	xor    %ecx,%ecx
   149f5:	e9 7f ff ff ff       	jmpq   14979 <cbuf_writer+0x1b9>
   149fa:	e8 11 b1 ff ff       	callq  fb10 <__errno_location@plt>
   149ff:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   14a04:	c7 00 1c 00 00 00    	movl   $0x1c,(%rax)
   14a0a:	e9 6a ff ff ff       	jmpq   14979 <cbuf_writer+0x1b9>
   14a0f:	48 8d 0d c2 9f 02 00 	lea    0x29fc2(%rip),%rcx        # 3e9d8 <__PRETTY_FUNCTION__.5879>
   14a16:	ba 26 06 00 00       	mov    $0x626,%edx
   14a1b:	48 8d 35 2f 99 02 00 	lea    0x2992f(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14a22:	48 8d 3d 64 9b 02 00 	lea    0x29b64(%rip),%rdi        # 3e58d <__PRETTY_FUNCTION__.5439+0x24d>
   14a29:	e8 d2 b5 ff ff       	callq  10000 <__assert_fail@plt>
   14a2e:	48 8d 0d a3 9f 02 00 	lea    0x29fa3(%rip),%rcx        # 3e9d8 <__PRETTY_FUNCTION__.5879>
   14a35:	ba 23 06 00 00       	mov    $0x623,%edx
   14a3a:	48 8d 35 10 99 02 00 	lea    0x29910(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14a41:	48 8d 3d b4 9a 02 00 	lea    0x29ab4(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14a48:	e8 b3 b5 ff ff       	callq  10000 <__assert_fail@plt>
   14a4d:	48 8d 0d 84 9f 02 00 	lea    0x29f84(%rip),%rcx        # 3e9d8 <__PRETTY_FUNCTION__.5879>
   14a54:	ba 22 06 00 00       	mov    $0x622,%edx
   14a59:	48 8d 35 f1 98 02 00 	lea    0x298f1(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14a60:	48 8d 3d 1a 9b 02 00 	lea    0x29b1a(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   14a67:	e8 94 b5 ff ff       	callq  10000 <__assert_fail@plt>
   14a6c:	48 8d 0d 65 9f 02 00 	lea    0x29f65(%rip),%rcx        # 3e9d8 <__PRETTY_FUNCTION__.5879>
   14a73:	ba 5b 06 00 00       	mov    $0x65b,%edx
   14a78:	48 8d 35 d2 98 02 00 	lea    0x298d2(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14a7f:	48 8d 3d b2 9d 02 00 	lea    0x29db2(%rip),%rdi        # 3e838 <__PRETTY_FUNCTION__.5439+0x4f8>
   14a86:	e8 75 b5 ff ff       	callq  10000 <__assert_fail@plt>

0000000000014a8b <.annobin_cbuf_copier.start>:
   14a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014a90 <cbuf_copier>:
   14a90:	41 57                	push   %r15
   14a92:	41 56                	push   %r14
   14a94:	41 55                	push   %r13
   14a96:	41 54                	push   %r12
   14a98:	55                   	push   %rbp
   14a99:	53                   	push   %rbx
   14a9a:	48 83 ec 18          	sub    $0x18,%rsp
   14a9e:	48 85 ff             	test   %rdi,%rdi
   14aa1:	0f 84 af 02 00 00    	je     14d56 <cbuf_copier+0x2c6>
   14aa7:	49 89 f7             	mov    %rsi,%r15
   14aaa:	48 85 f6             	test   %rsi,%rsi
   14aad:	0f 84 84 02 00 00    	je     14d37 <cbuf_copier+0x2a7>
   14ab3:	89 d3                	mov    %edx,%ebx
   14ab5:	85 d2                	test   %edx,%edx
   14ab7:	0f 8e 5b 02 00 00    	jle    14d18 <cbuf_copier+0x288>
   14abd:	49 89 fc             	mov    %rdi,%r12
   14ac0:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   14ac4:	48 89 cd             	mov    %rcx,%rbp
   14ac7:	e8 14 c0 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14acc:	83 f8 10             	cmp    $0x10,%eax
   14acf:	0f 85 24 02 00 00    	jne    14cf9 <cbuf_copier+0x269>
   14ad5:	49 8d 7f 08          	lea    0x8(%r15),%rdi
   14ad9:	e8 02 c0 ff ff       	callq  10ae0 <pthread_mutex_trylock@plt>
   14ade:	83 f8 10             	cmp    $0x10,%eax
   14ae1:	0f 85 f3 01 00 00    	jne    14cda <cbuf_copier+0x24a>
   14ae7:	41 39 5c 24 40       	cmp    %ebx,0x40(%r12)
   14aec:	41 0f 4e 5c 24 40    	cmovle 0x40(%r12),%ebx
   14af2:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
   14af6:	85 db                	test   %ebx,%ebx
   14af8:	0f 84 66 01 00 00    	je     14c64 <cbuf_copier+0x1d4>
   14afe:	41 8b 7f 3c          	mov    0x3c(%r15),%edi
   14b02:	89 fa                	mov    %edi,%edx
   14b04:	41 2b 57 40          	sub    0x40(%r15),%edx
   14b08:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   14b0c:	39 d3                	cmp    %edx,%ebx
   14b0e:	7e 0a                	jle    14b1a <cbuf_copier+0x8a>
   14b10:	41 3b 7f 38          	cmp    0x38(%r15),%edi
   14b14:	0f 8c 86 01 00 00    	jl     14ca0 <cbuf_copier+0x210>
   14b1a:	41 8b 47 44          	mov    0x44(%r15),%eax
   14b1e:	85 c0                	test   %eax,%eax
   14b20:	0f 85 5a 01 00 00    	jne    14c80 <cbuf_copier+0x1f0>
   14b26:	8b 54 24 04          	mov    0x4(%rsp),%edx
   14b2a:	89 f8                	mov    %edi,%eax
   14b2c:	41 2b 47 40          	sub    0x40(%r15),%eax
   14b30:	39 c2                	cmp    %eax,%edx
   14b32:	0f 4e c2             	cmovle %edx,%eax
   14b35:	89 44 24 04          	mov    %eax,0x4(%rsp)
   14b39:	85 c0                	test   %eax,%eax
   14b3b:	0f 84 84 01 00 00    	je     14cc5 <cbuf_copier+0x235>
   14b41:	48 85 ed             	test   %rbp,%rbp
   14b44:	74 19                	je     14b5f <cbuf_copier+0xcf>
   14b46:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14b4a:	ba 00 00 00 00       	mov    $0x0,%edx
   14b4f:	29 f8                	sub    %edi,%eax
   14b51:	41 03 47 40          	add    0x40(%r15),%eax
   14b55:	0f 48 c2             	cmovs  %edx,%eax
   14b58:	89 45 00             	mov    %eax,0x0(%rbp)
   14b5b:	41 8b 7f 3c          	mov    0x3c(%r15),%edi
   14b5f:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14b63:	41 8b 6c 24 50       	mov    0x50(%r12),%ebp
   14b68:	45 8b 77 4c          	mov    0x4c(%r15),%r14d
   14b6c:	89 44 24 08          	mov    %eax,0x8(%rsp)
   14b70:	39 f8                	cmp    %edi,%eax
   14b72:	7e 15                	jle    14b89 <cbuf_copier+0xf9>
   14b74:	41 8b 54 24 3c       	mov    0x3c(%r12),%edx
   14b79:	29 f8                	sub    %edi,%eax
   14b7b:	89 7c 24 08          	mov    %edi,0x8(%rsp)
   14b7f:	01 e8                	add    %ebp,%eax
   14b81:	8d 5a 01             	lea    0x1(%rdx),%ebx
   14b84:	99                   	cltd   
   14b85:	f7 fb                	idiv   %ebx
   14b87:	89 d5                	mov    %edx,%ebp
   14b89:	44 8b 6c 24 08       	mov    0x8(%rsp),%r13d
   14b8e:	45 85 ed             	test   %r13d,%r13d
   14b91:	0f 8e cd 00 00 00    	jle    14c64 <cbuf_copier+0x1d4>
   14b97:	41 8b 4c 24 3c       	mov    0x3c(%r12),%ecx
   14b9c:	8d 77 01             	lea    0x1(%rdi),%esi
   14b9f:	83 c1 01             	add    $0x1,%ecx
   14ba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14ba8:	44 29 f6             	sub    %r14d,%esi
   14bab:	29 e9                	sub    %ebp,%ecx
   14bad:	49 63 fe             	movslq %r14d,%rdi
   14bb0:	39 f1                	cmp    %esi,%ecx
   14bb2:	0f 4f ce             	cmovg  %esi,%ecx
   14bb5:	48 63 f5             	movslq %ebp,%rsi
   14bb8:	44 39 e9             	cmp    %r13d,%ecx
   14bbb:	89 cb                	mov    %ecx,%ebx
   14bbd:	41 0f 4f dd          	cmovg  %r13d,%ebx
   14bc1:	49 03 7f 58          	add    0x58(%r15),%rdi
   14bc5:	49 03 74 24 58       	add    0x58(%r12),%rsi
   14bca:	48 63 d3             	movslq %ebx,%rdx
   14bcd:	41 29 dd             	sub    %ebx,%r13d
  return __builtin___memcpy_chk (__dest, __src, __len,
   14bd0:	e8 3b b7 ff ff       	callq  10310 <memcpy@plt>
   14bd5:	41 8b 4c 24 3c       	mov    0x3c(%r12),%ecx
   14bda:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
   14bdd:	41 8b 7f 3c          	mov    0x3c(%r15),%edi
   14be1:	99                   	cltd   
   14be2:	83 c1 01             	add    $0x1,%ecx
   14be5:	8d 77 01             	lea    0x1(%rdi),%esi
   14be8:	f7 f9                	idiv   %ecx
   14bea:	42 8d 04 33          	lea    (%rbx,%r14,1),%eax
   14bee:	89 d5                	mov    %edx,%ebp
   14bf0:	99                   	cltd   
   14bf1:	f7 fe                	idiv   %esi
   14bf3:	41 89 d6             	mov    %edx,%r14d
   14bf6:	45 85 ed             	test   %r13d,%r13d
   14bf9:	7f ad                	jg     14ba8 <cbuf_copier+0x118>
   14bfb:	41 8b 47 50          	mov    0x50(%r15),%eax
   14bff:	01 f0                	add    %esi,%eax
   14c01:	41 2b 47 54          	sub    0x54(%r15),%eax
   14c05:	99                   	cltd   
   14c06:	f7 fe                	idiv   %esi
   14c08:	41 8b 47 40          	mov    0x40(%r15),%eax
   14c0c:	89 d1                	mov    %edx,%ecx
   14c0e:	8b 54 24 08          	mov    0x8(%rsp),%edx
   14c12:	01 d0                	add    %edx,%eax
   14c14:	39 f8                	cmp    %edi,%eax
   14c16:	0f 4e f8             	cmovle %eax,%edi
   14c19:	41 8b 47 4c          	mov    0x4c(%r15),%eax
   14c1d:	01 d0                	add    %edx,%eax
   14c1f:	41 89 7f 40          	mov    %edi,0x40(%r15)
   14c23:	99                   	cltd   
   14c24:	f7 fe                	idiv   %esi
   14c26:	44 39 f2             	cmp    %r14d,%edx
   14c29:	0f 85 46 01 00 00    	jne    14d75 <cbuf_copier+0x2e5>
   14c2f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   14c33:	45 89 77 4c          	mov    %r14d,0x4c(%r15)
   14c37:	29 c8                	sub    %ecx,%eax
   14c39:	3b 44 24 08          	cmp    0x8(%rsp),%eax
   14c3d:	7d 13                	jge    14c52 <cbuf_copier+0x1c2>
   14c3f:	41 8d 46 01          	lea    0x1(%r14),%eax
   14c43:	41 c7 47 48 01 00 00 	movl   $0x1,0x48(%r15)
   14c4a:	00 
   14c4b:	99                   	cltd   
   14c4c:	f7 fe                	idiv   %esi
   14c4e:	41 89 57 54          	mov    %edx,0x54(%r15)
   14c52:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   14c56:	39 5c 24 08          	cmp    %ebx,0x8(%rsp)
   14c5a:	7e 08                	jle    14c64 <cbuf_copier+0x1d4>
   14c5c:	41 8b 47 54          	mov    0x54(%r15),%eax
   14c60:	41 89 47 50          	mov    %eax,0x50(%r15)
   14c64:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14c68:	48 83 c4 18          	add    $0x18,%rsp
   14c6c:	5b                   	pop    %rbx
   14c6d:	5d                   	pop    %rbp
   14c6e:	41 5c                	pop    %r12
   14c70:	41 5d                	pop    %r13
   14c72:	41 5e                	pop    %r14
   14c74:	41 5f                	pop    %r15
   14c76:	c3                   	retq   
   14c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14c7e:	00 00 
   14c80:	83 f8 01             	cmp    $0x1,%eax
   14c83:	0f 85 b8 fe ff ff    	jne    14b41 <cbuf_copier+0xb1>
   14c89:	8b 44 24 04          	mov    0x4(%rsp),%eax
   14c8d:	39 f8                	cmp    %edi,%eax
   14c8f:	0f 4f c7             	cmovg  %edi,%eax
   14c92:	89 44 24 04          	mov    %eax,0x4(%rsp)
   14c96:	e9 a6 fe ff ff       	jmpq   14b41 <cbuf_copier+0xb1>
   14c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14ca0:	89 de                	mov    %ebx,%esi
   14ca2:	4c 89 ff             	mov    %r15,%rdi
   14ca5:	89 d3                	mov    %edx,%ebx
   14ca7:	29 d6                	sub    %edx,%esi
   14ca9:	e8 52 f9 ff ff       	callq  14600 <cbuf_grow>
   14cae:	41 8b 7f 3c          	mov    0x3c(%r15),%edi
   14cb2:	01 c3                	add    %eax,%ebx
   14cb4:	41 8b 47 44          	mov    0x44(%r15),%eax
   14cb8:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
   14cbc:	85 c0                	test   %eax,%eax
   14cbe:	75 c0                	jne    14c80 <cbuf_copier+0x1f0>
   14cc0:	e9 61 fe ff ff       	jmpq   14b26 <cbuf_copier+0x96>
   14cc5:	e8 46 ae ff ff       	callq  fb10 <__errno_location@plt>
   14cca:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
   14cd1:	ff 
   14cd2:	c7 00 1c 00 00 00    	movl   $0x1c,(%rax)
   14cd8:	eb 8a                	jmp    14c64 <cbuf_copier+0x1d4>
   14cda:	48 8d 0d cf 9b 02 00 	lea    0x29bcf(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14ce1:	ba 42 05 00 00       	mov    $0x542,%edx
   14ce6:	48 8d 35 64 96 02 00 	lea    0x29664(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14ced:	48 8d 3d 99 98 02 00 	lea    0x29899(%rip),%rdi        # 3e58d <__PRETTY_FUNCTION__.5439+0x24d>
   14cf4:	e8 07 b3 ff ff       	callq  10000 <__assert_fail@plt>
   14cf9:	48 8d 0d b0 9b 02 00 	lea    0x29bb0(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14d00:	ba 41 05 00 00       	mov    $0x541,%edx
   14d05:	48 8d 35 45 96 02 00 	lea    0x29645(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14d0c:	48 8d 3d 20 98 02 00 	lea    0x29820(%rip),%rdi        # 3e533 <__PRETTY_FUNCTION__.5439+0x1f3>
   14d13:	e8 e8 b2 ff ff       	callq  10000 <__assert_fail@plt>
   14d18:	48 8d 0d 91 9b 02 00 	lea    0x29b91(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14d1f:	ba 40 05 00 00       	mov    $0x540,%edx
   14d24:	48 8d 35 26 96 02 00 	lea    0x29626(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14d2b:	48 8d 3d ca 97 02 00 	lea    0x297ca(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14d32:	e8 c9 b2 ff ff       	callq  10000 <__assert_fail@plt>
   14d37:	48 8d 0d 72 9b 02 00 	lea    0x29b72(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14d3e:	ba 3f 05 00 00       	mov    $0x53f,%edx
   14d43:	48 8d 35 07 96 02 00 	lea    0x29607(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14d4a:	48 8d 3d 30 98 02 00 	lea    0x29830(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   14d51:	e8 aa b2 ff ff       	callq  10000 <__assert_fail@plt>
   14d56:	48 8d 0d 53 9b 02 00 	lea    0x29b53(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14d5d:	ba 3e 05 00 00       	mov    $0x53e,%edx
   14d62:	48 8d 35 e8 95 02 00 	lea    0x295e8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14d69:	48 8d 3d b7 97 02 00 	lea    0x297b7(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   14d70:	e8 8b b2 ff ff       	callq  10000 <__assert_fail@plt>
   14d75:	48 8d 0d 34 9b 02 00 	lea    0x29b34(%rip),%rcx        # 3e8b0 <__PRETTY_FUNCTION__.5829>
   14d7c:	ba 7c 05 00 00       	mov    $0x57c,%edx
   14d81:	48 8d 35 c9 95 02 00 	lea    0x295c9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14d88:	48 8d 3d d9 9a 02 00 	lea    0x29ad9(%rip),%rdi        # 3e868 <__PRETTY_FUNCTION__.5439+0x528>
   14d8f:	e8 6c b2 ff ff       	callq  10000 <__assert_fail@plt>

0000000000014d94 <.annobin_cbuf_copier.end>:
   14d94:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   14d9b:	00 00 00 00 
   14d9f:	90                   	nop

0000000000014da0 <cbuf_put_mem>:
   14da0:	f3 0f 1e fa          	endbr64 
   14da4:	41 54                	push   %r12
   14da6:	55                   	push   %rbp
   14da7:	53                   	push   %rbx
   14da8:	48 85 ff             	test   %rdi,%rdi
   14dab:	74 35                	je     14de2 <cbuf_put_mem+0x42>
   14dad:	48 89 f3             	mov    %rsi,%rbx
   14db0:	48 85 f6             	test   %rsi,%rsi
   14db3:	0f 84 86 00 00 00    	je     14e3f <cbuf_put_mem+0x9f>
   14db9:	48 89 f8             	mov    %rdi,%rax
   14dbc:	48 8b 3e             	mov    (%rsi),%rdi
   14dbf:	48 85 ff             	test   %rdi,%rdi
   14dc2:	74 5c                	je     14e20 <cbuf_put_mem+0x80>
   14dc4:	89 d5                	mov    %edx,%ebp
   14dc6:	85 d2                	test   %edx,%edx
   14dc8:	7e 37                	jle    14e01 <cbuf_put_mem+0x61>
   14dca:	4c 63 e2             	movslq %edx,%r12
   14dcd:	48 89 c6             	mov    %rax,%rsi
   14dd0:	4c 89 e2             	mov    %r12,%rdx
   14dd3:	e8 38 b5 ff ff       	callq  10310 <memcpy@plt>
   14dd8:	4c 01 23             	add    %r12,(%rbx)
   14ddb:	89 e8                	mov    %ebp,%eax
   14ddd:	5b                   	pop    %rbx
   14dde:	5d                   	pop    %rbp
   14ddf:	41 5c                	pop    %r12
   14de1:	c3                   	retq   
   14de2:	48 8d 0d 6f 9c 02 00 	lea    0x29c6f(%rip),%rcx        # 3ea58 <__PRETTY_FUNCTION__.5815>
   14de9:	ba 29 05 00 00       	mov    $0x529,%edx
   14dee:	48 8d 35 5c 95 02 00 	lea    0x2955c(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14df5:	48 8d 3d bf 97 02 00 	lea    0x297bf(%rip),%rdi        # 3e5bb <__PRETTY_FUNCTION__.5439+0x27b>
   14dfc:	e8 ff b1 ff ff       	callq  10000 <__assert_fail@plt>
   14e01:	48 8d 0d 50 9c 02 00 	lea    0x29c50(%rip),%rcx        # 3ea58 <__PRETTY_FUNCTION__.5815>
   14e08:	ba 2c 05 00 00       	mov    $0x52c,%edx
   14e0d:	48 8d 35 3d 95 02 00 	lea    0x2953d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14e14:	48 8d 3d e1 96 02 00 	lea    0x296e1(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14e1b:	e8 e0 b1 ff ff       	callq  10000 <__assert_fail@plt>
   14e20:	48 8d 0d 31 9c 02 00 	lea    0x29c31(%rip),%rcx        # 3ea58 <__PRETTY_FUNCTION__.5815>
   14e27:	ba 2b 05 00 00       	mov    $0x52b,%edx
   14e2c:	48 8d 35 1e 95 02 00 	lea    0x2951e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14e33:	48 8d 3d 6e 97 02 00 	lea    0x2976e(%rip),%rdi        # 3e5a8 <__PRETTY_FUNCTION__.5439+0x268>
   14e3a:	e8 c1 b1 ff ff       	callq  10000 <__assert_fail@plt>
   14e3f:	48 8d 0d 12 9c 02 00 	lea    0x29c12(%rip),%rcx        # 3ea58 <__PRETTY_FUNCTION__.5815>
   14e46:	ba 2a 05 00 00       	mov    $0x52a,%edx
   14e4b:	48 8d 35 ff 94 02 00 	lea    0x294ff(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14e52:	48 8d 3d 50 97 02 00 	lea    0x29750(%rip),%rdi        # 3e5a9 <__PRETTY_FUNCTION__.5439+0x269>
   14e59:	e8 a2 b1 ff ff       	callq  10000 <__assert_fail@plt>

0000000000014e5e <.annobin_cbuf_get_mem.start>:
   14e5e:	66 90                	xchg   %ax,%ax

0000000000014e60 <cbuf_get_mem>:
   14e60:	f3 0f 1e fa          	endbr64 
   14e64:	41 54                	push   %r12
   14e66:	55                   	push   %rbp
   14e67:	53                   	push   %rbx
   14e68:	48 85 ff             	test   %rdi,%rdi
   14e6b:	74 2f                	je     14e9c <cbuf_get_mem+0x3c>
   14e6d:	48 89 f3             	mov    %rsi,%rbx
   14e70:	48 85 f6             	test   %rsi,%rsi
   14e73:	0f 84 80 00 00 00    	je     14ef9 <cbuf_get_mem+0x99>
   14e79:	48 8b 36             	mov    (%rsi),%rsi
   14e7c:	48 85 f6             	test   %rsi,%rsi
   14e7f:	74 59                	je     14eda <cbuf_get_mem+0x7a>
   14e81:	89 d5                	mov    %edx,%ebp
   14e83:	85 d2                	test   %edx,%edx
   14e85:	7e 34                	jle    14ebb <cbuf_get_mem+0x5b>
   14e87:	4c 63 e2             	movslq %edx,%r12
   14e8a:	4c 89 e2             	mov    %r12,%rdx
   14e8d:	e8 7e b4 ff ff       	callq  10310 <memcpy@plt>
   14e92:	4c 01 23             	add    %r12,(%rbx)
   14e95:	89 e8                	mov    %ebp,%eax
   14e97:	5b                   	pop    %rbx
   14e98:	5d                   	pop    %rbp
   14e99:	41 5c                	pop    %r12
   14e9b:	c3                   	retq   
   14e9c:	48 8d 0d 45 9b 02 00 	lea    0x29b45(%rip),%rcx        # 3e9e8 <__PRETTY_FUNCTION__.5800>
   14ea3:	ba 03 05 00 00       	mov    $0x503,%edx
   14ea8:	48 8d 35 a2 94 02 00 	lea    0x294a2(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14eaf:	48 8d 3d f4 96 02 00 	lea    0x296f4(%rip),%rdi        # 3e5aa <__PRETTY_FUNCTION__.5439+0x26a>
   14eb6:	e8 45 b1 ff ff       	callq  10000 <__assert_fail@plt>
   14ebb:	48 8d 0d 26 9b 02 00 	lea    0x29b26(%rip),%rcx        # 3e9e8 <__PRETTY_FUNCTION__.5800>
   14ec2:	ba 06 05 00 00       	mov    $0x506,%edx
   14ec7:	48 8d 35 83 94 02 00 	lea    0x29483(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14ece:	48 8d 3d 27 96 02 00 	lea    0x29627(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14ed5:	e8 26 b1 ff ff       	callq  10000 <__assert_fail@plt>
   14eda:	48 8d 0d 07 9b 02 00 	lea    0x29b07(%rip),%rcx        # 3e9e8 <__PRETTY_FUNCTION__.5800>
   14ee1:	ba 05 05 00 00       	mov    $0x505,%edx
   14ee6:	48 8d 35 64 94 02 00 	lea    0x29464(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14eed:	48 8d 3d c5 96 02 00 	lea    0x296c5(%rip),%rdi        # 3e5b9 <__PRETTY_FUNCTION__.5439+0x279>
   14ef4:	e8 07 b1 ff ff       	callq  10000 <__assert_fail@plt>
   14ef9:	48 8d 0d e8 9a 02 00 	lea    0x29ae8(%rip),%rcx        # 3e9e8 <__PRETTY_FUNCTION__.5800>
   14f00:	ba 04 05 00 00       	mov    $0x504,%edx
   14f05:	48 8d 35 45 94 02 00 	lea    0x29445(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14f0c:	48 8d 3d a7 96 02 00 	lea    0x296a7(%rip),%rdi        # 3e5ba <__PRETTY_FUNCTION__.5439+0x27a>
   14f13:	e8 e8 b0 ff ff       	callq  10000 <__assert_fail@plt>

0000000000014f18 <.annobin_cbuf_get_fd.start>:
   14f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14f1f:	00 

0000000000014f20 <cbuf_get_fd>:
   14f20:	f3 0f 1e fa          	endbr64 
   14f24:	41 55                	push   %r13
   14f26:	41 54                	push   %r12
   14f28:	55                   	push   %rbp
   14f29:	53                   	push   %rbx
   14f2a:	48 83 ec 08          	sub    $0x8,%rsp
   14f2e:	48 85 ff             	test   %rdi,%rdi
   14f31:	74 53                	je     14f86 <cbuf_get_fd+0x66>
   14f33:	49 89 f4             	mov    %rsi,%r12
   14f36:	48 85 f6             	test   %rsi,%rsi
   14f39:	0f 84 a4 00 00 00    	je     14fe3 <cbuf_get_fd+0xc3>
   14f3f:	48 89 fd             	mov    %rdi,%rbp
   14f42:	8b 3e                	mov    (%rsi),%edi
   14f44:	85 ff                	test   %edi,%edi
   14f46:	78 7c                	js     14fc4 <cbuf_get_fd+0xa4>
   14f48:	85 d2                	test   %edx,%edx
   14f4a:	7e 59                	jle    14fa5 <cbuf_get_fd+0x85>
   14f4c:	48 63 da             	movslq %edx,%rbx
   14f4f:	eb 15                	jmp    14f66 <cbuf_get_fd+0x46>
   14f51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14f58:	e8 b3 ab ff ff       	callq  fb10 <__errno_location@plt>
   14f5d:	83 38 04             	cmpl   $0x4,(%rax)
   14f60:	75 16                	jne    14f78 <cbuf_get_fd+0x58>
   14f62:	41 8b 3c 24          	mov    (%r12),%edi
		       "the destination buffer");

__fortify_function __wur ssize_t
read (int __fd, void *__buf, size_t __nbytes)
{
  return __glibc_fortify (read, __nbytes, sizeof (char),
   14f66:	48 89 da             	mov    %rbx,%rdx
   14f69:	48 89 ee             	mov    %rbp,%rsi
   14f6c:	e8 0f b2 ff ff       	callq  10180 <read@plt>
   14f71:	41 89 c5             	mov    %eax,%r13d
   14f74:	85 c0                	test   %eax,%eax
   14f76:	78 e0                	js     14f58 <cbuf_get_fd+0x38>
   14f78:	48 83 c4 08          	add    $0x8,%rsp
   14f7c:	44 89 e8             	mov    %r13d,%eax
   14f7f:	5b                   	pop    %rbx
   14f80:	5d                   	pop    %rbp
   14f81:	41 5c                	pop    %r12
   14f83:	41 5d                	pop    %r13
   14f85:	c3                   	retq   
   14f86:	48 8d 0d 43 99 02 00 	lea    0x29943(%rip),%rcx        # 3e8d0 <__PRETTY_FUNCTION__.5792>
   14f8d:	ba f1 04 00 00       	mov    $0x4f1,%edx
   14f92:	48 8d 35 b8 93 02 00 	lea    0x293b8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14f99:	48 8d 3d 0a 96 02 00 	lea    0x2960a(%rip),%rdi        # 3e5aa <__PRETTY_FUNCTION__.5439+0x26a>
   14fa0:	e8 5b b0 ff ff       	callq  10000 <__assert_fail@plt>
   14fa5:	48 8d 0d 24 99 02 00 	lea    0x29924(%rip),%rcx        # 3e8d0 <__PRETTY_FUNCTION__.5792>
   14fac:	ba f4 04 00 00       	mov    $0x4f4,%edx
   14fb1:	48 8d 35 99 93 02 00 	lea    0x29399(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14fb8:	48 8d 3d 3d 95 02 00 	lea    0x2953d(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   14fbf:	e8 3c b0 ff ff       	callq  10000 <__assert_fail@plt>
   14fc4:	48 8d 0d 05 99 02 00 	lea    0x29905(%rip),%rcx        # 3e8d0 <__PRETTY_FUNCTION__.5792>
   14fcb:	ba f3 04 00 00       	mov    $0x4f3,%edx
   14fd0:	48 8d 35 7a 93 02 00 	lea    0x2937a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14fd7:	48 8d 3d fb 95 02 00 	lea    0x295fb(%rip),%rdi        # 3e5d9 <__PRETTY_FUNCTION__.5439+0x299>
   14fde:	e8 1d b0 ff ff       	callq  10000 <__assert_fail@plt>
   14fe3:	48 8d 0d e6 98 02 00 	lea    0x298e6(%rip),%rcx        # 3e8d0 <__PRETTY_FUNCTION__.5792>
   14fea:	ba f2 04 00 00       	mov    $0x4f2,%edx
   14fef:	48 8d 35 5b 93 02 00 	lea    0x2935b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   14ff6:	48 8d 3d cd 95 02 00 	lea    0x295cd(%rip),%rdi        # 3e5ca <__PRETTY_FUNCTION__.5439+0x28a>
   14ffd:	e8 fe af ff ff       	callq  10000 <__assert_fail@plt>

0000000000015002 <.annobin_cbuf_get_fd.end>:
   15002:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15009:	00 00 00 00 
   1500d:	0f 1f 00             	nopl   (%rax)

0000000000015010 <cbuf_put_fd>:
   15010:	f3 0f 1e fa          	endbr64 
   15014:	41 55                	push   %r13
   15016:	41 54                	push   %r12
   15018:	55                   	push   %rbp
   15019:	53                   	push   %rbx
   1501a:	48 83 ec 08          	sub    $0x8,%rsp
   1501e:	48 85 ff             	test   %rdi,%rdi
   15021:	74 53                	je     15076 <cbuf_put_fd+0x66>
   15023:	49 89 f4             	mov    %rsi,%r12
   15026:	48 85 f6             	test   %rsi,%rsi
   15029:	0f 84 a4 00 00 00    	je     150d3 <cbuf_put_fd+0xc3>
   1502f:	48 89 fd             	mov    %rdi,%rbp
   15032:	8b 3e                	mov    (%rsi),%edi
   15034:	85 ff                	test   %edi,%edi
   15036:	78 7c                	js     150b4 <cbuf_put_fd+0xa4>
   15038:	85 d2                	test   %edx,%edx
   1503a:	7e 59                	jle    15095 <cbuf_put_fd+0x85>
   1503c:	48 63 da             	movslq %edx,%rbx
   1503f:	eb 15                	jmp    15056 <cbuf_put_fd+0x46>
   15041:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15048:	e8 c3 aa ff ff       	callq  fb10 <__errno_location@plt>
   1504d:	83 38 04             	cmpl   $0x4,(%rax)
   15050:	75 16                	jne    15068 <cbuf_put_fd+0x58>
   15052:	41 8b 3c 24          	mov    (%r12),%edi
   15056:	48 89 da             	mov    %rbx,%rdx
   15059:	48 89 ee             	mov    %rbp,%rsi
   1505c:	e8 9f ac ff ff       	callq  fd00 <write@plt>
   15061:	41 89 c5             	mov    %eax,%r13d
   15064:	85 c0                	test   %eax,%eax
   15066:	78 e0                	js     15048 <cbuf_put_fd+0x38>
   15068:	48 83 c4 08          	add    $0x8,%rsp
   1506c:	44 89 e8             	mov    %r13d,%eax
   1506f:	5b                   	pop    %rbx
   15070:	5d                   	pop    %rbp
   15071:	41 5c                	pop    %r12
   15073:	41 5d                	pop    %r13
   15075:	c3                   	retq   
   15076:	48 8d 0d b3 98 02 00 	lea    0x298b3(%rip),%rcx        # 3e930 <__PRETTY_FUNCTION__.5807>
   1507d:	ba 17 05 00 00       	mov    $0x517,%edx
   15082:	48 8d 35 c8 92 02 00 	lea    0x292c8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15089:	48 8d 3d 2b 95 02 00 	lea    0x2952b(%rip),%rdi        # 3e5bb <__PRETTY_FUNCTION__.5439+0x27b>
   15090:	e8 6b af ff ff       	callq  10000 <__assert_fail@plt>
   15095:	48 8d 0d 94 98 02 00 	lea    0x29894(%rip),%rcx        # 3e930 <__PRETTY_FUNCTION__.5807>
   1509c:	ba 1a 05 00 00       	mov    $0x51a,%edx
   150a1:	48 8d 35 a9 92 02 00 	lea    0x292a9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   150a8:	48 8d 3d 4d 94 02 00 	lea    0x2944d(%rip),%rdi        # 3e4fc <__PRETTY_FUNCTION__.5439+0x1bc>
   150af:	e8 4c af ff ff       	callq  10000 <__assert_fail@plt>
   150b4:	48 8d 0d 75 98 02 00 	lea    0x29875(%rip),%rcx        # 3e930 <__PRETTY_FUNCTION__.5807>
   150bb:	ba 19 05 00 00       	mov    $0x519,%edx
   150c0:	48 8d 35 8a 92 02 00 	lea    0x2928a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   150c7:	48 8d 3d 27 95 02 00 	lea    0x29527(%rip),%rdi        # 3e5f5 <__PRETTY_FUNCTION__.5439+0x2b5>
   150ce:	e8 2d af ff ff       	callq  10000 <__assert_fail@plt>
   150d3:	48 8d 0d 56 98 02 00 	lea    0x29856(%rip),%rcx        # 3e930 <__PRETTY_FUNCTION__.5807>
   150da:	ba 18 05 00 00       	mov    $0x518,%edx
   150df:	48 8d 35 6b 92 02 00 	lea    0x2926b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   150e6:	48 8d 3d f9 94 02 00 	lea    0x294f9(%rip),%rdi        # 3e5e6 <__PRETTY_FUNCTION__.5439+0x2a6>
   150ed:	e8 0e af ff ff       	callq  10000 <__assert_fail@plt>

00000000000150f2 <.annobin_cbuf_create.start>:
   150f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   150f9:	00 00 00 00 
   150fd:	0f 1f 00             	nopl   (%rax)

0000000000015100 <cbuf_create>:
   15100:	f3 0f 1e fa          	endbr64 
   15104:	41 56                	push   %r14
   15106:	41 55                	push   %r13
   15108:	41 54                	push   %r12
   1510a:	55                   	push   %rbp
   1510b:	53                   	push   %rbx
   1510c:	85 ff                	test   %edi,%edi
   1510e:	0f 8e ec 00 00 00    	jle    15200 <cbuf_create+0x100>
   15114:	89 fd                	mov    %edi,%ebp
   15116:	bf 60 00 00 00       	mov    $0x60,%edi
   1511b:	41 89 f4             	mov    %esi,%r12d
   1511e:	e8 fd b2 ff ff       	callq  10420 <malloc@plt>
   15123:	48 89 c3             	mov    %rax,%rbx
   15126:	48 85 c0             	test   %rax,%rax
   15129:	0f 84 f1 00 00 00    	je     15220 <cbuf_create+0x120>
   1512f:	8d 7d 11             	lea    0x11(%rbp),%edi
   15132:	89 78 30             	mov    %edi,0x30(%rax)
   15135:	48 63 ff             	movslq %edi,%rdi
   15138:	e8 e3 b2 ff ff       	callq  10420 <malloc@plt>
   1513d:	48 89 43 58          	mov    %rax,0x58(%rbx)
   15141:	48 85 c0             	test   %rax,%rax
   15144:	0f 84 f6 00 00 00    	je     15240 <cbuf_create+0x140>
   1514a:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
   1514e:	31 f6                	xor    %esi,%esi
   15150:	4c 89 ef             	mov    %r13,%rdi
   15153:	e8 e8 b8 ff ff       	callq  10a40 <pthread_mutex_init@plt>
   15158:	41 89 c6             	mov    %eax,%r14d
   1515b:	85 c0                	test   %eax,%eax
   1515d:	0f 85 f4 00 00 00    	jne    15257 <cbuf_create+0x157>
   15163:	44 39 e5             	cmp    %r12d,%ebp
   15166:	b9 ef be ad de       	mov    $0xdeadbeef,%ecx
   1516b:	89 6b 3c             	mov    %ebp,0x3c(%rbx)
   1516e:	4c 89 ef             	mov    %r13,%rdi
   15171:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   15178:	00 00 00 
   1517b:	44 0f 4d e5          	cmovge %ebp,%r12d
   1517f:	89 6b 34             	mov    %ebp,0x34(%rbx)
   15182:	48 89 43 40          	mov    %rax,0x40(%rbx)
   15186:	48 8b 43 58          	mov    0x58(%rbx),%rax
   1518a:	48 89 0b             	mov    %rcx,(%rbx)
   1518d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15191:	44 89 63 38          	mov    %r12d,0x38(%rbx)
   15195:	48 89 53 58          	mov    %rdx,0x58(%rbx)
   15199:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   151a0:	00 
   151a1:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   151a8:	00 
   151a9:	48 89 08             	mov    %rcx,(%rax)
   151ac:	48 8b 0b             	mov    (%rbx),%rcx
   151af:	48 63 43 3c          	movslq 0x3c(%rbx),%rax
   151b3:	48 8b 53 58          	mov    0x58(%rbx),%rdx
   151b7:	48 89 4c 02 01       	mov    %rcx,0x1(%rdx,%rax,1)
   151bc:	e8 0f b9 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   151c1:	89 c5                	mov    %eax,%ebp
   151c3:	85 c0                	test   %eax,%eax
   151c5:	0f 85 f3 00 00 00    	jne    152be <cbuf_create+0x1be>
   151cb:	48 89 df             	mov    %rbx,%rdi
   151ce:	e8 ad e7 ff ff       	callq  13980 <cbuf_is_valid>
   151d3:	85 c0                	test   %eax,%eax
   151d5:	0f 84 c4 00 00 00    	je     1529f <cbuf_create+0x19f>
   151db:	4c 89 ef             	mov    %r13,%rdi
   151de:	e8 0d b2 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   151e3:	89 c5                	mov    %eax,%ebp
   151e5:	85 c0                	test   %eax,%eax
   151e7:	0f 85 f0 00 00 00    	jne    152dd <cbuf_create+0x1dd>
   151ed:	48 89 d8             	mov    %rbx,%rax
   151f0:	5b                   	pop    %rbx
   151f1:	5d                   	pop    %rbp
   151f2:	41 5c                	pop    %r12
   151f4:	41 5d                	pop    %r13
   151f6:	41 5e                	pop    %r14
   151f8:	c3                   	retq   
   151f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15200:	e8 0b a9 ff ff       	callq  fb10 <__errno_location@plt>
   15205:	31 db                	xor    %ebx,%ebx
   15207:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1520d:	48 89 d8             	mov    %rbx,%rax
   15210:	5b                   	pop    %rbx
   15211:	5d                   	pop    %rbp
   15212:	41 5c                	pop    %r12
   15214:	41 5d                	pop    %r13
   15216:	41 5e                	pop    %r14
   15218:	c3                   	retq   
   15219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15220:	e8 eb a8 ff ff       	callq  fb10 <__errno_location@plt>
   15225:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1522b:	48 89 d8             	mov    %rbx,%rax
   1522e:	5b                   	pop    %rbx
   1522f:	5d                   	pop    %rbp
   15230:	41 5c                	pop    %r12
   15232:	41 5d                	pop    %r13
   15234:	41 5e                	pop    %r14
   15236:	c3                   	retq   
   15237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1523e:	00 00 
   15240:	48 89 df             	mov    %rbx,%rdi
   15243:	31 db                	xor    %ebx,%ebx
   15245:	e8 66 a8 ff ff       	callq  fab0 <free@plt>
   1524a:	e8 c1 a8 ff ff       	callq  fb10 <__errno_location@plt>
   1524f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   15255:	eb 96                	jmp    151ed <cbuf_create+0xed>
   15257:	e8 b4 a8 ff ff       	callq  fb10 <__errno_location@plt>
   1525c:	44 89 f7             	mov    %r14d,%edi
   1525f:	44 89 30             	mov    %r14d,(%rax)
   15262:	e8 69 b7 ff ff       	callq  109d0 <strerror@plt>

# ifdef __va_arg_pack
__fortify_function int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   15267:	4c 8d 0d 94 93 02 00 	lea    0x29394(%rip),%r9        # 3e602 <__PRETTY_FUNCTION__.5439+0x2c2>
   1526e:	41 b8 ee 00 00 00    	mov    $0xee,%r8d
   15274:	56                   	push   %rsi
   15275:	50                   	push   %rax
   15276:	48 8b 05 6b dd 23 00 	mov    0x23dd6b(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1527d:	48 8d 0d cd 90 02 00 	lea    0x290cd(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15284:	be 01 00 00 00       	mov    $0x1,%esi
   15289:	48 8d 15 82 93 02 00 	lea    0x29382(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15290:	48 8b 38             	mov    (%rax),%rdi
   15293:	31 c0                	xor    %eax,%eax
   15295:	e8 c6 b6 ff ff       	callq  10960 <__fprintf_chk@plt>
   1529a:	e8 51 a8 ff ff       	callq  faf0 <abort@plt>
   1529f:	48 8d 0d 1a 99 02 00 	lea    0x2991a(%rip),%rcx        # 3ebc0 <__PRETTY_FUNCTION__.5484>
   152a6:	ba 07 01 00 00       	mov    $0x107,%edx
   152ab:	48 8d 35 9f 90 02 00 	lea    0x2909f(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   152b2:	48 8d 3d 5b 92 02 00 	lea    0x2925b(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   152b9:	e8 42 ad ff ff       	callq  10000 <__assert_fail@plt>
   152be:	e8 4d a8 ff ff       	callq  fb10 <__errno_location@plt>
   152c3:	89 ef                	mov    %ebp,%edi
   152c5:	89 28                	mov    %ebp,(%rax)
   152c7:	e8 04 b7 ff ff       	callq  109d0 <strerror@plt>
   152cc:	4c 8d 0d 56 93 02 00 	lea    0x29356(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   152d3:	41 b8 06 01 00 00    	mov    $0x106,%r8d
   152d9:	51                   	push   %rcx
   152da:	50                   	push   %rax
   152db:	eb 99                	jmp    15276 <cbuf_create+0x176>
   152dd:	e8 2e a8 ff ff       	callq  fb10 <__errno_location@plt>
   152e2:	89 ef                	mov    %ebp,%edi
   152e4:	89 28                	mov    %ebp,(%rax)
   152e6:	e8 e5 b6 ff ff       	callq  109d0 <strerror@plt>
   152eb:	4c 8d 0d 47 93 02 00 	lea    0x29347(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   152f2:	41 b8 08 01 00 00    	mov    $0x108,%r8d
   152f8:	52                   	push   %rdx
   152f9:	50                   	push   %rax
   152fa:	e9 77 ff ff ff       	jmpq   15276 <cbuf_create+0x176>

00000000000152ff <.annobin_cbuf_create.end>:
   152ff:	90                   	nop

0000000000015300 <cbuf_destroy>:
   15300:	f3 0f 1e fa          	endbr64 
   15304:	41 54                	push   %r12
   15306:	55                   	push   %rbp
   15307:	53                   	push   %rbx
   15308:	48 85 ff             	test   %rdi,%rdi
   1530b:	0f 84 87 00 00 00    	je     15398 <cbuf_destroy+0x98>
   15311:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   15315:	48 89 fb             	mov    %rdi,%rbx
   15318:	48 89 ef             	mov    %rbp,%rdi
   1531b:	e8 b0 b7 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15320:	41 89 c4             	mov    %eax,%r12d
   15323:	85 c0                	test   %eax,%eax
   15325:	0f 85 12 01 00 00    	jne    1543d <cbuf_destroy+0x13d>
   1532b:	48 89 df             	mov    %rbx,%rdi
   1532e:	e8 4d e6 ff ff       	callq  13980 <cbuf_is_valid>
   15333:	85 c0                	test   %eax,%eax
   15335:	0f 84 e3 00 00 00    	je     1541e <cbuf_destroy+0x11e>
   1533b:	48 8b 43 58          	mov    0x58(%rbx),%rax
   1533f:	48 c7 03 10 41 52 21 	movq   $0x21524110,(%rbx)
   15346:	48 c7 40 f8 10 41 52 	movq   $0x21524110,-0x8(%rax)
   1534d:	21 
   1534e:	48 8b 53 58          	mov    0x58(%rbx),%rdx
   15352:	48 8b 0b             	mov    (%rbx),%rcx
   15355:	48 63 43 3c          	movslq 0x3c(%rbx),%rax
   15359:	48 89 4c 02 01       	mov    %rcx,0x1(%rdx,%rax,1)
   1535e:	48 8b 43 58          	mov    0x58(%rbx),%rax
   15362:	48 8d 78 f8          	lea    -0x8(%rax),%rdi
   15366:	48 89 7b 58          	mov    %rdi,0x58(%rbx)
   1536a:	e8 41 a7 ff ff       	callq  fab0 <free@plt>
   1536f:	48 89 ef             	mov    %rbp,%rdi
   15372:	e8 79 b0 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15377:	41 89 c4             	mov    %eax,%r12d
   1537a:	85 c0                	test   %eax,%eax
   1537c:	75 7f                	jne    153fd <cbuf_destroy+0xfd>
   1537e:	48 89 ef             	mov    %rbp,%rdi
   15381:	e8 5a ab ff ff       	callq  fee0 <pthread_mutex_destroy@plt>
   15386:	89 c5                	mov    %eax,%ebp
   15388:	85 c0                	test   %eax,%eax
   1538a:	75 2b                	jne    153b7 <cbuf_destroy+0xb7>
   1538c:	48 89 df             	mov    %rbx,%rdi
   1538f:	5b                   	pop    %rbx
   15390:	5d                   	pop    %rbp
   15391:	41 5c                	pop    %r12
   15393:	e9 18 a7 ff ff       	jmpq   fab0 <free@plt>
   15398:	48 8d 0d 01 98 02 00 	lea    0x29801(%rip),%rcx        # 3eba0 <__PRETTY_FUNCTION__.5489>
   1539f:	ba 12 01 00 00       	mov    $0x112,%edx
   153a4:	48 8d 35 a6 8f 02 00 	lea    0x28fa6(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   153ab:	48 8d 3d a6 8f 02 00 	lea    0x28fa6(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   153b2:	e8 49 ac ff ff       	callq  10000 <__assert_fail@plt>
   153b7:	e8 54 a7 ff ff       	callq  fb10 <__errno_location@plt>
   153bc:	89 ef                	mov    %ebp,%edi
   153be:	89 28                	mov    %ebp,(%rax)
   153c0:	e8 0b b6 ff ff       	callq  109d0 <strerror@plt>
   153c5:	4c 8d 0d 7f 92 02 00 	lea    0x2927f(%rip),%r9        # 3e64b <__PRETTY_FUNCTION__.5439+0x30b>
   153cc:	41 b8 22 01 00 00    	mov    $0x122,%r8d
   153d2:	52                   	push   %rdx
   153d3:	50                   	push   %rax
   153d4:	48 8b 05 0d dc 23 00 	mov    0x23dc0d(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   153db:	48 8d 0d 6f 8f 02 00 	lea    0x28f6f(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   153e2:	be 01 00 00 00       	mov    $0x1,%esi
   153e7:	48 8d 15 24 92 02 00 	lea    0x29224(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   153ee:	48 8b 38             	mov    (%rax),%rdi
   153f1:	31 c0                	xor    %eax,%eax
   153f3:	e8 68 b5 ff ff       	callq  10960 <__fprintf_chk@plt>
   153f8:	e8 f3 a6 ff ff       	callq  faf0 <abort@plt>
   153fd:	e8 0e a7 ff ff       	callq  fb10 <__errno_location@plt>
   15402:	44 89 e7             	mov    %r12d,%edi
   15405:	44 89 20             	mov    %r12d,(%rax)
   15408:	e8 c3 b5 ff ff       	callq  109d0 <strerror@plt>
   1540d:	4c 8d 0d 25 92 02 00 	lea    0x29225(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15414:	41 b8 21 01 00 00    	mov    $0x121,%r8d
   1541a:	51                   	push   %rcx
   1541b:	50                   	push   %rax
   1541c:	eb b6                	jmp    153d4 <cbuf_destroy+0xd4>
   1541e:	48 8d 0d 7b 97 02 00 	lea    0x2977b(%rip),%rcx        # 3eba0 <__PRETTY_FUNCTION__.5489>
   15425:	ba 14 01 00 00       	mov    $0x114,%edx
   1542a:	48 8d 35 20 8f 02 00 	lea    0x28f20(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15431:	48 8d 3d dc 90 02 00 	lea    0x290dc(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15438:	e8 c3 ab ff ff       	callq  10000 <__assert_fail@plt>
   1543d:	e8 ce a6 ff ff       	callq  fb10 <__errno_location@plt>
   15442:	44 89 e7             	mov    %r12d,%edi
   15445:	44 89 20             	mov    %r12d,(%rax)
   15448:	e8 83 b5 ff ff       	callq  109d0 <strerror@plt>
   1544d:	4c 8d 0d d5 91 02 00 	lea    0x291d5(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15454:	41 b8 13 01 00 00    	mov    $0x113,%r8d
   1545a:	56                   	push   %rsi
   1545b:	50                   	push   %rax
   1545c:	e9 73 ff ff ff       	jmpq   153d4 <cbuf_destroy+0xd4>

0000000000015461 <.annobin_cbuf_destroy.end>:
   15461:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15468:	00 00 00 00 
   1546c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015470 <cbuf_flush>:
   15470:	f3 0f 1e fa          	endbr64 
   15474:	41 54                	push   %r12
   15476:	55                   	push   %rbp
   15477:	53                   	push   %rbx
   15478:	48 85 ff             	test   %rdi,%rdi
   1547b:	74 60                	je     154dd <cbuf_flush+0x6d>
   1547d:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   15481:	48 89 fb             	mov    %rdi,%rbx
   15484:	48 89 ef             	mov    %rbp,%rdi
   15487:	e8 44 b6 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1548c:	41 89 c4             	mov    %eax,%r12d
   1548f:	85 c0                	test   %eax,%eax
   15491:	0f 85 e9 00 00 00    	jne    15580 <cbuf_flush+0x110>
   15497:	48 89 df             	mov    %rbx,%rdi
   1549a:	e8 e1 e4 ff ff       	callq  13980 <cbuf_is_valid>
   1549f:	85 c0                	test   %eax,%eax
   154a1:	0f 84 ba 00 00 00    	je     15561 <cbuf_flush+0xf1>
   154a7:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)
   154ae:	48 89 df             	mov    %rbx,%rdi
   154b1:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   154b8:	00 
   154b9:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   154c0:	00 
   154c1:	e8 ba e4 ff ff       	callq  13980 <cbuf_is_valid>
   154c6:	85 c0                	test   %eax,%eax
   154c8:	74 78                	je     15542 <cbuf_flush+0xd2>
   154ca:	48 89 ef             	mov    %rbp,%rdi
   154cd:	e8 1e af ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   154d2:	89 c3                	mov    %eax,%ebx
   154d4:	85 c0                	test   %eax,%eax
   154d6:	75 24                	jne    154fc <cbuf_flush+0x8c>
   154d8:	5b                   	pop    %rbx
   154d9:	5d                   	pop    %rbp
   154da:	41 5c                	pop    %r12
   154dc:	c3                   	retq   
   154dd:	48 8d 0d ac 96 02 00 	lea    0x296ac(%rip),%rcx        # 3eb90 <__PRETTY_FUNCTION__.5496>
   154e4:	ba 2b 01 00 00       	mov    $0x12b,%edx
   154e9:	48 8d 35 61 8e 02 00 	lea    0x28e61(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   154f0:	48 8d 3d 61 8e 02 00 	lea    0x28e61(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   154f7:	e8 04 ab ff ff       	callq  10000 <__assert_fail@plt>
   154fc:	e8 0f a6 ff ff       	callq  fb10 <__errno_location@plt>
   15501:	89 df                	mov    %ebx,%edi
   15503:	89 18                	mov    %ebx,(%rax)
   15505:	e8 c6 b4 ff ff       	callq  109d0 <strerror@plt>
   1550a:	4c 8d 0d 28 91 02 00 	lea    0x29128(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15511:	41 b8 35 01 00 00    	mov    $0x135,%r8d
   15517:	52                   	push   %rdx
   15518:	50                   	push   %rax
   15519:	48 8b 05 c8 da 23 00 	mov    0x23dac8(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15520:	48 8d 0d 2a 8e 02 00 	lea    0x28e2a(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15527:	be 01 00 00 00       	mov    $0x1,%esi
   1552c:	48 8d 15 df 90 02 00 	lea    0x290df(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15533:	48 8b 38             	mov    (%rax),%rdi
   15536:	31 c0                	xor    %eax,%eax
   15538:	e8 23 b4 ff ff       	callq  10960 <__fprintf_chk@plt>
   1553d:	e8 ae a5 ff ff       	callq  faf0 <abort@plt>
   15542:	48 8d 0d 47 96 02 00 	lea    0x29647(%rip),%rcx        # 3eb90 <__PRETTY_FUNCTION__.5496>
   15549:	ba 34 01 00 00       	mov    $0x134,%edx
   1554e:	48 8d 35 fc 8d 02 00 	lea    0x28dfc(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15555:	48 8d 3d b8 8f 02 00 	lea    0x28fb8(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   1555c:	e8 9f aa ff ff       	callq  10000 <__assert_fail@plt>
   15561:	48 8d 0d 28 96 02 00 	lea    0x29628(%rip),%rcx        # 3eb90 <__PRETTY_FUNCTION__.5496>
   15568:	ba 2d 01 00 00       	mov    $0x12d,%edx
   1556d:	48 8d 35 dd 8d 02 00 	lea    0x28ddd(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15574:	48 8d 3d 99 8f 02 00 	lea    0x28f99(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   1557b:	e8 80 aa ff ff       	callq  10000 <__assert_fail@plt>
   15580:	e8 8b a5 ff ff       	callq  fb10 <__errno_location@plt>
   15585:	44 89 e7             	mov    %r12d,%edi
   15588:	44 89 20             	mov    %r12d,(%rax)
   1558b:	e8 40 b4 ff ff       	callq  109d0 <strerror@plt>
   15590:	4c 8d 0d 92 90 02 00 	lea    0x29092(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15597:	41 b8 2c 01 00 00    	mov    $0x12c,%r8d
   1559d:	51                   	push   %rcx
   1559e:	50                   	push   %rax
   1559f:	e9 75 ff ff ff       	jmpq   15519 <cbuf_flush+0xa9>

00000000000155a4 <.annobin_cbuf_flush.end>:
   155a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   155ab:	00 00 00 00 
   155af:	90                   	nop

00000000000155b0 <cbuf_size>:
   155b0:	f3 0f 1e fa          	endbr64 
   155b4:	41 54                	push   %r12
   155b6:	55                   	push   %rbp
   155b7:	53                   	push   %rbx
   155b8:	48 85 ff             	test   %rdi,%rdi
   155bb:	74 40                	je     155fd <cbuf_size+0x4d>
   155bd:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   155c1:	48 89 fb             	mov    %rdi,%rbx
   155c4:	48 89 ef             	mov    %rbp,%rdi
   155c7:	e8 04 b5 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   155cc:	41 89 c4             	mov    %eax,%r12d
   155cf:	85 c0                	test   %eax,%eax
   155d1:	0f 85 aa 00 00 00    	jne    15681 <cbuf_size+0xd1>
   155d7:	48 89 df             	mov    %rbx,%rdi
   155da:	e8 a1 e3 ff ff       	callq  13980 <cbuf_is_valid>
   155df:	85 c0                	test   %eax,%eax
   155e1:	74 7f                	je     15662 <cbuf_size+0xb2>
   155e3:	48 89 ef             	mov    %rbp,%rdi
   155e6:	44 8b 63 38          	mov    0x38(%rbx),%r12d
   155ea:	e8 01 ae ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   155ef:	89 c3                	mov    %eax,%ebx
   155f1:	85 c0                	test   %eax,%eax
   155f3:	75 27                	jne    1561c <cbuf_size+0x6c>
   155f5:	44 89 e0             	mov    %r12d,%eax
   155f8:	5b                   	pop    %rbx
   155f9:	5d                   	pop    %rbp
   155fa:	41 5c                	pop    %r12
   155fc:	c3                   	retq   
   155fd:	48 8d 0d 7c 95 02 00 	lea    0x2957c(%rip),%rcx        # 3eb80 <__PRETTY_FUNCTION__.5503>
   15604:	ba 3f 01 00 00       	mov    $0x13f,%edx
   15609:	48 8d 35 41 8d 02 00 	lea    0x28d41(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15610:	48 8d 3d 41 8d 02 00 	lea    0x28d41(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15617:	e8 e4 a9 ff ff       	callq  10000 <__assert_fail@plt>
   1561c:	e8 ef a4 ff ff       	callq  fb10 <__errno_location@plt>
   15621:	89 df                	mov    %ebx,%edi
   15623:	89 18                	mov    %ebx,(%rax)
   15625:	e8 a6 b3 ff ff       	callq  109d0 <strerror@plt>
   1562a:	4c 8d 0d 08 90 02 00 	lea    0x29008(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15631:	41 b8 43 01 00 00    	mov    $0x143,%r8d
   15637:	52                   	push   %rdx
   15638:	50                   	push   %rax
   15639:	48 8b 05 a8 d9 23 00 	mov    0x23d9a8(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15640:	48 8d 0d 0a 8d 02 00 	lea    0x28d0a(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15647:	be 01 00 00 00       	mov    $0x1,%esi
   1564c:	48 8d 15 bf 8f 02 00 	lea    0x28fbf(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15653:	48 8b 38             	mov    (%rax),%rdi
   15656:	31 c0                	xor    %eax,%eax
   15658:	e8 03 b3 ff ff       	callq  10960 <__fprintf_chk@plt>
   1565d:	e8 8e a4 ff ff       	callq  faf0 <abort@plt>
   15662:	48 8d 0d 17 95 02 00 	lea    0x29517(%rip),%rcx        # 3eb80 <__PRETTY_FUNCTION__.5503>
   15669:	ba 41 01 00 00       	mov    $0x141,%edx
   1566e:	48 8d 35 dc 8c 02 00 	lea    0x28cdc(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15675:	48 8d 3d 98 8e 02 00 	lea    0x28e98(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   1567c:	e8 7f a9 ff ff       	callq  10000 <__assert_fail@plt>
   15681:	e8 8a a4 ff ff       	callq  fb10 <__errno_location@plt>
   15686:	44 89 e7             	mov    %r12d,%edi
   15689:	44 89 20             	mov    %r12d,(%rax)
   1568c:	e8 3f b3 ff ff       	callq  109d0 <strerror@plt>
   15691:	4c 8d 0d 91 8f 02 00 	lea    0x28f91(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15698:	41 b8 40 01 00 00    	mov    $0x140,%r8d
   1569e:	51                   	push   %rcx
   1569f:	50                   	push   %rax
   156a0:	eb 97                	jmp    15639 <cbuf_size+0x89>

00000000000156a2 <.annobin_cbuf_free.start>:
   156a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   156a9:	00 00 00 00 
   156ad:	0f 1f 00             	nopl   (%rax)

00000000000156b0 <cbuf_free>:
   156b0:	f3 0f 1e fa          	endbr64 
   156b4:	41 54                	push   %r12
   156b6:	55                   	push   %rbp
   156b7:	53                   	push   %rbx
   156b8:	48 85 ff             	test   %rdi,%rdi
   156bb:	74 47                	je     15704 <cbuf_free+0x54>
   156bd:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   156c1:	48 89 fb             	mov    %rdi,%rbx
   156c4:	48 89 ef             	mov    %rbp,%rdi
   156c7:	e8 04 b4 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   156cc:	41 89 c4             	mov    %eax,%r12d
   156cf:	85 c0                	test   %eax,%eax
   156d1:	0f 85 b1 00 00 00    	jne    15788 <cbuf_free+0xd8>
   156d7:	48 89 df             	mov    %rbx,%rdi
   156da:	e8 a1 e2 ff ff       	callq  13980 <cbuf_is_valid>
   156df:	85 c0                	test   %eax,%eax
   156e1:	0f 84 82 00 00 00    	je     15769 <cbuf_free+0xb9>
   156e7:	8b 43 38             	mov    0x38(%rbx),%eax
   156ea:	48 89 ef             	mov    %rbp,%rdi
   156ed:	2b 43 40             	sub    0x40(%rbx),%eax
   156f0:	89 c3                	mov    %eax,%ebx
   156f2:	e8 f9 ac ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   156f7:	89 c5                	mov    %eax,%ebp
   156f9:	85 c0                	test   %eax,%eax
   156fb:	75 26                	jne    15723 <cbuf_free+0x73>
   156fd:	89 d8                	mov    %ebx,%eax
   156ff:	5b                   	pop    %rbx
   15700:	5d                   	pop    %rbp
   15701:	41 5c                	pop    %r12
   15703:	c3                   	retq   
   15704:	48 8d 0d 65 94 02 00 	lea    0x29465(%rip),%rcx        # 3eb70 <__PRETTY_FUNCTION__.5510>
   1570b:	ba 4d 01 00 00       	mov    $0x14d,%edx
   15710:	48 8d 35 3a 8c 02 00 	lea    0x28c3a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15717:	48 8d 3d 3a 8c 02 00 	lea    0x28c3a(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   1571e:	e8 dd a8 ff ff       	callq  10000 <__assert_fail@plt>
   15723:	e8 e8 a3 ff ff       	callq  fb10 <__errno_location@plt>
   15728:	89 ef                	mov    %ebp,%edi
   1572a:	89 28                	mov    %ebp,(%rax)
   1572c:	e8 9f b2 ff ff       	callq  109d0 <strerror@plt>
   15731:	4c 8d 0d 01 8f 02 00 	lea    0x28f01(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15738:	41 b8 51 01 00 00    	mov    $0x151,%r8d
   1573e:	52                   	push   %rdx
   1573f:	50                   	push   %rax
   15740:	48 8b 05 a1 d8 23 00 	mov    0x23d8a1(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15747:	48 8d 0d 03 8c 02 00 	lea    0x28c03(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1574e:	be 01 00 00 00       	mov    $0x1,%esi
   15753:	48 8d 15 b8 8e 02 00 	lea    0x28eb8(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   1575a:	48 8b 38             	mov    (%rax),%rdi
   1575d:	31 c0                	xor    %eax,%eax
   1575f:	e8 fc b1 ff ff       	callq  10960 <__fprintf_chk@plt>
   15764:	e8 87 a3 ff ff       	callq  faf0 <abort@plt>
   15769:	48 8d 0d 00 94 02 00 	lea    0x29400(%rip),%rcx        # 3eb70 <__PRETTY_FUNCTION__.5510>
   15770:	ba 4f 01 00 00       	mov    $0x14f,%edx
   15775:	48 8d 35 d5 8b 02 00 	lea    0x28bd5(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1577c:	48 8d 3d 91 8d 02 00 	lea    0x28d91(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15783:	e8 78 a8 ff ff       	callq  10000 <__assert_fail@plt>
   15788:	e8 83 a3 ff ff       	callq  fb10 <__errno_location@plt>
   1578d:	44 89 e7             	mov    %r12d,%edi
   15790:	44 89 20             	mov    %r12d,(%rax)
   15793:	e8 38 b2 ff ff       	callq  109d0 <strerror@plt>
   15798:	4c 8d 0d 8a 8e 02 00 	lea    0x28e8a(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1579f:	41 b8 4e 01 00 00    	mov    $0x14e,%r8d
   157a5:	51                   	push   %rcx
   157a6:	50                   	push   %rax
   157a7:	eb 97                	jmp    15740 <cbuf_free+0x90>

00000000000157a9 <.annobin_cbuf_free.end>:
   157a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000157b0 <cbuf_used>:
   157b0:	f3 0f 1e fa          	endbr64 
   157b4:	41 54                	push   %r12
   157b6:	55                   	push   %rbp
   157b7:	53                   	push   %rbx
   157b8:	48 85 ff             	test   %rdi,%rdi
   157bb:	74 40                	je     157fd <cbuf_used+0x4d>
   157bd:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   157c1:	48 89 fb             	mov    %rdi,%rbx
   157c4:	48 89 ef             	mov    %rbp,%rdi
   157c7:	e8 04 b3 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   157cc:	41 89 c4             	mov    %eax,%r12d
   157cf:	85 c0                	test   %eax,%eax
   157d1:	0f 85 aa 00 00 00    	jne    15881 <cbuf_used+0xd1>
   157d7:	48 89 df             	mov    %rbx,%rdi
   157da:	e8 a1 e1 ff ff       	callq  13980 <cbuf_is_valid>
   157df:	85 c0                	test   %eax,%eax
   157e1:	74 7f                	je     15862 <cbuf_used+0xb2>
   157e3:	48 89 ef             	mov    %rbp,%rdi
   157e6:	44 8b 63 40          	mov    0x40(%rbx),%r12d
   157ea:	e8 01 ac ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   157ef:	89 c3                	mov    %eax,%ebx
   157f1:	85 c0                	test   %eax,%eax
   157f3:	75 27                	jne    1581c <cbuf_used+0x6c>
   157f5:	44 89 e0             	mov    %r12d,%eax
   157f8:	5b                   	pop    %rbx
   157f9:	5d                   	pop    %rbp
   157fa:	41 5c                	pop    %r12
   157fc:	c3                   	retq   
   157fd:	48 8d 0d 5c 93 02 00 	lea    0x2935c(%rip),%rcx        # 3eb60 <__PRETTY_FUNCTION__.5517>
   15804:	ba 5b 01 00 00       	mov    $0x15b,%edx
   15809:	48 8d 35 41 8b 02 00 	lea    0x28b41(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15810:	48 8d 3d 41 8b 02 00 	lea    0x28b41(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15817:	e8 e4 a7 ff ff       	callq  10000 <__assert_fail@plt>
   1581c:	e8 ef a2 ff ff       	callq  fb10 <__errno_location@plt>
   15821:	89 df                	mov    %ebx,%edi
   15823:	89 18                	mov    %ebx,(%rax)
   15825:	e8 a6 b1 ff ff       	callq  109d0 <strerror@plt>
   1582a:	4c 8d 0d 08 8e 02 00 	lea    0x28e08(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15831:	41 b8 5f 01 00 00    	mov    $0x15f,%r8d
   15837:	52                   	push   %rdx
   15838:	50                   	push   %rax
   15839:	48 8b 05 a8 d7 23 00 	mov    0x23d7a8(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15840:	48 8d 0d 0a 8b 02 00 	lea    0x28b0a(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15847:	be 01 00 00 00       	mov    $0x1,%esi
   1584c:	48 8d 15 bf 8d 02 00 	lea    0x28dbf(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15853:	48 8b 38             	mov    (%rax),%rdi
   15856:	31 c0                	xor    %eax,%eax
   15858:	e8 03 b1 ff ff       	callq  10960 <__fprintf_chk@plt>
   1585d:	e8 8e a2 ff ff       	callq  faf0 <abort@plt>
   15862:	48 8d 0d f7 92 02 00 	lea    0x292f7(%rip),%rcx        # 3eb60 <__PRETTY_FUNCTION__.5517>
   15869:	ba 5d 01 00 00       	mov    $0x15d,%edx
   1586e:	48 8d 35 dc 8a 02 00 	lea    0x28adc(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15875:	48 8d 3d 98 8c 02 00 	lea    0x28c98(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   1587c:	e8 7f a7 ff ff       	callq  10000 <__assert_fail@plt>
   15881:	e8 8a a2 ff ff       	callq  fb10 <__errno_location@plt>
   15886:	44 89 e7             	mov    %r12d,%edi
   15889:	44 89 20             	mov    %r12d,(%rax)
   1588c:	e8 3f b1 ff ff       	callq  109d0 <strerror@plt>
   15891:	4c 8d 0d 91 8d 02 00 	lea    0x28d91(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15898:	41 b8 5c 01 00 00    	mov    $0x15c,%r8d
   1589e:	51                   	push   %rcx
   1589f:	50                   	push   %rax
   158a0:	eb 97                	jmp    15839 <cbuf_used+0x89>

00000000000158a2 <.annobin_cbuf_lines_used.start>:
   158a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   158a9:	00 00 00 00 
   158ad:	0f 1f 00             	nopl   (%rax)

00000000000158b0 <cbuf_lines_used>:
   158b0:	f3 0f 1e fa          	endbr64 
   158b4:	41 54                	push   %r12
   158b6:	55                   	push   %rbp
   158b7:	53                   	push   %rbx
   158b8:	48 83 ec 10          	sub    $0x10,%rsp
   158bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   158c3:	00 00 
   158c5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   158ca:	31 c0                	xor    %eax,%eax
   158cc:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
   158d3:	ff 
   158d4:	48 85 ff             	test   %rdi,%rdi
   158d7:	74 65                	je     1593e <cbuf_lines_used+0x8e>
   158d9:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   158dd:	48 89 fb             	mov    %rdi,%rbx
   158e0:	48 89 ef             	mov    %rbp,%rdi
   158e3:	e8 e8 b1 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   158e8:	41 89 c4             	mov    %eax,%r12d
   158eb:	85 c0                	test   %eax,%eax
   158ed:	0f 85 d4 00 00 00    	jne    159c7 <cbuf_lines_used+0x117>
   158f3:	48 89 df             	mov    %rbx,%rdi
   158f6:	e8 85 e0 ff ff       	callq  13980 <cbuf_is_valid>
   158fb:	85 c0                	test   %eax,%eax
   158fd:	0f 84 a5 00 00 00    	je     159a8 <cbuf_lines_used+0xf8>
   15903:	8b 73 3c             	mov    0x3c(%rbx),%esi
   15906:	48 89 df             	mov    %rbx,%rdi
   15909:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   1590e:	e8 ed e4 ff ff       	callq  13e00 <cbuf_find_unread_line>
   15913:	48 89 ef             	mov    %rbp,%rdi
   15916:	e8 d5 aa ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   1591b:	89 c3                	mov    %eax,%ebx
   1591d:	85 c0                	test   %eax,%eax
   1591f:	75 41                	jne    15962 <cbuf_lines_used+0xb2>
   15921:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15926:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1592d:	00 00 
   1592f:	8b 44 24 04          	mov    0x4(%rsp),%eax
   15933:	75 28                	jne    1595d <cbuf_lines_used+0xad>
   15935:	48 83 c4 10          	add    $0x10,%rsp
   15939:	5b                   	pop    %rbx
   1593a:	5d                   	pop    %rbp
   1593b:	41 5c                	pop    %r12
   1593d:	c3                   	retq   
   1593e:	48 8d 0d 0b 92 02 00 	lea    0x2920b(%rip),%rcx        # 3eb50 <__PRETTY_FUNCTION__.5524>
   15945:	ba 69 01 00 00       	mov    $0x169,%edx
   1594a:	48 8d 35 00 8a 02 00 	lea    0x28a00(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15951:	48 8d 3d 00 8a 02 00 	lea    0x28a00(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15958:	e8 a3 a6 ff ff       	callq  10000 <__assert_fail@plt>
   1595d:	e8 ee a4 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   15962:	e8 a9 a1 ff ff       	callq  fb10 <__errno_location@plt>
   15967:	89 df                	mov    %ebx,%edi
   15969:	89 18                	mov    %ebx,(%rax)
   1596b:	e8 60 b0 ff ff       	callq  109d0 <strerror@plt>
   15970:	4c 8d 0d c2 8c 02 00 	lea    0x28cc2(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15977:	41 b8 6d 01 00 00    	mov    $0x16d,%r8d
   1597d:	52                   	push   %rdx
   1597e:	50                   	push   %rax
   1597f:	48 8b 05 62 d6 23 00 	mov    0x23d662(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15986:	48 8d 0d c4 89 02 00 	lea    0x289c4(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1598d:	be 01 00 00 00       	mov    $0x1,%esi
   15992:	48 8d 15 79 8c 02 00 	lea    0x28c79(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15999:	48 8b 38             	mov    (%rax),%rdi
   1599c:	31 c0                	xor    %eax,%eax
   1599e:	e8 bd af ff ff       	callq  10960 <__fprintf_chk@plt>
   159a3:	e8 48 a1 ff ff       	callq  faf0 <abort@plt>
   159a8:	48 8d 0d a1 91 02 00 	lea    0x291a1(%rip),%rcx        # 3eb50 <__PRETTY_FUNCTION__.5524>
   159af:	ba 6b 01 00 00       	mov    $0x16b,%edx
   159b4:	48 8d 35 96 89 02 00 	lea    0x28996(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   159bb:	48 8d 3d 52 8b 02 00 	lea    0x28b52(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   159c2:	e8 39 a6 ff ff       	callq  10000 <__assert_fail@plt>
   159c7:	e8 44 a1 ff ff       	callq  fb10 <__errno_location@plt>
   159cc:	44 89 e7             	mov    %r12d,%edi
   159cf:	44 89 20             	mov    %r12d,(%rax)
   159d2:	e8 f9 af ff ff       	callq  109d0 <strerror@plt>
   159d7:	4c 8d 0d 4b 8c 02 00 	lea    0x28c4b(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   159de:	41 b8 6a 01 00 00    	mov    $0x16a,%r8d
   159e4:	51                   	push   %rcx
   159e5:	50                   	push   %rax
   159e6:	eb 97                	jmp    1597f <cbuf_lines_used+0xcf>

00000000000159e8 <.annobin_cbuf_lines_used.end>:
   159e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   159ef:	00 

00000000000159f0 <cbuf_reused>:
   159f0:	f3 0f 1e fa          	endbr64 
   159f4:	41 54                	push   %r12
   159f6:	55                   	push   %rbp
   159f7:	53                   	push   %rbx
   159f8:	48 85 ff             	test   %rdi,%rdi
   159fb:	74 54                	je     15a51 <cbuf_reused+0x61>
   159fd:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   15a01:	48 89 fb             	mov    %rdi,%rbx
   15a04:	48 89 ef             	mov    %rbp,%rdi
   15a07:	e8 c4 b0 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15a0c:	41 89 c4             	mov    %eax,%r12d
   15a0f:	85 c0                	test   %eax,%eax
   15a11:	0f 85 be 00 00 00    	jne    15ad5 <cbuf_reused+0xe5>
   15a17:	48 89 df             	mov    %rbx,%rdi
   15a1a:	e8 61 df ff ff       	callq  13980 <cbuf_is_valid>
   15a1f:	85 c0                	test   %eax,%eax
   15a21:	0f 84 8f 00 00 00    	je     15ab6 <cbuf_reused+0xc6>
   15a27:	8b 43 3c             	mov    0x3c(%rbx),%eax
   15a2a:	48 89 ef             	mov    %rbp,%rdi
   15a2d:	8d 48 01             	lea    0x1(%rax),%ecx
   15a30:	8b 43 50             	mov    0x50(%rbx),%eax
   15a33:	01 c8                	add    %ecx,%eax
   15a35:	2b 43 54             	sub    0x54(%rbx),%eax
   15a38:	99                   	cltd   
   15a39:	f7 f9                	idiv   %ecx
   15a3b:	41 89 d4             	mov    %edx,%r12d
   15a3e:	e8 ad a9 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15a43:	89 c3                	mov    %eax,%ebx
   15a45:	85 c0                	test   %eax,%eax
   15a47:	75 27                	jne    15a70 <cbuf_reused+0x80>
   15a49:	44 89 e0             	mov    %r12d,%eax
   15a4c:	5b                   	pop    %rbx
   15a4d:	5d                   	pop    %rbp
   15a4e:	41 5c                	pop    %r12
   15a50:	c3                   	retq   
   15a51:	48 8d 0d c0 90 02 00 	lea    0x290c0(%rip),%rcx        # 3eb18 <__PRETTY_FUNCTION__.5531>
   15a58:	ba 7d 01 00 00       	mov    $0x17d,%edx
   15a5d:	48 8d 35 ed 88 02 00 	lea    0x288ed(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15a64:	48 8d 3d ed 88 02 00 	lea    0x288ed(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15a6b:	e8 90 a5 ff ff       	callq  10000 <__assert_fail@plt>
   15a70:	e8 9b a0 ff ff       	callq  fb10 <__errno_location@plt>
   15a75:	89 df                	mov    %ebx,%edi
   15a77:	89 18                	mov    %ebx,(%rax)
   15a79:	e8 52 af ff ff       	callq  109d0 <strerror@plt>
   15a7e:	4c 8d 0d b4 8b 02 00 	lea    0x28bb4(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15a85:	41 b8 81 01 00 00    	mov    $0x181,%r8d
   15a8b:	52                   	push   %rdx
   15a8c:	50                   	push   %rax
   15a8d:	48 8b 05 54 d5 23 00 	mov    0x23d554(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15a94:	48 8d 0d b6 88 02 00 	lea    0x288b6(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15a9b:	be 01 00 00 00       	mov    $0x1,%esi
   15aa0:	48 8d 15 6b 8b 02 00 	lea    0x28b6b(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15aa7:	48 8b 38             	mov    (%rax),%rdi
   15aaa:	31 c0                	xor    %eax,%eax
   15aac:	e8 af ae ff ff       	callq  10960 <__fprintf_chk@plt>
   15ab1:	e8 3a a0 ff ff       	callq  faf0 <abort@plt>
   15ab6:	48 8d 0d 5b 90 02 00 	lea    0x2905b(%rip),%rcx        # 3eb18 <__PRETTY_FUNCTION__.5531>
   15abd:	ba 7f 01 00 00       	mov    $0x17f,%edx
   15ac2:	48 8d 35 88 88 02 00 	lea    0x28888(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15ac9:	48 8d 3d 44 8a 02 00 	lea    0x28a44(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15ad0:	e8 2b a5 ff ff       	callq  10000 <__assert_fail@plt>
   15ad5:	e8 36 a0 ff ff       	callq  fb10 <__errno_location@plt>
   15ada:	44 89 e7             	mov    %r12d,%edi
   15add:	44 89 20             	mov    %r12d,(%rax)
   15ae0:	e8 eb ae ff ff       	callq  109d0 <strerror@plt>
   15ae5:	4c 8d 0d 3d 8b 02 00 	lea    0x28b3d(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15aec:	41 b8 7e 01 00 00    	mov    $0x17e,%r8d
   15af2:	51                   	push   %rcx
   15af3:	50                   	push   %rax
   15af4:	eb 97                	jmp    15a8d <cbuf_reused+0x9d>

0000000000015af6 <.annobin_cbuf_lines_reused.start>:
   15af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15afd:	00 00 00 

0000000000015b00 <cbuf_lines_reused>:
   15b00:	f3 0f 1e fa          	endbr64 
   15b04:	41 54                	push   %r12
   15b06:	55                   	push   %rbp
   15b07:	53                   	push   %rbx
   15b08:	48 83 ec 10          	sub    $0x10,%rsp
   15b0c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15b13:	00 00 
   15b15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15b1a:	31 c0                	xor    %eax,%eax
   15b1c:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
   15b23:	ff 
   15b24:	48 85 ff             	test   %rdi,%rdi
   15b27:	74 67                	je     15b90 <cbuf_lines_reused+0x90>
   15b29:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   15b2d:	48 89 fb             	mov    %rdi,%rbx
   15b30:	48 89 ef             	mov    %rbp,%rdi
   15b33:	e8 98 af ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15b38:	41 89 c4             	mov    %eax,%r12d
   15b3b:	85 c0                	test   %eax,%eax
   15b3d:	0f 85 d6 00 00 00    	jne    15c19 <cbuf_lines_reused+0x119>
   15b43:	48 89 df             	mov    %rbx,%rdi
   15b46:	e8 35 de ff ff       	callq  13980 <cbuf_is_valid>
   15b4b:	85 c0                	test   %eax,%eax
   15b4d:	0f 84 a7 00 00 00    	je     15bfa <cbuf_lines_reused+0xfa>
   15b53:	8b 73 3c             	mov    0x3c(%rbx),%esi
   15b56:	48 89 df             	mov    %rbx,%rdi
   15b59:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   15b5e:	31 c9                	xor    %ecx,%ecx
   15b60:	e8 fb e3 ff ff       	callq  13f60 <cbuf_find_replay_line>
   15b65:	48 89 ef             	mov    %rbp,%rdi
   15b68:	e8 83 a8 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15b6d:	89 c3                	mov    %eax,%ebx
   15b6f:	85 c0                	test   %eax,%eax
   15b71:	75 41                	jne    15bb4 <cbuf_lines_reused+0xb4>
   15b73:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15b78:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   15b7f:	00 00 
   15b81:	8b 44 24 04          	mov    0x4(%rsp),%eax
   15b85:	75 28                	jne    15baf <cbuf_lines_reused+0xaf>
   15b87:	48 83 c4 10          	add    $0x10,%rsp
   15b8b:	5b                   	pop    %rbx
   15b8c:	5d                   	pop    %rbp
   15b8d:	41 5c                	pop    %r12
   15b8f:	c3                   	retq   
   15b90:	48 8d 0d 69 8f 02 00 	lea    0x28f69(%rip),%rcx        # 3eb00 <__PRETTY_FUNCTION__.5538>
   15b97:	ba 8b 01 00 00       	mov    $0x18b,%edx
   15b9c:	48 8d 35 ae 87 02 00 	lea    0x287ae(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15ba3:	48 8d 3d ae 87 02 00 	lea    0x287ae(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15baa:	e8 51 a4 ff ff       	callq  10000 <__assert_fail@plt>
   15baf:	e8 9c a2 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   15bb4:	e8 57 9f ff ff       	callq  fb10 <__errno_location@plt>
   15bb9:	89 df                	mov    %ebx,%edi
   15bbb:	89 18                	mov    %ebx,(%rax)
   15bbd:	e8 0e ae ff ff       	callq  109d0 <strerror@plt>
   15bc2:	4c 8d 0d 70 8a 02 00 	lea    0x28a70(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15bc9:	41 b8 8f 01 00 00    	mov    $0x18f,%r8d
   15bcf:	52                   	push   %rdx
   15bd0:	50                   	push   %rax
   15bd1:	48 8b 05 10 d4 23 00 	mov    0x23d410(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15bd8:	48 8d 0d 72 87 02 00 	lea    0x28772(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15bdf:	be 01 00 00 00       	mov    $0x1,%esi
   15be4:	48 8d 15 27 8a 02 00 	lea    0x28a27(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15beb:	48 8b 38             	mov    (%rax),%rdi
   15bee:	31 c0                	xor    %eax,%eax
   15bf0:	e8 6b ad ff ff       	callq  10960 <__fprintf_chk@plt>
   15bf5:	e8 f6 9e ff ff       	callq  faf0 <abort@plt>
   15bfa:	48 8d 0d ff 8e 02 00 	lea    0x28eff(%rip),%rcx        # 3eb00 <__PRETTY_FUNCTION__.5538>
   15c01:	ba 8d 01 00 00       	mov    $0x18d,%edx
   15c06:	48 8d 35 44 87 02 00 	lea    0x28744(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15c0d:	48 8d 3d 00 89 02 00 	lea    0x28900(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15c14:	e8 e7 a3 ff ff       	callq  10000 <__assert_fail@plt>
   15c19:	e8 f2 9e ff ff       	callq  fb10 <__errno_location@plt>
   15c1e:	44 89 e7             	mov    %r12d,%edi
   15c21:	44 89 20             	mov    %r12d,(%rax)
   15c24:	e8 a7 ad ff ff       	callq  109d0 <strerror@plt>
   15c29:	4c 8d 0d f9 89 02 00 	lea    0x289f9(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15c30:	41 b8 8c 01 00 00    	mov    $0x18c,%r8d
   15c36:	51                   	push   %rcx
   15c37:	50                   	push   %rax
   15c38:	eb 97                	jmp    15bd1 <cbuf_lines_reused+0xd1>

0000000000015c3a <.annobin_cbuf_is_empty.start>:
   15c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000015c40 <cbuf_is_empty>:
   15c40:	f3 0f 1e fa          	endbr64 
   15c44:	41 54                	push   %r12
   15c46:	55                   	push   %rbp
   15c47:	53                   	push   %rbx
   15c48:	48 85 ff             	test   %rdi,%rdi
   15c4b:	74 49                	je     15c96 <cbuf_is_empty+0x56>
   15c4d:	48 8d 6f 08          	lea    0x8(%rdi),%rbp
   15c51:	48 89 fb             	mov    %rdi,%rbx
   15c54:	48 89 ef             	mov    %rbp,%rdi
   15c57:	e8 74 ae ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15c5c:	41 89 c4             	mov    %eax,%r12d
   15c5f:	85 c0                	test   %eax,%eax
   15c61:	0f 85 b3 00 00 00    	jne    15d1a <cbuf_is_empty+0xda>
   15c67:	48 89 df             	mov    %rbx,%rdi
   15c6a:	e8 11 dd ff ff       	callq  13980 <cbuf_is_valid>
   15c6f:	85 c0                	test   %eax,%eax
   15c71:	0f 84 84 00 00 00    	je     15cfb <cbuf_is_empty+0xbb>
   15c77:	48 89 ef             	mov    %rbp,%rdi
   15c7a:	44 8b 63 40          	mov    0x40(%rbx),%r12d
   15c7e:	e8 6d a7 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15c83:	89 c3                	mov    %eax,%ebx
   15c85:	85 c0                	test   %eax,%eax
   15c87:	75 2c                	jne    15cb5 <cbuf_is_empty+0x75>
   15c89:	31 c0                	xor    %eax,%eax
   15c8b:	45 85 e4             	test   %r12d,%r12d
   15c8e:	5b                   	pop    %rbx
   15c8f:	5d                   	pop    %rbp
   15c90:	0f 94 c0             	sete   %al
   15c93:	41 5c                	pop    %r12
   15c95:	c3                   	retq   
   15c96:	48 8d 0d 2b 8e 02 00 	lea    0x28e2b(%rip),%rcx        # 3eac8 <__PRETTY_FUNCTION__.5545>
   15c9d:	ba 99 01 00 00       	mov    $0x199,%edx
   15ca2:	48 8d 35 a8 86 02 00 	lea    0x286a8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15ca9:	48 8d 3d a8 86 02 00 	lea    0x286a8(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15cb0:	e8 4b a3 ff ff       	callq  10000 <__assert_fail@plt>
   15cb5:	e8 56 9e ff ff       	callq  fb10 <__errno_location@plt>
   15cba:	89 df                	mov    %ebx,%edi
   15cbc:	89 18                	mov    %ebx,(%rax)
   15cbe:	e8 0d ad ff ff       	callq  109d0 <strerror@plt>
   15cc3:	4c 8d 0d 6f 89 02 00 	lea    0x2896f(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15cca:	41 b8 9d 01 00 00    	mov    $0x19d,%r8d
   15cd0:	52                   	push   %rdx
   15cd1:	50                   	push   %rax
   15cd2:	48 8b 05 0f d3 23 00 	mov    0x23d30f(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15cd9:	48 8d 0d 71 86 02 00 	lea    0x28671(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15ce0:	be 01 00 00 00       	mov    $0x1,%esi
   15ce5:	48 8d 15 26 89 02 00 	lea    0x28926(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15cec:	48 8b 38             	mov    (%rax),%rdi
   15cef:	31 c0                	xor    %eax,%eax
   15cf1:	e8 6a ac ff ff       	callq  10960 <__fprintf_chk@plt>
   15cf6:	e8 f5 9d ff ff       	callq  faf0 <abort@plt>
   15cfb:	48 8d 0d c6 8d 02 00 	lea    0x28dc6(%rip),%rcx        # 3eac8 <__PRETTY_FUNCTION__.5545>
   15d02:	ba 9b 01 00 00       	mov    $0x19b,%edx
   15d07:	48 8d 35 43 86 02 00 	lea    0x28643(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15d0e:	48 8d 3d ff 87 02 00 	lea    0x287ff(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15d15:	e8 e6 a2 ff ff       	callq  10000 <__assert_fail@plt>
   15d1a:	e8 f1 9d ff ff       	callq  fb10 <__errno_location@plt>
   15d1f:	44 89 e7             	mov    %r12d,%edi
   15d22:	44 89 20             	mov    %r12d,(%rax)
   15d25:	e8 a6 ac ff ff       	callq  109d0 <strerror@plt>
   15d2a:	4c 8d 0d f8 88 02 00 	lea    0x288f8(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15d31:	41 b8 9a 01 00 00    	mov    $0x19a,%r8d
   15d37:	51                   	push   %rcx
   15d38:	50                   	push   %rax
   15d39:	eb 97                	jmp    15cd2 <cbuf_is_empty+0x92>

0000000000015d3b <.annobin_cbuf_is_empty.end>:
   15d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015d40 <cbuf_opt_get>:
   15d40:	f3 0f 1e fa          	endbr64 
   15d44:	41 56                	push   %r14
   15d46:	41 55                	push   %r13
   15d48:	41 54                	push   %r12
   15d4a:	55                   	push   %rbp
   15d4b:	53                   	push   %rbx
   15d4c:	48 85 ff             	test   %rdi,%rdi
   15d4f:	0f 84 86 00 00 00    	je     15ddb <cbuf_opt_get+0x9b>
   15d55:	49 89 d5             	mov    %rdx,%r13
   15d58:	48 85 d2             	test   %rdx,%rdx
   15d5b:	74 6c                	je     15dc9 <cbuf_opt_get+0x89>
   15d5d:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   15d61:	48 89 fb             	mov    %rdi,%rbx
   15d64:	41 89 f6             	mov    %esi,%r14d
   15d67:	4c 89 e7             	mov    %r12,%rdi
   15d6a:	e8 61 ad ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15d6f:	89 c5                	mov    %eax,%ebp
   15d71:	85 c0                	test   %eax,%eax
   15d73:	0f 85 a0 00 00 00    	jne    15e19 <cbuf_opt_get+0xd9>
   15d79:	48 89 df             	mov    %rbx,%rdi
   15d7c:	e8 ff db ff ff       	callq  13980 <cbuf_is_valid>
   15d81:	85 c0                	test   %eax,%eax
   15d83:	74 75                	je     15dfa <cbuf_opt_get+0xba>
   15d85:	45 85 f6             	test   %r14d,%r14d
   15d88:	74 36                	je     15dc0 <cbuf_opt_get+0x80>
   15d8a:	e8 81 9d ff ff       	callq  fb10 <__errno_location@plt>
   15d8f:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   15d94:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   15d9a:	4c 89 e7             	mov    %r12,%rdi
   15d9d:	e8 4e a6 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15da2:	89 c3                	mov    %eax,%ebx
   15da4:	85 c0                	test   %eax,%eax
   15da6:	0f 85 b3 00 00 00    	jne    15e5f <cbuf_opt_get+0x11f>
   15dac:	5b                   	pop    %rbx
   15dad:	89 e8                	mov    %ebp,%eax
   15daf:	5d                   	pop    %rbp
   15db0:	41 5c                	pop    %r12
   15db2:	41 5d                	pop    %r13
   15db4:	41 5e                	pop    %r14
   15db6:	c3                   	retq   
   15db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15dbe:	00 00 
   15dc0:	8b 43 44             	mov    0x44(%rbx),%eax
   15dc3:	41 89 45 00          	mov    %eax,0x0(%r13)
   15dc7:	eb d1                	jmp    15d9a <cbuf_opt_get+0x5a>
   15dc9:	e8 42 9d ff ff       	callq  fb10 <__errno_location@plt>
   15dce:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   15dd3:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   15dd9:	eb d1                	jmp    15dac <cbuf_opt_get+0x6c>
   15ddb:	48 8d 0d d6 8c 02 00 	lea    0x28cd6(%rip),%rcx        # 3eab8 <__PRETTY_FUNCTION__.5554>
   15de2:	ba a7 01 00 00       	mov    $0x1a7,%edx
   15de7:	48 8d 35 63 85 02 00 	lea    0x28563(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15dee:	48 8d 3d 63 85 02 00 	lea    0x28563(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15df5:	e8 06 a2 ff ff       	callq  10000 <__assert_fail@plt>
   15dfa:	48 8d 0d b7 8c 02 00 	lea    0x28cb7(%rip),%rcx        # 3eab8 <__PRETTY_FUNCTION__.5554>
   15e01:	ba ae 01 00 00       	mov    $0x1ae,%edx
   15e06:	48 8d 35 44 85 02 00 	lea    0x28544(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15e0d:	48 8d 3d 00 87 02 00 	lea    0x28700(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15e14:	e8 e7 a1 ff ff       	callq  10000 <__assert_fail@plt>
   15e19:	e8 f2 9c ff ff       	callq  fb10 <__errno_location@plt>
   15e1e:	89 ef                	mov    %ebp,%edi
   15e20:	89 28                	mov    %ebp,(%rax)
   15e22:	e8 a9 ab ff ff       	callq  109d0 <strerror@plt>
   15e27:	4c 8d 0d fb 87 02 00 	lea    0x287fb(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15e2e:	41 b8 ad 01 00 00    	mov    $0x1ad,%r8d
   15e34:	51                   	push   %rcx
   15e35:	50                   	push   %rax
   15e36:	48 8b 05 ab d1 23 00 	mov    0x23d1ab(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15e3d:	48 8d 0d 0d 85 02 00 	lea    0x2850d(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15e44:	be 01 00 00 00       	mov    $0x1,%esi
   15e49:	48 8d 15 c2 87 02 00 	lea    0x287c2(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15e50:	48 8b 38             	mov    (%rax),%rdi
   15e53:	31 c0                	xor    %eax,%eax
   15e55:	e8 06 ab ff ff       	callq  10960 <__fprintf_chk@plt>
   15e5a:	e8 91 9c ff ff       	callq  faf0 <abort@plt>
   15e5f:	e8 ac 9c ff ff       	callq  fb10 <__errno_location@plt>
   15e64:	89 df                	mov    %ebx,%edi
   15e66:	89 18                	mov    %ebx,(%rax)
   15e68:	e8 63 ab ff ff       	callq  109d0 <strerror@plt>
   15e6d:	4c 8d 0d c5 87 02 00 	lea    0x287c5(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15e74:	41 b8 b6 01 00 00    	mov    $0x1b6,%r8d
   15e7a:	52                   	push   %rdx
   15e7b:	50                   	push   %rax
   15e7c:	eb b8                	jmp    15e36 <cbuf_opt_get+0xf6>

0000000000015e7e <.annobin_cbuf_opt_get.end>:
   15e7e:	66 90                	xchg   %ax,%ax

0000000000015e80 <cbuf_opt_set>:
   15e80:	f3 0f 1e fa          	endbr64 
   15e84:	41 56                	push   %r14
   15e86:	41 55                	push   %r13
   15e88:	41 54                	push   %r12
   15e8a:	55                   	push   %rbp
   15e8b:	53                   	push   %rbx
   15e8c:	48 85 ff             	test   %rdi,%rdi
   15e8f:	0f 84 e2 00 00 00    	je     15f77 <cbuf_opt_set+0xf7>
   15e95:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   15e99:	48 89 fb             	mov    %rdi,%rbx
   15e9c:	41 89 f6             	mov    %esi,%r14d
   15e9f:	41 89 d5             	mov    %edx,%r13d
   15ea2:	4c 89 e7             	mov    %r12,%rdi
   15ea5:	e8 26 ac ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   15eaa:	89 c5                	mov    %eax,%ebp
   15eac:	85 c0                	test   %eax,%eax
   15eae:	0f 85 7d 00 00 00    	jne    15f31 <cbuf_opt_set+0xb1>
   15eb4:	48 89 df             	mov    %rbx,%rdi
   15eb7:	e8 c4 da ff ff       	callq  13980 <cbuf_is_valid>
   15ebc:	85 c0                	test   %eax,%eax
   15ebe:	74 52                	je     15f12 <cbuf_opt_set+0x92>
   15ec0:	45 85 f6             	test   %r14d,%r14d
   15ec3:	75 3b                	jne    15f00 <cbuf_opt_set+0x80>
   15ec5:	41 83 fd 02          	cmp    $0x2,%r13d
   15ec9:	77 35                	ja     15f00 <cbuf_opt_set+0x80>
   15ecb:	44 89 6b 44          	mov    %r13d,0x44(%rbx)
   15ecf:	48 89 df             	mov    %rbx,%rdi
   15ed2:	e8 a9 da ff ff       	callq  13980 <cbuf_is_valid>
   15ed7:	85 c0                	test   %eax,%eax
   15ed9:	0f 84 d6 00 00 00    	je     15fb5 <cbuf_opt_set+0x135>
   15edf:	4c 89 e7             	mov    %r12,%rdi
   15ee2:	e8 09 a5 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   15ee7:	89 c3                	mov    %eax,%ebx
   15ee9:	85 c0                	test   %eax,%eax
   15eeb:	0f 85 a5 00 00 00    	jne    15f96 <cbuf_opt_set+0x116>
   15ef1:	5b                   	pop    %rbx
   15ef2:	89 e8                	mov    %ebp,%eax
   15ef4:	5d                   	pop    %rbp
   15ef5:	41 5c                	pop    %r12
   15ef7:	41 5d                	pop    %r13
   15ef9:	41 5e                	pop    %r14
   15efb:	c3                   	retq   
   15efc:	0f 1f 40 00          	nopl   0x0(%rax)
   15f00:	e8 0b 9c ff ff       	callq  fb10 <__errno_location@plt>
   15f05:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   15f0a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   15f10:	eb bd                	jmp    15ecf <cbuf_opt_set+0x4f>
   15f12:	48 8d 0d 8f 8b 02 00 	lea    0x28b8f(%rip),%rcx        # 3eaa8 <__PRETTY_FUNCTION__.5563>
   15f19:	ba c3 01 00 00       	mov    $0x1c3,%edx
   15f1e:	48 8d 35 2c 84 02 00 	lea    0x2842c(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15f25:	48 8d 3d e8 85 02 00 	lea    0x285e8(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15f2c:	e8 cf a0 ff ff       	callq  10000 <__assert_fail@plt>
   15f31:	e8 da 9b ff ff       	callq  fb10 <__errno_location@plt>
   15f36:	89 ef                	mov    %ebp,%edi
   15f38:	89 28                	mov    %ebp,(%rax)
   15f3a:	e8 91 aa ff ff       	callq  109d0 <strerror@plt>
   15f3f:	4c 8d 0d e3 86 02 00 	lea    0x286e3(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   15f46:	41 b8 c2 01 00 00    	mov    $0x1c2,%r8d
   15f4c:	51                   	push   %rcx
   15f4d:	50                   	push   %rax
   15f4e:	48 8b 05 93 d0 23 00 	mov    0x23d093(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   15f55:	48 8d 0d f5 83 02 00 	lea    0x283f5(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15f5c:	be 01 00 00 00       	mov    $0x1,%esi
   15f61:	48 8d 15 aa 86 02 00 	lea    0x286aa(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   15f68:	48 8b 38             	mov    (%rax),%rdi
   15f6b:	31 c0                	xor    %eax,%eax
   15f6d:	e8 ee a9 ff ff       	callq  10960 <__fprintf_chk@plt>
   15f72:	e8 79 9b ff ff       	callq  faf0 <abort@plt>
   15f77:	48 8d 0d 2a 8b 02 00 	lea    0x28b2a(%rip),%rcx        # 3eaa8 <__PRETTY_FUNCTION__.5563>
   15f7e:	ba c0 01 00 00       	mov    $0x1c0,%edx
   15f83:	48 8d 35 c7 83 02 00 	lea    0x283c7(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15f8a:	48 8d 3d c7 83 02 00 	lea    0x283c7(%rip),%rdi        # 3e358 <__PRETTY_FUNCTION__.5439+0x18>
   15f91:	e8 6a a0 ff ff       	callq  10000 <__assert_fail@plt>
   15f96:	e8 75 9b ff ff       	callq  fb10 <__errno_location@plt>
   15f9b:	89 df                	mov    %ebx,%edi
   15f9d:	89 18                	mov    %ebx,(%rax)
   15f9f:	e8 2c aa ff ff       	callq  109d0 <strerror@plt>
   15fa4:	4c 8d 0d 8e 86 02 00 	lea    0x2868e(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   15fab:	41 b8 d4 01 00 00    	mov    $0x1d4,%r8d
   15fb1:	52                   	push   %rdx
   15fb2:	50                   	push   %rax
   15fb3:	eb 99                	jmp    15f4e <cbuf_opt_set+0xce>
   15fb5:	48 8d 0d ec 8a 02 00 	lea    0x28aec(%rip),%rcx        # 3eaa8 <__PRETTY_FUNCTION__.5563>
   15fbc:	ba d3 01 00 00       	mov    $0x1d3,%edx
   15fc1:	48 8d 35 89 83 02 00 	lea    0x28389(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   15fc8:	48 8d 3d 45 85 02 00 	lea    0x28545(%rip),%rdi        # 3e514 <__PRETTY_FUNCTION__.5439+0x1d4>
   15fcf:	e8 2c a0 ff ff       	callq  10000 <__assert_fail@plt>

0000000000015fd4 <.annobin_cbuf_drop.start>:
   15fd4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   15fdb:	00 00 00 00 
   15fdf:	90                   	nop

0000000000015fe0 <cbuf_drop>:
   15fe0:	f3 0f 1e fa          	endbr64 
   15fe4:	41 55                	push   %r13
   15fe6:	41 54                	push   %r12
   15fe8:	55                   	push   %rbp
   15fe9:	53                   	push   %rbx
   15fea:	48 83 ec 08          	sub    $0x8,%rsp
   15fee:	48 85 ff             	test   %rdi,%rdi
   15ff1:	0f 84 ea 00 00 00    	je     160e1 <cbuf_drop+0x101>
   15ff7:	89 f3                	mov    %esi,%ebx
   15ff9:	83 fe ff             	cmp    $0xffffffff,%esi
   15ffc:	0f 8c ca 00 00 00    	jl     160cc <cbuf_drop+0xec>
   16002:	85 f6                	test   %esi,%esi
   16004:	75 12                	jne    16018 <cbuf_drop+0x38>
   16006:	48 83 c4 08          	add    $0x8,%rsp
   1600a:	89 d8                	mov    %ebx,%eax
   1600c:	5b                   	pop    %rbx
   1600d:	5d                   	pop    %rbp
   1600e:	41 5c                	pop    %r12
   16010:	41 5d                	pop    %r13
   16012:	c3                   	retq   
   16013:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16018:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   1601c:	48 89 fd             	mov    %rdi,%rbp
   1601f:	4c 89 e7             	mov    %r12,%rdi
   16022:	e8 a9 aa ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   16027:	41 89 c5             	mov    %eax,%r13d
   1602a:	85 c0                	test   %eax,%eax
   1602c:	0f 85 ce 00 00 00    	jne    16100 <cbuf_drop+0x120>
   16032:	48 89 ef             	mov    %rbp,%rdi
   16035:	e8 46 d9 ff ff       	callq  13980 <cbuf_is_valid>
   1603a:	85 c0                	test   %eax,%eax
   1603c:	0f 84 e2 00 00 00    	je     16124 <cbuf_drop+0x144>
   16042:	8b 45 40             	mov    0x40(%rbp),%eax
   16045:	83 fb ff             	cmp    $0xffffffff,%ebx
   16048:	74 7e                	je     160c8 <cbuf_drop+0xe8>
   1604a:	39 c3                	cmp    %eax,%ebx
   1604c:	0f 4f d8             	cmovg  %eax,%ebx
   1604f:	85 db                	test   %ebx,%ebx
   16051:	7e 0a                	jle    1605d <cbuf_drop+0x7d>
   16053:	89 de                	mov    %ebx,%esi
   16055:	48 89 ef             	mov    %rbp,%rdi
   16058:	e8 f3 e0 ff ff       	callq  14150 <cbuf_dropper>
   1605d:	48 89 ef             	mov    %rbp,%rdi
   16060:	e8 1b d9 ff ff       	callq  13980 <cbuf_is_valid>
   16065:	85 c0                	test   %eax,%eax
   16067:	0f 84 d6 00 00 00    	je     16143 <cbuf_drop+0x163>
   1606d:	4c 89 e7             	mov    %r12,%rdi
   16070:	e8 7b a3 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16075:	89 c5                	mov    %eax,%ebp
   16077:	85 c0                	test   %eax,%eax
   16079:	74 8b                	je     16006 <cbuf_drop+0x26>
   1607b:	e8 90 9a ff ff       	callq  fb10 <__errno_location@plt>
   16080:	89 ef                	mov    %ebp,%edi
   16082:	89 28                	mov    %ebp,(%rax)
   16084:	e8 47 a9 ff ff       	callq  109d0 <strerror@plt>
   16089:	4c 8d 0d a9 85 02 00 	lea    0x285a9(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   16090:	41 b8 f2 01 00 00    	mov    $0x1f2,%r8d
   16096:	52                   	push   %rdx
   16097:	50                   	push   %rax
   16098:	48 8b 05 49 cf 23 00 	mov    0x23cf49(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1609f:	48 8d 0d ab 82 02 00 	lea    0x282ab(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   160a6:	be 01 00 00 00       	mov    $0x1,%esi
   160ab:	48 8d 15 60 85 02 00 	lea    0x28560(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   160b2:	48 8b 38             	mov    (%rax),%rdi
   160b5:	31 c0                	xor    %eax,%eax
   160b7:	e8 a4 a8 ff ff       	callq  10960 <__fprintf_chk@plt>
   160bc:	e8 2f 9a ff ff       	callq  faf0 <abort@plt>
   160c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   160c8:	89 c3                	mov    %eax,%ebx
   160ca:	eb 83                	jmp    1604f <cbuf_drop+0x6f>
   160cc:	e8 3f 9a ff ff       	callq  fb10 <__errno_location@plt>
   160d1:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   160d6:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   160dc:	e9 25 ff ff ff       	jmpq   16006 <cbuf_drop+0x26>
   160e1:	48 8d 0d b0 89 02 00 	lea    0x289b0(%rip),%rcx        # 3ea98 <__PRETTY_FUNCTION__.5570>
   160e8:	ba dc 01 00 00       	mov    $0x1dc,%edx
   160ed:	48 8d 35 5d 82 02 00 	lea    0x2825d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   160f4:	48 8d 3d 2c 84 02 00 	lea    0x2842c(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   160fb:	e8 00 9f ff ff       	callq  10000 <__assert_fail@plt>
   16100:	e8 0b 9a ff ff       	callq  fb10 <__errno_location@plt>
   16105:	44 89 ef             	mov    %r13d,%edi
   16108:	44 89 28             	mov    %r13d,(%rax)
   1610b:	e8 c0 a8 ff ff       	callq  109d0 <strerror@plt>
   16110:	4c 8d 0d 12 85 02 00 	lea    0x28512(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   16117:	41 b8 e5 01 00 00    	mov    $0x1e5,%r8d
   1611d:	51                   	push   %rcx
   1611e:	50                   	push   %rax
   1611f:	e9 74 ff ff ff       	jmpq   16098 <cbuf_drop+0xb8>
   16124:	48 8d 0d 6d 89 02 00 	lea    0x2896d(%rip),%rcx        # 3ea98 <__PRETTY_FUNCTION__.5570>
   1612b:	ba e6 01 00 00       	mov    $0x1e6,%edx
   16130:	48 8d 35 1a 82 02 00 	lea    0x2821a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16137:	48 8d 3d 20 85 02 00 	lea    0x28520(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1613e:	e8 bd 9e ff ff       	callq  10000 <__assert_fail@plt>
   16143:	48 8d 0d 4e 89 02 00 	lea    0x2894e(%rip),%rcx        # 3ea98 <__PRETTY_FUNCTION__.5570>
   1614a:	ba f1 01 00 00       	mov    $0x1f1,%edx
   1614f:	48 8d 35 fb 81 02 00 	lea    0x281fb(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16156:	48 8d 3d 01 85 02 00 	lea    0x28501(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1615d:	e8 9e 9e ff ff       	callq  10000 <__assert_fail@plt>

0000000000016162 <.annobin_cbuf_drop.end>:
   16162:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16169:	00 00 00 00 
   1616d:	0f 1f 00             	nopl   (%rax)

0000000000016170 <cbuf_peek>:
   16170:	f3 0f 1e fa          	endbr64 
   16174:	41 55                	push   %r13
   16176:	41 54                	push   %r12
   16178:	55                   	push   %rbp
   16179:	53                   	push   %rbx
   1617a:	48 83 ec 18          	sub    $0x18,%rsp
   1617e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16183:	48 85 ff             	test   %rdi,%rdi
   16186:	0f 84 e9 00 00 00    	je     16275 <cbuf_peek+0x105>
   1618c:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   16192:	0f 84 c8 00 00 00    	je     16260 <cbuf_peek+0xf0>
   16198:	89 d3                	mov    %edx,%ebx
   1619a:	85 d2                	test   %edx,%edx
   1619c:	0f 88 be 00 00 00    	js     16260 <cbuf_peek+0xf0>
   161a2:	75 14                	jne    161b8 <cbuf_peek+0x48>
   161a4:	48 83 c4 18          	add    $0x18,%rsp
   161a8:	89 d8                	mov    %ebx,%eax
   161aa:	5b                   	pop    %rbx
   161ab:	5d                   	pop    %rbp
   161ac:	41 5c                	pop    %r12
   161ae:	41 5d                	pop    %r13
   161b0:	c3                   	retq   
   161b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   161b8:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   161bc:	48 89 fd             	mov    %rdi,%rbp
   161bf:	4c 89 e7             	mov    %r12,%rdi
   161c2:	e8 09 a9 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   161c7:	41 89 c5             	mov    %eax,%r13d
   161ca:	85 c0                	test   %eax,%eax
   161cc:	0f 85 c2 00 00 00    	jne    16294 <cbuf_peek+0x124>
   161d2:	48 89 ef             	mov    %rbp,%rdi
   161d5:	e8 a6 d7 ff ff       	callq  13980 <cbuf_is_valid>
   161da:	85 c0                	test   %eax,%eax
   161dc:	0f 84 d6 00 00 00    	je     162b8 <cbuf_peek+0x148>
   161e2:	89 de                	mov    %ebx,%esi
   161e4:	48 89 ef             	mov    %rbp,%rdi
   161e7:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   161ec:	48 8d 15 ad eb ff ff 	lea    -0x1453(%rip),%rdx        # 14da0 <cbuf_put_mem>
   161f3:	e8 e8 e0 ff ff       	callq  142e0 <cbuf_reader>
   161f8:	48 89 ef             	mov    %rbp,%rdi
   161fb:	89 c3                	mov    %eax,%ebx
   161fd:	e8 7e d7 ff ff       	callq  13980 <cbuf_is_valid>
   16202:	85 c0                	test   %eax,%eax
   16204:	0f 84 cd 00 00 00    	je     162d7 <cbuf_peek+0x167>
   1620a:	4c 89 e7             	mov    %r12,%rdi
   1620d:	e8 de a1 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16212:	89 c5                	mov    %eax,%ebp
   16214:	85 c0                	test   %eax,%eax
   16216:	74 8c                	je     161a4 <cbuf_peek+0x34>
   16218:	e8 f3 98 ff ff       	callq  fb10 <__errno_location@plt>
   1621d:	89 ef                	mov    %ebp,%edi
   1621f:	89 28                	mov    %ebp,(%rax)
   16221:	e8 aa a7 ff ff       	callq  109d0 <strerror@plt>
   16226:	4c 8d 0d 0c 84 02 00 	lea    0x2840c(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   1622d:	41 b8 09 02 00 00    	mov    $0x209,%r8d
   16233:	52                   	push   %rdx
   16234:	50                   	push   %rax
   16235:	48 8b 05 ac cd 23 00 	mov    0x23cdac(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1623c:	48 8d 0d 0e 81 02 00 	lea    0x2810e(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16243:	be 01 00 00 00       	mov    $0x1,%esi
   16248:	48 8d 15 c3 83 02 00 	lea    0x283c3(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   1624f:	48 8b 38             	mov    (%rax),%rdi
   16252:	31 c0                	xor    %eax,%eax
   16254:	e8 07 a7 ff ff       	callq  10960 <__fprintf_chk@plt>
   16259:	e8 92 98 ff ff       	callq  faf0 <abort@plt>
   1625e:	66 90                	xchg   %ax,%ax
   16260:	e8 ab 98 ff ff       	callq  fb10 <__errno_location@plt>
   16265:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1626a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16270:	e9 2f ff ff ff       	jmpq   161a4 <cbuf_peek+0x34>
   16275:	48 8d 0d ec 87 02 00 	lea    0x287ec(%rip),%rcx        # 3ea68 <__PRETTY_FUNCTION__.5579>
   1627c:	ba fc 01 00 00       	mov    $0x1fc,%edx
   16281:	48 8d 35 c9 80 02 00 	lea    0x280c9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16288:	48 8d 3d 98 82 02 00 	lea    0x28298(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   1628f:	e8 6c 9d ff ff       	callq  10000 <__assert_fail@plt>
   16294:	e8 77 98 ff ff       	callq  fb10 <__errno_location@plt>
   16299:	44 89 ef             	mov    %r13d,%edi
   1629c:	44 89 28             	mov    %r13d,(%rax)
   1629f:	e8 2c a7 ff ff       	callq  109d0 <strerror@plt>
   162a4:	4c 8d 0d 7e 83 02 00 	lea    0x2837e(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   162ab:	41 b8 05 02 00 00    	mov    $0x205,%r8d
   162b1:	51                   	push   %rcx
   162b2:	50                   	push   %rax
   162b3:	e9 7d ff ff ff       	jmpq   16235 <cbuf_peek+0xc5>
   162b8:	48 8d 0d a9 87 02 00 	lea    0x287a9(%rip),%rcx        # 3ea68 <__PRETTY_FUNCTION__.5579>
   162bf:	ba 06 02 00 00       	mov    $0x206,%edx
   162c4:	48 8d 35 86 80 02 00 	lea    0x28086(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   162cb:	48 8d 3d 8c 83 02 00 	lea    0x2838c(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   162d2:	e8 29 9d ff ff       	callq  10000 <__assert_fail@plt>
   162d7:	48 8d 0d 8a 87 02 00 	lea    0x2878a(%rip),%rcx        # 3ea68 <__PRETTY_FUNCTION__.5579>
   162de:	ba 08 02 00 00       	mov    $0x208,%edx
   162e3:	48 8d 35 67 80 02 00 	lea    0x28067(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   162ea:	48 8d 3d 6d 83 02 00 	lea    0x2836d(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   162f1:	e8 0a 9d ff ff       	callq  10000 <__assert_fail@plt>

00000000000162f6 <.annobin_cbuf_peek.end>:
   162f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   162fd:	00 00 00 

0000000000016300 <cbuf_read>:
   16300:	f3 0f 1e fa          	endbr64 
   16304:	41 55                	push   %r13
   16306:	41 54                	push   %r12
   16308:	55                   	push   %rbp
   16309:	53                   	push   %rbx
   1630a:	48 83 ec 18          	sub    $0x18,%rsp
   1630e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16313:	48 85 ff             	test   %rdi,%rdi
   16316:	0f 84 f9 00 00 00    	je     16415 <cbuf_read+0x115>
   1631c:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   16322:	0f 84 d8 00 00 00    	je     16400 <cbuf_read+0x100>
   16328:	89 d3                	mov    %edx,%ebx
   1632a:	85 d2                	test   %edx,%edx
   1632c:	0f 88 ce 00 00 00    	js     16400 <cbuf_read+0x100>
   16332:	75 14                	jne    16348 <cbuf_read+0x48>
   16334:	48 83 c4 18          	add    $0x18,%rsp
   16338:	89 d8                	mov    %ebx,%eax
   1633a:	5b                   	pop    %rbx
   1633b:	5d                   	pop    %rbp
   1633c:	41 5c                	pop    %r12
   1633e:	41 5d                	pop    %r13
   16340:	c3                   	retq   
   16341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16348:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   1634c:	48 89 fd             	mov    %rdi,%rbp
   1634f:	4c 89 e7             	mov    %r12,%rdi
   16352:	e8 79 a7 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   16357:	41 89 c5             	mov    %eax,%r13d
   1635a:	85 c0                	test   %eax,%eax
   1635c:	0f 85 d2 00 00 00    	jne    16434 <cbuf_read+0x134>
   16362:	48 89 ef             	mov    %rbp,%rdi
   16365:	e8 16 d6 ff ff       	callq  13980 <cbuf_is_valid>
   1636a:	85 c0                	test   %eax,%eax
   1636c:	0f 84 e6 00 00 00    	je     16458 <cbuf_read+0x158>
   16372:	89 de                	mov    %ebx,%esi
   16374:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   16379:	48 8d 15 20 ea ff ff 	lea    -0x15e0(%rip),%rdx        # 14da0 <cbuf_put_mem>
   16380:	48 89 ef             	mov    %rbp,%rdi
   16383:	e8 58 df ff ff       	callq  142e0 <cbuf_reader>
   16388:	89 c3                	mov    %eax,%ebx
   1638a:	85 c0                	test   %eax,%eax
   1638c:	7e 0a                	jle    16398 <cbuf_read+0x98>
   1638e:	89 c6                	mov    %eax,%esi
   16390:	48 89 ef             	mov    %rbp,%rdi
   16393:	e8 b8 dd ff ff       	callq  14150 <cbuf_dropper>
   16398:	48 89 ef             	mov    %rbp,%rdi
   1639b:	e8 e0 d5 ff ff       	callq  13980 <cbuf_is_valid>
   163a0:	85 c0                	test   %eax,%eax
   163a2:	0f 84 cf 00 00 00    	je     16477 <cbuf_read+0x177>
   163a8:	4c 89 e7             	mov    %r12,%rdi
   163ab:	e8 40 a0 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   163b0:	89 c5                	mov    %eax,%ebp
   163b2:	85 c0                	test   %eax,%eax
   163b4:	0f 84 7a ff ff ff    	je     16334 <cbuf_read+0x34>
   163ba:	e8 51 97 ff ff       	callq  fb10 <__errno_location@plt>
   163bf:	89 ef                	mov    %ebp,%edi
   163c1:	89 28                	mov    %ebp,(%rax)
   163c3:	e8 08 a6 ff ff       	callq  109d0 <strerror@plt>
   163c8:	4c 8d 0d 6a 82 02 00 	lea    0x2826a(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   163cf:	41 b8 23 02 00 00    	mov    $0x223,%r8d
   163d5:	52                   	push   %rdx
   163d6:	50                   	push   %rax
   163d7:	48 8b 05 0a cc 23 00 	mov    0x23cc0a(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   163de:	48 8d 0d 6c 7f 02 00 	lea    0x27f6c(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   163e5:	be 01 00 00 00       	mov    $0x1,%esi
   163ea:	48 8d 15 21 82 02 00 	lea    0x28221(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   163f1:	48 8b 38             	mov    (%rax),%rdi
   163f4:	31 c0                	xor    %eax,%eax
   163f6:	e8 65 a5 ff ff       	callq  10960 <__fprintf_chk@plt>
   163fb:	e8 f0 96 ff ff       	callq  faf0 <abort@plt>
   16400:	e8 0b 97 ff ff       	callq  fb10 <__errno_location@plt>
   16405:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1640a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16410:	e9 1f ff ff ff       	jmpq   16334 <cbuf_read+0x34>
   16415:	48 8d 0d 1c 86 02 00 	lea    0x2861c(%rip),%rcx        # 3ea38 <__PRETTY_FUNCTION__.5588>
   1641c:	ba 13 02 00 00       	mov    $0x213,%edx
   16421:	48 8d 35 29 7f 02 00 	lea    0x27f29(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16428:	48 8d 3d f8 80 02 00 	lea    0x280f8(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   1642f:	e8 cc 9b ff ff       	callq  10000 <__assert_fail@plt>
   16434:	e8 d7 96 ff ff       	callq  fb10 <__errno_location@plt>
   16439:	44 89 ef             	mov    %r13d,%edi
   1643c:	44 89 28             	mov    %r13d,(%rax)
   1643f:	e8 8c a5 ff ff       	callq  109d0 <strerror@plt>
   16444:	4c 8d 0d de 81 02 00 	lea    0x281de(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1644b:	41 b8 1c 02 00 00    	mov    $0x21c,%r8d
   16451:	51                   	push   %rcx
   16452:	50                   	push   %rax
   16453:	e9 7f ff ff ff       	jmpq   163d7 <cbuf_read+0xd7>
   16458:	48 8d 0d d9 85 02 00 	lea    0x285d9(%rip),%rcx        # 3ea38 <__PRETTY_FUNCTION__.5588>
   1645f:	ba 1d 02 00 00       	mov    $0x21d,%edx
   16464:	48 8d 35 e6 7e 02 00 	lea    0x27ee6(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1646b:	48 8d 3d ec 81 02 00 	lea    0x281ec(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16472:	e8 89 9b ff ff       	callq  10000 <__assert_fail@plt>
   16477:	48 8d 0d ba 85 02 00 	lea    0x285ba(%rip),%rcx        # 3ea38 <__PRETTY_FUNCTION__.5588>
   1647e:	ba 22 02 00 00       	mov    $0x222,%edx
   16483:	48 8d 35 c7 7e 02 00 	lea    0x27ec7(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1648a:	48 8d 3d cd 81 02 00 	lea    0x281cd(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16491:	e8 6a 9b ff ff       	callq  10000 <__assert_fail@plt>

0000000000016496 <.annobin_cbuf_read.end>:
   16496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1649d:	00 00 00 

00000000000164a0 <cbuf_replay>:
   164a0:	f3 0f 1e fa          	endbr64 
   164a4:	41 55                	push   %r13
   164a6:	41 54                	push   %r12
   164a8:	55                   	push   %rbp
   164a9:	53                   	push   %rbx
   164aa:	48 83 ec 18          	sub    $0x18,%rsp
   164ae:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   164b3:	48 85 ff             	test   %rdi,%rdi
   164b6:	0f 84 e9 00 00 00    	je     165a5 <cbuf_replay+0x105>
   164bc:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   164c2:	0f 84 c8 00 00 00    	je     16590 <cbuf_replay+0xf0>
   164c8:	89 d3                	mov    %edx,%ebx
   164ca:	85 d2                	test   %edx,%edx
   164cc:	0f 88 be 00 00 00    	js     16590 <cbuf_replay+0xf0>
   164d2:	75 14                	jne    164e8 <cbuf_replay+0x48>
   164d4:	48 83 c4 18          	add    $0x18,%rsp
   164d8:	89 d8                	mov    %ebx,%eax
   164da:	5b                   	pop    %rbx
   164db:	5d                   	pop    %rbp
   164dc:	41 5c                	pop    %r12
   164de:	41 5d                	pop    %r13
   164e0:	c3                   	retq   
   164e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   164e8:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   164ec:	48 89 fd             	mov    %rdi,%rbp
   164ef:	4c 89 e7             	mov    %r12,%rdi
   164f2:	e8 d9 a5 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   164f7:	41 89 c5             	mov    %eax,%r13d
   164fa:	85 c0                	test   %eax,%eax
   164fc:	0f 85 c2 00 00 00    	jne    165c4 <cbuf_replay+0x124>
   16502:	48 89 ef             	mov    %rbp,%rdi
   16505:	e8 76 d4 ff ff       	callq  13980 <cbuf_is_valid>
   1650a:	85 c0                	test   %eax,%eax
   1650c:	0f 84 d6 00 00 00    	je     165e8 <cbuf_replay+0x148>
   16512:	89 de                	mov    %ebx,%esi
   16514:	48 89 ef             	mov    %rbp,%rdi
   16517:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1651c:	48 8d 15 7d e8 ff ff 	lea    -0x1783(%rip),%rdx        # 14da0 <cbuf_put_mem>
   16523:	e8 38 df ff ff       	callq  14460 <cbuf_replayer>
   16528:	48 89 ef             	mov    %rbp,%rdi
   1652b:	89 c3                	mov    %eax,%ebx
   1652d:	e8 4e d4 ff ff       	callq  13980 <cbuf_is_valid>
   16532:	85 c0                	test   %eax,%eax
   16534:	0f 84 cd 00 00 00    	je     16607 <cbuf_replay+0x167>
   1653a:	4c 89 e7             	mov    %r12,%rdi
   1653d:	e8 ae 9e ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16542:	89 c5                	mov    %eax,%ebp
   16544:	85 c0                	test   %eax,%eax
   16546:	74 8c                	je     164d4 <cbuf_replay+0x34>
   16548:	e8 c3 95 ff ff       	callq  fb10 <__errno_location@plt>
   1654d:	89 ef                	mov    %ebp,%edi
   1654f:	89 28                	mov    %ebp,(%rax)
   16551:	e8 7a a4 ff ff       	callq  109d0 <strerror@plt>
   16556:	4c 8d 0d dc 80 02 00 	lea    0x280dc(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   1655d:	41 b8 3a 02 00 00    	mov    $0x23a,%r8d
   16563:	52                   	push   %rdx
   16564:	50                   	push   %rax
   16565:	48 8b 05 7c ca 23 00 	mov    0x23ca7c(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1656c:	48 8d 0d de 7d 02 00 	lea    0x27dde(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16573:	be 01 00 00 00       	mov    $0x1,%esi
   16578:	48 8d 15 93 80 02 00 	lea    0x28093(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   1657f:	48 8b 38             	mov    (%rax),%rdi
   16582:	31 c0                	xor    %eax,%eax
   16584:	e8 d7 a3 ff ff       	callq  10960 <__fprintf_chk@plt>
   16589:	e8 62 95 ff ff       	callq  faf0 <abort@plt>
   1658e:	66 90                	xchg   %ax,%ax
   16590:	e8 7b 95 ff ff       	callq  fb10 <__errno_location@plt>
   16595:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1659a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   165a0:	e9 2f ff ff ff       	jmpq   164d4 <cbuf_replay+0x34>
   165a5:	48 8d 0d 7c 84 02 00 	lea    0x2847c(%rip),%rcx        # 3ea28 <__PRETTY_FUNCTION__.5597>
   165ac:	ba 2d 02 00 00       	mov    $0x22d,%edx
   165b1:	48 8d 35 99 7d 02 00 	lea    0x27d99(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   165b8:	48 8d 3d 68 7f 02 00 	lea    0x27f68(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   165bf:	e8 3c 9a ff ff       	callq  10000 <__assert_fail@plt>
   165c4:	e8 47 95 ff ff       	callq  fb10 <__errno_location@plt>
   165c9:	44 89 ef             	mov    %r13d,%edi
   165cc:	44 89 28             	mov    %r13d,(%rax)
   165cf:	e8 fc a3 ff ff       	callq  109d0 <strerror@plt>
   165d4:	4c 8d 0d 4e 80 02 00 	lea    0x2804e(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   165db:	41 b8 36 02 00 00    	mov    $0x236,%r8d
   165e1:	51                   	push   %rcx
   165e2:	50                   	push   %rax
   165e3:	e9 7d ff ff ff       	jmpq   16565 <cbuf_replay+0xc5>
   165e8:	48 8d 0d 39 84 02 00 	lea    0x28439(%rip),%rcx        # 3ea28 <__PRETTY_FUNCTION__.5597>
   165ef:	ba 37 02 00 00       	mov    $0x237,%edx
   165f4:	48 8d 35 56 7d 02 00 	lea    0x27d56(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   165fb:	48 8d 3d 5c 80 02 00 	lea    0x2805c(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16602:	e8 f9 99 ff ff       	callq  10000 <__assert_fail@plt>
   16607:	48 8d 0d 1a 84 02 00 	lea    0x2841a(%rip),%rcx        # 3ea28 <__PRETTY_FUNCTION__.5597>
   1660e:	ba 39 02 00 00       	mov    $0x239,%edx
   16613:	48 8d 35 37 7d 02 00 	lea    0x27d37(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1661a:	48 8d 3d 3d 80 02 00 	lea    0x2803d(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16621:	e8 da 99 ff ff       	callq  10000 <__assert_fail@plt>

0000000000016626 <.annobin_cbuf_replay.end>:
   16626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1662d:	00 00 00 

0000000000016630 <cbuf_rewind>:
   16630:	f3 0f 1e fa          	endbr64 
   16634:	41 55                	push   %r13
   16636:	41 54                	push   %r12
   16638:	55                   	push   %rbp
   16639:	53                   	push   %rbx
   1663a:	48 83 ec 08          	sub    $0x8,%rsp
   1663e:	48 85 ff             	test   %rdi,%rdi
   16641:	0f 84 05 01 00 00    	je     1674c <cbuf_rewind+0x11c>
   16647:	89 f3                	mov    %esi,%ebx
   16649:	83 fe ff             	cmp    $0xffffffff,%esi
   1664c:	0f 8c e5 00 00 00    	jl     16737 <cbuf_rewind+0x107>
   16652:	85 f6                	test   %esi,%esi
   16654:	75 12                	jne    16668 <cbuf_rewind+0x38>
   16656:	48 83 c4 08          	add    $0x8,%rsp
   1665a:	89 d8                	mov    %ebx,%eax
   1665c:	5b                   	pop    %rbx
   1665d:	5d                   	pop    %rbp
   1665e:	41 5c                	pop    %r12
   16660:	41 5d                	pop    %r13
   16662:	c3                   	retq   
   16663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16668:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   1666c:	48 89 fd             	mov    %rdi,%rbp
   1666f:	4c 89 e7             	mov    %r12,%rdi
   16672:	e8 59 a4 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   16677:	41 89 c5             	mov    %eax,%r13d
   1667a:	85 c0                	test   %eax,%eax
   1667c:	0f 85 e9 00 00 00    	jne    1676b <cbuf_rewind+0x13b>
   16682:	48 89 ef             	mov    %rbp,%rdi
   16685:	e8 f6 d2 ff ff       	callq  13980 <cbuf_is_valid>
   1668a:	85 c0                	test   %eax,%eax
   1668c:	0f 84 fd 00 00 00    	je     1678f <cbuf_rewind+0x15f>
   16692:	8b 45 3c             	mov    0x3c(%rbp),%eax
   16695:	8b 75 50             	mov    0x50(%rbp),%esi
   16698:	8d 48 01             	lea    0x1(%rax),%ecx
   1669b:	89 f0                	mov    %esi,%eax
   1669d:	2b 45 54             	sub    0x54(%rbp),%eax
   166a0:	01 c8                	add    %ecx,%eax
   166a2:	99                   	cltd   
   166a3:	f7 f9                	idiv   %ecx
   166a5:	83 fb ff             	cmp    $0xffffffff,%ebx
   166a8:	0f 84 82 00 00 00    	je     16730 <cbuf_rewind+0x100>
   166ae:	39 d3                	cmp    %edx,%ebx
   166b0:	0f 4f da             	cmovg  %edx,%ebx
   166b3:	85 db                	test   %ebx,%ebx
   166b5:	7e 0e                	jle    166c5 <cbuf_rewind+0x95>
   166b7:	29 de                	sub    %ebx,%esi
   166b9:	01 5d 40             	add    %ebx,0x40(%rbp)
   166bc:	8d 04 0e             	lea    (%rsi,%rcx,1),%eax
   166bf:	99                   	cltd   
   166c0:	f7 f9                	idiv   %ecx
   166c2:	89 55 50             	mov    %edx,0x50(%rbp)
   166c5:	48 89 ef             	mov    %rbp,%rdi
   166c8:	e8 b3 d2 ff ff       	callq  13980 <cbuf_is_valid>
   166cd:	85 c0                	test   %eax,%eax
   166cf:	0f 84 d9 00 00 00    	je     167ae <cbuf_rewind+0x17e>
   166d5:	4c 89 e7             	mov    %r12,%rdi
   166d8:	e8 13 9d ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   166dd:	89 c5                	mov    %eax,%ebp
   166df:	85 c0                	test   %eax,%eax
   166e1:	0f 84 6f ff ff ff    	je     16656 <cbuf_rewind+0x26>
   166e7:	e8 24 94 ff ff       	callq  fb10 <__errno_location@plt>
   166ec:	89 ef                	mov    %ebp,%edi
   166ee:	89 28                	mov    %ebp,(%rax)
   166f0:	e8 db a2 ff ff       	callq  109d0 <strerror@plt>
   166f5:	4c 8d 0d 3d 7f 02 00 	lea    0x27f3d(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   166fc:	41 b8 5c 02 00 00    	mov    $0x25c,%r8d
   16702:	52                   	push   %rdx
   16703:	50                   	push   %rax
   16704:	48 8b 05 dd c8 23 00 	mov    0x23c8dd(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1670b:	48 8d 0d 3f 7c 02 00 	lea    0x27c3f(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16712:	be 01 00 00 00       	mov    $0x1,%esi
   16717:	48 8d 15 f4 7e 02 00 	lea    0x27ef4(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   1671e:	48 8b 38             	mov    (%rax),%rdi
   16721:	31 c0                	xor    %eax,%eax
   16723:	e8 38 a2 ff ff       	callq  10960 <__fprintf_chk@plt>
   16728:	e8 c3 93 ff ff       	callq  faf0 <abort@plt>
   1672d:	0f 1f 00             	nopl   (%rax)
   16730:	89 d3                	mov    %edx,%ebx
   16732:	e9 7c ff ff ff       	jmpq   166b3 <cbuf_rewind+0x83>
   16737:	e8 d4 93 ff ff       	callq  fb10 <__errno_location@plt>
   1673c:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   16741:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16747:	e9 0a ff ff ff       	jmpq   16656 <cbuf_rewind+0x26>
   1674c:	48 8d 0d b5 82 02 00 	lea    0x282b5(%rip),%rcx        # 3ea08 <__PRETTY_FUNCTION__.5605>
   16753:	ba 44 02 00 00       	mov    $0x244,%edx
   16758:	48 8d 35 f2 7b 02 00 	lea    0x27bf2(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1675f:	48 8d 3d c1 7d 02 00 	lea    0x27dc1(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   16766:	e8 95 98 ff ff       	callq  10000 <__assert_fail@plt>
   1676b:	e8 a0 93 ff ff       	callq  fb10 <__errno_location@plt>
   16770:	44 89 ef             	mov    %r13d,%edi
   16773:	44 89 28             	mov    %r13d,(%rax)
   16776:	e8 55 a2 ff ff       	callq  109d0 <strerror@plt>
   1677b:	4c 8d 0d a7 7e 02 00 	lea    0x27ea7(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   16782:	41 b8 4d 02 00 00    	mov    $0x24d,%r8d
   16788:	51                   	push   %rcx
   16789:	50                   	push   %rax
   1678a:	e9 75 ff ff ff       	jmpq   16704 <cbuf_rewind+0xd4>
   1678f:	48 8d 0d 72 82 02 00 	lea    0x28272(%rip),%rcx        # 3ea08 <__PRETTY_FUNCTION__.5605>
   16796:	ba 4e 02 00 00       	mov    $0x24e,%edx
   1679b:	48 8d 35 af 7b 02 00 	lea    0x27baf(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   167a2:	48 8d 3d b5 7e 02 00 	lea    0x27eb5(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   167a9:	e8 52 98 ff ff       	callq  10000 <__assert_fail@plt>
   167ae:	48 8d 0d 53 82 02 00 	lea    0x28253(%rip),%rcx        # 3ea08 <__PRETTY_FUNCTION__.5605>
   167b5:	ba 5b 02 00 00       	mov    $0x25b,%edx
   167ba:	48 8d 35 90 7b 02 00 	lea    0x27b90(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   167c1:	48 8d 3d 96 7e 02 00 	lea    0x27e96(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   167c8:	e8 33 98 ff ff       	callq  10000 <__assert_fail@plt>

00000000000167cd <.annobin_cbuf_rewind.end>:
   167cd:	0f 1f 00             	nopl   (%rax)

00000000000167d0 <cbuf_write>:
   167d0:	f3 0f 1e fa          	endbr64 
   167d4:	41 56                	push   %r14
   167d6:	41 55                	push   %r13
   167d8:	41 54                	push   %r12
   167da:	55                   	push   %rbp
   167db:	53                   	push   %rbx
   167dc:	48 83 ec 10          	sub    $0x10,%rsp
   167e0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   167e5:	48 85 ff             	test   %rdi,%rdi
   167e8:	0f 84 07 01 00 00    	je     168f5 <cbuf_write+0x125>
   167ee:	48 89 fd             	mov    %rdi,%rbp
   167f1:	89 d3                	mov    %edx,%ebx
   167f3:	49 89 cc             	mov    %rcx,%r12
   167f6:	48 85 c9             	test   %rcx,%rcx
   167f9:	74 06                	je     16801 <cbuf_write+0x31>
   167fb:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   16801:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   16807:	0f 84 d3 00 00 00    	je     168e0 <cbuf_write+0x110>
   1680d:	85 db                	test   %ebx,%ebx
   1680f:	0f 88 cb 00 00 00    	js     168e0 <cbuf_write+0x110>
   16815:	75 19                	jne    16830 <cbuf_write+0x60>
   16817:	48 83 c4 10          	add    $0x10,%rsp
   1681b:	89 d8                	mov    %ebx,%eax
   1681d:	5b                   	pop    %rbx
   1681e:	5d                   	pop    %rbp
   1681f:	41 5c                	pop    %r12
   16821:	41 5d                	pop    %r13
   16823:	41 5e                	pop    %r14
   16825:	c3                   	retq   
   16826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1682d:	00 00 00 
   16830:	4c 8d 6d 08          	lea    0x8(%rbp),%r13
   16834:	4c 89 ef             	mov    %r13,%rdi
   16837:	e8 94 a2 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1683c:	41 89 c6             	mov    %eax,%r14d
   1683f:	85 c0                	test   %eax,%eax
   16841:	0f 85 cd 00 00 00    	jne    16914 <cbuf_write+0x144>
   16847:	48 89 ef             	mov    %rbp,%rdi
   1684a:	e8 31 d1 ff ff       	callq  13980 <cbuf_is_valid>
   1684f:	85 c0                	test   %eax,%eax
   16851:	0f 84 e1 00 00 00    	je     16938 <cbuf_write+0x168>
   16857:	89 de                	mov    %ebx,%esi
   16859:	48 89 ef             	mov    %rbp,%rdi
   1685c:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   16861:	4d 89 e0             	mov    %r12,%r8
   16864:	48 8d 15 f5 e5 ff ff 	lea    -0x1a0b(%rip),%rdx        # 14e60 <cbuf_get_mem>
   1686b:	e8 50 df ff ff       	callq  147c0 <cbuf_writer>
   16870:	48 89 ef             	mov    %rbp,%rdi
   16873:	89 c3                	mov    %eax,%ebx
   16875:	e8 06 d1 ff ff       	callq  13980 <cbuf_is_valid>
   1687a:	85 c0                	test   %eax,%eax
   1687c:	0f 84 d5 00 00 00    	je     16957 <cbuf_write+0x187>
   16882:	4c 89 ef             	mov    %r13,%rdi
   16885:	e8 66 9b ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   1688a:	89 c5                	mov    %eax,%ebp
   1688c:	85 c0                	test   %eax,%eax
   1688e:	74 87                	je     16817 <cbuf_write+0x47>
   16890:	e8 7b 92 ff ff       	callq  fb10 <__errno_location@plt>
   16895:	89 ef                	mov    %ebp,%edi
   16897:	89 28                	mov    %ebp,(%rax)
   16899:	e8 32 a1 ff ff       	callq  109d0 <strerror@plt>
   1689e:	4c 8d 0d 94 7d 02 00 	lea    0x27d94(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   168a5:	41 b8 76 02 00 00    	mov    $0x276,%r8d
   168ab:	52                   	push   %rdx
   168ac:	50                   	push   %rax
   168ad:	48 8b 05 34 c7 23 00 	mov    0x23c734(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   168b4:	48 8d 0d 96 7a 02 00 	lea    0x27a96(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   168bb:	be 01 00 00 00       	mov    $0x1,%esi
   168c0:	48 8d 15 4b 7d 02 00 	lea    0x27d4b(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   168c7:	48 8b 38             	mov    (%rax),%rdi
   168ca:	31 c0                	xor    %eax,%eax
   168cc:	e8 8f a0 ff ff       	callq  10960 <__fprintf_chk@plt>
   168d1:	e8 1a 92 ff ff       	callq  faf0 <abort@plt>
   168d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   168dd:	00 00 00 
   168e0:	e8 2b 92 ff ff       	callq  fb10 <__errno_location@plt>
   168e5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   168ea:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   168f0:	e9 22 ff ff ff       	jmpq   16817 <cbuf_write+0x47>
   168f5:	48 8d 0d fc 80 02 00 	lea    0x280fc(%rip),%rcx        # 3e9f8 <__PRETTY_FUNCTION__.5615>
   168fc:	ba 66 02 00 00       	mov    $0x266,%edx
   16901:	48 8d 35 49 7a 02 00 	lea    0x27a49(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16908:	48 8d 3d 72 7c 02 00 	lea    0x27c72(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   1690f:	e8 ec 96 ff ff       	callq  10000 <__assert_fail@plt>
   16914:	e8 f7 91 ff ff       	callq  fb10 <__errno_location@plt>
   16919:	44 89 f7             	mov    %r14d,%edi
   1691c:	44 89 30             	mov    %r14d,(%rax)
   1691f:	e8 ac a0 ff ff       	callq  109d0 <strerror@plt>
   16924:	4c 8d 0d fe 7c 02 00 	lea    0x27cfe(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1692b:	41 b8 72 02 00 00    	mov    $0x272,%r8d
   16931:	51                   	push   %rcx
   16932:	50                   	push   %rax
   16933:	e9 75 ff ff ff       	jmpq   168ad <cbuf_write+0xdd>
   16938:	48 8d 0d b9 80 02 00 	lea    0x280b9(%rip),%rcx        # 3e9f8 <__PRETTY_FUNCTION__.5615>
   1693f:	ba 73 02 00 00       	mov    $0x273,%edx
   16944:	48 8d 35 06 7a 02 00 	lea    0x27a06(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1694b:	48 8d 3d 20 7d 02 00 	lea    0x27d20(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   16952:	e8 a9 96 ff ff       	callq  10000 <__assert_fail@plt>
   16957:	48 8d 0d 9a 80 02 00 	lea    0x2809a(%rip),%rcx        # 3e9f8 <__PRETTY_FUNCTION__.5615>
   1695e:	ba 75 02 00 00       	mov    $0x275,%edx
   16963:	48 8d 35 e7 79 02 00 	lea    0x279e7(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1696a:	48 8d 3d 01 7d 02 00 	lea    0x27d01(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   16971:	e8 8a 96 ff ff       	callq  10000 <__assert_fail@plt>

0000000000016976 <.annobin_cbuf_drop_line.start>:
   16976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1697d:	00 00 00 

0000000000016980 <cbuf_drop_line>:
   16980:	f3 0f 1e fa          	endbr64 
   16984:	41 55                	push   %r13
   16986:	41 54                	push   %r12
   16988:	55                   	push   %rbp
   16989:	53                   	push   %rbx
   1698a:	48 83 ec 18          	sub    $0x18,%rsp
   1698e:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   16992:	48 85 ff             	test   %rdi,%rdi
   16995:	0f 84 f2 00 00 00    	je     16a8d <cbuf_drop_line+0x10d>
   1699b:	41 89 f4             	mov    %esi,%r12d
   1699e:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   169a2:	85 f6                	test   %esi,%esi
   169a4:	0f 88 ce 00 00 00    	js     16a78 <cbuf_drop_line+0xf8>
   169aa:	83 fb ff             	cmp    $0xffffffff,%ebx
   169ad:	0f 8c c5 00 00 00    	jl     16a78 <cbuf_drop_line+0xf8>
   169b3:	85 db                	test   %ebx,%ebx
   169b5:	75 11                	jne    169c8 <cbuf_drop_line+0x48>
   169b7:	48 83 c4 18          	add    $0x18,%rsp
   169bb:	89 d8                	mov    %ebx,%eax
   169bd:	5b                   	pop    %rbx
   169be:	5d                   	pop    %rbp
   169bf:	41 5c                	pop    %r12
   169c1:	41 5d                	pop    %r13
   169c3:	c3                   	retq   
   169c4:	0f 1f 40 00          	nopl   0x0(%rax)
   169c8:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   169cc:	48 89 fd             	mov    %rdi,%rbp
   169cf:	4c 89 ef             	mov    %r13,%rdi
   169d2:	e8 f9 a0 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   169d7:	89 c3                	mov    %eax,%ebx
   169d9:	85 c0                	test   %eax,%eax
   169db:	0f 85 cb 00 00 00    	jne    16aac <cbuf_drop_line+0x12c>
   169e1:	48 89 ef             	mov    %rbp,%rdi
   169e4:	e8 97 cf ff ff       	callq  13980 <cbuf_is_valid>
   169e9:	85 c0                	test   %eax,%eax
   169eb:	0f 84 dd 00 00 00    	je     16ace <cbuf_drop_line+0x14e>
   169f1:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   169f6:	44 89 e6             	mov    %r12d,%esi
   169f9:	48 89 ef             	mov    %rbp,%rdi
   169fc:	e8 ff d3 ff ff       	callq  13e00 <cbuf_find_unread_line>
   16a01:	89 c3                	mov    %eax,%ebx
   16a03:	85 c0                	test   %eax,%eax
   16a05:	7e 0a                	jle    16a11 <cbuf_drop_line+0x91>
   16a07:	89 c6                	mov    %eax,%esi
   16a09:	48 89 ef             	mov    %rbp,%rdi
   16a0c:	e8 3f d7 ff ff       	callq  14150 <cbuf_dropper>
   16a11:	48 89 ef             	mov    %rbp,%rdi
   16a14:	e8 67 cf ff ff       	callq  13980 <cbuf_is_valid>
   16a19:	85 c0                	test   %eax,%eax
   16a1b:	0f 84 cc 00 00 00    	je     16aed <cbuf_drop_line+0x16d>
   16a21:	4c 89 ef             	mov    %r13,%rdi
   16a24:	e8 c7 99 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16a29:	89 c5                	mov    %eax,%ebp
   16a2b:	85 c0                	test   %eax,%eax
   16a2d:	74 88                	je     169b7 <cbuf_drop_line+0x37>
   16a2f:	e8 dc 90 ff ff       	callq  fb10 <__errno_location@plt>
   16a34:	89 ef                	mov    %ebp,%edi
   16a36:	89 28                	mov    %ebp,(%rax)
   16a38:	e8 93 9f ff ff       	callq  109d0 <strerror@plt>
   16a3d:	4c 8d 0d f5 7b 02 00 	lea    0x27bf5(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   16a44:	41 b8 91 02 00 00    	mov    $0x291,%r8d
   16a4a:	52                   	push   %rdx
   16a4b:	50                   	push   %rax
   16a4c:	48 8b 05 95 c5 23 00 	mov    0x23c595(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   16a53:	48 8d 0d f7 78 02 00 	lea    0x278f7(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16a5a:	be 01 00 00 00       	mov    $0x1,%esi
   16a5f:	48 8d 15 ac 7b 02 00 	lea    0x27bac(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   16a66:	48 8b 38             	mov    (%rax),%rdi
   16a69:	31 c0                	xor    %eax,%eax
   16a6b:	e8 f0 9e ff ff       	callq  10960 <__fprintf_chk@plt>
   16a70:	e8 7b 90 ff ff       	callq  faf0 <abort@plt>
   16a75:	0f 1f 00             	nopl   (%rax)
   16a78:	e8 93 90 ff ff       	callq  fb10 <__errno_location@plt>
   16a7d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   16a82:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16a88:	e9 2a ff ff ff       	jmpq   169b7 <cbuf_drop_line+0x37>
   16a8d:	48 8d 0d 24 7f 02 00 	lea    0x27f24(%rip),%rcx        # 3e9b8 <__PRETTY_FUNCTION__.5624>
   16a94:	ba 80 02 00 00       	mov    $0x280,%edx
   16a99:	48 8d 35 b1 78 02 00 	lea    0x278b1(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16aa0:	48 8d 3d 80 7a 02 00 	lea    0x27a80(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   16aa7:	e8 54 95 ff ff       	callq  10000 <__assert_fail@plt>
   16aac:	e8 5f 90 ff ff       	callq  fb10 <__errno_location@plt>
   16ab1:	89 df                	mov    %ebx,%edi
   16ab3:	89 18                	mov    %ebx,(%rax)
   16ab5:	e8 16 9f ff ff       	callq  109d0 <strerror@plt>
   16aba:	4c 8d 0d 68 7b 02 00 	lea    0x27b68(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   16ac1:	41 b8 89 02 00 00    	mov    $0x289,%r8d
   16ac7:	51                   	push   %rcx
   16ac8:	50                   	push   %rax
   16ac9:	e9 7e ff ff ff       	jmpq   16a4c <cbuf_drop_line+0xcc>
   16ace:	48 8d 0d e3 7e 02 00 	lea    0x27ee3(%rip),%rcx        # 3e9b8 <__PRETTY_FUNCTION__.5624>
   16ad5:	ba 8a 02 00 00       	mov    $0x28a,%edx
   16ada:	48 8d 35 70 78 02 00 	lea    0x27870(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16ae1:	48 8d 3d 76 7b 02 00 	lea    0x27b76(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16ae8:	e8 13 95 ff ff       	callq  10000 <__assert_fail@plt>
   16aed:	48 8d 0d c4 7e 02 00 	lea    0x27ec4(%rip),%rcx        # 3e9b8 <__PRETTY_FUNCTION__.5624>
   16af4:	ba 90 02 00 00       	mov    $0x290,%edx
   16af9:	48 8d 35 51 78 02 00 	lea    0x27851(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16b00:	48 8d 3d 57 7b 02 00 	lea    0x27b57(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16b07:	e8 f4 94 ff ff       	callq  10000 <__assert_fail@plt>

0000000000016b0c <.annobin_cbuf_drop_line.end>:
   16b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016b10 <cbuf_peek_line>:
   16b10:	f3 0f 1e fa          	endbr64 
   16b14:	41 57                	push   %r15
   16b16:	41 56                	push   %r14
   16b18:	41 55                	push   %r13
   16b1a:	41 54                	push   %r12
   16b1c:	55                   	push   %rbp
   16b1d:	53                   	push   %rbx
   16b1e:	48 83 ec 28          	sub    $0x28,%rsp
   16b22:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   16b26:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b2d:	00 00 
   16b2f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   16b34:	31 c0                	xor    %eax,%eax
   16b36:	48 85 ff             	test   %rdi,%rdi
   16b39:	0f 84 8b 01 00 00    	je     16cca <cbuf_peek_line+0x1ba>
   16b3f:	49 89 f5             	mov    %rsi,%r13
   16b42:	48 85 f6             	test   %rsi,%rsi
   16b45:	0f 84 65 01 00 00    	je     16cb0 <cbuf_peek_line+0x1a0>
   16b4b:	41 89 d4             	mov    %edx,%r12d
   16b4e:	85 d2                	test   %edx,%edx
   16b50:	0f 88 5a 01 00 00    	js     16cb0 <cbuf_peek_line+0x1a0>
   16b56:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   16b5a:	83 fb ff             	cmp    $0xffffffff,%ebx
   16b5d:	0f 8c 4d 01 00 00    	jl     16cb0 <cbuf_peek_line+0x1a0>
   16b63:	85 db                	test   %ebx,%ebx
   16b65:	75 29                	jne    16b90 <cbuf_peek_line+0x80>
   16b67:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   16b6c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16b73:	00 00 
   16b75:	89 d8                	mov    %ebx,%eax
   16b77:	0f 85 48 01 00 00    	jne    16cc5 <cbuf_peek_line+0x1b5>
   16b7d:	48 83 c4 28          	add    $0x28,%rsp
   16b81:	5b                   	pop    %rbx
   16b82:	5d                   	pop    %rbp
   16b83:	41 5c                	pop    %r12
   16b85:	41 5d                	pop    %r13
   16b87:	41 5e                	pop    %r14
   16b89:	41 5f                	pop    %r15
   16b8b:	c3                   	retq   
   16b8c:	0f 1f 40 00          	nopl   0x0(%rax)
   16b90:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   16b94:	48 89 fd             	mov    %rdi,%rbp
   16b97:	4c 89 ff             	mov    %r15,%rdi
   16b9a:	e8 31 9f ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   16b9f:	89 c3                	mov    %eax,%ebx
   16ba1:	85 c0                	test   %eax,%eax
   16ba3:	0f 85 5f 01 00 00    	jne    16d08 <cbuf_peek_line+0x1f8>
   16ba9:	48 89 ef             	mov    %rbp,%rdi
   16bac:	e8 cf cd ff ff       	callq  13980 <cbuf_is_valid>
   16bb1:	85 c0                	test   %eax,%eax
   16bb3:	0f 84 71 01 00 00    	je     16d2a <cbuf_peek_line+0x21a>
   16bb9:	45 8d 74 24 ff       	lea    -0x1(%r12),%r14d
   16bbe:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   16bc3:	48 89 ef             	mov    %rbp,%rdi
   16bc6:	44 89 f6             	mov    %r14d,%esi
   16bc9:	e8 32 d2 ff ff       	callq  13e00 <cbuf_find_unread_line>
   16bce:	89 c3                	mov    %eax,%ebx
   16bd0:	85 c0                	test   %eax,%eax
   16bd2:	7e 29                	jle    16bfd <cbuf_peek_line+0xed>
   16bd4:	45 85 e4             	test   %r12d,%r12d
   16bd7:	74 24                	je     16bfd <cbuf_peek_line+0xed>
   16bd9:	41 39 c4             	cmp    %eax,%r12d
   16bdc:	0f 8f 86 00 00 00    	jg     16c68 <cbuf_peek_line+0x158>
   16be2:	45 85 f6             	test   %r14d,%r14d
   16be5:	0f 85 7d 01 00 00    	jne    16d68 <cbuf_peek_line+0x258>
   16beb:	45 39 f4             	cmp    %r14d,%r12d
   16bee:	0f 8e 55 01 00 00    	jle    16d49 <cbuf_peek_line+0x239>
   16bf4:	4d 63 f6             	movslq %r14d,%r14
   16bf7:	43 c6 44 35 00 00    	movb   $0x0,0x0(%r13,%r14,1)
   16bfd:	48 89 ef             	mov    %rbp,%rdi
   16c00:	e8 7b cd ff ff       	callq  13980 <cbuf_is_valid>
   16c05:	85 c0                	test   %eax,%eax
   16c07:	0f 84 dc 00 00 00    	je     16ce9 <cbuf_peek_line+0x1d9>
   16c0d:	4c 89 ff             	mov    %r15,%rdi
   16c10:	e8 db 97 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16c15:	89 c5                	mov    %eax,%ebp
   16c17:	85 c0                	test   %eax,%eax
   16c19:	0f 84 48 ff ff ff    	je     16b67 <cbuf_peek_line+0x57>
   16c1f:	e8 ec 8e ff ff       	callq  fb10 <__errno_location@plt>
   16c24:	89 ef                	mov    %ebp,%edi
   16c26:	89 28                	mov    %ebp,(%rax)
   16c28:	e8 a3 9d ff ff       	callq  109d0 <strerror@plt>
   16c2d:	4c 8d 0d 05 7a 02 00 	lea    0x27a05(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   16c34:	41 b8 b5 02 00 00    	mov    $0x2b5,%r8d
   16c3a:	52                   	push   %rdx
   16c3b:	50                   	push   %rax
   16c3c:	48 8b 05 a5 c3 23 00 	mov    0x23c3a5(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   16c43:	48 8d 0d 07 77 02 00 	lea    0x27707(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16c4a:	be 01 00 00 00       	mov    $0x1,%esi
   16c4f:	48 8d 15 bc 79 02 00 	lea    0x279bc(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   16c56:	48 8b 38             	mov    (%rax),%rdi
   16c59:	31 c0                	xor    %eax,%eax
   16c5b:	e8 00 9d ff ff       	callq  10960 <__fprintf_chk@plt>
   16c60:	e8 8b 8e ff ff       	callq  faf0 <abort@plt>
   16c65:	0f 1f 00             	nopl   (%rax)
   16c68:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   16c6d:	89 c6                	mov    %eax,%esi
   16c6f:	48 89 ef             	mov    %rbp,%rdi
   16c72:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   16c77:	48 8d 15 22 e1 ff ff 	lea    -0x1ede(%rip),%rdx        # 14da0 <cbuf_put_mem>
   16c7e:	e8 5d d6 ff ff       	callq  142e0 <cbuf_reader>
   16c83:	41 89 c6             	mov    %eax,%r14d
   16c86:	39 c3                	cmp    %eax,%ebx
   16c88:	0f 84 66 ff ff ff    	je     16bf4 <cbuf_peek_line+0xe4>
   16c8e:	48 8d 0d 13 7d 02 00 	lea    0x27d13(%rip),%rcx        # 3e9a8 <__PRETTY_FUNCTION__.5637>
   16c95:	ba ae 02 00 00       	mov    $0x2ae,%edx
   16c9a:	48 8d 35 b0 76 02 00 	lea    0x276b0(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16ca1:	48 8d 3d de 79 02 00 	lea    0x279de(%rip),%rdi        # 3e686 <__PRETTY_FUNCTION__.5439+0x346>
   16ca8:	e8 53 93 ff ff       	callq  10000 <__assert_fail@plt>
   16cad:	0f 1f 00             	nopl   (%rax)
   16cb0:	e8 5b 8e ff ff       	callq  fb10 <__errno_location@plt>
   16cb5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   16cba:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16cc0:	e9 a2 fe ff ff       	jmpq   16b67 <cbuf_peek_line+0x57>
   16cc5:	e8 86 91 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   16cca:	48 8d 0d d7 7c 02 00 	lea    0x27cd7(%rip),%rcx        # 3e9a8 <__PRETTY_FUNCTION__.5637>
   16cd1:	ba 9c 02 00 00       	mov    $0x29c,%edx
   16cd6:	48 8d 35 74 76 02 00 	lea    0x27674(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16cdd:	48 8d 3d 43 78 02 00 	lea    0x27843(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   16ce4:	e8 17 93 ff ff       	callq  10000 <__assert_fail@plt>
   16ce9:	48 8d 0d b8 7c 02 00 	lea    0x27cb8(%rip),%rcx        # 3e9a8 <__PRETTY_FUNCTION__.5637>
   16cf0:	ba b4 02 00 00       	mov    $0x2b4,%edx
   16cf5:	48 8d 35 55 76 02 00 	lea    0x27655(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16cfc:	48 8d 3d 5b 79 02 00 	lea    0x2795b(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16d03:	e8 f8 92 ff ff       	callq  10000 <__assert_fail@plt>
   16d08:	e8 03 8e ff ff       	callq  fb10 <__errno_location@plt>
   16d0d:	89 df                	mov    %ebx,%edi
   16d0f:	89 18                	mov    %ebx,(%rax)
   16d11:	e8 ba 9c ff ff       	callq  109d0 <strerror@plt>
   16d16:	4c 8d 0d 0c 79 02 00 	lea    0x2790c(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   16d1d:	41 b8 a5 02 00 00    	mov    $0x2a5,%r8d
   16d23:	51                   	push   %rcx
   16d24:	50                   	push   %rax
   16d25:	e9 12 ff ff ff       	jmpq   16c3c <cbuf_peek_line+0x12c>
   16d2a:	48 8d 0d 77 7c 02 00 	lea    0x27c77(%rip),%rcx        # 3e9a8 <__PRETTY_FUNCTION__.5637>
   16d31:	ba a6 02 00 00       	mov    $0x2a6,%edx
   16d36:	48 8d 35 14 76 02 00 	lea    0x27614(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16d3d:	48 8d 3d 1a 79 02 00 	lea    0x2791a(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16d44:	e8 b7 92 ff ff       	callq  10000 <__assert_fail@plt>
   16d49:	48 8d 0d 58 7c 02 00 	lea    0x27c58(%rip),%rcx        # 3e9a8 <__PRETTY_FUNCTION__.5637>
   16d50:	ba b0 02 00 00       	mov    $0x2b0,%edx
   16d55:	48 8d 35 f5 75 02 00 	lea    0x275f5(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16d5c:	48 8d 3d 2a 79 02 00 	lea    0x2792a(%rip),%rdi        # 3e68d <__PRETTY_FUNCTION__.5439+0x34d>
   16d63:	e8 98 92 ff ff       	callq  10000 <__assert_fail@plt>
   16d68:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   16d6d:	44 89 f6             	mov    %r14d,%esi
   16d70:	48 89 ef             	mov    %rbp,%rdi
   16d73:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   16d78:	48 8d 15 21 e0 ff ff 	lea    -0x1fdf(%rip),%rdx        # 14da0 <cbuf_put_mem>
   16d7f:	e8 5c d5 ff ff       	callq  142e0 <cbuf_reader>
   16d84:	41 39 c6             	cmp    %eax,%r14d
   16d87:	0f 84 5e fe ff ff    	je     16beb <cbuf_peek_line+0xdb>
   16d8d:	e9 fc fe ff ff       	jmpq   16c8e <cbuf_peek_line+0x17e>

0000000000016d92 <.annobin_cbuf_peek_line.end>:
   16d92:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   16d99:	00 00 00 00 
   16d9d:	0f 1f 00             	nopl   (%rax)

0000000000016da0 <cbuf_read_line>:
   16da0:	f3 0f 1e fa          	endbr64 
   16da4:	41 57                	push   %r15
   16da6:	41 56                	push   %r14
   16da8:	41 55                	push   %r13
   16daa:	41 54                	push   %r12
   16dac:	55                   	push   %rbp
   16dad:	53                   	push   %rbx
   16dae:	48 83 ec 28          	sub    $0x28,%rsp
   16db2:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   16db6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16dbd:	00 00 
   16dbf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   16dc4:	31 c0                	xor    %eax,%eax
   16dc6:	48 85 ff             	test   %rdi,%rdi
   16dc9:	0f 84 93 01 00 00    	je     16f62 <cbuf_read_line+0x1c2>
   16dcf:	49 89 f5             	mov    %rsi,%r13
   16dd2:	48 85 f6             	test   %rsi,%rsi
   16dd5:	0f 84 6d 01 00 00    	je     16f48 <cbuf_read_line+0x1a8>
   16ddb:	41 89 d4             	mov    %edx,%r12d
   16dde:	85 d2                	test   %edx,%edx
   16de0:	0f 88 62 01 00 00    	js     16f48 <cbuf_read_line+0x1a8>
   16de6:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   16dea:	83 fb ff             	cmp    $0xffffffff,%ebx
   16ded:	0f 8c 55 01 00 00    	jl     16f48 <cbuf_read_line+0x1a8>
   16df3:	85 db                	test   %ebx,%ebx
   16df5:	75 29                	jne    16e20 <cbuf_read_line+0x80>
   16df7:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   16dfc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   16e03:	00 00 
   16e05:	89 d8                	mov    %ebx,%eax
   16e07:	0f 85 50 01 00 00    	jne    16f5d <cbuf_read_line+0x1bd>
   16e0d:	48 83 c4 28          	add    $0x28,%rsp
   16e11:	5b                   	pop    %rbx
   16e12:	5d                   	pop    %rbp
   16e13:	41 5c                	pop    %r12
   16e15:	41 5d                	pop    %r13
   16e17:	41 5e                	pop    %r14
   16e19:	41 5f                	pop    %r15
   16e1b:	c3                   	retq   
   16e1c:	0f 1f 40 00          	nopl   0x0(%rax)
   16e20:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   16e24:	48 89 fd             	mov    %rdi,%rbp
   16e27:	4c 89 ff             	mov    %r15,%rdi
   16e2a:	e8 a1 9c ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   16e2f:	89 c3                	mov    %eax,%ebx
   16e31:	85 c0                	test   %eax,%eax
   16e33:	0f 85 67 01 00 00    	jne    16fa0 <cbuf_read_line+0x200>
   16e39:	48 89 ef             	mov    %rbp,%rdi
   16e3c:	e8 3f cb ff ff       	callq  13980 <cbuf_is_valid>
   16e41:	85 c0                	test   %eax,%eax
   16e43:	0f 84 79 01 00 00    	je     16fc2 <cbuf_read_line+0x222>
   16e49:	45 8d 74 24 ff       	lea    -0x1(%r12),%r14d
   16e4e:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   16e53:	48 89 ef             	mov    %rbp,%rdi
   16e56:	44 89 f6             	mov    %r14d,%esi
   16e59:	e8 a2 cf ff ff       	callq  13e00 <cbuf_find_unread_line>
   16e5e:	89 c3                	mov    %eax,%ebx
   16e60:	85 c0                	test   %eax,%eax
   16e62:	7e 33                	jle    16e97 <cbuf_read_line+0xf7>
   16e64:	45 85 e4             	test   %r12d,%r12d
   16e67:	74 24                	je     16e8d <cbuf_read_line+0xed>
   16e69:	41 39 c4             	cmp    %eax,%r12d
   16e6c:	0f 8f 8e 00 00 00    	jg     16f00 <cbuf_read_line+0x160>
   16e72:	45 85 f6             	test   %r14d,%r14d
   16e75:	0f 85 85 01 00 00    	jne    17000 <cbuf_read_line+0x260>
   16e7b:	45 39 f4             	cmp    %r14d,%r12d
   16e7e:	0f 8e 5d 01 00 00    	jle    16fe1 <cbuf_read_line+0x241>
   16e84:	4d 63 f6             	movslq %r14d,%r14
   16e87:	43 c6 44 35 00 00    	movb   $0x0,0x0(%r13,%r14,1)
   16e8d:	89 de                	mov    %ebx,%esi
   16e8f:	48 89 ef             	mov    %rbp,%rdi
   16e92:	e8 b9 d2 ff ff       	callq  14150 <cbuf_dropper>
   16e97:	48 89 ef             	mov    %rbp,%rdi
   16e9a:	e8 e1 ca ff ff       	callq  13980 <cbuf_is_valid>
   16e9f:	85 c0                	test   %eax,%eax
   16ea1:	0f 84 da 00 00 00    	je     16f81 <cbuf_read_line+0x1e1>
   16ea7:	4c 89 ff             	mov    %r15,%rdi
   16eaa:	e8 41 95 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   16eaf:	89 c5                	mov    %eax,%ebp
   16eb1:	85 c0                	test   %eax,%eax
   16eb3:	0f 84 3e ff ff ff    	je     16df7 <cbuf_read_line+0x57>
   16eb9:	e8 52 8c ff ff       	callq  fb10 <__errno_location@plt>
   16ebe:	89 ef                	mov    %ebp,%edi
   16ec0:	89 28                	mov    %ebp,(%rax)
   16ec2:	e8 09 9b ff ff       	callq  109d0 <strerror@plt>
   16ec7:	4c 8d 0d 6b 77 02 00 	lea    0x2776b(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   16ece:	41 b8 da 02 00 00    	mov    $0x2da,%r8d
   16ed4:	52                   	push   %rdx
   16ed5:	50                   	push   %rax
   16ed6:	48 8b 05 0b c1 23 00 	mov    0x23c10b(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   16edd:	48 8d 0d 6d 74 02 00 	lea    0x2746d(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16ee4:	be 01 00 00 00       	mov    $0x1,%esi
   16ee9:	48 8d 15 22 77 02 00 	lea    0x27722(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   16ef0:	48 8b 38             	mov    (%rax),%rdi
   16ef3:	31 c0                	xor    %eax,%eax
   16ef5:	e8 66 9a ff ff       	callq  10960 <__fprintf_chk@plt>
   16efa:	e8 f1 8b ff ff       	callq  faf0 <abort@plt>
   16eff:	90                   	nop
   16f00:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   16f05:	89 c6                	mov    %eax,%esi
   16f07:	48 89 ef             	mov    %rbp,%rdi
   16f0a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   16f0f:	48 8d 15 8a de ff ff 	lea    -0x2176(%rip),%rdx        # 14da0 <cbuf_put_mem>
   16f16:	e8 c5 d3 ff ff       	callq  142e0 <cbuf_reader>
   16f1b:	41 89 c6             	mov    %eax,%r14d
   16f1e:	39 c3                	cmp    %eax,%ebx
   16f20:	0f 84 5e ff ff ff    	je     16e84 <cbuf_read_line+0xe4>
   16f26:	48 8d 0d 6b 7a 02 00 	lea    0x27a6b(%rip),%rcx        # 3e998 <__PRETTY_FUNCTION__.5650>
   16f2d:	ba d2 02 00 00       	mov    $0x2d2,%edx
   16f32:	48 8d 35 18 74 02 00 	lea    0x27418(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16f39:	48 8d 3d 46 77 02 00 	lea    0x27746(%rip),%rdi        # 3e686 <__PRETTY_FUNCTION__.5439+0x346>
   16f40:	e8 bb 90 ff ff       	callq  10000 <__assert_fail@plt>
   16f45:	0f 1f 00             	nopl   (%rax)
   16f48:	e8 c3 8b ff ff       	callq  fb10 <__errno_location@plt>
   16f4d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   16f52:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   16f58:	e9 9a fe ff ff       	jmpq   16df7 <cbuf_read_line+0x57>
   16f5d:	e8 ee 8e ff ff       	callq  fe50 <__stack_chk_fail@plt>
   16f62:	48 8d 0d 2f 7a 02 00 	lea    0x27a2f(%rip),%rcx        # 3e998 <__PRETTY_FUNCTION__.5650>
   16f69:	ba c0 02 00 00       	mov    $0x2c0,%edx
   16f6e:	48 8d 35 dc 73 02 00 	lea    0x273dc(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16f75:	48 8d 3d ab 75 02 00 	lea    0x275ab(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   16f7c:	e8 7f 90 ff ff       	callq  10000 <__assert_fail@plt>
   16f81:	48 8d 0d 10 7a 02 00 	lea    0x27a10(%rip),%rcx        # 3e998 <__PRETTY_FUNCTION__.5650>
   16f88:	ba d9 02 00 00       	mov    $0x2d9,%edx
   16f8d:	48 8d 35 bd 73 02 00 	lea    0x273bd(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16f94:	48 8d 3d c3 76 02 00 	lea    0x276c3(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16f9b:	e8 60 90 ff ff       	callq  10000 <__assert_fail@plt>
   16fa0:	e8 6b 8b ff ff       	callq  fb10 <__errno_location@plt>
   16fa5:	89 df                	mov    %ebx,%edi
   16fa7:	89 18                	mov    %ebx,(%rax)
   16fa9:	e8 22 9a ff ff       	callq  109d0 <strerror@plt>
   16fae:	4c 8d 0d 74 76 02 00 	lea    0x27674(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   16fb5:	41 b8 c9 02 00 00    	mov    $0x2c9,%r8d
   16fbb:	51                   	push   %rcx
   16fbc:	50                   	push   %rax
   16fbd:	e9 14 ff ff ff       	jmpq   16ed6 <cbuf_read_line+0x136>
   16fc2:	48 8d 0d cf 79 02 00 	lea    0x279cf(%rip),%rcx        # 3e998 <__PRETTY_FUNCTION__.5650>
   16fc9:	ba ca 02 00 00       	mov    $0x2ca,%edx
   16fce:	48 8d 35 7c 73 02 00 	lea    0x2737c(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16fd5:	48 8d 3d 82 76 02 00 	lea    0x27682(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   16fdc:	e8 1f 90 ff ff       	callq  10000 <__assert_fail@plt>
   16fe1:	48 8d 0d b0 79 02 00 	lea    0x279b0(%rip),%rcx        # 3e998 <__PRETTY_FUNCTION__.5650>
   16fe8:	ba d4 02 00 00       	mov    $0x2d4,%edx
   16fed:	48 8d 35 5d 73 02 00 	lea    0x2735d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   16ff4:	48 8d 3d 92 76 02 00 	lea    0x27692(%rip),%rdi        # 3e68d <__PRETTY_FUNCTION__.5439+0x34d>
   16ffb:	e8 00 90 ff ff       	callq  10000 <__assert_fail@plt>
   17000:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   17005:	44 89 f6             	mov    %r14d,%esi
   17008:	48 89 ef             	mov    %rbp,%rdi
   1700b:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   17010:	48 8d 15 89 dd ff ff 	lea    -0x2277(%rip),%rdx        # 14da0 <cbuf_put_mem>
   17017:	e8 c4 d2 ff ff       	callq  142e0 <cbuf_reader>
   1701c:	41 39 c6             	cmp    %eax,%r14d
   1701f:	0f 84 56 fe ff ff    	je     16e7b <cbuf_read_line+0xdb>
   17025:	e9 fc fe ff ff       	jmpq   16f26 <cbuf_read_line+0x186>

000000000001702a <.annobin_cbuf_read_line.end>:
   1702a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017030 <cbuf_replay_line>:
   17030:	f3 0f 1e fa          	endbr64 
   17034:	41 57                	push   %r15
   17036:	41 56                	push   %r14
   17038:	41 55                	push   %r13
   1703a:	41 54                	push   %r12
   1703c:	55                   	push   %rbp
   1703d:	53                   	push   %rbx
   1703e:	48 83 ec 38          	sub    $0x38,%rsp
   17042:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   17046:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1704d:	00 00 
   1704f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17054:	31 c0                	xor    %eax,%eax
   17056:	48 85 ff             	test   %rdi,%rdi
   17059:	0f 84 bb 01 00 00    	je     1721a <cbuf_replay_line+0x1ea>
   1705f:	49 89 f6             	mov    %rsi,%r14
   17062:	48 85 f6             	test   %rsi,%rsi
   17065:	0f 84 95 01 00 00    	je     17200 <cbuf_replay_line+0x1d0>
   1706b:	41 89 d4             	mov    %edx,%r12d
   1706e:	85 d2                	test   %edx,%edx
   17070:	0f 88 8a 01 00 00    	js     17200 <cbuf_replay_line+0x1d0>
   17076:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   1707a:	83 fb ff             	cmp    $0xffffffff,%ebx
   1707d:	0f 8c 7d 01 00 00    	jl     17200 <cbuf_replay_line+0x1d0>
   17083:	85 db                	test   %ebx,%ebx
   17085:	75 29                	jne    170b0 <cbuf_replay_line+0x80>
   17087:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1708c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   17093:	00 00 
   17095:	89 d8                	mov    %ebx,%eax
   17097:	0f 85 78 01 00 00    	jne    17215 <cbuf_replay_line+0x1e5>
   1709d:	48 83 c4 38          	add    $0x38,%rsp
   170a1:	5b                   	pop    %rbx
   170a2:	5d                   	pop    %rbp
   170a3:	41 5c                	pop    %r12
   170a5:	41 5d                	pop    %r13
   170a7:	41 5e                	pop    %r14
   170a9:	41 5f                	pop    %r15
   170ab:	c3                   	retq   
   170ac:	0f 1f 40 00          	nopl   0x0(%rax)
   170b0:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   170b4:	48 89 fd             	mov    %rdi,%rbp
   170b7:	4c 89 ff             	mov    %r15,%rdi
   170ba:	e8 11 9a ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   170bf:	89 c3                	mov    %eax,%ebx
   170c1:	85 c0                	test   %eax,%eax
   170c3:	0f 85 8f 01 00 00    	jne    17258 <cbuf_replay_line+0x228>
   170c9:	48 89 ef             	mov    %rbp,%rdi
   170cc:	e8 af c8 ff ff       	callq  13980 <cbuf_is_valid>
   170d1:	85 c0                	test   %eax,%eax
   170d3:	0f 84 a1 01 00 00    	je     1727a <cbuf_replay_line+0x24a>
   170d9:	45 8d 6c 24 ff       	lea    -0x1(%r12),%r13d
   170de:	48 8d 4c 24 1c       	lea    0x1c(%rsp),%rcx
   170e3:	48 89 ef             	mov    %rbp,%rdi
   170e6:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   170eb:	44 89 ee             	mov    %r13d,%esi
   170ee:	e8 6d ce ff ff       	callq  13f60 <cbuf_find_replay_line>
   170f3:	89 c3                	mov    %eax,%ebx
   170f5:	85 c0                	test   %eax,%eax
   170f7:	7e 58                	jle    17151 <cbuf_replay_line+0x121>
   170f9:	45 85 e4             	test   %r12d,%r12d
   170fc:	74 53                	je     17151 <cbuf_replay_line+0x121>
   170fe:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   17102:	83 f8 01             	cmp    $0x1,%eax
   17105:	0f 87 ad 01 00 00    	ja     172b8 <cbuf_replay_line+0x288>
   1710b:	41 29 c5             	sub    %eax,%r13d
   1710e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   17114:	41 39 dd             	cmp    %ebx,%r13d
   17117:	44 0f 4f eb          	cmovg  %ebx,%r13d
   1711b:	45 85 ed             	test   %r13d,%r13d
   1711e:	45 0f 49 c5          	cmovns %r13d,%r8d
   17122:	0f 8f 98 00 00 00    	jg     171c0 <cbuf_replay_line+0x190>
   17128:	85 c0                	test   %eax,%eax
   1712a:	74 12                	je     1713e <cbuf_replay_line+0x10e>
   1712c:	41 83 fc 01          	cmp    $0x1,%r12d
   17130:	74 0c                	je     1713e <cbuf_replay_line+0x10e>
   17132:	49 63 d0             	movslq %r8d,%rdx
   17135:	41 83 c0 01          	add    $0x1,%r8d
   17139:	41 c6 04 16 0a       	movb   $0xa,(%r14,%rdx,1)
   1713e:	45 39 e0             	cmp    %r12d,%r8d
   17141:	0f 8d 52 01 00 00    	jge    17299 <cbuf_replay_line+0x269>
   17147:	4d 63 c0             	movslq %r8d,%r8
   1714a:	01 c3                	add    %eax,%ebx
   1714c:	43 c6 04 06 00       	movb   $0x0,(%r14,%r8,1)
   17151:	48 89 ef             	mov    %rbp,%rdi
   17154:	e8 27 c8 ff ff       	callq  13980 <cbuf_is_valid>
   17159:	85 c0                	test   %eax,%eax
   1715b:	0f 84 d8 00 00 00    	je     17239 <cbuf_replay_line+0x209>
   17161:	4c 89 ff             	mov    %r15,%rdi
   17164:	e8 87 92 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17169:	89 c5                	mov    %eax,%ebp
   1716b:	85 c0                	test   %eax,%eax
   1716d:	0f 84 14 ff ff ff    	je     17087 <cbuf_replay_line+0x57>
   17173:	e8 98 89 ff ff       	callq  fb10 <__errno_location@plt>
   17178:	89 ef                	mov    %ebp,%edi
   1717a:	89 28                	mov    %ebp,(%rax)
   1717c:	e8 4f 98 ff ff       	callq  109d0 <strerror@plt>
   17181:	4c 8d 0d b1 74 02 00 	lea    0x274b1(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   17188:	41 b8 07 03 00 00    	mov    $0x307,%r8d
   1718e:	52                   	push   %rdx
   1718f:	50                   	push   %rax
   17190:	48 8b 05 51 be 23 00 	mov    0x23be51(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   17197:	48 8d 0d b3 71 02 00 	lea    0x271b3(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1719e:	be 01 00 00 00       	mov    $0x1,%esi
   171a3:	48 8d 15 68 74 02 00 	lea    0x27468(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   171aa:	48 8b 38             	mov    (%rax),%rdi
   171ad:	31 c0                	xor    %eax,%eax
   171af:	e8 ac 97 ff ff       	callq  10960 <__fprintf_chk@plt>
   171b4:	e8 37 89 ff ff       	callq  faf0 <abort@plt>
   171b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   171c0:	44 89 c6             	mov    %r8d,%esi
   171c3:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   171c8:	48 89 ef             	mov    %rbp,%rdi
   171cb:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
   171d0:	48 8d 15 c9 db ff ff 	lea    -0x2437(%rip),%rdx        # 14da0 <cbuf_put_mem>
   171d7:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   171dc:	e8 7f d2 ff ff       	callq  14460 <cbuf_replayer>
   171e1:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
   171e6:	41 39 c0             	cmp    %eax,%r8d
   171e9:	0f 85 e8 00 00 00    	jne    172d7 <cbuf_replay_line+0x2a7>
   171ef:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   171f3:	e9 30 ff ff ff       	jmpq   17128 <cbuf_replay_line+0xf8>
   171f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   171ff:	00 
   17200:	e8 0b 89 ff ff       	callq  fb10 <__errno_location@plt>
   17205:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1720a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17210:	e9 72 fe ff ff       	jmpq   17087 <cbuf_replay_line+0x57>
   17215:	e8 36 8c ff ff       	callq  fe50 <__stack_chk_fail@plt>
   1721a:	48 8d 0d 5f 77 02 00 	lea    0x2775f(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   17221:	ba e6 02 00 00       	mov    $0x2e6,%edx
   17226:	48 8d 35 24 71 02 00 	lea    0x27124(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1722d:	48 8d 3d f3 72 02 00 	lea    0x272f3(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   17234:	e8 c7 8d ff ff       	callq  10000 <__assert_fail@plt>
   17239:	48 8d 0d 40 77 02 00 	lea    0x27740(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   17240:	ba 06 03 00 00       	mov    $0x306,%edx
   17245:	48 8d 35 05 71 02 00 	lea    0x27105(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1724c:	48 8d 3d 0b 74 02 00 	lea    0x2740b(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17253:	e8 a8 8d ff ff       	callq  10000 <__assert_fail@plt>
   17258:	e8 b3 88 ff ff       	callq  fb10 <__errno_location@plt>
   1725d:	89 df                	mov    %ebx,%edi
   1725f:	89 18                	mov    %ebx,(%rax)
   17261:	e8 6a 97 ff ff       	callq  109d0 <strerror@plt>
   17266:	4c 8d 0d bc 73 02 00 	lea    0x273bc(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1726d:	41 b8 ef 02 00 00    	mov    $0x2ef,%r8d
   17273:	51                   	push   %rcx
   17274:	50                   	push   %rax
   17275:	e9 16 ff ff ff       	jmpq   17190 <cbuf_replay_line+0x160>
   1727a:	48 8d 0d ff 76 02 00 	lea    0x276ff(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   17281:	ba f0 02 00 00       	mov    $0x2f0,%edx
   17286:	48 8d 35 c4 70 02 00 	lea    0x270c4(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1728d:	48 8d 3d ca 73 02 00 	lea    0x273ca(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17294:	e8 67 8d ff ff       	callq  10000 <__assert_fail@plt>
   17299:	48 8d 0d e0 76 02 00 	lea    0x276e0(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   172a0:	ba 01 03 00 00       	mov    $0x301,%edx
   172a5:	48 8d 35 a5 70 02 00 	lea    0x270a5(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   172ac:	48 8d 3d da 73 02 00 	lea    0x273da(%rip),%rdi        # 3e68d <__PRETTY_FUNCTION__.5439+0x34d>
   172b3:	e8 48 8d ff ff       	callq  10000 <__assert_fail@plt>
   172b8:	48 8d 0d c1 76 02 00 	lea    0x276c1(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   172bf:	ba f4 02 00 00       	mov    $0x2f4,%edx
   172c4:	48 8d 35 86 70 02 00 	lea    0x27086(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   172cb:	48 8d 3d c3 73 02 00 	lea    0x273c3(%rip),%rdi        # 3e695 <__PRETTY_FUNCTION__.5439+0x355>
   172d2:	e8 29 8d ff ff       	callq  10000 <__assert_fail@plt>
   172d7:	48 8d 0d a2 76 02 00 	lea    0x276a2(%rip),%rcx        # 3e980 <__PRETTY_FUNCTION__.5664>
   172de:	ba fa 02 00 00       	mov    $0x2fa,%edx
   172e3:	48 8d 35 67 70 02 00 	lea    0x27067(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   172ea:	48 8d 3d 95 73 02 00 	lea    0x27395(%rip),%rdi        # 3e686 <__PRETTY_FUNCTION__.5439+0x346>
   172f1:	e8 0a 8d ff ff       	callq  10000 <__assert_fail@plt>

00000000000172f6 <.annobin_cbuf_replay_line.end>:
   172f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   172fd:	00 00 00 

0000000000017300 <cbuf_rewind_line>:
   17300:	f3 0f 1e fa          	endbr64 
   17304:	41 55                	push   %r13
   17306:	41 54                	push   %r12
   17308:	55                   	push   %rbp
   17309:	53                   	push   %rbx
   1730a:	48 83 ec 18          	sub    $0x18,%rsp
   1730e:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   17312:	48 85 ff             	test   %rdi,%rdi
   17315:	0f 84 0a 01 00 00    	je     17425 <cbuf_rewind_line+0x125>
   1731b:	41 89 f4             	mov    %esi,%r12d
   1731e:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
   17322:	85 f6                	test   %esi,%esi
   17324:	0f 88 e6 00 00 00    	js     17410 <cbuf_rewind_line+0x110>
   1732a:	83 fb ff             	cmp    $0xffffffff,%ebx
   1732d:	0f 8c dd 00 00 00    	jl     17410 <cbuf_rewind_line+0x110>
   17333:	85 db                	test   %ebx,%ebx
   17335:	75 11                	jne    17348 <cbuf_rewind_line+0x48>
   17337:	48 83 c4 18          	add    $0x18,%rsp
   1733b:	89 d8                	mov    %ebx,%eax
   1733d:	5b                   	pop    %rbx
   1733e:	5d                   	pop    %rbp
   1733f:	41 5c                	pop    %r12
   17341:	41 5d                	pop    %r13
   17343:	c3                   	retq   
   17344:	0f 1f 40 00          	nopl   0x0(%rax)
   17348:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   1734c:	48 89 fd             	mov    %rdi,%rbp
   1734f:	4c 89 ef             	mov    %r13,%rdi
   17352:	e8 79 97 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17357:	89 c3                	mov    %eax,%ebx
   17359:	85 c0                	test   %eax,%eax
   1735b:	0f 85 e3 00 00 00    	jne    17444 <cbuf_rewind_line+0x144>
   17361:	48 89 ef             	mov    %rbp,%rdi
   17364:	e8 17 c6 ff ff       	callq  13980 <cbuf_is_valid>
   17369:	85 c0                	test   %eax,%eax
   1736b:	0f 84 f5 00 00 00    	je     17466 <cbuf_rewind_line+0x166>
   17371:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   17376:	31 c9                	xor    %ecx,%ecx
   17378:	44 89 e6             	mov    %r12d,%esi
   1737b:	48 89 ef             	mov    %rbp,%rdi
   1737e:	e8 dd cb ff ff       	callq  13f60 <cbuf_find_replay_line>
   17383:	89 c3                	mov    %eax,%ebx
   17385:	85 c0                	test   %eax,%eax
   17387:	7e 16                	jle    1739f <cbuf_rewind_line+0x9f>
   17389:	01 45 40             	add    %eax,0x40(%rbp)
   1738c:	8b 45 3c             	mov    0x3c(%rbp),%eax
   1738f:	8d 48 01             	lea    0x1(%rax),%ecx
   17392:	8b 45 50             	mov    0x50(%rbp),%eax
   17395:	01 c8                	add    %ecx,%eax
   17397:	29 d8                	sub    %ebx,%eax
   17399:	99                   	cltd   
   1739a:	f7 f9                	idiv   %ecx
   1739c:	89 55 50             	mov    %edx,0x50(%rbp)
   1739f:	48 89 ef             	mov    %rbp,%rdi
   173a2:	e8 d9 c5 ff ff       	callq  13980 <cbuf_is_valid>
   173a7:	85 c0                	test   %eax,%eax
   173a9:	0f 84 d6 00 00 00    	je     17485 <cbuf_rewind_line+0x185>
   173af:	4c 89 ef             	mov    %r13,%rdi
   173b2:	e8 39 90 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   173b7:	89 c5                	mov    %eax,%ebp
   173b9:	85 c0                	test   %eax,%eax
   173bb:	0f 84 76 ff ff ff    	je     17337 <cbuf_rewind_line+0x37>
   173c1:	e8 4a 87 ff ff       	callq  fb10 <__errno_location@plt>
   173c6:	89 ef                	mov    %ebp,%edi
   173c8:	89 28                	mov    %ebp,(%rax)
   173ca:	e8 01 96 ff ff       	callq  109d0 <strerror@plt>
   173cf:	4c 8d 0d 63 72 02 00 	lea    0x27263(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   173d6:	41 b8 23 03 00 00    	mov    $0x323,%r8d
   173dc:	52                   	push   %rdx
   173dd:	50                   	push   %rax
   173de:	48 8b 05 03 bc 23 00 	mov    0x23bc03(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   173e5:	48 8d 0d 65 6f 02 00 	lea    0x26f65(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   173ec:	be 01 00 00 00       	mov    $0x1,%esi
   173f1:	48 8d 15 1a 72 02 00 	lea    0x2721a(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   173f8:	48 8b 38             	mov    (%rax),%rdi
   173fb:	31 c0                	xor    %eax,%eax
   173fd:	e8 5e 95 ff ff       	callq  10960 <__fprintf_chk@plt>
   17402:	e8 e9 86 ff ff       	callq  faf0 <abort@plt>
   17407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1740e:	00 00 
   17410:	e8 fb 86 ff ff       	callq  fb10 <__errno_location@plt>
   17415:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1741a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17420:	e9 12 ff ff ff       	jmpq   17337 <cbuf_rewind_line+0x37>
   17425:	48 8d 0d 34 75 02 00 	lea    0x27534(%rip),%rcx        # 3e960 <__PRETTY_FUNCTION__.5673>
   1742c:	ba 11 03 00 00       	mov    $0x311,%edx
   17431:	48 8d 35 19 6f 02 00 	lea    0x26f19(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17438:	48 8d 3d e8 70 02 00 	lea    0x270e8(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   1743f:	e8 bc 8b ff ff       	callq  10000 <__assert_fail@plt>
   17444:	e8 c7 86 ff ff       	callq  fb10 <__errno_location@plt>
   17449:	89 df                	mov    %ebx,%edi
   1744b:	89 18                	mov    %ebx,(%rax)
   1744d:	e8 7e 95 ff ff       	callq  109d0 <strerror@plt>
   17452:	4c 8d 0d d0 71 02 00 	lea    0x271d0(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   17459:	41 b8 1a 03 00 00    	mov    $0x31a,%r8d
   1745f:	51                   	push   %rcx
   17460:	50                   	push   %rax
   17461:	e9 78 ff ff ff       	jmpq   173de <cbuf_rewind_line+0xde>
   17466:	48 8d 0d f3 74 02 00 	lea    0x274f3(%rip),%rcx        # 3e960 <__PRETTY_FUNCTION__.5673>
   1746d:	ba 1b 03 00 00       	mov    $0x31b,%edx
   17472:	48 8d 35 d8 6e 02 00 	lea    0x26ed8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17479:	48 8d 3d de 71 02 00 	lea    0x271de(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17480:	e8 7b 8b ff ff       	callq  10000 <__assert_fail@plt>
   17485:	48 8d 0d d4 74 02 00 	lea    0x274d4(%rip),%rcx        # 3e960 <__PRETTY_FUNCTION__.5673>
   1748c:	ba 22 03 00 00       	mov    $0x322,%edx
   17491:	48 8d 35 b9 6e 02 00 	lea    0x26eb9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17498:	48 8d 3d bf 71 02 00 	lea    0x271bf(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1749f:	e8 5c 8b ff ff       	callq  10000 <__assert_fail@plt>

00000000000174a4 <.annobin_cbuf_rewind_line.end>:
   174a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   174ab:	00 00 00 00 
   174af:	90                   	nop

00000000000174b0 <cbuf_write_line>:
   174b0:	f3 0f 1e fa          	endbr64 
   174b4:	41 57                	push   %r15
   174b6:	41 56                	push   %r14
   174b8:	41 55                	push   %r13
   174ba:	41 54                	push   %r12
   174bc:	55                   	push   %rbp
   174bd:	53                   	push   %rbx
   174be:	48 83 ec 38          	sub    $0x38,%rsp
   174c2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   174c9:	00 00 
   174cb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   174d0:	31 c0                	xor    %eax,%eax
   174d2:	48 8d 05 3f be 02 00 	lea    0x2be3f(%rip),%rax        # 43318 <__PRETTY_FUNCTION__.11024+0x1d8>
   174d9:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   174de:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   174e3:	48 85 ff             	test   %rdi,%rdi
   174e6:	0f 84 6f 02 00 00    	je     1775b <cbuf_write_line+0x2ab>
   174ec:	49 89 ff             	mov    %rdi,%r15
   174ef:	48 89 f5             	mov    %rsi,%rbp
   174f2:	49 89 d4             	mov    %rdx,%r12
   174f5:	48 85 d2             	test   %rdx,%rdx
   174f8:	74 06                	je     17500 <cbuf_write_line+0x50>
   174fa:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   17500:	48 85 ed             	test   %rbp,%rbp
   17503:	0f 84 d6 01 00 00    	je     176df <cbuf_write_line+0x22f>
   17509:	48 89 ef             	mov    %rbp,%rdi
   1750c:	e8 0f 89 ff ff       	callq  fe20 <strlen@plt>
   17511:	49 89 c6             	mov    %rax,%r14
   17514:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   17518:	85 c0                	test   %eax,%eax
   1751a:	0f 85 c0 00 00 00    	jne    175e0 <cbuf_write_line+0x130>
   17520:	41 8d 5e 01          	lea    0x1(%r14),%ebx
   17524:	49 8d 47 08          	lea    0x8(%r15),%rax
   17528:	48 89 c7             	mov    %rax,%rdi
   1752b:	48 89 04 24          	mov    %rax,(%rsp)
   1752f:	e8 9c 95 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17534:	41 89 c5             	mov    %eax,%r13d
   17537:	85 c0                	test   %eax,%eax
   17539:	0f 85 d4 01 00 00    	jne    17713 <cbuf_write_line+0x263>
   1753f:	4c 89 ff             	mov    %r15,%rdi
   17542:	e8 39 c4 ff ff       	callq  13980 <cbuf_is_valid>
   17547:	85 c0                	test   %eax,%eax
   17549:	0f 84 a5 01 00 00    	je     176f4 <cbuf_write_line+0x244>
   1754f:	41 8b 47 3c          	mov    0x3c(%r15),%eax
   17553:	89 c1                	mov    %eax,%ecx
   17555:	41 2b 4f 40          	sub    0x40(%r15),%ecx
   17559:	39 cb                	cmp    %ecx,%ebx
   1755b:	0f 8f 97 00 00 00    	jg     175f8 <cbuf_write_line+0x148>
   17561:	41 8b 47 44          	mov    0x44(%r15),%eax
   17565:	85 c0                	test   %eax,%eax
   17567:	74 09                	je     17572 <cbuf_write_line+0xc2>
   17569:	83 f8 01             	cmp    $0x1,%eax
   1756c:	0f 84 fe 00 00 00    	je     17670 <cbuf_write_line+0x1c0>
   17572:	85 db                	test   %ebx,%ebx
   17574:	0f 8e a4 00 00 00    	jle    1761e <cbuf_write_line+0x16e>
   1757a:	41 8b 47 3c          	mov    0x3c(%r15),%eax
   1757e:	39 d8                	cmp    %ebx,%eax
   17580:	7d 18                	jge    1759a <cbuf_write_line+0xea>
   17582:	41 89 dd             	mov    %ebx,%r13d
   17585:	41 29 c5             	sub    %eax,%r13d
   17588:	44 89 f0             	mov    %r14d,%eax
   1758b:	44 29 e8             	sub    %r13d,%eax
   1758e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   17592:	49 63 c5             	movslq %r13d,%rax
   17595:	48 01 44 24 18       	add    %rax,0x18(%rsp)
   1759a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
   1759f:	45 85 f6             	test   %r14d,%r14d
   175a2:	0f 8f 08 01 00 00    	jg     176b0 <cbuf_write_line+0x200>
   175a8:	48 63 c3             	movslq %ebx,%rax
   175ab:	80 7c 05 ff 0a       	cmpb   $0xa,-0x1(%rbp,%rax,1)
   175b0:	74 6c                	je     1761e <cbuf_write_line+0x16e>
   175b2:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   175b7:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
   175bc:	be 01 00 00 00       	mov    $0x1,%esi
   175c1:	4c 89 ff             	mov    %r15,%rdi
   175c4:	48 8d 15 95 d8 ff ff 	lea    -0x276b(%rip),%rdx        # 14e60 <cbuf_get_mem>
   175cb:	e8 f0 d1 ff ff       	callq  147c0 <cbuf_writer>
   175d0:	83 f8 01             	cmp    $0x1,%eax
   175d3:	0f 85 06 02 00 00    	jne    177df <cbuf_write_line+0x32f>
   175d9:	44 03 6c 24 14       	add    0x14(%rsp),%r13d
   175de:	eb 3e                	jmp    1761e <cbuf_write_line+0x16e>
   175e0:	48 98                	cltq   
   175e2:	44 89 f3             	mov    %r14d,%ebx
   175e5:	80 7c 05 ff 0a       	cmpb   $0xa,-0x1(%rbp,%rax,1)
   175ea:	0f 85 30 ff ff ff    	jne    17520 <cbuf_write_line+0x70>
   175f0:	e9 2f ff ff ff       	jmpq   17524 <cbuf_write_line+0x74>
   175f5:	0f 1f 00             	nopl   (%rax)
   175f8:	41 3b 47 38          	cmp    0x38(%r15),%eax
   175fc:	0f 8c 7e 00 00 00    	jl     17680 <cbuf_write_line+0x1d0>
   17602:	41 8b 47 44          	mov    0x44(%r15),%eax
   17606:	85 c0                	test   %eax,%eax
   17608:	0f 85 5b ff ff ff    	jne    17569 <cbuf_write_line+0xb9>
   1760e:	e8 fd 84 ff ff       	callq  fb10 <__errno_location@plt>
   17613:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   17618:	c7 00 1c 00 00 00    	movl   $0x1c,(%rax)
   1761e:	4c 89 ff             	mov    %r15,%rdi
   17621:	e8 5a c3 ff ff       	callq  13980 <cbuf_is_valid>
   17626:	85 c0                	test   %eax,%eax
   17628:	0f 84 4c 01 00 00    	je     1777a <cbuf_write_line+0x2ca>
   1762e:	48 8b 3c 24          	mov    (%rsp),%rdi
   17632:	e8 b9 8d ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17637:	89 c5                	mov    %eax,%ebp
   17639:	85 c0                	test   %eax,%eax
   1763b:	0f 85 58 01 00 00    	jne    17799 <cbuf_write_line+0x2e9>
   17641:	4d 85 e4             	test   %r12,%r12
   17644:	74 04                	je     1764a <cbuf_write_line+0x19a>
   17646:	45 89 2c 24          	mov    %r13d,(%r12)
   1764a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1764f:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   17656:	00 00 
   17658:	89 d8                	mov    %ebx,%eax
   1765a:	0f 85 5b 01 00 00    	jne    177bb <cbuf_write_line+0x30b>
   17660:	48 83 c4 38          	add    $0x38,%rsp
   17664:	5b                   	pop    %rbx
   17665:	5d                   	pop    %rbp
   17666:	41 5c                	pop    %r12
   17668:	41 5d                	pop    %r13
   1766a:	41 5e                	pop    %r14
   1766c:	41 5f                	pop    %r15
   1766e:	c3                   	retq   
   1766f:	90                   	nop
   17670:	41 39 5f 3c          	cmp    %ebx,0x3c(%r15)
   17674:	7c 98                	jl     1760e <cbuf_write_line+0x15e>
   17676:	85 db                	test   %ebx,%ebx
   17678:	0f 8f 1c ff ff ff    	jg     1759a <cbuf_write_line+0xea>
   1767e:	eb 9e                	jmp    1761e <cbuf_write_line+0x16e>
   17680:	89 de                	mov    %ebx,%esi
   17682:	4c 89 ff             	mov    %r15,%rdi
   17685:	29 ce                	sub    %ecx,%esi
   17687:	e8 74 cf ff ff       	callq  14600 <cbuf_grow>
   1768c:	41 8b 47 44          	mov    0x44(%r15),%eax
   17690:	85 c0                	test   %eax,%eax
   17692:	0f 85 d1 fe ff ff    	jne    17569 <cbuf_write_line+0xb9>
   17698:	41 8b 47 3c          	mov    0x3c(%r15),%eax
   1769c:	41 2b 47 40          	sub    0x40(%r15),%eax
   176a0:	39 d8                	cmp    %ebx,%eax
   176a2:	0f 8c 66 ff ff ff    	jl     1760e <cbuf_write_line+0x15e>
   176a8:	e9 c5 fe ff ff       	jmpq   17572 <cbuf_write_line+0xc2>
   176ad:	0f 1f 00             	nopl   (%rax)
   176b0:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   176b5:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
   176ba:	44 89 f6             	mov    %r14d,%esi
   176bd:	4c 89 ff             	mov    %r15,%rdi
   176c0:	48 8d 15 99 d7 ff ff 	lea    -0x2867(%rip),%rdx        # 14e60 <cbuf_get_mem>
   176c7:	e8 f4 d0 ff ff       	callq  147c0 <cbuf_writer>
   176cc:	41 39 c6             	cmp    %eax,%r14d
   176cf:	0f 85 eb 00 00 00    	jne    177c0 <cbuf_write_line+0x310>
   176d5:	44 03 6c 24 14       	add    0x14(%rsp),%r13d
   176da:	e9 c9 fe ff ff       	jmpq   175a8 <cbuf_write_line+0xf8>
   176df:	e8 2c 84 ff ff       	callq  fb10 <__errno_location@plt>
   176e4:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   176e9:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   176ef:	e9 56 ff ff ff       	jmpq   1764a <cbuf_write_line+0x19a>
   176f4:	48 8d 0d 55 72 02 00 	lea    0x27255(%rip),%rcx        # 3e950 <__PRETTY_FUNCTION__.5689>
   176fb:	ba 42 03 00 00       	mov    $0x342,%edx
   17700:	48 8d 35 4a 6c 02 00 	lea    0x26c4a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17707:	48 8d 3d 64 6f 02 00 	lea    0x26f64(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   1770e:	e8 ed 88 ff ff       	callq  10000 <__assert_fail@plt>
   17713:	e8 f8 83 ff ff       	callq  fb10 <__errno_location@plt>
   17718:	44 89 ef             	mov    %r13d,%edi
   1771b:	44 89 28             	mov    %r13d,(%rax)
   1771e:	e8 ad 92 ff ff       	callq  109d0 <strerror@plt>
   17723:	4c 8d 0d ff 6e 02 00 	lea    0x26eff(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1772a:	41 b8 41 03 00 00    	mov    $0x341,%r8d
   17730:	51                   	push   %rcx
   17731:	50                   	push   %rax
   17732:	48 8b 05 af b8 23 00 	mov    0x23b8af(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   17739:	48 8d 0d 11 6c 02 00 	lea    0x26c11(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17740:	be 01 00 00 00       	mov    $0x1,%esi
   17745:	48 8d 15 c6 6e 02 00 	lea    0x26ec6(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   1774c:	48 8b 38             	mov    (%rax),%rdi
   1774f:	31 c0                	xor    %eax,%eax
   17751:	e8 0a 92 ff ff       	callq  10960 <__fprintf_chk@plt>
   17756:	e8 95 83 ff ff       	callq  faf0 <abort@plt>
   1775b:	48 8d 0d ee 71 02 00 	lea    0x271ee(%rip),%rcx        # 3e950 <__PRETTY_FUNCTION__.5689>
   17762:	ba 31 03 00 00       	mov    $0x331,%edx
   17767:	48 8d 35 e3 6b 02 00 	lea    0x26be3(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1776e:	48 8d 3d 0c 6e 02 00 	lea    0x26e0c(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   17775:	e8 86 88 ff ff       	callq  10000 <__assert_fail@plt>
   1777a:	48 8d 0d cf 71 02 00 	lea    0x271cf(%rip),%rcx        # 3e950 <__PRETTY_FUNCTION__.5689>
   17781:	ba 70 03 00 00       	mov    $0x370,%edx
   17786:	48 8d 35 c4 6b 02 00 	lea    0x26bc4(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   1778d:	48 8d 3d de 6e 02 00 	lea    0x26ede(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   17794:	e8 67 88 ff ff       	callq  10000 <__assert_fail@plt>
   17799:	e8 72 83 ff ff       	callq  fb10 <__errno_location@plt>
   1779e:	89 ef                	mov    %ebp,%edi
   177a0:	89 28                	mov    %ebp,(%rax)
   177a2:	e8 29 92 ff ff       	callq  109d0 <strerror@plt>
   177a7:	4c 8d 0d 8b 6e 02 00 	lea    0x26e8b(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   177ae:	41 b8 71 03 00 00    	mov    $0x371,%r8d
   177b4:	52                   	push   %rdx
   177b5:	50                   	push   %rax
   177b6:	e9 77 ff ff ff       	jmpq   17732 <cbuf_write_line+0x282>
   177bb:	e8 90 86 ff ff       	callq  fe50 <__stack_chk_fail@plt>
   177c0:	48 8d 0d 89 71 02 00 	lea    0x27189(%rip),%rcx        # 3e950 <__PRETTY_FUNCTION__.5689>
   177c7:	ba 65 03 00 00       	mov    $0x365,%edx
   177cc:	48 8d 35 7e 6b 02 00 	lea    0x26b7e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   177d3:	48 8d 3d d2 6e 02 00 	lea    0x26ed2(%rip),%rdi        # 3e6ac <__PRETTY_FUNCTION__.5439+0x36c>
   177da:	e8 21 88 ff ff       	callq  10000 <__assert_fail@plt>
   177df:	48 8d 0d 6a 71 02 00 	lea    0x2716a(%rip),%rcx        # 3e950 <__PRETTY_FUNCTION__.5689>
   177e6:	ba 6c 03 00 00       	mov    $0x36c,%edx
   177eb:	48 8d 35 5f 6b 02 00 	lea    0x26b5f(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   177f2:	48 8d 3d be 6e 02 00 	lea    0x26ebe(%rip),%rdi        # 3e6b7 <__PRETTY_FUNCTION__.5439+0x377>
   177f9:	e8 02 88 ff ff       	callq  10000 <__assert_fail@plt>

00000000000177fe <.annobin_cbuf_peek_to_fd.start>:
   177fe:	66 90                	xchg   %ax,%ax

0000000000017800 <cbuf_peek_to_fd>:
   17800:	f3 0f 1e fa          	endbr64 
   17804:	41 55                	push   %r13
   17806:	41 54                	push   %r12
   17808:	55                   	push   %rbp
   17809:	53                   	push   %rbx
   1780a:	48 83 ec 18          	sub    $0x18,%rsp
   1780e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   17812:	48 85 ff             	test   %rdi,%rdi
   17815:	0f 84 b0 00 00 00    	je     178cb <cbuf_peek_to_fd+0xcb>
   1781b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1781f:	85 f6                	test   %esi,%esi
   17821:	0f 88 91 00 00 00    	js     178b8 <cbuf_peek_to_fd+0xb8>
   17827:	89 d5                	mov    %edx,%ebp
   17829:	83 fa ff             	cmp    $0xffffffff,%edx
   1782c:	0f 8c 86 00 00 00    	jl     178b8 <cbuf_peek_to_fd+0xb8>
   17832:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   17836:	48 89 fb             	mov    %rdi,%rbx
   17839:	4c 89 ef             	mov    %r13,%rdi
   1783c:	e8 8f 92 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17841:	41 89 c4             	mov    %eax,%r12d
   17844:	85 c0                	test   %eax,%eax
   17846:	0f 85 bd 00 00 00    	jne    17909 <cbuf_peek_to_fd+0x109>
   1784c:	48 89 df             	mov    %rbx,%rdi
   1784f:	e8 2c c1 ff ff       	callq  13980 <cbuf_is_valid>
   17854:	85 c0                	test   %eax,%eax
   17856:	0f 84 8e 00 00 00    	je     178ea <cbuf_peek_to_fd+0xea>
   1785c:	83 fd ff             	cmp    $0xffffffff,%ebp
   1785f:	75 03                	jne    17864 <cbuf_peek_to_fd+0x64>
   17861:	8b 6b 40             	mov    0x40(%rbx),%ebp
   17864:	85 ed                	test   %ebp,%ebp
   17866:	7e 19                	jle    17881 <cbuf_peek_to_fd+0x81>
   17868:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   1786d:	48 8d 15 9c d7 ff ff 	lea    -0x2864(%rip),%rdx        # 15010 <cbuf_put_fd>
   17874:	89 ee                	mov    %ebp,%esi
   17876:	48 89 df             	mov    %rbx,%rdi
   17879:	e8 62 ca ff ff       	callq  142e0 <cbuf_reader>
   1787e:	41 89 c4             	mov    %eax,%r12d
   17881:	48 89 df             	mov    %rbx,%rdi
   17884:	e8 f7 c0 ff ff       	callq  13980 <cbuf_is_valid>
   17889:	85 c0                	test   %eax,%eax
   1788b:	0f 84 df 00 00 00    	je     17970 <cbuf_peek_to_fd+0x170>
   17891:	4c 89 ef             	mov    %r13,%rdi
   17894:	e8 57 8b ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17899:	89 c3                	mov    %eax,%ebx
   1789b:	85 c0                	test   %eax,%eax
   1789d:	0f 85 ae 00 00 00    	jne    17951 <cbuf_peek_to_fd+0x151>
   178a3:	48 83 c4 18          	add    $0x18,%rsp
   178a7:	44 89 e0             	mov    %r12d,%eax
   178aa:	5b                   	pop    %rbx
   178ab:	5d                   	pop    %rbp
   178ac:	41 5c                	pop    %r12
   178ae:	41 5d                	pop    %r13
   178b0:	c3                   	retq   
   178b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   178b8:	e8 53 82 ff ff       	callq  fb10 <__errno_location@plt>
   178bd:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   178c3:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   178c9:	eb d8                	jmp    178a3 <cbuf_peek_to_fd+0xa3>
   178cb:	48 8d 0d 6e 70 02 00 	lea    0x2706e(%rip),%rcx        # 3e940 <__PRETTY_FUNCTION__.5698>
   178d2:	ba 7e 03 00 00       	mov    $0x37e,%edx
   178d7:	48 8d 35 73 6a 02 00 	lea    0x26a73(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   178de:	48 8d 3d 42 6c 02 00 	lea    0x26c42(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   178e5:	e8 16 87 ff ff       	callq  10000 <__assert_fail@plt>
   178ea:	48 8d 0d 4f 70 02 00 	lea    0x2704f(%rip),%rcx        # 3e940 <__PRETTY_FUNCTION__.5698>
   178f1:	ba 85 03 00 00       	mov    $0x385,%edx
   178f6:	48 8d 35 54 6a 02 00 	lea    0x26a54(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   178fd:	48 8d 3d 5a 6d 02 00 	lea    0x26d5a(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17904:	e8 f7 86 ff ff       	callq  10000 <__assert_fail@plt>
   17909:	e8 02 82 ff ff       	callq  fb10 <__errno_location@plt>
   1790e:	44 89 e7             	mov    %r12d,%edi
   17911:	44 89 20             	mov    %r12d,(%rax)
   17914:	e8 b7 90 ff ff       	callq  109d0 <strerror@plt>
   17919:	4c 8d 0d 09 6d 02 00 	lea    0x26d09(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   17920:	41 b8 84 03 00 00    	mov    $0x384,%r8d
   17926:	51                   	push   %rcx
   17927:	50                   	push   %rax
   17928:	48 8b 05 b9 b6 23 00 	mov    0x23b6b9(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1792f:	48 8d 0d 1b 6a 02 00 	lea    0x26a1b(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17936:	be 01 00 00 00       	mov    $0x1,%esi
   1793b:	48 8d 15 d0 6c 02 00 	lea    0x26cd0(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   17942:	48 8b 38             	mov    (%rax),%rdi
   17945:	31 c0                	xor    %eax,%eax
   17947:	e8 14 90 ff ff       	callq  10960 <__fprintf_chk@plt>
   1794c:	e8 9f 81 ff ff       	callq  faf0 <abort@plt>
   17951:	e8 ba 81 ff ff       	callq  fb10 <__errno_location@plt>
   17956:	89 df                	mov    %ebx,%edi
   17958:	89 18                	mov    %ebx,(%rax)
   1795a:	e8 71 90 ff ff       	callq  109d0 <strerror@plt>
   1795f:	4c 8d 0d d3 6c 02 00 	lea    0x26cd3(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   17966:	41 b8 8d 03 00 00    	mov    $0x38d,%r8d
   1796c:	52                   	push   %rdx
   1796d:	50                   	push   %rax
   1796e:	eb b8                	jmp    17928 <cbuf_peek_to_fd+0x128>
   17970:	48 8d 0d c9 6f 02 00 	lea    0x26fc9(%rip),%rcx        # 3e940 <__PRETTY_FUNCTION__.5698>
   17977:	ba 8c 03 00 00       	mov    $0x38c,%edx
   1797c:	48 8d 35 ce 69 02 00 	lea    0x269ce(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17983:	48 8d 3d d4 6c 02 00 	lea    0x26cd4(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1798a:	e8 71 86 ff ff       	callq  10000 <__assert_fail@plt>

000000000001798f <.annobin_cbuf_peek_to_fd.end>:
   1798f:	90                   	nop

0000000000017990 <cbuf_read_to_fd>:
   17990:	f3 0f 1e fa          	endbr64 
   17994:	41 55                	push   %r13
   17996:	41 54                	push   %r12
   17998:	55                   	push   %rbp
   17999:	53                   	push   %rbx
   1799a:	48 83 ec 18          	sub    $0x18,%rsp
   1799e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   179a2:	48 85 ff             	test   %rdi,%rdi
   179a5:	0f 84 68 01 00 00    	je     17b13 <cbuf_read_to_fd+0x183>
   179ab:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   179af:	85 f6                	test   %esi,%esi
   179b1:	0f 88 a1 00 00 00    	js     17a58 <cbuf_read_to_fd+0xc8>
   179b7:	89 d5                	mov    %edx,%ebp
   179b9:	83 fa ff             	cmp    $0xffffffff,%edx
   179bc:	0f 8c 96 00 00 00    	jl     17a58 <cbuf_read_to_fd+0xc8>
   179c2:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   179c6:	48 89 fb             	mov    %rdi,%rbx
   179c9:	4c 89 ef             	mov    %r13,%rdi
   179cc:	e8 ff 90 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   179d1:	41 89 c4             	mov    %eax,%r12d
   179d4:	85 c0                	test   %eax,%eax
   179d6:	0f 85 13 01 00 00    	jne    17aef <cbuf_read_to_fd+0x15f>
   179dc:	48 89 df             	mov    %rbx,%rdi
   179df:	e8 9c bf ff ff       	callq  13980 <cbuf_is_valid>
   179e4:	85 c0                	test   %eax,%eax
   179e6:	0f 84 e4 00 00 00    	je     17ad0 <cbuf_read_to_fd+0x140>
   179ec:	83 fd ff             	cmp    $0xffffffff,%ebp
   179ef:	75 03                	jne    179f4 <cbuf_read_to_fd+0x64>
   179f1:	8b 6b 40             	mov    0x40(%rbx),%ebp
   179f4:	85 ed                	test   %ebp,%ebp
   179f6:	7f 30                	jg     17a28 <cbuf_read_to_fd+0x98>
   179f8:	48 89 df             	mov    %rbx,%rdi
   179fb:	e8 80 bf ff ff       	callq  13980 <cbuf_is_valid>
   17a00:	85 c0                	test   %eax,%eax
   17a02:	0f 84 a9 00 00 00    	je     17ab1 <cbuf_read_to_fd+0x121>
   17a08:	4c 89 ef             	mov    %r13,%rdi
   17a0b:	e8 e0 89 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17a10:	89 c3                	mov    %eax,%ebx
   17a12:	85 c0                	test   %eax,%eax
   17a14:	75 55                	jne    17a6b <cbuf_read_to_fd+0xdb>
   17a16:	48 83 c4 18          	add    $0x18,%rsp
   17a1a:	44 89 e0             	mov    %r12d,%eax
   17a1d:	5b                   	pop    %rbx
   17a1e:	5d                   	pop    %rbp
   17a1f:	41 5c                	pop    %r12
   17a21:	41 5d                	pop    %r13
   17a23:	c3                   	retq   
   17a24:	0f 1f 40 00          	nopl   0x0(%rax)
   17a28:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   17a2d:	48 8d 15 dc d5 ff ff 	lea    -0x2a24(%rip),%rdx        # 15010 <cbuf_put_fd>
   17a34:	89 ee                	mov    %ebp,%esi
   17a36:	48 89 df             	mov    %rbx,%rdi
   17a39:	e8 a2 c8 ff ff       	callq  142e0 <cbuf_reader>
   17a3e:	41 89 c4             	mov    %eax,%r12d
   17a41:	85 c0                	test   %eax,%eax
   17a43:	7e b3                	jle    179f8 <cbuf_read_to_fd+0x68>
   17a45:	89 c6                	mov    %eax,%esi
   17a47:	48 89 df             	mov    %rbx,%rdi
   17a4a:	e8 01 c7 ff ff       	callq  14150 <cbuf_dropper>
   17a4f:	eb a7                	jmp    179f8 <cbuf_read_to_fd+0x68>
   17a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17a58:	e8 b3 80 ff ff       	callq  fb10 <__errno_location@plt>
   17a5d:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   17a63:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17a69:	eb ab                	jmp    17a16 <cbuf_read_to_fd+0x86>
   17a6b:	e8 a0 80 ff ff       	callq  fb10 <__errno_location@plt>
   17a70:	89 df                	mov    %ebx,%edi
   17a72:	89 18                	mov    %ebx,(%rax)
   17a74:	e8 57 8f ff ff       	callq  109d0 <strerror@plt>
   17a79:	4c 8d 0d b9 6b 02 00 	lea    0x26bb9(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   17a80:	41 b8 a9 03 00 00    	mov    $0x3a9,%r8d
   17a86:	52                   	push   %rdx
   17a87:	50                   	push   %rax
   17a88:	48 8b 05 59 b5 23 00 	mov    0x23b559(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   17a8f:	48 8d 0d bb 68 02 00 	lea    0x268bb(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17a96:	be 01 00 00 00       	mov    $0x1,%esi
   17a9b:	48 8d 15 70 6b 02 00 	lea    0x26b70(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   17aa2:	48 8b 38             	mov    (%rax),%rdi
   17aa5:	31 c0                	xor    %eax,%eax
   17aa7:	e8 b4 8e ff ff       	callq  10960 <__fprintf_chk@plt>
   17aac:	e8 3f 80 ff ff       	callq  faf0 <abort@plt>
   17ab1:	48 8d 0d 68 6e 02 00 	lea    0x26e68(%rip),%rcx        # 3e920 <__PRETTY_FUNCTION__.5707>
   17ab8:	ba a8 03 00 00       	mov    $0x3a8,%edx
   17abd:	48 8d 35 8d 68 02 00 	lea    0x2688d(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17ac4:	48 8d 3d 93 6b 02 00 	lea    0x26b93(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17acb:	e8 30 85 ff ff       	callq  10000 <__assert_fail@plt>
   17ad0:	48 8d 0d 49 6e 02 00 	lea    0x26e49(%rip),%rcx        # 3e920 <__PRETTY_FUNCTION__.5707>
   17ad7:	ba 9e 03 00 00       	mov    $0x39e,%edx
   17adc:	48 8d 35 6e 68 02 00 	lea    0x2686e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17ae3:	48 8d 3d 74 6b 02 00 	lea    0x26b74(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17aea:	e8 11 85 ff ff       	callq  10000 <__assert_fail@plt>
   17aef:	e8 1c 80 ff ff       	callq  fb10 <__errno_location@plt>
   17af4:	44 89 e7             	mov    %r12d,%edi
   17af7:	44 89 20             	mov    %r12d,(%rax)
   17afa:	e8 d1 8e ff ff       	callq  109d0 <strerror@plt>
   17aff:	4c 8d 0d 23 6b 02 00 	lea    0x26b23(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   17b06:	41 b8 9d 03 00 00    	mov    $0x39d,%r8d
   17b0c:	51                   	push   %rcx
   17b0d:	50                   	push   %rax
   17b0e:	e9 75 ff ff ff       	jmpq   17a88 <cbuf_read_to_fd+0xf8>
   17b13:	48 8d 0d 06 6e 02 00 	lea    0x26e06(%rip),%rcx        # 3e920 <__PRETTY_FUNCTION__.5707>
   17b1a:	ba 97 03 00 00       	mov    $0x397,%edx
   17b1f:	48 8d 35 2b 68 02 00 	lea    0x2682b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17b26:	48 8d 3d fa 69 02 00 	lea    0x269fa(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   17b2d:	e8 ce 84 ff ff       	callq  10000 <__assert_fail@plt>

0000000000017b32 <.annobin_cbuf_read_to_fd.end>:
   17b32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17b39:	00 00 00 00 
   17b3d:	0f 1f 00             	nopl   (%rax)

0000000000017b40 <cbuf_replay_to_fd>:
   17b40:	f3 0f 1e fa          	endbr64 
   17b44:	41 55                	push   %r13
   17b46:	41 54                	push   %r12
   17b48:	55                   	push   %rbp
   17b49:	53                   	push   %rbx
   17b4a:	48 83 ec 18          	sub    $0x18,%rsp
   17b4e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   17b52:	48 85 ff             	test   %rdi,%rdi
   17b55:	0f 84 b0 00 00 00    	je     17c0b <cbuf_replay_to_fd+0xcb>
   17b5b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   17b5f:	85 f6                	test   %esi,%esi
   17b61:	0f 88 91 00 00 00    	js     17bf8 <cbuf_replay_to_fd+0xb8>
   17b67:	89 d5                	mov    %edx,%ebp
   17b69:	83 fa ff             	cmp    $0xffffffff,%edx
   17b6c:	0f 8c 86 00 00 00    	jl     17bf8 <cbuf_replay_to_fd+0xb8>
   17b72:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   17b76:	48 89 fb             	mov    %rdi,%rbx
   17b79:	4c 89 ef             	mov    %r13,%rdi
   17b7c:	e8 4f 8f ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17b81:	41 89 c4             	mov    %eax,%r12d
   17b84:	85 c0                	test   %eax,%eax
   17b86:	0f 85 bd 00 00 00    	jne    17c49 <cbuf_replay_to_fd+0x109>
   17b8c:	48 89 df             	mov    %rbx,%rdi
   17b8f:	e8 ec bd ff ff       	callq  13980 <cbuf_is_valid>
   17b94:	85 c0                	test   %eax,%eax
   17b96:	0f 84 8e 00 00 00    	je     17c2a <cbuf_replay_to_fd+0xea>
   17b9c:	83 fd ff             	cmp    $0xffffffff,%ebp
   17b9f:	75 06                	jne    17ba7 <cbuf_replay_to_fd+0x67>
   17ba1:	8b 6b 3c             	mov    0x3c(%rbx),%ebp
   17ba4:	2b 6b 40             	sub    0x40(%rbx),%ebp
   17ba7:	85 ed                	test   %ebp,%ebp
   17ba9:	7e 19                	jle    17bc4 <cbuf_replay_to_fd+0x84>
   17bab:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   17bb0:	48 8d 15 59 d4 ff ff 	lea    -0x2ba7(%rip),%rdx        # 15010 <cbuf_put_fd>
   17bb7:	89 ee                	mov    %ebp,%esi
   17bb9:	48 89 df             	mov    %rbx,%rdi
   17bbc:	e8 9f c8 ff ff       	callq  14460 <cbuf_replayer>
   17bc1:	41 89 c4             	mov    %eax,%r12d
   17bc4:	48 89 df             	mov    %rbx,%rdi
   17bc7:	e8 b4 bd ff ff       	callq  13980 <cbuf_is_valid>
   17bcc:	85 c0                	test   %eax,%eax
   17bce:	0f 84 dc 00 00 00    	je     17cb0 <cbuf_replay_to_fd+0x170>
   17bd4:	4c 89 ef             	mov    %r13,%rdi
   17bd7:	e8 14 88 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17bdc:	89 c3                	mov    %eax,%ebx
   17bde:	85 c0                	test   %eax,%eax
   17be0:	0f 85 ab 00 00 00    	jne    17c91 <cbuf_replay_to_fd+0x151>
   17be6:	48 83 c4 18          	add    $0x18,%rsp
   17bea:	44 89 e0             	mov    %r12d,%eax
   17bed:	5b                   	pop    %rbx
   17bee:	5d                   	pop    %rbp
   17bef:	41 5c                	pop    %r12
   17bf1:	41 5d                	pop    %r13
   17bf3:	c3                   	retq   
   17bf4:	0f 1f 40 00          	nopl   0x0(%rax)
   17bf8:	e8 13 7f ff ff       	callq  fb10 <__errno_location@plt>
   17bfd:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   17c03:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17c09:	eb db                	jmp    17be6 <cbuf_replay_to_fd+0xa6>
   17c0b:	48 8d 0d ee 6c 02 00 	lea    0x26cee(%rip),%rcx        # 3e900 <__PRETTY_FUNCTION__.5716>
   17c12:	ba b3 03 00 00       	mov    $0x3b3,%edx
   17c17:	48 8d 35 33 67 02 00 	lea    0x26733(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17c1e:	48 8d 3d 02 69 02 00 	lea    0x26902(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   17c25:	e8 d6 83 ff ff       	callq  10000 <__assert_fail@plt>
   17c2a:	48 8d 0d cf 6c 02 00 	lea    0x26ccf(%rip),%rcx        # 3e900 <__PRETTY_FUNCTION__.5716>
   17c31:	ba ba 03 00 00       	mov    $0x3ba,%edx
   17c36:	48 8d 35 14 67 02 00 	lea    0x26714(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17c3d:	48 8d 3d 1a 6a 02 00 	lea    0x26a1a(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17c44:	e8 b7 83 ff ff       	callq  10000 <__assert_fail@plt>
   17c49:	e8 c2 7e ff ff       	callq  fb10 <__errno_location@plt>
   17c4e:	44 89 e7             	mov    %r12d,%edi
   17c51:	44 89 20             	mov    %r12d,(%rax)
   17c54:	e8 77 8d ff ff       	callq  109d0 <strerror@plt>
   17c59:	4c 8d 0d c9 69 02 00 	lea    0x269c9(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   17c60:	41 b8 b9 03 00 00    	mov    $0x3b9,%r8d
   17c66:	51                   	push   %rcx
   17c67:	50                   	push   %rax
   17c68:	48 8b 05 79 b3 23 00 	mov    0x23b379(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   17c6f:	48 8d 0d db 66 02 00 	lea    0x266db(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17c76:	be 01 00 00 00       	mov    $0x1,%esi
   17c7b:	48 8d 15 90 69 02 00 	lea    0x26990(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   17c82:	48 8b 38             	mov    (%rax),%rdi
   17c85:	31 c0                	xor    %eax,%eax
   17c87:	e8 d4 8c ff ff       	callq  10960 <__fprintf_chk@plt>
   17c8c:	e8 5f 7e ff ff       	callq  faf0 <abort@plt>
   17c91:	e8 7a 7e ff ff       	callq  fb10 <__errno_location@plt>
   17c96:	89 df                	mov    %ebx,%edi
   17c98:	89 18                	mov    %ebx,(%rax)
   17c9a:	e8 31 8d ff ff       	callq  109d0 <strerror@plt>
   17c9f:	4c 8d 0d 93 69 02 00 	lea    0x26993(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   17ca6:	41 b8 c2 03 00 00    	mov    $0x3c2,%r8d
   17cac:	52                   	push   %rdx
   17cad:	50                   	push   %rax
   17cae:	eb b8                	jmp    17c68 <cbuf_replay_to_fd+0x128>
   17cb0:	48 8d 0d 49 6c 02 00 	lea    0x26c49(%rip),%rcx        # 3e900 <__PRETTY_FUNCTION__.5716>
   17cb7:	ba c1 03 00 00       	mov    $0x3c1,%edx
   17cbc:	48 8d 35 8e 66 02 00 	lea    0x2668e(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17cc3:	48 8d 3d 94 69 02 00 	lea    0x26994(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   17cca:	e8 31 83 ff ff       	callq  10000 <__assert_fail@plt>

0000000000017ccf <.annobin_cbuf_replay_to_fd.end>:
   17ccf:	90                   	nop

0000000000017cd0 <cbuf_write_from_fd>:
   17cd0:	f3 0f 1e fa          	endbr64 
   17cd4:	41 56                	push   %r14
   17cd6:	41 55                	push   %r13
   17cd8:	41 54                	push   %r12
   17cda:	55                   	push   %rbp
   17cdb:	53                   	push   %rbx
   17cdc:	48 83 ec 10          	sub    $0x10,%rsp
   17ce0:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   17ce4:	48 85 ff             	test   %rdi,%rdi
   17ce7:	0f 84 6b 01 00 00    	je     17e58 <cbuf_write_from_fd+0x188>
   17ced:	48 89 fb             	mov    %rdi,%rbx
   17cf0:	89 d5                	mov    %edx,%ebp
   17cf2:	49 89 cd             	mov    %rcx,%r13
   17cf5:	48 85 c9             	test   %rcx,%rcx
   17cf8:	74 06                	je     17d00 <cbuf_write_from_fd+0x30>
   17cfa:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   17d00:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   17d04:	85 f6                	test   %esi,%esi
   17d06:	0f 88 94 00 00 00    	js     17da0 <cbuf_write_from_fd+0xd0>
   17d0c:	83 fd ff             	cmp    $0xffffffff,%ebp
   17d0f:	0f 8c 8b 00 00 00    	jl     17da0 <cbuf_write_from_fd+0xd0>
   17d15:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   17d19:	4c 89 f7             	mov    %r14,%rdi
   17d1c:	e8 af 8d ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17d21:	41 89 c4             	mov    %eax,%r12d
   17d24:	85 c0                	test   %eax,%eax
   17d26:	0f 85 a6 00 00 00    	jne    17dd2 <cbuf_write_from_fd+0x102>
   17d2c:	48 89 df             	mov    %rbx,%rdi
   17d2f:	e8 4c bc ff ff       	callq  13980 <cbuf_is_valid>
   17d34:	85 c0                	test   %eax,%eax
   17d36:	74 7b                	je     17db3 <cbuf_write_from_fd+0xe3>
   17d38:	83 fd ff             	cmp    $0xffffffff,%ebp
   17d3b:	74 53                	je     17d90 <cbuf_write_from_fd+0xc0>
   17d3d:	85 ed                	test   %ebp,%ebp
   17d3f:	7e 1c                	jle    17d5d <cbuf_write_from_fd+0x8d>
   17d41:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   17d46:	4d 89 e8             	mov    %r13,%r8
   17d49:	89 ee                	mov    %ebp,%esi
   17d4b:	48 89 df             	mov    %rbx,%rdi
   17d4e:	48 8d 15 cb d1 ff ff 	lea    -0x2e35(%rip),%rdx        # 14f20 <cbuf_get_fd>
   17d55:	e8 66 ca ff ff       	callq  147c0 <cbuf_writer>
   17d5a:	41 89 c4             	mov    %eax,%r12d
   17d5d:	48 89 df             	mov    %rbx,%rdi
   17d60:	e8 1b bc ff ff       	callq  13980 <cbuf_is_valid>
   17d65:	85 c0                	test   %eax,%eax
   17d67:	0f 84 cc 00 00 00    	je     17e39 <cbuf_write_from_fd+0x169>
   17d6d:	4c 89 f7             	mov    %r14,%rdi
   17d70:	e8 7b 86 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17d75:	89 c3                	mov    %eax,%ebx
   17d77:	85 c0                	test   %eax,%eax
   17d79:	0f 85 9b 00 00 00    	jne    17e1a <cbuf_write_from_fd+0x14a>
   17d7f:	48 83 c4 10          	add    $0x10,%rsp
   17d83:	44 89 e0             	mov    %r12d,%eax
   17d86:	5b                   	pop    %rbx
   17d87:	5d                   	pop    %rbp
   17d88:	41 5c                	pop    %r12
   17d8a:	41 5d                	pop    %r13
   17d8c:	41 5e                	pop    %r14
   17d8e:	c3                   	retq   
   17d8f:	90                   	nop
   17d90:	8b 6b 3c             	mov    0x3c(%rbx),%ebp
   17d93:	2b 6b 40             	sub    0x40(%rbx),%ebp
   17d96:	75 a5                	jne    17d3d <cbuf_write_from_fd+0x6d>
   17d98:	bd e8 03 00 00       	mov    $0x3e8,%ebp
   17d9d:	eb a2                	jmp    17d41 <cbuf_write_from_fd+0x71>
   17d9f:	90                   	nop
   17da0:	e8 6b 7d ff ff       	callq  fb10 <__errno_location@plt>
   17da5:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   17dab:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17db1:	eb cc                	jmp    17d7f <cbuf_write_from_fd+0xaf>
   17db3:	48 8d 0d 26 6b 02 00 	lea    0x26b26(%rip),%rcx        # 3e8e0 <__PRETTY_FUNCTION__.5726>
   17dba:	ba d6 03 00 00       	mov    $0x3d6,%edx
   17dbf:	48 8d 35 8b 65 02 00 	lea    0x2658b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17dc6:	48 8d 3d a5 68 02 00 	lea    0x268a5(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   17dcd:	e8 2e 82 ff ff       	callq  10000 <__assert_fail@plt>
   17dd2:	e8 39 7d ff ff       	callq  fb10 <__errno_location@plt>
   17dd7:	44 89 e7             	mov    %r12d,%edi
   17dda:	44 89 20             	mov    %r12d,(%rax)
   17ddd:	e8 ee 8b ff ff       	callq  109d0 <strerror@plt>
   17de2:	4c 8d 0d 40 68 02 00 	lea    0x26840(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   17de9:	41 b8 d5 03 00 00    	mov    $0x3d5,%r8d
   17def:	51                   	push   %rcx
   17df0:	50                   	push   %rax
   17df1:	48 8b 05 f0 b1 23 00 	mov    0x23b1f0(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   17df8:	48 8d 0d 52 65 02 00 	lea    0x26552(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17dff:	be 01 00 00 00       	mov    $0x1,%esi
   17e04:	48 8d 15 07 68 02 00 	lea    0x26807(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   17e0b:	48 8b 38             	mov    (%rax),%rdi
   17e0e:	31 c0                	xor    %eax,%eax
   17e10:	e8 4b 8b ff ff       	callq  10960 <__fprintf_chk@plt>
   17e15:	e8 d6 7c ff ff       	callq  faf0 <abort@plt>
   17e1a:	e8 f1 7c ff ff       	callq  fb10 <__errno_location@plt>
   17e1f:	89 df                	mov    %ebx,%edi
   17e21:	89 18                	mov    %ebx,(%rax)
   17e23:	e8 a8 8b ff ff       	callq  109d0 <strerror@plt>
   17e28:	4c 8d 0d 0a 68 02 00 	lea    0x2680a(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   17e2f:	41 b8 e5 03 00 00    	mov    $0x3e5,%r8d
   17e35:	52                   	push   %rdx
   17e36:	50                   	push   %rax
   17e37:	eb b8                	jmp    17df1 <cbuf_write_from_fd+0x121>
   17e39:	48 8d 0d a0 6a 02 00 	lea    0x26aa0(%rip),%rcx        # 3e8e0 <__PRETTY_FUNCTION__.5726>
   17e40:	ba e4 03 00 00       	mov    $0x3e4,%edx
   17e45:	48 8d 35 05 65 02 00 	lea    0x26505(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17e4c:	48 8d 3d 1f 68 02 00 	lea    0x2681f(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   17e53:	e8 a8 81 ff ff       	callq  10000 <__assert_fail@plt>
   17e58:	48 8d 0d 81 6a 02 00 	lea    0x26a81(%rip),%rcx        # 3e8e0 <__PRETTY_FUNCTION__.5726>
   17e5f:	ba cc 03 00 00       	mov    $0x3cc,%edx
   17e64:	48 8d 35 e6 64 02 00 	lea    0x264e6(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   17e6b:	48 8d 3d 0f 67 02 00 	lea    0x2670f(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   17e72:	e8 89 81 ff ff       	callq  10000 <__assert_fail@plt>

0000000000017e77 <.annobin_cbuf_copy.start>:
   17e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17e7e:	00 00 

0000000000017e80 <cbuf_copy>:
   17e80:	f3 0f 1e fa          	endbr64 
   17e84:	41 57                	push   %r15
   17e86:	41 56                	push   %r14
   17e88:	41 55                	push   %r13
   17e8a:	41 54                	push   %r12
   17e8c:	55                   	push   %rbp
   17e8d:	53                   	push   %rbx
   17e8e:	48 83 ec 18          	sub    $0x18,%rsp
   17e92:	48 85 ff             	test   %rdi,%rdi
   17e95:	0f 84 da 01 00 00    	je     18075 <cbuf_copy+0x1f5>
   17e9b:	48 89 f5             	mov    %rsi,%rbp
   17e9e:	48 85 f6             	test   %rsi,%rsi
   17ea1:	0f 84 af 01 00 00    	je     18056 <cbuf_copy+0x1d6>
   17ea7:	48 89 fb             	mov    %rdi,%rbx
   17eaa:	41 89 d4             	mov    %edx,%r12d
   17ead:	49 89 cd             	mov    %rcx,%r13
   17eb0:	48 85 c9             	test   %rcx,%rcx
   17eb3:	74 06                	je     17ebb <cbuf_copy+0x3b>
   17eb5:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   17ebb:	48 39 eb             	cmp    %rbp,%rbx
   17ebe:	0f 84 7c 01 00 00    	je     18040 <cbuf_copy+0x1c0>
   17ec4:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   17ec8:	0f 8c 72 01 00 00    	jl     18040 <cbuf_copy+0x1c0>
   17ece:	45 85 e4             	test   %r12d,%r12d
   17ed1:	0f 84 61 01 00 00    	je     18038 <cbuf_copy+0x1b8>
   17ed7:	48 39 eb             	cmp    %rbp,%rbx
   17eda:	0f 82 d8 00 00 00    	jb     17fb8 <cbuf_copy+0x138>
   17ee0:	48 8d 45 08          	lea    0x8(%rbp),%rax
   17ee4:	48 89 c7             	mov    %rax,%rdi
   17ee7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17eec:	e8 df 8b ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17ef1:	41 89 c6             	mov    %eax,%r14d
   17ef4:	85 c0                	test   %eax,%eax
   17ef6:	0f 85 a1 02 00 00    	jne    1819d <cbuf_copy+0x31d>
   17efc:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   17f00:	4c 89 ff             	mov    %r15,%rdi
   17f03:	e8 c8 8b ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17f08:	41 89 c6             	mov    %eax,%r14d
   17f0b:	85 c0                	test   %eax,%eax
   17f0d:	0f 85 41 02 00 00    	jne    18154 <cbuf_copy+0x2d4>
   17f13:	48 89 df             	mov    %rbx,%rdi
   17f16:	e8 65 ba ff ff       	callq  13980 <cbuf_is_valid>
   17f1b:	85 c0                	test   %eax,%eax
   17f1d:	0f 84 93 01 00 00    	je     180b6 <cbuf_copy+0x236>
   17f23:	48 89 ef             	mov    %rbp,%rdi
   17f26:	e8 55 ba ff ff       	callq  13980 <cbuf_is_valid>
   17f2b:	85 c0                	test   %eax,%eax
   17f2d:	0f 84 a2 01 00 00    	je     180d5 <cbuf_copy+0x255>
   17f33:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   17f37:	75 04                	jne    17f3d <cbuf_copy+0xbd>
   17f39:	44 8b 63 40          	mov    0x40(%rbx),%r12d
   17f3d:	45 31 f6             	xor    %r14d,%r14d
   17f40:	45 85 e4             	test   %r12d,%r12d
   17f43:	7e 14                	jle    17f59 <cbuf_copy+0xd9>
   17f45:	4c 89 e9             	mov    %r13,%rcx
   17f48:	44 89 e2             	mov    %r12d,%edx
   17f4b:	48 89 ee             	mov    %rbp,%rsi
   17f4e:	48 89 df             	mov    %rbx,%rdi
   17f51:	e8 3a cb ff ff       	callq  14a90 <cbuf_copier>
   17f56:	41 89 c6             	mov    %eax,%r14d
   17f59:	48 89 df             	mov    %rbx,%rdi
   17f5c:	e8 1f ba ff ff       	callq  13980 <cbuf_is_valid>
   17f61:	85 c0                	test   %eax,%eax
   17f63:	0f 84 8b 01 00 00    	je     180f4 <cbuf_copy+0x274>
   17f69:	48 89 ef             	mov    %rbp,%rdi
   17f6c:	e8 0f ba ff ff       	callq  13980 <cbuf_is_valid>
   17f71:	85 c0                	test   %eax,%eax
   17f73:	0f 84 9a 01 00 00    	je     18113 <cbuf_copy+0x293>
   17f79:	4c 89 ff             	mov    %r15,%rdi
   17f7c:	e8 6f 84 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17f81:	89 c3                	mov    %eax,%ebx
   17f83:	85 c0                	test   %eax,%eax
   17f85:	0f 85 a7 01 00 00    	jne    18132 <cbuf_copy+0x2b2>
   17f8b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17f90:	e8 5b 84 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   17f95:	89 c3                	mov    %eax,%ebx
   17f97:	85 c0                	test   %eax,%eax
   17f99:	0f 85 f5 00 00 00    	jne    18094 <cbuf_copy+0x214>
   17f9f:	48 83 c4 18          	add    $0x18,%rsp
   17fa3:	44 89 f0             	mov    %r14d,%eax
   17fa6:	5b                   	pop    %rbx
   17fa7:	5d                   	pop    %rbp
   17fa8:	41 5c                	pop    %r12
   17faa:	41 5d                	pop    %r13
   17fac:	41 5e                	pop    %r14
   17fae:	41 5f                	pop    %r15
   17fb0:	c3                   	retq   
   17fb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17fb8:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   17fbc:	4c 89 ff             	mov    %r15,%rdi
   17fbf:	e8 0c 8b ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17fc4:	41 89 c6             	mov    %eax,%r14d
   17fc7:	85 c0                	test   %eax,%eax
   17fc9:	0f 85 a9 01 00 00    	jne    18178 <cbuf_copy+0x2f8>
   17fcf:	48 8d 45 08          	lea    0x8(%rbp),%rax
   17fd3:	48 89 c7             	mov    %rax,%rdi
   17fd6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17fdb:	e8 f0 8a ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   17fe0:	41 89 c6             	mov    %eax,%r14d
   17fe3:	85 c0                	test   %eax,%eax
   17fe5:	0f 84 28 ff ff ff    	je     17f13 <cbuf_copy+0x93>
   17feb:	e8 20 7b ff ff       	callq  fb10 <__errno_location@plt>
   17ff0:	44 89 f7             	mov    %r14d,%edi
   17ff3:	44 89 30             	mov    %r14d,(%rax)
   17ff6:	e8 d5 89 ff ff       	callq  109d0 <strerror@plt>
   17ffb:	4c 8d 0d 27 66 02 00 	lea    0x26627(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   18002:	41 50                	push   %r8
   18004:	41 b8 04 04 00 00    	mov    $0x404,%r8d
   1800a:	50                   	push   %rax
   1800b:	48 8b 05 d6 af 23 00 	mov    0x23afd6(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   18012:	48 8d 0d 38 63 02 00 	lea    0x26338(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18019:	be 01 00 00 00       	mov    $0x1,%esi
   1801e:	48 8d 15 ed 65 02 00 	lea    0x265ed(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   18025:	48 8b 38             	mov    (%rax),%rdi
   18028:	31 c0                	xor    %eax,%eax
   1802a:	e8 31 89 ff ff       	callq  10960 <__fprintf_chk@plt>
   1802f:	e8 bc 7a ff ff       	callq  faf0 <abort@plt>
   18034:	0f 1f 40 00          	nopl   0x0(%rax)
   18038:	45 31 f6             	xor    %r14d,%r14d
   1803b:	e9 5f ff ff ff       	jmpq   17f9f <cbuf_copy+0x11f>
   18040:	e8 cb 7a ff ff       	callq  fb10 <__errno_location@plt>
   18045:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   1804b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   18051:	e9 49 ff ff ff       	jmpq   17f9f <cbuf_copy+0x11f>
   18056:	48 8d 0d 63 68 02 00 	lea    0x26863(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   1805d:	ba f0 03 00 00       	mov    $0x3f0,%edx
   18062:	48 8d 35 e8 62 02 00 	lea    0x262e8(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18069:	48 8d 3d 11 65 02 00 	lea    0x26511(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   18070:	e8 8b 7f ff ff       	callq  10000 <__assert_fail@plt>
   18075:	48 8d 0d 44 68 02 00 	lea    0x26844(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   1807c:	ba ef 03 00 00       	mov    $0x3ef,%edx
   18081:	48 8d 35 c9 62 02 00 	lea    0x262c9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18088:	48 8d 3d 98 64 02 00 	lea    0x26498(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   1808f:	e8 6c 7f ff ff       	callq  10000 <__assert_fail@plt>
   18094:	e8 77 7a ff ff       	callq  fb10 <__errno_location@plt>
   18099:	89 df                	mov    %ebx,%edi
   1809b:	89 18                	mov    %ebx,(%rax)
   1809d:	e8 2e 89 ff ff       	callq  109d0 <strerror@plt>
   180a2:	4c 8d 0d 90 65 02 00 	lea    0x26590(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   180a9:	41 b8 16 04 00 00    	mov    $0x416,%r8d
   180af:	52                   	push   %rdx
   180b0:	50                   	push   %rax
   180b1:	e9 55 ff ff ff       	jmpq   1800b <cbuf_copy+0x18b>
   180b6:	48 8d 0d 03 68 02 00 	lea    0x26803(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   180bd:	ba 0a 04 00 00       	mov    $0x40a,%edx
   180c2:	48 8d 35 88 62 02 00 	lea    0x26288(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   180c9:	48 8d 3d 8e 65 02 00 	lea    0x2658e(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   180d0:	e8 2b 7f ff ff       	callq  10000 <__assert_fail@plt>
   180d5:	48 8d 0d e4 67 02 00 	lea    0x267e4(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   180dc:	ba 0b 04 00 00       	mov    $0x40b,%edx
   180e1:	48 8d 35 69 62 02 00 	lea    0x26269(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   180e8:	48 8d 3d 83 65 02 00 	lea    0x26583(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   180ef:	e8 0c 7f ff ff       	callq  10000 <__assert_fail@plt>
   180f4:	48 8d 0d c5 67 02 00 	lea    0x267c5(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   180fb:	ba 13 04 00 00       	mov    $0x413,%edx
   18100:	48 8d 35 4a 62 02 00 	lea    0x2624a(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18107:	48 8d 3d 50 65 02 00 	lea    0x26550(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1810e:	e8 ed 7e ff ff       	callq  10000 <__assert_fail@plt>
   18113:	48 8d 0d a6 67 02 00 	lea    0x267a6(%rip),%rcx        # 3e8c0 <__PRETTY_FUNCTION__.5736>
   1811a:	ba 14 04 00 00       	mov    $0x414,%edx
   1811f:	48 8d 35 2b 62 02 00 	lea    0x2622b(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18126:	48 8d 3d 45 65 02 00 	lea    0x26545(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   1812d:	e8 ce 7e ff ff       	callq  10000 <__assert_fail@plt>
   18132:	e8 d9 79 ff ff       	callq  fb10 <__errno_location@plt>
   18137:	89 df                	mov    %ebx,%edi
   18139:	89 18                	mov    %ebx,(%rax)
   1813b:	e8 90 88 ff ff       	callq  109d0 <strerror@plt>
   18140:	4c 8d 0d f2 64 02 00 	lea    0x264f2(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   18147:	41 b8 15 04 00 00    	mov    $0x415,%r8d
   1814d:	51                   	push   %rcx
   1814e:	50                   	push   %rax
   1814f:	e9 b7 fe ff ff       	jmpq   1800b <cbuf_copy+0x18b>
   18154:	e8 b7 79 ff ff       	callq  fb10 <__errno_location@plt>
   18159:	44 89 f7             	mov    %r14d,%edi
   1815c:	44 89 30             	mov    %r14d,(%rax)
   1815f:	e8 6c 88 ff ff       	callq  109d0 <strerror@plt>
   18164:	4c 8d 0d be 64 02 00 	lea    0x264be(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   1816b:	41 b8 08 04 00 00    	mov    $0x408,%r8d
   18171:	56                   	push   %rsi
   18172:	50                   	push   %rax
   18173:	e9 93 fe ff ff       	jmpq   1800b <cbuf_copy+0x18b>
   18178:	e8 93 79 ff ff       	callq  fb10 <__errno_location@plt>
   1817d:	44 89 f7             	mov    %r14d,%edi
   18180:	44 89 30             	mov    %r14d,(%rax)
   18183:	e8 48 88 ff ff       	callq  109d0 <strerror@plt>
   18188:	41 b8 03 04 00 00    	mov    $0x403,%r8d
   1818e:	41 51                	push   %r9
   18190:	4c 8d 0d 92 64 02 00 	lea    0x26492(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   18197:	50                   	push   %rax
   18198:	e9 6e fe ff ff       	jmpq   1800b <cbuf_copy+0x18b>
   1819d:	e8 6e 79 ff ff       	callq  fb10 <__errno_location@plt>
   181a2:	44 89 f7             	mov    %r14d,%edi
   181a5:	44 89 30             	mov    %r14d,(%rax)
   181a8:	e8 23 88 ff ff       	callq  109d0 <strerror@plt>
   181ad:	4c 8d 0d 75 64 02 00 	lea    0x26475(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   181b4:	41 b8 07 04 00 00    	mov    $0x407,%r8d
   181ba:	57                   	push   %rdi
   181bb:	50                   	push   %rax
   181bc:	e9 4a fe ff ff       	jmpq   1800b <cbuf_copy+0x18b>

00000000000181c1 <.annobin_cbuf_copy.end>:
   181c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   181c8:	00 00 00 00 
   181cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000181d0 <cbuf_move>:
   181d0:	f3 0f 1e fa          	endbr64 
   181d4:	41 57                	push   %r15
   181d6:	41 56                	push   %r14
   181d8:	41 55                	push   %r13
   181da:	41 54                	push   %r12
   181dc:	55                   	push   %rbp
   181dd:	53                   	push   %rbx
   181de:	48 83 ec 18          	sub    $0x18,%rsp
   181e2:	48 85 ff             	test   %rdi,%rdi
   181e5:	0f 84 fa 01 00 00    	je     183e5 <cbuf_move+0x215>
   181eb:	48 89 f5             	mov    %rsi,%rbp
   181ee:	48 85 f6             	test   %rsi,%rsi
   181f1:	0f 84 cf 01 00 00    	je     183c6 <cbuf_move+0x1f6>
   181f7:	48 89 fb             	mov    %rdi,%rbx
   181fa:	41 89 d4             	mov    %edx,%r12d
   181fd:	49 89 cd             	mov    %rcx,%r13
   18200:	48 85 c9             	test   %rcx,%rcx
   18203:	74 06                	je     1820b <cbuf_move+0x3b>
   18205:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   1820b:	48 39 eb             	cmp    %rbp,%rbx
   1820e:	0f 84 9c 01 00 00    	je     183b0 <cbuf_move+0x1e0>
   18214:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   18218:	0f 8c 92 01 00 00    	jl     183b0 <cbuf_move+0x1e0>
   1821e:	45 85 e4             	test   %r12d,%r12d
   18221:	0f 84 51 01 00 00    	je     18378 <cbuf_move+0x1a8>
   18227:	48 39 eb             	cmp    %rbp,%rbx
   1822a:	0f 82 c8 00 00 00    	jb     182f8 <cbuf_move+0x128>
   18230:	48 8d 45 08          	lea    0x8(%rbp),%rax
   18234:	48 89 c7             	mov    %rax,%rdi
   18237:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1823c:	e8 8f 88 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   18241:	41 89 c6             	mov    %eax,%r14d
   18244:	85 c0                	test   %eax,%eax
   18246:	0f 85 c1 02 00 00    	jne    1850d <cbuf_move+0x33d>
   1824c:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   18250:	4c 89 ff             	mov    %r15,%rdi
   18253:	e8 78 88 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   18258:	41 89 c6             	mov    %eax,%r14d
   1825b:	85 c0                	test   %eax,%eax
   1825d:	0f 85 61 02 00 00    	jne    184c4 <cbuf_move+0x2f4>
   18263:	48 89 df             	mov    %rbx,%rdi
   18266:	e8 15 b7 ff ff       	callq  13980 <cbuf_is_valid>
   1826b:	85 c0                	test   %eax,%eax
   1826d:	0f 84 b3 01 00 00    	je     18426 <cbuf_move+0x256>
   18273:	48 89 ef             	mov    %rbp,%rdi
   18276:	e8 05 b7 ff ff       	callq  13980 <cbuf_is_valid>
   1827b:	85 c0                	test   %eax,%eax
   1827d:	0f 84 c2 01 00 00    	je     18445 <cbuf_move+0x275>
   18283:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   18287:	75 04                	jne    1828d <cbuf_move+0xbd>
   18289:	44 8b 63 40          	mov    0x40(%rbx),%r12d
   1828d:	45 31 f6             	xor    %r14d,%r14d
   18290:	45 85 e4             	test   %r12d,%r12d
   18293:	0f 8f e7 00 00 00    	jg     18380 <cbuf_move+0x1b0>
   18299:	48 89 df             	mov    %rbx,%rdi
   1829c:	e8 df b6 ff ff       	callq  13980 <cbuf_is_valid>
   182a1:	85 c0                	test   %eax,%eax
   182a3:	0f 84 bb 01 00 00    	je     18464 <cbuf_move+0x294>
   182a9:	48 89 ef             	mov    %rbp,%rdi
   182ac:	e8 cf b6 ff ff       	callq  13980 <cbuf_is_valid>
   182b1:	85 c0                	test   %eax,%eax
   182b3:	0f 84 ca 01 00 00    	je     18483 <cbuf_move+0x2b3>
   182b9:	4c 89 ff             	mov    %r15,%rdi
   182bc:	e8 2f 81 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   182c1:	89 c3                	mov    %eax,%ebx
   182c3:	85 c0                	test   %eax,%eax
   182c5:	0f 85 d7 01 00 00    	jne    184a2 <cbuf_move+0x2d2>
   182cb:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   182d0:	e8 1b 81 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   182d5:	89 c3                	mov    %eax,%ebx
   182d7:	85 c0                	test   %eax,%eax
   182d9:	0f 85 25 01 00 00    	jne    18404 <cbuf_move+0x234>
   182df:	48 83 c4 18          	add    $0x18,%rsp
   182e3:	44 89 f0             	mov    %r14d,%eax
   182e6:	5b                   	pop    %rbx
   182e7:	5d                   	pop    %rbp
   182e8:	41 5c                	pop    %r12
   182ea:	41 5d                	pop    %r13
   182ec:	41 5e                	pop    %r14
   182ee:	41 5f                	pop    %r15
   182f0:	c3                   	retq   
   182f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   182f8:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   182fc:	4c 89 ff             	mov    %r15,%rdi
   182ff:	e8 cc 87 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   18304:	41 89 c6             	mov    %eax,%r14d
   18307:	85 c0                	test   %eax,%eax
   18309:	0f 85 d9 01 00 00    	jne    184e8 <cbuf_move+0x318>
   1830f:	48 8d 45 08          	lea    0x8(%rbp),%rax
   18313:	48 89 c7             	mov    %rax,%rdi
   18316:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1831b:	e8 b0 87 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   18320:	41 89 c6             	mov    %eax,%r14d
   18323:	85 c0                	test   %eax,%eax
   18325:	0f 84 38 ff ff ff    	je     18263 <cbuf_move+0x93>
   1832b:	e8 e0 77 ff ff       	callq  fb10 <__errno_location@plt>
   18330:	44 89 f7             	mov    %r14d,%edi
   18333:	44 89 30             	mov    %r14d,(%rax)
   18336:	e8 95 86 ff ff       	callq  109d0 <strerror@plt>
   1833b:	4c 8d 0d e7 62 02 00 	lea    0x262e7(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   18342:	41 50                	push   %r8
   18344:	41 b8 35 04 00 00    	mov    $0x435,%r8d
   1834a:	50                   	push   %rax
   1834b:	48 8b 05 96 ac 23 00 	mov    0x23ac96(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   18352:	48 8d 0d f8 5f 02 00 	lea    0x25ff8(%rip),%rcx        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18359:	be 01 00 00 00       	mov    $0x1,%esi
   1835e:	48 8d 15 ad 62 02 00 	lea    0x262ad(%rip),%rdx        # 3e612 <__PRETTY_FUNCTION__.5439+0x2d2>
   18365:	48 8b 38             	mov    (%rax),%rdi
   18368:	31 c0                	xor    %eax,%eax
   1836a:	e8 f1 85 ff ff       	callq  10960 <__fprintf_chk@plt>
   1836f:	e8 7c 77 ff ff       	callq  faf0 <abort@plt>
   18374:	0f 1f 40 00          	nopl   0x0(%rax)
   18378:	45 31 f6             	xor    %r14d,%r14d
   1837b:	e9 5f ff ff ff       	jmpq   182df <cbuf_move+0x10f>
   18380:	4c 89 e9             	mov    %r13,%rcx
   18383:	44 89 e2             	mov    %r12d,%edx
   18386:	48 89 ee             	mov    %rbp,%rsi
   18389:	48 89 df             	mov    %rbx,%rdi
   1838c:	e8 ff c6 ff ff       	callq  14a90 <cbuf_copier>
   18391:	41 89 c6             	mov    %eax,%r14d
   18394:	85 c0                	test   %eax,%eax
   18396:	0f 8e fd fe ff ff    	jle    18299 <cbuf_move+0xc9>
   1839c:	89 c6                	mov    %eax,%esi
   1839e:	48 89 df             	mov    %rbx,%rdi
   183a1:	e8 aa bd ff ff       	callq  14150 <cbuf_dropper>
   183a6:	e9 ee fe ff ff       	jmpq   18299 <cbuf_move+0xc9>
   183ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   183b0:	e8 5b 77 ff ff       	callq  fb10 <__errno_location@plt>
   183b5:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   183bb:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   183c1:	e9 19 ff ff ff       	jmpq   182df <cbuf_move+0x10f>
   183c6:	48 8d 0d d3 64 02 00 	lea    0x264d3(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   183cd:	ba 21 04 00 00       	mov    $0x421,%edx
   183d2:	48 8d 35 78 5f 02 00 	lea    0x25f78(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   183d9:	48 8d 3d a1 61 02 00 	lea    0x261a1(%rip),%rdi        # 3e581 <__PRETTY_FUNCTION__.5439+0x241>
   183e0:	e8 1b 7c ff ff       	callq  10000 <__assert_fail@plt>
   183e5:	48 8d 0d b4 64 02 00 	lea    0x264b4(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   183ec:	ba 20 04 00 00       	mov    $0x420,%edx
   183f1:	48 8d 35 59 5f 02 00 	lea    0x25f59(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   183f8:	48 8d 3d 28 61 02 00 	lea    0x26128(%rip),%rdi        # 3e527 <__PRETTY_FUNCTION__.5439+0x1e7>
   183ff:	e8 fc 7b ff ff       	callq  10000 <__assert_fail@plt>
   18404:	e8 07 77 ff ff       	callq  fb10 <__errno_location@plt>
   18409:	89 df                	mov    %ebx,%edi
   1840b:	89 18                	mov    %ebx,(%rax)
   1840d:	e8 be 85 ff ff       	callq  109d0 <strerror@plt>
   18412:	4c 8d 0d 20 62 02 00 	lea    0x26220(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   18419:	41 b8 4a 04 00 00    	mov    $0x44a,%r8d
   1841f:	52                   	push   %rdx
   18420:	50                   	push   %rax
   18421:	e9 25 ff ff ff       	jmpq   1834b <cbuf_move+0x17b>
   18426:	48 8d 0d 73 64 02 00 	lea    0x26473(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   1842d:	ba 3b 04 00 00       	mov    $0x43b,%edx
   18432:	48 8d 35 18 5f 02 00 	lea    0x25f18(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18439:	48 8d 3d 1e 62 02 00 	lea    0x2621e(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   18440:	e8 bb 7b ff ff       	callq  10000 <__assert_fail@plt>
   18445:	48 8d 0d 54 64 02 00 	lea    0x26454(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   1844c:	ba 3c 04 00 00       	mov    $0x43c,%edx
   18451:	48 8d 35 f9 5e 02 00 	lea    0x25ef9(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18458:	48 8d 3d 13 62 02 00 	lea    0x26213(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   1845f:	e8 9c 7b ff ff       	callq  10000 <__assert_fail@plt>
   18464:	48 8d 0d 35 64 02 00 	lea    0x26435(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   1846b:	ba 47 04 00 00       	mov    $0x447,%edx
   18470:	48 8d 35 da 5e 02 00 	lea    0x25eda(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18477:	48 8d 3d e0 61 02 00 	lea    0x261e0(%rip),%rdi        # 3e65e <__PRETTY_FUNCTION__.5439+0x31e>
   1847e:	e8 7d 7b ff ff       	callq  10000 <__assert_fail@plt>
   18483:	48 8d 0d 16 64 02 00 	lea    0x26416(%rip),%rcx        # 3e8a0 <__PRETTY_FUNCTION__.5750>
   1848a:	ba 48 04 00 00       	mov    $0x448,%edx
   1848f:	48 8d 35 bb 5e 02 00 	lea    0x25ebb(%rip),%rsi        # 3e351 <__PRETTY_FUNCTION__.5439+0x11>
   18496:	48 8d 3d d5 61 02 00 	lea    0x261d5(%rip),%rdi        # 3e672 <__PRETTY_FUNCTION__.5439+0x332>
   1849d:	e8 5e 7b ff ff       	callq  10000 <__assert_fail@plt>
   184a2:	e8 69 76 ff ff       	callq  fb10 <__errno_location@plt>
   184a7:	89 df                	mov    %ebx,%edi
   184a9:	89 18                	mov    %ebx,(%rax)
   184ab:	e8 20 85 ff ff       	callq  109d0 <strerror@plt>
   184b0:	4c 8d 0d 82 61 02 00 	lea    0x26182(%rip),%r9        # 3e639 <__PRETTY_FUNCTION__.5439+0x2f9>
   184b7:	41 b8 49 04 00 00    	mov    $0x449,%r8d
   184bd:	51                   	push   %rcx
   184be:	50                   	push   %rax
   184bf:	e9 87 fe ff ff       	jmpq   1834b <cbuf_move+0x17b>
   184c4:	e8 47 76 ff ff       	callq  fb10 <__errno_location@plt>
   184c9:	44 89 f7             	mov    %r14d,%edi
   184cc:	44 89 30             	mov    %r14d,(%rax)
   184cf:	e8 fc 84 ff ff       	callq  109d0 <strerror@plt>
   184d4:	4c 8d 0d 4e 61 02 00 	lea    0x2614e(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   184db:	41 b8 39 04 00 00    	mov    $0x439,%r8d
   184e1:	56                   	push   %rsi
   184e2:	50                   	push   %rax
   184e3:	e9 63 fe ff ff       	jmpq   1834b <cbuf_move+0x17b>
   184e8:	e8 23 76 ff ff       	callq  fb10 <__errno_location@plt>
   184ed:	44 89 f7             	mov    %r14d,%edi
   184f0:	44 89 30             	mov    %r14d,(%rax)
   184f3:	e8 d8 84 ff ff       	callq  109d0 <strerror@plt>
   184f8:	41 b8 34 04 00 00    	mov    $0x434,%r8d
   184fe:	41 51                	push   %r9
   18500:	4c 8d 0d 22 61 02 00 	lea    0x26122(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   18507:	50                   	push   %rax
   18508:	e9 3e fe ff ff       	jmpq   1834b <cbuf_move+0x17b>
   1850d:	e8 fe 75 ff ff       	callq  fb10 <__errno_location@plt>
   18512:	44 89 f7             	mov    %r14d,%edi
   18515:	44 89 30             	mov    %r14d,(%rax)
   18518:	e8 b3 84 ff ff       	callq  109d0 <strerror@plt>
   1851d:	4c 8d 0d 05 61 02 00 	lea    0x26105(%rip),%r9        # 3e629 <__PRETTY_FUNCTION__.5439+0x2e9>
   18524:	41 b8 38 04 00 00    	mov    $0x438,%r8d
   1852a:	57                   	push   %rdi
   1852b:	50                   	push   %rax
   1852c:	e9 1a fe ff ff       	jmpq   1834b <cbuf_move+0x17b>

0000000000018531 <.annobin_cbuf.c_end>:
   18531:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18538:	00 00 00 
   1853b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018540 <base64_char_in_alphabet>:
   18540:	f3 0f 1e fa          	endbr64 
   18544:	40 0f b6 f6          	movzbl %sil,%esi
   18548:	80 7c 37 40 ff       	cmpb   $0xff,0x40(%rdi,%rsi,1)
   1854d:	0f 95 c0             	setne  %al
   18550:	c3                   	retq   

0000000000018551 <.annobin_base64_char_in_alphabet.end>:
   18551:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18558:	00 00 00 00 
   1855c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018560 <base64_init_maps>:
   18560:	f3 0f 1e fa          	endbr64 
   18564:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
  return __builtin___memset_chk (__dest, __ch, __len,
   18568:	66 0f 76 c0          	pcmpeqd %xmm0,%xmm0
   1856c:	31 c0                	xor    %eax,%eax
  return __builtin___memcpy_chk (__dest, __src, __len,
   1856e:	0f 11 0f             	movups %xmm1,(%rdi)
   18571:	f3 0f 6f 56 10       	movdqu 0x10(%rsi),%xmm2
   18576:	0f 11 57 10          	movups %xmm2,0x10(%rdi)
   1857a:	f3 0f 6f 5e 20       	movdqu 0x20(%rsi),%xmm3
   1857f:	0f 11 5f 20          	movups %xmm3,0x20(%rdi)
   18583:	f3 0f 6f 66 30       	movdqu 0x30(%rsi),%xmm4
  return __builtin___memset_chk (__dest, __ch, __len,
   18588:	0f 11 47 40          	movups %xmm0,0x40(%rdi)
  return __builtin___memcpy_chk (__dest, __src, __len,
   1858c:	0f 11 67 30          	movups %xmm4,0x30(%rdi)
  return __builtin___memset_chk (__dest, __ch, __len,
   18590:	0f 11 47 50          	movups %xmm0,0x50(%rdi)
   18594:	0f 11 47 60          	movups %xmm0,0x60(%rdi)
   18598:	0f 11 47 70          	movups %xmm0,0x70(%rdi)
   1859c:	0f 11 87 80 00 00 00 	movups %xmm0,0x80(%rdi)
   185a3:	0f 11 87 90 00 00 00 	movups %xmm0,0x90(%rdi)
   185aa:	0f 11 87 a0 00 00 00 	movups %xmm0,0xa0(%rdi)
   185b1:	0f 11 87 b0 00 00 00 	movups %xmm0,0xb0(%rdi)
   185b8:	0f 11 87 c0 00 00 00 	movups %xmm0,0xc0(%rdi)
   185bf:	0f 11 87 d0 00 00 00 	movups %xmm0,0xd0(%rdi)
   185c6:	0f 11 87 e0 00 00 00 	movups %xmm0,0xe0(%rdi)
   185cd:	0f 11 87 f0 00 00 00 	movups %xmm0,0xf0(%rdi)
   185d4:	0f 11 87 00 01 00 00 	movups %xmm0,0x100(%rdi)
   185db:	0f 11 87 10 01 00 00 	movups %xmm0,0x110(%rdi)
   185e2:	0f 11 87 20 01 00 00 	movups %xmm0,0x120(%rdi)
   185e9:	0f 11 87 30 01 00 00 	movups %xmm0,0x130(%rdi)
   185f0:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   185f4:	88 44 17 40          	mov    %al,0x40(%rdi,%rdx,1)
   185f8:	48 83 c0 01          	add    $0x1,%rax
   185fc:	48 83 f8 40          	cmp    $0x40,%rax
   18600:	75 ee                	jne    185f0 <base64_init_maps+0x90>
   18602:	c3                   	retq   

0000000000018603 <.annobin_base64_encoded_length.start>:
   18603:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1860a:	00 00 00 00 
   1860e:	66 90                	xchg   %ax,%ax

0000000000018610 <base64_encoded_length>:
   18610:	f3 0f 1e fa          	endbr64 
   18614:	48 8d 57 02          	lea    0x2(%rdi),%rdx
   18618:	48 bf ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdi
   1861f:	aa aa aa 
   18622:	48 89 d0             	mov    %rdx,%rax
   18625:	48 f7 e7             	mul    %rdi
   18628:	48 d1 ea             	shr    %rdx
   1862b:	48 8d 04 95 00 00 00 	lea    0x0(,%rdx,4),%rax
   18632:	00 
   18633:	c3                   	retq   

0000000000018634 <.annobin_base64_encode_triplet_using_maps.start>:
   18634:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1863b:	00 00 00 00 
   1863f:	90                   	nop

0000000000018640 <base64_encode_triplet_using_maps>:
   18640:	f3 0f 1e fa          	endbr64 
   18644:	0f be 02             	movsbl (%rdx),%eax
   18647:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
   1864b:	44 0f b6 42 02       	movzbl 0x2(%rdx),%r8d
   18650:	89 c2                	mov    %eax,%edx
   18652:	c1 e0 04             	shl    $0x4,%eax
   18655:	c1 fa 02             	sar    $0x2,%edx
   18658:	83 e0 30             	and    $0x30,%eax
   1865b:	83 e2 3f             	and    $0x3f,%edx
   1865e:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
   18662:	88 16                	mov    %dl,(%rsi)
   18664:	0f be d1             	movsbl %cl,%edx
   18667:	89 d1                	mov    %edx,%ecx
   18669:	c1 e2 02             	shl    $0x2,%edx
   1866c:	c0 e9 04             	shr    $0x4,%cl
   1866f:	83 e2 3c             	and    $0x3c,%edx
   18672:	09 c8                	or     %ecx,%eax
   18674:	48 0f be c0          	movsbq %al,%rax
   18678:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   1867c:	88 46 01             	mov    %al,0x1(%rsi)
   1867f:	44 89 c0             	mov    %r8d,%eax
   18682:	41 83 e0 3f          	and    $0x3f,%r8d
   18686:	c0 e8 06             	shr    $0x6,%al
   18689:	09 c2                	or     %eax,%edx
   1868b:	48 0f be d2          	movsbq %dl,%rdx
   1868f:	0f b6 04 17          	movzbl (%rdi,%rdx,1),%eax
   18693:	88 46 02             	mov    %al,0x2(%rsi)
   18696:	42 0f b6 04 07       	movzbl (%rdi,%r8,1),%eax
   1869b:	88 46 03             	mov    %al,0x3(%rsi)
   1869e:	c3                   	retq   

000000000001869f <.annobin_base64_encode_tail_using_maps.start>:
   1869f:	90                   	nop

00000000000186a0 <base64_encode_tail_using_maps>:
   186a0:	f3 0f 1e fa          	endbr64 
   186a4:	41 54                	push   %r12
   186a6:	55                   	push   %rbp
   186a7:	53                   	push   %rbx
   186a8:	48 83 ec 10          	sub    $0x10,%rsp
   186ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   186b3:	00 00 
   186b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   186ba:	31 c0                	xor    %eax,%eax
   186bc:	31 c0                	xor    %eax,%eax
   186be:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   186c3:	66 89 44 24 05       	mov    %ax,0x5(%rsp)
   186c8:	48 83 f9 03          	cmp    $0x3,%rcx
   186cc:	77 6a                	ja     18738 <base64_encode_tail_using_maps+0x98>
   186ce:	48 89 cb             	mov    %rcx,%rbx
  return __builtin___memcpy_chk (__dest, __src, __len,
   186d1:	4c 8d 44 24 05       	lea    0x5(%rsp),%r8
   186d6:	48 89 f5             	mov    %rsi,%rbp
   186d9:	b9 03 00 00 00       	mov    $0x3,%ecx
   186de:	48 89 d6             	mov    %rdx,%rsi
   186e1:	49 89 fc             	mov    %rdi,%r12
   186e4:	48 89 da             	mov    %rbx,%rdx
   186e7:	4c 89 c7             	mov    %r8,%rdi
   186ea:	e8 91 7b ff ff       	callq  10280 <__memcpy_chk@plt>
   186ef:	48 89 ee             	mov    %rbp,%rsi
   186f2:	4c 89 e7             	mov    %r12,%rdi
   186f5:	48 89 c2             	mov    %rax,%rdx
   186f8:	e8 43 ff ff ff       	callq  18640 <base64_encode_triplet_using_maps>
   186fd:	b8 03 00 00 00       	mov    $0x3,%eax
   18702:	48 8d 4c 1d 01       	lea    0x1(%rbp,%rbx,1),%rcx
   18707:	48 29 d8             	sub    %rbx,%rax
  return __builtin___memset_chk (__dest, __ch, __len,
   1870a:	89 c6                	mov    %eax,%esi
   1870c:	85 c0                	test   %eax,%eax
   1870e:	74 0f                	je     1871f <base64_encode_tail_using_maps+0x7f>
   18710:	31 c0                	xor    %eax,%eax
   18712:	89 c2                	mov    %eax,%edx
   18714:	83 c0 01             	add    $0x1,%eax
   18717:	c6 04 11 3d          	movb   $0x3d,(%rcx,%rdx,1)
   1871b:	39 f0                	cmp    %esi,%eax
   1871d:	72 f3                	jb     18712 <base64_encode_tail_using_maps+0x72>
   1871f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18724:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1872b:	00 00 
   1872d:	75 28                	jne    18757 <base64_encode_tail_using_maps+0xb7>
   1872f:	48 83 c4 10          	add    $0x10,%rsp
   18733:	5b                   	pop    %rbx
   18734:	5d                   	pop    %rbp
   18735:	41 5c                	pop    %r12
   18737:	c3                   	retq   
   18738:	48 8d 0d c1 64 02 00 	lea    0x264c1(%rip),%rcx        # 3ec00 <__PRETTY_FUNCTION__.2601>
   1873f:	ba 51 00 00 00       	mov    $0x51,%edx
   18744:	48 8d 35 81 64 02 00 	lea    0x26481(%rip),%rsi        # 3ebcc <__PRETTY_FUNCTION__.5484+0xc>
   1874b:	48 8d 3d 8f 64 02 00 	lea    0x2648f(%rip),%rdi        # 3ebe1 <__PRETTY_FUNCTION__.5484+0x21>
   18752:	e8 a9 78 ff ff       	callq  10000 <__assert_fail@plt>
   18757:	e8 f4 76 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001875c <.annobin_base64_encode_tail_using_maps.end>:
   1875c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018760 <base64_encode_using_maps>:
   18760:	f3 0f 1e fa          	endbr64 
   18764:	41 57                	push   %r15
   18766:	41 56                	push   %r14
   18768:	49 89 fe             	mov    %rdi,%r14
   1876b:	4c 89 c7             	mov    %r8,%rdi
   1876e:	41 55                	push   %r13
   18770:	49 89 cd             	mov    %rcx,%r13
   18773:	41 54                	push   %r12
   18775:	49 89 f4             	mov    %rsi,%r12
   18778:	55                   	push   %rbp
   18779:	4c 89 c5             	mov    %r8,%rbp
   1877c:	53                   	push   %rbx
   1877d:	48 89 d3             	mov    %rdx,%rbx
   18780:	48 83 ec 18          	sub    $0x18,%rsp
   18784:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   18789:	e8 82 fe ff ff       	callq  18610 <base64_encoded_length>
   1878e:	48 39 d8             	cmp    %rbx,%rax
   18791:	0f 87 83 00 00 00    	ja     1881a <base64_encode_using_maps+0xba>
   18797:	45 31 ff             	xor    %r15d,%r15d
   1879a:	31 db                	xor    %ebx,%ebx
   1879c:	4c 89 e7             	mov    %r12,%rdi
   1879f:	48 89 e9             	mov    %rbp,%rcx
   187a2:	48 83 fd 02          	cmp    $0x2,%rbp
   187a6:	76 31                	jbe    187d9 <base64_encode_using_maps+0x79>
   187a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   187af:	00 
   187b0:	49 8d 54 1d 00       	lea    0x0(%r13,%rbx,1),%rdx
   187b5:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
   187b9:	4c 89 f7             	mov    %r14,%rdi
   187bc:	48 83 c3 03          	add    $0x3,%rbx
   187c0:	e8 7b fe ff ff       	callq  18640 <base64_encode_triplet_using_maps>
   187c5:	48 89 e9             	mov    %rbp,%rcx
   187c8:	49 83 c7 04          	add    $0x4,%r15
   187cc:	48 29 d9             	sub    %rbx,%rcx
   187cf:	48 83 f9 02          	cmp    $0x2,%rcx
   187d3:	77 db                	ja     187b0 <base64_encode_using_maps+0x50>
   187d5:	4b 8d 3c 3c          	lea    (%r12,%r15,1),%rdi
   187d9:	48 39 dd             	cmp    %rbx,%rbp
   187dc:	77 22                	ja     18800 <base64_encode_using_maps+0xa0>
   187de:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   187e3:	31 f6                	xor    %esi,%esi
   187e5:	4c 29 fa             	sub    %r15,%rdx
   187e8:	e8 43 78 ff ff       	callq  10030 <memset@plt>
   187ed:	4c 89 f8             	mov    %r15,%rax
   187f0:	48 83 c4 18          	add    $0x18,%rsp
   187f4:	5b                   	pop    %rbx
   187f5:	5d                   	pop    %rbp
   187f6:	41 5c                	pop    %r12
   187f8:	41 5d                	pop    %r13
   187fa:	41 5e                	pop    %r14
   187fc:	41 5f                	pop    %r15
   187fe:	c3                   	retq   
   187ff:	90                   	nop
   18800:	48 89 fe             	mov    %rdi,%rsi
   18803:	49 8d 54 1d 00       	lea    0x0(%r13,%rbx,1),%rdx
   18808:	4c 89 f7             	mov    %r14,%rdi
   1880b:	49 83 c7 04          	add    $0x4,%r15
   1880f:	e8 8c fe ff ff       	callq  186a0 <base64_encode_tail_using_maps>
   18814:	4b 8d 3c 3c          	lea    (%r12,%r15,1),%rdi
   18818:	eb c4                	jmp    187de <base64_encode_using_maps+0x7e>
   1881a:	e8 f1 72 ff ff       	callq  fb10 <__errno_location@plt>
   1881f:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
   18825:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1882c:	eb c2                	jmp    187f0 <base64_encode_using_maps+0x90>

000000000001882e <.annobin_base64_decoded_length.start>:
   1882e:	66 90                	xchg   %ax,%ax

0000000000018830 <base64_decoded_length>:
   18830:	f3 0f 1e fa          	endbr64 
   18834:	48 83 c7 03          	add    $0x3,%rdi
   18838:	48 c1 ef 02          	shr    $0x2,%rdi
   1883c:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   18840:	c3                   	retq   

0000000000018841 <.annobin_base64_decode_quartet_using_maps.start>:
   18841:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18848:	00 00 00 00 
   1884c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018850 <base64_decode_quartet_using_maps>:
   18850:	f3 0f 1e fa          	endbr64 
   18854:	41 54                	push   %r12
   18856:	55                   	push   %rbp
   18857:	53                   	push   %rbx
   18858:	48 83 ec 20          	sub    $0x20,%rsp
   1885c:	0f b6 02             	movzbl (%rdx),%eax
   1885f:	44 0f b6 64 07 40    	movzbl 0x40(%rdi,%rax,1),%r12d
   18865:	41 80 fc ff          	cmp    $0xff,%r12b
   18869:	0f 84 ea 00 00 00    	je     18959 <base64_decode_quartet_using_maps+0x109>
   1886f:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
   18873:	0f b6 5c 07 40       	movzbl 0x40(%rdi,%rax,1),%ebx
   18878:	80 fb ff             	cmp    $0xff,%bl
   1887b:	0f 84 aa 00 00 00    	je     1892b <base64_decode_quartet_using_maps+0xdb>
   18881:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
   18885:	0f b6 6c 07 40       	movzbl 0x40(%rdi,%rax,1),%ebp
   1888a:	40 80 fd ff          	cmp    $0xff,%bpl
   1888e:	74 6d                	je     188fd <base64_decode_quartet_using_maps+0xad>
   18890:	0f b6 42 03          	movzbl 0x3(%rdx),%eax
   18894:	0f b6 44 07 40       	movzbl 0x40(%rdi,%rax,1),%eax
   18899:	3c ff                	cmp    $0xff,%al
   1889b:	74 4c                	je     188e9 <base64_decode_quartet_using_maps+0x99>
   1889d:	41 80 fc ff          	cmp    $0xff,%r12b
   188a1:	74 3d                	je     188e0 <base64_decode_quartet_using_maps+0x90>
   188a3:	80 fb ff             	cmp    $0xff,%bl
   188a6:	74 38                	je     188e0 <base64_decode_quartet_using_maps+0x90>
   188a8:	40 80 fd ff          	cmp    $0xff,%bpl
   188ac:	74 32                	je     188e0 <base64_decode_quartet_using_maps+0x90>
   188ae:	89 da                	mov    %ebx,%edx
   188b0:	41 c1 e4 02          	shl    $0x2,%r12d
   188b4:	c0 fa 04             	sar    $0x4,%dl
   188b7:	c1 e3 04             	shl    $0x4,%ebx
   188ba:	41 09 d4             	or     %edx,%r12d
   188bd:	89 ea                	mov    %ebp,%edx
   188bf:	c1 e5 06             	shl    $0x6,%ebp
   188c2:	c0 fa 02             	sar    $0x2,%dl
   188c5:	09 c5                	or     %eax,%ebp
   188c7:	44 88 26             	mov    %r12b,(%rsi)
   188ca:	31 c0                	xor    %eax,%eax
   188cc:	09 d3                	or     %edx,%ebx
   188ce:	40 88 6e 02          	mov    %bpl,0x2(%rsi)
   188d2:	88 5e 01             	mov    %bl,0x1(%rsi)
   188d5:	48 83 c4 20          	add    $0x20,%rsp
   188d9:	5b                   	pop    %rbx
   188da:	5d                   	pop    %rbp
   188db:	41 5c                	pop    %r12
   188dd:	c3                   	retq   
   188de:	66 90                	xchg   %ax,%ax
   188e0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   188e7:	eb ec                	jmp    188d5 <base64_decode_quartet_using_maps+0x85>
   188e9:	e8 22 72 ff ff       	callq  fb10 <__errno_location@plt>
   188ee:	c7 00 21 00 00 00    	movl   $0x21,(%rax)
   188f4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   188fb:	eb d8                	jmp    188d5 <base64_decode_quartet_using_maps+0x85>
   188fd:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   18902:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   18907:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1890c:	e8 ff 71 ff ff       	callq  fb10 <__errno_location@plt>
   18911:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18916:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1891b:	c7 00 21 00 00 00    	movl   $0x21,(%rax)
   18921:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18926:	e9 65 ff ff ff       	jmpq   18890 <base64_decode_quartet_using_maps+0x40>
   1892b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   18930:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   18935:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1893a:	e8 d1 71 ff ff       	callq  fb10 <__errno_location@plt>
   1893f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18944:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   18949:	c7 00 21 00 00 00    	movl   $0x21,(%rax)
   1894f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18954:	e9 28 ff ff ff       	jmpq   18881 <base64_decode_quartet_using_maps+0x31>
   18959:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1895e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   18963:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   18968:	e8 a3 71 ff ff       	callq  fb10 <__errno_location@plt>
   1896d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18972:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   18977:	c7 00 21 00 00 00    	movl   $0x21,(%rax)
   1897d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18982:	e9 e8 fe ff ff       	jmpq   1886f <base64_decode_quartet_using_maps+0x1f>

0000000000018987 <.annobin_base64_decode_quartet_using_maps.end>:
   18987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1898e:	00 00 

0000000000018990 <base64_decode_tail_using_maps>:
   18990:	f3 0f 1e fa          	endbr64 
   18994:	41 55                	push   %r13
   18996:	41 54                	push   %r12
   18998:	55                   	push   %rbp
   18999:	53                   	push   %rbx
   1899a:	48 83 ec 18          	sub    $0x18,%rsp
   1899e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   189a5:	00 00 
   189a7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   189ac:	31 c0                	xor    %eax,%eax
   189ae:	48 85 c9             	test   %rcx,%rcx
   189b1:	74 30                	je     189e3 <base64_decode_tail_using_maps+0x53>
   189b3:	80 7c 0a ff 3d       	cmpb   $0x3d,-0x1(%rdx,%rcx,1)
   189b8:	49 89 f5             	mov    %rsi,%r13
   189bb:	49 89 fc             	mov    %rdi,%r12
   189be:	48 89 d6             	mov    %rdx,%rsi
   189c1:	48 8d 59 ff          	lea    -0x1(%rcx),%rbx
   189c5:	74 17                	je     189de <base64_decode_tail_using_maps+0x4e>
   189c7:	eb 3b                	jmp    18a04 <base64_decode_tail_using_maps+0x74>
   189c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   189d0:	80 7c 1e ff 3d       	cmpb   $0x3d,-0x1(%rsi,%rbx,1)
   189d5:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   189d9:	75 35                	jne    18a10 <base64_decode_tail_using_maps+0x80>
   189db:	48 89 c3             	mov    %rax,%rbx
   189de:	48 85 db             	test   %rbx,%rbx
   189e1:	75 ed                	jne    189d0 <base64_decode_tail_using_maps+0x40>
   189e3:	31 c0                	xor    %eax,%eax
   189e5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   189ea:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   189f1:	00 00 
   189f3:	0f 85 85 00 00 00    	jne    18a7e <base64_decode_tail_using_maps+0xee>
   189f9:	48 83 c4 18          	add    $0x18,%rsp
   189fd:	5b                   	pop    %rbx
   189fe:	5d                   	pop    %rbp
   189ff:	41 5c                	pop    %r12
   18a01:	41 5d                	pop    %r13
   18a03:	c3                   	retq   
   18a04:	48 89 cb             	mov    %rcx,%rbx
   18a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18a0e:	00 00 
   18a10:	48 83 fb 01          	cmp    $0x1,%rbx
   18a14:	74 45                	je     18a5b <base64_decode_tail_using_maps+0xcb>
  return __builtin___memcpy_chk (__dest, __src, __len,
   18a16:	48 8d 6c 24 04       	lea    0x4(%rsp),%rbp
   18a1b:	b9 04 00 00 00       	mov    $0x4,%ecx
   18a20:	48 89 da             	mov    %rbx,%rdx
   18a23:	48 89 ef             	mov    %rbp,%rdi
   18a26:	e8 55 78 ff ff       	callq  10280 <__memcpy_chk@plt>
   18a2b:	ba 04 00 00 00       	mov    $0x4,%edx
   18a30:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
  return __builtin___memset_chk (__dest, __ch, __len,
   18a35:	be 41 00 00 00       	mov    $0x41,%esi
   18a3a:	48 29 da             	sub    %rbx,%rdx
   18a3d:	e8 ee 75 ff ff       	callq  10030 <memset@plt>
   18a42:	48 89 ea             	mov    %rbp,%rdx
   18a45:	4c 89 ee             	mov    %r13,%rsi
   18a48:	4c 89 e7             	mov    %r12,%rdi
   18a4b:	e8 00 fe ff ff       	callq  18850 <base64_decode_quartet_using_maps>
   18a50:	83 f8 ff             	cmp    $0xffffffff,%eax
   18a53:	74 1d                	je     18a72 <base64_decode_tail_using_maps+0xe2>
   18a55:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   18a59:	eb 8a                	jmp    189e5 <base64_decode_tail_using_maps+0x55>
   18a5b:	e8 b0 70 ff ff       	callq  fb10 <__errno_location@plt>
   18a60:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   18a66:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   18a6d:	e9 73 ff ff ff       	jmpq   189e5 <base64_decode_tail_using_maps+0x55>
   18a72:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   18a79:	e9 67 ff ff ff       	jmpq   189e5 <base64_decode_tail_using_maps+0x55>
   18a7e:	e8 cd 73 ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000018a83 <.annobin_base64_decode_tail_using_maps.end>:
   18a83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18a8a:	00 00 00 00 
   18a8e:	66 90                	xchg   %ax,%ax

0000000000018a90 <base64_decode_using_maps>:
   18a90:	f3 0f 1e fa          	endbr64 
   18a94:	41 57                	push   %r15
   18a96:	41 56                	push   %r14
   18a98:	49 89 d6             	mov    %rdx,%r14
   18a9b:	41 55                	push   %r13
   18a9d:	49 89 fd             	mov    %rdi,%r13
   18aa0:	4c 89 c7             	mov    %r8,%rdi
   18aa3:	41 54                	push   %r12
   18aa5:	49 89 cc             	mov    %rcx,%r12
   18aa8:	55                   	push   %rbp
   18aa9:	48 89 f5             	mov    %rsi,%rbp
   18aac:	53                   	push   %rbx
   18aad:	4c 89 c3             	mov    %r8,%rbx
   18ab0:	48 83 ec 28          	sub    $0x28,%rsp
   18ab4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   18ab9:	e8 72 fd ff ff       	callq  18830 <base64_decoded_length>
   18abe:	4c 39 f0             	cmp    %r14,%rax
   18ac1:	0f 87 b9 00 00 00    	ja     18b80 <base64_decode_using_maps+0xf0>
   18ac7:	48 83 fb 04          	cmp    $0x4,%rbx
   18acb:	0f 86 9e 00 00 00    	jbe    18b6f <base64_decode_using_maps+0xdf>
   18ad1:	48 8d 43 fb          	lea    -0x5(%rbx),%rax
   18ad5:	45 31 f6             	xor    %r14d,%r14d
   18ad8:	45 31 ff             	xor    %r15d,%r15d
   18adb:	48 c1 e8 02          	shr    $0x2,%rax
   18adf:	48 8d 44 40 03       	lea    0x3(%rax,%rax,2),%rax
   18ae4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18ae9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18aee:	eb 15                	jmp    18b05 <base64_decode_using_maps+0x75>
   18af0:	49 83 c6 04          	add    $0x4,%r14
   18af4:	48 89 d9             	mov    %rbx,%rcx
   18af7:	49 83 c7 03          	add    $0x3,%r15
   18afb:	4c 29 f1             	sub    %r14,%rcx
   18afe:	4c 3b 7c 24 08       	cmp    0x8(%rsp),%r15
   18b03:	74 33                	je     18b38 <base64_decode_using_maps+0xa8>
   18b05:	4b 8d 14 34          	lea    (%r12,%r14,1),%rdx
   18b09:	4a 8d 74 3d 00       	lea    0x0(%rbp,%r15,1),%rsi
   18b0e:	4c 89 ef             	mov    %r13,%rdi
   18b11:	e8 3a fd ff ff       	callq  18850 <base64_decode_quartet_using_maps>
   18b16:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   18b1a:	75 d4                	jne    18af0 <base64_decode_using_maps+0x60>
   18b1c:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   18b23:	48 83 c4 28          	add    $0x28,%rsp
   18b27:	48 89 d8             	mov    %rbx,%rax
   18b2a:	5b                   	pop    %rbx
   18b2b:	5d                   	pop    %rbp
   18b2c:	41 5c                	pop    %r12
   18b2e:	41 5d                	pop    %r13
   18b30:	41 5e                	pop    %r14
   18b32:	41 5f                	pop    %r15
   18b34:	c3                   	retq   
   18b35:	0f 1f 00             	nopl   (%rax)
   18b38:	4d 01 f4             	add    %r14,%r12
   18b3b:	4a 8d 74 3d 00       	lea    0x0(%rbp,%r15,1),%rsi
   18b40:	4c 89 e2             	mov    %r12,%rdx
   18b43:	4c 89 ef             	mov    %r13,%rdi
   18b46:	e8 45 fe ff ff       	callq  18990 <base64_decode_tail_using_maps>
   18b4b:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   18b4f:	74 cb                	je     18b1c <base64_decode_using_maps+0x8c>
   18b51:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   18b56:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   18b5b:	31 f6                	xor    %esi,%esi
   18b5d:	48 01 c3             	add    %rax,%rbx
   18b60:	48 29 da             	sub    %rbx,%rdx
   18b63:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
   18b68:	e8 c3 74 ff ff       	callq  10030 <memset@plt>
   18b6d:	eb b4                	jmp    18b23 <base64_decode_using_maps+0x93>
   18b6f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   18b76:	00 00 
   18b78:	48 89 ee             	mov    %rbp,%rsi
   18b7b:	48 89 d9             	mov    %rbx,%rcx
   18b7e:	eb c0                	jmp    18b40 <base64_decode_using_maps+0xb0>
   18b80:	e8 8b 6f ff ff       	callq  fb10 <__errno_location@plt>
   18b85:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   18b8c:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
   18b92:	eb 8f                	jmp    18b23 <base64_decode_using_maps+0x93>

0000000000018b94 <.annobin_base64.c_end>:
   18b94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18b9b:	00 00 00 
   18b9e:	66 90                	xchg   %ax,%ax

0000000000018ba0 <bitmap_zero_range>:
   18ba0:	f3 0f 1e fa          	endbr64 
   18ba4:	41 55                	push   %r13
   18ba6:	89 f1                	mov    %esi,%ecx
   18ba8:	4c 8d 46 3f          	lea    0x3f(%rsi),%r8
   18bac:	41 54                	push   %r12
   18bae:	49 89 d4             	mov    %rdx,%r12
   18bb1:	55                   	push   %rbp
   18bb2:	48 89 d5             	mov    %rdx,%rbp
   18bb5:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   18bbc:	49 83 e4 c0          	and    $0xffffffffffffffc0,%r12
   18bc0:	53                   	push   %rbx
   18bc1:	48 89 d0             	mov    %rdx,%rax
   18bc4:	48 89 fb             	mov    %rdi,%rbx
   18bc7:	4c 89 c7             	mov    %r8,%rdi
   18bca:	48 d3 e8             	shr    %cl,%rax
   18bcd:	89 e9                	mov    %ebp,%ecx
   18bcf:	48 83 e7 c0          	and    $0xffffffffffffffc0,%rdi
   18bd3:	48 d3 ea             	shr    %cl,%rdx
   18bd6:	48 83 ec 08          	sub    $0x8,%rsp
   18bda:	48 39 ee             	cmp    %rbp,%rsi
   18bdd:	0f 87 89 00 00 00    	ja     18c6c <bitmap_zero_range+0xcc>
   18be3:	48 f7 d2             	not    %rdx
   18be6:	49 89 d5             	mov    %rdx,%r13
   18be9:	4c 39 e7             	cmp    %r12,%rdi
   18bec:	77 62                	ja     18c50 <bitmap_zero_range+0xb0>
   18bee:	48 39 fe             	cmp    %rdi,%rsi
   18bf1:	73 0e                	jae    18c01 <bitmap_zero_range+0x61>
   18bf3:	48 c1 ee 06          	shr    $0x6,%rsi
   18bf7:	48 0f c8             	bswap  %rax
   18bfa:	48 f7 d0             	not    %rax
   18bfd:	48 21 04 f3          	and    %rax,(%rbx,%rsi,8)
   18c01:	4c 39 e7             	cmp    %r12,%rdi
   18c04:	72 2a                	jb     18c30 <bitmap_zero_range+0x90>
   18c06:	4c 39 e5             	cmp    %r12,%rbp
   18c09:	76 14                	jbe    18c1f <bitmap_zero_range+0x7f>
   18c0b:	48 89 e9             	mov    %rbp,%rcx
   18c0e:	4c 89 ea             	mov    %r13,%rdx
   18c11:	48 c1 e9 06          	shr    $0x6,%rcx
   18c15:	48 0f ca             	bswap  %rdx
   18c18:	48 f7 d2             	not    %rdx
   18c1b:	48 21 14 cb          	and    %rdx,(%rbx,%rcx,8)
   18c1f:	48 83 c4 08          	add    $0x8,%rsp
   18c23:	5b                   	pop    %rbx
   18c24:	5d                   	pop    %rbp
   18c25:	41 5c                	pop    %r12
   18c27:	41 5d                	pop    %r13
   18c29:	c3                   	retq   
   18c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c30:	4c 89 e2             	mov    %r12,%rdx
   18c33:	49 c1 e8 06          	shr    $0x6,%r8
   18c37:	31 f6                	xor    %esi,%esi
   18c39:	48 29 fa             	sub    %rdi,%rdx
   18c3c:	4a 8d 3c c3          	lea    (%rbx,%r8,8),%rdi
   18c40:	48 c1 ea 03          	shr    $0x3,%rdx
   18c44:	e8 e7 73 ff ff       	callq  10030 <memset@plt>
   18c49:	4c 39 e5             	cmp    %r12,%rbp
   18c4c:	76 d1                	jbe    18c1f <bitmap_zero_range+0x7f>
   18c4e:	eb bb                	jmp    18c0b <bitmap_zero_range+0x6b>
   18c50:	48 21 d0             	and    %rdx,%rax
   18c53:	48 c1 ee 06          	shr    $0x6,%rsi
   18c57:	48 0f c8             	bswap  %rax
   18c5a:	48 f7 d0             	not    %rax
   18c5d:	48 21 04 f3          	and    %rax,(%rbx,%rsi,8)
   18c61:	48 83 c4 08          	add    $0x8,%rsp
   18c65:	5b                   	pop    %rbx
   18c66:	5d                   	pop    %rbp
   18c67:	41 5c                	pop    %r12
   18c69:	41 5d                	pop    %r13
   18c6b:	c3                   	retq   
   18c6c:	48 8d 0d 3d 61 02 00 	lea    0x2613d(%rip),%rcx        # 3edb0 <__PRETTY_FUNCTION__.3345>
   18c73:	ba 13 00 00 00       	mov    $0x13,%edx
   18c78:	48 8d 35 e1 60 02 00 	lea    0x260e1(%rip),%rsi        # 3ed60 <base64_maps_rfc4648+0x140>
   18c7f:	48 8d 3d ef 60 02 00 	lea    0x260ef(%rip),%rdi        # 3ed75 <base64_maps_rfc4648+0x155>
   18c86:	e8 75 73 ff ff       	callq  10000 <__assert_fail@plt>

0000000000018c8b <.annobin_bitmap_fill_range.start>:
   18c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018c90 <bitmap_fill_range>:
   18c90:	f3 0f 1e fa          	endbr64 
   18c94:	41 55                	push   %r13
   18c96:	89 f1                	mov    %esi,%ecx
   18c98:	49 89 d5             	mov    %rdx,%r13
   18c9b:	41 54                	push   %r12
   18c9d:	49 89 fc             	mov    %rdi,%r12
   18ca0:	48 8d 7e 3f          	lea    0x3f(%rsi),%rdi
   18ca4:	49 83 e5 c0          	and    $0xffffffffffffffc0,%r13
   18ca8:	55                   	push   %rbp
   18ca9:	49 89 f8             	mov    %rdi,%r8
   18cac:	53                   	push   %rbx
   18cad:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   18cb4:	49 83 e0 c0          	and    $0xffffffffffffffc0,%r8
   18cb8:	48 89 d8             	mov    %rbx,%rax
   18cbb:	48 d3 e8             	shr    %cl,%rax
   18cbe:	89 d1                	mov    %edx,%ecx
   18cc0:	48 83 ec 08          	sub    $0x8,%rsp
   18cc4:	48 d3 eb             	shr    %cl,%rbx
   18cc7:	48 39 d6             	cmp    %rdx,%rsi
   18cca:	0f 87 32 02 00 00    	ja     18f02 <bitmap_fill_range+0x272>
   18cd0:	48 f7 d3             	not    %rbx
   18cd3:	4d 39 e8             	cmp    %r13,%r8
   18cd6:	0f 87 84 01 00 00    	ja     18e60 <bitmap_fill_range+0x1d0>
   18cdc:	48 89 d5             	mov    %rdx,%rbp
   18cdf:	4c 39 c6             	cmp    %r8,%rsi
   18ce2:	0f 83 90 00 00 00    	jae    18d78 <bitmap_fill_range+0xe8>
   18ce8:	48 c1 ee 06          	shr    $0x6,%rsi
   18cec:	48 89 c2             	mov    %rax,%rdx
   18cef:	49 b9 00 00 00 00 00 	movabs $0xff000000000000,%r9
   18cf6:	00 ff 00 
   18cf9:	49 8d 0c f4          	lea    (%r12,%rsi,8),%rcx
   18cfd:	48 89 c6             	mov    %rax,%rsi
   18d00:	48 c1 e2 38          	shl    $0x38,%rdx
   18d04:	48 c1 ee 38          	shr    $0x38,%rsi
   18d08:	48 09 f2             	or     %rsi,%rdx
   18d0b:	48 89 c6             	mov    %rax,%rsi
   18d0e:	48 0b 11             	or     (%rcx),%rdx
   18d11:	48 c1 e6 28          	shl    $0x28,%rsi
   18d15:	4c 21 ce             	and    %r9,%rsi
   18d18:	49 b9 00 00 00 00 00 	movabs $0xff0000000000,%r9
   18d1f:	ff 00 00 
   18d22:	48 09 f2             	or     %rsi,%rdx
   18d25:	48 89 c6             	mov    %rax,%rsi
   18d28:	48 c1 e6 18          	shl    $0x18,%rsi
   18d2c:	4c 21 ce             	and    %r9,%rsi
   18d2f:	49 b9 00 00 00 00 ff 	movabs $0xff00000000,%r9
   18d36:	00 00 00 
   18d39:	48 09 f2             	or     %rsi,%rdx
   18d3c:	48 89 c6             	mov    %rax,%rsi
   18d3f:	48 c1 e6 08          	shl    $0x8,%rsi
   18d43:	4c 21 ce             	and    %r9,%rsi
   18d46:	48 09 f2             	or     %rsi,%rdx
   18d49:	48 89 c6             	mov    %rax,%rsi
   18d4c:	48 c1 ee 08          	shr    $0x8,%rsi
   18d50:	81 e6 00 00 00 ff    	and    $0xff000000,%esi
   18d56:	48 09 f2             	or     %rsi,%rdx
   18d59:	48 89 c6             	mov    %rax,%rsi
   18d5c:	48 c1 e8 28          	shr    $0x28,%rax
   18d60:	48 c1 ee 18          	shr    $0x18,%rsi
   18d64:	25 00 ff 00 00       	and    $0xff00,%eax
   18d69:	81 e6 00 00 ff 00    	and    $0xff0000,%esi
   18d6f:	48 09 f2             	or     %rsi,%rdx
   18d72:	48 09 d0             	or     %rdx,%rax
   18d75:	48 89 01             	mov    %rax,(%rcx)
   18d78:	4d 39 e8             	cmp    %r13,%r8
   18d7b:	0f 82 af 00 00 00    	jb     18e30 <bitmap_fill_range+0x1a0>
   18d81:	4c 39 ed             	cmp    %r13,%rbp
   18d84:	0f 86 91 00 00 00    	jbe    18e1b <bitmap_fill_range+0x18b>
   18d8a:	48 89 d8             	mov    %rbx,%rax
   18d8d:	48 89 da             	mov    %rbx,%rdx
   18d90:	48 c1 ed 06          	shr    $0x6,%rbp
   18d94:	48 be 00 00 00 00 00 	movabs $0xff000000000000,%rsi
   18d9b:	00 ff 00 
   18d9e:	48 c1 ea 38          	shr    $0x38,%rdx
   18da2:	48 c1 e0 38          	shl    $0x38,%rax
   18da6:	49 8d 0c ec          	lea    (%r12,%rbp,8),%rcx
   18daa:	48 09 d0             	or     %rdx,%rax
   18dad:	48 89 da             	mov    %rbx,%rdx
   18db0:	48 0b 01             	or     (%rcx),%rax
   18db3:	48 c1 e2 28          	shl    $0x28,%rdx
   18db7:	48 21 f2             	and    %rsi,%rdx
   18dba:	48 be 00 00 00 00 00 	movabs $0xff0000000000,%rsi
   18dc1:	ff 00 00 
   18dc4:	48 09 d0             	or     %rdx,%rax
   18dc7:	48 89 da             	mov    %rbx,%rdx
   18dca:	48 c1 e2 18          	shl    $0x18,%rdx
   18dce:	48 21 f2             	and    %rsi,%rdx
   18dd1:	48 be 00 00 00 00 ff 	movabs $0xff00000000,%rsi
   18dd8:	00 00 00 
   18ddb:	48 09 d0             	or     %rdx,%rax
   18dde:	48 89 da             	mov    %rbx,%rdx
   18de1:	48 c1 e2 08          	shl    $0x8,%rdx
   18de5:	48 21 f2             	and    %rsi,%rdx
   18de8:	48 09 d0             	or     %rdx,%rax
   18deb:	48 89 da             	mov    %rbx,%rdx
   18dee:	48 c1 ea 08          	shr    $0x8,%rdx
   18df2:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
   18df8:	48 09 d0             	or     %rdx,%rax
   18dfb:	48 89 da             	mov    %rbx,%rdx
   18dfe:	48 c1 eb 28          	shr    $0x28,%rbx
   18e02:	48 c1 ea 18          	shr    $0x18,%rdx
   18e06:	81 e3 00 ff 00 00    	and    $0xff00,%ebx
   18e0c:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
   18e12:	48 09 d0             	or     %rdx,%rax
   18e15:	48 09 c3             	or     %rax,%rbx
   18e18:	48 89 19             	mov    %rbx,(%rcx)
   18e1b:	48 83 c4 08          	add    $0x8,%rsp
   18e1f:	5b                   	pop    %rbx
   18e20:	5d                   	pop    %rbp
   18e21:	41 5c                	pop    %r12
   18e23:	41 5d                	pop    %r13
   18e25:	c3                   	retq   
   18e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18e2d:	00 00 00 
   18e30:	4c 89 ea             	mov    %r13,%rdx
   18e33:	48 c1 ef 06          	shr    $0x6,%rdi
   18e37:	be ff 00 00 00       	mov    $0xff,%esi
   18e3c:	4c 29 c2             	sub    %r8,%rdx
   18e3f:	49 8d 3c fc          	lea    (%r12,%rdi,8),%rdi
   18e43:	48 c1 ea 03          	shr    $0x3,%rdx
   18e47:	e8 e4 71 ff ff       	callq  10030 <memset@plt>
   18e4c:	4c 39 ed             	cmp    %r13,%rbp
   18e4f:	76 ca                	jbe    18e1b <bitmap_fill_range+0x18b>
   18e51:	e9 34 ff ff ff       	jmpq   18d8a <bitmap_fill_range+0xfa>
   18e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18e5d:	00 00 00 
   18e60:	48 21 d8             	and    %rbx,%rax
   18e63:	48 c1 ee 06          	shr    $0x6,%rsi
   18e67:	49 8d 0c f4          	lea    (%r12,%rsi,8),%rcx
   18e6b:	48 89 c2             	mov    %rax,%rdx
   18e6e:	48 89 c6             	mov    %rax,%rsi
   18e71:	48 89 c3             	mov    %rax,%rbx
   18e74:	48 c1 ee 38          	shr    $0x38,%rsi
   18e78:	48 c1 e2 38          	shl    $0x38,%rdx
   18e7c:	48 09 f2             	or     %rsi,%rdx
   18e7f:	48 c1 e3 28          	shl    $0x28,%rbx
   18e83:	48 0b 11             	or     (%rcx),%rdx
   18e86:	48 be 00 00 00 00 00 	movabs $0xff000000000000,%rsi
   18e8d:	00 ff 00 
   18e90:	48 21 f3             	and    %rsi,%rbx
   18e93:	48 be 00 00 00 00 00 	movabs $0xff0000000000,%rsi
   18e9a:	ff 00 00 
   18e9d:	48 09 da             	or     %rbx,%rdx
   18ea0:	48 89 c3             	mov    %rax,%rbx
   18ea3:	48 c1 e3 18          	shl    $0x18,%rbx
   18ea7:	48 21 f3             	and    %rsi,%rbx
   18eaa:	48 be 00 00 00 00 ff 	movabs $0xff00000000,%rsi
   18eb1:	00 00 00 
   18eb4:	48 09 da             	or     %rbx,%rdx
   18eb7:	48 89 c3             	mov    %rax,%rbx
   18eba:	48 c1 e3 08          	shl    $0x8,%rbx
   18ebe:	48 21 f3             	and    %rsi,%rbx
   18ec1:	48 09 da             	or     %rbx,%rdx
   18ec4:	48 89 c3             	mov    %rax,%rbx
   18ec7:	48 c1 eb 08          	shr    $0x8,%rbx
   18ecb:	81 e3 00 00 00 ff    	and    $0xff000000,%ebx
   18ed1:	48 09 da             	or     %rbx,%rdx
   18ed4:	48 89 c3             	mov    %rax,%rbx
   18ed7:	48 c1 e8 28          	shr    $0x28,%rax
   18edb:	48 c1 eb 18          	shr    $0x18,%rbx
   18edf:	81 e3 00 00 ff 00    	and    $0xff0000,%ebx
   18ee5:	48 09 da             	or     %rbx,%rdx
   18ee8:	48 89 c3             	mov    %rax,%rbx
   18eeb:	81 e3 00 ff 00 00    	and    $0xff00,%ebx
   18ef1:	48 09 d3             	or     %rdx,%rbx
   18ef4:	48 89 19             	mov    %rbx,(%rcx)
   18ef7:	48 83 c4 08          	add    $0x8,%rsp
   18efb:	5b                   	pop    %rbx
   18efc:	5d                   	pop    %rbp
   18efd:	41 5c                	pop    %r12
   18eff:	41 5d                	pop    %r13
   18f01:	c3                   	retq   
   18f02:	48 8d 0d 87 5e 02 00 	lea    0x25e87(%rip),%rcx        # 3ed90 <__PRETTY_FUNCTION__.3355>
   18f09:	ba 2c 00 00 00       	mov    $0x2c,%edx
   18f0e:	48 8d 35 4b 5e 02 00 	lea    0x25e4b(%rip),%rsi        # 3ed60 <base64_maps_rfc4648+0x140>
   18f15:	48 8d 3d 59 5e 02 00 	lea    0x25e59(%rip),%rdi        # 3ed75 <base64_maps_rfc4648+0x155>
   18f1c:	e8 df 70 ff ff       	callq  10000 <__assert_fail@plt>

0000000000018f21 <.annobin_bitmap_ffs.start>:
   18f21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18f28:	00 00 00 00 
   18f2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018f30 <bitmap_ffs>:
   18f30:	f3 0f 1e fa          	endbr64 
   18f34:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
   18f3b:	89 f1                	mov    %esi,%ecx
   18f3d:	48 8d 46 3f          	lea    0x3f(%rsi),%rax
   18f41:	49 89 d0             	mov    %rdx,%r8
   18f44:	4d 89 ca             	mov    %r9,%r10
   18f47:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
   18f4b:	49 83 e0 c0          	and    $0xffffffffffffffc0,%r8
   18f4f:	49 d3 ea             	shr    %cl,%r10
   18f52:	89 d1                	mov    %edx,%ecx
   18f54:	49 d3 e9             	shr    %cl,%r9
   18f57:	48 39 d6             	cmp    %rdx,%rsi
   18f5a:	0f 87 32 01 00 00    	ja     19092 <bitmap_ffs+0x162>
   18f60:	49 f7 d1             	not    %r9
   18f63:	4c 39 c0             	cmp    %r8,%rax
   18f66:	0f 87 a4 00 00 00    	ja     19010 <bitmap_ffs+0xe0>
   18f6c:	48 39 c6             	cmp    %rax,%rsi
   18f6f:	72 57                	jb     18fc8 <bitmap_ffs+0x98>
   18f71:	4c 39 c0             	cmp    %r8,%rax
   18f74:	72 17                	jb     18f8d <bitmap_ffs+0x5d>
   18f76:	e9 d5 00 00 00       	jmpq   19050 <bitmap_ffs+0x120>
   18f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18f80:	48 83 c0 40          	add    $0x40,%rax
   18f84:	49 39 c0             	cmp    %rax,%r8
   18f87:	0f 86 c3 00 00 00    	jbe    19050 <bitmap_ffs+0x120>
   18f8d:	48 89 c1             	mov    %rax,%rcx
   18f90:	48 c1 e9 06          	shr    $0x6,%rcx
   18f94:	48 8b 0c cf          	mov    (%rdi,%rcx,8),%rcx
   18f98:	48 0f c9             	bswap  %rcx
   18f9b:	48 85 c9             	test   %rcx,%rcx
   18f9e:	74 e0                	je     18f80 <bitmap_ffs+0x50>
   18fa0:	78 66                	js     19008 <bitmap_ffs+0xd8>
   18fa2:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   18fa9:	00 00 80 
   18fac:	31 f6                	xor    %esi,%esi
   18fae:	66 90                	xchg   %ax,%ax
   18fb0:	48 d1 ea             	shr    %rdx
   18fb3:	83 c6 01             	add    $0x1,%esi
   18fb6:	48 85 ca             	test   %rcx,%rdx
   18fb9:	74 f5                	je     18fb0 <bitmap_ffs+0x80>
   18fbb:	48 63 f6             	movslq %esi,%rsi
   18fbe:	48 01 f0             	add    %rsi,%rax
   18fc1:	c3                   	retq   
   18fc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18fc8:	48 89 f1             	mov    %rsi,%rcx
   18fcb:	48 c1 e9 06          	shr    $0x6,%rcx
   18fcf:	48 8b 0c cf          	mov    (%rdi,%rcx,8),%rcx
   18fd3:	48 0f c9             	bswap  %rcx
   18fd6:	4c 21 d1             	and    %r10,%rcx
   18fd9:	74 96                	je     18f71 <bitmap_ffs+0x41>
   18fdb:	48 89 f0             	mov    %rsi,%rax
   18fde:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
   18fe2:	48 85 c9             	test   %rcx,%rcx
   18fe5:	78 21                	js     19008 <bitmap_ffs+0xd8>
   18fe7:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   18fee:	00 00 80 
   18ff1:	31 f6                	xor    %esi,%esi
   18ff3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18ff8:	48 d1 ea             	shr    %rdx
   18ffb:	83 c6 01             	add    $0x1,%esi
   18ffe:	48 85 d1             	test   %rdx,%rcx
   19001:	74 f5                	je     18ff8 <bitmap_ffs+0xc8>
   19003:	eb b6                	jmp    18fbb <bitmap_ffs+0x8b>
   19005:	4c 89 c0             	mov    %r8,%rax
   19008:	c3                   	retq   
   19009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19010:	48 c1 ee 06          	shr    $0x6,%rsi
   19014:	4d 21 d1             	and    %r10,%r9
   19017:	48 89 d0             	mov    %rdx,%rax
   1901a:	48 8b 0c f7          	mov    (%rdi,%rsi,8),%rcx
   1901e:	48 0f c9             	bswap  %rcx
   19021:	49 21 c9             	and    %rcx,%r9
   19024:	74 e2                	je     19008 <bitmap_ffs+0xd8>
   19026:	78 dd                	js     19005 <bitmap_ffs+0xd5>
   19028:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
   1902f:	00 00 80 
   19032:	31 c0                	xor    %eax,%eax
   19034:	0f 1f 40 00          	nopl   0x0(%rax)
   19038:	48 d1 ea             	shr    %rdx
   1903b:	83 c0 01             	add    $0x1,%eax
   1903e:	49 85 d1             	test   %rdx,%r9
   19041:	74 f5                	je     19038 <bitmap_ffs+0x108>
   19043:	48 98                	cltq   
   19045:	4c 01 c0             	add    %r8,%rax
   19048:	c3                   	retq   
   19049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19050:	48 89 d0             	mov    %rdx,%rax
   19053:	4c 39 c2             	cmp    %r8,%rdx
   19056:	76 b0                	jbe    19008 <bitmap_ffs+0xd8>
   19058:	48 c1 e8 06          	shr    $0x6,%rax
   1905c:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
   19060:	48 89 d0             	mov    %rdx,%rax
   19063:	48 0f c9             	bswap  %rcx
   19066:	49 21 c9             	and    %rcx,%r9
   19069:	74 9d                	je     19008 <bitmap_ffs+0xd8>
   1906b:	78 98                	js     19005 <bitmap_ffs+0xd5>
   1906d:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   19074:	00 00 80 
   19077:	31 d2                	xor    %edx,%edx
   19079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19080:	48 d1 e8             	shr    %rax
   19083:	83 c2 01             	add    $0x1,%edx
   19086:	49 85 c1             	test   %rax,%r9
   19089:	74 f5                	je     19080 <bitmap_ffs+0x150>
   1908b:	48 63 c2             	movslq %edx,%rax
   1908e:	4c 01 c0             	add    %r8,%rax
   19091:	c3                   	retq   
   19092:	50                   	push   %rax
   19093:	48 8d 0d e6 5c 02 00 	lea    0x25ce6(%rip),%rcx        # 3ed80 <__PRETTY_FUNCTION__.3373>
   1909a:	ba 57 00 00 00       	mov    $0x57,%edx
   1909f:	48 8d 35 ba 5c 02 00 	lea    0x25cba(%rip),%rsi        # 3ed60 <base64_maps_rfc4648+0x140>
   190a6:	48 8d 3d c8 5c 02 00 	lea    0x25cc8(%rip),%rdi        # 3ed75 <base64_maps_rfc4648+0x155>
   190ad:	e8 4e 6f ff ff       	callq  10000 <__assert_fail@plt>

00000000000190b2 <.annobin_bitmap.c_end>:
   190b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   190b9:	00 00 00 
   190bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000190c0 <hex_decode>:
   190c0:	f3 0f 1e fa          	endbr64 
   190c4:	48 83 fe 01          	cmp    $0x1,%rsi
   190c8:	0f 86 a8 00 00 00    	jbe    19176 <hex_decode+0xb6>
   190ce:	48 8d 46 fe          	lea    -0x2(%rsi),%rax
   190d2:	48 01 fe             	add    %rdi,%rsi
   190d5:	48 d1 e8             	shr    %rax
   190d8:	4c 8d 54 47 02       	lea    0x2(%rdi,%rax,2),%r10
   190dd:	0f 1f 00             	nopl   (%rax)
   190e0:	44 0f b6 07          	movzbl (%rdi),%r8d
   190e4:	41 8d 40 d0          	lea    -0x30(%r8),%eax
   190e8:	3c 09                	cmp    $0x9,%al
   190ea:	76 18                	jbe    19104 <hex_decode+0x44>
   190ec:	41 8d 40 9f          	lea    -0x61(%r8),%eax
   190f0:	3c 05                	cmp    $0x5,%al
   190f2:	76 6c                	jbe    19160 <hex_decode+0xa0>
   190f4:	41 8d 40 bf          	lea    -0x41(%r8),%eax
   190f8:	3c 05                	cmp    $0x5,%al
   190fa:	76 04                	jbe    19100 <hex_decode+0x40>
   190fc:	31 c0                	xor    %eax,%eax
   190fe:	c3                   	retq   
   190ff:	90                   	nop
   19100:	41 8d 40 c9          	lea    -0x37(%r8),%eax
   19104:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   19109:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
   1910d:	41 80 f9 09          	cmp    $0x9,%r9b
   19111:	76 18                	jbe    1912b <hex_decode+0x6b>
   19113:	45 8d 48 9f          	lea    -0x61(%r8),%r9d
   19117:	41 80 f9 05          	cmp    $0x5,%r9b
   1911b:	76 53                	jbe    19170 <hex_decode+0xb0>
   1911d:	45 8d 48 bf          	lea    -0x41(%r8),%r9d
   19121:	41 80 f9 05          	cmp    $0x5,%r9b
   19125:	77 d5                	ja     190fc <hex_decode+0x3c>
   19127:	45 8d 48 c9          	lea    -0x37(%r8),%r9d
   1912b:	48 85 c9             	test   %rcx,%rcx
   1912e:	74 cc                	je     190fc <hex_decode+0x3c>
   19130:	c1 e0 04             	shl    $0x4,%eax
   19133:	48 83 c2 01          	add    $0x1,%rdx
   19137:	48 83 c7 02          	add    $0x2,%rdi
   1913b:	48 83 e9 01          	sub    $0x1,%rcx
   1913f:	44 09 c8             	or     %r9d,%eax
   19142:	88 42 ff             	mov    %al,-0x1(%rdx)
   19145:	48 89 f0             	mov    %rsi,%rax
   19148:	48 29 f8             	sub    %rdi,%rax
   1914b:	4c 39 d7             	cmp    %r10,%rdi
   1914e:	75 90                	jne    190e0 <hex_decode+0x20>
   19150:	48 09 c1             	or     %rax,%rcx
   19153:	0f 94 c0             	sete   %al
   19156:	c3                   	retq   
   19157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1915e:	00 00 
   19160:	41 8d 40 a9          	lea    -0x57(%r8),%eax
   19164:	eb 9e                	jmp    19104 <hex_decode+0x44>
   19166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1916d:	00 00 00 
   19170:	45 8d 48 a9          	lea    -0x57(%r8),%r9d
   19174:	eb b5                	jmp    1912b <hex_decode+0x6b>
   19176:	48 89 f0             	mov    %rsi,%rax
   19179:	eb d5                	jmp    19150 <hex_decode+0x90>

000000000001917b <.annobin_hex_decode.end>:
   1917b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019180 <hex_encode>:
   19180:	f3 0f 1e fa          	endbr64 
   19184:	4c 8d 1c 36          	lea    (%rsi,%rsi,1),%r11
   19188:	31 c0                	xor    %eax,%eax
   1918a:	4d 8d 43 01          	lea    0x1(%r11),%r8
   1918e:	4c 39 c1             	cmp    %r8,%rcx
   19191:	72 59                	jb     191ec <hex_encode+0x6c>
   19193:	48 85 f6             	test   %rsi,%rsi
   19196:	74 4c                	je     191e4 <hex_encode+0x64>
   19198:	31 c9                	xor    %ecx,%ecx
   1919a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   191a0:	44 0f b6 04 0f       	movzbl (%rdi,%rcx,1),%r8d
   191a5:	44 89 c0             	mov    %r8d,%eax
   191a8:	41 c1 e8 04          	shr    $0x4,%r8d
   191ac:	41 83 f8 09          	cmp    $0x9,%r8d
   191b0:	45 8d 48 57          	lea    0x57(%r8),%r9d
   191b4:	45 8d 50 30          	lea    0x30(%r8),%r10d
   191b8:	45 0f 47 d1          	cmova  %r9d,%r10d
   191bc:	83 e0 0f             	and    $0xf,%eax
   191bf:	44 8d 48 57          	lea    0x57(%rax),%r9d
   191c3:	44 8d 40 30          	lea    0x30(%rax),%r8d
   191c7:	3c 0a                	cmp    $0xa,%al
   191c9:	44 89 c8             	mov    %r9d,%eax
   191cc:	44 88 14 4a          	mov    %r10b,(%rdx,%rcx,2)
   191d0:	41 0f 42 c0          	cmovb  %r8d,%eax
   191d4:	88 44 4a 01          	mov    %al,0x1(%rdx,%rcx,2)
   191d8:	48 83 c1 01          	add    $0x1,%rcx
   191dc:	48 39 ce             	cmp    %rcx,%rsi
   191df:	75 bf                	jne    191a0 <hex_encode+0x20>
   191e1:	4c 01 da             	add    %r11,%rdx
   191e4:	c6 02 00             	movb   $0x0,(%rdx)
   191e7:	b8 01 00 00 00       	mov    $0x1,%eax
   191ec:	c3                   	retq   

00000000000191ed <.annobin_hex.c_end>:
   191ed:	0f 1f 00             	nopl   (%rax)

00000000000191f0 <list_check_node>:
   191f0:	f3 0f 1e fa          	endbr64 
   191f4:	48 83 ec 08          	sub    $0x8,%rsp
   191f8:	4c 8b 17             	mov    (%rdi),%r10
   191fb:	4c 39 d7             	cmp    %r10,%rdi
   191fe:	74 25                	je     19225 <list_check_node+0x35>
   19200:	49 3b 7a 08          	cmp    0x8(%r10),%rdi
   19204:	75 32                	jne    19238 <list_check_node+0x48>
   19206:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1920c:	eb 0f                	jmp    1921d <list_check_node+0x2d>
   1920e:	66 90                	xchg   %ax,%ax
   19210:	41 83 c1 01          	add    $0x1,%r9d
   19214:	4d 39 50 08          	cmp    %r10,0x8(%r8)
   19218:	75 2e                	jne    19248 <list_check_node+0x58>
   1921a:	4d 89 c2             	mov    %r8,%r10
   1921d:	4d 8b 02             	mov    (%r10),%r8
   19220:	4c 39 c7             	cmp    %r8,%rdi
   19223:	75 eb                	jne    19210 <list_check_node+0x20>
   19225:	4c 39 57 08          	cmp    %r10,0x8(%rdi)
   19229:	74 2d                	je     19258 <list_check_node+0x68>
   1922b:	48 85 f6             	test   %rsi,%rsi
   1922e:	75 33                	jne    19263 <list_check_node+0x73>
   19230:	48 89 f0             	mov    %rsi,%rax
   19233:	48 83 c4 08          	add    $0x8,%rsp
   19237:	c3                   	retq   
   19238:	4d 89 d0             	mov    %r10,%r8
   1923b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   19241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19248:	48 85 f6             	test   %rsi,%rsi
   1924b:	74 e3                	je     19230 <list_check_node+0x40>
   1924d:	52                   	push   %rdx
   1924e:	57                   	push   %rdi
   1924f:	eb 1a                	jmp    1926b <list_check_node+0x7b>
   19251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19258:	48 89 fe             	mov    %rdi,%rsi
   1925b:	48 83 c4 08          	add    $0x8,%rsp
   1925f:	48 89 f0             	mov    %rsi,%rax
   19262:	c3                   	retq   
   19263:	50                   	push   %rax
   19264:	45 31 c9             	xor    %r9d,%r9d
   19267:	49 89 f8             	mov    %rdi,%r8
   1926a:	57                   	push   %rdi
   1926b:	48 8b 05 76 9d 23 00 	mov    0x239d76(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   19272:	48 89 f1             	mov    %rsi,%rcx
   19275:	48 8d 15 4c 5b 02 00 	lea    0x25b4c(%rip),%rdx        # 3edc8 <__PRETTY_FUNCTION__.3345+0x18>
   1927c:	be 01 00 00 00       	mov    $0x1,%esi
   19281:	48 8b 38             	mov    (%rax),%rdi
   19284:	31 c0                	xor    %eax,%eax
   19286:	e8 d5 76 ff ff       	callq  10960 <__fprintf_chk@plt>
   1928b:	e8 60 68 ff ff       	callq  faf0 <abort@plt>

0000000000019290 <list_check>:
   19290:	f3 0f 1e fa          	endbr64 
   19294:	53                   	push   %rbx
   19295:	48 89 fb             	mov    %rdi,%rbx
   19298:	e8 53 ff ff ff       	callq  191f0 <list_check_node>
   1929d:	48 85 c0             	test   %rax,%rax
   192a0:	b8 00 00 00 00       	mov    $0x0,%eax
   192a5:	48 0f 44 d8          	cmove  %rax,%rbx
   192a9:	48 89 d8             	mov    %rbx,%rax
   192ac:	5b                   	pop    %rbx
   192ad:	c3                   	retq   

00000000000192ae <.annobin_list.c_end>:
   192ae:	66 90                	xchg   %ax,%ax

00000000000192b0 <pull_bytes>:
   192b0:	f3 0f 1e fa          	endbr64 
   192b4:	41 54                	push   %r12
   192b6:	49 89 fc             	mov    %rdi,%r12
   192b9:	55                   	push   %rbp
   192ba:	53                   	push   %rbx
   192bb:	48 8b 06             	mov    (%rsi),%rax
   192be:	48 39 c8             	cmp    %rcx,%rax
   192c1:	72 3d                	jb     19300 <pull_bytes+0x50>
   192c3:	48 89 f5             	mov    %rsi,%rbp
   192c6:	48 89 cb             	mov    %rcx,%rbx
   192c9:	48 89 d7             	mov    %rdx,%rdi
   192cc:	49 8b 34 24          	mov    (%r12),%rsi
   192d0:	48 85 d2             	test   %rdx,%rdx
   192d3:	74 10                	je     192e5 <pull_bytes+0x35>
  return __builtin___memcpy_chk (__dest, __src, __len,
   192d5:	48 89 ca             	mov    %rcx,%rdx
   192d8:	e8 33 70 ff ff       	callq  10310 <memcpy@plt>
   192dd:	48 8b 45 00          	mov    0x0(%rbp),%rax
   192e1:	49 8b 34 24          	mov    (%r12),%rsi
   192e5:	48 29 d8             	sub    %rbx,%rax
   192e8:	48 8d 0c 1e          	lea    (%rsi,%rbx,1),%rcx
   192ec:	48 89 45 00          	mov    %rax,0x0(%rbp)
   192f0:	b8 01 00 00 00       	mov    $0x1,%eax
   192f5:	5b                   	pop    %rbx
   192f6:	49 89 0c 24          	mov    %rcx,(%r12)
   192fa:	5d                   	pop    %rbp
   192fb:	41 5c                	pop    %r12
   192fd:	c3                   	retq   
   192fe:	66 90                	xchg   %ax,%ax
   19300:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   19307:	31 c0                	xor    %eax,%eax
   19309:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   19310:	5b                   	pop    %rbx
   19311:	5d                   	pop    %rbp
   19312:	41 5c                	pop    %r12
   19314:	c3                   	retq   

0000000000019315 <.annobin_pull_bytes.end>:
   19315:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1931c:	00 00 00 00 

0000000000019320 <pull_u64>:
   19320:	f3 0f 1e fa          	endbr64 
   19324:	53                   	push   %rbx
   19325:	b9 08 00 00 00       	mov    $0x8,%ecx
   1932a:	48 89 d3             	mov    %rdx,%rbx
   1932d:	48 83 ec 10          	sub    $0x10,%rsp
   19331:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19338:	00 00 
   1933a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1933f:	31 c0                	xor    %eax,%eax
   19341:	48 89 e2             	mov    %rsp,%rdx
   19344:	e8 67 ff ff ff       	callq  192b0 <pull_bytes>
   19349:	84 c0                	test   %al,%al
   1934b:	75 1b                	jne    19368 <pull_u64+0x48>
   1934d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19352:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19359:	00 00 
   1935b:	75 19                	jne    19376 <pull_u64+0x56>
   1935d:	48 83 c4 10          	add    $0x10,%rsp
   19361:	5b                   	pop    %rbx
   19362:	c3                   	retq   
   19363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19368:	48 85 db             	test   %rbx,%rbx
   1936b:	74 e0                	je     1934d <pull_u64+0x2d>
   1936d:	48 8b 14 24          	mov    (%rsp),%rdx
   19371:	48 89 13             	mov    %rdx,(%rbx)
   19374:	eb d7                	jmp    1934d <pull_u64+0x2d>
   19376:	e8 d5 6a ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001937b <.annobin_pull_u32.start>:
   1937b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019380 <pull_u32>:
   19380:	f3 0f 1e fa          	endbr64 
   19384:	53                   	push   %rbx
   19385:	b9 04 00 00 00       	mov    $0x4,%ecx
   1938a:	48 89 d3             	mov    %rdx,%rbx
   1938d:	48 83 ec 10          	sub    $0x10,%rsp
   19391:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19398:	00 00 
   1939a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1939f:	31 c0                	xor    %eax,%eax
   193a1:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   193a6:	e8 05 ff ff ff       	callq  192b0 <pull_bytes>
   193ab:	84 c0                	test   %al,%al
   193ad:	75 19                	jne    193c8 <pull_u32+0x48>
   193af:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   193b4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   193bb:	00 00 
   193bd:	75 16                	jne    193d5 <pull_u32+0x55>
   193bf:	48 83 c4 10          	add    $0x10,%rsp
   193c3:	5b                   	pop    %rbx
   193c4:	c3                   	retq   
   193c5:	0f 1f 00             	nopl   (%rax)
   193c8:	48 85 db             	test   %rbx,%rbx
   193cb:	74 e2                	je     193af <pull_u32+0x2f>
   193cd:	8b 54 24 04          	mov    0x4(%rsp),%edx
   193d1:	89 13                	mov    %edx,(%rbx)
   193d3:	eb da                	jmp    193af <pull_u32+0x2f>
   193d5:	e8 76 6a ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000193da <.annobin_pull_u16.start>:
   193da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000193e0 <pull_u16>:
   193e0:	f3 0f 1e fa          	endbr64 
   193e4:	53                   	push   %rbx
   193e5:	b9 02 00 00 00       	mov    $0x2,%ecx
   193ea:	48 89 d3             	mov    %rdx,%rbx
   193ed:	48 83 ec 10          	sub    $0x10,%rsp
   193f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   193f8:	00 00 
   193fa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   193ff:	31 c0                	xor    %eax,%eax
   19401:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   19406:	e8 a5 fe ff ff       	callq  192b0 <pull_bytes>
   1940b:	84 c0                	test   %al,%al
   1940d:	75 19                	jne    19428 <pull_u16+0x48>
   1940f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19414:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1941b:	00 00 
   1941d:	75 18                	jne    19437 <pull_u16+0x57>
   1941f:	48 83 c4 10          	add    $0x10,%rsp
   19423:	5b                   	pop    %rbx
   19424:	c3                   	retq   
   19425:	0f 1f 00             	nopl   (%rax)
   19428:	48 85 db             	test   %rbx,%rbx
   1942b:	74 e2                	je     1940f <pull_u16+0x2f>
   1942d:	0f b7 54 24 06       	movzwl 0x6(%rsp),%edx
   19432:	66 89 13             	mov    %dx,(%rbx)
   19435:	eb d8                	jmp    1940f <pull_u16+0x2f>
   19437:	e8 14 6a ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001943c <.annobin_pull_u16.end>:
   1943c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019440 <pull_u8>:
   19440:	f3 0f 1e fa          	endbr64 
   19444:	b9 01 00 00 00       	mov    $0x1,%ecx
   19449:	e9 62 fe ff ff       	jmpq   192b0 <pull_bytes>

000000000001944e <.annobin_pull_s64.start>:
   1944e:	66 90                	xchg   %ax,%ax

0000000000019450 <pull_s64>:
   19450:	f3 0f 1e fa          	endbr64 
   19454:	53                   	push   %rbx
   19455:	b9 08 00 00 00       	mov    $0x8,%ecx
   1945a:	48 89 d3             	mov    %rdx,%rbx
   1945d:	48 83 ec 10          	sub    $0x10,%rsp
   19461:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19468:	00 00 
   1946a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1946f:	31 c0                	xor    %eax,%eax
   19471:	48 89 e2             	mov    %rsp,%rdx
   19474:	e8 37 fe ff ff       	callq  192b0 <pull_bytes>
   19479:	84 c0                	test   %al,%al
   1947b:	75 1b                	jne    19498 <pull_s64+0x48>
   1947d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19482:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19489:	00 00 
   1948b:	75 19                	jne    194a6 <pull_s64+0x56>
   1948d:	48 83 c4 10          	add    $0x10,%rsp
   19491:	5b                   	pop    %rbx
   19492:	c3                   	retq   
   19493:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19498:	48 85 db             	test   %rbx,%rbx
   1949b:	74 e0                	je     1947d <pull_s64+0x2d>
   1949d:	48 8b 14 24          	mov    (%rsp),%rdx
   194a1:	48 89 13             	mov    %rdx,(%rbx)
   194a4:	eb d7                	jmp    1947d <pull_s64+0x2d>
   194a6:	e8 a5 69 ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000194ab <.annobin_pull_s32.start>:
   194ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000194b0 <pull_s32>:
   194b0:	f3 0f 1e fa          	endbr64 
   194b4:	53                   	push   %rbx
   194b5:	b9 04 00 00 00       	mov    $0x4,%ecx
   194ba:	48 89 d3             	mov    %rdx,%rbx
   194bd:	48 83 ec 10          	sub    $0x10,%rsp
   194c1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   194c8:	00 00 
   194ca:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   194cf:	31 c0                	xor    %eax,%eax
   194d1:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   194d6:	e8 d5 fd ff ff       	callq  192b0 <pull_bytes>
   194db:	84 c0                	test   %al,%al
   194dd:	75 19                	jne    194f8 <pull_s32+0x48>
   194df:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   194e4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   194eb:	00 00 
   194ed:	75 16                	jne    19505 <pull_s32+0x55>
   194ef:	48 83 c4 10          	add    $0x10,%rsp
   194f3:	5b                   	pop    %rbx
   194f4:	c3                   	retq   
   194f5:	0f 1f 00             	nopl   (%rax)
   194f8:	48 85 db             	test   %rbx,%rbx
   194fb:	74 e2                	je     194df <pull_s32+0x2f>
   194fd:	8b 54 24 04          	mov    0x4(%rsp),%edx
   19501:	89 13                	mov    %edx,(%rbx)
   19503:	eb da                	jmp    194df <pull_s32+0x2f>
   19505:	e8 46 69 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001950a <.annobin_pull_s16.start>:
   1950a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000019510 <pull_s16>:
   19510:	f3 0f 1e fa          	endbr64 
   19514:	53                   	push   %rbx
   19515:	b9 02 00 00 00       	mov    $0x2,%ecx
   1951a:	48 89 d3             	mov    %rdx,%rbx
   1951d:	48 83 ec 10          	sub    $0x10,%rsp
   19521:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19528:	00 00 
   1952a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1952f:	31 c0                	xor    %eax,%eax
   19531:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   19536:	e8 75 fd ff ff       	callq  192b0 <pull_bytes>
   1953b:	84 c0                	test   %al,%al
   1953d:	75 19                	jne    19558 <pull_s16+0x48>
   1953f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19544:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1954b:	00 00 
   1954d:	75 18                	jne    19567 <pull_s16+0x57>
   1954f:	48 83 c4 10          	add    $0x10,%rsp
   19553:	5b                   	pop    %rbx
   19554:	c3                   	retq   
   19555:	0f 1f 00             	nopl   (%rax)
   19558:	48 85 db             	test   %rbx,%rbx
   1955b:	74 e2                	je     1953f <pull_s16+0x2f>
   1955d:	0f b7 54 24 06       	movzwl 0x6(%rsp),%edx
   19562:	66 89 13             	mov    %dx,(%rbx)
   19565:	eb d8                	jmp    1953f <pull_s16+0x2f>
   19567:	e8 e4 68 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001956c <.annobin_pull_s16.end>:
   1956c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019570 <pull_s8>:
   19570:	f3 0f 1e fa          	endbr64 
   19574:	b9 01 00 00 00       	mov    $0x1,%ecx
   19579:	e9 32 fd ff ff       	jmpq   192b0 <pull_bytes>

000000000001957e <.annobin_pull_char.start>:
   1957e:	66 90                	xchg   %ax,%ax

0000000000019580 <pull_char>:
   19580:	f3 0f 1e fa          	endbr64 
   19584:	b9 01 00 00 00       	mov    $0x1,%ecx
   19589:	e9 22 fd ff ff       	jmpq   192b0 <pull_bytes>

000000000001958e <.annobin_pull.c_end>:
   1958e:	66 90                	xchg   %ax,%ax

0000000000019590 <push_bytes>:
   19590:	f3 0f 1e fa          	endbr64 
   19594:	41 55                	push   %r13
   19596:	49 89 d5             	mov    %rdx,%r13
   19599:	41 54                	push   %r12
   1959b:	49 89 fc             	mov    %rdi,%r12
   1959e:	55                   	push   %rbp
   1959f:	48 89 cd             	mov    %rcx,%rbp
   195a2:	53                   	push   %rbx
   195a3:	48 89 f3             	mov    %rsi,%rbx
   195a6:	48 83 ec 08          	sub    $0x8,%rsp
   195aa:	48 8b 36             	mov    (%rsi),%rsi
   195ad:	48 8b 3f             	mov    (%rdi),%rdi
   195b0:	48 01 ce             	add    %rcx,%rsi
   195b3:	ff 15 47 9a 23 00    	callq  *0x239a47(%rip)        # 253000 <realloc@GLIBC_2.2.5>
   195b9:	48 85 c0             	test   %rax,%rax
   195bc:	74 42                	je     19600 <push_bytes+0x70>
   195be:	49 89 04 24          	mov    %rax,(%r12)
   195c2:	48 03 03             	add    (%rbx),%rax
   195c5:	48 89 ea             	mov    %rbp,%rdx
   195c8:	48 89 c7             	mov    %rax,%rdi
   195cb:	4d 85 ed             	test   %r13,%r13
   195ce:	74 20                	je     195f0 <push_bytes+0x60>
   195d0:	4c 89 ee             	mov    %r13,%rsi
   195d3:	e8 38 6d ff ff       	callq  10310 <memcpy@plt>
   195d8:	48 01 2b             	add    %rbp,(%rbx)
   195db:	48 83 c4 08          	add    $0x8,%rsp
   195df:	b8 01 00 00 00       	mov    $0x1,%eax
   195e4:	5b                   	pop    %rbx
   195e5:	5d                   	pop    %rbp
   195e6:	41 5c                	pop    %r12
   195e8:	41 5d                	pop    %r13
   195ea:	c3                   	retq   
   195eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  return __builtin___memset_chk (__dest, __ch, __len,
   195f0:	31 f6                	xor    %esi,%esi
   195f2:	e8 39 6a ff ff       	callq  10030 <memset@plt>
   195f7:	eb df                	jmp    195d8 <push_bytes+0x48>
   195f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19600:	48 83 c4 08          	add    $0x8,%rsp
   19604:	31 c0                	xor    %eax,%eax
   19606:	5b                   	pop    %rbx
   19607:	5d                   	pop    %rbp
   19608:	41 5c                	pop    %r12
   1960a:	41 5d                	pop    %r13
   1960c:	c3                   	retq   

000000000001960d <.annobin_push_bytes.end>:
   1960d:	0f 1f 00             	nopl   (%rax)

0000000000019610 <push_u64>:
   19610:	f3 0f 1e fa          	endbr64 
   19614:	48 83 ec 18          	sub    $0x18,%rsp
   19618:	b9 08 00 00 00       	mov    $0x8,%ecx
   1961d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19624:	00 00 
   19626:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1962b:	31 c0                	xor    %eax,%eax
   1962d:	48 89 14 24          	mov    %rdx,(%rsp)
   19631:	48 89 e2             	mov    %rsp,%rdx
   19634:	e8 57 ff ff ff       	callq  19590 <push_bytes>
   19639:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1963e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19645:	00 00 
   19647:	75 05                	jne    1964e <push_u64+0x3e>
   19649:	48 83 c4 18          	add    $0x18,%rsp
   1964d:	c3                   	retq   
   1964e:	e8 fd 67 ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000019653 <.annobin_push_u32.start>:
   19653:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1965a:	00 00 00 00 
   1965e:	66 90                	xchg   %ax,%ax

0000000000019660 <push_u32>:
   19660:	f3 0f 1e fa          	endbr64 
   19664:	48 83 ec 18          	sub    $0x18,%rsp
   19668:	b9 04 00 00 00       	mov    $0x4,%ecx
   1966d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19674:	00 00 
   19676:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1967b:	31 c0                	xor    %eax,%eax
   1967d:	89 54 24 04          	mov    %edx,0x4(%rsp)
   19681:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   19686:	e8 05 ff ff ff       	callq  19590 <push_bytes>
   1968b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19690:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   19697:	00 00 
   19699:	75 05                	jne    196a0 <push_u32+0x40>
   1969b:	48 83 c4 18          	add    $0x18,%rsp
   1969f:	c3                   	retq   
   196a0:	e8 ab 67 ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000196a5 <.annobin_push_u16.start>:
   196a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   196ac:	00 00 00 00 

00000000000196b0 <push_u16>:
   196b0:	f3 0f 1e fa          	endbr64 
   196b4:	48 83 ec 18          	sub    $0x18,%rsp
   196b8:	b9 02 00 00 00       	mov    $0x2,%ecx
   196bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   196c4:	00 00 
   196c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   196cb:	31 c0                	xor    %eax,%eax
   196cd:	66 89 54 24 06       	mov    %dx,0x6(%rsp)
   196d2:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   196d7:	e8 b4 fe ff ff       	callq  19590 <push_bytes>
   196dc:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   196e1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   196e8:	00 00 
   196ea:	75 05                	jne    196f1 <push_u16+0x41>
   196ec:	48 83 c4 18          	add    $0x18,%rsp
   196f0:	c3                   	retq   
   196f1:	e8 5a 67 ff ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000196f6 <.annobin_push_u16.end>:
   196f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   196fd:	00 00 00 

0000000000019700 <push_u8>:
   19700:	f3 0f 1e fa          	endbr64 
   19704:	48 83 ec 18          	sub    $0x18,%rsp
   19708:	b9 01 00 00 00       	mov    $0x1,%ecx
   1970d:	88 54 24 0c          	mov    %dl,0xc(%rsp)
   19711:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   19716:	e8 75 fe ff ff       	callq  19590 <push_bytes>
   1971b:	48 83 c4 18          	add    $0x18,%rsp
   1971f:	c3                   	retq   

0000000000019720 <push_s64>:
   19720:	f3 0f 1e fa          	endbr64 
   19724:	e9 e7 fe ff ff       	jmpq   19610 <push_u64>

0000000000019729 <.annobin_push_s32.start>:
   19729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019730 <push_s32>:
   19730:	f3 0f 1e fa          	endbr64 
   19734:	e9 27 ff ff ff       	jmpq   19660 <push_u32>

0000000000019739 <.annobin_push_s16.start>:
   19739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019740 <push_s16>:
   19740:	f3 0f 1e fa          	endbr64 
   19744:	0f b7 d2             	movzwl %dx,%edx
   19747:	e9 64 ff ff ff       	jmpq   196b0 <push_u16>

000000000001974c <.annobin_push_s16.end>:
   1974c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019750 <push_s8>:
   19750:	f3 0f 1e fa          	endbr64 
   19754:	0f b6 d2             	movzbl %dl,%edx
   19757:	e9 a4 ff ff ff       	jmpq   19700 <push_u8>

000000000001975c <.annobin_push_char.start>:
   1975c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019760 <push_char>:
   19760:	f3 0f 1e fa          	endbr64 
   19764:	0f b6 d2             	movzbl %dl,%edx
   19767:	e9 94 ff ff ff       	jmpq   19700 <push_u8>

000000000001976c <.annobin_push_char.end>:
   1976c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019770 <push_set_realloc>:
   19770:	f3 0f 1e fa          	endbr64 
   19774:	48 89 3d 85 98 23 00 	mov    %rdi,0x239885(%rip)        # 253000 <realloc@GLIBC_2.2.5>
   1977b:	c3                   	retq   

000000000001977c <.annobin_push.c_end>:
   1977c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019780 <strcount>:
   19780:	f3 0f 1e fa          	endbr64 
   19784:	41 55                	push   %r13
   19786:	41 54                	push   %r12
   19788:	49 89 f4             	mov    %rsi,%r12
   1978b:	55                   	push   %rbp
   1978c:	31 ed                	xor    %ebp,%ebp
   1978e:	53                   	push   %rbx
   1978f:	48 89 fb             	mov    %rdi,%rbx
   19792:	48 89 f7             	mov    %rsi,%rdi
   19795:	48 83 ec 08          	sub    $0x8,%rsp
   19799:	e8 82 66 ff ff       	callq  fe20 <strlen@plt>
   1979e:	49 89 c5             	mov    %rax,%r13
   197a1:	eb 0d                	jmp    197b0 <strcount+0x30>
   197a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   197a8:	48 83 c5 01          	add    $0x1,%rbp
   197ac:	4a 8d 1c 28          	lea    (%rax,%r13,1),%rbx
   197b0:	4c 89 e6             	mov    %r12,%rsi
   197b3:	48 89 df             	mov    %rbx,%rdi
   197b6:	e8 f5 72 ff ff       	callq  10ab0 <strstr@plt>
   197bb:	48 85 c0             	test   %rax,%rax
   197be:	75 e8                	jne    197a8 <strcount+0x28>
   197c0:	48 83 c4 08          	add    $0x8,%rsp
   197c4:	48 89 e8             	mov    %rbp,%rax
   197c7:	5b                   	pop    %rbx
   197c8:	5d                   	pop    %rbp
   197c9:	41 5c                	pop    %r12
   197cb:	41 5d                	pop    %r13
   197cd:	c3                   	retq   

00000000000197ce <.annobin_str.c_end>:
   197ce:	66 90                	xchg   %ax,%ax

00000000000197d0 <aux_item_destroy>:
   197d0:	48 85 ff             	test   %rdi,%rdi
   197d3:	74 3b                	je     19810 <aux_item_destroy+0x40>
   197d5:	41 54                	push   %r12
   197d7:	55                   	push   %rbp
   197d8:	53                   	push   %rbx
   197d9:	48 89 fb             	mov    %rdi,%rbx
   197dc:	e8 2f 63 ff ff       	callq  fb10 <__errno_location@plt>
   197e1:	48 89 c5             	mov    %rax,%rbp
   197e4:	44 8b 20             	mov    (%rax),%r12d
   197e7:	48 8b 43 10          	mov    0x10(%rbx),%rax
   197eb:	48 85 c0             	test   %rax,%rax
   197ee:	74 0b                	je     197fb <aux_item_destroy+0x2b>
   197f0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   197f4:	48 85 ff             	test   %rdi,%rdi
   197f7:	74 02                	je     197fb <aux_item_destroy+0x2b>
   197f9:	ff d0                	callq  *%rax
   197fb:	48 89 df             	mov    %rbx,%rdi
   197fe:	e8 ad 62 ff ff       	callq  fab0 <free@plt>
   19803:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   19807:	5b                   	pop    %rbx
   19808:	5d                   	pop    %rbp
   19809:	41 5c                	pop    %r12
   1980b:	c3                   	retq   
   1980c:	0f 1f 40 00          	nopl   0x0(%rax)
   19810:	c3                   	retq   

0000000000019811 <.annobin_aux_get.start>:
   19811:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19818:	00 00 00 00 
   1981c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019820 <aux_get>:
   19820:	f3 0f 1e fa          	endbr64 
   19824:	55                   	push   %rbp
   19825:	53                   	push   %rbx
   19826:	48 83 ec 08          	sub    $0x8,%rsp
   1982a:	48 85 f6             	test   %rsi,%rsi
   1982d:	74 41                	je     19870 <aux_get+0x50>
   1982f:	48 89 fb             	mov    %rdi,%rbx
   19832:	48 85 ff             	test   %rdi,%rdi
   19835:	74 51                	je     19888 <aux_get+0x68>
   19837:	48 89 f5             	mov    %rsi,%rbp
   1983a:	48 8b 37             	mov    (%rdi),%rsi
   1983d:	48 85 f6             	test   %rsi,%rsi
   19840:	75 17                	jne    19859 <aux_get+0x39>
   19842:	eb 44                	jmp    19888 <aux_get+0x68>
   19844:	0f 1f 40 00          	nopl   0x0(%rax)
   19848:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
   1984c:	48 85 db             	test   %rbx,%rbx
   1984f:	74 37                	je     19888 <aux_get+0x68>
   19851:	48 8b 33             	mov    (%rbx),%rsi
   19854:	48 85 f6             	test   %rsi,%rsi
   19857:	74 2f                	je     19888 <aux_get+0x68>
   19859:	48 89 ef             	mov    %rbp,%rdi
   1985c:	e8 bf 69 ff ff       	callq  10220 <strcmp@plt>
   19861:	85 c0                	test   %eax,%eax
   19863:	75 e3                	jne    19848 <aux_get+0x28>
   19865:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19869:	48 83 c4 08          	add    $0x8,%rsp
   1986d:	5b                   	pop    %rbx
   1986e:	5d                   	pop    %rbp
   1986f:	c3                   	retq   
   19870:	e8 9b 62 ff ff       	callq  fb10 <__errno_location@plt>
   19875:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1987b:	48 83 c4 08          	add    $0x8,%rsp
   1987f:	31 c0                	xor    %eax,%eax
   19881:	5b                   	pop    %rbx
   19882:	5d                   	pop    %rbp
   19883:	c3                   	retq   
   19884:	0f 1f 40 00          	nopl   0x0(%rax)
   19888:	e8 83 62 ff ff       	callq  fb10 <__errno_location@plt>
   1988d:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   19893:	31 c0                	xor    %eax,%eax
   19895:	eb d2                	jmp    19869 <aux_get+0x49>

0000000000019897 <.annobin_aux_get.end>:
   19897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1989e:	00 00 

00000000000198a0 <aux_set>:
   198a0:	f3 0f 1e fa          	endbr64 
   198a4:	41 57                	push   %r15
   198a6:	41 56                	push   %r14
   198a8:	41 55                	push   %r13
   198aa:	41 54                	push   %r12
   198ac:	55                   	push   %rbp
   198ad:	53                   	push   %rbx
   198ae:	48 83 ec 08          	sub    $0x8,%rsp
   198b2:	48 85 ff             	test   %rdi,%rdi
   198b5:	0f 84 85 01 00 00    	je     19a40 <aux_set+0x1a0>
   198bb:	49 89 cd             	mov    %rcx,%r13
   198be:	48 89 f1             	mov    %rsi,%rcx
   198c1:	49 89 d6             	mov    %rdx,%r14
   198c4:	48 89 f3             	mov    %rsi,%rbx
   198c7:	4c 09 e9             	or     %r13,%rcx
   198ca:	48 85 f6             	test   %rsi,%rsi
   198cd:	0f 94 c0             	sete   %al
   198d0:	4d 85 ed             	test   %r13,%r13
   198d3:	0f 95 c2             	setne  %dl
   198d6:	09 d0                	or     %edx,%eax
   198d8:	4d 85 f6             	test   %r14,%r14
   198db:	0f 94 c2             	sete   %dl
   198de:	84 d0                	test   %dl,%al
   198e0:	0f 85 5a 01 00 00    	jne    19a40 <aux_set+0x1a0>
   198e6:	48 85 c9             	test   %rcx,%rcx
   198e9:	0f 84 51 01 00 00    	je     19a40 <aux_set+0x1a0>
   198ef:	49 89 fc             	mov    %rdi,%r12
   198f2:	48 85 f6             	test   %rsi,%rsi
   198f5:	0f 84 bd 00 00 00    	je     199b8 <aux_set+0x118>
   198fb:	48 8b 2f             	mov    (%rdi),%rbp
   198fe:	48 85 ed             	test   %rbp,%rbp
   19901:	74 44                	je     19947 <aux_set+0xa7>
   19903:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   19907:	48 85 ff             	test   %rdi,%rdi
   1990a:	74 3b                	je     19947 <aux_set+0xa7>
   1990c:	4d 89 e7             	mov    %r12,%r15
   1990f:	eb 1b                	jmp    1992c <aux_set+0x8c>
   19911:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19918:	4c 8d 7d 18          	lea    0x18(%rbp),%r15
   1991c:	48 85 d2             	test   %rdx,%rdx
   1991f:	74 26                	je     19947 <aux_set+0xa7>
   19921:	48 8b 3a             	mov    (%rdx),%rdi
   19924:	48 89 d5             	mov    %rdx,%rbp
   19927:	48 85 ff             	test   %rdi,%rdi
   1992a:	74 1b                	je     19947 <aux_set+0xa7>
   1992c:	48 89 de             	mov    %rbx,%rsi
   1992f:	e8 ec 68 ff ff       	callq  10220 <strcmp@plt>
   19934:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   19938:	85 c0                	test   %eax,%eax
   1993a:	75 dc                	jne    19918 <aux_set+0x78>
   1993c:	49 89 17             	mov    %rdx,(%r15)
   1993f:	48 89 ef             	mov    %rbp,%rdi
   19942:	e8 89 fe ff ff       	callq  197d0 <aux_item_destroy>
   19947:	4d 85 f6             	test   %r14,%r14
   1994a:	74 71                	je     199bd <aux_set+0x11d>
   1994c:	48 89 df             	mov    %rbx,%rdi
   1994f:	e8 cc 64 ff ff       	callq  fe20 <strlen@plt>
   19954:	bf 01 00 00 00       	mov    $0x1,%edi
   19959:	8d 70 01             	lea    0x1(%rax),%esi
   1995c:	49 89 c7             	mov    %rax,%r15
   1995f:	48 63 f6             	movslq %esi,%rsi
   19962:	48 83 c6 20          	add    $0x20,%rsi
   19966:	e8 a5 68 ff ff       	callq  10210 <calloc@plt>
   1996b:	48 89 c5             	mov    %rax,%rbp
   1996e:	48 85 c0             	test   %rax,%rax
   19971:	0f 84 b1 00 00 00    	je     19a28 <aux_set+0x188>
   19977:	48 8d 78 20          	lea    0x20(%rax),%rdi
#endif

__fortify_function char *
__NTH (strcpy (char *__restrict __dest, const char *__restrict __src))
{
  return __builtin___strcpy_chk (__dest, __src, __glibc_objsize (__dest));
   1997b:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1997f:	48 89 de             	mov    %rbx,%rsi
   19982:	48 89 38             	mov    %rdi,(%rax)
   19985:	e8 86 69 ff ff       	callq  10310 <memcpy@plt>
   1998a:	49 8b 04 24          	mov    (%r12),%rax
   1998e:	4c 89 75 08          	mov    %r14,0x8(%rbp)
   19992:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   19996:	48 85 c0             	test   %rax,%rax
   19999:	74 04                	je     1999f <aux_set+0xff>
   1999b:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1999f:	49 89 2c 24          	mov    %rbp,(%r12)
   199a3:	48 83 c4 08          	add    $0x8,%rsp
   199a7:	31 c0                	xor    %eax,%eax
   199a9:	5b                   	pop    %rbx
   199aa:	5d                   	pop    %rbp
   199ab:	41 5c                	pop    %r12
   199ad:	41 5d                	pop    %r13
   199af:	41 5e                	pop    %r14
   199b1:	41 5f                	pop    %r15
   199b3:	c3                   	retq   
   199b4:	0f 1f 40 00          	nopl   0x0(%rax)
   199b8:	4d 85 f6             	test   %r14,%r14
   199bb:	75 13                	jne    199d0 <aux_set+0x130>
   199bd:	31 c0                	xor    %eax,%eax
   199bf:	48 83 c4 08          	add    $0x8,%rsp
   199c3:	5b                   	pop    %rbx
   199c4:	5d                   	pop    %rbp
   199c5:	41 5c                	pop    %r12
   199c7:	41 5d                	pop    %r13
   199c9:	41 5e                	pop    %r14
   199cb:	41 5f                	pop    %r15
   199cd:	c3                   	retq   
   199ce:	66 90                	xchg   %ax,%ax
   199d0:	be 20 00 00 00       	mov    $0x20,%esi
   199d5:	bf 01 00 00 00       	mov    $0x1,%edi
   199da:	e8 31 68 ff ff       	callq  10210 <calloc@plt>
   199df:	48 85 c0             	test   %rax,%rax
   199e2:	74 44                	je     19a28 <aux_set+0x188>
   199e4:	49 8b 0c 24          	mov    (%r12),%rcx
   199e8:	4c 89 70 08          	mov    %r14,0x8(%rax)
   199ec:	4c 89 68 10          	mov    %r13,0x10(%rax)
   199f0:	48 85 c9             	test   %rcx,%rcx
   199f3:	75 0e                	jne    19a03 <aux_set+0x163>
   199f5:	eb 19                	jmp    19a10 <aux_set+0x170>
   199f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   199fe:	00 00 
   19a00:	48 89 d1             	mov    %rdx,%rcx
   19a03:	48 8b 51 18          	mov    0x18(%rcx),%rdx
   19a07:	48 85 d2             	test   %rdx,%rdx
   19a0a:	75 f4                	jne    19a00 <aux_set+0x160>
   19a0c:	4c 8d 61 18          	lea    0x18(%rcx),%r12
   19a10:	49 89 04 24          	mov    %rax,(%r12)
   19a14:	48 83 c4 08          	add    $0x8,%rsp
   19a18:	31 c0                	xor    %eax,%eax
   19a1a:	5b                   	pop    %rbx
   19a1b:	5d                   	pop    %rbp
   19a1c:	41 5c                	pop    %r12
   19a1e:	41 5d                	pop    %r13
   19a20:	41 5e                	pop    %r14
   19a22:	41 5f                	pop    %r15
   19a24:	c3                   	retq   
   19a25:	0f 1f 00             	nopl   (%rax)
   19a28:	48 83 c4 08          	add    $0x8,%rsp
   19a2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19a31:	5b                   	pop    %rbx
   19a32:	5d                   	pop    %rbp
   19a33:	41 5c                	pop    %r12
   19a35:	41 5d                	pop    %r13
   19a37:	41 5e                	pop    %r14
   19a39:	41 5f                	pop    %r15
   19a3b:	c3                   	retq   
   19a3c:	0f 1f 40 00          	nopl   0x0(%rax)
   19a40:	e8 cb 60 ff ff       	callq  fb10 <__errno_location@plt>
   19a45:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19a4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19a50:	e9 6a ff ff ff       	jmpq   199bf <aux_set+0x11f>

0000000000019a55 <.annobin_aux_delete.start>:
   19a55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19a5c:	00 00 00 00 

0000000000019a60 <aux_delete>:
   19a60:	f3 0f 1e fa          	endbr64 
   19a64:	48 85 ff             	test   %rdi,%rdi
   19a67:	74 29                	je     19a92 <aux_delete+0x32>
   19a69:	48 85 f6             	test   %rsi,%rsi
   19a6c:	74 24                	je     19a92 <aux_delete+0x32>
   19a6e:	48 8b 17             	mov    (%rdi),%rdx
   19a71:	48 85 d2             	test   %rdx,%rdx
   19a74:	74 1c                	je     19a92 <aux_delete+0x32>
   19a76:	48 3b 72 08          	cmp    0x8(%rdx),%rsi
   19a7a:	75 0d                	jne    19a89 <aux_delete+0x29>
   19a7c:	eb 2d                	jmp    19aab <aux_delete+0x4b>
   19a7e:	66 90                	xchg   %ax,%ax
   19a80:	48 39 70 08          	cmp    %rsi,0x8(%rax)
   19a84:	74 12                	je     19a98 <aux_delete+0x38>
   19a86:	48 89 c2             	mov    %rax,%rdx
   19a89:	48 8b 42 18          	mov    0x18(%rdx),%rax
   19a8d:	48 85 c0             	test   %rax,%rax
   19a90:	75 ee                	jne    19a80 <aux_delete+0x20>
   19a92:	c3                   	retq   
   19a93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19a98:	48 8d 7a 18          	lea    0x18(%rdx),%rdi
   19a9c:	48 8b 50 18          	mov    0x18(%rax),%rdx
   19aa0:	48 89 17             	mov    %rdx,(%rdi)
   19aa3:	48 89 c7             	mov    %rax,%rdi
   19aa6:	e9 25 fd ff ff       	jmpq   197d0 <aux_item_destroy>
   19aab:	48 89 d0             	mov    %rdx,%rax
   19aae:	eb ec                	jmp    19a9c <aux_delete+0x3c>

0000000000019ab0 <aux_destroy>:
   19ab0:	f3 0f 1e fa          	endbr64 
   19ab4:	48 85 ff             	test   %rdi,%rdi
   19ab7:	74 27                	je     19ae0 <aux_destroy+0x30>
   19ab9:	53                   	push   %rbx
   19aba:	48 89 fb             	mov    %rdi,%rbx
   19abd:	48 8b 3f             	mov    (%rdi),%rdi
   19ac0:	48 85 ff             	test   %rdi,%rdi
   19ac3:	74 17                	je     19adc <aux_destroy+0x2c>
   19ac5:	0f 1f 00             	nopl   (%rax)
   19ac8:	48 8b 47 18          	mov    0x18(%rdi),%rax
   19acc:	48 89 03             	mov    %rax,(%rbx)
   19acf:	e8 fc fc ff ff       	callq  197d0 <aux_item_destroy>
   19ad4:	48 8b 3b             	mov    (%rbx),%rdi
   19ad7:	48 85 ff             	test   %rdi,%rdi
   19ada:	75 ec                	jne    19ac8 <aux_destroy+0x18>
   19adc:	5b                   	pop    %rbx
   19add:	c3                   	retq   
   19ade:	66 90                	xchg   %ax,%ax
   19ae0:	c3                   	retq   

0000000000019ae1 <.annobin_aux.c_end>:
   19ae1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19ae8:	00 00 00 
   19aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019af0 <lookup_blobhash>:
   19af0:	41 55                	push   %r13
   19af2:	41 54                	push   %r12
   19af4:	55                   	push   %rbp
   19af5:	53                   	push   %rbx
   19af6:	48 83 ec 08          	sub    $0x8,%rsp
   19afa:	48 8b 1d 1f 95 23 00 	mov    0x23951f(%rip),%rbx        # 253020 <blobtab>
   19b01:	48 85 db             	test   %rbx,%rbx
   19b04:	74 7a                	je     19b80 <lookup_blobhash+0x90>
   19b06:	49 89 fc             	mov    %rdi,%r12
   19b09:	4c 8d 2d 10 95 23 00 	lea    0x239510(%rip),%r13        # 253020 <blobtab>
   19b10:	eb 13                	jmp    19b25 <lookup_blobhash+0x35>
   19b12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19b18:	49 83 c5 18          	add    $0x18,%r13
   19b1c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   19b20:	48 85 db             	test   %rbx,%rbx
   19b23:	74 5b                	je     19b80 <lookup_blobhash+0x90>
   19b25:	48 89 de             	mov    %rbx,%rsi
   19b28:	4c 89 e7             	mov    %r12,%rdi
   19b2b:	e8 f0 66 ff ff       	callq  10220 <strcmp@plt>
   19b30:	85 c0                	test   %eax,%eax
   19b32:	74 37                	je     19b6b <lookup_blobhash+0x7b>
   19b34:	48 89 df             	mov    %rbx,%rdi
   19b37:	e8 e4 62 ff ff       	callq  fe20 <strlen@plt>
   19b3c:	4c 89 e7             	mov    %r12,%rdi
   19b3f:	48 89 c5             	mov    %rax,%rbp
   19b42:	e8 d9 62 ff ff       	callq  fe20 <strlen@plt>
   19b47:	8d 55 01             	lea    0x1(%rbp),%edx
   19b4a:	48 63 d2             	movslq %edx,%rdx
   19b4d:	48 39 d0             	cmp    %rdx,%rax
   19b50:	72 c6                	jb     19b18 <lookup_blobhash+0x28>
   19b52:	48 63 d5             	movslq %ebp,%rdx
   19b55:	41 80 3c 14 2d       	cmpb   $0x2d,(%r12,%rdx,1)
   19b5a:	75 bc                	jne    19b18 <lookup_blobhash+0x28>
   19b5c:	48 89 de             	mov    %rbx,%rsi
   19b5f:	4c 89 e7             	mov    %r12,%rdi
   19b62:	e8 49 60 ff ff       	callq  fbb0 <strncmp@plt>
   19b67:	85 c0                	test   %eax,%eax
   19b69:	75 ad                	jne    19b18 <lookup_blobhash+0x28>
   19b6b:	48 83 c4 08          	add    $0x8,%rsp
   19b6f:	4c 89 e8             	mov    %r13,%rax
   19b72:	5b                   	pop    %rbx
   19b73:	5d                   	pop    %rbp
   19b74:	41 5c                	pop    %r12
   19b76:	41 5d                	pop    %r13
   19b78:	c3                   	retq   
   19b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19b80:	48 83 c4 08          	add    $0x8,%rsp
   19b84:	45 31 ed             	xor    %r13d,%r13d
   19b87:	5b                   	pop    %rbx
   19b88:	4c 89 e8             	mov    %r13,%rax
   19b8b:	5d                   	pop    %rbp
   19b8c:	41 5c                	pop    %r12
   19b8e:	41 5d                	pop    %r13
   19b90:	c3                   	retq   

0000000000019b91 <.annobin_lookup_blobhash.end>:
   19b91:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19b98:	00 00 00 00 
   19b9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019ba0 <sha256_hash>:
   19ba0:	f3 0f 1e fa          	endbr64 
   19ba4:	41 55                	push   %r13
   19ba6:	41 54                	push   %r12
   19ba8:	55                   	push   %rbp
   19ba9:	53                   	push   %rbx
   19baa:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   19bb1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19bb8:	00 00 
   19bba:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   19bbf:	31 c0                	xor    %eax,%eax
   19bc1:	83 f9 20             	cmp    $0x20,%ecx
   19bc4:	75 4a                	jne    19c10 <sha256_hash+0x70>
   19bc6:	48 89 e5             	mov    %rsp,%rbp
   19bc9:	89 f3                	mov    %esi,%ebx
   19bcb:	49 89 fd             	mov    %rdi,%r13
   19bce:	49 89 d4             	mov    %rdx,%r12
   19bd1:	48 89 ef             	mov    %rbp,%rdi
   19bd4:	e8 f7 91 00 00       	callq  22dd0 <sha256_init>
   19bd9:	48 63 d3             	movslq %ebx,%rdx
   19bdc:	4c 89 ee             	mov    %r13,%rsi
   19bdf:	48 89 ef             	mov    %rbp,%rdi
   19be2:	e8 39 92 00 00       	callq  22e20 <sha256_update>
   19be7:	4c 89 e6             	mov    %r12,%rsi
   19bea:	48 89 ef             	mov    %rbp,%rdi
   19bed:	e8 be 92 00 00       	callq  22eb0 <sha256_final>
   19bf2:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19bf7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19bfe:	00 00 
   19c00:	75 2d                	jne    19c2f <sha256_hash+0x8f>
   19c02:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   19c09:	5b                   	pop    %rbx
   19c0a:	5d                   	pop    %rbp
   19c0b:	41 5c                	pop    %r12
   19c0d:	41 5d                	pop    %r13
   19c0f:	c3                   	retq   
   19c10:	48 8d 0d 41 52 02 00 	lea    0x25241(%rip),%rcx        # 3ee58 <__PRETTY_FUNCTION__.4414>
   19c17:	ba 53 00 00 00       	mov    $0x53,%edx
   19c1c:	48 8d 35 cd 51 02 00 	lea    0x251cd(%rip),%rsi        # 3edf0 <__PRETTY_FUNCTION__.3345+0x40>
   19c23:	48 8d 3d d0 51 02 00 	lea    0x251d0(%rip),%rdi        # 3edfa <__PRETTY_FUNCTION__.3345+0x4a>
   19c2a:	e8 d1 63 ff ff       	callq  10000 <__assert_fail@plt>
   19c2f:	e8 1c 62 ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000019c34 <.annobin_sha1_hash.start>:
   19c34:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19c3b:	00 00 00 00 
   19c3f:	90                   	nop

0000000000019c40 <sha1_hash>:
   19c40:	f3 0f 1e fa          	endbr64 
   19c44:	41 55                	push   %r13
   19c46:	41 54                	push   %r12
   19c48:	55                   	push   %rbp
   19c49:	53                   	push   %rbx
   19c4a:	48 83 ec 78          	sub    $0x78,%rsp
   19c4e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19c55:	00 00 
   19c57:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   19c5c:	31 c0                	xor    %eax,%eax
   19c5e:	83 f9 14             	cmp    $0x14,%ecx
   19c61:	75 47                	jne    19caa <sha1_hash+0x6a>
   19c63:	48 89 e5             	mov    %rsp,%rbp
   19c66:	89 f3                	mov    %esi,%ebx
   19c68:	49 89 fd             	mov    %rdi,%r13
   19c6b:	49 89 d4             	mov    %rdx,%r12
   19c6e:	48 89 ef             	mov    %rbp,%rdi
   19c71:	e8 5a 8c 00 00       	callq  228d0 <SHA1_Init>
   19c76:	48 63 d3             	movslq %ebx,%rdx
   19c79:	4c 89 ee             	mov    %r13,%rsi
   19c7c:	48 89 ef             	mov    %rbp,%rdi
   19c7f:	e8 7c 8c 00 00       	callq  22900 <SHA1_Update>
   19c84:	4c 89 e6             	mov    %r12,%rsi
   19c87:	48 89 ef             	mov    %rbp,%rdi
   19c8a:	e8 e1 8d 00 00       	callq  22a70 <SHA1_Final>
   19c8f:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   19c94:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19c9b:	00 00 
   19c9d:	75 2a                	jne    19cc9 <sha1_hash+0x89>
   19c9f:	48 83 c4 78          	add    $0x78,%rsp
   19ca3:	5b                   	pop    %rbx
   19ca4:	5d                   	pop    %rbp
   19ca5:	41 5c                	pop    %r12
   19ca7:	41 5d                	pop    %r13
   19ca9:	c3                   	retq   
   19caa:	48 8d 0d 97 51 02 00 	lea    0x25197(%rip),%rcx        # 3ee48 <__PRETTY_FUNCTION__.4406>
   19cb1:	ba 49 00 00 00       	mov    $0x49,%edx
   19cb6:	48 8d 35 33 51 02 00 	lea    0x25133(%rip),%rsi        # 3edf0 <__PRETTY_FUNCTION__.3345+0x40>
   19cbd:	48 8d 3d 54 51 02 00 	lea    0x25154(%rip),%rdi        # 3ee18 <__PRETTY_FUNCTION__.3345+0x68>
   19cc4:	e8 37 63 ff ff       	callq  10000 <__assert_fail@plt>
   19cc9:	e8 82 61 ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000019cce <.annobin_hashtostr.isra.2.start>:
   19cce:	66 90                	xchg   %ax,%ax

0000000000019cd0 <hashtostr.isra.2>:
   19cd0:	41 57                	push   %r15
   19cd2:	41 56                	push   %r14
   19cd4:	41 55                	push   %r13
   19cd6:	41 54                	push   %r12
   19cd8:	55                   	push   %rbp
   19cd9:	53                   	push   %rbx
   19cda:	48 83 ec 18          	sub    $0x18,%rsp
   19cde:	48 89 14 24          	mov    %rdx,(%rsp)
   19ce2:	4d 85 c0             	test   %r8,%r8
   19ce5:	74 79                	je     19d60 <hashtostr.isra.2+0x90>
   19ce7:	41 89 cc             	mov    %ecx,%r12d
   19cea:	39 f1                	cmp    %esi,%ecx
   19cec:	75 72                	jne    19d60 <hashtostr.isra.2+0x90>
   19cee:	44 89 cb             	mov    %r9d,%ebx
   19cf1:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   19cf5:	49 89 fd             	mov    %rdi,%r13
   19cf8:	4c 89 c5             	mov    %r8,%rbp
   19cfb:	e8 20 61 ff ff       	callq  fe20 <strlen@plt>
   19d00:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   19d04:	44 8d 70 01          	lea    0x1(%rax),%r14d
   19d08:	49 89 c7             	mov    %rax,%r15
   19d0b:	44 29 f3             	sub    %r14d,%ebx
   19d0e:	8d 54 36 01          	lea    0x1(%rsi,%rsi,1),%edx
   19d12:	8d 43 01             	lea    0x1(%rbx),%eax
   19d15:	39 c2                	cmp    %eax,%edx
   19d17:	7f 47                	jg     19d60 <hashtostr.isra.2+0x90>
   19d19:	4c 89 fa             	mov    %r15,%rdx
   19d1c:	4c 89 ee             	mov    %r13,%rsi
   19d1f:	48 89 ef             	mov    %rbp,%rdi
   19d22:	e8 e9 65 ff ff       	callq  10310 <memcpy@plt>


__fortify_function char *
__NTH (strcat (char *__restrict __dest, const char *__restrict __src))
{
  return __builtin___strcat_chk (__dest, __src, __glibc_objsize (__dest));
   19d27:	b8 2d 00 00 00       	mov    $0x2d,%eax
   19d2c:	49 63 d6             	movslq %r14d,%rdx
   19d2f:	48 63 cb             	movslq %ebx,%rcx
   19d32:	66 42 89 44 3d 00    	mov    %ax,0x0(%rbp,%r15,1)
   19d38:	48 8b 3c 24          	mov    (%rsp),%rdi
   19d3c:	48 01 ea             	add    %rbp,%rdx
   19d3f:	49 63 f4             	movslq %r12d,%rsi
   19d42:	e8 39 f4 ff ff       	callq  19180 <hex_encode>
   19d47:	84 c0                	test   %al,%al
   19d49:	74 15                	je     19d60 <hashtostr.isra.2+0x90>
   19d4b:	31 c0                	xor    %eax,%eax
   19d4d:	48 83 c4 18          	add    $0x18,%rsp
   19d51:	5b                   	pop    %rbx
   19d52:	5d                   	pop    %rbp
   19d53:	41 5c                	pop    %r12
   19d55:	41 5d                	pop    %r13
   19d57:	41 5e                	pop    %r14
   19d59:	41 5f                	pop    %r15
   19d5b:	c3                   	retq   
   19d5c:	0f 1f 40 00          	nopl   0x0(%rax)
   19d60:	e8 ab 5d ff ff       	callq  fb10 <__errno_location@plt>
   19d65:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19d6b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19d70:	eb db                	jmp    19d4d <hashtostr.isra.2+0x7d>

0000000000019d72 <.annobin_blobref_strtohash.start>:
   19d72:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19d79:	00 00 00 00 
   19d7d:	0f 1f 00             	nopl   (%rax)

0000000000019d80 <blobref_strtohash>:
   19d80:	f3 0f 1e fa          	endbr64 
   19d84:	41 57                	push   %r15
   19d86:	41 89 d7             	mov    %edx,%r15d
   19d89:	41 56                	push   %r14
   19d8b:	41 55                	push   %r13
   19d8d:	41 54                	push   %r12
   19d8f:	49 89 f4             	mov    %rsi,%r12
   19d92:	55                   	push   %rbp
   19d93:	48 89 fd             	mov    %rdi,%rbp
   19d96:	53                   	push   %rbx
   19d97:	48 83 ec 08          	sub    $0x8,%rsp
   19d9b:	e8 80 60 ff ff       	callq  fe20 <strlen@plt>
   19da0:	48 89 ef             	mov    %rbp,%rdi
   19da3:	48 89 c3             	mov    %rax,%rbx
   19da6:	e8 45 fd ff ff       	callq  19af0 <lookup_blobhash>
   19dab:	48 85 c0             	test   %rax,%rax
   19dae:	74 60                	je     19e10 <blobref_strtohash+0x90>
   19db0:	44 8b 68 08          	mov    0x8(%rax),%r13d
   19db4:	49 89 c6             	mov    %rax,%r14
   19db7:	45 39 fd             	cmp    %r15d,%r13d
   19dba:	7f 54                	jg     19e10 <blobref_strtohash+0x90>
   19dbc:	48 8b 38             	mov    (%rax),%rdi
   19dbf:	e8 5c 60 ff ff       	callq  fe20 <strlen@plt>
   19dc4:	49 63 cd             	movslq %r13d,%rcx
   19dc7:	8d 50 01             	lea    0x1(%rax),%edx
   19dca:	89 d8                	mov    %ebx,%eax
   19dcc:	48 8d 7c 09 01       	lea    0x1(%rcx,%rcx,1),%rdi
   19dd1:	29 d0                	sub    %edx,%eax
   19dd3:	8d 70 01             	lea    0x1(%rax),%esi
   19dd6:	48 63 f6             	movslq %esi,%rsi
   19dd9:	48 39 fe             	cmp    %rdi,%rsi
   19ddc:	75 32                	jne    19e10 <blobref_strtohash+0x90>
   19dde:	48 63 d2             	movslq %edx,%rdx
   19de1:	48 63 f0             	movslq %eax,%rsi
   19de4:	48 8d 7c 15 00       	lea    0x0(%rbp,%rdx,1),%rdi
   19de9:	4c 89 e2             	mov    %r12,%rdx
   19dec:	e8 cf f2 ff ff       	callq  190c0 <hex_decode>
   19df1:	84 c0                	test   %al,%al
   19df3:	74 1b                	je     19e10 <blobref_strtohash+0x90>
   19df5:	41 8b 46 08          	mov    0x8(%r14),%eax
   19df9:	48 83 c4 08          	add    $0x8,%rsp
   19dfd:	5b                   	pop    %rbx
   19dfe:	5d                   	pop    %rbp
   19dff:	41 5c                	pop    %r12
   19e01:	41 5d                	pop    %r13
   19e03:	41 5e                	pop    %r14
   19e05:	41 5f                	pop    %r15
   19e07:	c3                   	retq   
   19e08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19e0f:	00 
   19e10:	e8 fb 5c ff ff       	callq  fb10 <__errno_location@plt>
   19e15:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19e1b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19e20:	eb d7                	jmp    19df9 <blobref_strtohash+0x79>

0000000000019e22 <.annobin_blobref_hashtostr.start>:
   19e22:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19e29:	00 00 00 00 
   19e2d:	0f 1f 00             	nopl   (%rax)

0000000000019e30 <blobref_hashtostr>:
   19e30:	f3 0f 1e fa          	endbr64 
   19e34:	41 55                	push   %r13
   19e36:	45 89 c5             	mov    %r8d,%r13d
   19e39:	41 54                	push   %r12
   19e3b:	49 89 cc             	mov    %rcx,%r12
   19e3e:	55                   	push   %rbp
   19e3f:	89 d5                	mov    %edx,%ebp
   19e41:	53                   	push   %rbx
   19e42:	48 89 f3             	mov    %rsi,%rbx
   19e45:	48 83 ec 08          	sub    $0x8,%rsp
   19e49:	e8 a2 fc ff ff       	callq  19af0 <lookup_blobhash>
   19e4e:	48 85 c0             	test   %rax,%rax
   19e51:	74 20                	je     19e73 <blobref_hashtostr+0x43>
   19e53:	8b 70 08             	mov    0x8(%rax),%esi
   19e56:	48 8b 38             	mov    (%rax),%rdi
   19e59:	48 83 c4 08          	add    $0x8,%rsp
   19e5d:	45 89 e9             	mov    %r13d,%r9d
   19e60:	4d 89 e0             	mov    %r12,%r8
   19e63:	89 e9                	mov    %ebp,%ecx
   19e65:	48 89 da             	mov    %rbx,%rdx
   19e68:	5b                   	pop    %rbx
   19e69:	5d                   	pop    %rbp
   19e6a:	41 5c                	pop    %r12
   19e6c:	41 5d                	pop    %r13
   19e6e:	e9 5d fe ff ff       	jmpq   19cd0 <hashtostr.isra.2>
   19e73:	e8 98 5c ff ff       	callq  fb10 <__errno_location@plt>
   19e78:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19e7e:	48 83 c4 08          	add    $0x8,%rsp
   19e82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19e87:	5b                   	pop    %rbx
   19e88:	5d                   	pop    %rbp
   19e89:	41 5c                	pop    %r12
   19e8b:	41 5d                	pop    %r13
   19e8d:	c3                   	retq   

0000000000019e8e <.annobin_blobref_hash.start>:
   19e8e:	66 90                	xchg   %ax,%ax

0000000000019e90 <blobref_hash>:
   19e90:	f3 0f 1e fa          	endbr64 
   19e94:	41 57                	push   %r15
   19e96:	41 89 d7             	mov    %edx,%r15d
   19e99:	41 56                	push   %r14
   19e9b:	49 89 f6             	mov    %rsi,%r14
   19e9e:	41 55                	push   %r13
   19ea0:	45 89 c5             	mov    %r8d,%r13d
   19ea3:	41 54                	push   %r12
   19ea5:	49 89 cc             	mov    %rcx,%r12
   19ea8:	55                   	push   %rbp
   19ea9:	53                   	push   %rbx
   19eaa:	48 83 ec 38          	sub    $0x38,%rsp
   19eae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19eb5:	00 00 
   19eb7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19ebc:	31 c0                	xor    %eax,%eax
   19ebe:	e8 2d fc ff ff       	callq  19af0 <lookup_blobhash>
   19ec3:	48 85 c0             	test   %rax,%rax
   19ec6:	74 4a                	je     19f12 <blobref_hash+0x82>
   19ec8:	48 89 c3             	mov    %rax,%rbx
   19ecb:	48 89 e5             	mov    %rsp,%rbp
   19ece:	8b 48 08             	mov    0x8(%rax),%ecx
   19ed1:	44 89 fe             	mov    %r15d,%esi
   19ed4:	48 89 ea             	mov    %rbp,%rdx
   19ed7:	4c 89 f7             	mov    %r14,%rdi
   19eda:	ff 50 10             	callq  *0x10(%rax)
   19edd:	8b 73 08             	mov    0x8(%rbx),%esi
   19ee0:	48 8b 3b             	mov    (%rbx),%rdi
   19ee3:	45 89 e9             	mov    %r13d,%r9d
   19ee6:	4d 89 e0             	mov    %r12,%r8
   19ee9:	48 89 ea             	mov    %rbp,%rdx
   19eec:	89 f1                	mov    %esi,%ecx
   19eee:	e8 dd fd ff ff       	callq  19cd0 <hashtostr.isra.2>
   19ef3:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   19ef8:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   19eff:	00 00 
   19f01:	75 21                	jne    19f24 <blobref_hash+0x94>
   19f03:	48 83 c4 38          	add    $0x38,%rsp
   19f07:	5b                   	pop    %rbx
   19f08:	5d                   	pop    %rbp
   19f09:	41 5c                	pop    %r12
   19f0b:	41 5d                	pop    %r13
   19f0d:	41 5e                	pop    %r14
   19f0f:	41 5f                	pop    %r15
   19f11:	c3                   	retq   
   19f12:	e8 f9 5b ff ff       	callq  fb10 <__errno_location@plt>
   19f17:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19f1d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19f22:	eb cf                	jmp    19ef3 <blobref_hash+0x63>
   19f24:	e8 27 5f ff ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000019f29 <.annobin_blobref_hash.end>:
   19f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000019f30 <blobref_hash_raw>:
   19f30:	f3 0f 1e fa          	endbr64 
   19f34:	41 56                	push   %r14
   19f36:	41 55                	push   %r13
   19f38:	41 54                	push   %r12
   19f3a:	55                   	push   %rbp
   19f3b:	53                   	push   %rbx
   19f3c:	48 85 ff             	test   %rdi,%rdi
   19f3f:	74 3f                	je     19f80 <blobref_hash_raw+0x50>
   19f41:	49 89 f5             	mov    %rsi,%r13
   19f44:	41 89 d6             	mov    %edx,%r14d
   19f47:	48 89 cd             	mov    %rcx,%rbp
   19f4a:	45 89 c4             	mov    %r8d,%r12d
   19f4d:	e8 9e fb ff ff       	callq  19af0 <lookup_blobhash>
   19f52:	48 89 c3             	mov    %rax,%rbx
   19f55:	48 85 c0             	test   %rax,%rax
   19f58:	74 26                	je     19f80 <blobref_hash_raw+0x50>
   19f5a:	8b 48 08             	mov    0x8(%rax),%ecx
   19f5d:	44 39 e1             	cmp    %r12d,%ecx
   19f60:	7f 1e                	jg     19f80 <blobref_hash_raw+0x50>
   19f62:	48 85 ed             	test   %rbp,%rbp
   19f65:	74 19                	je     19f80 <blobref_hash_raw+0x50>
   19f67:	48 89 ea             	mov    %rbp,%rdx
   19f6a:	44 89 f6             	mov    %r14d,%esi
   19f6d:	4c 89 ef             	mov    %r13,%rdi
   19f70:	ff 50 10             	callq  *0x10(%rax)
   19f73:	8b 43 08             	mov    0x8(%rbx),%eax
   19f76:	5b                   	pop    %rbx
   19f77:	5d                   	pop    %rbp
   19f78:	41 5c                	pop    %r12
   19f7a:	41 5d                	pop    %r13
   19f7c:	41 5e                	pop    %r14
   19f7e:	c3                   	retq   
   19f7f:	90                   	nop
   19f80:	e8 8b 5b ff ff       	callq  fb10 <__errno_location@plt>
   19f85:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   19f8b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   19f90:	eb e4                	jmp    19f76 <blobref_hash_raw+0x46>

0000000000019f92 <.annobin_blobref_hash_raw.end>:
   19f92:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   19f99:	00 00 00 00 
   19f9d:	0f 1f 00             	nopl   (%rax)

0000000000019fa0 <blobref_validate>:
   19fa0:	f3 0f 1e fa          	endbr64 
   19fa4:	41 54                	push   %r12
   19fa6:	55                   	push   %rbp
   19fa7:	53                   	push   %rbx
   19fa8:	48 85 ff             	test   %rdi,%rdi
   19fab:	74 5b                	je     1a008 <blobref_validate+0x68>
   19fad:	48 89 fb             	mov    %rdi,%rbx
   19fb0:	e8 3b fb ff ff       	callq  19af0 <lookup_blobhash>
   19fb5:	49 89 c4             	mov    %rax,%r12
   19fb8:	48 85 c0             	test   %rax,%rax
   19fbb:	74 4b                	je     1a008 <blobref_validate+0x68>
   19fbd:	48 89 df             	mov    %rbx,%rdi
   19fc0:	e8 5b 5e ff ff       	callq  fe20 <strlen@plt>
   19fc5:	49 8b 3c 24          	mov    (%r12),%rdi
   19fc9:	48 89 c5             	mov    %rax,%rbp
   19fcc:	e8 4f 5e ff ff       	callq  fe20 <strlen@plt>
   19fd1:	29 c5                	sub    %eax,%ebp
   19fd3:	8d 78 01             	lea    0x1(%rax),%edi
   19fd6:	49 63 44 24 08       	movslq 0x8(%r12),%rax
   19fdb:	48 63 ed             	movslq %ebp,%rbp
   19fde:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
   19fe3:	48 39 c5             	cmp    %rax,%rbp
   19fe6:	75 20                	jne    1a008 <blobref_validate+0x68>
   19fe8:	48 63 ff             	movslq %edi,%rdi
   19feb:	48 01 df             	add    %rbx,%rdi
   19fee:	0f b6 07             	movzbl (%rdi),%eax
   19ff1:	84 c0                	test   %al,%al
   19ff3:	74 2b                	je     1a020 <blobref_validate+0x80>
   19ff5:	8d 50 d0             	lea    -0x30(%rax),%edx
   19ff8:	48 83 c7 01          	add    $0x1,%rdi
   19ffc:	80 fa 09             	cmp    $0x9,%dl
   19fff:	76 ed                	jbe    19fee <blobref_validate+0x4e>
   1a001:	83 e8 61             	sub    $0x61,%eax
   1a004:	3c 05                	cmp    $0x5,%al
   1a006:	76 e6                	jbe    19fee <blobref_validate+0x4e>
   1a008:	e8 03 5b ff ff       	callq  fb10 <__errno_location@plt>
   1a00d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1a013:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1a018:	5b                   	pop    %rbx
   1a019:	5d                   	pop    %rbp
   1a01a:	41 5c                	pop    %r12
   1a01c:	c3                   	retq   
   1a01d:	0f 1f 00             	nopl   (%rax)
   1a020:	31 c0                	xor    %eax,%eax
   1a022:	eb f4                	jmp    1a018 <blobref_validate+0x78>

000000000001a024 <.annobin_blobref_validate.end>:
   1a024:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a02b:	00 00 00 00 
   1a02f:	90                   	nop

000000000001a030 <blobref_validate_hashtype>:
   1a030:	f3 0f 1e fa          	endbr64 
   1a034:	48 83 ec 08          	sub    $0x8,%rsp
   1a038:	48 85 ff             	test   %rdi,%rdi
   1a03b:	74 13                	je     1a050 <blobref_validate_hashtype+0x20>
   1a03d:	e8 ae fa ff ff       	callq  19af0 <lookup_blobhash>
   1a042:	48 85 c0             	test   %rax,%rax
   1a045:	74 09                	je     1a050 <blobref_validate_hashtype+0x20>
   1a047:	48 63 40 08          	movslq 0x8(%rax),%rax
   1a04b:	48 83 c4 08          	add    $0x8,%rsp
   1a04f:	c3                   	retq   
   1a050:	e8 bb 5a ff ff       	callq  fb10 <__errno_location@plt>
   1a055:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1a05b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a062:	eb e7                	jmp    1a04b <blobref_validate_hashtype+0x1b>

000000000001a064 <.annobin_blobref.c_end>:
   1a064:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a06b:	00 00 00 
   1a06e:	66 90                	xchg   %ax,%ax

000000000001a070 <cleanup_run>:
   1a070:	f3 0f 1e fa          	endbr64 
   1a074:	53                   	push   %rbx
   1a075:	48 8d 3d 84 c3 23 00 	lea    0x23c384(%rip),%rdi        # 256400 <mutex>
   1a07c:	e8 4f 6a ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1a081:	48 83 3d 57 c3 23 00 	cmpq   $0x0,0x23c357(%rip)        # 2563e0 <cleanup_list>
   1a088:	00 
   1a089:	74 0d                	je     1a098 <cleanup_run+0x28>
   1a08b:	e8 80 5c ff ff       	callq  fd10 <getpid@plt>
   1a090:	3b 05 52 c3 23 00    	cmp    0x23c352(%rip),%eax        # 2563e8 <cleaner_pid>
   1a096:	74 10                	je     1a0a8 <cleanup_run+0x38>
   1a098:	48 8d 3d 61 c3 23 00 	lea    0x23c361(%rip),%rdi        # 256400 <mutex>
   1a09f:	5b                   	pop    %rbx
   1a0a0:	e9 4b 63 ff ff       	jmpq   103f0 <pthread_mutex_unlock@plt>
   1a0a5:	0f 1f 00             	nopl   (%rax)
   1a0a8:	48 8b 3d 31 c3 23 00 	mov    0x23c331(%rip),%rdi        # 2563e0 <cleanup_list>
   1a0af:	e8 1c 0d 02 00       	callq  3add0 <fzlist_first>
   1a0b4:	48 89 c3             	mov    %rax,%rbx
   1a0b7:	48 85 c0             	test   %rax,%rax
   1a0ba:	74 3b                	je     1a0f7 <cleanup_run+0x87>
   1a0bc:	0f 1f 40 00          	nopl   0x0(%rax)
   1a0c0:	48 8b 03             	mov    (%rbx),%rax
   1a0c3:	48 85 c0             	test   %rax,%rax
   1a0c6:	74 05                	je     1a0cd <cleanup_run+0x5d>
   1a0c8:	48 89 df             	mov    %rbx,%rdi
   1a0cb:	ff d0                	callq  *%rax
   1a0cd:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1a0d1:	48 85 ff             	test   %rdi,%rdi
   1a0d4:	74 05                	je     1a0db <cleanup_run+0x6b>
   1a0d6:	e8 d5 59 ff ff       	callq  fab0 <free@plt>
   1a0db:	48 89 df             	mov    %rbx,%rdi
   1a0de:	e8 cd 59 ff ff       	callq  fab0 <free@plt>
   1a0e3:	48 8b 3d f6 c2 23 00 	mov    0x23c2f6(%rip),%rdi        # 2563e0 <cleanup_list>
   1a0ea:	e8 21 0d 02 00       	callq  3ae10 <fzlist_next>
   1a0ef:	48 89 c3             	mov    %rax,%rbx
   1a0f2:	48 85 c0             	test   %rax,%rax
   1a0f5:	75 c9                	jne    1a0c0 <cleanup_run+0x50>
   1a0f7:	48 8d 3d e2 c2 23 00 	lea    0x23c2e2(%rip),%rdi        # 2563e0 <cleanup_list>
   1a0fe:	e8 cd 12 02 00       	callq  3b3d0 <fzlist_destroy>
   1a103:	48 8d 3d f6 c2 23 00 	lea    0x23c2f6(%rip),%rdi        # 256400 <mutex>
   1a10a:	5b                   	pop    %rbx
   1a10b:	48 c7 05 ca c2 23 00 	movq   $0x0,0x23c2ca(%rip)        # 2563e0 <cleanup_list>
   1a112:	00 00 00 00 
   1a116:	e9 d5 62 ff ff       	jmpq   103f0 <pthread_mutex_unlock@plt>

000000000001a11b <.annobin_cleanup_directory_recursive.start>:
   1a11b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a120 <cleanup_directory_recursive>:
   1a120:	f3 0f 1e fa          	endbr64 
   1a124:	48 85 ff             	test   %rdi,%rdi
   1a127:	74 17                	je     1a140 <cleanup_directory_recursive+0x20>
   1a129:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a12d:	48 85 ff             	test   %rdi,%rdi
   1a130:	74 0e                	je     1a140 <cleanup_directory_recursive+0x20>
   1a132:	e9 f9 aa 00 00       	jmpq   24c30 <unlink_recursive>
   1a137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a13e:	00 00 
   1a140:	c3                   	retq   

000000000001a141 <.annobin_cleanup_directory.start>:
   1a141:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a148:	00 00 00 00 
   1a14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a150 <cleanup_directory>:
   1a150:	f3 0f 1e fa          	endbr64 
   1a154:	48 85 ff             	test   %rdi,%rdi
   1a157:	74 17                	je     1a170 <cleanup_directory+0x20>
   1a159:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a15d:	48 85 ff             	test   %rdi,%rdi
   1a160:	74 0e                	je     1a170 <cleanup_directory+0x20>
   1a162:	e9 99 5c ff ff       	jmpq   fe00 <rmdir@plt>
   1a167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a16e:	00 00 
   1a170:	c3                   	retq   

000000000001a171 <.annobin_cleanup_directory.end>:
   1a171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a178:	00 00 00 00 
   1a17c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a180 <cleanup_file>:
   1a180:	f3 0f 1e fa          	endbr64 
   1a184:	48 85 ff             	test   %rdi,%rdi
   1a187:	74 17                	je     1a1a0 <cleanup_file+0x20>
   1a189:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a18d:	48 85 ff             	test   %rdi,%rdi
   1a190:	74 0e                	je     1a1a0 <cleanup_file+0x20>
   1a192:	e9 99 59 ff ff       	jmpq   fb30 <unlink@plt>
   1a197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a19e:	00 00 
   1a1a0:	c3                   	retq   

000000000001a1a1 <.annobin_cleanup_file.end>:
   1a1a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a1a8:	00 00 00 00 
   1a1ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a1b0 <cleanup_push>:
   1a1b0:	f3 0f 1e fa          	endbr64 
   1a1b4:	41 54                	push   %r12
   1a1b6:	49 89 fc             	mov    %rdi,%r12
   1a1b9:	48 8d 3d 40 c2 23 00 	lea    0x23c240(%rip),%rdi        # 256400 <mutex>
   1a1c0:	55                   	push   %rbp
   1a1c1:	48 89 f5             	mov    %rsi,%rbp
   1a1c4:	53                   	push   %rbx
   1a1c5:	e8 06 69 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1a1ca:	48 83 3d 0e c2 23 00 	cmpq   $0x0,0x23c20e(%rip)        # 2563e0 <cleanup_list>
   1a1d1:	00 
   1a1d2:	74 29                	je     1a1fd <cleanup_push+0x4d>
   1a1d4:	e8 37 5b ff ff       	callq  fd10 <getpid@plt>
   1a1d9:	8b 15 09 c2 23 00    	mov    0x23c209(%rip),%edx        # 2563e8 <cleaner_pid>
   1a1df:	39 d0                	cmp    %edx,%eax
   1a1e1:	74 3d                	je     1a220 <cleanup_push+0x70>
   1a1e3:	85 d2                	test   %edx,%edx
   1a1e5:	74 16                	je     1a1fd <cleanup_push+0x4d>
   1a1e7:	48 83 3d f1 c1 23 00 	cmpq   $0x0,0x23c1f1(%rip)        # 2563e0 <cleanup_list>
   1a1ee:	00 
   1a1ef:	74 0c                	je     1a1fd <cleanup_push+0x4d>
   1a1f1:	48 8d 3d e8 c1 23 00 	lea    0x23c1e8(%rip),%rdi        # 2563e0 <cleanup_list>
   1a1f8:	e8 d3 11 02 00       	callq  3b3d0 <fzlist_destroy>
   1a1fd:	e8 5e 0b 02 00       	callq  3ad60 <fzlist_new>
   1a202:	48 89 05 d7 c1 23 00 	mov    %rax,0x23c1d7(%rip)        # 2563e0 <cleanup_list>
   1a209:	e8 02 5b ff ff       	callq  fd10 <getpid@plt>
   1a20e:	48 8d 3d 5b fe ff ff 	lea    -0x1a5(%rip),%rdi        # 1a070 <cleanup_run>
   1a215:	89 05 cd c1 23 00    	mov    %eax,0x23c1cd(%rip)        # 2563e8 <cleaner_pid>
   1a21b:	e8 b0 3f 02 00       	callq  3e1d0 <atexit>
   1a220:	be 01 00 00 00       	mov    $0x1,%esi
   1a225:	bf 10 00 00 00       	mov    $0x10,%edi
   1a22a:	e8 e1 5f ff ff       	callq  10210 <calloc@plt>
   1a22f:	48 89 c3             	mov    %rax,%rbx
   1a232:	48 85 c0             	test   %rax,%rax
   1a235:	74 1a                	je     1a251 <cleanup_push+0xa1>
   1a237:	4c 89 20             	mov    %r12,(%rax)
   1a23a:	48 8b 3d 9f c1 23 00 	mov    0x23c19f(%rip),%rdi        # 2563e0 <cleanup_list>
   1a241:	48 89 c6             	mov    %rax,%rsi
   1a244:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1a248:	e8 13 0e 02 00       	callq  3b060 <fzlist_push>
   1a24d:	85 c0                	test   %eax,%eax
   1a24f:	78 17                	js     1a268 <cleanup_push+0xb8>
   1a251:	5b                   	pop    %rbx
   1a252:	48 8d 3d a7 c1 23 00 	lea    0x23c1a7(%rip),%rdi        # 256400 <mutex>
   1a259:	5d                   	pop    %rbp
   1a25a:	41 5c                	pop    %r12
   1a25c:	e9 8f 61 ff ff       	jmpq   103f0 <pthread_mutex_unlock@plt>
   1a261:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a268:	48 89 df             	mov    %rbx,%rdi
   1a26b:	e8 40 58 ff ff       	callq  fab0 <free@plt>
   1a270:	5b                   	pop    %rbx
   1a271:	48 8d 3d 88 c1 23 00 	lea    0x23c188(%rip),%rdi        # 256400 <mutex>
   1a278:	5d                   	pop    %rbp
   1a279:	41 5c                	pop    %r12
   1a27b:	e9 70 61 ff ff       	jmpq   103f0 <pthread_mutex_unlock@plt>

000000000001a280 <cleanup_push_string>:
   1a280:	f3 0f 1e fa          	endbr64 
   1a284:	53                   	push   %rbx
   1a285:	48 89 fb             	mov    %rdi,%rbx
   1a288:	48 89 f7             	mov    %rsi,%rdi
   1a28b:	e8 10 67 ff ff       	callq  109a0 <strdup@plt>
   1a290:	48 85 c0             	test   %rax,%rax
   1a293:	74 13                	je     1a2a8 <cleanup_push_string+0x28>
   1a295:	48 89 df             	mov    %rbx,%rdi
   1a298:	48 89 c6             	mov    %rax,%rsi
   1a29b:	5b                   	pop    %rbx
   1a29c:	e9 0f ff ff ff       	jmpq   1a1b0 <cleanup_push>
   1a2a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a2a8:	5b                   	pop    %rbx
   1a2a9:	c3                   	retq   

000000000001a2aa <.annobin_cleanup.c_end>:
   1a2aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a2b0 <string2int>:
   1a2b0:	53                   	push   %rbx
   1a2b1:	31 d2                	xor    %edx,%edx
   1a2b3:	48 89 fb             	mov    %rdi,%rbx
   1a2b6:	48 83 ec 10          	sub    $0x10,%rsp
   1a2ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a2c1:	00 00 
   1a2c3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a2c8:	31 c0                	xor    %eax,%eax
   1a2ca:	48 89 e6             	mov    %rsp,%rsi
   1a2cd:	e8 7e 65 ff ff       	callq  10850 <strtoul@plt>
   1a2d2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1a2d6:	74 0e                	je     1a2e6 <string2int+0x36>
   1a2d8:	48 8b 14 24          	mov    (%rsp),%rdx
   1a2dc:	48 39 da             	cmp    %rbx,%rdx
   1a2df:	74 1f                	je     1a300 <string2int+0x50>
   1a2e1:	80 3a 00             	cmpb   $0x0,(%rdx)
   1a2e4:	75 1a                	jne    1a300 <string2int+0x50>
   1a2e6:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1a2eb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1a2f2:	00 00 
   1a2f4:	75 1c                	jne    1a312 <string2int+0x62>
   1a2f6:	48 83 c4 10          	add    $0x10,%rsp
   1a2fa:	5b                   	pop    %rbx
   1a2fb:	c3                   	retq   
   1a2fc:	0f 1f 40 00          	nopl   0x0(%rax)
   1a300:	e8 0b 58 ff ff       	callq  fb10 <__errno_location@plt>
   1a305:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1a30b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1a310:	eb d4                	jmp    1a2e6 <string2int+0x36>
   1a312:	e8 39 5b ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001a317 <.annobin_string2int.end>:
   1a317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a31e:	00 00 

000000000001a320 <tm_unit_min>:
   1a320:	f3 0f 1e fa          	endbr64 
   1a324:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1a329:	83 ff 06             	cmp    $0x6,%edi
   1a32c:	77 1d                	ja     1a34b <tm_unit_min+0x2b>
   1a32e:	ba 01 00 00 00       	mov    $0x1,%edx
   1a333:	89 f9                	mov    %edi,%ecx
   1a335:	31 c0                	xor    %eax,%eax
   1a337:	48 d3 e2             	shl    %cl,%rdx
   1a33a:	f6 c2 77             	test   $0x77,%dl
   1a33d:	75 0c                	jne    1a34b <tm_unit_min+0x2b>
   1a33f:	83 e2 08             	and    $0x8,%edx
   1a342:	48 83 fa 01          	cmp    $0x1,%rdx
   1a346:	19 c0                	sbb    %eax,%eax
   1a348:	83 c8 01             	or     $0x1,%eax
   1a34b:	c3                   	retq   

000000000001a34c <.annobin_tm_reset.start>:
   1a34c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a350 <tm_reset>:
   1a350:	41 54                	push   %r12
   1a352:	55                   	push   %rbp
   1a353:	53                   	push   %rbx
   1a354:	8d 5e ff             	lea    -0x1(%rsi),%ebx
   1a357:	83 fb ff             	cmp    $0xffffffff,%ebx
   1a35a:	74 4e                	je     1a3aa <tm_reset+0x5a>
   1a35c:	49 89 fc             	mov    %rdi,%r12
   1a35f:	89 df                	mov    %ebx,%edi
   1a361:	48 8d 2d 08 4b 02 00 	lea    0x24b08(%rip),%rbp        # 3ee70 <__PRETTY_FUNCTION__.4414+0x18>
   1a368:	e8 b3 ff ff ff       	callq  1a320 <tm_unit_min>
   1a36d:	8d 4b ff             	lea    -0x1(%rbx),%ecx
   1a370:	83 fb 05             	cmp    $0x5,%ebx
   1a373:	77 2c                	ja     1a3a1 <tm_reset+0x51>
   1a375:	0f 1f 00             	nopl   (%rax)
   1a378:	48 63 54 9d 00       	movslq 0x0(%rbp,%rbx,4),%rdx
   1a37d:	48 01 ea             	add    %rbp,%rdx
   1a380:	3e ff e2             	notrack jmpq *%rdx
   1a383:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a388:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   1a38d:	89 02                	mov    %eax,(%rdx)
   1a38f:	90                   	nop
   1a390:	89 cb                	mov    %ecx,%ebx
   1a392:	89 df                	mov    %ebx,%edi
   1a394:	e8 87 ff ff ff       	callq  1a320 <tm_unit_min>
   1a399:	8d 4b ff             	lea    -0x1(%rbx),%ecx
   1a39c:	83 fb 05             	cmp    $0x5,%ebx
   1a39f:	76 d7                	jbe    1a378 <tm_reset+0x28>
   1a3a1:	41 89 04 24          	mov    %eax,(%r12)
   1a3a5:	83 f9 ff             	cmp    $0xffffffff,%ecx
   1a3a8:	75 e6                	jne    1a390 <tm_reset+0x40>
   1a3aa:	5b                   	pop    %rbx
   1a3ab:	5d                   	pop    %rbp
   1a3ac:	41 5c                	pop    %r12
   1a3ae:	c3                   	retq   
   1a3af:	90                   	nop
   1a3b0:	49 8d 54 24 0c       	lea    0xc(%r12),%rdx
   1a3b5:	89 02                	mov    %eax,(%rdx)
   1a3b7:	eb d7                	jmp    1a390 <tm_reset+0x40>
   1a3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a3c0:	49 8d 54 24 08       	lea    0x8(%r12),%rdx
   1a3c5:	89 02                	mov    %eax,(%rdx)
   1a3c7:	eb c7                	jmp    1a390 <tm_reset+0x40>
   1a3c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a3d0:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
   1a3d5:	89 02                	mov    %eax,(%rdx)
   1a3d7:	eb b7                	jmp    1a390 <tm_reset+0x40>
   1a3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a3e0:	49 8d 54 24 14       	lea    0x14(%r12),%rdx
   1a3e5:	89 02                	mov    %eax,(%rdx)
   1a3e7:	eb a7                	jmp    1a390 <tm_reset+0x40>

000000000001a3e9 <.annobin_tm_reset.end>:
   1a3e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001a3f0 <tm_unit_max>:
   1a3f0:	f3 0f 1e fa          	endbr64 
   1a3f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1a3f9:	83 ff 06             	cmp    $0x6,%edi
   1a3fc:	77 0c                	ja     1a40a <tm_unit_max+0x1a>
   1a3fe:	89 ff                	mov    %edi,%edi
   1a400:	48 8d 05 d9 4a 02 00 	lea    0x24ad9(%rip),%rax        # 3eee0 <CSWTCH.32>
   1a407:	8b 04 b8             	mov    (%rax,%rdi,4),%eax
   1a40a:	c3                   	retq   

000000000001a40b <.annobin_tm_unit_max.end>:
   1a40b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a410 <tm_unit_string>:
   1a410:	f3 0f 1e fa          	endbr64 
   1a414:	83 ff 06             	cmp    $0x6,%edi
   1a417:	0f 87 83 00 00 00    	ja     1a4a0 <tm_unit_string+0x90>
   1a41d:	48 8d 15 64 4a 02 00 	lea    0x24a64(%rip),%rdx        # 3ee88 <__PRETTY_FUNCTION__.4414+0x30>
   1a424:	89 ff                	mov    %edi,%edi
   1a426:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   1a42a:	48 01 d0             	add    %rdx,%rax
   1a42d:	3e ff e0             	notrack jmpq *%rax
   1a430:	48 8d 05 f7 4a 02 00 	lea    0x24af7(%rip),%rax        # 3ef2e <__PRETTY_FUNCTION__.4363+0x16>
   1a437:	c3                   	retq   
   1a438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a43f:	00 
   1a440:	48 8d 05 0b 4b 02 00 	lea    0x24b0b(%rip),%rax        # 3ef52 <__PRETTY_FUNCTION__.4363+0x3a>
   1a447:	c3                   	retq   
   1a448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a44f:	00 
   1a450:	48 8d 05 de 4a 02 00 	lea    0x24ade(%rip),%rax        # 3ef35 <__PRETTY_FUNCTION__.4363+0x1d>
   1a457:	c3                   	retq   
   1a458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a45f:	00 
   1a460:	48 8d 05 d3 4a 02 00 	lea    0x24ad3(%rip),%rax        # 3ef3a <__PRETTY_FUNCTION__.4363+0x22>
   1a467:	c3                   	retq   
   1a468:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a46f:	00 
   1a470:	48 8d 05 c8 4a 02 00 	lea    0x24ac8(%rip),%rax        # 3ef3f <__PRETTY_FUNCTION__.4363+0x27>
   1a477:	c3                   	retq   
   1a478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a47f:	00 
   1a480:	48 8d 05 c6 4a 02 00 	lea    0x24ac6(%rip),%rax        # 3ef4d <__PRETTY_FUNCTION__.4363+0x35>
   1a487:	c3                   	retq   
   1a488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a48f:	00 
   1a490:	48 8d 05 ae 4a 02 00 	lea    0x24aae(%rip),%rax        # 3ef45 <__PRETTY_FUNCTION__.4363+0x2d>
   1a497:	c3                   	retq   
   1a498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a49f:	00 
   1a4a0:	48 8d 05 7f 4a 02 00 	lea    0x24a7f(%rip),%rax        # 3ef26 <__PRETTY_FUNCTION__.4363+0xe>
   1a4a7:	c3                   	retq   

000000000001a4a8 <.annobin_tm_string_to_weekday.start>:
   1a4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a4af:	00 

000000000001a4b0 <tm_string_to_weekday>:
   1a4b0:	f3 0f 1e fa          	endbr64 
   1a4b4:	41 56                	push   %r14
   1a4b6:	41 55                	push   %r13
   1a4b8:	41 54                	push   %r12
   1a4ba:	55                   	push   %rbp
   1a4bb:	53                   	push   %rbx
   1a4bc:	48 85 ff             	test   %rdi,%rdi
   1a4bf:	74 3f                	je     1a500 <tm_string_to_weekday+0x50>
   1a4c1:	48 89 fd             	mov    %rdi,%rbp
   1a4c4:	31 db                	xor    %ebx,%ebx
   1a4c6:	4c 8d 35 13 7e 23 00 	lea    0x237e13(%rip),%r14        # 2522e0 <weekdays>
   1a4cd:	e8 4e 59 ff ff       	callq  fe20 <strlen@plt>
   1a4d2:	48 8d 3d 80 4a 02 00 	lea    0x24a80(%rip),%rdi        # 3ef59 <__PRETTY_FUNCTION__.4363+0x41>
   1a4d9:	49 89 c5             	mov    %rax,%r13
   1a4dc:	eb 06                	jmp    1a4e4 <tm_string_to_weekday+0x34>
   1a4de:	66 90                	xchg   %ax,%ax
   1a4e0:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi
   1a4e4:	4c 89 ea             	mov    %r13,%rdx
   1a4e7:	48 89 ee             	mov    %rbp,%rsi
   1a4ea:	41 89 dc             	mov    %ebx,%r12d
   1a4ed:	e8 3e 5f ff ff       	callq  10430 <strncasecmp@plt>
   1a4f2:	85 c0                	test   %eax,%eax
   1a4f4:	74 10                	je     1a506 <tm_string_to_weekday+0x56>
   1a4f6:	48 83 c3 01          	add    $0x1,%rbx
   1a4fa:	48 83 fb 07          	cmp    $0x7,%rbx
   1a4fe:	75 e0                	jne    1a4e0 <tm_string_to_weekday+0x30>
   1a500:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1a506:	5b                   	pop    %rbx
   1a507:	44 89 e0             	mov    %r12d,%eax
   1a50a:	5d                   	pop    %rbp
   1a50b:	41 5c                	pop    %r12
   1a50d:	41 5d                	pop    %r13
   1a50f:	41 5e                	pop    %r14
   1a511:	c3                   	retq   

000000000001a512 <.annobin_tm_string_to_weekday.end>:
   1a512:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a519:	00 00 00 00 
   1a51d:	0f 1f 00             	nopl   (%rax)

000000000001a520 <tm_weekday_string>:
   1a520:	f3 0f 1e fa          	endbr64 
   1a524:	83 ff 06             	cmp    $0x6,%edi
   1a527:	77 17                	ja     1a540 <tm_weekday_string+0x20>
   1a529:	48 63 ff             	movslq %edi,%rdi
   1a52c:	48 8d 05 ad 7d 23 00 	lea    0x237dad(%rip),%rax        # 2522e0 <weekdays>
   1a533:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   1a537:	c3                   	retq   
   1a538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a53f:	00 
   1a540:	31 c0                	xor    %eax,%eax
   1a542:	c3                   	retq   

000000000001a543 <.annobin_tm_string_to_month.start>:
   1a543:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a54a:	00 00 00 00 
   1a54e:	66 90                	xchg   %ax,%ax

000000000001a550 <tm_string_to_month>:
   1a550:	f3 0f 1e fa          	endbr64 
   1a554:	41 56                	push   %r14
   1a556:	41 55                	push   %r13
   1a558:	41 54                	push   %r12
   1a55a:	55                   	push   %rbp
   1a55b:	53                   	push   %rbx
   1a55c:	48 85 ff             	test   %rdi,%rdi
   1a55f:	74 3f                	je     1a5a0 <tm_string_to_month+0x50>
   1a561:	48 89 fd             	mov    %rdi,%rbp
   1a564:	31 db                	xor    %ebx,%ebx
   1a566:	4c 8d 35 13 7d 23 00 	lea    0x237d13(%rip),%r14        # 252280 <months>
   1a56d:	e8 ae 58 ff ff       	callq  fe20 <strlen@plt>
   1a572:	48 8d 3d e7 49 02 00 	lea    0x249e7(%rip),%rdi        # 3ef60 <__PRETTY_FUNCTION__.4363+0x48>
   1a579:	49 89 c5             	mov    %rax,%r13
   1a57c:	eb 06                	jmp    1a584 <tm_string_to_month+0x34>
   1a57e:	66 90                	xchg   %ax,%ax
   1a580:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi
   1a584:	4c 89 ea             	mov    %r13,%rdx
   1a587:	48 89 ee             	mov    %rbp,%rsi
   1a58a:	41 89 dc             	mov    %ebx,%r12d
   1a58d:	e8 9e 5e ff ff       	callq  10430 <strncasecmp@plt>
   1a592:	85 c0                	test   %eax,%eax
   1a594:	74 10                	je     1a5a6 <tm_string_to_month+0x56>
   1a596:	48 83 c3 01          	add    $0x1,%rbx
   1a59a:	48 83 fb 0c          	cmp    $0xc,%rbx
   1a59e:	75 e0                	jne    1a580 <tm_string_to_month+0x30>
   1a5a0:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1a5a6:	5b                   	pop    %rbx
   1a5a7:	44 89 e0             	mov    %r12d,%eax
   1a5aa:	5d                   	pop    %rbp
   1a5ab:	41 5c                	pop    %r12
   1a5ad:	41 5d                	pop    %r13
   1a5af:	41 5e                	pop    %r14
   1a5b1:	c3                   	retq   

000000000001a5b2 <.annobin_tm_string2int.start>:
   1a5b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a5b9:	00 00 00 00 
   1a5bd:	0f 1f 00             	nopl   (%rax)

000000000001a5c0 <tm_string2int>:
   1a5c0:	55                   	push   %rbp
   1a5c1:	89 f5                	mov    %esi,%ebp
   1a5c3:	53                   	push   %rbx
   1a5c4:	48 89 fb             	mov    %rdi,%rbx
   1a5c7:	48 83 ec 08          	sub    $0x8,%rsp
   1a5cb:	e8 e0 fc ff ff       	callq  1a2b0 <string2int>
   1a5d0:	85 c0                	test   %eax,%eax
   1a5d2:	78 0c                	js     1a5e0 <tm_string2int+0x20>
   1a5d4:	48 83 c4 08          	add    $0x8,%rsp
   1a5d8:	5b                   	pop    %rbx
   1a5d9:	5d                   	pop    %rbp
   1a5da:	c3                   	retq   
   1a5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a5e0:	83 fd 06             	cmp    $0x6,%ebp
   1a5e3:	74 1b                	je     1a600 <tm_string2int+0x40>
   1a5e5:	83 fd 04             	cmp    $0x4,%ebp
   1a5e8:	75 ea                	jne    1a5d4 <tm_string2int+0x14>
   1a5ea:	48 83 c4 08          	add    $0x8,%rsp
   1a5ee:	48 89 df             	mov    %rbx,%rdi
   1a5f1:	5b                   	pop    %rbx
   1a5f2:	5d                   	pop    %rbp
   1a5f3:	e9 58 ff ff ff       	jmpq   1a550 <tm_string_to_month>
   1a5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a5ff:	00 
   1a600:	48 83 c4 08          	add    $0x8,%rsp
   1a604:	48 89 df             	mov    %rbx,%rdi
   1a607:	5b                   	pop    %rbx
   1a608:	5d                   	pop    %rbp
   1a609:	e9 a2 fe ff ff       	jmpq   1a4b0 <tm_string_to_weekday>

000000000001a60e <.annobin_tm_month_string.start>:
   1a60e:	66 90                	xchg   %ax,%ax

000000000001a610 <tm_month_string>:
   1a610:	f3 0f 1e fa          	endbr64 
   1a614:	83 ff 0b             	cmp    $0xb,%edi
   1a617:	77 17                	ja     1a630 <tm_month_string+0x20>
   1a619:	48 63 ff             	movslq %edi,%rdi
   1a61c:	48 8d 05 5d 7c 23 00 	lea    0x237c5d(%rip),%rax        # 252280 <months>
   1a623:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   1a627:	c3                   	retq   
   1a628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a62f:	00 
   1a630:	31 c0                	xor    %eax,%eax
   1a632:	c3                   	retq   

000000000001a633 <.annobin_cronodate_destroy.start>:
   1a633:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1a63a:	00 00 00 00 
   1a63e:	66 90                	xchg   %ax,%ax

000000000001a640 <cronodate_destroy>:
   1a640:	f3 0f 1e fa          	endbr64 
   1a644:	41 54                	push   %r12
   1a646:	49 89 fc             	mov    %rdi,%r12
   1a649:	55                   	push   %rbp
   1a64a:	48 8d 6f 70          	lea    0x70(%rdi),%rbp
   1a64e:	53                   	push   %rbx
   1a64f:	48 89 fb             	mov    %rdi,%rbx
   1a652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a658:	48 8b 3b             	mov    (%rbx),%rdi
   1a65b:	48 83 c3 10          	add    $0x10,%rbx
   1a65f:	e8 3c bb 00 00       	callq  261a0 <idset_destroy>
   1a664:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
   1a668:	e8 43 54 ff ff       	callq  fab0 <free@plt>
   1a66d:	48 39 eb             	cmp    %rbp,%rbx
   1a670:	75 e6                	jne    1a658 <cronodate_destroy+0x18>
   1a672:	5b                   	pop    %rbx
   1a673:	4c 89 e7             	mov    %r12,%rdi
   1a676:	5d                   	pop    %rbp
   1a677:	41 5c                	pop    %r12
   1a679:	e9 32 54 ff ff       	jmpq   fab0 <free@plt>

000000000001a67e <.annobin_cronodate_create.start>:
   1a67e:	66 90                	xchg   %ax,%ax

000000000001a680 <cronodate_create>:
   1a680:	f3 0f 1e fa          	endbr64 
   1a684:	55                   	push   %rbp
   1a685:	bf 70 00 00 00       	mov    $0x70,%edi
   1a68a:	53                   	push   %rbx
  return __builtin___memset_chk (__dest, __ch, __len,
   1a68b:	31 db                	xor    %ebx,%ebx
   1a68d:	48 83 ec 08          	sub    $0x8,%rsp
   1a691:	e8 6a b7 00 00       	callq  25e00 <xzmalloc>
   1a696:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1a69a:	48 89 c1             	mov    %rax,%rcx
   1a69d:	48 89 c5             	mov    %rax,%rbp
   1a6a0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a6a7:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1a6ab:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
   1a6b2:	00 
   1a6b3:	31 c0                	xor    %eax,%eax
   1a6b5:	48 29 f9             	sub    %rdi,%rcx
   1a6b8:	83 c1 70             	add    $0x70,%ecx
   1a6bb:	c1 e9 03             	shr    $0x3,%ecx
   1a6be:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1a6c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a6c8:	89 df                	mov    %ebx,%edi
   1a6ca:	e8 21 fd ff ff       	callq  1a3f0 <tm_unit_max>
   1a6cf:	be 01 00 00 00       	mov    $0x1,%esi
   1a6d4:	8d 78 01             	lea    0x1(%rax),%edi
   1a6d7:	48 63 ff             	movslq %edi,%rdi
   1a6da:	e8 31 ba 00 00       	callq  26110 <idset_create>
   1a6df:	48 85 c0             	test   %rax,%rax
   1a6e2:	74 24                	je     1a708 <cronodate_create+0x88>
   1a6e4:	48 89 da             	mov    %rbx,%rdx
   1a6e7:	48 83 c3 01          	add    $0x1,%rbx
   1a6eb:	48 c1 e2 04          	shl    $0x4,%rdx
   1a6ef:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1a6f4:	48 83 fb 07          	cmp    $0x7,%rbx
   1a6f8:	75 ce                	jne    1a6c8 <cronodate_create+0x48>
   1a6fa:	48 83 c4 08          	add    $0x8,%rsp
   1a6fe:	48 89 e8             	mov    %rbp,%rax
   1a701:	5b                   	pop    %rbx
   1a702:	5d                   	pop    %rbp
   1a703:	c3                   	retq   
   1a704:	0f 1f 40 00          	nopl   0x0(%rax)
   1a708:	48 89 ef             	mov    %rbp,%rdi
   1a70b:	31 ed                	xor    %ebp,%ebp
   1a70d:	e8 2e ff ff ff       	callq  1a640 <cronodate_destroy>
   1a712:	48 83 c4 08          	add    $0x8,%rsp
   1a716:	48 89 e8             	mov    %rbp,%rax
   1a719:	5b                   	pop    %rbx
   1a71a:	5d                   	pop    %rbp
   1a71b:	c3                   	retq   

000000000001a71c <.annobin_cronodate_create.end>:
   1a71c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a720 <cronodate_set>:
   1a720:	f3 0f 1e fa          	endbr64 
   1a724:	41 57                	push   %r15
   1a726:	41 56                	push   %r14
   1a728:	41 55                	push   %r13
   1a72a:	41 54                	push   %r12
   1a72c:	55                   	push   %rbp
   1a72d:	53                   	push   %rbx
   1a72e:	48 83 ec 28          	sub    $0x28,%rsp
   1a732:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a739:	00 00 
   1a73b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a740:	31 c0                	xor    %eax,%eax
   1a742:	89 f0                	mov    %esi,%eax
   1a744:	48 c1 e0 04          	shl    $0x4,%rax
   1a748:	4c 8b 24 07          	mov    (%rdi,%rax,1),%r12
   1a74c:	4d 85 e4             	test   %r12,%r12
   1a74f:	0f 84 f5 01 00 00    	je     1a94a <cronodate_set+0x22a>
   1a755:	89 f3                	mov    %esi,%ebx
   1a757:	89 f7                	mov    %esi,%edi
   1a759:	48 89 d5             	mov    %rdx,%rbp
   1a75c:	e8 8f fc ff ff       	callq  1a3f0 <tm_unit_max>
   1a761:	89 df                	mov    %ebx,%edi
   1a763:	41 89 c5             	mov    %eax,%r13d
   1a766:	e8 b5 fb ff ff       	callq  1a320 <tm_unit_min>
   1a76b:	44 89 ea             	mov    %r13d,%edx
   1a76e:	4c 89 e7             	mov    %r12,%rdi
   1a771:	89 c6                	mov    %eax,%esi
   1a773:	e8 28 bd 00 00       	callq  264a0 <idset_range_clear>
   1a778:	85 c0                	test   %eax,%eax
   1a77a:	0f 88 c0 01 00 00    	js     1a940 <cronodate_set+0x220>
   1a780:	48 89 ef             	mov    %rbp,%rdi
   1a783:	e8 18 62 ff ff       	callq  109a0 <strdup@plt>
   1a788:	49 89 c6             	mov    %rax,%r14
   1a78b:	48 85 c0             	test   %rax,%rax
   1a78e:	0f 84 ac 01 00 00    	je     1a940 <cronodate_set+0x220>
   1a794:	48 89 c7             	mov    %rax,%rdi
   1a797:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1a79c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a7a1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1a7a6:	48 8d 35 a3 a7 02 00 	lea    0x2a7a3(%rip),%rsi        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   1a7ad:	e8 be 59 ff ff       	callq  10170 <strtok_r@plt>
   1a7b2:	48 89 c5             	mov    %rax,%rbp
   1a7b5:	48 85 c0             	test   %rax,%rax
   1a7b8:	0f 84 72 01 00 00    	je     1a930 <cronodate_set+0x210>
   1a7be:	be 2f 00 00 00       	mov    $0x2f,%esi
   1a7c3:	48 89 ef             	mov    %rbp,%rdi
   1a7c6:	e8 e5 56 ff ff       	callq  feb0 <strchr@plt>
   1a7cb:	48 85 c0             	test   %rax,%rax
   1a7ce:	0f 84 1c 01 00 00    	je     1a8f0 <cronodate_set+0x1d0>
   1a7d4:	c6 00 00             	movb   $0x0,(%rax)
   1a7d7:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1a7db:	e8 d0 fa ff ff       	callq  1a2b0 <string2int>
   1a7e0:	41 89 c5             	mov    %eax,%r13d
   1a7e3:	85 c0                	test   %eax,%eax
   1a7e5:	0f 88 ad 00 00 00    	js     1a898 <cronodate_set+0x178>
   1a7eb:	b9 02 00 00 00       	mov    $0x2,%ecx
   1a7f0:	48 89 ee             	mov    %rbp,%rsi
   1a7f3:	48 8d 3d 9b 92 02 00 	lea    0x2929b(%rip),%rdi        # 43a95 <__PRETTY_FUNCTION__.6731+0x195>
   1a7fa:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1a7fc:	0f 97 c0             	seta   %al
   1a7ff:	1c 00                	sbb    $0x0,%al
   1a801:	84 c0                	test   %al,%al
   1a803:	0f 84 c7 00 00 00    	je     1a8d0 <cronodate_set+0x1b0>
   1a809:	be 2d 00 00 00       	mov    $0x2d,%esi
   1a80e:	48 89 ef             	mov    %rbp,%rdi
   1a811:	e8 9a 56 ff ff       	callq  feb0 <strchr@plt>
   1a816:	48 85 c0             	test   %rax,%rax
   1a819:	0f 84 e1 00 00 00    	je     1a900 <cronodate_set+0x1e0>
   1a81f:	c6 00 00             	movb   $0x0,(%rax)
   1a822:	48 89 ef             	mov    %rbp,%rdi
   1a825:	89 de                	mov    %ebx,%esi
   1a827:	4c 8d 78 01          	lea    0x1(%rax),%r15
   1a82b:	e8 90 fd ff ff       	callq  1a5c0 <tm_string2int>
   1a830:	89 c5                	mov    %eax,%ebp
   1a832:	85 c0                	test   %eax,%eax
   1a834:	78 62                	js     1a898 <cronodate_set+0x178>
   1a836:	4c 89 ff             	mov    %r15,%rdi
   1a839:	89 de                	mov    %ebx,%esi
   1a83b:	e8 80 fd ff ff       	callq  1a5c0 <tm_string2int>
   1a840:	41 89 c7             	mov    %eax,%r15d
   1a843:	85 c0                	test   %eax,%eax
   1a845:	78 51                	js     1a898 <cronodate_set+0x178>
   1a847:	44 39 fd             	cmp    %r15d,%ebp
   1a84a:	0f 84 c1 00 00 00    	je     1a911 <cronodate_set+0x1f1>
   1a850:	41 83 fd 01          	cmp    $0x1,%r13d
   1a854:	75 1b                	jne    1a871 <cronodate_set+0x151>
   1a856:	eb 28                	jmp    1a880 <cronodate_set+0x160>
   1a858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a85f:	00 
   1a860:	89 ee                	mov    %ebp,%esi
   1a862:	4c 89 e7             	mov    %r12,%rdi
   1a865:	e8 d6 ba 00 00       	callq  26340 <idset_set>
   1a86a:	85 c0                	test   %eax,%eax
   1a86c:	78 2a                	js     1a898 <cronodate_set+0x178>
   1a86e:	44 01 ed             	add    %r13d,%ebp
   1a871:	44 39 fd             	cmp    %r15d,%ebp
   1a874:	7e ea                	jle    1a860 <cronodate_set+0x140>
   1a876:	31 ff                	xor    %edi,%edi
   1a878:	e9 24 ff ff ff       	jmpq   1a7a1 <cronodate_set+0x81>
   1a87d:	0f 1f 00             	nopl   (%rax)
   1a880:	44 89 fa             	mov    %r15d,%edx
   1a883:	89 ee                	mov    %ebp,%esi
   1a885:	4c 89 e7             	mov    %r12,%rdi
   1a888:	e8 23 bb 00 00       	callq  263b0 <idset_range_set>
   1a88d:	85 c0                	test   %eax,%eax
   1a88f:	79 e5                	jns    1a876 <cronodate_set+0x156>
   1a891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a898:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1a89d:	4c 89 f7             	mov    %r14,%rdi
   1a8a0:	e8 0b 52 ff ff       	callq  fab0 <free@plt>
   1a8a5:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1a8aa:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1a8b1:	00 00 
   1a8b3:	89 d8                	mov    %ebx,%eax
   1a8b5:	0f 85 ae 00 00 00    	jne    1a969 <cronodate_set+0x249>
   1a8bb:	48 83 c4 28          	add    $0x28,%rsp
   1a8bf:	5b                   	pop    %rbx
   1a8c0:	5d                   	pop    %rbp
   1a8c1:	41 5c                	pop    %r12
   1a8c3:	41 5d                	pop    %r13
   1a8c5:	41 5e                	pop    %r14
   1a8c7:	41 5f                	pop    %r15
   1a8c9:	c3                   	retq   
   1a8ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a8d0:	89 df                	mov    %ebx,%edi
   1a8d2:	e8 49 fa ff ff       	callq  1a320 <tm_unit_min>
   1a8d7:	89 df                	mov    %ebx,%edi
   1a8d9:	89 c5                	mov    %eax,%ebp
   1a8db:	e8 10 fb ff ff       	callq  1a3f0 <tm_unit_max>
   1a8e0:	41 89 c7             	mov    %eax,%r15d
   1a8e3:	e9 5f ff ff ff       	jmpq   1a847 <cronodate_set+0x127>
   1a8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a8ef:	00 
   1a8f0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1a8f6:	e9 f0 fe ff ff       	jmpq   1a7eb <cronodate_set+0xcb>
   1a8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a900:	89 de                	mov    %ebx,%esi
   1a902:	48 89 ef             	mov    %rbp,%rdi
   1a905:	e8 b6 fc ff ff       	callq  1a5c0 <tm_string2int>
   1a90a:	41 89 c7             	mov    %eax,%r15d
   1a90d:	85 c0                	test   %eax,%eax
   1a90f:	78 87                	js     1a898 <cronodate_set+0x178>
   1a911:	44 89 fe             	mov    %r15d,%esi
   1a914:	4c 89 e7             	mov    %r12,%rdi
   1a917:	e8 24 ba 00 00       	callq  26340 <idset_set>
   1a91c:	85 c0                	test   %eax,%eax
   1a91e:	0f 88 74 ff ff ff    	js     1a898 <cronodate_set+0x178>
   1a924:	31 ff                	xor    %edi,%edi
   1a926:	e9 76 fe ff ff       	jmpq   1a7a1 <cronodate_set+0x81>
   1a92b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a930:	31 db                	xor    %ebx,%ebx
   1a932:	e9 66 ff ff ff       	jmpq   1a89d <cronodate_set+0x17d>
   1a937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a93e:	00 00 
   1a940:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1a945:	e9 5b ff ff ff       	jmpq   1a8a5 <cronodate_set+0x185>
   1a94a:	48 8d 0d c7 45 02 00 	lea    0x245c7(%rip),%rcx        # 3ef18 <__PRETTY_FUNCTION__.4363>
   1a951:	ba 24 01 00 00       	mov    $0x124,%edx
   1a956:	48 8d 35 0b 46 02 00 	lea    0x2460b(%rip),%rsi        # 3ef68 <__PRETTY_FUNCTION__.4363+0x50>
   1a95d:	48 8d 3d 10 46 02 00 	lea    0x24610(%rip),%rdi        # 3ef74 <__PRETTY_FUNCTION__.4363+0x5c>
   1a964:	e8 97 56 ff ff       	callq  10000 <__assert_fail@plt>
   1a969:	e8 e2 54 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001a96e <.annobin_cronodate_set.end>:
   1a96e:	66 90                	xchg   %ax,%ax

000000000001a970 <cronodate_set_integer>:
   1a970:	f3 0f 1e fa          	endbr64 
   1a974:	41 55                	push   %r13
   1a976:	89 f0                	mov    %esi,%eax
   1a978:	41 54                	push   %r12
   1a97a:	55                   	push   %rbp
   1a97b:	53                   	push   %rbx
   1a97c:	48 89 c3             	mov    %rax,%rbx
   1a97f:	48 c1 e0 04          	shl    $0x4,%rax
   1a983:	48 83 ec 08          	sub    $0x8,%rsp
   1a987:	4c 8b 24 07          	mov    (%rdi,%rax,1),%r12
   1a98b:	4d 85 e4             	test   %r12,%r12
   1a98e:	74 77                	je     1aa07 <cronodate_set_integer+0x97>
   1a990:	89 df                	mov    %ebx,%edi
   1a992:	89 d5                	mov    %edx,%ebp
   1a994:	e8 57 fa ff ff       	callq  1a3f0 <tm_unit_max>
   1a999:	39 e8                	cmp    %ebp,%eax
   1a99b:	7c 4b                	jl     1a9e8 <cronodate_set_integer+0x78>
   1a99d:	89 df                	mov    %ebx,%edi
   1a99f:	e8 7c f9 ff ff       	callq  1a320 <tm_unit_min>
   1a9a4:	39 c5                	cmp    %eax,%ebp
   1a9a6:	7c 40                	jl     1a9e8 <cronodate_set_integer+0x78>
   1a9a8:	89 df                	mov    %ebx,%edi
   1a9aa:	e8 41 fa ff ff       	callq  1a3f0 <tm_unit_max>
   1a9af:	89 df                	mov    %ebx,%edi
   1a9b1:	41 89 c5             	mov    %eax,%r13d
   1a9b4:	e8 67 f9 ff ff       	callq  1a320 <tm_unit_min>
   1a9b9:	44 89 ea             	mov    %r13d,%edx
   1a9bc:	4c 89 e7             	mov    %r12,%rdi
   1a9bf:	89 c6                	mov    %eax,%esi
   1a9c1:	e8 da ba 00 00       	callq  264a0 <idset_range_clear>
   1a9c6:	85 c0                	test   %eax,%eax
   1a9c8:	78 36                	js     1aa00 <cronodate_set_integer+0x90>
   1a9ca:	89 ee                	mov    %ebp,%esi
   1a9cc:	4c 89 e7             	mov    %r12,%rdi
   1a9cf:	e8 6c b9 00 00       	callq  26340 <idset_set>
   1a9d4:	c1 f8 1f             	sar    $0x1f,%eax
   1a9d7:	48 83 c4 08          	add    $0x8,%rsp
   1a9db:	5b                   	pop    %rbx
   1a9dc:	5d                   	pop    %rbp
   1a9dd:	41 5c                	pop    %r12
   1a9df:	41 5d                	pop    %r13
   1a9e1:	c3                   	retq   
   1a9e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a9e8:	e8 23 51 ff ff       	callq  fb10 <__errno_location@plt>
   1a9ed:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   1a9f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1a9f8:	eb dd                	jmp    1a9d7 <cronodate_set_integer+0x67>
   1a9fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1aa00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1aa05:	eb d0                	jmp    1a9d7 <cronodate_set_integer+0x67>
   1aa07:	48 8d 0d f2 44 02 00 	lea    0x244f2(%rip),%rcx        # 3ef00 <__PRETTY_FUNCTION__.4370>
   1aa0e:	ba 30 01 00 00       	mov    $0x130,%edx
   1aa13:	48 8d 35 4e 45 02 00 	lea    0x2454e(%rip),%rsi        # 3ef68 <__PRETTY_FUNCTION__.4363+0x50>
   1aa1a:	48 8d 3d 53 45 02 00 	lea    0x24553(%rip),%rdi        # 3ef74 <__PRETTY_FUNCTION__.4363+0x5c>
   1aa21:	e8 da 55 ff ff       	callq  10000 <__assert_fail@plt>

000000000001aa26 <.annobin_cronodate_get.start>:
   1aa26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1aa2d:	00 00 00 

000000000001aa30 <cronodate_get>:
   1aa30:	f3 0f 1e fa          	endbr64 
   1aa34:	53                   	push   %rbx
   1aa35:	89 f3                	mov    %esi,%ebx
   1aa37:	48 c1 e3 04          	shl    $0x4,%rbx
   1aa3b:	48 01 fb             	add    %rdi,%rbx
   1aa3e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1aa42:	e8 69 50 ff ff       	callq  fab0 <free@plt>
   1aa47:	48 8b 3b             	mov    (%rbx),%rdi
   1aa4a:	be 04 00 00 00       	mov    $0x4,%esi
   1aa4f:	e8 9c c4 00 00       	callq  26ef0 <idset_encode>
   1aa54:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1aa58:	5b                   	pop    %rbx
   1aa59:	c3                   	retq   

000000000001aa5a <.annobin_cronodate_fillset.start>:
   1aa5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001aa60 <cronodate_fillset>:
   1aa60:	f3 0f 1e fa          	endbr64 
   1aa64:	41 54                	push   %r12
   1aa66:	55                   	push   %rbp
   1aa67:	48 89 fd             	mov    %rdi,%rbp
   1aa6a:	53                   	push   %rbx
   1aa6b:	31 db                	xor    %ebx,%ebx
   1aa6d:	0f 1f 00             	nopl   (%rax)
   1aa70:	89 df                	mov    %ebx,%edi
   1aa72:	48 83 c5 10          	add    $0x10,%rbp
   1aa76:	e8 75 f9 ff ff       	callq  1a3f0 <tm_unit_max>
   1aa7b:	89 df                	mov    %ebx,%edi
   1aa7d:	83 c3 01             	add    $0x1,%ebx
   1aa80:	41 89 c4             	mov    %eax,%r12d
   1aa83:	e8 98 f8 ff ff       	callq  1a320 <tm_unit_min>
   1aa88:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   1aa8c:	44 89 e2             	mov    %r12d,%edx
   1aa8f:	89 c6                	mov    %eax,%esi
   1aa91:	e8 1a b9 00 00       	callq  263b0 <idset_range_set>
   1aa96:	83 fb 07             	cmp    $0x7,%ebx
   1aa99:	75 d5                	jne    1aa70 <cronodate_fillset+0x10>
   1aa9b:	5b                   	pop    %rbx
   1aa9c:	5d                   	pop    %rbp
   1aa9d:	41 5c                	pop    %r12
   1aa9f:	c3                   	retq   

000000000001aaa0 <cronodate_emptyset>:
   1aaa0:	f3 0f 1e fa          	endbr64 
   1aaa4:	41 54                	push   %r12
   1aaa6:	55                   	push   %rbp
   1aaa7:	48 89 fd             	mov    %rdi,%rbp
   1aaaa:	53                   	push   %rbx
   1aaab:	31 db                	xor    %ebx,%ebx
   1aaad:	0f 1f 00             	nopl   (%rax)
   1aab0:	89 df                	mov    %ebx,%edi
   1aab2:	48 83 c5 10          	add    $0x10,%rbp
   1aab6:	e8 35 f9 ff ff       	callq  1a3f0 <tm_unit_max>
   1aabb:	89 df                	mov    %ebx,%edi
   1aabd:	83 c3 01             	add    $0x1,%ebx
   1aac0:	41 89 c4             	mov    %eax,%r12d
   1aac3:	e8 58 f8 ff ff       	callq  1a320 <tm_unit_min>
   1aac8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   1aacc:	44 89 e2             	mov    %r12d,%edx
   1aacf:	89 c6                	mov    %eax,%esi
   1aad1:	e8 ca b9 00 00       	callq  264a0 <idset_range_clear>
   1aad6:	83 fb 07             	cmp    $0x7,%ebx
   1aad9:	75 d5                	jne    1aab0 <cronodate_emptyset+0x10>
   1aadb:	5b                   	pop    %rbx
   1aadc:	5d                   	pop    %rbp
   1aadd:	41 5c                	pop    %r12
   1aadf:	c3                   	retq   

000000000001aae0 <cronodate_match>:
   1aae0:	f3 0f 1e fa          	endbr64 
   1aae4:	41 56                	push   %r14
   1aae6:	41 55                	push   %r13
   1aae8:	49 89 f5             	mov    %rsi,%r13
   1aaeb:	41 54                	push   %r12
   1aaed:	49 89 fc             	mov    %rdi,%r12
   1aaf0:	55                   	push   %rbp
   1aaf1:	48 8d 2d ac 43 02 00 	lea    0x243ac(%rip),%rbp        # 3eea4 <__PRETTY_FUNCTION__.4414+0x4c>
   1aaf8:	53                   	push   %rbx
   1aaf9:	31 db                	xor    %ebx,%ebx
   1aafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ab00:	48 89 d8             	mov    %rbx,%rax
   1ab03:	41 89 de             	mov    %ebx,%r14d
   1ab06:	48 c1 e0 04          	shl    $0x4,%rax
   1ab0a:	49 8b 3c 04          	mov    (%r12,%rax,1),%rdi
   1ab0e:	83 fb 06             	cmp    $0x6,%ebx
   1ab11:	0f 87 99 00 00 00    	ja     1abb0 <cronodate_match+0xd0>
   1ab17:	89 d8                	mov    %ebx,%eax
   1ab19:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   1ab1e:	48 01 e8             	add    %rbp,%rax
   1ab21:	3e ff e0             	notrack jmpq *%rax
   1ab24:	0f 1f 40 00          	nopl   0x0(%rax)
   1ab28:	49 8d 45 14          	lea    0x14(%r13),%rax
   1ab2c:	8b 30                	mov    (%rax),%esi
   1ab2e:	e8 8d b7 00 00       	callq  262c0 <idset_test>
   1ab33:	84 c0                	test   %al,%al
   1ab35:	74 18                	je     1ab4f <cronodate_match+0x6f>
   1ab37:	48 83 c3 01          	add    $0x1,%rbx
   1ab3b:	eb c3                	jmp    1ab00 <cronodate_match+0x20>
   1ab3d:	0f 1f 00             	nopl   (%rax)
   1ab40:	49 8d 45 10          	lea    0x10(%r13),%rax
   1ab44:	8b 30                	mov    (%rax),%esi
   1ab46:	e8 75 b7 00 00       	callq  262c0 <idset_test>
   1ab4b:	84 c0                	test   %al,%al
   1ab4d:	75 e8                	jne    1ab37 <cronodate_match+0x57>
   1ab4f:	5b                   	pop    %rbx
   1ab50:	31 c0                	xor    %eax,%eax
   1ab52:	5d                   	pop    %rbp
   1ab53:	41 5c                	pop    %r12
   1ab55:	41 5d                	pop    %r13
   1ab57:	41 5e                	pop    %r14
   1ab59:	c3                   	retq   
   1ab5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ab60:	49 8d 45 0c          	lea    0xc(%r13),%rax
   1ab64:	eb c6                	jmp    1ab2c <cronodate_match+0x4c>
   1ab66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ab6d:	00 00 00 
   1ab70:	49 8d 45 08          	lea    0x8(%r13),%rax
   1ab74:	eb b6                	jmp    1ab2c <cronodate_match+0x4c>
   1ab76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ab7d:	00 00 00 
   1ab80:	49 8d 45 04          	lea    0x4(%r13),%rax
   1ab84:	eb a6                	jmp    1ab2c <cronodate_match+0x4c>
   1ab86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ab8d:	00 00 00 
   1ab90:	41 8b 75 18          	mov    0x18(%r13),%esi
   1ab94:	e8 27 b7 00 00       	callq  262c0 <idset_test>
   1ab99:	84 c0                	test   %al,%al
   1ab9b:	74 b2                	je     1ab4f <cronodate_match+0x6f>
   1ab9d:	5b                   	pop    %rbx
   1ab9e:	5d                   	pop    %rbp
   1ab9f:	41 5c                	pop    %r12
   1aba1:	41 5d                	pop    %r13
   1aba3:	41 5e                	pop    %r14
   1aba5:	c3                   	retq   
   1aba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1abad:	00 00 00 
   1abb0:	41 8b 75 00          	mov    0x0(%r13),%esi
   1abb4:	e8 07 b7 00 00       	callq  262c0 <idset_test>
   1abb9:	84 c0                	test   %al,%al
   1abbb:	74 92                	je     1ab4f <cronodate_match+0x6f>
   1abbd:	41 83 fe 06          	cmp    $0x6,%r14d
   1abc1:	0f 85 70 ff ff ff    	jne    1ab37 <cronodate_match+0x57>
   1abc7:	5b                   	pop    %rbx
   1abc8:	5d                   	pop    %rbp
   1abc9:	41 5c                	pop    %r12
   1abcb:	41 5d                	pop    %r13
   1abcd:	41 5e                	pop    %r14
   1abcf:	c3                   	retq   

000000000001abd0 <cronodate_next>:
   1abd0:	f3 0f 1e fa          	endbr64 
   1abd4:	41 57                	push   %r15
   1abd6:	41 56                	push   %r14
   1abd8:	41 55                	push   %r13
   1abda:	41 54                	push   %r12
   1abdc:	55                   	push   %rbp
   1abdd:	53                   	push   %rbx
   1abde:	48 83 ec 18          	sub    $0x18,%rsp
   1abe2:	48 85 f6             	test   %rsi,%rsi
   1abe5:	0f 84 9c 02 00 00    	je     1ae87 <cronodate_next+0x2b7>
   1abeb:	49 89 fd             	mov    %rdi,%r13
   1abee:	48 85 ff             	test   %rdi,%rdi
   1abf1:	0f 84 90 02 00 00    	je     1ae87 <cronodate_next+0x2b7>
   1abf7:	83 06 01             	addl   $0x1,(%rsi)
   1abfa:	48 89 f7             	mov    %rsi,%rdi
   1abfd:	48 8d 2d bc 42 02 00 	lea    0x242bc(%rip),%rbp        # 3eec0 <__PRETTY_FUNCTION__.4414+0x68>
   1ac04:	49 89 f4             	mov    %rsi,%r12
   1ac07:	e8 44 59 ff ff       	callq  10550 <mktime@plt>
   1ac0c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ac11:	45 31 f6             	xor    %r14d,%r14d
   1ac14:	0f 1f 40 00          	nopl   0x0(%rax)
   1ac18:	4c 89 f0             	mov    %r14,%rax
   1ac1b:	45 89 f7             	mov    %r14d,%r15d
   1ac1e:	44 89 74 24 04       	mov    %r14d,0x4(%rsp)
   1ac23:	48 c1 e0 04          	shl    $0x4,%rax
   1ac27:	49 8b 5c 05 00       	mov    0x0(%r13,%rax,1),%rbx
   1ac2c:	41 83 fe 06          	cmp    $0x6,%r14d
   1ac30:	0f 87 aa 00 00 00    	ja     1ace0 <cronodate_next+0x110>
   1ac36:	44 89 f0             	mov    %r14d,%eax
   1ac39:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   1ac3e:	48 01 e8             	add    %rbp,%rax
   1ac41:	3e ff e0             	notrack jmpq *%rax
   1ac44:	0f 1f 40 00          	nopl   0x0(%rax)
   1ac48:	4d 8d 7c 24 14       	lea    0x14(%r12),%r15
   1ac4d:	41 8b 37             	mov    (%r15),%esi
   1ac50:	48 89 df             	mov    %rbx,%rdi
   1ac53:	e8 68 b6 00 00       	callq  262c0 <idset_test>
   1ac58:	84 c0                	test   %al,%al
   1ac5a:	0f 84 a3 00 00 00    	je     1ad03 <cronodate_next+0x133>
   1ac60:	49 83 c6 01          	add    $0x1,%r14
   1ac64:	eb b2                	jmp    1ac18 <cronodate_next+0x48>
   1ac66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ac6d:	00 00 00 
   1ac70:	4d 8d 7c 24 10       	lea    0x10(%r12),%r15
   1ac75:	eb d6                	jmp    1ac4d <cronodate_next+0x7d>
   1ac77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ac7e:	00 00 
   1ac80:	4d 8d 7c 24 0c       	lea    0xc(%r12),%r15
   1ac85:	eb c6                	jmp    1ac4d <cronodate_next+0x7d>
   1ac87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ac8e:	00 00 
   1ac90:	4d 8d 7c 24 08       	lea    0x8(%r12),%r15
   1ac95:	eb b6                	jmp    1ac4d <cronodate_next+0x7d>
   1ac97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ac9e:	00 00 
   1aca0:	4d 8d 7c 24 04       	lea    0x4(%r12),%r15
   1aca5:	eb a6                	jmp    1ac4d <cronodate_next+0x7d>
   1aca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1acae:	00 00 
   1acb0:	41 8b 74 24 18       	mov    0x18(%r12),%esi
   1acb5:	48 89 df             	mov    %rbx,%rdi
   1acb8:	e8 03 b6 00 00       	callq  262c0 <idset_test>
   1acbd:	84 c0                	test   %al,%al
   1acbf:	0f 84 0b 01 00 00    	je     1add0 <cronodate_next+0x200>
   1acc5:	31 c0                	xor    %eax,%eax
   1acc7:	48 83 c4 18          	add    $0x18,%rsp
   1accb:	5b                   	pop    %rbx
   1accc:	5d                   	pop    %rbp
   1accd:	41 5c                	pop    %r12
   1accf:	41 5d                	pop    %r13
   1acd1:	41 5e                	pop    %r14
   1acd3:	41 5f                	pop    %r15
   1acd5:	c3                   	retq   
   1acd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1acdd:	00 00 00 
   1ace0:	41 8b 34 24          	mov    (%r12),%esi
   1ace4:	48 89 df             	mov    %rbx,%rdi
   1ace7:	e8 d4 b5 00 00       	callq  262c0 <idset_test>
   1acec:	84 c0                	test   %al,%al
   1acee:	74 10                	je     1ad00 <cronodate_next+0x130>
   1acf0:	41 83 ff 06          	cmp    $0x6,%r15d
   1acf4:	0f 85 66 ff ff ff    	jne    1ac60 <cronodate_next+0x90>
   1acfa:	eb c9                	jmp    1acc5 <cronodate_next+0xf5>
   1acfc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad00:	4d 89 e7             	mov    %r12,%r15
   1ad03:	41 8b 37             	mov    (%r15),%esi
   1ad06:	48 89 df             	mov    %rbx,%rdi
   1ad09:	e8 52 b8 00 00       	callq  26560 <idset_next>
   1ad0e:	83 f8 fe             	cmp    $0xfffffffe,%eax
   1ad11:	0f 84 06 01 00 00    	je     1ae1d <cronodate_next+0x24d>
   1ad17:	8b 54 24 04          	mov    0x4(%rsp),%edx
   1ad1b:	89 c1                	mov    %eax,%ecx
   1ad1d:	83 fa 05             	cmp    $0x5,%edx
   1ad20:	74 4e                	je     1ad70 <cronodate_next+0x1a0>
   1ad22:	83 fa 06             	cmp    $0x6,%edx
   1ad25:	0f 84 c5 00 00 00    	je     1adf0 <cronodate_next+0x220>
   1ad2b:	44 89 f6             	mov    %r14d,%esi
   1ad2e:	83 fa 02             	cmp    $0x2,%edx
   1ad31:	0f 84 f3 00 00 00    	je     1ae2a <cronodate_next+0x25a>
   1ad37:	7e 77                	jle    1adb0 <cronodate_next+0x1e0>
   1ad39:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   1ad3d:	83 f9 03             	cmp    $0x3,%ecx
   1ad40:	0f 84 56 01 00 00    	je     1ae9c <cronodate_next+0x2cc>
   1ad46:	83 f9 04             	cmp    $0x4,%ecx
   1ad49:	0f 85 11 01 00 00    	jne    1ae60 <cronodate_next+0x290>
   1ad4f:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   1ad54:	41 3b 44 24 10       	cmp    0x10(%r12),%eax
   1ad59:	0f 8c f2 00 00 00    	jl     1ae51 <cronodate_next+0x281>
   1ad5f:	90                   	nop
   1ad60:	89 02                	mov    %eax,(%rdx)
   1ad62:	4c 89 e7             	mov    %r12,%rdi
   1ad65:	e8 e6 f5 ff ff       	callq  1a350 <tm_reset>
   1ad6a:	eb 16                	jmp    1ad82 <cronodate_next+0x1b2>
   1ad6c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad70:	41 89 44 24 14       	mov    %eax,0x14(%r12)
   1ad75:	be 05 00 00 00       	mov    $0x5,%esi
   1ad7a:	4c 89 e7             	mov    %r12,%rdi
   1ad7d:	e8 ce f5 ff ff       	callq  1a350 <tm_reset>
   1ad82:	4c 89 e7             	mov    %r12,%rdi
   1ad85:	e8 c6 57 ff ff       	callq  10550 <mktime@plt>
   1ad8a:	48 2b 44 24 08       	sub    0x8(%rsp),%rax
   1ad8f:	48 3d 00 67 c2 03    	cmp    $0x3c26700,%rax
   1ad95:	0f 8e 76 fe ff ff    	jle    1ac11 <cronodate_next+0x41>
   1ad9b:	e8 70 4d ff ff       	callq  fb10 <__errno_location@plt>
   1ada0:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
   1ada6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1adab:	e9 17 ff ff ff       	jmpq   1acc7 <cronodate_next+0xf7>
   1adb0:	83 fa 01             	cmp    $0x1,%edx
   1adb3:	0f 85 a7 00 00 00    	jne    1ae60 <cronodate_next+0x290>
   1adb9:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
   1adbe:	41 3b 44 24 04       	cmp    0x4(%r12),%eax
   1adc3:	7d 9b                	jge    1ad60 <cronodate_next+0x190>
   1adc5:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   1adca:	eb 73                	jmp    1ae3f <cronodate_next+0x26f>
   1adcc:	0f 1f 40 00          	nopl   0x0(%rax)
   1add0:	41 8b 74 24 18       	mov    0x18(%r12),%esi
   1add5:	48 89 df             	mov    %rbx,%rdi
   1add8:	e8 83 b7 00 00       	callq  26560 <idset_next>
   1addd:	89 c1                	mov    %eax,%ecx
   1addf:	83 f8 fe             	cmp    $0xfffffffe,%eax
   1ade2:	75 0c                	jne    1adf0 <cronodate_next+0x220>
   1ade4:	48 89 df             	mov    %rbx,%rdi
   1ade7:	e8 34 b7 00 00       	callq  26520 <idset_first>
   1adec:	89 c1                	mov    %eax,%ecx
   1adee:	66 90                	xchg   %ax,%ax
   1adf0:	41 8b 44 24 18       	mov    0x18(%r12),%eax
   1adf5:	89 ca                	mov    %ecx,%edx
   1adf7:	29 c2                	sub    %eax,%edx
   1adf9:	39 c1                	cmp    %eax,%ecx
   1adfb:	7d 09                	jge    1ae06 <cronodate_next+0x236>
   1adfd:	41 8b 44 24 0c       	mov    0xc(%r12),%eax
   1ae02:	8d 54 02 07          	lea    0x7(%rdx,%rax,1),%edx
   1ae06:	41 89 54 24 0c       	mov    %edx,0xc(%r12)
   1ae0b:	be 03 00 00 00       	mov    $0x3,%esi
   1ae10:	4c 89 e7             	mov    %r12,%rdi
   1ae13:	e8 38 f5 ff ff       	callq  1a350 <tm_reset>
   1ae18:	e9 65 ff ff ff       	jmpq   1ad82 <cronodate_next+0x1b2>
   1ae1d:	48 89 df             	mov    %rbx,%rdi
   1ae20:	e8 fb b6 00 00       	callq  26520 <idset_first>
   1ae25:	e9 ed fe ff ff       	jmpq   1ad17 <cronodate_next+0x147>
   1ae2a:	49 8d 54 24 08       	lea    0x8(%r12),%rdx
   1ae2f:	41 3b 44 24 08       	cmp    0x8(%r12),%eax
   1ae34:	0f 8d 26 ff ff ff    	jge    1ad60 <cronodate_next+0x190>
   1ae3a:	49 8d 4c 24 0c       	lea    0xc(%r12),%rcx
   1ae3f:	83 01 01             	addl   $0x1,(%rcx)
   1ae42:	e9 19 ff ff ff       	jmpq   1ad60 <cronodate_next+0x190>
   1ae47:	83 f9 04             	cmp    $0x4,%ecx
   1ae4a:	74 60                	je     1aeac <cronodate_next+0x2dc>
   1ae4c:	83 f9 05             	cmp    $0x5,%ecx
   1ae4f:	75 2f                	jne    1ae80 <cronodate_next+0x2b0>
   1ae51:	49 8d 4c 24 14       	lea    0x14(%r12),%rcx
   1ae56:	eb e7                	jmp    1ae3f <cronodate_next+0x26f>
   1ae58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ae5f:	00 
   1ae60:	4c 89 e2             	mov    %r12,%rdx
   1ae63:	41 3b 04 24          	cmp    (%r12),%eax
   1ae67:	0f 8d f3 fe ff ff    	jge    1ad60 <cronodate_next+0x190>
   1ae6d:	8d 4e 01             	lea    0x1(%rsi),%ecx
   1ae70:	83 f9 03             	cmp    $0x3,%ecx
   1ae73:	74 c5                	je     1ae3a <cronodate_next+0x26a>
   1ae75:	77 d0                	ja     1ae47 <cronodate_next+0x277>
   1ae77:	83 f9 02             	cmp    $0x2,%ecx
   1ae7a:	0f 84 45 ff ff ff    	je     1adc5 <cronodate_next+0x1f5>
   1ae80:	49 8d 4c 24 04       	lea    0x4(%r12),%rcx
   1ae85:	eb b8                	jmp    1ae3f <cronodate_next+0x26f>
   1ae87:	e8 84 4c ff ff       	callq  fb10 <__errno_location@plt>
   1ae8c:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1ae92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1ae97:	e9 2b fe ff ff       	jmpq   1acc7 <cronodate_next+0xf7>
   1ae9c:	49 8d 54 24 0c       	lea    0xc(%r12),%rdx
   1aea1:	41 3b 44 24 0c       	cmp    0xc(%r12),%eax
   1aea6:	0f 8d b4 fe ff ff    	jge    1ad60 <cronodate_next+0x190>
   1aeac:	49 8d 4c 24 10       	lea    0x10(%r12),%rcx
   1aeb1:	eb 8c                	jmp    1ae3f <cronodate_next+0x26f>

000000000001aeb3 <.annobin_cronodate_next.end>:
   1aeb3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1aeba:	00 00 00 00 
   1aebe:	66 90                	xchg   %ax,%ax

000000000001aec0 <cronodate_remaining>:
   1aec0:	f3 0f 1e fa          	endbr64 
   1aec4:	55                   	push   %rbp
   1aec5:	48 89 fd             	mov    %rdi,%rbp
   1aec8:	53                   	push   %rbx
   1aec9:	48 83 ec 68          	sub    $0x68,%rsp
   1aecd:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1aed3:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   1aed8:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1aedd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1aee4:	00 00 
   1aee6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1aeeb:	31 c0                	xor    %eax,%eax
   1aeed:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   1aef2:	48 89 de             	mov    %rbx,%rsi
   1aef5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1aefa:	e8 c1 4c ff ff       	callq  fbc0 <localtime_r@plt>
   1aeff:	48 85 c0             	test   %rax,%rax
   1af02:	74 2c                	je     1af30 <cronodate_remaining+0x70>
   1af04:	48 89 de             	mov    %rbx,%rsi
   1af07:	48 89 ef             	mov    %rbp,%rdi
   1af0a:	e8 c1 fc ff ff       	callq  1abd0 <cronodate_next>
   1af0f:	85 c0                	test   %eax,%eax
   1af11:	78 1d                	js     1af30 <cronodate_remaining+0x70>
   1af13:	48 89 df             	mov    %rbx,%rdi
   1af16:	e8 35 56 ff ff       	callq  10550 <mktime@plt>
   1af1b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1af1f:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   1af24:	f2 0f 5c 44 24 08    	subsd  0x8(%rsp),%xmm0
   1af2a:	eb 0c                	jmp    1af38 <cronodate_remaining+0x78>
   1af2c:	0f 1f 40 00          	nopl   0x0(%rax)
   1af30:	f2 0f 10 05 c8 40 02 	movsd  0x240c8(%rip),%xmm0        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   1af37:	00 
   1af38:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1af3d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1af44:	00 00 
   1af46:	75 07                	jne    1af4f <cronodate_remaining+0x8f>
   1af48:	48 83 c4 68          	add    $0x68,%rsp
   1af4c:	5b                   	pop    %rbx
   1af4d:	5d                   	pop    %rbp
   1af4e:	c3                   	retq   
   1af4f:	e8 fc 4e ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001af54 <.annobin_cronodate.c_end>:
   1af54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1af5b:	00 00 00 
   1af5e:	66 90                	xchg   %ax,%ax

000000000001af60 <digest_file>:
   1af60:	f3 0f 1e fa          	endbr64 
   1af64:	41 56                	push   %r14
   1af66:	41 55                	push   %r13
   1af68:	41 54                	push   %r12
   1af6a:	55                   	push   %rbp
   1af6b:	53                   	push   %rbx
   1af6c:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   1af73:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1af7a:	00 00 
   1af7c:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1af83:	00 
   1af84:	31 c0                	xor    %eax,%eax
   1af86:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1af8d:	00 00 
   1af8f:	48 85 ff             	test   %rdi,%rdi
   1af92:	0f 84 cd 00 00 00    	je     1b065 <digest_file+0x105>
   1af98:	49 89 f5             	mov    %rsi,%r13
      if (__OPEN_NEEDS_MODE (__oflag) && __va_arg_pack_len () < 1)
	{
	  __open_missing_mode ();
	  return __open_2 (__path, __oflag);
	}
      return __open_alias (__path, __oflag, __va_arg_pack ());
   1af9b:	31 c0                	xor    %eax,%eax
   1af9d:	31 f6                	xor    %esi,%esi
   1af9f:	e8 bc 57 ff ff       	callq  10760 <open@plt>
   1afa4:	89 c3                	mov    %eax,%ebx
   1afa6:	85 c0                	test   %eax,%eax
   1afa8:	0f 88 b3 00 00 00    	js     1b061 <digest_file+0x101>
   1afae:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1afb3:	89 c7                	mov    %eax,%edi
   1afb5:	e8 76 65 00 00       	callq  21530 <read_all>
   1afba:	49 89 c4             	mov    %rax,%r12
   1afbd:	48 85 c0             	test   %rax,%rax
   1afc0:	0f 88 94 00 00 00    	js     1b05a <digest_file+0xfa>
   1afc6:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1afcb:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1afd0:	48 89 ef             	mov    %rbp,%rdi
   1afd3:	e8 f8 78 00 00       	callq  228d0 <SHA1_Init>
   1afd8:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1afdd:	4c 89 e2             	mov    %r12,%rdx
   1afe0:	48 89 ef             	mov    %rbp,%rdi
   1afe3:	e8 18 79 00 00       	callq  22900 <SHA1_Update>
   1afe8:	4c 89 f6             	mov    %r14,%rsi
   1afeb:	48 89 ef             	mov    %rbp,%rdi
   1afee:	e8 7d 7a 00 00       	callq  22a70 <SHA1_Final>
   1aff3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1aff8:	e8 b3 4a ff ff       	callq  fab0 <free@plt>
   1affd:	89 df                	mov    %ebx,%edi
   1afff:	e8 ac 50 ff ff       	callq  100b0 <close@plt>
   1b004:	bf 29 00 00 00       	mov    $0x29,%edi
   1b009:	e8 12 54 ff ff       	callq  10420 <malloc@plt>
   1b00e:	48 89 c3             	mov    %rax,%rbx
   1b011:	48 85 c0             	test   %rax,%rax
   1b014:	74 1e                	je     1b034 <digest_file+0xd4>
   1b016:	b9 29 00 00 00       	mov    $0x29,%ecx
   1b01b:	48 89 c2             	mov    %rax,%rdx
   1b01e:	be 14 00 00 00       	mov    $0x14,%esi
   1b023:	4c 89 f7             	mov    %r14,%rdi
   1b026:	e8 55 e1 ff ff       	callq  19180 <hex_encode>
   1b02b:	4d 85 ed             	test   %r13,%r13
   1b02e:	74 04                	je     1b034 <digest_file+0xd4>
   1b030:	4d 89 65 00          	mov    %r12,0x0(%r13)
   1b034:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   1b03b:	00 
   1b03c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1b043:	00 00 
   1b045:	48 89 d8             	mov    %rbx,%rax
   1b048:	75 2a                	jne    1b074 <digest_file+0x114>
   1b04a:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   1b051:	5b                   	pop    %rbx
   1b052:	5d                   	pop    %rbp
   1b053:	41 5c                	pop    %r12
   1b055:	41 5d                	pop    %r13
   1b057:	41 5e                	pop    %r14
   1b059:	c3                   	retq   
   1b05a:	89 df                	mov    %ebx,%edi
   1b05c:	e8 4f 50 ff ff       	callq  100b0 <close@plt>
   1b061:	31 db                	xor    %ebx,%ebx
   1b063:	eb cf                	jmp    1b034 <digest_file+0xd4>
   1b065:	e8 a6 4a ff ff       	callq  fb10 <__errno_location@plt>
   1b06a:	31 db                	xor    %ebx,%ebx
   1b06c:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1b072:	eb c0                	jmp    1b034 <digest_file+0xd4>
   1b074:	e8 d7 4d ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001b079 <.annobin_digest.c_end>:
   1b079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b080 <direntry_destroy>:
   1b080:	48 85 ff             	test   %rdi,%rdi
   1b083:	74 33                	je     1b0b8 <direntry_destroy+0x38>
   1b085:	53                   	push   %rbx
   1b086:	8b 07                	mov    (%rdi),%eax
   1b088:	48 89 fb             	mov    %rdi,%rbx
   1b08b:	85 c0                	test   %eax,%eax
   1b08d:	75 19                	jne    1b0a8 <direntry_destroy+0x28>
   1b08f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b093:	e8 18 4a ff ff       	callq  fab0 <free@plt>
   1b098:	48 89 df             	mov    %rbx,%rdi
   1b09b:	5b                   	pop    %rbx
   1b09c:	e9 0f 4a ff ff       	jmpq   fab0 <free@plt>
   1b0a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b0a8:	8b 7f 04             	mov    0x4(%rdi),%edi
   1b0ab:	e8 00 50 ff ff       	callq  100b0 <close@plt>
   1b0b0:	eb dd                	jmp    1b08f <direntry_destroy+0xf>
   1b0b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b0b8:	c3                   	retq   

000000000001b0b9 <.annobin_direntry_destroy.end>:
   1b0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b0c0 <dirwalk_destroy>:
   1b0c0:	48 85 ff             	test   %rdi,%rdi
   1b0c3:	74 5b                	je     1b120 <dirwalk_destroy+0x60>
   1b0c5:	53                   	push   %rbx
   1b0c6:	48 89 fb             	mov    %rdi,%rbx
   1b0c9:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1b0cd:	48 85 ff             	test   %rdi,%rdi
   1b0d0:	74 05                	je     1b0d7 <dirwalk_destroy+0x17>
   1b0d2:	e8 a9 ff ff ff       	callq  1b080 <direntry_destroy>
   1b0d7:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b0db:	48 85 ff             	test   %rdi,%rdi
   1b0de:	75 1c                	jne    1b0fc <dirwalk_destroy+0x3c>
   1b0e0:	48 89 df             	mov    %rbx,%rdi
   1b0e3:	5b                   	pop    %rbx
   1b0e4:	e9 c7 49 ff ff       	jmpq   fab0 <free@plt>
   1b0e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b0f0:	48 89 c7             	mov    %rax,%rdi
   1b0f3:	e8 88 ff ff ff       	callq  1b080 <direntry_destroy>
   1b0f8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b0fc:	e8 4f 00 02 00       	callq  3b150 <fzlist_pop>
   1b101:	48 85 c0             	test   %rax,%rax
   1b104:	75 ea                	jne    1b0f0 <dirwalk_destroy+0x30>
   1b106:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   1b10a:	e8 c1 02 02 00       	callq  3b3d0 <fzlist_destroy>
   1b10f:	48 89 df             	mov    %rbx,%rdi
   1b112:	5b                   	pop    %rbx
   1b113:	e9 98 49 ff ff       	jmpq   fab0 <free@plt>
   1b118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b11f:	00 
   1b120:	c3                   	retq   

000000000001b121 <.annobin_dirwalk_destroy.end>:
   1b121:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b128:	00 00 00 00 
   1b12c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b130 <dirwalk_name>:
   1b130:	f3 0f 1e fa          	endbr64 
   1b134:	55                   	push   %rbp
   1b135:	53                   	push   %rbx
   1b136:	48 83 ec 08          	sub    $0x8,%rsp
   1b13a:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   1b13e:	48 85 db             	test   %rbx,%rbx
   1b141:	74 3d                	je     1b180 <dirwalk_name+0x50>
   1b143:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1b147:	48 85 c0             	test   %rax,%rax
   1b14a:	74 0c                	je     1b158 <dirwalk_name+0x28>
   1b14c:	48 83 c4 08          	add    $0x8,%rsp
   1b150:	5b                   	pop    %rbx
   1b151:	5d                   	pop    %rbp
   1b152:	c3                   	retq   
   1b153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b158:	48 89 fd             	mov    %rdi,%rbp
   1b15b:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b15f:	e8 ec 51 ff ff       	callq  10350 <__xpg_basename@plt>
   1b164:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1b168:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1b16c:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b170:	48 83 c4 08          	add    $0x8,%rsp
   1b174:	5b                   	pop    %rbx
   1b175:	5d                   	pop    %rbp
   1b176:	c3                   	retq   
   1b177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b17e:	00 00 
   1b180:	31 c0                	xor    %eax,%eax
   1b182:	eb c8                	jmp    1b14c <dirwalk_name+0x1c>

000000000001b184 <.annobin_dirwalk_name.end>:
   1b184:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b18b:	00 00 00 00 
   1b18f:	90                   	nop

000000000001b190 <dirwalk_path>:
   1b190:	f3 0f 1e fa          	endbr64 
   1b194:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1b198:	48 85 c0             	test   %rax,%rax
   1b19b:	74 04                	je     1b1a1 <dirwalk_path+0x11>
   1b19d:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b1a1:	c3                   	retq   

000000000001b1a2 <.annobin_dirwalk_path.end>:
   1b1a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b1a9:	00 00 00 00 
   1b1ad:	0f 1f 00             	nopl   (%rax)

000000000001b1b0 <dirwalk_stat>:
   1b1b0:	f3 0f 1e fa          	endbr64 
   1b1b4:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1b1b8:	48 8d 50 18          	lea    0x18(%rax),%rdx
   1b1bc:	48 85 c0             	test   %rax,%rax
   1b1bf:	48 0f 45 c2          	cmovne %rdx,%rax
   1b1c3:	c3                   	retq   

000000000001b1c4 <.annobin_dirwalk_dirfd.start>:
   1b1c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b1cb:	00 00 00 00 
   1b1cf:	90                   	nop

000000000001b1d0 <dirwalk_dirfd>:
   1b1d0:	f3 0f 1e fa          	endbr64 
   1b1d4:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1b1d8:	48 85 c0             	test   %rax,%rax
   1b1db:	74 04                	je     1b1e1 <dirwalk_dirfd+0x11>
   1b1dd:	8b 40 04             	mov    0x4(%rax),%eax
   1b1e0:	c3                   	retq   
   1b1e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1b1e6:	c3                   	retq   

000000000001b1e7 <.annobin_dirwalk_dirfd.end>:
   1b1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b1ee:	00 00 

000000000001b1f0 <dirwalk_isdir>:
   1b1f0:	f3 0f 1e fa          	endbr64 
   1b1f4:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1b1f8:	48 85 c0             	test   %rax,%rax
   1b1fb:	74 1b                	je     1b218 <dirwalk_isdir+0x28>
   1b1fd:	8b 40 30             	mov    0x30(%rax),%eax
   1b200:	25 00 f0 00 00       	and    $0xf000,%eax
   1b205:	3d 00 40 00 00       	cmp    $0x4000,%eax
   1b20a:	0f 94 c0             	sete   %al
   1b20d:	0f b6 c0             	movzbl %al,%eax
   1b210:	c3                   	retq   
   1b211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b218:	31 c0                	xor    %eax,%eax
   1b21a:	c3                   	retq   

000000000001b21b <.annobin_dirwalk_isdir.end>:
   1b21b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b220 <dirwalk_stop>:
   1b220:	f3 0f 1e fa          	endbr64 
   1b224:	80 4f 20 01          	orb    $0x1,0x20(%rdi)
   1b228:	89 77 24             	mov    %esi,0x24(%rdi)
   1b22b:	c3                   	retq   

000000000001b22c <.annobin_dirwalk_stop.end>:
   1b22c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b230 <dirwalk_traverse>:
   1b230:	41 57                	push   %r15
   1b232:	41 56                	push   %r14
   1b234:	41 55                	push   %r13
   1b236:	49 89 f5             	mov    %rsi,%r13
   1b239:	41 54                	push   %r12
   1b23b:	55                   	push   %rbp
   1b23c:	53                   	push   %rbx
   1b23d:	48 89 fb             	mov    %rdi,%rbx
   1b240:	48 83 ec 18          	sub    $0x18,%rsp
   1b244:	48 89 14 24          	mov    %rdx,(%rsp)
   1b248:	e8 a3 ff ff ff       	callq  1b1f0 <dirwalk_isdir>
   1b24d:	85 c0                	test   %eax,%eax
   1b24f:	0f 84 60 02 00 00    	je     1b4b5 <dirwalk_traverse+0x285>
   1b255:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1b259:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b25d:	48 89 c7             	mov    %rax,%rdi
   1b260:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b265:	e8 46 4b ff ff       	callq  fdb0 <opendir@plt>
   1b26a:	48 89 c5             	mov    %rax,%rbp
   1b26d:	48 85 c0             	test   %rax,%rax
   1b270:	0f 84 35 02 00 00    	je     1b4ab <dirwalk_traverse+0x27b>
   1b276:	48 89 c7             	mov    %rax,%rdi
   1b279:	e8 d2 4f ff ff       	callq  10250 <dirfd@plt>
   1b27e:	41 89 c4             	mov    %eax,%r12d
   1b281:	85 c0                	test   %eax,%eax
   1b283:	0f 88 3a 01 00 00    	js     1b3c3 <dirwalk_traverse+0x193>
   1b289:	f6 03 01             	testb  $0x1,(%rbx)
   1b28c:	0f 84 7e 01 00 00    	je     1b410 <dirwalk_traverse+0x1e0>
   1b292:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1b296:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b29a:	e8 c1 fd 01 00       	callq  3b060 <fzlist_push>
   1b29f:	48 89 ef             	mov    %rbp,%rdi
   1b2a2:	e8 29 51 ff ff       	callq  103d0 <readdir@plt>
   1b2a7:	48 85 c0             	test   %rax,%rax
   1b2aa:	0f 84 00 01 00 00    	je     1b3b0 <dirwalk_traverse+0x180>
   1b2b0:	f6 43 20 01          	testb  $0x1,0x20(%rbx)
   1b2b4:	0f 85 f6 00 00 00    	jne    1b3b0 <dirwalk_traverse+0x180>
   1b2ba:	4c 8d 70 13          	lea    0x13(%rax),%r14
   1b2be:	b9 02 00 00 00       	mov    $0x2,%ecx
   1b2c3:	48 8d 3d 64 3d 02 00 	lea    0x23d64(%rip),%rdi        # 3f02e <__PRETTY_FUNCTION__.4363+0x116>
   1b2ca:	4c 89 f6             	mov    %r14,%rsi
   1b2cd:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1b2cf:	0f 97 c0             	seta   %al
   1b2d2:	1c 00                	sbb    $0x0,%al
   1b2d4:	84 c0                	test   %al,%al
   1b2d6:	74 c7                	je     1b29f <dirwalk_traverse+0x6f>
   1b2d8:	b9 03 00 00 00       	mov    $0x3,%ecx
   1b2dd:	4c 89 f6             	mov    %r14,%rsi
   1b2e0:	48 8d 3d 46 3d 02 00 	lea    0x23d46(%rip),%rdi        # 3f02d <__PRETTY_FUNCTION__.4363+0x115>
   1b2e7:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1b2e9:	0f 97 c0             	seta   %al
   1b2ec:	1c 00                	sbb    $0x0,%al
   1b2ee:	84 c0                	test   %al,%al
   1b2f0:	74 ad                	je     1b29f <dirwalk_traverse+0x6f>
   1b2f2:	be a8 00 00 00       	mov    $0xa8,%esi
   1b2f7:	bf 01 00 00 00       	mov    $0x1,%edi
   1b2fc:	e8 0f 4f ff ff       	callq  10210 <calloc@plt>
   1b301:	49 89 c7             	mov    %rax,%r15
   1b304:	48 85 c0             	test   %rax,%rax
   1b307:	0f 84 83 01 00 00    	je     1b490 <dirwalk_traverse+0x260>

#  ifdef __va_arg_pack
__fortify_function int
__NTH (asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...))
{
  return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
   1b30d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1b312:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1b316:	4d 89 f0             	mov    %r14,%r8
   1b319:	31 c0                	xor    %eax,%eax
   1b31b:	48 8d 15 02 3d 02 00 	lea    0x23d02(%rip),%rdx        # 3f024 <__PRETTY_FUNCTION__.4363+0x10c>
   1b322:	be 01 00 00 00       	mov    $0x1,%esi
   1b327:	e8 c4 4e ff ff       	callq  101f0 <__asprintf_chk@plt>
   1b32c:	85 c0                	test   %eax,%eax
   1b32e:	0f 88 fc 00 00 00    	js     1b430 <dirwalk_traverse+0x200>
   1b334:	49 8d 4f 18          	lea    0x18(%r15),%rcx
# ifdef __USE_ATFILE
__extern_inline int
__NTH (fstatat (int __fd, const char *__filename, struct stat *__statbuf,
		int __flag))
{
  return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
   1b338:	41 b8 00 01 00 00    	mov    $0x100,%r8d
   1b33e:	4c 89 f2             	mov    %r14,%rdx
   1b341:	44 89 e6             	mov    %r12d,%esi
   1b344:	bf 01 00 00 00       	mov    $0x1,%edi
   1b349:	e8 c2 4b ff ff       	callq  ff10 <__fxstatat@plt>
   1b34e:	85 c0                	test   %eax,%eax
   1b350:	0f 88 da 00 00 00    	js     1b430 <dirwalk_traverse+0x200>
   1b356:	41 8b 47 30          	mov    0x30(%r15),%eax
   1b35a:	45 89 67 04          	mov    %r12d,0x4(%r15)
   1b35e:	4c 89 7b 10          	mov    %r15,0x10(%rbx)
   1b362:	25 00 f0 00 00       	and    $0xf000,%eax
   1b367:	3d 00 40 00 00       	cmp    $0x4000,%eax
   1b36c:	0f 84 ee 00 00 00    	je     1b460 <dirwalk_traverse+0x230>
   1b372:	4d 85 ed             	test   %r13,%r13
   1b375:	74 0e                	je     1b385 <dirwalk_traverse+0x155>
   1b377:	48 8b 34 24          	mov    (%rsp),%rsi
   1b37b:	48 89 df             	mov    %rbx,%rdi
   1b37e:	41 ff d5             	callq  *%r13
   1b381:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
   1b385:	83 43 04 01          	addl   $0x1,0x4(%rbx)
   1b389:	4c 89 ff             	mov    %r15,%rdi
   1b38c:	e8 ef fc ff ff       	callq  1b080 <direntry_destroy>
   1b391:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1b398:	00 
   1b399:	48 89 ef             	mov    %rbp,%rdi
   1b39c:	e8 2f 50 ff ff       	callq  103d0 <readdir@plt>
   1b3a1:	48 85 c0             	test   %rax,%rax
   1b3a4:	0f 85 06 ff ff ff    	jne    1b2b0 <dirwalk_traverse+0x80>
   1b3aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b3b0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b3b4:	e8 97 fd 01 00       	callq  3b150 <fzlist_pop>
   1b3b9:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1b3bd:	f6 43 20 01          	testb  $0x1,0x20(%rbx)
   1b3c1:	74 2d                	je     1b3f0 <dirwalk_traverse+0x1c0>
   1b3c3:	48 89 ef             	mov    %rbp,%rdi
   1b3c6:	e8 45 4d ff ff       	callq  10110 <closedir@plt>
   1b3cb:	8b 5b 24             	mov    0x24(%rbx),%ebx
   1b3ce:	85 db                	test   %ebx,%ebx
   1b3d0:	0f 85 c4 00 00 00    	jne    1b49a <dirwalk_traverse+0x26a>
   1b3d6:	48 83 c4 18          	add    $0x18,%rsp
   1b3da:	89 d8                	mov    %ebx,%eax
   1b3dc:	5b                   	pop    %rbx
   1b3dd:	5d                   	pop    %rbp
   1b3de:	41 5c                	pop    %r12
   1b3e0:	41 5d                	pop    %r13
   1b3e2:	41 5e                	pop    %r14
   1b3e4:	41 5f                	pop    %r15
   1b3e6:	c3                   	retq   
   1b3e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b3ee:	00 00 
   1b3f0:	f6 03 01             	testb  $0x1,(%rbx)
   1b3f3:	74 ce                	je     1b3c3 <dirwalk_traverse+0x193>
   1b3f5:	4d 85 ed             	test   %r13,%r13
   1b3f8:	74 0a                	je     1b404 <dirwalk_traverse+0x1d4>
   1b3fa:	48 8b 34 24          	mov    (%rsp),%rsi
   1b3fe:	48 89 df             	mov    %rbx,%rdi
   1b401:	41 ff d5             	callq  *%r13
   1b404:	83 43 04 01          	addl   $0x1,0x4(%rbx)
   1b408:	eb b9                	jmp    1b3c3 <dirwalk_traverse+0x193>
   1b40a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b410:	4d 85 ed             	test   %r13,%r13
   1b413:	74 0a                	je     1b41f <dirwalk_traverse+0x1ef>
   1b415:	48 8b 34 24          	mov    (%rsp),%rsi
   1b419:	48 89 df             	mov    %rbx,%rdi
   1b41c:	41 ff d5             	callq  *%r13
   1b41f:	83 43 04 01          	addl   $0x1,0x4(%rbx)
   1b423:	e9 6a fe ff ff       	jmpq   1b292 <dirwalk_traverse+0x62>
   1b428:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b42f:	00 
   1b430:	4c 89 ff             	mov    %r15,%rdi
   1b433:	e8 48 fc ff ff       	callq  1b080 <direntry_destroy>
   1b438:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1b43f:	00 
   1b440:	e8 cb 46 ff ff       	callq  fb10 <__errno_location@plt>
   1b445:	83 38 0c             	cmpl   $0xc,(%rax)
   1b448:	0f 85 51 fe ff ff    	jne    1b29f <dirwalk_traverse+0x6f>
   1b44e:	be 0c 00 00 00       	mov    $0xc,%esi
   1b453:	48 89 df             	mov    %rbx,%rdi
   1b456:	e8 c5 fd ff ff       	callq  1b220 <dirwalk_stop>
   1b45b:	e9 3f fe ff ff       	jmpq   1b29f <dirwalk_traverse+0x6f>
   1b460:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b464:	4c 89 fe             	mov    %r15,%rsi
   1b467:	e8 f4 fb 01 00       	callq  3b060 <fzlist_push>
   1b46c:	48 8b 14 24          	mov    (%rsp),%rdx
   1b470:	4c 89 ee             	mov    %r13,%rsi
   1b473:	48 89 df             	mov    %rbx,%rdi
   1b476:	e8 b5 fd ff ff       	callq  1b230 <dirwalk_traverse>
   1b47b:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b47f:	e8 cc fc 01 00       	callq  3b150 <fzlist_pop>
   1b484:	49 89 c7             	mov    %rax,%r15
   1b487:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1b48b:	e9 f9 fe ff ff       	jmpq   1b389 <dirwalk_traverse+0x159>
   1b490:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1b497:	00 
   1b498:	eb a6                	jmp    1b440 <dirwalk_traverse+0x210>
   1b49a:	e8 71 46 ff ff       	callq  fb10 <__errno_location@plt>
   1b49f:	89 18                	mov    %ebx,(%rax)
   1b4a1:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1b4a6:	e9 2b ff ff ff       	jmpq   1b3d6 <dirwalk_traverse+0x1a6>
   1b4ab:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1b4b0:	e9 21 ff ff ff       	jmpq   1b3d6 <dirwalk_traverse+0x1a6>
   1b4b5:	48 8d 0d 84 3b 02 00 	lea    0x23b84(%rip),%rcx        # 3f040 <__PRETTY_FUNCTION__.5641>
   1b4bc:	ba d3 00 00 00       	mov    $0xd3,%edx
   1b4c1:	48 8d 35 40 3b 02 00 	lea    0x23b40(%rip),%rsi        # 3f008 <__PRETTY_FUNCTION__.4363+0xf0>
   1b4c8:	48 8d 3d 43 3b 02 00 	lea    0x23b43(%rip),%rdi        # 3f012 <__PRETTY_FUNCTION__.4363+0xfa>
   1b4cf:	e8 2c 4b ff ff       	callq  10000 <__assert_fail@plt>

000000000001b4d4 <.annobin_dirwalk_traverse.end>:
   1b4d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b4db:	00 00 00 00 
   1b4df:	90                   	nop

000000000001b4e0 <find_f>:
   1b4e0:	f3 0f 1e fa          	endbr64 
   1b4e4:	55                   	push   %rbp
   1b4e5:	48 89 f5             	mov    %rsi,%rbp
   1b4e8:	53                   	push   %rbx
   1b4e9:	48 89 fb             	mov    %rdi,%rbx
   1b4ec:	48 83 ec 08          	sub    $0x8,%rsp
   1b4f0:	f6 07 04             	testb  $0x4,(%rdi)
   1b4f3:	75 09                	jne    1b4fe <find_f+0x1e>
   1b4f5:	e8 f6 fc ff ff       	callq  1b1f0 <dirwalk_isdir>
   1b4fa:	85 c0                	test   %eax,%eax
   1b4fc:	75 4b                	jne    1b549 <find_f+0x69>
   1b4fe:	48 89 df             	mov    %rbx,%rdi
   1b501:	e8 2a fc ff ff       	callq  1b130 <dirwalk_name>
   1b506:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1b50a:	31 d2                	xor    %edx,%edx
   1b50c:	48 89 c6             	mov    %rax,%rsi
   1b50f:	e8 fc 4a ff ff       	callq  10010 <fnmatch@plt>
   1b514:	85 c0                	test   %eax,%eax
   1b516:	75 31                	jne    1b549 <find_f+0x69>
   1b518:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1b51c:	48 85 c0             	test   %rax,%rax
   1b51f:	74 0d                	je     1b52e <find_f+0x4e>
   1b521:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   1b525:	48 89 df             	mov    %rbx,%rdi
   1b528:	ff d0                	callq  *%rax
   1b52a:	85 c0                	test   %eax,%eax
   1b52c:	7e 1b                	jle    1b549 <find_f+0x69>
   1b52e:	48 89 df             	mov    %rbx,%rdi
   1b531:	e8 5a fc ff ff       	callq  1b190 <dirwalk_path>
   1b536:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1b53a:	48 89 c6             	mov    %rax,%rsi
   1b53d:	e8 1e fa 01 00       	callq  3af60 <fzlist_append>
   1b542:	8b 45 00             	mov    0x0(%rbp),%eax
   1b545:	85 c0                	test   %eax,%eax
   1b547:	75 0f                	jne    1b558 <find_f+0x78>
   1b549:	48 83 c4 08          	add    $0x8,%rsp
   1b54d:	31 c0                	xor    %eax,%eax
   1b54f:	5b                   	pop    %rbx
   1b550:	5d                   	pop    %rbp
   1b551:	c3                   	retq   
   1b552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b558:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1b55c:	e8 cf fe 01 00       	callq  3b430 <fzlist_size>
   1b561:	48 63 55 00          	movslq 0x0(%rbp),%rdx
   1b565:	48 39 d0             	cmp    %rdx,%rax
   1b568:	75 df                	jne    1b549 <find_f+0x69>
   1b56a:	31 f6                	xor    %esi,%esi
   1b56c:	48 89 df             	mov    %rbx,%rdi
   1b56f:	e8 ac fc ff ff       	callq  1b220 <dirwalk_stop>
   1b574:	eb d3                	jmp    1b549 <find_f+0x69>

000000000001b576 <.annobin_dirwalk.start>:
   1b576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b57d:	00 00 00 

000000000001b580 <dirwalk>:
   1b580:	f3 0f 1e fa          	endbr64 
   1b584:	41 57                	push   %r15
   1b586:	49 89 cf             	mov    %rcx,%r15
   1b589:	41 56                	push   %r14
   1b58b:	41 55                	push   %r13
   1b58d:	41 54                	push   %r12
   1b58f:	41 89 f4             	mov    %esi,%r12d
   1b592:	be 28 00 00 00       	mov    $0x28,%esi
   1b597:	55                   	push   %rbp
   1b598:	48 89 fd             	mov    %rdi,%rbp
   1b59b:	bf 01 00 00 00       	mov    $0x1,%edi
   1b5a0:	53                   	push   %rbx
   1b5a1:	48 83 ec 28          	sub    $0x28,%rsp
   1b5a5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1b5aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b5b1:	00 00 
   1b5b3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1b5b8:	31 c0                	xor    %eax,%eax
   1b5ba:	e8 51 4c ff ff       	callq  10210 <calloc@plt>
   1b5bf:	48 89 c3             	mov    %rax,%rbx
   1b5c2:	48 85 c0             	test   %rax,%rax
   1b5c5:	0f 84 5d 01 00 00    	je     1b728 <dirwalk+0x1a8>
   1b5cb:	e8 90 f7 01 00       	callq  3ad60 <fzlist_new>
   1b5d0:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1b5d4:	48 85 c0             	test   %rax,%rax
   1b5d7:	0f 84 4b 01 00 00    	je     1b728 <dirwalk+0x1a8>
   1b5dd:	41 f6 c4 02          	test   $0x2,%r12b
   1b5e1:	0f 85 f9 00 00 00    	jne    1b6e0 <dirwalk+0x160>
   1b5e7:	45 31 f6             	xor    %r14d,%r14d
   1b5ea:	8b 03                	mov    (%rbx),%eax
   1b5ec:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1b5f2:	44 89 23             	mov    %r12d,(%rbx)
   1b5f5:	85 c0                	test   %eax,%eax
   1b5f7:	0f 88 ad 00 00 00    	js     1b6aa <dirwalk+0x12a>
   1b5fd:	be a8 00 00 00       	mov    $0xa8,%esi
   1b602:	bf 01 00 00 00       	mov    $0x1,%edi
   1b607:	e8 04 4c ff ff       	callq  10210 <calloc@plt>
   1b60c:	49 89 c4             	mov    %rax,%r12
   1b60f:	48 85 c0             	test   %rax,%rax
   1b612:	0f 84 38 01 00 00    	je     1b750 <dirwalk+0x1d0>
   1b618:	48 89 ef             	mov    %rbp,%rdi
   1b61b:	e8 80 53 ff ff       	callq  109a0 <strdup@plt>
   1b620:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1b625:	48 89 e9             	mov    %rbp,%rcx
   1b628:	48 8d 15 fb 39 02 00 	lea    0x239fb(%rip),%rdx        # 3f02a <__PRETTY_FUNCTION__.4363+0x112>
   1b62f:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1b634:	be 01 00 00 00       	mov    $0x1,%esi
   1b639:	31 c0                	xor    %eax,%eax
   1b63b:	e8 b0 4b ff ff       	callq  101f0 <__asprintf_chk@plt>
   1b640:	85 c0                	test   %eax,%eax
   1b642:	0f 88 b8 00 00 00    	js     1b700 <dirwalk+0x180>
   1b648:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1b64d:	be 00 00 01 00       	mov    $0x10000,%esi
   1b652:	31 c0                	xor    %eax,%eax
   1b654:	e8 07 51 ff ff       	callq  10760 <open@plt>
   1b659:	41 89 44 24 04       	mov    %eax,0x4(%r12)
   1b65e:	85 c0                	test   %eax,%eax
   1b660:	0f 88 9a 00 00 00    	js     1b700 <dirwalk+0x180>
   1b666:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1b66d:	00 
   1b66e:	49 8d 54 24 18       	lea    0x18(%r12),%rdx
  return __xstat (_STAT_VER, __path, __statbuf);
   1b673:	48 89 ee             	mov    %rbp,%rsi
   1b676:	bf 01 00 00 00       	mov    $0x1,%edi
   1b67b:	e8 40 4d ff ff       	callq  103c0 <__xstat@plt>
   1b680:	85 c0                	test   %eax,%eax
   1b682:	78 7c                	js     1b700 <dirwalk+0x180>
   1b684:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1b689:	e8 22 44 ff ff       	callq  fab0 <free@plt>
   1b68e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1b693:	4c 89 fa             	mov    %r15,%rdx
   1b696:	48 89 df             	mov    %rbx,%rdi
   1b699:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   1b69d:	e8 8e fb ff ff       	callq  1b230 <dirwalk_traverse>
   1b6a2:	85 c0                	test   %eax,%eax
   1b6a4:	78 04                	js     1b6aa <dirwalk+0x12a>
   1b6a6:	44 8b 6b 04          	mov    0x4(%rbx),%r13d
   1b6aa:	4c 89 f7             	mov    %r14,%rdi
   1b6ad:	e8 fe 43 ff ff       	callq  fab0 <free@plt>
   1b6b2:	48 89 df             	mov    %rbx,%rdi
   1b6b5:	e8 06 fa ff ff       	callq  1b0c0 <dirwalk_destroy>
   1b6ba:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1b6bf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1b6c6:	00 00 
   1b6c8:	44 89 e8             	mov    %r13d,%eax
   1b6cb:	0f 85 8c 00 00 00    	jne    1b75d <dirwalk+0x1dd>
   1b6d1:	48 83 c4 28          	add    $0x28,%rsp
   1b6d5:	5b                   	pop    %rbx
   1b6d6:	5d                   	pop    %rbp
   1b6d7:	41 5c                	pop    %r12
   1b6d9:	41 5d                	pop    %r13
   1b6db:	41 5e                	pop    %r14
   1b6dd:	41 5f                	pop    %r15
   1b6df:	c3                   	retq   
__NTH (realpath (const char *__restrict __name, char *__restrict __resolved))
{
  size_t sz = __glibc_objsize (__resolved);

  if (sz == (size_t) -1)
    return __realpath_alias (__name, __resolved);
   1b6e0:	48 89 ef             	mov    %rbp,%rdi
   1b6e3:	31 f6                	xor    %esi,%esi
   1b6e5:	e8 06 4c ff ff       	callq  102f0 <realpath@plt>
   1b6ea:	48 89 c5             	mov    %rax,%rbp
   1b6ed:	48 85 c0             	test   %rax,%rax
   1b6f0:	74 4e                	je     1b740 <dirwalk+0x1c0>
   1b6f2:	49 89 c6             	mov    %rax,%r14
   1b6f5:	e9 f0 fe ff ff       	jmpq   1b5ea <dirwalk+0x6a>
   1b6fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b700:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1b705:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1b70b:	e8 a0 43 ff ff       	callq  fab0 <free@plt>
   1b710:	4c 89 e7             	mov    %r12,%rdi
   1b713:	e8 68 f9 ff ff       	callq  1b080 <direntry_destroy>
   1b718:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1b71f:	00 
   1b720:	eb 88                	jmp    1b6aa <dirwalk+0x12a>
   1b722:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b728:	48 89 df             	mov    %rbx,%rdi
   1b72b:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1b731:	e8 8a f9 ff ff       	callq  1b0c0 <dirwalk_destroy>
   1b736:	eb 82                	jmp    1b6ba <dirwalk+0x13a>
   1b738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b73f:	00 
   1b740:	45 31 f6             	xor    %r14d,%r14d
   1b743:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   1b749:	e9 5c ff ff ff       	jmpq   1b6aa <dirwalk+0x12a>
   1b74e:	66 90                	xchg   %ax,%ax
   1b750:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1b757:	00 
   1b758:	e9 4d ff ff ff       	jmpq   1b6aa <dirwalk+0x12a>
   1b75d:	e8 ee 46 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001b762 <.annobin_dirwalk.end>:
   1b762:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b769:	00 00 00 00 
   1b76d:	0f 1f 00             	nopl   (%rax)

000000000001b770 <dirwalk_find>:
   1b770:	f3 0f 1e fa          	endbr64 
   1b774:	41 57                	push   %r15
   1b776:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1b77a:	41 56                	push   %r14
   1b77c:	41 55                	push   %r13
   1b77e:	41 89 cd             	mov    %ecx,%r13d
   1b781:	41 54                	push   %r12
   1b783:	55                   	push   %rbp
   1b784:	89 f5                	mov    %esi,%ebp
   1b786:	53                   	push   %rbx
   1b787:	48 89 fb             	mov    %rdi,%rbx
   1b78a:	48 83 ec 58          	sub    $0x58,%rsp
   1b78e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b795:	00 00 
   1b797:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1b79c:	31 c0                	xor    %eax,%eax
   1b79e:	0f 11 44 24 24       	movups %xmm0,0x24(%rsp)
   1b7a3:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1b7aa:	00 00 
   1b7ac:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
   1b7b3:	00 
   1b7b4:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   1b7b8:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1b7bd:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1b7c2:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
   1b7c7:	e8 94 f5 01 00       	callq  3ad60 <fzlist_new>
   1b7cc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1b7d1:	48 85 c0             	test   %rax,%rax
   1b7d4:	0f 84 8b 00 00 00    	je     1b865 <dirwalk_find+0xf5>
   1b7da:	48 89 c7             	mov    %rax,%rdi
   1b7dd:	e8 2e fe 01 00       	callq  3b610 <fzlist_autofree>
   1b7e2:	48 89 df             	mov    %rbx,%rdi
   1b7e5:	e8 b6 51 ff ff       	callq  109a0 <strdup@plt>
   1b7ea:	49 89 c6             	mov    %rax,%r14
   1b7ed:	48 85 c0             	test   %rax,%rax
   1b7f0:	0f 84 db 00 00 00    	je     1b8d1 <dirwalk_find+0x161>
   1b7f6:	48 89 c7             	mov    %rax,%rdi
   1b7f9:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
   1b7fe:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1b803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b808:	48 89 da             	mov    %rbx,%rdx
   1b80b:	48 8d 35 1e 38 02 00 	lea    0x2381e(%rip),%rsi        # 3f030 <__PRETTY_FUNCTION__.4363+0x118>
   1b812:	e8 59 49 ff ff       	callq  10170 <strtok_r@plt>
   1b817:	48 85 c0             	test   %rax,%rax
   1b81a:	74 3c                	je     1b858 <dirwalk_find+0xe8>
   1b81c:	4c 89 e1             	mov    %r12,%rcx
   1b81f:	48 8d 15 ba fc ff ff 	lea    -0x346(%rip),%rdx        # 1b4e0 <find_f>
   1b826:	89 ee                	mov    %ebp,%esi
   1b828:	48 89 c7             	mov    %rax,%rdi
   1b82b:	e8 50 fd ff ff       	callq  1b580 <dirwalk>
   1b830:	85 c0                	test   %eax,%eax
   1b832:	78 54                	js     1b888 <dirwalk_find+0x118>
   1b834:	45 85 ed             	test   %r13d,%r13d
   1b837:	75 07                	jne    1b840 <dirwalk_find+0xd0>
   1b839:	31 ff                	xor    %edi,%edi
   1b83b:	eb cb                	jmp    1b808 <dirwalk_find+0x98>
   1b83d:	0f 1f 00             	nopl   (%rax)
   1b840:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1b845:	e8 e6 fb 01 00       	callq  3b430 <fzlist_size>
   1b84a:	49 63 d5             	movslq %r13d,%rdx
   1b84d:	48 39 c2             	cmp    %rax,%rdx
   1b850:	75 e7                	jne    1b839 <dirwalk_find+0xc9>
   1b852:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b858:	4c 89 f7             	mov    %r14,%rdi
   1b85b:	e8 50 42 ff ff       	callq  fab0 <free@plt>
   1b860:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1b865:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1b86a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1b871:	00 00 
   1b873:	75 66                	jne    1b8db <dirwalk_find+0x16b>
   1b875:	48 83 c4 58          	add    $0x58,%rsp
   1b879:	5b                   	pop    %rbx
   1b87a:	5d                   	pop    %rbp
   1b87b:	41 5c                	pop    %r12
   1b87d:	41 5d                	pop    %r13
   1b87f:	41 5e                	pop    %r14
   1b881:	41 5f                	pop    %r15
   1b883:	c3                   	retq   
   1b884:	0f 1f 40 00          	nopl   0x0(%rax)
   1b888:	e8 83 42 ff ff       	callq  fb10 <__errno_location@plt>
   1b88d:	44 8b 38             	mov    (%rax),%r15d
   1b890:	41 83 ff 02          	cmp    $0x2,%r15d
   1b894:	74 a3                	je     1b839 <dirwalk_find+0xc9>
   1b896:	41 83 ff 0d          	cmp    $0xd,%r15d
   1b89a:	74 9d                	je     1b839 <dirwalk_find+0xc9>
   1b89c:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   1b8a2:	74 14                	je     1b8b8 <dirwalk_find+0x148>
   1b8a4:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1b8a9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b8ae:	e8 1d fb 01 00       	callq  3b3d0 <fzlist_destroy>
   1b8b3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b8b8:	4c 89 f7             	mov    %r14,%rdi
   1b8bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b8c0:	e8 eb 41 ff ff       	callq  fab0 <free@plt>
   1b8c5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b8ca:	44 89 38             	mov    %r15d,(%rax)
   1b8cd:	31 c0                	xor    %eax,%eax
   1b8cf:	eb 94                	jmp    1b865 <dirwalk_find+0xf5>
   1b8d1:	e8 3a 42 ff ff       	callq  fb10 <__errno_location@plt>
   1b8d6:	44 8b 38             	mov    (%rax),%r15d
   1b8d9:	eb c1                	jmp    1b89c <dirwalk_find+0x12c>
   1b8db:	e8 70 45 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001b8e0 <free_env_item>:
   1b8e0:	f3 0f 1e fa          	endbr64 
   1b8e4:	53                   	push   %rbx
   1b8e5:	48 89 fb             	mov    %rdi,%rbx
   1b8e8:	48 8b 3f             	mov    (%rdi),%rdi
   1b8eb:	e8 c0 41 ff ff       	callq  fab0 <free@plt>
   1b8f0:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1b8f4:	e8 b7 41 ff ff       	callq  fab0 <free@plt>
   1b8f9:	48 89 df             	mov    %rbx,%rdi
   1b8fc:	5b                   	pop    %rbx
   1b8fd:	e9 ae 41 ff ff       	jmpq   fab0 <free@plt>

000000000001b902 <.annobin_free_env_item.end>:
   1b902:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b909:	00 00 00 00 
   1b90d:	0f 1f 00             	nopl   (%rax)

000000000001b910 <stringify_env_item>:
   1b910:	48 85 ff             	test   %rdi,%rdi
   1b913:	74 6b                	je     1b980 <stringify_env_item+0x70>
   1b915:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1b919:	48 8d 05 f9 79 02 00 	lea    0x279f9(%rip),%rax        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   1b920:	74 0a                	je     1b92c <stringify_env_item+0x1c>
   1b922:	80 7f 11 00          	cmpb   $0x0,0x11(%rdi)
   1b926:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1b92a:	74 04                	je     1b930 <stringify_env_item+0x20>
   1b92c:	c3                   	retq   
   1b92d:	0f 1f 00             	nopl   (%rax)
   1b930:	55                   	push   %rbp
   1b931:	53                   	push   %rbx
   1b932:	48 89 fb             	mov    %rdi,%rbx
   1b935:	48 89 c7             	mov    %rax,%rdi
   1b938:	48 83 ec 08          	sub    $0x8,%rsp
   1b93c:	e8 6f 41 ff ff       	callq  fab0 <free@plt>
   1b941:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
   1b945:	48 89 ef             	mov    %rbp,%rdi
   1b948:	e8 d3 4a ff ff       	callq  10420 <malloc@plt>
  return __builtin___memcpy_chk (__dest, __src, __len,
   1b94d:	48 8b 33             	mov    (%rbx),%rsi
   1b950:	48 89 ea             	mov    %rbp,%rdx
   1b953:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1b957:	48 89 c7             	mov    %rax,%rdi
   1b95a:	e8 b1 49 ff ff       	callq  10310 <memcpy@plt>
   1b95f:	0f be 53 10          	movsbl 0x10(%rbx),%edx
   1b963:	48 89 ee             	mov    %rbp,%rsi
   1b966:	48 89 c7             	mov    %rax,%rdi
   1b969:	e8 02 51 ff ff       	callq  10a70 <argz_stringify@plt>
   1b96e:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1b972:	48 83 c4 08          	add    $0x8,%rsp
   1b976:	5b                   	pop    %rbx
   1b977:	5d                   	pop    %rbp
   1b978:	c3                   	retq   
   1b979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b980:	31 c0                	xor    %eax,%eax
   1b982:	c3                   	retq   

000000000001b983 <.annobin_environment_destroy.start>:
   1b983:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b98a:	00 00 00 00 
   1b98e:	66 90                	xchg   %ax,%ax

000000000001b990 <environment_destroy>:
   1b990:	f3 0f 1e fa          	endbr64 
   1b994:	48 85 ff             	test   %rdi,%rdi
   1b997:	74 17                	je     1b9b0 <environment_destroy+0x20>
   1b999:	53                   	push   %rbx
   1b99a:	48 89 fb             	mov    %rdi,%rbx
   1b99d:	e8 be d8 01 00       	callq  39260 <fzhash_destroy>
   1b9a2:	48 89 df             	mov    %rbx,%rdi
   1b9a5:	5b                   	pop    %rbx
   1b9a6:	e9 05 41 ff ff       	jmpq   fab0 <free@plt>
   1b9ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b9b0:	c3                   	retq   

000000000001b9b1 <.annobin_environment_create.start>:
   1b9b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1b9b8:	00 00 00 00 
   1b9bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b9c0 <environment_create>:
   1b9c0:	f3 0f 1e fa          	endbr64 
   1b9c4:	53                   	push   %rbx
   1b9c5:	bf 08 00 00 00       	mov    $0x8,%edi
   1b9ca:	e8 31 a4 00 00       	callq  25e00 <xzmalloc>
   1b9cf:	48 89 c3             	mov    %rax,%rbx
   1b9d2:	e8 c9 d7 01 00       	callq  391a0 <fzhash_new>
   1b9d7:	48 89 03             	mov    %rax,(%rbx)
   1b9da:	48 85 c0             	test   %rax,%rax
   1b9dd:	74 05                	je     1b9e4 <environment_create+0x24>
   1b9df:	48 89 d8             	mov    %rbx,%rax
   1b9e2:	5b                   	pop    %rbx
   1b9e3:	c3                   	retq   
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   1b9e4:	48 8b 05 fd 75 23 00 	mov    0x2375fd(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1b9eb:	41 b9 2e 00 00 00    	mov    $0x2e,%r9d
   1b9f1:	4c 8d 05 b8 36 02 00 	lea    0x236b8(%rip),%r8        # 3f0b0 <__FUNCTION__.5439>
   1b9f8:	48 8d 0d 52 36 02 00 	lea    0x23652(%rip),%rcx        # 3f051 <__PRETTY_FUNCTION__.5641+0x11>
   1b9ff:	48 8d 15 7a 36 02 00 	lea    0x2367a(%rip),%rdx        # 3f080 <__PRETTY_FUNCTION__.5641+0x40>
   1ba06:	be 01 00 00 00       	mov    $0x1,%esi
   1ba0b:	48 8b 38             	mov    (%rax),%rdi
   1ba0e:	31 c0                	xor    %eax,%eax
   1ba10:	e8 4b 4f ff ff       	callq  10960 <__fprintf_chk@plt>
   1ba15:	bf 01 00 00 00       	mov    $0x1,%edi
   1ba1a:	e8 f1 4e ff ff       	callq  10910 <exit@plt>

000000000001ba1f <.annobin_environment_create.end>:
   1ba1f:	90                   	nop

000000000001ba20 <new_env_item>:
   1ba20:	f3 0f 1e fa          	endbr64 
   1ba24:	be 20 00 00 00       	mov    $0x20,%esi
   1ba29:	bf 01 00 00 00       	mov    $0x1,%edi
   1ba2e:	e9 dd 47 ff ff       	jmpq   10210 <calloc@plt>

000000000001ba33 <.annobin_find_env_item.start>:
   1ba33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ba3a:	00 00 00 00 
   1ba3e:	66 90                	xchg   %ax,%ax

000000000001ba40 <find_env_item>:
   1ba40:	f3 0f 1e fa          	endbr64 
   1ba44:	41 56                	push   %r14
   1ba46:	49 89 f6             	mov    %rsi,%r14
   1ba49:	41 55                	push   %r13
   1ba4b:	41 54                	push   %r12
   1ba4d:	55                   	push   %rbp
   1ba4e:	53                   	push   %rbx
   1ba4f:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1ba53:	31 db                	xor    %ebx,%ebx
   1ba55:	4c 8b 2f             	mov    (%rdi),%r13
__NTH (__argz_next (const char *__argz, size_t __argz_len,
		    const char *__entry))
{
  if (__entry)
    {
      if (__entry < __argz + __argz_len)
   1ba58:	4b 8d 6c 25 00       	lea    0x0(%r13,%r12,1),%rbp
  if (__entry)
   1ba5d:	48 85 db             	test   %rbx,%rbx
   1ba60:	74 4e                	je     1bab0 <find_env_item+0x70>
      if (__entry < __argz + __argz_len)
   1ba62:	48 39 eb             	cmp    %rbp,%rbx
   1ba65:	73 39                	jae    1baa0 <find_env_item+0x60>
	__entry = strchr (__entry, '\0') + 1;
   1ba67:	48 89 df             	mov    %rbx,%rdi
   1ba6a:	e8 b1 43 ff ff       	callq  fe20 <strlen@plt>
   1ba6f:	48 8d 5c 03 01       	lea    0x1(%rbx,%rax,1),%rbx

      return __entry >= __argz + __argz_len ? (char *) NULL : (char *) __entry;
   1ba74:	48 39 dd             	cmp    %rbx,%rbp
   1ba77:	76 27                	jbe    1baa0 <find_env_item+0x60>
   1ba79:	48 85 db             	test   %rbx,%rbx
   1ba7c:	74 0f                	je     1ba8d <find_env_item+0x4d>
   1ba7e:	4c 89 f6             	mov    %r14,%rsi
   1ba81:	48 89 df             	mov    %rbx,%rdi
   1ba84:	e8 97 47 ff ff       	callq  10220 <strcmp@plt>
   1ba89:	85 c0                	test   %eax,%eax
   1ba8b:	75 d0                	jne    1ba5d <find_env_item+0x1d>
   1ba8d:	48 89 d8             	mov    %rbx,%rax
   1ba90:	5b                   	pop    %rbx
   1ba91:	5d                   	pop    %rbp
   1ba92:	41 5c                	pop    %r12
   1ba94:	41 5d                	pop    %r13
   1ba96:	41 5e                	pop    %r14
   1ba98:	c3                   	retq   
   1ba99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1baa0:	31 db                	xor    %ebx,%ebx
   1baa2:	48 89 d8             	mov    %rbx,%rax
   1baa5:	5b                   	pop    %rbx
   1baa6:	5d                   	pop    %rbp
   1baa7:	41 5c                	pop    %r12
   1baa9:	41 5d                	pop    %r13
   1baab:	41 5e                	pop    %r14
   1baad:	c3                   	retq   
   1baae:	66 90                	xchg   %ax,%ax
    }
  else
    return __argz_len > 0 ? (char *) __argz : 0;
   1bab0:	4d 85 e4             	test   %r12,%r12
   1bab3:	74 d8                	je     1ba8d <find_env_item+0x4d>
   1bab5:	4c 89 eb             	mov    %r13,%rbx
   1bab8:	eb bf                	jmp    1ba79 <find_env_item+0x39>

000000000001baba <.annobin_environment_push_inner.part.2.start>:
   1baba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bac0 <environment_push_inner.part.2>:
   1bac0:	41 57                	push   %r15
   1bac2:	49 89 d7             	mov    %rdx,%r15
   1bac5:	41 56                	push   %r14
   1bac7:	45 89 c6             	mov    %r8d,%r14d
   1baca:	41 55                	push   %r13
   1bacc:	49 89 f5             	mov    %rsi,%r13
   1bacf:	41 54                	push   %r12
   1bad1:	49 89 fc             	mov    %rdi,%r12
   1bad4:	55                   	push   %rbp
   1bad5:	89 cd                	mov    %ecx,%ebp
   1bad7:	53                   	push   %rbx
   1bad8:	48 83 ec 48          	sub    $0x48,%rsp
   1badc:	48 8b 3f             	mov    (%rdi),%rdi
   1badf:	88 4c 24 0f          	mov    %cl,0xf(%rsp)
   1bae3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1baea:	00 00 
   1baec:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1baf1:	31 c0                	xor    %eax,%eax
   1baf3:	e8 48 dc 01 00       	callq  39740 <fzhash_lookup>
   1baf8:	48 89 c3             	mov    %rax,%rbx
   1bafb:	48 85 c0             	test   %rax,%rax
   1bafe:	0f 84 a4 01 00 00    	je     1bca8 <environment_push_inner.part.2+0x1e8>
   1bb04:	45 84 f6             	test   %r14b,%r14b
   1bb07:	75 47                	jne    1bb50 <environment_push_inner.part.2+0x90>
   1bb09:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1bb0d:	40 84 ed             	test   %bpl,%bpl
   1bb10:	75 2e                	jne    1bb40 <environment_push_inner.part.2+0x80>
   1bb12:	4c 89 fa             	mov    %r15,%rdx
   1bb15:	48 89 df             	mov    %rbx,%rdi
   1bb18:	e8 03 46 ff ff       	callq  10120 <argz_add@plt>
   1bb1d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1bb22:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1bb29:	00 00 
   1bb2b:	0f 85 02 02 00 00    	jne    1bd33 <environment_push_inner.part.2+0x273>
   1bb31:	48 83 c4 48          	add    $0x48,%rsp
   1bb35:	5b                   	pop    %rbx
   1bb36:	5d                   	pop    %rbp
   1bb37:	41 5c                	pop    %r12
   1bb39:	41 5d                	pop    %r13
   1bb3b:	41 5e                	pop    %r14
   1bb3d:	41 5f                	pop    %r15
   1bb3f:	c3                   	retq   
   1bb40:	48 8b 13             	mov    (%rbx),%rdx
   1bb43:	4c 89 f9             	mov    %r15,%rcx
   1bb46:	48 89 df             	mov    %rbx,%rdi
   1bb49:	e8 a2 4f ff ff       	callq  10af0 <argz_insert@plt>
   1bb4e:	eb cd                	jmp    1bb1d <environment_push_inner.part.2+0x5d>
   1bb50:	0f be 73 10          	movsbl 0x10(%rbx),%esi
   1bb54:	4c 89 ff             	mov    %r15,%rdi
   1bb57:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   1bb5c:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1bb61:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1bb68:	00 00 
   1bb6a:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1bb71:	00 00 
   1bb73:	e8 18 40 ff ff       	callq  fb90 <argz_create_sep@plt>
   1bb78:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   1bb7d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bb82:	40 84 ed             	test   %bpl,%bpl
   1bb85:	0f 84 a1 00 00 00    	je     1bc2c <environment_push_inner.part.2+0x16c>
   1bb8b:	4c 89 e6             	mov    %r12,%rsi
   1bb8e:	4c 89 ff             	mov    %r15,%rdi
   1bb91:	e8 2a 4a ff ff       	callq  105c0 <argz_count@plt>
   1bb96:	48 83 f8 01          	cmp    $0x1,%rax
   1bb9a:	0f 86 8c 00 00 00    	jbe    1bc2c <environment_push_inner.part.2+0x16c>
   1bba0:	31 ed                	xor    %ebp,%ebp
   1bba2:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   1bba7:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   1bbac:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1bbb3:	00 00 
   1bbb5:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1bbbc:	00 00 
  if (__entry)
   1bbbe:	48 85 ed             	test   %rbp,%rbp
   1bbc1:	74 41                	je     1bc04 <environment_push_inner.part.2+0x144>
      if (__entry < __argz + __argz_len)
   1bbc3:	4d 01 fc             	add    %r15,%r12
   1bbc6:	4c 39 e5             	cmp    %r12,%rbp
   1bbc9:	73 45                	jae    1bc10 <environment_push_inner.part.2+0x150>
	__entry = strchr (__entry, '\0') + 1;
   1bbcb:	48 89 ef             	mov    %rbp,%rdi
   1bbce:	e8 4d 42 ff ff       	callq  fe20 <strlen@plt>
   1bbd3:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
      return __entry >= __argz + __argz_len ? (char *) NULL : (char *) __entry;
   1bbd8:	49 39 ec             	cmp    %rbp,%r12
   1bbdb:	76 33                	jbe    1bc10 <environment_push_inner.part.2+0x150>
   1bbdd:	48 85 ed             	test   %rbp,%rbp
   1bbe0:	74 2e                	je     1bc10 <environment_push_inner.part.2+0x150>
   1bbe2:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1bbe7:	48 89 e9             	mov    %rbp,%rcx
   1bbea:	4c 89 ee             	mov    %r13,%rsi
   1bbed:	4c 89 f7             	mov    %r14,%rdi
   1bbf0:	e8 fb 4e ff ff       	callq  10af0 <argz_insert@plt>
   1bbf5:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   1bbfa:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
  if (__entry)
   1bbff:	48 85 ed             	test   %rbp,%rbp
   1bc02:	75 bf                	jne    1bbc3 <environment_push_inner.part.2+0x103>
    return __argz_len > 0 ? (char *) __argz : 0;
   1bc04:	4d 85 e4             	test   %r12,%r12
   1bc07:	74 07                	je     1bc10 <environment_push_inner.part.2+0x150>
   1bc09:	4c 89 fd             	mov    %r15,%rbp
   1bc0c:	eb cf                	jmp    1bbdd <environment_push_inner.part.2+0x11d>
   1bc0e:	66 90                	xchg   %ax,%ax
   1bc10:	4c 89 ff             	mov    %r15,%rdi
   1bc13:	e8 98 3e ff ff       	callq  fab0 <free@plt>
   1bc18:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   1bc1d:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1bc22:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   1bc27:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1bc2c:	31 ed                	xor    %ebp,%ebp
   1bc2e:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
  if (__entry)
   1bc32:	48 85 ed             	test   %rbp,%rbp
   1bc35:	74 61                	je     1bc98 <environment_push_inner.part.2+0x1d8>
      if (__entry < __argz + __argz_len)
   1bc37:	4f 8d 34 27          	lea    (%r15,%r12,1),%r14
   1bc3b:	4c 39 f5             	cmp    %r14,%rbp
   1bc3e:	73 48                	jae    1bc88 <environment_push_inner.part.2+0x1c8>
	__entry = strchr (__entry, '\0') + 1;
   1bc40:	48 89 ef             	mov    %rbp,%rdi
   1bc43:	e8 d8 41 ff ff       	callq  fe20 <strlen@plt>
   1bc48:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
      return __entry >= __argz + __argz_len ? (char *) NULL : (char *) __entry;
   1bc4d:	49 39 ee             	cmp    %rbp,%r14
   1bc50:	76 36                	jbe    1bc88 <environment_push_inner.part.2+0x1c8>
   1bc52:	48 85 ed             	test   %rbp,%rbp
   1bc55:	74 31                	je     1bc88 <environment_push_inner.part.2+0x1c8>
   1bc57:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   1bc5b:	74 d5                	je     1bc32 <environment_push_inner.part.2+0x172>
   1bc5d:	48 89 ee             	mov    %rbp,%rsi
   1bc60:	48 89 df             	mov    %rbx,%rdi
   1bc63:	e8 d8 fd ff ff       	callq  1ba40 <find_env_item>
   1bc68:	48 85 c0             	test   %rax,%rax
   1bc6b:	74 73                	je     1bce0 <environment_push_inner.part.2+0x220>
   1bc6d:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   1bc72:	0f 85 98 00 00 00    	jne    1bd10 <environment_push_inner.part.2+0x250>
   1bc78:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   1bc7d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bc82:	eb ae                	jmp    1bc32 <environment_push_inner.part.2+0x172>
   1bc84:	0f 1f 40 00          	nopl   0x0(%rax)
   1bc88:	4c 89 ff             	mov    %r15,%rdi
   1bc8b:	e8 20 3e ff ff       	callq  fab0 <free@plt>
   1bc90:	e9 88 fe ff ff       	jmpq   1bb1d <environment_push_inner.part.2+0x5d>
   1bc95:	0f 1f 00             	nopl   (%rax)
    return __argz_len > 0 ? (char *) __argz : 0;
   1bc98:	4d 85 e4             	test   %r12,%r12
   1bc9b:	74 eb                	je     1bc88 <environment_push_inner.part.2+0x1c8>
   1bc9d:	4c 89 fd             	mov    %r15,%rbp
   1bca0:	eb b0                	jmp    1bc52 <environment_push_inner.part.2+0x192>
   1bca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bca8:	31 c0                	xor    %eax,%eax
   1bcaa:	e8 71 fd ff ff       	callq  1ba20 <new_env_item>
   1bcaf:	49 8b 3c 24          	mov    (%r12),%rdi
   1bcb3:	4c 89 ee             	mov    %r13,%rsi
   1bcb6:	48 89 c2             	mov    %rax,%rdx
   1bcb9:	48 89 c3             	mov    %rax,%rbx
   1bcbc:	e8 ff d8 01 00       	callq  395c0 <fzhash_update>
   1bcc1:	48 8d 15 18 fc ff ff 	lea    -0x3e8(%rip),%rdx        # 1b8e0 <free_env_item>
   1bcc8:	49 8b 3c 24          	mov    (%r12),%rdi
   1bccc:	4c 89 ee             	mov    %r13,%rsi
   1bccf:	e8 8c db 01 00       	callq  39860 <fzhash_freefn>
   1bcd4:	e9 2b fe ff ff       	jmpq   1bb04 <environment_push_inner.part.2+0x44>
   1bcd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bce0:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   1bce5:	74 39                	je     1bd20 <environment_push_inner.part.2+0x260>
   1bce7:	48 8b 13             	mov    (%rbx),%rdx
   1bcea:	48 89 e9             	mov    %rbp,%rcx
   1bced:	4c 89 ee             	mov    %r13,%rsi
   1bcf0:	48 89 df             	mov    %rbx,%rdi
   1bcf3:	e8 f8 4d ff ff       	callq  10af0 <argz_insert@plt>
   1bcf8:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   1bcfd:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bd02:	e9 2b ff ff ff       	jmpq   1bc32 <environment_push_inner.part.2+0x172>
   1bd07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bd0e:	00 00 
   1bd10:	48 89 c2             	mov    %rax,%rdx
   1bd13:	4c 89 ee             	mov    %r13,%rsi
   1bd16:	48 89 df             	mov    %rbx,%rdi
   1bd19:	e8 b2 41 ff ff       	callq  fed0 <argz_delete@plt>
   1bd1e:	eb c7                	jmp    1bce7 <environment_push_inner.part.2+0x227>
   1bd20:	48 89 ea             	mov    %rbp,%rdx
   1bd23:	4c 89 ee             	mov    %r13,%rsi
   1bd26:	48 89 df             	mov    %rbx,%rdi
   1bd29:	e8 f2 43 ff ff       	callq  10120 <argz_add@plt>
   1bd2e:	e9 45 ff ff ff       	jmpq   1bc78 <environment_push_inner.part.2+0x1b8>
   1bd33:	e8 18 41 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001bd38 <.annobin_environment_get.start>:
   1bd38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bd3f:	00 

000000000001bd40 <environment_get>:
   1bd40:	f3 0f 1e fa          	endbr64 
   1bd44:	48 83 ec 08          	sub    $0x8,%rsp
   1bd48:	48 8b 3f             	mov    (%rdi),%rdi
   1bd4b:	e8 f0 d9 01 00       	callq  39740 <fzhash_lookup>
   1bd50:	48 83 c4 08          	add    $0x8,%rsp
   1bd54:	48 89 c7             	mov    %rax,%rdi
   1bd57:	e9 b4 fb ff ff       	jmpq   1b910 <stringify_env_item>

000000000001bd5c <.annobin_environment_get.end>:
   1bd5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bd60 <environment_push>:
   1bd60:	f3 0f 1e fa          	endbr64 
   1bd64:	48 85 d2             	test   %rdx,%rdx
   1bd67:	74 05                	je     1bd6e <environment_push+0xe>
   1bd69:	80 3a 00             	cmpb   $0x0,(%rdx)
   1bd6c:	75 02                	jne    1bd70 <environment_push+0x10>
   1bd6e:	c3                   	retq   
   1bd6f:	90                   	nop
   1bd70:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1bd76:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bd7b:	e9 40 fd ff ff       	jmpq   1bac0 <environment_push_inner.part.2>

000000000001bd80 <environment_push_back>:
   1bd80:	f3 0f 1e fa          	endbr64 
   1bd84:	48 85 d2             	test   %rdx,%rdx
   1bd87:	74 05                	je     1bd8e <environment_push_back+0xe>
   1bd89:	80 3a 00             	cmpb   $0x0,(%rdx)
   1bd8c:	75 02                	jne    1bd90 <environment_push_back+0x10>
   1bd8e:	c3                   	retq   
   1bd8f:	90                   	nop
   1bd90:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1bd96:	31 c9                	xor    %ecx,%ecx
   1bd98:	e9 23 fd ff ff       	jmpq   1bac0 <environment_push_inner.part.2>

000000000001bd9d <.annobin_environment_push_back.end>:
   1bd9d:	0f 1f 00             	nopl   (%rax)

000000000001bda0 <environment_set_inner>:
   1bda0:	41 55                	push   %r13
   1bda2:	31 c0                	xor    %eax,%eax
   1bda4:	41 89 cd             	mov    %ecx,%r13d
   1bda7:	41 54                	push   %r12
   1bda9:	49 89 d4             	mov    %rdx,%r12
   1bdac:	55                   	push   %rbp
   1bdad:	48 89 f5             	mov    %rsi,%rbp
   1bdb0:	53                   	push   %rbx
   1bdb1:	48 89 fb             	mov    %rdi,%rbx
   1bdb4:	48 83 ec 08          	sub    $0x8,%rsp
   1bdb8:	e8 63 fc ff ff       	callq  1ba20 <new_env_item>
   1bdbd:	4d 85 e4             	test   %r12,%r12
   1bdc0:	48 89 ee             	mov    %rbp,%rsi
   1bdc3:	44 88 68 10          	mov    %r13b,0x10(%rax)
   1bdc7:	48 8b 3b             	mov    (%rbx),%rdi
   1bdca:	48 89 c2             	mov    %rax,%rdx
   1bdcd:	c6 40 11 00          	movb   $0x0,0x11(%rax)
   1bdd1:	0f 94 40 12          	sete   0x12(%rax)
   1bdd5:	e8 e6 d7 01 00       	callq  395c0 <fzhash_update>
   1bdda:	48 8b 3b             	mov    (%rbx),%rdi
   1bddd:	48 8d 15 fc fa ff ff 	lea    -0x504(%rip),%rdx        # 1b8e0 <free_env_item>
   1bde4:	48 89 ee             	mov    %rbp,%rsi
   1bde7:	e8 74 da 01 00       	callq  39860 <fzhash_freefn>
   1bdec:	48 83 c4 08          	add    $0x8,%rsp
   1bdf0:	4c 89 e2             	mov    %r12,%rdx
   1bdf3:	48 89 ee             	mov    %rbp,%rsi
   1bdf6:	48 89 df             	mov    %rbx,%rdi
   1bdf9:	5b                   	pop    %rbx
   1bdfa:	5d                   	pop    %rbp
   1bdfb:	41 5c                	pop    %r12
   1bdfd:	41 5d                	pop    %r13
   1bdff:	e9 7c ff ff ff       	jmpq   1bd80 <environment_push_back>

000000000001be04 <.annobin_environment_set.start>:
   1be04:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1be0b:	00 00 00 00 
   1be0f:	90                   	nop

000000000001be10 <environment_set>:
   1be10:	f3 0f 1e fa          	endbr64 
   1be14:	0f be c9             	movsbl %cl,%ecx
   1be17:	eb 87                	jmp    1bda0 <environment_set_inner>

000000000001be19 <.annobin_environment_set.end>:
   1be19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001be20 <environment_unset>:
   1be20:	f3 0f 1e fa          	endbr64 
   1be24:	31 c9                	xor    %ecx,%ecx
   1be26:	31 d2                	xor    %edx,%edx
   1be28:	e9 73 ff ff ff       	jmpq   1bda0 <environment_set_inner>

000000000001be2d <.annobin_environment_no_dedup_push.start>:
   1be2d:	0f 1f 00             	nopl   (%rax)

000000000001be30 <environment_no_dedup_push>:
   1be30:	f3 0f 1e fa          	endbr64 
   1be34:	48 85 d2             	test   %rdx,%rdx
   1be37:	74 05                	je     1be3e <environment_no_dedup_push+0xe>
   1be39:	80 3a 00             	cmpb   $0x0,(%rdx)
   1be3c:	75 02                	jne    1be40 <environment_no_dedup_push+0x10>
   1be3e:	c3                   	retq   
   1be3f:	90                   	nop
   1be40:	45 31 c0             	xor    %r8d,%r8d
   1be43:	b9 01 00 00 00       	mov    $0x1,%ecx
   1be48:	e9 73 fc ff ff       	jmpq   1bac0 <environment_push_inner.part.2>

000000000001be4d <.annobin_environment_no_dedup_push.end>:
   1be4d:	0f 1f 00             	nopl   (%rax)

000000000001be50 <environment_no_dedup_push_back>:
   1be50:	f3 0f 1e fa          	endbr64 
   1be54:	48 85 d2             	test   %rdx,%rdx
   1be57:	74 05                	je     1be5e <environment_no_dedup_push_back+0xe>
   1be59:	80 3a 00             	cmpb   $0x0,(%rdx)
   1be5c:	75 02                	jne    1be60 <environment_no_dedup_push_back+0x10>
   1be5e:	c3                   	retq   
   1be5f:	90                   	nop
   1be60:	45 31 c0             	xor    %r8d,%r8d
   1be63:	31 c9                	xor    %ecx,%ecx
   1be65:	e9 56 fc ff ff       	jmpq   1bac0 <environment_push_inner.part.2>

000000000001be6a <.annobin_environment_from_env.start>:
   1be6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001be70 <environment_from_env>:
   1be70:	f3 0f 1e fa          	endbr64 
   1be74:	41 55                	push   %r13
   1be76:	49 89 fd             	mov    %rdi,%r13
   1be79:	48 89 f7             	mov    %rsi,%rdi
   1be7c:	41 54                	push   %r12
   1be7e:	49 89 d4             	mov    %rdx,%r12
   1be81:	55                   	push   %rbp
   1be82:	48 89 f5             	mov    %rsi,%rbp
   1be85:	53                   	push   %rbx
   1be86:	89 cb                	mov    %ecx,%ebx
   1be88:	48 83 ec 08          	sub    $0x8,%rsp
   1be8c:	e8 bf 3b ff ff       	callq  fa50 <getenv@plt>
   1be91:	48 89 c2             	mov    %rax,%rdx
   1be94:	4c 09 e2             	or     %r12,%rdx
   1be97:	74 27                	je     1bec0 <environment_from_env+0x50>
   1be99:	48 85 c0             	test   %rax,%rax
   1be9c:	0f be cb             	movsbl %bl,%ecx
   1be9f:	48 89 ee             	mov    %rbp,%rsi
   1bea2:	4c 89 ef             	mov    %r13,%rdi
   1bea5:	49 0f 44 c4          	cmove  %r12,%rax
   1bea9:	48 83 c4 08          	add    $0x8,%rsp
   1bead:	5b                   	pop    %rbx
   1beae:	5d                   	pop    %rbp
   1beaf:	48 89 c2             	mov    %rax,%rdx
   1beb2:	41 5c                	pop    %r12
   1beb4:	41 5d                	pop    %r13
   1beb6:	e9 55 ff ff ff       	jmpq   1be10 <environment_set>
   1bebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bec0:	48 83 c4 08          	add    $0x8,%rsp
   1bec4:	5b                   	pop    %rbx
   1bec5:	5d                   	pop    %rbp
   1bec6:	41 5c                	pop    %r12
   1bec8:	41 5d                	pop    %r13
   1beca:	c3                   	retq   

000000000001becb <.annobin_environment_from_env.end>:
   1becb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bed0 <environment_set_separator>:
   1bed0:	f3 0f 1e fa          	endbr64 
   1bed4:	53                   	push   %rbx
   1bed5:	48 8b 3f             	mov    (%rdi),%rdi
   1bed8:	89 d3                	mov    %edx,%ebx
   1beda:	e8 61 d8 01 00       	callq  39740 <fzhash_lookup>
   1bedf:	48 85 c0             	test   %rax,%rax
   1bee2:	74 03                	je     1bee7 <environment_set_separator+0x17>
   1bee4:	88 58 10             	mov    %bl,0x10(%rax)
   1bee7:	5b                   	pop    %rbx
   1bee8:	c3                   	retq   

000000000001bee9 <.annobin_environment_first.start>:
   1bee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001bef0 <environment_first>:
   1bef0:	f3 0f 1e fa          	endbr64 
   1bef4:	48 83 ec 08          	sub    $0x8,%rsp
   1bef8:	48 8b 3f             	mov    (%rdi),%rdi
   1befb:	e8 30 db 01 00       	callq  39a30 <fzhash_first>
   1bf00:	48 83 c4 08          	add    $0x8,%rsp
   1bf04:	48 89 c7             	mov    %rax,%rdi
   1bf07:	e9 04 fa ff ff       	jmpq   1b910 <stringify_env_item>

000000000001bf0c <.annobin_environment_first.end>:
   1bf0c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bf10 <environment_next>:
   1bf10:	f3 0f 1e fa          	endbr64 
   1bf14:	48 83 ec 08          	sub    $0x8,%rsp
   1bf18:	48 8b 3f             	mov    (%rdi),%rdi
   1bf1b:	e8 80 da 01 00       	callq  399a0 <fzhash_next>
   1bf20:	48 83 c4 08          	add    $0x8,%rsp
   1bf24:	48 89 c7             	mov    %rax,%rdi
   1bf27:	e9 e4 f9 ff ff       	jmpq   1b910 <stringify_env_item>

000000000001bf2c <.annobin_environment_cursor.start>:
   1bf2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bf30 <environment_cursor>:
   1bf30:	f3 0f 1e fa          	endbr64 
   1bf34:	48 8b 3f             	mov    (%rdi),%rdi
   1bf37:	e9 44 db 01 00       	jmpq   39a80 <fzhash_cursor>

000000000001bf3c <.annobin_environment_apply.start>:
   1bf3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bf40 <environment_apply>:
   1bf40:	f3 0f 1e fa          	endbr64 
   1bf44:	41 54                	push   %r12
   1bf46:	49 89 fc             	mov    %rdi,%r12
   1bf49:	55                   	push   %rbp
   1bf4a:	53                   	push   %rbx
   1bf4b:	48 8b 3f             	mov    (%rdi),%rdi
   1bf4e:	e8 dd da 01 00       	callq  39a30 <fzhash_first>
   1bf53:	49 8b 3c 24          	mov    (%r12),%rdi
   1bf57:	48 89 c3             	mov    %rax,%rbx
   1bf5a:	e8 21 db 01 00       	callq  39a80 <fzhash_cursor>
   1bf5f:	48 85 c0             	test   %rax,%rax
   1bf62:	74 7c                	je     1bfe0 <environment_apply+0xa0>
   1bf64:	48 89 c5             	mov    %rax,%rbp
   1bf67:	48 85 db             	test   %rbx,%rbx
   1bf6a:	75 38                	jne    1bfa4 <environment_apply+0x64>
   1bf6c:	eb 72                	jmp    1bfe0 <environment_apply+0xa0>
   1bf6e:	66 90                	xchg   %ax,%ax
   1bf70:	48 89 ef             	mov    %rbp,%rdi
   1bf73:	e8 78 48 ff ff       	callq  107f0 <unsetenv@plt>
   1bf78:	85 c0                	test   %eax,%eax
   1bf7a:	75 69                	jne    1bfe5 <environment_apply+0xa5>
   1bf7c:	49 8b 3c 24          	mov    (%r12),%rdi
   1bf80:	e8 1b da 01 00       	callq  399a0 <fzhash_next>
   1bf85:	49 8b 3c 24          	mov    (%r12),%rdi
   1bf89:	48 89 c3             	mov    %rax,%rbx
   1bf8c:	e8 ef da 01 00       	callq  39a80 <fzhash_cursor>
   1bf91:	48 85 db             	test   %rbx,%rbx
   1bf94:	0f 95 c2             	setne  %dl
   1bf97:	48 85 c0             	test   %rax,%rax
   1bf9a:	48 89 c5             	mov    %rax,%rbp
   1bf9d:	0f 95 c0             	setne  %al
   1bfa0:	84 c2                	test   %al,%dl
   1bfa2:	74 3c                	je     1bfe0 <environment_apply+0xa0>
   1bfa4:	80 7b 12 00          	cmpb   $0x0,0x12(%rbx)
   1bfa8:	75 c6                	jne    1bf70 <environment_apply+0x30>
   1bfaa:	48 89 df             	mov    %rbx,%rdi
   1bfad:	e8 5e f9 ff ff       	callq  1b910 <stringify_env_item>
   1bfb2:	ba 01 00 00 00       	mov    $0x1,%edx
   1bfb7:	48 89 ef             	mov    %rbp,%rdi
   1bfba:	48 89 c6             	mov    %rax,%rsi
   1bfbd:	48 89 c3             	mov    %rax,%rbx
   1bfc0:	e8 2b 3d ff ff       	callq  fcf0 <setenv@plt>
   1bfc5:	85 c0                	test   %eax,%eax
   1bfc7:	79 b3                	jns    1bf7c <environment_apply+0x3c>
   1bfc9:	48 89 da             	mov    %rbx,%rdx
   1bfcc:	48 89 ee             	mov    %rbp,%rsi
   1bfcf:	48 8d 3d 96 30 02 00 	lea    0x23096(%rip),%rdi        # 3f06c <__PRETTY_FUNCTION__.5641+0x2c>
   1bfd6:	31 c0                	xor    %eax,%eax
   1bfd8:	e8 a3 3d 00 00       	callq  1fd80 <log_err_exit>
   1bfdd:	0f 1f 00             	nopl   (%rax)
   1bfe0:	5b                   	pop    %rbx
   1bfe1:	5d                   	pop    %rbp
   1bfe2:	41 5c                	pop    %r12
   1bfe4:	c3                   	retq   
   1bfe5:	48 89 ee             	mov    %rbp,%rsi
   1bfe8:	48 8d 3d 70 30 02 00 	lea    0x23070(%rip),%rdi        # 3f05f <__PRETTY_FUNCTION__.5641+0x1f>
   1bfef:	31 c0                	xor    %eax,%eax
   1bff1:	e8 8a 3d 00 00       	callq  1fd80 <log_err_exit>

000000000001bff6 <.annobin_environment.c_end>:
   1bff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bffd:	00 00 00 

000000000001c000 <verrprintf>:
   1c000:	f3 0f 1e fa          	endbr64 
   1c004:	48 85 ff             	test   %rdi,%rdi
   1c007:	0f 84 93 00 00 00    	je     1c0a0 <verrprintf+0xa0>
   1c00d:	41 56                	push   %r14
   1c00f:	49 89 f6             	mov    %rsi,%r14
   1c012:	41 55                	push   %r13
   1c014:	41 54                	push   %r12
   1c016:	55                   	push   %rbp
   1c017:	48 89 d5             	mov    %rdx,%rbp
   1c01a:	53                   	push   %rbx
   1c01b:	48 89 fb             	mov    %rdi,%rbx
   1c01e:	e8 ed 3a ff ff       	callq  fb10 <__errno_location@plt>
  return __builtin___memset_chk (__dest, __ch, __len,
   1c023:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   1c027:	48 89 d9             	mov    %rbx,%rcx
   1c02a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1c02e:	44 8b 28             	mov    (%rax),%r13d
   1c031:	49 89 c4             	mov    %rax,%r12
   1c034:	31 c0                	xor    %eax,%eax
   1c036:	48 29 f9             	sub    %rdi,%rcx
   1c039:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1c040:	81 c1 a0 00 00 00    	add    $0xa0,%ecx
   1c046:	48 c7 83 98 00 00 00 	movq   $0x0,0x98(%rbx)
   1c04d:	00 00 00 00 
   1c051:	c1 e9 03             	shr    $0x3,%ecx
   1c054:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1c057:	4d 85 f6             	test   %r14,%r14
   1c05a:	74 2d                	je     1c089 <verrprintf+0x89>
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1c05c:	49 89 e9             	mov    %rbp,%r9
   1c05f:	4d 89 f0             	mov    %r14,%r8
   1c062:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1c069:	48 89 df             	mov    %rbx,%rdi
   1c06c:	ba 01 00 00 00       	mov    $0x1,%edx
   1c071:	be a0 00 00 00       	mov    $0xa0,%esi
   1c076:	e8 e5 44 ff ff       	callq  10560 <__vsnprintf_chk@plt>
   1c07b:	3d a0 00 00 00       	cmp    $0xa0,%eax
   1c080:	76 07                	jbe    1c089 <verrprintf+0x89>
   1c082:	c6 83 9e 00 00 00 2b 	movb   $0x2b,0x9e(%rbx)
   1c089:	45 89 2c 24          	mov    %r13d,(%r12)
   1c08d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c092:	5b                   	pop    %rbx
   1c093:	5d                   	pop    %rbp
   1c094:	41 5c                	pop    %r12
   1c096:	41 5d                	pop    %r13
   1c098:	41 5e                	pop    %r14
   1c09a:	c3                   	retq   
   1c09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c0a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c0a5:	c3                   	retq   

000000000001c0a6 <.annobin_errprintf.start>:
   1c0a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c0ad:	00 00 00 

000000000001c0b0 <errprintf>:
   1c0b0:	f3 0f 1e fa          	endbr64 
   1c0b4:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   1c0bb:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1c0c0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1c0c5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1c0ca:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1c0cf:	84 c0                	test   %al,%al
   1c0d1:	74 37                	je     1c10a <errprintf+0x5a>
   1c0d3:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1c0d8:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1c0dd:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1c0e2:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1c0e9:	00 
   1c0ea:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1c0f1:	00 
   1c0f2:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   1c0f9:	00 
   1c0fa:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   1c101:	00 
   1c102:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   1c109:	00 
   1c10a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c111:	00 00 
   1c113:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c118:	31 c0                	xor    %eax,%eax
   1c11a:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1c121:	00 
   1c122:	48 89 e2             	mov    %rsp,%rdx
   1c125:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1c12c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c131:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1c136:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   1c13d:	00 
   1c13e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c143:	e8 b8 fe ff ff       	callq  1c000 <verrprintf>
   1c148:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c14d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1c152:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1c159:	00 00 
   1c15b:	75 08                	jne    1c165 <errprintf+0xb5>
   1c15d:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   1c164:	c3                   	retq   
   1c165:	e8 e6 3c ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001c16a <.annobin_errprintf.c_end>:
   1c16a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001c170 <fd_get_flags>:
   1c170:	f3 0f 1e fa          	endbr64 
   1c174:	be 03 00 00 00       	mov    $0x3,%esi
   1c179:	31 c0                	xor    %eax,%eax
   1c17b:	e9 40 3b ff ff       	jmpq   fcc0 <fcntl@plt>

000000000001c180 <fd_set_flags>:
   1c180:	f3 0f 1e fa          	endbr64 
   1c184:	89 f2                	mov    %esi,%edx
   1c186:	31 c0                	xor    %eax,%eax
   1c188:	be 04 00 00 00       	mov    $0x4,%esi
   1c18d:	e9 2e 3b ff ff       	jmpq   fcc0 <fcntl@plt>

000000000001c192 <.annobin_fd_set_blocking.start>:
   1c192:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1c199:	00 00 00 00 
   1c19d:	0f 1f 00             	nopl   (%rax)

000000000001c1a0 <fd_set_blocking>:
   1c1a0:	f3 0f 1e fa          	endbr64 
   1c1a4:	55                   	push   %rbp
   1c1a5:	89 fd                	mov    %edi,%ebp
   1c1a7:	53                   	push   %rbx
   1c1a8:	48 83 ec 08          	sub    $0x8,%rsp
   1c1ac:	e8 bf ff ff ff       	callq  1c170 <fd_get_flags>
   1c1b1:	85 c0                	test   %eax,%eax
   1c1b3:	78 23                	js     1c1d8 <fd_set_blocking+0x38>
   1c1b5:	89 c6                	mov    %eax,%esi
   1c1b7:	89 ef                	mov    %ebp,%edi
   1c1b9:	89 c3                	mov    %eax,%ebx
   1c1bb:	81 e6 ff f7 ff ff    	and    $0xfffff7ff,%esi
   1c1c1:	e8 ba ff ff ff       	callq  1c180 <fd_set_flags>
   1c1c6:	85 c0                	test   %eax,%eax
   1c1c8:	78 0e                	js     1c1d8 <fd_set_blocking+0x38>
   1c1ca:	48 83 c4 08          	add    $0x8,%rsp
   1c1ce:	89 d8                	mov    %ebx,%eax
   1c1d0:	5b                   	pop    %rbx
   1c1d1:	5d                   	pop    %rbp
   1c1d2:	c3                   	retq   
   1c1d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c1d8:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1c1dd:	eb eb                	jmp    1c1ca <fd_set_blocking+0x2a>

000000000001c1df <.annobin_fd_set_blocking.end>:
   1c1df:	90                   	nop

000000000001c1e0 <fd_set_nonblocking>:
   1c1e0:	f3 0f 1e fa          	endbr64 
   1c1e4:	55                   	push   %rbp
   1c1e5:	89 fd                	mov    %edi,%ebp
   1c1e7:	53                   	push   %rbx
   1c1e8:	48 83 ec 08          	sub    $0x8,%rsp
   1c1ec:	e8 7f ff ff ff       	callq  1c170 <fd_get_flags>
   1c1f1:	85 c0                	test   %eax,%eax
   1c1f3:	78 23                	js     1c218 <fd_set_nonblocking+0x38>
   1c1f5:	89 c6                	mov    %eax,%esi
   1c1f7:	89 ef                	mov    %ebp,%edi
   1c1f9:	89 c3                	mov    %eax,%ebx
   1c1fb:	81 ce 00 08 00 00    	or     $0x800,%esi
   1c201:	e8 7a ff ff ff       	callq  1c180 <fd_set_flags>
   1c206:	85 c0                	test   %eax,%eax
   1c208:	78 0e                	js     1c218 <fd_set_nonblocking+0x38>
   1c20a:	48 83 c4 08          	add    $0x8,%rsp
   1c20e:	89 d8                	mov    %ebx,%eax
   1c210:	5b                   	pop    %rbx
   1c211:	5d                   	pop    %rbp
   1c212:	c3                   	retq   
   1c213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c218:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1c21d:	eb eb                	jmp    1c20a <fd_set_nonblocking+0x2a>

000000000001c21f <.annobin_fd_set_cloexec.start>:
   1c21f:	90                   	nop

000000000001c220 <fd_set_cloexec>:
   1c220:	f3 0f 1e fa          	endbr64 
   1c224:	55                   	push   %rbp
   1c225:	31 c0                	xor    %eax,%eax
   1c227:	be 01 00 00 00       	mov    $0x1,%esi
   1c22c:	89 fd                	mov    %edi,%ebp
   1c22e:	53                   	push   %rbx
   1c22f:	48 83 ec 08          	sub    $0x8,%rsp
   1c233:	e8 88 3a ff ff       	callq  fcc0 <fcntl@plt>
   1c238:	85 c0                	test   %eax,%eax
   1c23a:	78 24                	js     1c260 <fd_set_cloexec+0x40>
   1c23c:	89 c2                	mov    %eax,%edx
   1c23e:	89 c3                	mov    %eax,%ebx
   1c240:	be 02 00 00 00       	mov    $0x2,%esi
   1c245:	31 c0                	xor    %eax,%eax
   1c247:	83 ca 01             	or     $0x1,%edx
   1c24a:	89 ef                	mov    %ebp,%edi
   1c24c:	e8 6f 3a ff ff       	callq  fcc0 <fcntl@plt>
   1c251:	85 c0                	test   %eax,%eax
   1c253:	78 0b                	js     1c260 <fd_set_cloexec+0x40>
   1c255:	48 83 c4 08          	add    $0x8,%rsp
   1c259:	89 d8                	mov    %ebx,%eax
   1c25b:	5b                   	pop    %rbx
   1c25c:	5d                   	pop    %rbp
   1c25d:	c3                   	retq   
   1c25e:	66 90                	xchg   %ax,%ax
   1c260:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1c265:	eb ee                	jmp    1c255 <fd_set_cloexec+0x35>

000000000001c267 <.annobin_fd_set_cloexec.end>:
   1c267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c26e:	00 00 

000000000001c270 <fd_unset_cloexec>:
   1c270:	f3 0f 1e fa          	endbr64 
   1c274:	55                   	push   %rbp
   1c275:	31 c0                	xor    %eax,%eax
   1c277:	be 01 00 00 00       	mov    $0x1,%esi
   1c27c:	89 fd                	mov    %edi,%ebp
   1c27e:	53                   	push   %rbx
   1c27f:	48 83 ec 08          	sub    $0x8,%rsp
   1c283:	e8 38 3a ff ff       	callq  fcc0 <fcntl@plt>
   1c288:	85 c0                	test   %eax,%eax
   1c28a:	78 24                	js     1c2b0 <fd_unset_cloexec+0x40>
   1c28c:	89 c2                	mov    %eax,%edx
   1c28e:	89 c3                	mov    %eax,%ebx
   1c290:	be 02 00 00 00       	mov    $0x2,%esi
   1c295:	31 c0                	xor    %eax,%eax
   1c297:	83 e2 fe             	and    $0xfffffffe,%edx
   1c29a:	89 ef                	mov    %ebp,%edi
   1c29c:	e8 1f 3a ff ff       	callq  fcc0 <fcntl@plt>
   1c2a1:	85 c0                	test   %eax,%eax
   1c2a3:	78 0b                	js     1c2b0 <fd_unset_cloexec+0x40>
   1c2a5:	48 83 c4 08          	add    $0x8,%rsp
   1c2a9:	89 d8                	mov    %ebx,%eax
   1c2ab:	5b                   	pop    %rbx
   1c2ac:	5d                   	pop    %rbp
   1c2ad:	c3                   	retq   
   1c2ae:	66 90                	xchg   %ax,%ax
   1c2b0:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1c2b5:	eb ee                	jmp    1c2a5 <fd_unset_cloexec+0x35>

000000000001c2b7 <.annobin_fd_unset_cloexec.end>:
   1c2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c2be:	00 00 

000000000001c2c0 <_fdwalk_portable>:
   1c2c0:	f3 0f 1e fa          	endbr64 
   1c2c4:	41 55                	push   %r13
   1c2c6:	49 89 f5             	mov    %rsi,%r13
   1c2c9:	41 54                	push   %r12
   1c2cb:	49 89 fc             	mov    %rdi,%r12
   1c2ce:	bf 04 00 00 00       	mov    $0x4,%edi
   1c2d3:	55                   	push   %rbp
   1c2d4:	53                   	push   %rbx
   1c2d5:	48 83 ec 08          	sub    $0x8,%rsp
   1c2d9:	e8 02 45 ff ff       	callq  107e0 <sysconf@plt>
   1c2de:	85 c0                	test   %eax,%eax
   1c2e0:	7e 1d                	jle    1c2ff <_fdwalk_portable+0x3f>
   1c2e2:	89 c5                	mov    %eax,%ebp
   1c2e4:	31 db                	xor    %ebx,%ebx
   1c2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c2ed:	00 00 00 
   1c2f0:	89 de                	mov    %ebx,%esi
   1c2f2:	83 c3 01             	add    $0x1,%ebx
   1c2f5:	4c 89 ef             	mov    %r13,%rdi
   1c2f8:	41 ff d4             	callq  *%r12
   1c2fb:	39 dd                	cmp    %ebx,%ebp
   1c2fd:	75 f1                	jne    1c2f0 <_fdwalk_portable+0x30>
   1c2ff:	48 83 c4 08          	add    $0x8,%rsp
   1c303:	31 c0                	xor    %eax,%eax
   1c305:	5b                   	pop    %rbx
   1c306:	5d                   	pop    %rbp
   1c307:	41 5c                	pop    %r12
   1c309:	41 5d                	pop    %r13
   1c30b:	c3                   	retq   

000000000001c30c <.annobin__fdwalk_portable.end>:
   1c30c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c310 <fdwalk>:
   1c310:	f3 0f 1e fa          	endbr64 
   1c314:	41 57                	push   %r15
   1c316:	41 56                	push   %r14
   1c318:	41 55                	push   %r13
   1c31a:	41 54                	push   %r12
   1c31c:	55                   	push   %rbp
   1c31d:	53                   	push   %rbx
   1c31e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1c325:	48 83 0c 24 00       	orq    $0x0,(%rsp)
   1c32a:	48 83 ec 28          	sub    $0x28,%rsp
   1c32e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1c333:	49 89 fd             	mov    %rdi,%r13
   1c336:	be 00 00 01 00       	mov    $0x10000,%esi
   1c33b:	48 8d 3d 81 2d 02 00 	lea    0x22d81(%rip),%rdi        # 3f0c3 <__FUNCTION__.5439+0x13>
   1c342:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   1c347:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c34e:	00 00 
   1c350:	48 89 84 24 18 10 00 	mov    %rax,0x1018(%rsp)
   1c357:	00 
   1c358:	31 c0                	xor    %eax,%eax
   1c35a:	e8 01 44 ff ff       	callq  10760 <open@plt>
   1c35f:	41 89 c4             	mov    %eax,%r12d
   1c362:	85 c0                	test   %eax,%eax
   1c364:	0f 88 c8 00 00 00    	js     1c432 <fdwalk+0x122>
   1c36a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c370:	b9 00 10 00 00       	mov    $0x1000,%ecx
   1c375:	48 89 da             	mov    %rbx,%rdx
   1c378:	44 89 e6             	mov    %r12d,%esi
   1c37b:	bf d9 00 00 00       	mov    $0xd9,%edi
   1c380:	31 c0                	xor    %eax,%eax
   1c382:	e8 09 3f ff ff       	callq  10290 <syscall@plt>
   1c387:	89 c5                	mov    %eax,%ebp
   1c389:	85 c0                	test   %eax,%eax
   1c38b:	7e 76                	jle    1c403 <fdwalk+0xf3>
   1c38d:	45 31 f6             	xor    %r14d,%r14d
   1c390:	4d 63 fe             	movslq %r14d,%r15
   1c393:	49 01 df             	add    %rbx,%r15
   1c396:	41 0f be 47 13       	movsbl 0x13(%r15),%eax
   1c39b:	49 8d 57 13          	lea    0x13(%r15),%rdx
   1c39f:	84 c0                	test   %al,%al
   1c3a1:	74 27                	je     1c3ca <fdwalk+0xba>
   1c3a3:	31 f6                	xor    %esi,%esi
   1c3a5:	eb 1b                	jmp    1c3c2 <fdwalk+0xb2>
   1c3a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c3ae:	00 00 
   1c3b0:	48 83 c2 01          	add    $0x1,%rdx
   1c3b4:	8d 0c b6             	lea    (%rsi,%rsi,4),%ecx
   1c3b7:	8d 74 48 d0          	lea    -0x30(%rax,%rcx,2),%esi
   1c3bb:	0f be 02             	movsbl (%rdx),%eax
   1c3be:	84 c0                	test   %al,%al
   1c3c0:	74 1e                	je     1c3e0 <fdwalk+0xd0>
   1c3c2:	8d 48 d0             	lea    -0x30(%rax),%ecx
   1c3c5:	80 f9 09             	cmp    $0x9,%cl
   1c3c8:	76 e6                	jbe    1c3b0 <fdwalk+0xa0>
   1c3ca:	41 0f b7 47 10       	movzwl 0x10(%r15),%eax
   1c3cf:	41 01 c6             	add    %eax,%r14d
   1c3d2:	44 39 f5             	cmp    %r14d,%ebp
   1c3d5:	7f b9                	jg     1c390 <fdwalk+0x80>
   1c3d7:	eb 97                	jmp    1c370 <fdwalk+0x60>
   1c3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c3e0:	85 f6                	test   %esi,%esi
   1c3e2:	7e e6                	jle    1c3ca <fdwalk+0xba>
   1c3e4:	41 39 f4             	cmp    %esi,%r12d
   1c3e7:	74 e1                	je     1c3ca <fdwalk+0xba>
   1c3e9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1c3ee:	41 ff d5             	callq  *%r13
   1c3f1:	41 0f b7 47 10       	movzwl 0x10(%r15),%eax
   1c3f6:	41 01 c6             	add    %eax,%r14d
   1c3f9:	44 39 f5             	cmp    %r14d,%ebp
   1c3fc:	7f 92                	jg     1c390 <fdwalk+0x80>
   1c3fe:	e9 6d ff ff ff       	jmpq   1c370 <fdwalk+0x60>
   1c403:	44 89 e7             	mov    %r12d,%edi
   1c406:	e8 a5 3c ff ff       	callq  100b0 <close@plt>
   1c40b:	31 c0                	xor    %eax,%eax
   1c40d:	48 8b bc 24 18 10 00 	mov    0x1018(%rsp),%rdi
   1c414:	00 
   1c415:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1c41c:	00 00 
   1c41e:	75 21                	jne    1c441 <fdwalk+0x131>
   1c420:	48 81 c4 28 10 00 00 	add    $0x1028,%rsp
   1c427:	5b                   	pop    %rbx
   1c428:	5d                   	pop    %rbp
   1c429:	41 5c                	pop    %r12
   1c42b:	41 5d                	pop    %r13
   1c42d:	41 5e                	pop    %r14
   1c42f:	41 5f                	pop    %r15
   1c431:	c3                   	retq   
   1c432:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1c437:	4c 89 ef             	mov    %r13,%rdi
   1c43a:	e8 81 fe ff ff       	callq  1c2c0 <_fdwalk_portable>
   1c43f:	eb cc                	jmp    1c40d <fdwalk+0xfd>
   1c441:	e8 0a 3a ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001c446 <.annobin_fdwalk.c_end>:
   1c446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c44d:	00 00 00 

000000000001c450 <fileref_create_nonempty>:
   1c450:	41 55                	push   %r13
   1c452:	4c 8d 0d 78 2c 02 00 	lea    0x22c78(%rip),%r9        # 3f0d1 <__FUNCTION__.5439+0x21>
   1c459:	4d 89 c5             	mov    %r8,%r13
   1c45c:	49 89 f0             	mov    %rsi,%r8
   1c45f:	41 54                	push   %r12
   1c461:	49 89 f4             	mov    %rsi,%r12
   1c464:	48 8d 35 74 2c 02 00 	lea    0x22c74(%rip),%rsi        # 3f0df <__FUNCTION__.5439+0x2f>
   1c46b:	55                   	push   %rbp
   1c46c:	48 89 fd             	mov    %rdi,%rbp
   1c46f:	53                   	push   %rbx
   1c470:	48 83 ec 10          	sub    $0x10,%rsp
   1c474:	8b 41 18             	mov    0x18(%rcx),%eax
   1c477:	50                   	push   %rax
   1c478:	48 8d 05 83 2c 02 00 	lea    0x22c83(%rip),%rax        # 3f102 <__FUNCTION__.5439+0x52>
   1c47f:	50                   	push   %rax
   1c480:	48 8d 05 80 2c 02 00 	lea    0x22c80(%rip),%rax        # 3f107 <__FUNCTION__.5439+0x57>
   1c487:	ff 71 68             	pushq  0x68(%rcx)
   1c48a:	50                   	push   %rax
   1c48b:	48 8d 05 7b 2c 02 00 	lea    0x22c7b(%rip),%rax        # 3f10d <__FUNCTION__.5439+0x5d>
   1c492:	ff 71 58             	pushq  0x58(%rcx)
   1c495:	50                   	push   %rax
   1c496:	48 8d 05 a7 1f 02 00 	lea    0x21fa7(%rip),%rax        # 3e444 <__PRETTY_FUNCTION__.5439+0x104>
   1c49d:	ff 71 30             	pushq  0x30(%rcx)
   1c4a0:	48 8d 0d 2f 2c 02 00 	lea    0x22c2f(%rip),%rcx        # 3f0d6 <__FUNCTION__.5439+0x26>
   1c4a7:	50                   	push   %rax
   1c4a8:	31 c0                	xor    %eax,%eax
   1c4aa:	52                   	push   %rdx
   1c4ab:	48 89 fa             	mov    %rdi,%rdx
   1c4ae:	48 8d 3d 2f 2c 02 00 	lea    0x22c2f(%rip),%rdi        # 3f0e4 <__FUNCTION__.5439+0x34>
   1c4b5:	e8 b6 3e ff ff       	callq  10370 <json_pack@plt>
   1c4ba:	48 83 c4 50          	add    $0x50,%rsp
   1c4be:	48 89 c3             	mov    %rax,%rbx
   1c4c1:	48 85 c0             	test   %rax,%rax
   1c4c4:	74 12                	je     1c4d8 <fileref_create_nonempty+0x88>
   1c4c6:	48 83 c4 08          	add    $0x8,%rsp
   1c4ca:	48 89 d8             	mov    %rbx,%rax
   1c4cd:	5b                   	pop    %rbx
   1c4ce:	5d                   	pop    %rbp
   1c4cf:	41 5c                	pop    %r12
   1c4d1:	41 5d                	pop    %r13
   1c4d3:	c3                   	retq   
   1c4d4:	0f 1f 40 00          	nopl   0x0(%rax)
   1c4d8:	4c 89 e1             	mov    %r12,%rcx
   1c4db:	48 89 ea             	mov    %rbp,%rdx
   1c4de:	48 8d 35 23 2d 02 00 	lea    0x22d23(%rip),%rsi        # 3f208 <__FUNCTION__.5439+0x158>
   1c4e5:	4c 89 ef             	mov    %r13,%rdi
   1c4e8:	31 c0                	xor    %eax,%eax
   1c4ea:	e8 c1 fb ff ff       	callq  1c0b0 <errprintf>
   1c4ef:	e8 1c 36 ff ff       	callq  fb10 <__errno_location@plt>
   1c4f4:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1c4fa:	eb ca                	jmp    1c4c6 <fileref_create_nonempty+0x76>

000000000001c4fc <.annobin_fileref_create_ex.start>:
   1c4fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c500 <fileref_create_ex>:
   1c500:	f3 0f 1e fa          	endbr64 
   1c504:	41 57                	push   %r15
   1c506:	49 89 d7             	mov    %rdx,%r15
   1c509:	41 56                	push   %r14
   1c50b:	49 89 f6             	mov    %rsi,%r14
   1c50e:	41 55                	push   %r13
   1c510:	49 89 cd             	mov    %rcx,%r13
   1c513:	41 54                	push   %r12
   1c515:	49 89 fc             	mov    %rdi,%r12
   1c518:	55                   	push   %rbp
   1c519:	53                   	push   %rbx
   1c51a:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   1c521:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1c526:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c52d:	00 00 
   1c52f:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   1c536:	00 
   1c537:	31 c0                	xor    %eax,%eax
   1c539:	48 85 d2             	test   %rdx,%rdx
   1c53c:	74 21                	je     1c55f <fileref_create_ex+0x5f>
   1c53e:	8b 52 08             	mov    0x8(%rdx),%edx
   1c541:	85 d2                	test   %edx,%edx
   1c543:	0f 88 6f 01 00 00    	js     1c6b8 <fileref_create_ex+0x1b8>
   1c549:	49 83 3f 00          	cmpq   $0x0,(%r15)
   1c54d:	0f 84 65 01 00 00    	je     1c6b8 <fileref_create_ex+0x1b8>
   1c553:	41 8b 47 0c          	mov    0xc(%r15),%eax
   1c557:	85 c0                	test   %eax,%eax
   1c559:	0f 88 59 01 00 00    	js     1c6b8 <fileref_create_ex+0x1b8>
   1c55f:	41 0f b6 04 24       	movzbl (%r12),%eax
   1c564:	4d 85 f6             	test   %r14,%r14
   1c567:	4c 89 e3             	mov    %r12,%rbx
   1c56a:	4d 0f 44 f4          	cmove  %r12,%r14
   1c56e:	3c 2f                	cmp    $0x2f,%al
   1c570:	75 11                	jne    1c583 <fileref_create_ex+0x83>
   1c572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c578:	48 83 c3 01          	add    $0x1,%rbx
   1c57c:	0f b6 03             	movzbl (%rbx),%eax
   1c57f:	3c 2f                	cmp    $0x2f,%al
   1c581:	74 f5                	je     1c578 <fileref_create_ex+0x78>
   1c583:	84 c0                	test   %al,%al
   1c585:	48 8d 05 a2 2a 02 00 	lea    0x22aa2(%rip),%rax        # 3f02e <__PRETTY_FUNCTION__.4363+0x116>
   1c58c:	be 00 00 02 00       	mov    $0x20000,%esi
   1c591:	4c 89 f7             	mov    %r14,%rdi
   1c594:	48 0f 44 d8          	cmove  %rax,%rbx
   1c598:	31 c0                	xor    %eax,%eax
   1c59a:	e8 c1 41 ff ff       	callq  10760 <open@plt>
   1c59f:	89 c5                	mov    %eax,%ebp
  return __lxstat (_STAT_VER, __path, __statbuf);
   1c5a1:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   1c5a6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c5ab:	48 89 c2             	mov    %rax,%rdx
   1c5ae:	85 ed                	test   %ebp,%ebp
   1c5b0:	0f 88 ea 00 00 00    	js     1c6a0 <fileref_create_ex+0x1a0>
  return __fxstat (_STAT_VER, __fd, __statbuf);
   1c5b6:	89 ee                	mov    %ebp,%esi
   1c5b8:	bf 01 00 00 00       	mov    $0x1,%edi
   1c5bd:	e8 2e 3f ff ff       	callq  104f0 <__fxstat@plt>
   1c5c2:	85 c0                	test   %eax,%eax
   1c5c4:	0f 88 57 04 00 00    	js     1ca21 <fileref_create_ex+0x521>
   1c5ca:	8b 54 24 78          	mov    0x78(%rsp),%edx
   1c5ce:	89 d0                	mov    %edx,%eax
   1c5d0:	25 00 f0 00 00       	and    $0xf000,%eax
   1c5d5:	3d 00 80 00 00       	cmp    $0x8000,%eax
   1c5da:	0f 84 10 01 00 00    	je     1c6f0 <fileref_create_ex+0x1f0>
   1c5e0:	3d 00 a0 00 00       	cmp    $0xa000,%eax
   1c5e5:	0f 84 55 02 00 00    	je     1c840 <fileref_create_ex+0x340>
   1c5eb:	3d 00 40 00 00       	cmp    $0x4000,%eax
   1c5f0:	0f 85 f2 01 00 00    	jne    1c7e8 <fileref_create_ex+0x2e8>
   1c5f6:	48 83 ec 08          	sub    $0x8,%rsp
   1c5fa:	48 8d 05 01 2b 02 00 	lea    0x22b01(%rip),%rax        # 3f102 <__FUNCTION__.5439+0x52>
   1c601:	4c 8d 0d ff 2a 02 00 	lea    0x22aff(%rip),%r9        # 3f107 <__FUNCTION__.5439+0x57>
   1c608:	45 31 f6             	xor    %r14d,%r14d
   1c60b:	52                   	push   %rdx
   1c60c:	48 8d 0d fa 2a 02 00 	lea    0x22afa(%rip),%rcx        # 3f10d <__FUNCTION__.5439+0x5d>
   1c613:	48 89 da             	mov    %rbx,%rdx
   1c616:	48 8d 35 c2 2a 02 00 	lea    0x22ac2(%rip),%rsi        # 3f0df <__FUNCTION__.5439+0x2f>
   1c61d:	50                   	push   %rax
   1c61e:	48 8d 3d 79 2b 02 00 	lea    0x22b79(%rip),%rdi        # 3f19e <__FUNCTION__.5439+0xee>
   1c625:	31 c0                	xor    %eax,%eax
   1c627:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   1c62e:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1c635:	4c 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%r8
   1c63c:	00 
   1c63d:	e8 2e 3d ff ff       	callq  10370 <json_pack@plt>
   1c642:	48 83 c4 20          	add    $0x20,%rsp
   1c646:	49 89 c7             	mov    %rax,%r15
   1c649:	48 85 c0             	test   %rax,%rax
   1c64c:	0f 84 e2 05 00 00    	je     1cc34 <fileref_create_ex+0x734>
   1c652:	4d 85 ed             	test   %r13,%r13
   1c655:	0f 84 76 01 00 00    	je     1c7d1 <fileref_create_ex+0x2d1>
   1c65b:	4d 89 65 00          	mov    %r12,0x0(%r13)
   1c65f:	4d 89 75 08          	mov    %r14,0x8(%r13)
   1c663:	85 ed                	test   %ebp,%ebp
   1c665:	78 07                	js     1c66e <fileref_create_ex+0x16e>
   1c667:	89 ef                	mov    %ebp,%edi
   1c669:	e8 42 3a ff ff       	callq  100b0 <close@plt>
   1c66e:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
   1c675:	00 
   1c676:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1c67d:	00 00 
   1c67f:	4c 89 f8             	mov    %r15,%rax
   1c682:	0f 85 6f 09 00 00    	jne    1cff7 <fileref_create_ex+0xaf7>
   1c688:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   1c68f:	5b                   	pop    %rbx
   1c690:	5d                   	pop    %rbp
   1c691:	41 5c                	pop    %r12
   1c693:	41 5d                	pop    %r13
   1c695:	41 5e                	pop    %r14
   1c697:	41 5f                	pop    %r15
   1c699:	c3                   	retq   
   1c69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return __lxstat (_STAT_VER, __path, __statbuf);
   1c6a0:	4c 89 f6             	mov    %r14,%rsi
   1c6a3:	bf 01 00 00 00       	mov    $0x1,%edi
   1c6a8:	e8 93 37 ff ff       	callq  fe40 <__lxstat@plt>
   1c6ad:	e9 10 ff ff ff       	jmpq   1c5c2 <fileref_create_ex+0xc2>
   1c6b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c6b8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1c6bd:	48 8d 35 6c 2b 02 00 	lea    0x22b6c(%rip),%rsi        # 3f230 <__FUNCTION__.5439+0x180>
   1c6c4:	31 c0                	xor    %eax,%eax
   1c6c6:	bb 16 00 00 00       	mov    $0x16,%ebx
   1c6cb:	e8 e0 f9 ff ff       	callq  1c0b0 <errprintf>
   1c6d0:	e8 3b 34 ff ff       	callq  fb10 <__errno_location@plt>
   1c6d5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1c6db:	49 89 c2             	mov    %rax,%r10
   1c6de:	41 89 1a             	mov    %ebx,(%r10)
   1c6e1:	45 31 ff             	xor    %r15d,%r15d
   1c6e4:	eb 88                	jmp    1c66e <fileref_create_ex+0x16e>
   1c6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c6ed:	00 00 00 
   1c6f0:	ba 03 00 00 00       	mov    $0x3,%edx
   1c6f5:	31 f6                	xor    %esi,%esi
   1c6f7:	89 ef                	mov    %ebp,%edi
   1c6f9:	e8 c2 38 ff ff       	callq  ffc0 <lseek@plt>
   1c6fe:	8b 54 24 78          	mov    0x78(%rsp),%edx
   1c702:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c706:	0f 84 4c 03 00 00    	je     1ca58 <fileref_create_ex+0x558>
   1c70c:	89 d0                	mov    %edx,%eax
   1c70e:	25 00 f0 00 00       	and    $0xf000,%eax
   1c713:	3d 00 80 00 00       	cmp    $0x8000,%eax
   1c718:	0f 85 c2 fe ff ff    	jne    1c5e0 <fileref_create_ex+0xe0>
   1c71e:	4c 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14
   1c725:	00 
   1c726:	4d 85 ff             	test   %r15,%r15
   1c729:	74 0d                	je     1c738 <fileref_create_ex+0x238>
   1c72b:	49 63 47 0c          	movslq 0xc(%r15),%rax
   1c72f:	4c 39 f0             	cmp    %r14,%rax
   1c732:	0f 8c e2 01 00 00    	jl     1c91a <fileref_create_ex+0x41a>
   1c738:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   1c73d:	89 ef                	mov    %ebp,%edi
   1c73f:	e8 ec 4d 00 00       	callq  21530 <read_all>
   1c744:	48 85 c0             	test   %rax,%rax
   1c747:	0f 88 62 07 00 00    	js     1ceaf <fileref_create_ex+0x9af>
   1c74d:	4c 39 f0             	cmp    %r14,%rax
   1c750:	0f 82 7a 04 00 00    	jb     1cbd0 <fileref_create_ex+0x6d0>
   1c756:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   1c75b:	4d 85 e4             	test   %r12,%r12
   1c75e:	0f 84 0c 07 00 00    	je     1ce70 <fileref_create_ex+0x970>
   1c764:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
   1c76b:	00 
   1c76c:	4c 89 e7             	mov    %r12,%rdi
   1c76f:	e8 9c 3f ff ff       	callq  10710 <json_stringn@plt>
   1c774:	49 89 c6             	mov    %rax,%r14
   1c777:	48 85 c0             	test   %rax,%rax
   1c77a:	0f 84 00 07 00 00    	je     1ce80 <fileref_create_ex+0x980>
   1c780:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1c785:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1c78a:	48 89 c2             	mov    %rax,%rdx
   1c78d:	48 89 df             	mov    %rbx,%rdi
   1c790:	48 8d 35 bc 29 02 00 	lea    0x229bc(%rip),%rsi        # 3f153 <__FUNCTION__.5439+0xa3>
   1c797:	e8 b4 fc ff ff       	callq  1c450 <fileref_create_nonempty>
   1c79c:	49 89 c7             	mov    %rax,%r15
   1c79f:	48 85 c0             	test   %rax,%rax
   1c7a2:	0f 84 ca 05 00 00    	je     1cd72 <fileref_create_ex+0x872>

/* do not call json_delete directly */
void json_delete(json_t *json);

static JSON_INLINE void json_decref(json_t *json) {
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1c7a8:	49 8b 46 08          	mov    0x8(%r14),%rax
   1c7ac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c7b0:	0f 85 5a 03 00 00    	jne    1cb10 <fileref_create_ex+0x610>
   1c7b6:	4c 89 e7             	mov    %r12,%rdi
   1c7b9:	45 31 f6             	xor    %r14d,%r14d
   1c7bc:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   1c7c3:	e8 e8 32 ff ff       	callq  fab0 <free@plt>
   1c7c8:	4d 85 ed             	test   %r13,%r13
   1c7cb:	0f 85 8a fe ff ff    	jne    1c65b <fileref_create_ex+0x15b>
   1c7d1:	4c 89 f6             	mov    %r14,%rsi
   1c7d4:	4c 89 e7             	mov    %r12,%rdi
   1c7d7:	e8 04 3e ff ff       	callq  105e0 <munmap@plt>
   1c7dc:	e9 82 fe ff ff       	jmpq   1c663 <fileref_create_ex+0x163>
   1c7e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c7e8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1c7ed:	4c 89 e2             	mov    %r12,%rdx
   1c7f0:	31 c0                	xor    %eax,%eax
   1c7f2:	bb 16 00 00 00       	mov    $0x16,%ebx
   1c7f7:	48 8d 35 b2 29 02 00 	lea    0x229b2(%rip),%rsi        # 3f1b0 <__FUNCTION__.5439+0x100>
   1c7fe:	e8 ad f8 ff ff       	callq  1c0b0 <errprintf>
   1c803:	e8 08 33 ff ff       	callq  fb10 <__errno_location@plt>
   1c808:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1c80e:	49 89 c2             	mov    %rax,%r10
   1c811:	85 ed                	test   %ebp,%ebp
   1c813:	0f 88 c5 fe ff ff    	js     1c6de <fileref_create_ex+0x1de>
   1c819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c820:	89 ef                	mov    %ebp,%edi
   1c822:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1c827:	e8 84 38 ff ff       	callq  100b0 <close@plt>
   1c82c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1c831:	e9 a8 fe ff ff       	jmpq   1c6de <fileref_create_ex+0x1de>
   1c836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c83d:	00 00 00 
   1c840:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1c847:	00 
   1c848:	bf 01 00 00 00       	mov    $0x1,%edi
   1c84d:	49 8d 77 01          	lea    0x1(%r15),%rsi
   1c851:	e8 ba 39 ff ff       	callq  10210 <calloc@plt>
   1c856:	49 89 c4             	mov    %rax,%r12
   1c859:	48 85 c0             	test   %rax,%rax
   1c85c:	0f 84 9e 03 00 00    	je     1cc00 <fileref_create_ex+0x700>

__fortify_function __nonnull ((1, 2)) __wur ssize_t
__NTH (readlink (const char *__restrict __path, char *__restrict __buf,
		 size_t __len))
{
  return __glibc_fortify (readlink, __len, sizeof (char),
   1c862:	4c 89 fa             	mov    %r15,%rdx
   1c865:	48 89 c6             	mov    %rax,%rsi
   1c868:	4c 89 f7             	mov    %r14,%rdi
   1c86b:	e8 40 34 ff ff       	callq  fcb0 <readlink@plt>
   1c870:	48 85 c0             	test   %rax,%rax
   1c873:	0f 88 87 03 00 00    	js     1cc00 <fileref_create_ex+0x700>
   1c879:	48 83 ec 08          	sub    $0x8,%rsp
   1c87d:	4d 89 e0             	mov    %r12,%r8
   1c880:	48 89 da             	mov    %rbx,%rdx
   1c883:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
   1c88a:	4c 8d 0d 7c 28 02 00 	lea    0x2287c(%rip),%r9        # 3f10d <__FUNCTION__.5439+0x5d>
   1c891:	48 8d 0d 39 28 02 00 	lea    0x22839(%rip),%rcx        # 3f0d1 <__FUNCTION__.5439+0x21>
   1c898:	48 8d 35 40 28 02 00 	lea    0x22840(%rip),%rsi        # 3f0df <__FUNCTION__.5439+0x2f>
   1c89f:	48 8d 3d e2 28 02 00 	lea    0x228e2(%rip),%rdi        # 3f188 <__FUNCTION__.5439+0xd8>
   1c8a6:	50                   	push   %rax
   1c8a7:	48 8d 05 54 28 02 00 	lea    0x22854(%rip),%rax        # 3f102 <__FUNCTION__.5439+0x52>
   1c8ae:	50                   	push   %rax
   1c8af:	48 8d 05 51 28 02 00 	lea    0x22851(%rip),%rax        # 3f107 <__FUNCTION__.5439+0x57>
   1c8b6:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1c8bd:	50                   	push   %rax
   1c8be:	31 c0                	xor    %eax,%eax
   1c8c0:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1c8c7:	e8 a4 3a ff ff       	callq  10370 <json_pack@plt>
   1c8cc:	48 83 c4 30          	add    $0x30,%rsp
   1c8d0:	49 89 c7             	mov    %rax,%r15
   1c8d3:	48 85 c0             	test   %rax,%rax
   1c8d6:	0f 85 da fe ff ff    	jne    1c7b6 <fileref_create_ex+0x2b6>
   1c8dc:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1c8e1:	48 89 da             	mov    %rbx,%rdx
   1c8e4:	48 8d 35 35 2a 02 00 	lea    0x22a35(%rip),%rsi        # 3f320 <__FUNCTION__.5439+0x270>
   1c8eb:	31 c0                	xor    %eax,%eax
   1c8ed:	e8 be f7 ff ff       	callq  1c0b0 <errprintf>
   1c8f2:	e8 19 32 ff ff       	callq  fb10 <__errno_location@plt>
   1c8f7:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1c8fd:	49 89 c2             	mov    %rax,%r10
   1c900:	4c 89 e7             	mov    %r12,%rdi
   1c903:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1c908:	e8 a3 31 ff ff       	callq  fab0 <free@plt>
   1c90d:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1c912:	41 8b 1a             	mov    (%r10),%ebx
   1c915:	e9 f7 fe ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1c91a:	45 31 c9             	xor    %r9d,%r9d
   1c91d:	41 89 e8             	mov    %ebp,%r8d
   1c920:	b9 02 00 00 00       	mov    $0x2,%ecx
   1c925:	ba 01 00 00 00       	mov    $0x1,%edx
   1c92a:	4c 89 f6             	mov    %r14,%rsi
   1c92d:	31 ff                	xor    %edi,%edi
   1c92f:	e8 3c 35 ff ff       	callq  fe70 <mmap@plt>
   1c934:	49 89 c4             	mov    %rax,%r12
   1c937:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c93b:	0f 84 40 06 00 00    	je     1cf81 <fileref_create_ex+0xa81>
   1c941:	41 8b 47 08          	mov    0x8(%r15),%eax
   1c945:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
   1c94c:	00 
   1c94d:	85 c0                	test   %eax,%eax
   1c94f:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1c954:	0f 44 c1             	cmove  %ecx,%eax
   1c957:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   1c95b:	49 8b 07             	mov    (%r15),%rax
   1c95e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1c963:	85 ed                	test   %ebp,%ebp
   1c965:	0f 88 f5 06 00 00    	js     1d060 <fileref_create_ex+0xb60>
   1c96b:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   1c971:	0f 84 ca 06 00 00    	je     1d041 <fileref_create_ex+0xb41>
   1c977:	e8 a4 40 ff ff       	callq  10a20 <json_array@plt>
   1c97c:	45 31 ff             	xor    %r15d,%r15d
   1c97f:	48 8d 8c 24 f0 00 00 	lea    0xf0(%rsp),%rcx
   1c986:	00 
   1c987:	4d 89 f9             	mov    %r15,%r9
   1c98a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c98f:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1c994:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1c999:	48 85 c0             	test   %rax,%rax
   1c99c:	0f 84 87 01 00 00    	je     1cb29 <fileref_create_ex+0x629>
   1c9a2:	4d 39 cf             	cmp    %r9,%r15
   1c9a5:	76 22                	jbe    1c9c9 <fileref_create_ex+0x4c9>
   1c9a7:	ba 03 00 00 00       	mov    $0x3,%edx
   1c9ac:	4c 89 ce             	mov    %r9,%rsi
   1c9af:	89 ef                	mov    %ebp,%edi
   1c9b1:	e8 0a 36 ff ff       	callq  ffc0 <lseek@plt>
   1c9b6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c9ba:	0f 84 a2 02 00 00    	je     1cc62 <fileref_create_ex+0x762>
   1c9c0:	49 39 c7             	cmp    %rax,%r15
   1c9c3:	0f 87 ef 02 00 00    	ja     1ccb8 <fileref_create_ex+0x7b8>
   1c9c9:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1c9ce:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1c9d3:	48 89 df             	mov    %rbx,%rdi
   1c9d6:	48 8d 35 ed 27 02 00 	lea    0x227ed(%rip),%rsi        # 3f1ca <__FUNCTION__.5439+0x11a>
   1c9dd:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1c9e2:	e8 69 fa ff ff       	callq  1c450 <fileref_create_nonempty>
   1c9e7:	49 89 c7             	mov    %rax,%r15
   1c9ea:	48 85 c0             	test   %rax,%rax
   1c9ed:	0f 84 98 01 00 00    	je     1cb8b <fileref_create_ex+0x68b>
   1c9f3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1c9f8:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1c9fc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ca00:	0f 84 4c fc ff ff    	je     1c652 <fileref_create_ex+0x152>
   1ca06:	f0 48 83 69 08 01    	lock subq $0x1,0x8(%rcx)
   1ca0c:	0f 85 40 fc ff ff    	jne    1c652 <fileref_create_ex+0x152>
        json_delete(json);
   1ca12:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1ca17:	e8 04 36 ff ff       	callq  10020 <json_delete@plt>
   1ca1c:	e9 31 fc ff ff       	jmpq   1c652 <fileref_create_ex+0x152>
   1ca21:	e8 ea 30 ff ff       	callq  fb10 <__errno_location@plt>
   1ca26:	8b 38                	mov    (%rax),%edi
   1ca28:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ca2d:	e8 9e 3f ff ff       	callq  109d0 <strerror@plt>
   1ca32:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1ca37:	4c 89 e2             	mov    %r12,%rdx
   1ca3a:	48 8d 35 40 27 02 00 	lea    0x22740(%rip),%rsi        # 3f181 <__FUNCTION__.5439+0xd1>
   1ca41:	48 89 c1             	mov    %rax,%rcx
   1ca44:	31 c0                	xor    %eax,%eax
   1ca46:	e8 65 f6 ff ff       	callq  1c0b0 <errprintf>
   1ca4b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ca50:	41 8b 1a             	mov    (%r10),%ebx
   1ca53:	e9 b9 fd ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1ca58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ca5d:	e8 ae 30 ff ff       	callq  fb10 <__errno_location@plt>
   1ca62:	8b 54 24 78          	mov    0x78(%rsp),%edx
   1ca66:	83 38 06             	cmpl   $0x6,(%rax)
   1ca69:	0f 85 9d fc ff ff    	jne    1c70c <fileref_create_ex+0x20c>
   1ca6f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ca74:	48 83 ec 08          	sub    $0x8,%rsp
   1ca78:	48 8d 05 83 26 02 00 	lea    0x22683(%rip),%rax        # 3f102 <__FUNCTION__.5439+0x52>
   1ca7f:	4c 8d 0d 87 26 02 00 	lea    0x22687(%rip),%r9        # 3f10d <__FUNCTION__.5439+0x5d>
   1ca86:	52                   	push   %rdx
   1ca87:	48 89 da             	mov    %rbx,%rdx
   1ca8a:	45 31 f6             	xor    %r14d,%r14d
   1ca8d:	48 8d 0d b0 19 02 00 	lea    0x219b0(%rip),%rcx        # 3e444 <__PRETTY_FUNCTION__.5439+0x104>
   1ca94:	50                   	push   %rax
   1ca95:	48 8d 05 6b 26 02 00 	lea    0x2266b(%rip),%rax        # 3f107 <__FUNCTION__.5439+0x57>
   1ca9c:	48 8d 35 3c 26 02 00 	lea    0x2263c(%rip),%rsi        # 3f0df <__FUNCTION__.5439+0x2f>
   1caa3:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1caaa:	48 8d 3d 62 26 02 00 	lea    0x22662(%rip),%rdi        # 3f113 <__FUNCTION__.5439+0x63>
   1cab1:	50                   	push   %rax
   1cab2:	31 c0                	xor    %eax,%eax
   1cab4:	ff b4 24 e0 00 00 00 	pushq  0xe0(%rsp)
   1cabb:	4c 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%r8
   1cac2:	00 
   1cac3:	e8 a8 38 ff ff       	callq  10370 <json_pack@plt>
   1cac8:	48 83 c4 30          	add    $0x30,%rsp
   1cacc:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1cad1:	49 89 c7             	mov    %rax,%r15
   1cad4:	4d 89 dc             	mov    %r11,%r12
   1cad7:	48 85 c0             	test   %rax,%rax
   1cada:	0f 85 72 fb ff ff    	jne    1c652 <fileref_create_ex+0x152>
   1cae0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cae5:	48 89 da             	mov    %rbx,%rdx
   1cae8:	48 8d 35 69 27 02 00 	lea    0x22769(%rip),%rsi        # 3f258 <__FUNCTION__.5439+0x1a8>
   1caef:	31 c0                	xor    %eax,%eax
   1caf1:	bb 0c 00 00 00       	mov    $0xc,%ebx
   1caf6:	e8 b5 f5 ff ff       	callq  1c0b0 <errprintf>
   1cafb:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cb00:	41 c7 02 0c 00 00 00 	movl   $0xc,(%r10)
   1cb07:	e9 05 fd ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1cb0c:	0f 1f 40 00          	nopl   0x0(%rax)
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1cb10:	f0 49 83 6e 08 01    	lock subq $0x1,0x8(%r14)
   1cb16:	0f 85 9a fc ff ff    	jne    1c7b6 <fileref_create_ex+0x2b6>
        json_delete(json);
   1cb1c:	4c 89 f7             	mov    %r14,%rdi
   1cb1f:	e8 fc 34 ff ff       	callq  10020 <json_delete@plt>
   1cb24:	e9 8d fc ff ff       	jmpq   1c7b6 <fileref_create_ex+0x2b6>
   1cb29:	e8 e2 2f ff ff       	callq  fb10 <__errno_location@plt>
   1cb2e:	41 bf 0c 00 00 00    	mov    $0xc,%r15d
   1cb34:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1cb3a:	49 89 c2             	mov    %rax,%r10
   1cb3d:	45 89 3a             	mov    %r15d,(%r10)
   1cb40:	44 89 ff             	mov    %r15d,%edi
   1cb43:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1cb48:	e8 83 3e ff ff       	callq  109d0 <strerror@plt>
   1cb4d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cb52:	48 89 da             	mov    %rbx,%rdx
   1cb55:	48 8d 35 24 27 02 00 	lea    0x22724(%rip),%rsi        # 3f280 <__FUNCTION__.5439+0x1d0>
   1cb5c:	48 89 c1             	mov    %rax,%rcx
   1cb5f:	31 c0                	xor    %eax,%eax
   1cb61:	e8 4a f5 ff ff       	callq  1c0b0 <errprintf>
   1cb66:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cb6b:	41 8b 1a             	mov    (%r10),%ebx
   1cb6e:	41 89 1a             	mov    %ebx,(%r10)
   1cb71:	4c 89 f6             	mov    %r14,%rsi
   1cb74:	4c 89 e7             	mov    %r12,%rdi
   1cb77:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1cb7c:	e8 5f 3a ff ff       	callq  105e0 <munmap@plt>
   1cb81:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1cb86:	e9 95 fc ff ff       	jmpq   1c820 <fileref_create_ex+0x320>
   1cb8b:	e8 80 2f ff ff       	callq  fb10 <__errno_location@plt>
   1cb90:	49 89 c2             	mov    %rax,%r10
   1cb93:	8b 18                	mov    (%rax),%ebx
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1cb95:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cb9a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cb9e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cba2:	74 ca                	je     1cb6e <fileref_create_ex+0x66e>
   1cba4:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1cba9:	f0 48 83 69 08 01    	lock subq $0x1,0x8(%rcx)
   1cbaf:	75 bd                	jne    1cb6e <fileref_create_ex+0x66e>
        json_delete(json);
   1cbb1:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1cbb6:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1cbbb:	e8 60 34 ff ff       	callq  10020 <json_delete@plt>
   1cbc0:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1cbc5:	eb a7                	jmp    1cb6e <fileref_create_ex+0x66e>
   1cbc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cbce:	00 00 
   1cbd0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cbd5:	4c 89 e2             	mov    %r12,%rdx
   1cbd8:	48 8d 35 65 25 02 00 	lea    0x22565(%rip),%rsi        # 3f144 <__FUNCTION__.5439+0x94>
   1cbdf:	31 c0                	xor    %eax,%eax
   1cbe1:	e8 ca f4 ff ff       	callq  1c0b0 <errprintf>
   1cbe6:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1cbeb:	e8 c0 2e ff ff       	callq  fab0 <free@plt>
   1cbf0:	e8 1b 2f ff ff       	callq  fb10 <__errno_location@plt>
   1cbf5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1cbfb:	e9 56 fb ff ff       	jmpq   1c756 <fileref_create_ex+0x256>
   1cc00:	e8 0b 2f ff ff       	callq  fb10 <__errno_location@plt>
   1cc05:	8b 38                	mov    (%rax),%edi
   1cc07:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cc0c:	e8 bf 3d ff ff       	callq  109d0 <strerror@plt>
   1cc11:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cc16:	4c 89 f2             	mov    %r14,%rdx
   1cc19:	48 8d 35 58 25 02 00 	lea    0x22558(%rip),%rsi        # 3f178 <__FUNCTION__.5439+0xc8>
   1cc20:	48 89 c1             	mov    %rax,%rcx
   1cc23:	31 c0                	xor    %eax,%eax
   1cc25:	e8 86 f4 ff ff       	callq  1c0b0 <errprintf>
   1cc2a:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cc2f:	e9 cc fc ff ff       	jmpq   1c900 <fileref_create_ex+0x400>
   1cc34:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cc39:	48 89 da             	mov    %rbx,%rdx
   1cc3c:	48 8d 35 05 27 02 00 	lea    0x22705(%rip),%rsi        # 3f348 <__FUNCTION__.5439+0x298>
   1cc43:	31 c0                	xor    %eax,%eax
   1cc45:	bb 0c 00 00 00       	mov    $0xc,%ebx
   1cc4a:	e8 61 f4 ff ff       	callq  1c0b0 <errprintf>
   1cc4f:	e8 bc 2e ff ff       	callq  fb10 <__errno_location@plt>
   1cc54:	49 89 c2             	mov    %rax,%r10
   1cc57:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1cc5d:	e9 af fb ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1cc62:	e8 a9 2e ff ff       	callq  fb10 <__errno_location@plt>
   1cc67:	44 8b 38             	mov    (%rax),%r15d
   1cc6a:	49 89 c2             	mov    %rax,%r10
   1cc6d:	41 83 ff 06          	cmp    $0x6,%r15d
   1cc71:	0f 84 52 fd ff ff    	je     1c9c9 <fileref_create_ex+0x4c9>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1cc77:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cc7c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1cc80:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cc84:	0f 84 b3 fe ff ff    	je     1cb3d <fileref_create_ex+0x63d>
   1cc8a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1cc8f:	f0 48 83 69 08 01    	lock subq $0x1,0x8(%rcx)
   1cc95:	0f 85 a2 fe ff ff    	jne    1cb3d <fileref_create_ex+0x63d>
        json_delete(json);
   1cc9b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1cca0:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1cca5:	e8 76 33 ff ff       	callq  10020 <json_delete@plt>
   1ccaa:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ccaf:	e9 89 fe ff ff       	jmpq   1cb3d <fileref_create_ex+0x63d>
   1ccb4:	0f 1f 40 00          	nopl   0x0(%rax)
   1ccb8:	ba 04 00 00 00       	mov    $0x4,%edx
   1ccbd:	48 89 c6             	mov    %rax,%rsi
   1ccc0:	89 ef                	mov    %ebp,%edi
   1ccc2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ccc7:	e8 f4 32 ff ff       	callq  ffc0 <lseek@plt>
   1cccc:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1ccd1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ccd5:	0f 84 21 03 00 00    	je     1cffc <fileref_create_ex+0xafc>
   1ccdb:	8b 4c 24 3c          	mov    0x3c(%rsp),%ecx
   1ccdf:	44 29 c8             	sub    %r9d,%eax
   1cce2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1cce7:	4b 8d 34 0c          	lea    (%r12,%r9,1),%rsi
   1cceb:	41 b8 48 00 00 00    	mov    $0x48,%r8d
   1ccf1:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
   1ccf6:	39 c1                	cmp    %eax,%ecx
   1ccf8:	0f 4e c1             	cmovle %ecx,%eax
   1ccfb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1cd00:	89 c2                	mov    %eax,%edx
   1cd02:	48 98                	cltq   
   1cd04:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1cd09:	e8 82 d1 ff ff       	callq  19e90 <blobref_hash>
   1cd0e:	85 c0                	test   %eax,%eax
   1cd10:	0f 88 e6 02 00 00    	js     1cffc <fileref_create_ex+0xafc>
   1cd16:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   1cd1b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1cd20:	31 c0                	xor    %eax,%eax
   1cd22:	48 8d 3d 13 24 02 00 	lea    0x22413(%rip),%rdi        # 3f13c <__FUNCTION__.5439+0x8c>
   1cd29:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1cd2e:	4c 89 ce             	mov    %r9,%rsi
   1cd31:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1cd36:	e8 35 36 ff ff       	callq  10370 <json_pack@plt>
   1cd3b:	48 85 c0             	test   %rax,%rax
   1cd3e:	0f 84 da 02 00 00    	je     1d01e <fileref_create_ex+0xb1e>
   1cd44:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1cd49:	48 89 c6             	mov    %rax,%rsi
   1cd4c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cd51:	e8 6a 3d ff ff       	callq  10ac0 <json_array_append_new@plt>
   1cd56:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1cd5b:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
   1cd60:	85 c0                	test   %eax,%eax
   1cd62:	0f 88 a4 02 00 00    	js     1d00c <fileref_create_ex+0xb0c>
   1cd68:	4c 03 4c 24 20       	add    0x20(%rsp),%r9
   1cd6d:	e9 30 fc ff ff       	jmpq   1c9a2 <fileref_create_ex+0x4a2>
   1cd72:	e8 99 2d ff ff       	callq  fb10 <__errno_location@plt>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1cd77:	49 8b 56 08          	mov    0x8(%r14),%rdx
   1cd7b:	49 89 c2             	mov    %rax,%r10
   1cd7e:	44 8b 38             	mov    (%rax),%r15d
   1cd81:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1cd85:	74 0c                	je     1cd93 <fileref_create_ex+0x893>
   1cd87:	f0 49 83 6e 08 01    	lock subq $0x1,0x8(%r14)
   1cd8d:	0f 84 22 02 00 00    	je     1cfb5 <fileref_create_ex+0xab5>
   1cd93:	45 89 3a             	mov    %r15d,(%r10)
   1cd96:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1cd9d:	00 
   1cd9e:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1cda3:	e8 68 b8 ff ff       	callq  18610 <base64_encoded_length>
   1cda8:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1cdac:	4c 89 f7             	mov    %r14,%rdi
   1cdaf:	e8 6c 36 ff ff       	callq  10420 <malloc@plt>
   1cdb4:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1cdb9:	48 85 c0             	test   %rax,%rax
   1cdbc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cdc1:	0f 84 9a 01 00 00    	je     1cf61 <fileref_create_ex+0xa61>
   1cdc7:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1cdcc:	4c 89 e1             	mov    %r12,%rcx
   1cdcf:	4c 89 f2             	mov    %r14,%rdx
   1cdd2:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1cdd7:	4c 8b 84 24 90 00 00 	mov    0x90(%rsp),%r8
   1cdde:	00 
   1cddf:	48 8d 3d 3a 1e 02 00 	lea    0x21e3a(%rip),%rdi        # 3ec20 <base64_maps_rfc4648>
   1cde6:	e8 75 b9 ff ff       	callq  18760 <base64_encode_using_maps>
   1cdeb:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1cdf0:	48 85 c0             	test   %rax,%rax
   1cdf3:	0f 88 34 01 00 00    	js     1cf2d <fileref_create_ex+0xa2d>
   1cdf9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1cdfe:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1ce03:	e8 38 3d ff ff       	callq  10b40 <json_string@plt>
   1ce08:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1ce0d:	48 85 c0             	test   %rax,%rax
   1ce10:	49 89 c6             	mov    %rax,%r14
   1ce13:	0f 84 b3 01 00 00    	je     1cfcc <fileref_create_ex+0xacc>
   1ce19:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1ce1e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1ce23:	48 89 c2             	mov    %rax,%rdx
   1ce26:	48 89 df             	mov    %rbx,%rdi
   1ce29:	48 8d 35 41 23 02 00 	lea    0x22341(%rip),%rsi        # 3f171 <__FUNCTION__.5439+0xc1>
   1ce30:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1ce35:	e8 16 f6 ff ff       	callq  1c450 <fileref_create_nonempty>
   1ce3a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1ce3f:	48 85 c0             	test   %rax,%rax
   1ce42:	49 89 c7             	mov    %rax,%r15
   1ce45:	0f 84 95 00 00 00    	je     1cee0 <fileref_create_ex+0x9e0>
   1ce4b:	49 8b 46 08          	mov    0x8(%r14),%rax
   1ce4f:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ce53:	74 0c                	je     1ce61 <fileref_create_ex+0x961>
   1ce55:	f0 49 83 6e 08 01    	lock subq $0x1,0x8(%r14)
   1ce5b:	0f 84 f3 00 00 00    	je     1cf54 <fileref_create_ex+0xa54>
   1ce61:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1ce66:	e8 45 2c ff ff       	callq  fab0 <free@plt>
   1ce6b:	e9 46 f9 ff ff       	jmpq   1c7b6 <fileref_create_ex+0x2b6>
   1ce70:	e8 9b 2c ff ff       	callq  fb10 <__errno_location@plt>
   1ce75:	49 89 c2             	mov    %rax,%r10
   1ce78:	41 8b 1a             	mov    (%r10),%ebx
   1ce7b:	e9 91 f9 ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1ce80:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1ce85:	48 89 da             	mov    %rbx,%rdx
   1ce88:	31 c0                	xor    %eax,%eax
   1ce8a:	41 bf 16 00 00 00    	mov    $0x16,%r15d
   1ce90:	48 8d 35 11 24 02 00 	lea    0x22411(%rip),%rsi        # 3f2a8 <__FUNCTION__.5439+0x1f8>
   1ce97:	e8 14 f2 ff ff       	callq  1c0b0 <errprintf>
   1ce9c:	e8 6f 2c ff ff       	callq  fb10 <__errno_location@plt>
   1cea1:	49 89 c2             	mov    %rax,%r10
   1cea4:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1ceaa:	e9 e4 fe ff ff       	jmpq   1cd93 <fileref_create_ex+0x893>
   1ceaf:	e8 5c 2c ff ff       	callq  fb10 <__errno_location@plt>
   1ceb4:	8b 38                	mov    (%rax),%edi
   1ceb6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cebb:	e8 10 3b ff ff       	callq  109d0 <strerror@plt>
   1cec0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cec5:	4c 89 e2             	mov    %r12,%rdx
   1cec8:	48 8d 35 b2 22 02 00 	lea    0x222b2(%rip),%rsi        # 3f181 <__FUNCTION__.5439+0xd1>
   1cecf:	48 89 c1             	mov    %rax,%rcx
   1ced2:	31 c0                	xor    %eax,%eax
   1ced4:	e8 d7 f1 ff ff       	callq  1c0b0 <errprintf>
   1ced9:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cede:	eb 98                	jmp    1ce78 <fileref_create_ex+0x978>
   1cee0:	49 8b 46 08          	mov    0x8(%r14),%rax
   1cee4:	41 8b 1a             	mov    (%r10),%ebx
   1cee7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ceeb:	74 0c                	je     1cef9 <fileref_create_ex+0x9f9>
   1ceed:	f0 49 83 6e 08 01    	lock subq $0x1,0x8(%r14)
   1cef3:	0f 84 e7 00 00 00    	je     1cfe0 <fileref_create_ex+0xae0>
   1cef9:	41 89 1a             	mov    %ebx,(%r10)
   1cefc:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1cf01:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1cf06:	e8 a5 2b ff ff       	callq  fab0 <free@plt>
   1cf0b:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1cf10:	4c 89 e7             	mov    %r12,%rdi
   1cf13:	41 8b 1a             	mov    (%r10),%ebx
   1cf16:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1cf1b:	e8 90 2b ff ff       	callq  fab0 <free@plt>
   1cf20:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1cf25:	41 89 1a             	mov    %ebx,(%r10)
   1cf28:	e9 e4 f8 ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1cf2d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1cf32:	48 89 da             	mov    %rbx,%rdx
   1cf35:	48 8d 35 1d 22 02 00 	lea    0x2221d(%rip),%rsi        # 3f159 <__FUNCTION__.5439+0xa9>
   1cf3c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cf41:	31 c0                	xor    %eax,%eax
   1cf43:	bb 16 00 00 00       	mov    $0x16,%ebx
   1cf48:	e8 63 f1 ff ff       	callq  1c0b0 <errprintf>
   1cf4d:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cf52:	eb a5                	jmp    1cef9 <fileref_create_ex+0x9f9>
        json_delete(json);
   1cf54:	4c 89 f7             	mov    %r14,%rdi
   1cf57:	e8 c4 30 ff ff       	callq  10020 <json_delete@plt>
   1cf5c:	e9 00 ff ff ff       	jmpq   1ce61 <fileref_create_ex+0x961>
   1cf61:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cf66:	48 89 da             	mov    %rbx,%rdx
   1cf69:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1cf6e:	48 8d 35 5b 23 02 00 	lea    0x2235b(%rip),%rsi        # 3f2d0 <__FUNCTION__.5439+0x220>
   1cf75:	e8 36 f1 ff ff       	callq  1c0b0 <errprintf>
   1cf7a:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cf7f:	eb 8f                	jmp    1cf10 <fileref_create_ex+0xa10>
   1cf81:	e8 8a 2b ff ff       	callq  fb10 <__errno_location@plt>
   1cf86:	8b 38                	mov    (%rax),%edi
   1cf88:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cf8d:	e8 3e 3a ff ff       	callq  109d0 <strerror@plt>
   1cf92:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1cf97:	48 8d 35 8b 21 02 00 	lea    0x2218b(%rip),%rsi        # 3f129 <__FUNCTION__.5439+0x79>
   1cf9e:	48 89 c2             	mov    %rax,%rdx
   1cfa1:	31 c0                	xor    %eax,%eax
   1cfa3:	e8 08 f1 ff ff       	callq  1c0b0 <errprintf>
   1cfa8:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1cfad:	41 8b 1a             	mov    (%r10),%ebx
   1cfb0:	e9 5c f8 ff ff       	jmpq   1c811 <fileref_create_ex+0x311>
   1cfb5:	4c 89 f7             	mov    %r14,%rdi
   1cfb8:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1cfbd:	e8 5e 30 ff ff       	callq  10020 <json_delete@plt>
   1cfc2:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1cfc7:	e9 c7 fd ff ff       	jmpq   1cd93 <fileref_create_ex+0x893>
   1cfcc:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1cfd1:	48 89 da             	mov    %rbx,%rdx
   1cfd4:	48 8d 35 1d 23 02 00 	lea    0x2231d(%rip),%rsi        # 3f2f8 <__FUNCTION__.5439+0x248>
   1cfdb:	e9 5c ff ff ff       	jmpq   1cf3c <fileref_create_ex+0xa3c>
   1cfe0:	4c 89 f7             	mov    %r14,%rdi
   1cfe3:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1cfe8:	e8 33 30 ff ff       	callq  10020 <json_delete@plt>
   1cfed:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1cff2:	e9 02 ff ff ff       	jmpq   1cef9 <fileref_create_ex+0x9f9>
   1cff7:	e8 54 2e ff ff       	callq  fe50 <__stack_chk_fail@plt>
   1cffc:	e8 0f 2b ff ff       	callq  fb10 <__errno_location@plt>
   1d001:	49 89 c2             	mov    %rax,%r10
   1d004:	44 8b 38             	mov    (%rax),%r15d
   1d007:	e9 6b fc ff ff       	jmpq   1cc77 <fileref_create_ex+0x777>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1d00c:	48 8b 42 08          	mov    0x8(%rdx),%rax
   1d010:	48 83 c0 01          	add    $0x1,%rax
   1d014:	74 08                	je     1d01e <fileref_create_ex+0xb1e>
   1d016:	f0 48 83 6a 08 01    	lock subq $0x1,0x8(%rdx)
   1d01c:	74 19                	je     1d037 <fileref_create_ex+0xb37>
   1d01e:	e8 ed 2a ff ff       	callq  fb10 <__errno_location@plt>
   1d023:	41 bf 0c 00 00 00    	mov    $0xc,%r15d
   1d029:	49 89 c2             	mov    %rax,%r10
   1d02c:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1d032:	e9 40 fc ff ff       	jmpq   1cc77 <fileref_create_ex+0x777>
        json_delete(json);
   1d037:	48 89 d7             	mov    %rdx,%rdi
   1d03a:	e8 e1 2f ff ff       	callq  10020 <json_delete@plt>
   1d03f:	eb dd                	jmp    1d01e <fileref_create_ex+0xb1e>
   1d041:	48 8d 0d 28 23 02 00 	lea    0x22328(%rip),%rcx        # 3f370 <__PRETTY_FUNCTION__.5787>
   1d048:	ba 4f 00 00 00       	mov    $0x4f,%edx
   1d04d:	48 8d 35 de 20 02 00 	lea    0x220de(%rip),%rsi        # 3f132 <__FUNCTION__.5439+0x82>
   1d054:	48 8d 3d 72 13 02 00 	lea    0x21372(%rip),%rdi        # 3e3cd <__PRETTY_FUNCTION__.5439+0x8d>
   1d05b:	e8 a0 2f ff ff       	callq  10000 <__assert_fail@plt>
   1d060:	48 8d 0d 09 23 02 00 	lea    0x22309(%rip),%rcx        # 3f370 <__PRETTY_FUNCTION__.5787>
   1d067:	ba 4e 00 00 00       	mov    $0x4e,%edx
   1d06c:	48 8d 35 bf 20 02 00 	lea    0x220bf(%rip),%rsi        # 3f132 <__FUNCTION__.5439+0x82>
   1d073:	48 8d 3d 64 15 02 00 	lea    0x21564(%rip),%rdi        # 3e5de <__PRETTY_FUNCTION__.5439+0x29e>
   1d07a:	e8 81 2f ff ff       	callq  10000 <__assert_fail@plt>

000000000001d07f <.annobin_fileref_create.start>:
   1d07f:	90                   	nop

000000000001d080 <fileref_create>:
   1d080:	f3 0f 1e fa          	endbr64 
   1d084:	49 89 f0             	mov    %rsi,%r8
   1d087:	31 c9                	xor    %ecx,%ecx
   1d089:	31 d2                	xor    %edx,%edx
   1d08b:	31 f6                	xor    %esi,%esi
   1d08d:	e9 6e f4 ff ff       	jmpq   1c500 <fileref_create_ex>

000000000001d092 <.annobin_fileref_create.end>:
   1d092:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d099:	00 00 00 00 
   1d09d:	0f 1f 00             	nopl   (%rax)

000000000001d0a0 <fileref_pretty_print>:
   1d0a0:	f3 0f 1e fa          	endbr64 
   1d0a4:	41 54                	push   %r12
   1d0a6:	55                   	push   %rbp
   1d0a7:	53                   	push   %rbx
   1d0a8:	48 83 ec 30          	sub    $0x30,%rsp
   1d0ac:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1d0b1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d0b8:	00 00 
   1d0ba:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d0bf:	31 c0                	xor    %eax,%eax
   1d0c1:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1d0c8:	00 00 
   1d0ca:	48 85 c9             	test   %rcx,%rcx
   1d0cd:	0f 84 e5 00 00 00    	je     1d1b8 <fileref_pretty_print+0x118>
   1d0d3:	48 89 cd             	mov    %rcx,%rbp
   1d0d6:	4c 89 c3             	mov    %r8,%rbx
   1d0d9:	48 85 ff             	test   %rdi,%rdi
   1d0dc:	0f 84 f6 00 00 00    	je     1d1d8 <fileref_pretty_print+0x138>
   1d0e2:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1d0e7:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1d0ec:	41 89 d4             	mov    %edx,%r12d
   1d0ef:	50                   	push   %rax
   1d0f0:	48 8d 05 4d 13 02 00 	lea    0x2134d(%rip),%rax        # 3e444 <__PRETTY_FUNCTION__.5439+0x104>
   1d0f7:	48 8d 15 e1 1f 02 00 	lea    0x21fe1(%rip),%rdx        # 3f0df <__FUNCTION__.5439+0x2f>
   1d0fe:	50                   	push   %rax
   1d0ff:	4c 8d 05 fc 1f 02 00 	lea    0x21ffc(%rip),%r8        # 3f102 <__FUNCTION__.5439+0x52>
   1d106:	48 8d 35 d7 20 02 00 	lea    0x220d7(%rip),%rsi        # 3f1e4 <__FUNCTION__.5439+0x134>
   1d10d:	31 c0                	xor    %eax,%eax
   1d10f:	4c 8d 4c 24 2c       	lea    0x2c(%rsp),%r9
   1d114:	e8 47 30 ff ff       	callq  10160 <json_unpack@plt>
   1d119:	5a                   	pop    %rdx
   1d11a:	59                   	pop    %rcx
   1d11b:	85 c0                	test   %eax,%eax
   1d11d:	0f 88 b5 00 00 00    	js     1d1d8 <fileref_pretty_print+0x138>
   1d123:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d128:	48 85 c9             	test   %rcx,%rcx
   1d12b:	0f 84 a7 00 00 00    	je     1d1d8 <fileref_pretty_print+0x138>
   1d131:	45 84 e4             	test   %r12b,%r12b
   1d134:	0f 84 ce 00 00 00    	je     1d208 <fileref_pretty_print+0x168>
   1d13a:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   1d13e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1d143:	4c 8d 0d 02 28 02 00 	lea    0x22802(%rip),%r9        # 3f94c <f58_prefix+0x4e9>
   1d14a:	89 c2                	mov    %eax,%edx
   1d14c:	25 00 f0 00 00       	and    $0xf000,%eax
   1d151:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   1d157:	3d 00 80 00 00       	cmp    $0x8000,%eax
   1d15c:	74 25                	je     1d183 <fileref_pretty_print+0xe3>
   1d15e:	4c 8d 0d 9e 37 02 00 	lea    0x2379e(%rip),%r9        # 40903 <f58_prefix+0x14a0>
   1d165:	3d 00 a0 00 00       	cmp    $0xa000,%eax
   1d16a:	74 17                	je     1d183 <fileref_pretty_print+0xe3>
   1d16c:	3d 00 40 00 00       	cmp    $0x4000,%eax
   1d171:	4c 8d 0d 56 7e 02 00 	lea    0x27e56(%rip),%r9        # 44fce <__PRETTY_FUNCTION__.3752+0x1fe>
   1d178:	48 8d 05 53 20 02 00 	lea    0x22053(%rip),%rax        # 3f1d2 <__FUNCTION__.5439+0x122>
   1d17f:	4c 0f 45 c8          	cmovne %rax,%r9
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1d183:	48 83 ec 08          	sub    $0x8,%rsp
   1d187:	4c 8d 05 64 20 02 00 	lea    0x22064(%rip),%r8        # 3f1f2 <__FUNCTION__.5439+0x142>
   1d18e:	48 89 ef             	mov    %rbp,%rdi
   1d191:	51                   	push   %rcx
   1d192:	31 c0                	xor    %eax,%eax
   1d194:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1d19b:	56                   	push   %rsi
   1d19c:	48 89 de             	mov    %rbx,%rsi
   1d19f:	52                   	push   %rdx
   1d1a0:	ba 01 00 00 00       	mov    $0x1,%edx
   1d1a5:	e8 f6 28 ff ff       	callq  faa0 <__snprintf_chk@plt>
   1d1aa:	48 83 c4 20          	add    $0x20,%rsp
   1d1ae:	48 83 fb 01          	cmp    $0x1,%rbx
   1d1b2:	77 43                	ja     1d1f7 <fileref_pretty_print+0x157>
   1d1b4:	0f 1f 40 00          	nopl   0x0(%rax)
   1d1b8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d1bd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1d1c4:	00 00 
   1d1c6:	75 56                	jne    1d21e <fileref_pretty_print+0x17e>
   1d1c8:	48 83 c4 30          	add    $0x30,%rsp
   1d1cc:	5b                   	pop    %rbx
   1d1cd:	5d                   	pop    %rbp
   1d1ce:	41 5c                	pop    %r12
   1d1d0:	c3                   	retq   
   1d1d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d1d8:	48 8d 15 f5 1f 02 00 	lea    0x21ff5(%rip),%rdx        # 3f1d4 <__FUNCTION__.5439+0x124>
   1d1df:	48 89 de             	mov    %rbx,%rsi
   1d1e2:	48 89 ef             	mov    %rbp,%rdi
   1d1e5:	31 c0                	xor    %eax,%eax
   1d1e7:	e8 34 2d ff ff       	callq  ff20 <snprintf@plt>
   1d1ec:	b8 0f 00 00 00       	mov    $0xf,%eax
   1d1f1:	48 83 fb 01          	cmp    $0x1,%rbx
   1d1f5:	76 c1                	jbe    1d1b8 <fileref_pretty_print+0x118>
   1d1f7:	48 98                	cltq   
   1d1f9:	48 39 d8             	cmp    %rbx,%rax
   1d1fc:	72 ba                	jb     1d1b8 <fileref_pretty_print+0x118>
   1d1fe:	c6 44 1d fe 2b       	movb   $0x2b,-0x2(%rbp,%rbx,1)
   1d203:	eb b3                	jmp    1d1b8 <fileref_pretty_print+0x118>
   1d205:	0f 1f 00             	nopl   (%rax)
   1d208:	48 8d 15 fd 5f 02 00 	lea    0x25ffd(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   1d20f:	48 89 de             	mov    %rbx,%rsi
   1d212:	48 89 ef             	mov    %rbp,%rdi
   1d215:	31 c0                	xor    %eax,%eax
   1d217:	e8 04 2d ff ff       	callq  ff20 <snprintf@plt>
   1d21c:	eb d3                	jmp    1d1f1 <fileref_pretty_print+0x151>
   1d21e:	e8 2d 2c ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001d223 <.annobin_fileref.c_end>:
   1d223:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d22a:	00 00 00 
   1d22d:	0f 1f 00             	nopl   (%rax)

000000000001d230 <current_ds>:
   1d230:	53                   	push   %rbx
   1d231:	48 89 fb             	mov    %rdi,%rbx
   1d234:	bf 01 00 00 00       	mov    $0x1,%edi
   1d239:	48 83 ec 20          	sub    $0x20,%rsp
   1d23d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d244:	00 00 
   1d246:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d24b:	31 c0                	xor    %eax,%eax
   1d24d:	48 89 e6             	mov    %rsp,%rsi
   1d250:	e8 8b 2a ff ff       	callq  fce0 <clock_gettime@plt>
   1d255:	85 c0                	test   %eax,%eax
   1d257:	78 46                	js     1d29f <current_ds+0x6f>
   1d259:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d25e:	48 69 34 24 e8 03 00 	imul   $0x3e8,(%rsp),%rsi
   1d265:	00 
   1d266:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
   1d26d:	de 1b 43 
   1d270:	48 89 c8             	mov    %rcx,%rax
   1d273:	48 c1 f9 3f          	sar    $0x3f,%rcx
   1d277:	48 f7 ea             	imul   %rdx
   1d27a:	31 c0                	xor    %eax,%eax
   1d27c:	48 c1 fa 12          	sar    $0x12,%rdx
   1d280:	48 29 ca             	sub    %rcx,%rdx
   1d283:	48 01 f2             	add    %rsi,%rdx
   1d286:	48 89 13             	mov    %rdx,(%rbx)
   1d289:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1d28e:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1d295:	00 00 
   1d297:	75 0d                	jne    1d2a6 <current_ds+0x76>
   1d299:	48 83 c4 20          	add    $0x20,%rsp
   1d29d:	5b                   	pop    %rbx
   1d29e:	c3                   	retq   
   1d29f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d2a4:	eb e3                	jmp    1d289 <current_ds+0x59>
   1d2a6:	e8 a5 2b ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001d2ab <.annobin_current_ds.end>:
   1d2ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d2b0 <update_timestamp>:
   1d2b0:	53                   	push   %rbx
   1d2b1:	48 89 fb             	mov    %rdi,%rbx
   1d2b4:	48 83 ec 10          	sub    $0x10,%rsp
   1d2b8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d2bf:	00 00 
   1d2c1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d2c6:	31 c0                	xor    %eax,%eax
   1d2c8:	48 89 e7             	mov    %rsp,%rdi
   1d2cb:	e8 60 ff ff ff       	callq  1d230 <current_ds>
   1d2d0:	85 c0                	test   %eax,%eax
   1d2d2:	78 4c                	js     1d320 <update_timestamp+0x70>
   1d2d4:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
   1d2db:	00 00 00 
   1d2de:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1d2e2:	48 03 14 24          	add    (%rsp),%rdx
   1d2e6:	48 2b 53 08          	sub    0x8(%rbx),%rdx
   1d2ea:	48 39 c2             	cmp    %rax,%rdx
   1d2ed:	77 31                	ja     1d320 <update_timestamp+0x70>
   1d2ef:	31 c0                	xor    %eax,%eax
   1d2f1:	48 39 53 18          	cmp    %rdx,0x18(%rbx)
   1d2f5:	72 19                	jb     1d310 <update_timestamp+0x60>
   1d2f7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d2fc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1d303:	00 00 
   1d305:	75 20                	jne    1d327 <update_timestamp+0x77>
   1d307:	48 83 c4 10          	add    $0x10,%rsp
   1d30b:	5b                   	pop    %rbx
   1d30c:	c3                   	retq   
   1d30d:	0f 1f 00             	nopl   (%rax)
   1d310:	31 c9                	xor    %ecx,%ecx
   1d312:	48 89 53 18          	mov    %rdx,0x18(%rbx)
   1d316:	66 89 4b 02          	mov    %cx,0x2(%rbx)
   1d31a:	eb db                	jmp    1d2f7 <update_timestamp+0x47>
   1d31c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d320:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d325:	eb d0                	jmp    1d2f7 <update_timestamp+0x47>
   1d327:	e8 24 2b ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001d32c <.annobin_fluid_init.start>:
   1d32c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d330 <fluid_init>:
   1d330:	f3 0f 1e fa          	endbr64 
   1d334:	41 54                	push   %r12
   1d336:	49 89 d4             	mov    %rdx,%r12
   1d339:	55                   	push   %rbp
   1d33a:	89 f5                	mov    %esi,%ebp
   1d33c:	53                   	push   %rbx
   1d33d:	48 89 fb             	mov    %rdi,%rbx
   1d340:	48 83 c7 08          	add    $0x8,%rdi
   1d344:	e8 e7 fe ff ff       	callq  1d230 <current_ds>
   1d349:	81 fd ff 3f 00 00    	cmp    $0x3fff,%ebp
   1d34f:	77 1f                	ja     1d370 <fluid_init+0x40>
   1d351:	85 c0                	test   %eax,%eax
   1d353:	78 1b                	js     1d370 <fluid_init+0x40>
   1d355:	66 89 2b             	mov    %bp,(%rbx)
   1d358:	31 c0                	xor    %eax,%eax
   1d35a:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   1d35e:	4c 89 63 18          	mov    %r12,0x18(%rbx)
   1d362:	66 89 43 02          	mov    %ax,0x2(%rbx)
   1d366:	31 c0                	xor    %eax,%eax
   1d368:	5b                   	pop    %rbx
   1d369:	5d                   	pop    %rbp
   1d36a:	41 5c                	pop    %r12
   1d36c:	c3                   	retq   
   1d36d:	0f 1f 00             	nopl   (%rax)
   1d370:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d375:	eb f1                	jmp    1d368 <fluid_init+0x38>

000000000001d377 <.annobin_fluid_init.end>:
   1d377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d37e:	00 00 

000000000001d380 <fluid_save_timestamp>:
   1d380:	f3 0f 1e fa          	endbr64 
   1d384:	55                   	push   %rbp
   1d385:	48 89 f5             	mov    %rsi,%rbp
   1d388:	53                   	push   %rbx
   1d389:	48 89 fb             	mov    %rdi,%rbx
   1d38c:	48 83 ec 08          	sub    $0x8,%rsp
   1d390:	e8 1b ff ff ff       	callq  1d2b0 <update_timestamp>
   1d395:	85 c0                	test   %eax,%eax
   1d397:	78 11                	js     1d3aa <fluid_save_timestamp+0x2a>
   1d399:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1d39d:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1d3a1:	31 c0                	xor    %eax,%eax
   1d3a3:	48 83 c4 08          	add    $0x8,%rsp
   1d3a7:	5b                   	pop    %rbx
   1d3a8:	5d                   	pop    %rbp
   1d3a9:	c3                   	retq   
   1d3aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d3af:	eb f2                	jmp    1d3a3 <fluid_save_timestamp+0x23>

000000000001d3b1 <.annobin_fluid_get_timestamp.start>:
   1d3b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1d3b8:	00 00 00 00 
   1d3bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d3c0 <fluid_get_timestamp>:
   1d3c0:	f3 0f 1e fa          	endbr64 
   1d3c4:	48 89 f8             	mov    %rdi,%rax
   1d3c7:	48 c1 e8 18          	shr    $0x18,%rax
   1d3cb:	c3                   	retq   

000000000001d3cc <.annobin_fluid_generate.start>:
   1d3cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d3d0 <fluid_generate>:
   1d3d0:	f3 0f 1e fa          	endbr64 
   1d3d4:	55                   	push   %rbp
   1d3d5:	48 89 f5             	mov    %rsi,%rbp
   1d3d8:	53                   	push   %rbx
   1d3d9:	48 89 fb             	mov    %rdi,%rbx
   1d3dc:	48 83 ec 08          	sub    $0x8,%rsp
   1d3e0:	eb 10                	jmp    1d3f2 <fluid_generate+0x22>
   1d3e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d3e8:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
   1d3ec:	66 3d fe 03          	cmp    $0x3fe,%ax
   1d3f0:	76 1e                	jbe    1d410 <fluid_generate+0x40>
   1d3f2:	48 89 df             	mov    %rbx,%rdi
   1d3f5:	e8 b6 fe ff ff       	callq  1d2b0 <update_timestamp>
   1d3fa:	85 c0                	test   %eax,%eax
   1d3fc:	79 ea                	jns    1d3e8 <fluid_generate+0x18>
   1d3fe:	48 83 c4 08          	add    $0x8,%rsp
   1d402:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d407:	5b                   	pop    %rbx
   1d408:	5d                   	pop    %rbp
   1d409:	c3                   	retq   
   1d40a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d410:	0f b7 0b             	movzwl (%rbx),%ecx
   1d413:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1d417:	c1 e1 0a             	shl    $0xa,%ecx
   1d41a:	48 c1 e2 18          	shl    $0x18,%rdx
   1d41e:	48 63 c9             	movslq %ecx,%rcx
   1d421:	48 09 ca             	or     %rcx,%rdx
   1d424:	0f b7 c8             	movzwl %ax,%ecx
   1d427:	83 c0 01             	add    $0x1,%eax
   1d42a:	48 09 ca             	or     %rcx,%rdx
   1d42d:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1d431:	66 89 43 02          	mov    %ax,0x2(%rbx)
   1d435:	48 83 c4 08          	add    $0x8,%rsp
   1d439:	31 c0                	xor    %eax,%eax
   1d43b:	5b                   	pop    %rbx
   1d43c:	5d                   	pop    %rbp
   1d43d:	c3                   	retq   

000000000001d43e <.annobin_fluid_encode.start>:
   1d43e:	66 90                	xchg   %ax,%ax

000000000001d440 <fluid_encode>:
   1d440:	f3 0f 1e fa          	endbr64 
   1d444:	41 55                	push   %r13
   1d446:	41 54                	push   %r12
   1d448:	55                   	push   %rbp
   1d449:	89 f5                	mov    %esi,%ebp
   1d44b:	53                   	push   %rbx
   1d44c:	48 89 fb             	mov    %rdi,%rbx
   1d44f:	48 83 ec 38          	sub    $0x38,%rsp
   1d453:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1d458:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d45f:	00 00 
   1d461:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d466:	31 c0                	xor    %eax,%eax
   1d468:	83 f9 02             	cmp    $0x2,%ecx
   1d46b:	74 33                	je     1d4a0 <fluid_encode+0x60>
   1d46d:	83 f9 03             	cmp    $0x3,%ecx
   1d470:	0f 84 aa 00 00 00    	je     1d520 <fluid_encode+0xe0>
   1d476:	83 f9 01             	cmp    $0x1,%ecx
   1d479:	74 55                	je     1d4d0 <fluid_encode+0x90>
   1d47b:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   1d480:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1d487:	00 00 
   1d489:	0f 85 c8 01 00 00    	jne    1d657 <fluid_encode+0x217>
   1d48f:	48 83 c4 38          	add    $0x38,%rsp
   1d493:	5b                   	pop    %rbx
   1d494:	5d                   	pop    %rbp
   1d495:	41 5c                	pop    %r12
   1d497:	41 5d                	pop    %r13
   1d499:	c3                   	retq   
   1d49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d4a0:	89 f1                	mov    %esi,%ecx
   1d4a2:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1d4a7:	48 89 da             	mov    %rbx,%rdx
   1d4aa:	be 08 00 00 00       	mov    $0x8,%esi
   1d4af:	4c 8d 05 dd 1e 02 00 	lea    0x21edd(%rip),%r8        # 3f393 <__PRETTY_FUNCTION__.5787+0x23>
   1d4b6:	e8 e5 36 00 00       	callq  20ba0 <mn_encode>
   1d4bb:	85 c0                	test   %eax,%eax
   1d4bd:	0f 95 c0             	setne  %al
   1d4c0:	0f b6 c0             	movzbl %al,%eax
   1d4c3:	f7 d8                	neg    %eax
   1d4c5:	eb b4                	jmp    1d47b <fluid_encode+0x3b>
   1d4c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d4ce:	00 00 
   1d4d0:	48 83 ec 08          	sub    $0x8,%rsp
   1d4d4:	0f b7 c2             	movzwl %dx,%eax
   1d4d7:	49 89 d1             	mov    %rdx,%r9
   1d4da:	48 63 f6             	movslq %esi,%rsi
   1d4dd:	50                   	push   %rax
   1d4de:	89 d0                	mov    %edx,%eax
   1d4e0:	49 c1 e9 30          	shr    $0x30,%r9
   1d4e4:	4c 8d 05 94 1e 02 00 	lea    0x21e94(%rip),%r8        # 3f37f <__PRETTY_FUNCTION__.5787+0xf>
   1d4eb:	c1 e8 10             	shr    $0x10,%eax
   1d4ee:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1d4f5:	50                   	push   %rax
   1d4f6:	48 89 d0             	mov    %rdx,%rax
   1d4f9:	ba 01 00 00 00       	mov    $0x1,%edx
   1d4fe:	48 c1 e8 20          	shr    $0x20,%rax
   1d502:	0f b7 c0             	movzwl %ax,%eax
   1d505:	50                   	push   %rax
   1d506:	31 c0                	xor    %eax,%eax
   1d508:	e8 93 25 ff ff       	callq  faa0 <__snprintf_chk@plt>
   1d50d:	31 c0                	xor    %eax,%eax
   1d50f:	48 83 c4 20          	add    $0x20,%rsp
   1d513:	83 fd 13             	cmp    $0x13,%ebp
   1d516:	0f 9e c0             	setle  %al
   1d519:	f7 d8                	neg    %eax
   1d51b:	e9 5b ff ff ff       	jmpq   1d47b <fluid_encode+0x3b>
   1d520:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d525:	48 85 ff             	test   %rdi,%rdi
   1d528:	0f 84 14 01 00 00    	je     1d642 <fluid_encode+0x202>
   1d52e:	85 f6                	test   %esi,%esi
   1d530:	0f 8e 0c 01 00 00    	jle    1d642 <fluid_encode+0x202>
   1d536:	4c 63 d6             	movslq %esi,%r10
   1d539:	83 fe 02             	cmp    $0x2,%esi
   1d53c:	0f 8e eb 00 00 00    	jle    1d62d <fluid_encode+0x1ed>
   1d542:	4c 8d 6c 24 1b       	lea    0x1b(%rsp),%r13
   1d547:	c7 44 24 23 00 00 00 	movl   $0x0,0x23(%rsp)
   1d54e:	00 
   1d54f:	4c 8d 05 4a 1e 02 00 	lea    0x21e4a(%rip),%r8        # 3f3a0 <b58digits>
   1d556:	48 c7 44 24 1b 00 00 	movq   $0x0,0x1b(%rsp)
   1d55d:	00 00 
   1d55f:	4c 89 ee             	mov    %r13,%rsi
   1d562:	c6 44 24 27 00       	movb   $0x0,0x27(%rsp)
   1d567:	48 85 c9             	test   %rcx,%rcx
   1d56a:	0f 84 b0 00 00 00    	je     1d620 <fluid_encode+0x1e0>
   1d570:	49 b9 47 58 ee 69 84 	movabs $0x469ee58469ee5847,%r9
   1d577:	e5 9e 46 
   1d57a:	bf 01 00 00 00       	mov    $0x1,%edi
   1d57f:	44 29 ef             	sub    %r13d,%edi
   1d582:	eb 07                	jmp    1d58b <fluid_encode+0x14b>
   1d584:	0f 1f 40 00          	nopl   0x0(%rax)
   1d588:	48 89 d1             	mov    %rdx,%rcx
   1d58b:	48 89 ca             	mov    %rcx,%rdx
   1d58e:	49 89 cb             	mov    %rcx,%r11
   1d591:	44 8d 24 37          	lea    (%rdi,%rsi,1),%r12d
   1d595:	48 83 c6 01          	add    $0x1,%rsi
   1d599:	48 d1 ea             	shr    %rdx
   1d59c:	48 89 d0             	mov    %rdx,%rax
   1d59f:	49 f7 e1             	mul    %r9
   1d5a2:	48 c1 ea 03          	shr    $0x3,%rdx
   1d5a6:	48 6b c2 3a          	imul   $0x3a,%rdx,%rax
   1d5aa:	49 29 c3             	sub    %rax,%r11
   1d5ad:	4c 89 d8             	mov    %r11,%rax
   1d5b0:	48 98                	cltq   
   1d5b2:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
   1d5b7:	88 46 ff             	mov    %al,-0x1(%rsi)
   1d5ba:	48 83 f9 39          	cmp    $0x39,%rcx
   1d5be:	77 c8                	ja     1d588 <fluid_encode+0x148>
  return __builtin___strncpy_chk (__dest, __src, __len,
   1d5c0:	4c 89 d2             	mov    %r10,%rdx
   1d5c3:	48 8d 35 99 1e 02 00 	lea    0x21e99(%rip),%rsi        # 3f463 <f58_prefix>
   1d5ca:	48 89 df             	mov    %rbx,%rdi
   1d5cd:	e8 8e 25 ff ff       	callq  fb60 <strncpy@plt>
   1d5d2:	48 89 df             	mov    %rbx,%rdi
   1d5d5:	e8 46 28 ff ff       	callq  fe20 <strlen@plt>
   1d5da:	41 8d 14 04          	lea    (%r12,%rax,1),%edx
   1d5de:	39 d5                	cmp    %edx,%ebp
   1d5e0:	7e 4b                	jle    1d62d <fluid_encode+0x1ed>
   1d5e2:	48 98                	cltq   
   1d5e4:	49 63 d4             	movslq %r12d,%rdx
   1d5e7:	48 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%rsi
   1d5ec:	49 8d 4c 15 ff       	lea    -0x1(%r13,%rdx,1),%rcx
   1d5f1:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
   1d5f5:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
   1d5fa:	48 01 c6             	add    %rax,%rsi
   1d5fd:	0f 1f 00             	nopl   (%rax)
   1d600:	0f b6 01             	movzbl (%rcx),%eax
   1d603:	48 83 c2 01          	add    $0x1,%rdx
   1d607:	48 83 e9 01          	sub    $0x1,%rcx
   1d60b:	88 42 ff             	mov    %al,-0x1(%rdx)
   1d60e:	48 39 f2             	cmp    %rsi,%rdx
   1d611:	75 ed                	jne    1d600 <fluid_encode+0x1c0>
   1d613:	31 c0                	xor    %eax,%eax
   1d615:	e9 61 fe ff ff       	jmpq   1d47b <fluid_encode+0x3b>
   1d61a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d620:	c6 44 24 1b 31       	movb   $0x31,0x1b(%rsp)
   1d625:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1d62b:	eb 93                	jmp    1d5c0 <fluid_encode+0x180>
   1d62d:	e8 de 24 ff ff       	callq  fb10 <__errno_location@plt>
   1d632:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
   1d638:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d63d:	e9 39 fe ff ff       	jmpq   1d47b <fluid_encode+0x3b>
   1d642:	e8 c9 24 ff ff       	callq  fb10 <__errno_location@plt>
   1d647:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1d64d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d652:	e9 24 fe ff ff       	jmpq   1d47b <fluid_encode+0x3b>
   1d657:	e8 f4 27 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001d65c <.annobin_fluid_decode.start>:
   1d65c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d660 <fluid_decode>:
   1d660:	f3 0f 1e fa          	endbr64 
   1d664:	41 56                	push   %r14
   1d666:	41 55                	push   %r13
   1d668:	41 54                	push   %r12
   1d66a:	49 89 fc             	mov    %rdi,%r12
   1d66d:	55                   	push   %rbp
   1d66e:	53                   	push   %rbx
   1d66f:	48 89 f3             	mov    %rsi,%rbx
   1d672:	48 83 ec 40          	sub    $0x40,%rsp
   1d676:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d67d:	00 00 
   1d67f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d684:	31 c0                	xor    %eax,%eax
   1d686:	83 fa 02             	cmp    $0x2,%edx
   1d689:	0f 84 91 01 00 00    	je     1d820 <fluid_decode+0x1c0>
   1d68f:	83 fa 03             	cmp    $0x3,%edx
   1d692:	0f 84 d8 00 00 00    	je     1d770 <fluid_decode+0x110>
   1d698:	83 fa 01             	cmp    $0x1,%edx
   1d69b:	74 33                	je     1d6d0 <fluid_decode+0x70>
   1d69d:	e8 6e 24 ff ff       	callq  fb10 <__errno_location@plt>
   1d6a2:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1d6a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d6ad:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1d6b2:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1d6b9:	00 00 
   1d6bb:	0f 85 a9 01 00 00    	jne    1d86a <fluid_decode+0x20a>
   1d6c1:	48 83 c4 40          	add    $0x40,%rsp
   1d6c5:	5b                   	pop    %rbx
   1d6c6:	5d                   	pop    %rbp
   1d6c7:	41 5c                	pop    %r12
   1d6c9:	41 5d                	pop    %r13
   1d6cb:	41 5e                	pop    %r14
   1d6cd:	c3                   	retq   
   1d6ce:	66 90                	xchg   %ax,%ax
   1d6d0:	31 ed                	xor    %ebp,%ebp
   1d6d2:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1d6d7:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1d6dc:	48 85 ed             	test   %rbp,%rbp
   1d6df:	74 6f                	je     1d750 <fluid_decode+0xf0>
   1d6e1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d6e6:	ba 10 00 00 00       	mov    $0x10,%edx
   1d6eb:	4c 89 f6             	mov    %r14,%rsi
   1d6ee:	48 8d 78 01          	lea    0x1(%rax),%rdi
   1d6f2:	e8 59 31 ff ff       	callq  10850 <strtoul@plt>
   1d6f7:	49 89 44 ed 00       	mov    %rax,0x0(%r13,%rbp,8)
   1d6fc:	83 fd 03             	cmp    $0x3,%ebp
   1d6ff:	0f 84 43 01 00 00    	je     1d848 <fluid_decode+0x1e8>
   1d705:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d70a:	80 38 2e             	cmpb   $0x2e,(%rax)
   1d70d:	0f 85 43 01 00 00    	jne    1d856 <fluid_decode+0x1f6>
   1d713:	48 83 c5 01          	add    $0x1,%rbp
   1d717:	48 83 fd 04          	cmp    $0x4,%rbp
   1d71b:	75 bf                	jne    1d6dc <fluid_decode+0x7c>
   1d71d:	0f 1f 00             	nopl   (%rax)
   1d720:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1d725:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1d72a:	48 c1 e2 30          	shl    $0x30,%rdx
   1d72e:	48 c1 e0 20          	shl    $0x20,%rax
   1d732:	48 09 c2             	or     %rax,%rdx
   1d735:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d73a:	48 0b 54 24 28       	or     0x28(%rsp),%rdx
   1d73f:	48 c1 e0 10          	shl    $0x10,%rax
   1d743:	48 09 c2             	or     %rax,%rdx
   1d746:	48 89 13             	mov    %rdx,(%rbx)
   1d749:	31 c0                	xor    %eax,%eax
   1d74b:	e9 5d ff ff ff       	jmpq   1d6ad <fluid_decode+0x4d>
   1d750:	ba 10 00 00 00       	mov    $0x10,%edx
   1d755:	4c 89 f6             	mov    %r14,%rsi
   1d758:	4c 89 e7             	mov    %r12,%rdi
   1d75b:	e8 f0 30 ff ff       	callq  10850 <strtoul@plt>
   1d760:	49 89 45 00          	mov    %rax,0x0(%r13)
   1d764:	eb 9f                	jmp    1d705 <fluid_decode+0xa5>
   1d766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d76d:	00 00 00 
   1d770:	48 85 ff             	test   %rdi,%rdi
   1d773:	0f 84 24 ff ff ff    	je     1d69d <fluid_decode+0x3d>
   1d779:	0f b6 07             	movzbl (%rdi),%eax
   1d77c:	84 c0                	test   %al,%al
   1d77e:	0f 84 19 ff ff ff    	je     1d69d <fluid_decode+0x3d>
   1d784:	3c 66                	cmp    $0x66,%al
   1d786:	0f 84 d4 00 00 00    	je     1d860 <fluid_decode+0x200>
   1d78c:	ba 02 00 00 00       	mov    $0x2,%edx
   1d791:	48 8d 35 c8 1c 02 00 	lea    0x21cc8(%rip),%rsi        # 3f460 <f58_alt_prefix>
   1d798:	e8 13 24 ff ff       	callq  fbb0 <strncmp@plt>
   1d79d:	85 c0                	test   %eax,%eax
   1d79f:	0f 85 f8 fe ff ff    	jne    1d69d <fluid_decode+0x3d>
   1d7a5:	b8 02 00 00 00       	mov    $0x2,%eax
   1d7aa:	49 01 c4             	add    %rax,%r12
   1d7ad:	4c 89 e7             	mov    %r12,%rdi
   1d7b0:	e8 6b 26 ff ff       	callq  fe20 <strlen@plt>
   1d7b5:	48 83 f8 0c          	cmp    $0xc,%rax
   1d7b9:	0f 87 de fe ff ff    	ja     1d69d <fluid_decode+0x3d>
   1d7bf:	48 85 c0             	test   %rax,%rax
   1d7c2:	0f 84 d5 fe ff ff    	je     1d69d <fluid_decode+0x3d>
   1d7c8:	8d 50 ff             	lea    -0x1(%rax),%edx
   1d7cb:	49 8d 7c 04 fe       	lea    -0x2(%r12,%rax,1),%rdi
   1d7d0:	be 01 00 00 00       	mov    $0x1,%esi
   1d7d5:	48 63 ca             	movslq %edx,%rcx
   1d7d8:	89 d2                	mov    %edx,%edx
   1d7da:	4c 8d 05 ff 1b 02 00 	lea    0x21bff(%rip),%r8        # 3f3e0 <b58digits_map>
   1d7e1:	48 29 d7             	sub    %rdx,%rdi
   1d7e4:	4c 01 e1             	add    %r12,%rcx
   1d7e7:	31 d2                	xor    %edx,%edx
   1d7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d7f0:	48 0f be 01          	movsbq (%rcx),%rax
   1d7f4:	49 0f be 04 00       	movsbq (%r8,%rax,1),%rax
   1d7f9:	3c ff                	cmp    $0xff,%al
   1d7fb:	0f 84 9c fe ff ff    	je     1d69d <fluid_decode+0x3d>
   1d801:	48 0f af c6          	imul   %rsi,%rax
   1d805:	48 83 e9 01          	sub    $0x1,%rcx
   1d809:	48 6b f6 3a          	imul   $0x3a,%rsi,%rsi
   1d80d:	48 01 c2             	add    %rax,%rdx
   1d810:	48 39 cf             	cmp    %rcx,%rdi
   1d813:	75 db                	jne    1d7f0 <fluid_decode+0x190>
   1d815:	e9 2c ff ff ff       	jmpq   1d746 <fluid_decode+0xe6>
   1d81a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d820:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1d825:	ba 08 00 00 00       	mov    $0x8,%edx
   1d82a:	e8 f1 35 00 00       	callq  20e20 <mn_decode>
   1d82f:	83 f8 08             	cmp    $0x8,%eax
   1d832:	0f 85 65 fe ff ff    	jne    1d69d <fluid_decode+0x3d>
   1d838:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1d83d:	e9 04 ff ff ff       	jmpq   1d746 <fluid_decode+0xe6>
   1d842:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d848:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d84d:	80 38 00             	cmpb   $0x0,(%rax)
   1d850:	0f 84 ca fe ff ff    	je     1d720 <fluid_decode+0xc0>
   1d856:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d85b:	e9 4d fe ff ff       	jmpq   1d6ad <fluid_decode+0x4d>
   1d860:	b8 01 00 00 00       	mov    $0x1,%eax
   1d865:	e9 40 ff ff ff       	jmpq   1d7aa <fluid_decode+0x14a>
   1d86a:	e8 e1 25 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001d86f <.annobin_fluid_decode.end>:
   1d86f:	90                   	nop

000000000001d870 <fluid_string_detect_type>:
   1d870:	f3 0f 1e fa          	endbr64 
   1d874:	53                   	push   %rbx
   1d875:	be 2e 00 00 00       	mov    $0x2e,%esi
   1d87a:	48 89 fb             	mov    %rdi,%rbx
   1d87d:	e8 2e 26 ff ff       	callq  feb0 <strchr@plt>
   1d882:	ba 01 00 00 00       	mov    $0x1,%edx
   1d887:	48 85 c0             	test   %rax,%rax
   1d88a:	74 04                	je     1d890 <fluid_string_detect_type+0x20>
   1d88c:	89 d0                	mov    %edx,%eax
   1d88e:	5b                   	pop    %rbx
   1d88f:	c3                   	retq   
   1d890:	be 2d 00 00 00       	mov    $0x2d,%esi
   1d895:	48 89 df             	mov    %rbx,%rdi
   1d898:	e8 13 26 ff ff       	callq  feb0 <strchr@plt>
   1d89d:	ba 02 00 00 00       	mov    $0x2,%edx
   1d8a2:	48 85 c0             	test   %rax,%rax
   1d8a5:	75 e5                	jne    1d88c <fluid_string_detect_type+0x1c>
   1d8a7:	0f b6 03             	movzbl (%rbx),%eax
   1d8aa:	31 d2                	xor    %edx,%edx
   1d8ac:	84 c0                	test   %al,%al
   1d8ae:	74 dc                	je     1d88c <fluid_string_detect_type+0x1c>
   1d8b0:	ba 03 00 00 00       	mov    $0x3,%edx
   1d8b5:	3c 66                	cmp    $0x66,%al
   1d8b7:	74 d3                	je     1d88c <fluid_string_detect_type+0x1c>
   1d8b9:	ba 02 00 00 00       	mov    $0x2,%edx
   1d8be:	48 89 df             	mov    %rbx,%rdi
   1d8c1:	48 8d 35 98 1b 02 00 	lea    0x21b98(%rip),%rsi        # 3f460 <f58_alt_prefix>
   1d8c8:	e8 e3 22 ff ff       	callq  fbb0 <strncmp@plt>
   1d8cd:	5b                   	pop    %rbx
   1d8ce:	83 f8 01             	cmp    $0x1,%eax
   1d8d1:	19 d2                	sbb    %edx,%edx
   1d8d3:	83 e2 03             	and    $0x3,%edx
   1d8d6:	89 d0                	mov    %edx,%eax
   1d8d8:	c3                   	retq   

000000000001d8d9 <.annobin_fluid_parse.start>:
   1d8d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d8e0 <fluid_parse>:
   1d8e0:	f3 0f 1e fa          	endbr64 
   1d8e4:	41 56                	push   %r14
   1d8e6:	41 55                	push   %r13
   1d8e8:	41 54                	push   %r12
   1d8ea:	55                   	push   %rbp
   1d8eb:	53                   	push   %rbx
   1d8ec:	48 83 ec 10          	sub    $0x10,%rsp
   1d8f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d8f7:	00 00 
   1d8f9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d8fe:	31 c0                	xor    %eax,%eax
   1d900:	48 85 ff             	test   %rdi,%rdi
   1d903:	0f 84 08 01 00 00    	je     1da11 <fluid_parse+0x131>
   1d909:	48 0f be 1f          	movsbq (%rdi),%rbx
   1d90d:	48 89 fd             	mov    %rdi,%rbp
   1d910:	84 db                	test   %bl,%bl
   1d912:	0f 84 f9 00 00 00    	je     1da11 <fluid_parse+0x131>
   1d918:	49 89 f4             	mov    %rsi,%r12
   1d91b:	e8 e0 31 ff ff       	callq  10b00 <__ctype_b_loc@plt>
   1d920:	49 89 c5             	mov    %rax,%r13
   1d923:	48 8b 00             	mov    (%rax),%rax
   1d926:	eb 15                	jmp    1d93d <fluid_parse+0x5d>
   1d928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d92f:	00 
   1d930:	48 83 c5 01          	add    $0x1,%rbp
   1d934:	48 0f be 5d 00       	movsbq 0x0(%rbp),%rbx
   1d939:	84 db                	test   %bl,%bl
   1d93b:	74 07                	je     1d944 <fluid_parse+0x64>
   1d93d:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
   1d942:	75 ec                	jne    1d930 <fluid_parse+0x50>
   1d944:	48 89 ef             	mov    %rbp,%rdi
   1d947:	e8 24 ff ff ff       	callq  1d870 <fluid_string_detect_type>
   1d94c:	85 c0                	test   %eax,%eax
   1d94e:	0f 85 ac 00 00 00    	jne    1da00 <fluid_parse+0x120>
   1d954:	b9 02 00 00 00       	mov    $0x2,%ecx
   1d959:	48 8d 3d 3b 1a 02 00 	lea    0x21a3b(%rip),%rdi        # 3f39b <__PRETTY_FUNCTION__.5787+0x2b>
   1d960:	48 89 ee             	mov    %rbp,%rsi
   1d963:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1d965:	0f 97 c0             	seta   %al
   1d968:	1c 00                	sbb    $0x0,%al
   1d96a:	0f be c0             	movsbl %al,%eax
   1d96d:	83 f8 01             	cmp    $0x1,%eax
   1d970:	19 db                	sbb    %ebx,%ebx
   1d972:	e8 99 21 ff ff       	callq  fb10 <__errno_location@plt>
   1d977:	83 e3 06             	and    $0x6,%ebx
   1d97a:	48 89 ef             	mov    %rbp,%rdi
   1d97d:	48 89 e6             	mov    %rsp,%rsi
   1d980:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1d986:	83 c3 0a             	add    $0xa,%ebx
   1d989:	49 89 c6             	mov    %rax,%r14
   1d98c:	89 da                	mov    %ebx,%edx
   1d98e:	e8 4d 28 ff ff       	callq  101e0 <strtoull@plt>
   1d993:	41 8b 3e             	mov    (%r14),%edi
   1d996:	85 ff                	test   %edi,%edi
   1d998:	75 30                	jne    1d9ca <fluid_parse+0xea>
   1d99a:	48 8b 0c 24          	mov    (%rsp),%rcx
   1d99e:	48 0f be 11          	movsbq (%rcx),%rdx
   1d9a2:	84 d2                	test   %dl,%dl
   1d9a4:	74 32                	je     1d9d8 <fluid_parse+0xf8>
   1d9a6:	49 8b 75 00          	mov    0x0(%r13),%rsi
   1d9aa:	eb 10                	jmp    1d9bc <fluid_parse+0xdc>
   1d9ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1d9b0:	48 83 c1 01          	add    $0x1,%rcx
   1d9b4:	48 0f be 11          	movsbq (%rcx),%rdx
   1d9b8:	84 d2                	test   %dl,%dl
   1d9ba:	74 1c                	je     1d9d8 <fluid_parse+0xf8>
   1d9bc:	f6 44 56 01 20       	testb  $0x20,0x1(%rsi,%rdx,2)
   1d9c1:	75 ed                	jne    1d9b0 <fluid_parse+0xd0>
   1d9c3:	41 c7 06 16 00 00 00 	movl   $0x16,(%r14)
   1d9ca:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1d9cf:	eb 0b                	jmp    1d9dc <fluid_parse+0xfc>
   1d9d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d9d8:	49 89 04 24          	mov    %rax,(%r12)
   1d9dc:	89 f8                	mov    %edi,%eax
   1d9de:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d9e3:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1d9ea:	00 00 
   1d9ec:	75 35                	jne    1da23 <fluid_parse+0x143>
   1d9ee:	48 83 c4 10          	add    $0x10,%rsp
   1d9f2:	5b                   	pop    %rbx
   1d9f3:	5d                   	pop    %rbp
   1d9f4:	41 5c                	pop    %r12
   1d9f6:	41 5d                	pop    %r13
   1d9f8:	41 5e                	pop    %r14
   1d9fa:	c3                   	retq   
   1d9fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1da00:	48 89 ef             	mov    %rbp,%rdi
   1da03:	89 c2                	mov    %eax,%edx
   1da05:	4c 89 e6             	mov    %r12,%rsi
   1da08:	e8 53 fc ff ff       	callq  1d660 <fluid_decode>
   1da0d:	89 c7                	mov    %eax,%edi
   1da0f:	eb cb                	jmp    1d9dc <fluid_parse+0xfc>
   1da11:	e8 fa 20 ff ff       	callq  fb10 <__errno_location@plt>
   1da16:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1da1b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1da21:	eb b9                	jmp    1d9dc <fluid_parse+0xfc>
   1da23:	e8 28 24 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001da28 <.annobin_fluid.c_end>:
   1da28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1da2f:	00 

000000000001da30 <is_invalid_duration>:
   1da30:	48 83 ec 08          	sub    $0x8,%rsp
   1da34:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1da38:	66 0f 54 0d 50 1a 02 	andpd  0x21a50(%rip),%xmm1        # 3f490 <f58_prefix+0x2d>
   1da3f:	00 
   1da40:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
   1da44:	7a 1a                	jp     1da60 <is_invalid_duration+0x30>
   1da46:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1da4a:	66 0f 2f c8          	comisd %xmm0,%xmm1
   1da4e:	77 10                	ja     1da60 <is_invalid_duration+0x30>
   1da50:	31 c0                	xor    %eax,%eax
   1da52:	48 83 c4 08          	add    $0x8,%rsp
   1da56:	c3                   	retq   
   1da57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1da5e:	00 00 
   1da60:	e8 ab 20 ff ff       	callq  fb10 <__errno_location@plt>
   1da65:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1da6b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1da70:	eb e0                	jmp    1da52 <is_invalid_duration+0x22>

000000000001da72 <.annobin_fsd_parse_duration.start>:
   1da72:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1da79:	00 00 00 00 
   1da7d:	0f 1f 00             	nopl   (%rax)

000000000001da80 <fsd_parse_duration>:
   1da80:	f3 0f 1e fa          	endbr64 
   1da84:	53                   	push   %rbx
   1da85:	48 83 ec 20          	sub    $0x20,%rsp
   1da89:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1da90:	00 00 
   1da92:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1da97:	31 c0                	xor    %eax,%eax
   1da99:	48 85 ff             	test   %rdi,%rdi
   1da9c:	0f 84 3e 01 00 00    	je     1dbe0 <fsd_parse_duration+0x160>
   1daa2:	48 89 f3             	mov    %rsi,%rbx
   1daa5:	48 85 f6             	test   %rsi,%rsi
   1daa8:	0f 84 32 01 00 00    	je     1dbe0 <fsd_parse_duration+0x160>
   1daae:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1dab3:	e8 d8 21 ff ff       	callq  fc90 <strtod@plt>
   1dab8:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1dabe:	e8 6d ff ff ff       	callq  1da30 <is_invalid_duration>
   1dac3:	85 c0                	test   %eax,%eax
   1dac5:	0f 85 2d 01 00 00    	jne    1dbf8 <fsd_parse_duration+0x178>
   1dacb:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1dad0:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   1dad6:	80 3a 00             	cmpb   $0x0,(%rdx)
   1dad9:	74 55                	je     1db30 <fsd_parse_duration+0xb0>
   1dadb:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dadf:	66 0f 54 05 a9 19 02 	andpd  0x219a9(%rip),%xmm0        # 3f490 <f58_prefix+0x2d>
   1dae6:	00 
   1dae7:	66 0f 2e 05 b1 19 02 	ucomisd 0x219b1(%rip),%xmm0        # 3f4a0 <f58_prefix+0x3d>
   1daee:	00 
   1daef:	0f 87 eb 00 00 00    	ja     1dbe0 <fsd_parse_duration+0x160>
   1daf5:	b9 03 00 00 00       	mov    $0x3,%ecx
   1dafa:	48 8d 3d 71 19 02 00 	lea    0x21971(%rip),%rdi        # 3f472 <f58_prefix+0xf>
   1db01:	48 89 d6             	mov    %rdx,%rsi
   1db04:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1db06:	0f 97 c1             	seta   %cl
   1db09:	80 d9 00             	sbb    $0x0,%cl
   1db0c:	84 c9                	test   %cl,%cl
   1db0e:	74 40                	je     1db50 <fsd_parse_duration+0xd0>
   1db10:	b9 02 00 00 00       	mov    $0x2,%ecx
   1db15:	48 8d 3d f1 56 02 00 	lea    0x256f1(%rip),%rdi        # 4320d <__PRETTY_FUNCTION__.11024+0xcd>
   1db1c:	48 89 d6             	mov    %rdx,%rsi
   1db1f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1db21:	0f 97 c1             	seta   %cl
   1db24:	80 d9 00             	sbb    $0x0,%cl
   1db27:	84 c9                	test   %cl,%cl
   1db29:	75 35                	jne    1db60 <fsd_parse_duration+0xe0>
   1db2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1db30:	f2 0f 11 0b          	movsd  %xmm1,(%rbx)
   1db34:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1db39:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1db40:	00 00 
   1db42:	0f 85 ba 00 00 00    	jne    1dc02 <fsd_parse_duration+0x182>
   1db48:	48 83 c4 20          	add    $0x20,%rsp
   1db4c:	5b                   	pop    %rbx
   1db4d:	c3                   	retq   
   1db4e:	66 90                	xchg   %ax,%ax
   1db50:	f2 0f 59 0d 68 19 02 	mulsd  0x21968(%rip),%xmm1        # 3f4c0 <f58_prefix+0x5d>
   1db57:	00 
   1db58:	eb d6                	jmp    1db30 <fsd_parse_duration+0xb0>
   1db5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1db60:	b9 02 00 00 00       	mov    $0x2,%ecx
   1db65:	48 8d 3d 1f 0b 02 00 	lea    0x20b1f(%rip),%rdi        # 3e68b <__PRETTY_FUNCTION__.5439+0x34b>
   1db6c:	48 89 d6             	mov    %rdx,%rsi
   1db6f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1db71:	0f 97 c1             	seta   %cl
   1db74:	80 d9 00             	sbb    $0x0,%cl
   1db77:	84 c9                	test   %cl,%cl
   1db79:	75 0d                	jne    1db88 <fsd_parse_duration+0x108>
   1db7b:	f2 0f 59 0d 25 19 02 	mulsd  0x21925(%rip),%xmm1        # 3f4a8 <f58_prefix+0x45>
   1db82:	00 
   1db83:	eb ab                	jmp    1db30 <fsd_parse_duration+0xb0>
   1db85:	0f 1f 00             	nopl   (%rax)
   1db88:	b9 02 00 00 00       	mov    $0x2,%ecx
   1db8d:	48 8d 3d ad 3b 02 00 	lea    0x23bad(%rip),%rdi        # 41741 <f58_prefix+0x22de>
   1db94:	48 89 d6             	mov    %rdx,%rsi
   1db97:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1db99:	0f 97 c1             	seta   %cl
   1db9c:	80 d9 00             	sbb    $0x0,%cl
   1db9f:	84 c9                	test   %cl,%cl
   1dba1:	74 2d                	je     1dbd0 <fsd_parse_duration+0x150>
   1dba3:	48 89 d6             	mov    %rdx,%rsi
   1dba6:	b9 02 00 00 00       	mov    $0x2,%ecx
   1dbab:	48 8d 3d 1c 74 02 00 	lea    0x2741c(%rip),%rdi        # 44fce <__PRETTY_FUNCTION__.3752+0x1fe>
   1dbb2:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1dbb4:	0f 97 c2             	seta   %dl
   1dbb7:	80 da 00             	sbb    $0x0,%dl
   1dbba:	84 d2                	test   %dl,%dl
   1dbbc:	75 22                	jne    1dbe0 <fsd_parse_duration+0x160>
   1dbbe:	f2 0f 59 0d f2 18 02 	mulsd  0x218f2(%rip),%xmm1        # 3f4b8 <f58_prefix+0x55>
   1dbc5:	00 
   1dbc6:	e9 65 ff ff ff       	jmpq   1db30 <fsd_parse_duration+0xb0>
   1dbcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dbd0:	f2 0f 59 0d d8 18 02 	mulsd  0x218d8(%rip),%xmm1        # 3f4b0 <f58_prefix+0x4d>
   1dbd7:	00 
   1dbd8:	e9 53 ff ff ff       	jmpq   1db30 <fsd_parse_duration+0xb0>
   1dbdd:	0f 1f 00             	nopl   (%rax)
   1dbe0:	e8 2b 1f ff ff       	callq  fb10 <__errno_location@plt>
   1dbe5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1dbeb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dbf0:	e9 3f ff ff ff       	jmpq   1db34 <fsd_parse_duration+0xb4>
   1dbf5:	0f 1f 00             	nopl   (%rax)
   1dbf8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dbfd:	e9 32 ff ff ff       	jmpq   1db34 <fsd_parse_duration+0xb4>
   1dc02:	e8 49 22 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001dc07 <.annobin_fsd_format_duration_ex.start>:
   1dc07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1dc0e:	00 00 

000000000001dc10 <fsd_format_duration_ex>:
   1dc10:	f3 0f 1e fa          	endbr64 
   1dc14:	41 54                	push   %r12
   1dc16:	55                   	push   %rbp
   1dc17:	53                   	push   %rbx
   1dc18:	48 83 ec 10          	sub    $0x10,%rsp
   1dc1c:	48 85 ff             	test   %rdi,%rdi
   1dc1f:	0f 84 6b 01 00 00    	je     1dd90 <fsd_format_duration_ex+0x180>
   1dc25:	48 89 f5             	mov    %rsi,%rbp
   1dc28:	48 85 f6             	test   %rsi,%rsi
   1dc2b:	0f 84 5f 01 00 00    	je     1dd90 <fsd_format_duration_ex+0x180>
   1dc31:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1dc35:	66 0f 54 05 53 18 02 	andpd  0x21853(%rip),%xmm0        # 3f490 <f58_prefix+0x2d>
   1dc3c:	00 
   1dc3d:	48 89 fb             	mov    %rdi,%rbx
   1dc40:	66 0f 2e 05 58 18 02 	ucomisd 0x21858(%rip),%xmm0        # 3f4a0 <f58_prefix+0x3d>
   1dc47:	00 
   1dc48:	0f 87 b2 00 00 00    	ja     1dd00 <fsd_format_duration_ex+0xf0>
   1dc4e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dc52:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
   1dc58:	41 89 d4             	mov    %edx,%r12d
   1dc5b:	e8 d0 fd ff ff       	callq  1da30 <is_invalid_duration>
   1dc60:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   1dc66:	85 c0                	test   %eax,%eax
   1dc68:	0f 85 22 01 00 00    	jne    1dd90 <fsd_format_duration_ex+0x180>
   1dc6e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dc72:	ba 01 00 00 00       	mov    $0x1,%edx
   1dc77:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1dc7b:	0f 9a c0             	setp   %al
   1dc7e:	0f 45 c2             	cmovne %edx,%eax
   1dc81:	84 c0                	test   %al,%al
   1dc83:	74 12                	je     1dc97 <fsd_format_duration_ex+0x87>
   1dc85:	f2 0f 10 05 3b 18 02 	movsd  0x2183b(%rip),%xmm0        # 3f4c8 <f58_prefix+0x65>
   1dc8c:	00 
   1dc8d:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1dc91:	0f 87 b9 00 00 00    	ja     1dd50 <fsd_format_duration_ex+0x140>
   1dc97:	f2 0f 10 05 09 18 02 	movsd  0x21809(%rip),%xmm0        # 3f4a8 <f58_prefix+0x45>
   1dc9e:	00 
   1dc9f:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1dca3:	0f 87 97 00 00 00    	ja     1dd40 <fsd_format_duration_ex+0x130>
   1dca9:	f2 0f 10 15 ff 17 02 	movsd  0x217ff(%rip),%xmm2        # 3f4b0 <f58_prefix+0x4d>
   1dcb0:	00 
   1dcb1:	66 0f 2f d1          	comisd %xmm1,%xmm2
   1dcb5:	0f 87 b5 00 00 00    	ja     1dd70 <fsd_format_duration_ex+0x160>
   1dcbb:	f2 0f 10 05 f5 17 02 	movsd  0x217f5(%rip),%xmm0        # 3f4b8 <f58_prefix+0x55>
   1dcc2:	00 
   1dcc3:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1dcc7:	77 5f                	ja     1dd28 <fsd_format_duration_ex+0x118>
   1dcc9:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   1dccd:	45 89 e1             	mov    %r12d,%r9d
   1dcd0:	4c 8d 05 b0 17 02 00 	lea    0x217b0(%rip),%r8        # 3f487 <f58_prefix+0x24>
   1dcd7:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dcdb:	48 83 c4 10          	add    $0x10,%rsp
   1dcdf:	48 89 ee             	mov    %rbp,%rsi
   1dce2:	48 89 df             	mov    %rbx,%rdi
   1dce5:	ba 01 00 00 00       	mov    $0x1,%edx
   1dcea:	5b                   	pop    %rbx
   1dceb:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1dcf2:	5d                   	pop    %rbp
   1dcf3:	b8 01 00 00 00       	mov    $0x1,%eax
   1dcf8:	41 5c                	pop    %r12
   1dcfa:	e9 a1 1d ff ff       	jmpq   faa0 <__snprintf_chk@plt>
   1dcff:	90                   	nop
   1dd00:	48 8d 0d 5e 17 02 00 	lea    0x2175e(%rip),%rcx        # 3f465 <f58_prefix+0x2>
   1dd07:	48 8d 15 fe 54 02 00 	lea    0x254fe(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   1dd0e:	31 c0                	xor    %eax,%eax
   1dd10:	e8 0b 22 ff ff       	callq  ff20 <snprintf@plt>
   1dd15:	b8 08 00 00 00       	mov    $0x8,%eax
   1dd1a:	48 83 c4 10          	add    $0x10,%rsp
   1dd1e:	5b                   	pop    %rbx
   1dd1f:	5d                   	pop    %rbp
   1dd20:	41 5c                	pop    %r12
   1dd22:	c3                   	retq   
   1dd23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dd28:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   1dd2c:	45 89 e1             	mov    %r12d,%r9d
   1dd2f:	4c 8d 05 4b 17 02 00 	lea    0x2174b(%rip),%r8        # 3f481 <f58_prefix+0x1e>
   1dd36:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dd3a:	eb 9f                	jmp    1dcdb <fsd_format_duration_ex+0xcb>
   1dd3c:	0f 1f 40 00          	nopl   0x0(%rax)
   1dd40:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dd44:	45 89 e1             	mov    %r12d,%r9d
   1dd47:	4c 8d 05 27 17 02 00 	lea    0x21727(%rip),%r8        # 3f475 <f58_prefix+0x12>
   1dd4e:	eb 8b                	jmp    1dcdb <fsd_format_duration_ex+0xcb>
   1dd50:	f2 0f 59 0d 78 17 02 	mulsd  0x21778(%rip),%xmm1        # 3f4d0 <f58_prefix+0x6d>
   1dd57:	00 
   1dd58:	45 89 e1             	mov    %r12d,%r9d
   1dd5b:	4c 8d 05 0c 17 02 00 	lea    0x2170c(%rip),%r8        # 3f46e <f58_prefix+0xb>
   1dd62:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dd66:	e9 70 ff ff ff       	jmpq   1dcdb <fsd_format_duration_ex+0xcb>
   1dd6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dd70:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   1dd74:	45 89 e1             	mov    %r12d,%r9d
   1dd77:	4c 8d 05 fd 16 02 00 	lea    0x216fd(%rip),%r8        # 3f47b <f58_prefix+0x18>
   1dd7e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dd82:	e9 54 ff ff ff       	jmpq   1dcdb <fsd_format_duration_ex+0xcb>
   1dd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1dd8e:	00 00 
   1dd90:	e8 7b 1d ff ff       	callq  fb10 <__errno_location@plt>
   1dd95:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1dd9b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dda0:	e9 75 ff ff ff       	jmpq   1dd1a <fsd_format_duration_ex+0x10a>

000000000001dda5 <.annobin_fsd_format_duration.start>:
   1dda5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ddac:	00 00 00 00 

000000000001ddb0 <fsd_format_duration>:
   1ddb0:	f3 0f 1e fa          	endbr64 
   1ddb4:	ba 06 00 00 00       	mov    $0x6,%edx
   1ddb9:	e9 52 fe ff ff       	jmpq   1dc10 <fsd_format_duration_ex>

000000000001ddbe <.annobin_fsd.c_end>:
   1ddbe:	66 90                	xchg   %ax,%ax

000000000001ddc0 <json_array_find>:
   1ddc0:	41 54                	push   %r12
   1ddc2:	49 89 f4             	mov    %rsi,%r12
   1ddc5:	55                   	push   %rbp
   1ddc6:	48 89 fd             	mov    %rdi,%rbp
   1ddc9:	53                   	push   %rbx
   1ddca:	31 db                	xor    %ebx,%ebx
   1ddcc:	eb 32                	jmp    1de00 <json_array_find+0x40>
   1ddce:	66 90                	xchg   %ax,%ax
   1ddd0:	48 89 de             	mov    %rbx,%rsi
   1ddd3:	48 89 ef             	mov    %rbp,%rdi
   1ddd6:	e8 05 27 ff ff       	callq  104e0 <json_array_get@plt>
   1dddb:	48 85 c0             	test   %rax,%rax
   1ddde:	74 2d                	je     1de0d <json_array_find+0x4d>
   1dde0:	48 89 c7             	mov    %rax,%rdi
   1dde3:	e8 d8 24 ff ff       	callq  102c0 <json_string_value@plt>
   1dde8:	4d 85 e4             	test   %r12,%r12
   1ddeb:	74 0f                	je     1ddfc <json_array_find+0x3c>
   1dded:	48 89 c6             	mov    %rax,%rsi
   1ddf0:	4c 89 e7             	mov    %r12,%rdi
   1ddf3:	e8 28 24 ff ff       	callq  10220 <strcmp@plt>
   1ddf8:	85 c0                	test   %eax,%eax
   1ddfa:	74 24                	je     1de20 <json_array_find+0x60>
   1ddfc:	48 83 c3 01          	add    $0x1,%rbx
   1de00:	48 89 ef             	mov    %rbp,%rdi
   1de03:	e8 18 1f ff ff       	callq  fd20 <json_array_size@plt>
   1de08:	48 39 c3             	cmp    %rax,%rbx
   1de0b:	72 c3                	jb     1ddd0 <json_array_find+0x10>
   1de0d:	5b                   	pop    %rbx
   1de0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1de13:	5d                   	pop    %rbp
   1de14:	41 5c                	pop    %r12
   1de16:	c3                   	retq   
   1de17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1de1e:	00 00 
   1de20:	89 d8                	mov    %ebx,%eax
   1de22:	5b                   	pop    %rbx
   1de23:	5d                   	pop    %rbp
   1de24:	41 5c                	pop    %r12
   1de26:	c3                   	retq   

000000000001de27 <.annobin_grudgeset_destroy.start>:
   1de27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1de2e:	00 00 

000000000001de30 <grudgeset_destroy>:
   1de30:	f3 0f 1e fa          	endbr64 
   1de34:	48 85 ff             	test   %rdi,%rdi
   1de37:	74 5f                	je     1de98 <grudgeset_destroy+0x68>
   1de39:	41 54                	push   %r12
   1de3b:	55                   	push   %rbp
   1de3c:	53                   	push   %rbx
   1de3d:	48 89 fb             	mov    %rdi,%rbx
   1de40:	e8 cb 1c ff ff       	callq  fb10 <__errno_location@plt>
   1de45:	48 8b 3b             	mov    (%rbx),%rdi
   1de48:	48 89 c5             	mov    %rax,%rbp
   1de4b:	44 8b 20             	mov    (%rax),%r12d
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1de4e:	48 85 ff             	test   %rdi,%rdi
   1de51:	74 12                	je     1de65 <grudgeset_destroy+0x35>
   1de53:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1de57:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1de5b:	74 08                	je     1de65 <grudgeset_destroy+0x35>
   1de5d:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
   1de63:	74 3b                	je     1dea0 <grudgeset_destroy+0x70>
   1de65:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1de69:	48 85 ff             	test   %rdi,%rdi
   1de6c:	74 12                	je     1de80 <grudgeset_destroy+0x50>
   1de6e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1de72:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1de76:	74 08                	je     1de80 <grudgeset_destroy+0x50>
   1de78:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
   1de7e:	74 30                	je     1deb0 <grudgeset_destroy+0x80>
   1de80:	48 89 df             	mov    %rbx,%rdi
   1de83:	e8 28 1c ff ff       	callq  fab0 <free@plt>
   1de88:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   1de8c:	5b                   	pop    %rbx
   1de8d:	5d                   	pop    %rbp
   1de8e:	41 5c                	pop    %r12
   1de90:	c3                   	retq   
   1de91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1de98:	c3                   	retq   
   1de99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        json_delete(json);
   1dea0:	e8 7b 21 ff ff       	callq  10020 <json_delete@plt>
   1dea5:	eb be                	jmp    1de65 <grudgeset_destroy+0x35>
   1dea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1deae:	00 00 
   1deb0:	e8 6b 21 ff ff       	callq  10020 <json_delete@plt>
   1deb5:	eb c9                	jmp    1de80 <grudgeset_destroy+0x50>

000000000001deb7 <.annobin_grudgeset_destroy.end>:
   1deb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1debe:	00 00 

000000000001dec0 <grudgeset_used>:
   1dec0:	f3 0f 1e fa          	endbr64 
   1dec4:	48 85 ff             	test   %rdi,%rdi
   1dec7:	74 27                	je     1def0 <grudgeset_used+0x30>
   1dec9:	48 85 f6             	test   %rsi,%rsi
   1decc:	74 22                	je     1def0 <grudgeset_used+0x30>
   1dece:	48 83 ec 08          	sub    $0x8,%rsp
   1ded2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1ded6:	e8 75 27 ff ff       	callq  10650 <json_object_get@plt>
   1dedb:	48 85 c0             	test   %rax,%rax
   1dede:	0f 95 c0             	setne  %al
   1dee1:	48 83 c4 08          	add    $0x8,%rsp
   1dee5:	0f b6 c0             	movzbl %al,%eax
   1dee8:	c3                   	retq   
   1dee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1def0:	31 c0                	xor    %eax,%eax
   1def2:	c3                   	retq   

000000000001def3 <.annobin_grudgeset_contains.start>:
   1def3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1defa:	00 00 00 00 
   1defe:	66 90                	xchg   %ax,%ax

000000000001df00 <grudgeset_contains>:
   1df00:	f3 0f 1e fa          	endbr64 
   1df04:	48 85 ff             	test   %rdi,%rdi
   1df07:	74 1f                	je     1df28 <grudgeset_contains+0x28>
   1df09:	48 85 f6             	test   %rsi,%rsi
   1df0c:	74 1a                	je     1df28 <grudgeset_contains+0x28>
   1df0e:	48 83 ec 08          	sub    $0x8,%rsp
   1df12:	48 8b 3f             	mov    (%rdi),%rdi
   1df15:	e8 a6 fe ff ff       	callq  1ddc0 <json_array_find>
   1df1a:	48 83 c4 08          	add    $0x8,%rsp
   1df1e:	f7 d0                	not    %eax
   1df20:	c1 e8 1f             	shr    $0x1f,%eax
   1df23:	c3                   	retq   
   1df24:	0f 1f 40 00          	nopl   0x0(%rax)
   1df28:	31 c0                	xor    %eax,%eax
   1df2a:	c3                   	retq   

000000000001df2b <.annobin_grudgeset_add.start>:
   1df2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001df30 <grudgeset_add>:
   1df30:	f3 0f 1e fa          	endbr64 
   1df34:	41 55                	push   %r13
   1df36:	41 54                	push   %r12
   1df38:	55                   	push   %rbp
   1df39:	53                   	push   %rbx
   1df3a:	48 83 ec 08          	sub    $0x8,%rsp
   1df3e:	48 85 ff             	test   %rdi,%rdi
   1df41:	0f 84 39 01 00 00    	je     1e080 <grudgeset_add+0x150>
   1df47:	48 89 f5             	mov    %rsi,%rbp
   1df4a:	48 85 f6             	test   %rsi,%rsi
   1df4d:	0f 84 2d 01 00 00    	je     1e080 <grudgeset_add+0x150>
   1df53:	4c 8b 27             	mov    (%rdi),%r12
   1df56:	48 89 fb             	mov    %rdi,%rbx
   1df59:	4d 85 e4             	test   %r12,%r12
   1df5c:	74 6a                	je     1dfc8 <grudgeset_add+0x98>
   1df5e:	4c 89 e7             	mov    %r12,%rdi
   1df61:	48 89 ee             	mov    %rbp,%rsi
   1df64:	e8 57 ff ff ff       	callq  1dec0 <grudgeset_used>
   1df69:	41 89 c4             	mov    %eax,%r12d
   1df6c:	85 c0                	test   %eax,%eax
   1df6e:	0f 85 ec 00 00 00    	jne    1e060 <grudgeset_add+0x130>
   1df74:	48 89 ef             	mov    %rbp,%rdi
   1df77:	e8 c4 2b ff ff       	callq  10b40 <json_string@plt>
   1df7c:	49 89 c5             	mov    %rax,%r13
   1df7f:	48 85 c0             	test   %rax,%rax
   1df82:	0f 84 b8 00 00 00    	je     1e040 <grudgeset_add+0x110>
   1df88:	48 8b 03             	mov    (%rbx),%rax
   1df8b:	4c 89 ee             	mov    %r13,%rsi
   1df8e:	48 8b 38             	mov    (%rax),%rdi
   1df91:	e8 2a 2b ff ff       	callq  10ac0 <json_array_append_new@plt>
   1df96:	85 c0                	test   %eax,%eax
   1df98:	0f 88 82 00 00 00    	js     1e020 <grudgeset_add+0xf0>
   1df9e:	e8 dd 20 ff ff       	callq  10080 <json_null@plt>
   1dfa3:	48 8b 13             	mov    (%rbx),%rdx
   1dfa6:	48 89 ee             	mov    %rbp,%rsi
   1dfa9:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   1dfad:	48 89 c2             	mov    %rax,%rdx
   1dfb0:	e8 9b 27 ff ff       	callq  10750 <json_object_set_new@plt>
   1dfb5:	48 83 c4 08          	add    $0x8,%rsp
   1dfb9:	44 89 e0             	mov    %r12d,%eax
   1dfbc:	5b                   	pop    %rbx
   1dfbd:	5d                   	pop    %rbp
   1dfbe:	41 5c                	pop    %r12
   1dfc0:	41 5d                	pop    %r13
   1dfc2:	c3                   	retq   
   1dfc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dfc8:	be 10 00 00 00       	mov    $0x10,%esi
   1dfcd:	bf 01 00 00 00       	mov    $0x1,%edi
   1dfd2:	e8 39 22 ff ff       	callq  10210 <calloc@plt>
   1dfd7:	49 89 c4             	mov    %rax,%r12
   1dfda:	48 85 c0             	test   %rax,%rax
   1dfdd:	74 29                	je     1e008 <grudgeset_add+0xd8>
   1dfdf:	e8 3c 2a ff ff       	callq  10a20 <json_array@plt>
   1dfe4:	49 89 04 24          	mov    %rax,(%r12)
   1dfe8:	48 85 c0             	test   %rax,%rax
   1dfeb:	74 1b                	je     1e008 <grudgeset_add+0xd8>
   1dfed:	e8 7e 29 ff ff       	callq  10970 <json_object@plt>
   1dff2:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1dff7:	48 85 c0             	test   %rax,%rax
   1dffa:	74 0c                	je     1e008 <grudgeset_add+0xd8>
   1dffc:	4c 89 23             	mov    %r12,(%rbx)
   1dfff:	e9 5a ff ff ff       	jmpq   1df5e <grudgeset_add+0x2e>
   1e004:	0f 1f 40 00          	nopl   0x0(%rax)
   1e008:	4c 89 e7             	mov    %r12,%rdi
   1e00b:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1e011:	e8 1a fe ff ff       	callq  1de30 <grudgeset_destroy>
   1e016:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1e01d:	eb 96                	jmp    1dfb5 <grudgeset_add+0x85>
   1e01f:	90                   	nop
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1e020:	49 8b 45 08          	mov    0x8(%r13),%rax
   1e024:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1e028:	74 16                	je     1e040 <grudgeset_add+0x110>
   1e02a:	f0 49 83 6d 08 01    	lock subq $0x1,0x8(%r13)
   1e030:	75 0e                	jne    1e040 <grudgeset_add+0x110>
        json_delete(json);
   1e032:	4c 89 ef             	mov    %r13,%rdi
   1e035:	e8 e6 1f ff ff       	callq  10020 <json_delete@plt>
   1e03a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e040:	e8 cb 1a ff ff       	callq  fb10 <__errno_location@plt>
   1e045:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1e04b:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1e051:	e9 5f ff ff ff       	jmpq   1dfb5 <grudgeset_add+0x85>
   1e056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e05d:	00 00 00 
   1e060:	e8 ab 1a ff ff       	callq  fb10 <__errno_location@plt>
   1e065:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1e06b:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   1e071:	e9 3f ff ff ff       	jmpq   1dfb5 <grudgeset_add+0x85>
   1e076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e07d:	00 00 00 
   1e080:	e8 8b 1a ff ff       	callq  fb10 <__errno_location@plt>
   1e085:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1e08b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e091:	e9 1f ff ff ff       	jmpq   1dfb5 <grudgeset_add+0x85>

000000000001e096 <.annobin_grudgeset_add.end>:
   1e096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e09d:	00 00 00 

000000000001e0a0 <grudgeset_remove>:
   1e0a0:	f3 0f 1e fa          	endbr64 
   1e0a4:	53                   	push   %rbx
   1e0a5:	48 85 f6             	test   %rsi,%rsi
   1e0a8:	74 38                	je     1e0e2 <grudgeset_remove+0x42>
   1e0aa:	48 89 fb             	mov    %rdi,%rbx
   1e0ad:	48 85 ff             	test   %rdi,%rdi
   1e0b0:	74 1e                	je     1e0d0 <grudgeset_remove+0x30>
   1e0b2:	48 8b 3f             	mov    (%rdi),%rdi
   1e0b5:	e8 06 fd ff ff       	callq  1ddc0 <json_array_find>
   1e0ba:	85 c0                	test   %eax,%eax
   1e0bc:	78 12                	js     1e0d0 <grudgeset_remove+0x30>
   1e0be:	48 8b 3b             	mov    (%rbx),%rdi
   1e0c1:	48 63 f0             	movslq %eax,%rsi
   1e0c4:	5b                   	pop    %rbx
   1e0c5:	e9 86 20 ff ff       	jmpq   10150 <json_array_remove@plt>
   1e0ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e0d0:	e8 3b 1a ff ff       	callq  fb10 <__errno_location@plt>
   1e0d5:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e0db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e0e0:	5b                   	pop    %rbx
   1e0e1:	c3                   	retq   
   1e0e2:	e8 29 1a ff ff       	callq  fb10 <__errno_location@plt>
   1e0e7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e0ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e0f2:	5b                   	pop    %rbx
   1e0f3:	c3                   	retq   

000000000001e0f4 <.annobin_grudgeset_remove.end>:
   1e0f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e0fb:	00 00 00 00 
   1e0ff:	90                   	nop

000000000001e100 <grudgeset_tojson>:
   1e100:	f3 0f 1e fa          	endbr64 
   1e104:	31 c0                	xor    %eax,%eax
   1e106:	48 85 ff             	test   %rdi,%rdi
   1e109:	74 03                	je     1e10e <grudgeset_tojson+0xe>
   1e10b:	48 8b 07             	mov    (%rdi),%rax
   1e10e:	c3                   	retq   

000000000001e10f <.annobin_grudgeset_size.start>:
   1e10f:	90                   	nop

000000000001e110 <grudgeset_size>:
   1e110:	f3 0f 1e fa          	endbr64 
   1e114:	48 85 ff             	test   %rdi,%rdi
   1e117:	74 17                	je     1e130 <grudgeset_size+0x20>
   1e119:	48 83 ec 08          	sub    $0x8,%rsp
   1e11d:	48 8b 3f             	mov    (%rdi),%rdi
   1e120:	e8 fb 1b ff ff       	callq  fd20 <json_array_size@plt>
   1e125:	48 83 c4 08          	add    $0x8,%rsp
   1e129:	c3                   	retq   
   1e12a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e130:	31 c0                	xor    %eax,%eax
   1e132:	c3                   	retq   

000000000001e133 <.annobin_grudgeset.c_end>:
   1e133:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e13a:	00 00 00 
   1e13d:	0f 1f 00             	nopl   (%rax)

000000000001e140 <hash_add>:
   1e140:	55                   	push   %rbp
   1e141:	48 89 f5             	mov    %rsi,%rbp
   1e144:	53                   	push   %rbx
   1e145:	48 89 fb             	mov    %rdi,%rbx
   1e148:	48 83 ec 28          	sub    $0x28,%rsp
   1e14c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e153:	00 00 
   1e155:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1e15a:	31 c0                	xor    %eax,%eax
   1e15c:	e8 4f d6 01 00       	callq  3b7b0 <fzlistx_new>
   1e161:	48 89 c7             	mov    %rax,%rdi
   1e164:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e169:	48 85 c0             	test   %rax,%rax
   1e16c:	74 62                	je     1e1d0 <hash_add+0x90>
   1e16e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1e172:	e8 49 e4 01 00       	callq  3c5c0 <fzlistx_set_destructor>
   1e177:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1e17b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e180:	e8 6b e4 01 00       	callq  3c5f0 <fzlistx_set_duplicator>
   1e185:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   1e189:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e18e:	e8 8d e4 01 00       	callq  3c620 <fzlistx_set_comparator>
   1e193:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1e198:	48 8b 3b             	mov    (%rbx),%rdi
   1e19b:	48 89 ee             	mov    %rbp,%rsi
   1e19e:	e8 4d bf 01 00       	callq  3a0f0 <fzhashx_insert>
   1e1a3:	85 c0                	test   %eax,%eax
   1e1a5:	78 49                	js     1e1f0 <hash_add+0xb0>
   1e1a7:	80 63 28 fe          	andb   $0xfe,0x28(%rbx)
   1e1ab:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e1b0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1e1b5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1e1bc:	00 00 
   1e1be:	48 89 f8             	mov    %rdi,%rax
   1e1c1:	75 46                	jne    1e209 <hash_add+0xc9>
   1e1c3:	48 83 c4 28          	add    $0x28,%rsp
   1e1c7:	5b                   	pop    %rbx
   1e1c8:	5d                   	pop    %rbp
   1e1c9:	c3                   	retq   
   1e1ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e1d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e1d5:	e8 36 19 ff ff       	callq  fb10 <__errno_location@plt>
   1e1da:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e1df:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1e1e5:	eb c9                	jmp    1e1b0 <hash_add+0x70>
   1e1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e1ee:	00 00 
   1e1f0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e1f5:	e8 66 df 01 00       	callq  3c160 <fzlistx_destroy>
   1e1fa:	e8 11 19 ff ff       	callq  fb10 <__errno_location@plt>
   1e1ff:	31 ff                	xor    %edi,%edi
   1e201:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   1e207:	eb a7                	jmp    1e1b0 <hash_add+0x70>
   1e209:	e8 42 1c ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001e20e <.annobin_hash_add.end>:
   1e20e:	66 90                	xchg   %ax,%ax

000000000001e210 <hola_destroy>:
   1e210:	f3 0f 1e fa          	endbr64 
   1e214:	48 85 ff             	test   %rdi,%rdi
   1e217:	74 37                	je     1e250 <hola_destroy+0x40>
   1e219:	41 54                	push   %r12
   1e21b:	55                   	push   %rbp
   1e21c:	53                   	push   %rbx
   1e21d:	48 89 fb             	mov    %rdi,%rbx
   1e220:	e8 eb 18 ff ff       	callq  fb10 <__errno_location@plt>
   1e225:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   1e229:	44 8b 20             	mov    (%rax),%r12d
   1e22c:	48 89 c5             	mov    %rax,%rbp
   1e22f:	e8 2c df 01 00       	callq  3c160 <fzlistx_destroy>
   1e234:	48 89 df             	mov    %rbx,%rdi
   1e237:	e8 24 be 01 00       	callq  3a060 <fzhashx_destroy>
   1e23c:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   1e240:	48 89 df             	mov    %rbx,%rdi
   1e243:	5b                   	pop    %rbx
   1e244:	5d                   	pop    %rbp
   1e245:	41 5c                	pop    %r12
   1e247:	e9 64 18 ff ff       	jmpq   fab0 <free@plt>
   1e24c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e250:	c3                   	retq   

000000000001e251 <.annobin_hola_create.start>:
   1e251:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e258:	00 00 00 00 
   1e25c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001e260 <hola_create>:
   1e260:	f3 0f 1e fa          	endbr64 
   1e264:	55                   	push   %rbp
   1e265:	53                   	push   %rbx
   1e266:	48 83 ec 08          	sub    $0x8,%rsp
   1e26a:	f7 c7 fc ff ff ff    	test   $0xfffffffc,%edi
   1e270:	75 46                	jne    1e2b8 <hola_create+0x58>
   1e272:	89 fd                	mov    %edi,%ebp
   1e274:	be 30 00 00 00       	mov    $0x30,%esi
   1e279:	bf 01 00 00 00       	mov    $0x1,%edi
   1e27e:	e8 8d 1f ff ff       	callq  10210 <calloc@plt>
   1e283:	48 89 c3             	mov    %rax,%rbx
   1e286:	48 85 c0             	test   %rax,%rax
   1e289:	74 1f                	je     1e2aa <hola_create+0x4a>
   1e28b:	89 68 2c             	mov    %ebp,0x2c(%rax)
   1e28e:	e8 dd bc 01 00       	callq  39f70 <fzhashx_new>
   1e293:	48 89 03             	mov    %rax,(%rbx)
   1e296:	48 85 c0             	test   %rax,%rax
   1e299:	74 35                	je     1e2d0 <hola_create+0x70>
   1e29b:	48 8d 35 be de 01 00 	lea    0x1debe(%rip),%rsi        # 3c160 <fzlistx_destroy>
   1e2a2:	48 89 c7             	mov    %rax,%rdi
   1e2a5:	e8 76 c8 01 00       	callq  3ab20 <fzhashx_set_destructor>
   1e2aa:	48 83 c4 08          	add    $0x8,%rsp
   1e2ae:	48 89 d8             	mov    %rbx,%rax
   1e2b1:	5b                   	pop    %rbx
   1e2b2:	5d                   	pop    %rbp
   1e2b3:	c3                   	retq   
   1e2b4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e2b8:	e8 53 18 ff ff       	callq  fb10 <__errno_location@plt>
   1e2bd:	31 db                	xor    %ebx,%ebx
   1e2bf:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e2c5:	48 83 c4 08          	add    $0x8,%rsp
   1e2c9:	48 89 d8             	mov    %rbx,%rax
   1e2cc:	5b                   	pop    %rbx
   1e2cd:	5d                   	pop    %rbp
   1e2ce:	c3                   	retq   
   1e2cf:	90                   	nop
   1e2d0:	48 89 df             	mov    %rbx,%rdi
   1e2d3:	31 db                	xor    %ebx,%ebx
   1e2d5:	e8 36 ff ff ff       	callq  1e210 <hola_destroy>
   1e2da:	eb ce                	jmp    1e2aa <hola_create+0x4a>

000000000001e2dc <.annobin_hola_create.end>:
   1e2dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001e2e0 <hola_set_list_destructor>:
   1e2e0:	f3 0f 1e fa          	endbr64 
   1e2e4:	48 85 ff             	test   %rdi,%rdi
   1e2e7:	74 04                	je     1e2ed <hola_set_list_destructor+0xd>
   1e2e9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   1e2ed:	c3                   	retq   

000000000001e2ee <.annobin_hola_set_list_destructor.end>:
   1e2ee:	66 90                	xchg   %ax,%ax

000000000001e2f0 <hola_set_list_duplicator>:
   1e2f0:	f3 0f 1e fa          	endbr64 
   1e2f4:	48 85 ff             	test   %rdi,%rdi
   1e2f7:	74 04                	je     1e2fd <hola_set_list_duplicator+0xd>
   1e2f9:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   1e2fd:	c3                   	retq   

000000000001e2fe <.annobin_hola_set_list_comparator.start>:
   1e2fe:	66 90                	xchg   %ax,%ax

000000000001e300 <hola_set_list_comparator>:
   1e300:	f3 0f 1e fa          	endbr64 
   1e304:	48 85 ff             	test   %rdi,%rdi
   1e307:	74 04                	je     1e30d <hola_set_list_comparator+0xd>
   1e309:	48 89 77 20          	mov    %rsi,0x20(%rdi)
   1e30d:	c3                   	retq   

000000000001e30e <.annobin_hola_set_hash_key_destructor.start>:
   1e30e:	66 90                	xchg   %ax,%ax

000000000001e310 <hola_set_hash_key_destructor>:
   1e310:	f3 0f 1e fa          	endbr64 
   1e314:	48 85 ff             	test   %rdi,%rdi
   1e317:	74 0f                	je     1e328 <hola_set_hash_key_destructor+0x18>
   1e319:	48 8b 3f             	mov    (%rdi),%rdi
   1e31c:	e9 5f c8 01 00       	jmpq   3ab80 <fzhashx_set_key_destructor>
   1e321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e328:	c3                   	retq   

000000000001e329 <.annobin_hola_set_hash_key_destructor.end>:
   1e329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001e330 <hola_set_hash_key_duplicator>:
   1e330:	f3 0f 1e fa          	endbr64 
   1e334:	48 85 ff             	test   %rdi,%rdi
   1e337:	74 0f                	je     1e348 <hola_set_hash_key_duplicator+0x18>
   1e339:	48 8b 3f             	mov    (%rdi),%rdi
   1e33c:	e9 6f c8 01 00       	jmpq   3abb0 <fzhashx_set_key_duplicator>
   1e341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e348:	c3                   	retq   

000000000001e349 <.annobin_hola_set_hash_key_comparator.start>:
   1e349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001e350 <hola_set_hash_key_comparator>:
   1e350:	f3 0f 1e fa          	endbr64 
   1e354:	48 85 ff             	test   %rdi,%rdi
   1e357:	74 0f                	je     1e368 <hola_set_hash_key_comparator+0x18>
   1e359:	48 8b 3f             	mov    (%rdi),%rdi
   1e35c:	e9 7f c8 01 00       	jmpq   3abe0 <fzhashx_set_key_comparator>
   1e361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e368:	c3                   	retq   

000000000001e369 <.annobin_hola_set_hash_key_comparator.end>:
   1e369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001e370 <hola_set_hash_key_hasher>:
   1e370:	f3 0f 1e fa          	endbr64 
   1e374:	48 85 ff             	test   %rdi,%rdi
   1e377:	74 0f                	je     1e388 <hola_set_hash_key_hasher+0x18>
   1e379:	48 8b 3f             	mov    (%rdi),%rdi
   1e37c:	e9 bf c8 01 00       	jmpq   3ac40 <fzhashx_set_key_hasher>
   1e381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e388:	c3                   	retq   

000000000001e389 <.annobin_hola_hash_lookup.start>:
   1e389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001e390 <hola_hash_lookup>:
   1e390:	f3 0f 1e fa          	endbr64 
   1e394:	53                   	push   %rbx
   1e395:	48 85 ff             	test   %rdi,%rdi
   1e398:	74 1e                	je     1e3b8 <hola_hash_lookup+0x28>
   1e39a:	48 85 f6             	test   %rsi,%rsi
   1e39d:	74 19                	je     1e3b8 <hola_hash_lookup+0x28>
   1e39f:	48 8b 3f             	mov    (%rdi),%rdi
   1e3a2:	e8 69 c1 01 00       	callq  3a510 <fzhashx_lookup>
   1e3a7:	48 89 c3             	mov    %rax,%rbx
   1e3aa:	48 85 c0             	test   %rax,%rax
   1e3ad:	74 21                	je     1e3d0 <hola_hash_lookup+0x40>
   1e3af:	48 89 d8             	mov    %rbx,%rax
   1e3b2:	5b                   	pop    %rbx
   1e3b3:	c3                   	retq   
   1e3b4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e3b8:	e8 53 17 ff ff       	callq  fb10 <__errno_location@plt>
   1e3bd:	31 db                	xor    %ebx,%ebx
   1e3bf:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e3c5:	48 89 d8             	mov    %rbx,%rax
   1e3c8:	5b                   	pop    %rbx
   1e3c9:	c3                   	retq   
   1e3ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e3d0:	e8 3b 17 ff ff       	callq  fb10 <__errno_location@plt>
   1e3d5:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e3db:	eb d2                	jmp    1e3af <hola_hash_lookup+0x1f>

000000000001e3dd <.annobin_hola_hash_add.start>:
   1e3dd:	0f 1f 00             	nopl   (%rax)

000000000001e3e0 <hola_hash_add>:
   1e3e0:	f3 0f 1e fa          	endbr64 
   1e3e4:	48 83 ec 08          	sub    $0x8,%rsp
   1e3e8:	48 85 ff             	test   %rdi,%rdi
   1e3eb:	74 23                	je     1e410 <hola_hash_add+0x30>
   1e3ed:	48 85 f6             	test   %rsi,%rsi
   1e3f0:	74 1e                	je     1e410 <hola_hash_add+0x30>
   1e3f2:	e8 49 fd ff ff       	callq  1e140 <hash_add>
   1e3f7:	48 85 c0             	test   %rax,%rax
   1e3fa:	0f 94 c0             	sete   %al
   1e3fd:	0f b6 c0             	movzbl %al,%eax
   1e400:	f7 d8                	neg    %eax
   1e402:	48 83 c4 08          	add    $0x8,%rsp
   1e406:	c3                   	retq   
   1e407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e40e:	00 00 
   1e410:	e8 fb 16 ff ff       	callq  fb10 <__errno_location@plt>
   1e415:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e41b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e420:	eb e0                	jmp    1e402 <hola_hash_add+0x22>

000000000001e422 <.annobin_hola_hash_add.end>:
   1e422:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e429:	00 00 00 00 
   1e42d:	0f 1f 00             	nopl   (%rax)

000000000001e430 <hola_hash_delete>:
   1e430:	f3 0f 1e fa          	endbr64 
   1e434:	55                   	push   %rbp
   1e435:	53                   	push   %rbx
   1e436:	48 83 ec 08          	sub    $0x8,%rsp
   1e43a:	48 85 ff             	test   %rdi,%rdi
   1e43d:	74 31                	je     1e470 <hola_hash_delete+0x40>
   1e43f:	48 89 f5             	mov    %rsi,%rbp
   1e442:	48 85 f6             	test   %rsi,%rsi
   1e445:	74 29                	je     1e470 <hola_hash_delete+0x40>
   1e447:	48 89 fb             	mov    %rdi,%rbx
   1e44a:	48 8b 3f             	mov    (%rdi),%rdi
   1e44d:	e8 be c0 01 00       	callq  3a510 <fzhashx_lookup>
   1e452:	48 85 c0             	test   %rax,%rax
   1e455:	74 2b                	je     1e482 <hola_hash_delete+0x52>
   1e457:	48 8b 3b             	mov    (%rbx),%rdi
   1e45a:	48 89 ee             	mov    %rbp,%rsi
   1e45d:	e8 6e bf 01 00       	callq  3a3d0 <fzhashx_delete>
   1e462:	80 63 28 fe          	andb   $0xfe,0x28(%rbx)
   1e466:	31 c0                	xor    %eax,%eax
   1e468:	48 83 c4 08          	add    $0x8,%rsp
   1e46c:	5b                   	pop    %rbx
   1e46d:	5d                   	pop    %rbp
   1e46e:	c3                   	retq   
   1e46f:	90                   	nop
   1e470:	e8 9b 16 ff ff       	callq  fb10 <__errno_location@plt>
   1e475:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e47b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e480:	eb e6                	jmp    1e468 <hola_hash_delete+0x38>
   1e482:	e8 89 16 ff ff       	callq  fb10 <__errno_location@plt>
   1e487:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e48d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e492:	eb d4                	jmp    1e468 <hola_hash_delete+0x38>

000000000001e494 <.annobin_hola_hash_delete.end>:
   1e494:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e49b:	00 00 00 00 
   1e49f:	90                   	nop

000000000001e4a0 <hola_hash_first>:
   1e4a0:	f3 0f 1e fa          	endbr64 
   1e4a4:	48 85 ff             	test   %rdi,%rdi
   1e4a7:	74 17                	je     1e4c0 <hola_hash_first+0x20>
   1e4a9:	f6 47 28 01          	testb  $0x1,0x28(%rdi)
   1e4ad:	74 19                	je     1e4c8 <hola_hash_first+0x28>
   1e4af:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1e4b3:	48 85 ff             	test   %rdi,%rdi
   1e4b6:	74 08                	je     1e4c0 <hola_hash_first+0x20>
   1e4b8:	e9 33 d6 01 00       	jmpq   3baf0 <fzlistx_first>
   1e4bd:	0f 1f 00             	nopl   (%rax)
   1e4c0:	31 c0                	xor    %eax,%eax
   1e4c2:	c3                   	retq   
   1e4c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e4c8:	53                   	push   %rbx
   1e4c9:	48 89 fb             	mov    %rdi,%rbx
   1e4cc:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1e4d0:	e8 8b dc 01 00       	callq  3c160 <fzlistx_destroy>
   1e4d5:	48 8b 3b             	mov    (%rbx),%rdi
   1e4d8:	e8 f3 c1 01 00       	callq  3a6d0 <fzhashx_keys>
   1e4dd:	48 89 c7             	mov    %rax,%rdi
   1e4e0:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1e4e4:	48 85 c0             	test   %rax,%rax
   1e4e7:	74 0f                	je     1e4f8 <hola_hash_first+0x58>
   1e4e9:	80 4b 28 01          	orb    $0x1,0x28(%rbx)
   1e4ed:	5b                   	pop    %rbx
   1e4ee:	e9 fd d5 01 00       	jmpq   3baf0 <fzlistx_first>
   1e4f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e4f8:	31 c0                	xor    %eax,%eax
   1e4fa:	5b                   	pop    %rbx
   1e4fb:	c3                   	retq   

000000000001e4fc <.annobin_hola_hash_first.end>:
   1e4fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001e500 <hola_hash_next>:
   1e500:	f3 0f 1e fa          	endbr64 
   1e504:	48 85 ff             	test   %rdi,%rdi
   1e507:	74 17                	je     1e520 <hola_hash_next+0x20>
   1e509:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1e50d:	48 85 ff             	test   %rdi,%rdi
   1e510:	74 0e                	je     1e520 <hola_hash_next+0x20>
   1e512:	e9 29 d6 01 00       	jmpq   3bb40 <fzlistx_next>
   1e517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e51e:	00 00 
   1e520:	31 c0                	xor    %eax,%eax
   1e522:	c3                   	retq   

000000000001e523 <.annobin_hola_hash_next.end>:
   1e523:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e52a:	00 00 00 00 
   1e52e:	66 90                	xchg   %ax,%ax

000000000001e530 <hola_hash_size>:
   1e530:	f3 0f 1e fa          	endbr64 
   1e534:	48 85 ff             	test   %rdi,%rdi
   1e537:	74 0f                	je     1e548 <hola_hash_size+0x18>
   1e539:	48 8b 3f             	mov    (%rdi),%rdi
   1e53c:	e9 5f c1 01 00       	jmpq   3a6a0 <fzhashx_size>
   1e541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e548:	31 c0                	xor    %eax,%eax
   1e54a:	c3                   	retq   

000000000001e54b <.annobin_hola_hash_size.end>:
   1e54b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001e550 <hola_list_add_end>:
   1e550:	f3 0f 1e fa          	endbr64 
   1e554:	41 54                	push   %r12
   1e556:	49 89 d4             	mov    %rdx,%r12
   1e559:	55                   	push   %rbp
   1e55a:	53                   	push   %rbx
   1e55b:	48 83 ec 10          	sub    $0x10,%rsp
   1e55f:	48 85 f6             	test   %rsi,%rsi
   1e562:	0f 94 c2             	sete   %dl
   1e565:	4d 85 e4             	test   %r12,%r12
   1e568:	0f 94 c0             	sete   %al
   1e56b:	08 c2                	or     %al,%dl
   1e56d:	75 61                	jne    1e5d0 <hola_list_add_end+0x80>
   1e56f:	48 89 fb             	mov    %rdi,%rbx
   1e572:	48 85 ff             	test   %rdi,%rdi
   1e575:	74 59                	je     1e5d0 <hola_list_add_end+0x80>
   1e577:	48 8b 3f             	mov    (%rdi),%rdi
   1e57a:	48 89 f5             	mov    %rsi,%rbp
   1e57d:	e8 8e bf 01 00       	callq  3a510 <fzhashx_lookup>
   1e582:	48 89 c7             	mov    %rax,%rdi
   1e585:	48 85 c0             	test   %rax,%rax
   1e588:	74 26                	je     1e5b0 <hola_list_add_end+0x60>
   1e58a:	4c 89 e6             	mov    %r12,%rsi
   1e58d:	e8 be d3 01 00       	callq  3b950 <fzlistx_add_end>
   1e592:	48 89 c7             	mov    %rax,%rdi
   1e595:	48 85 c0             	test   %rax,%rax
   1e598:	74 76                	je     1e610 <hola_list_add_end+0xc0>
   1e59a:	48 83 c4 10          	add    $0x10,%rsp
   1e59e:	48 89 f8             	mov    %rdi,%rax
   1e5a1:	5b                   	pop    %rbx
   1e5a2:	5d                   	pop    %rbp
   1e5a3:	41 5c                	pop    %r12
   1e5a5:	c3                   	retq   
   1e5a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e5ad:	00 00 00 
   1e5b0:	f6 43 2c 01          	testb  $0x1,0x2c(%rbx)
   1e5b4:	74 3a                	je     1e5f0 <hola_list_add_end+0xa0>
   1e5b6:	48 89 df             	mov    %rbx,%rdi
   1e5b9:	48 89 ee             	mov    %rbp,%rsi
   1e5bc:	e8 7f fb ff ff       	callq  1e140 <hash_add>
   1e5c1:	48 89 c7             	mov    %rax,%rdi
   1e5c4:	48 85 c0             	test   %rax,%rax
   1e5c7:	75 c1                	jne    1e58a <hola_list_add_end+0x3a>
   1e5c9:	eb cf                	jmp    1e59a <hola_list_add_end+0x4a>
   1e5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e5d0:	e8 3b 15 ff ff       	callq  fb10 <__errno_location@plt>
   1e5d5:	31 ff                	xor    %edi,%edi
   1e5d7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e5dd:	48 83 c4 10          	add    $0x10,%rsp
   1e5e1:	48 89 f8             	mov    %rdi,%rax
   1e5e4:	5b                   	pop    %rbx
   1e5e5:	5d                   	pop    %rbp
   1e5e6:	41 5c                	pop    %r12
   1e5e8:	c3                   	retq   
   1e5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e5f0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e5f5:	e8 16 15 ff ff       	callq  fb10 <__errno_location@plt>
   1e5fa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e5ff:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e605:	eb 93                	jmp    1e59a <hola_list_add_end+0x4a>
   1e607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e60e:	00 00 
   1e610:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e615:	e8 f6 14 ff ff       	callq  fb10 <__errno_location@plt>
   1e61a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e61f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1e625:	e9 70 ff ff ff       	jmpq   1e59a <hola_list_add_end+0x4a>

000000000001e62a <.annobin_hola_list_add_end.end>:
   1e62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e630 <hola_list_insert>:
   1e630:	f3 0f 1e fa          	endbr64 
   1e634:	41 55                	push   %r13
   1e636:	49 89 d5             	mov    %rdx,%r13
   1e639:	41 54                	push   %r12
   1e63b:	55                   	push   %rbp
   1e63c:	53                   	push   %rbx
   1e63d:	48 83 ec 18          	sub    $0x18,%rsp
   1e641:	48 85 f6             	test   %rsi,%rsi
   1e644:	0f 94 c2             	sete   %dl
   1e647:	4d 85 ed             	test   %r13,%r13
   1e64a:	0f 94 c0             	sete   %al
   1e64d:	08 c2                	or     %al,%dl
   1e64f:	75 67                	jne    1e6b8 <hola_list_insert+0x88>
   1e651:	48 89 fb             	mov    %rdi,%rbx
   1e654:	48 85 ff             	test   %rdi,%rdi
   1e657:	74 5f                	je     1e6b8 <hola_list_insert+0x88>
   1e659:	48 8b 3f             	mov    (%rdi),%rdi
   1e65c:	48 89 f5             	mov    %rsi,%rbp
   1e65f:	41 89 cc             	mov    %ecx,%r12d
   1e662:	e8 a9 be 01 00       	callq  3a510 <fzhashx_lookup>
   1e667:	48 89 c7             	mov    %rax,%rdi
   1e66a:	48 85 c0             	test   %rax,%rax
   1e66d:	74 29                	je     1e698 <hola_list_insert+0x68>
   1e66f:	41 0f b6 d4          	movzbl %r12b,%edx
   1e673:	4c 89 ee             	mov    %r13,%rsi
   1e676:	e8 05 de 01 00       	callq  3c480 <fzlistx_insert>
   1e67b:	48 89 c7             	mov    %rax,%rdi
   1e67e:	48 85 c0             	test   %rax,%rax
   1e681:	74 6d                	je     1e6f0 <hola_list_insert+0xc0>
   1e683:	48 83 c4 18          	add    $0x18,%rsp
   1e687:	48 89 f8             	mov    %rdi,%rax
   1e68a:	5b                   	pop    %rbx
   1e68b:	5d                   	pop    %rbp
   1e68c:	41 5c                	pop    %r12
   1e68e:	41 5d                	pop    %r13
   1e690:	c3                   	retq   
   1e691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e698:	f6 43 2c 01          	testb  $0x1,0x2c(%rbx)
   1e69c:	74 3a                	je     1e6d8 <hola_list_insert+0xa8>
   1e69e:	48 89 df             	mov    %rbx,%rdi
   1e6a1:	48 89 ee             	mov    %rbp,%rsi
   1e6a4:	e8 97 fa ff ff       	callq  1e140 <hash_add>
   1e6a9:	48 89 c7             	mov    %rax,%rdi
   1e6ac:	48 85 c0             	test   %rax,%rax
   1e6af:	75 be                	jne    1e66f <hola_list_insert+0x3f>
   1e6b1:	eb d0                	jmp    1e683 <hola_list_insert+0x53>
   1e6b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6b8:	e8 53 14 ff ff       	callq  fb10 <__errno_location@plt>
   1e6bd:	31 ff                	xor    %edi,%edi
   1e6bf:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e6c5:	48 83 c4 18          	add    $0x18,%rsp
   1e6c9:	48 89 f8             	mov    %rdi,%rax
   1e6cc:	5b                   	pop    %rbx
   1e6cd:	5d                   	pop    %rbp
   1e6ce:	41 5c                	pop    %r12
   1e6d0:	41 5d                	pop    %r13
   1e6d2:	c3                   	retq   
   1e6d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e6dd:	e8 2e 14 ff ff       	callq  fb10 <__errno_location@plt>
   1e6e2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e6e7:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e6ed:	eb 94                	jmp    1e683 <hola_list_insert+0x53>
   1e6ef:	90                   	nop
   1e6f0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e6f5:	e8 16 14 ff ff       	callq  fb10 <__errno_location@plt>
   1e6fa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e6ff:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1e705:	e9 79 ff ff ff       	jmpq   1e683 <hola_list_insert+0x53>

000000000001e70a <.annobin_hola_list_find.start>:
   1e70a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e710 <hola_list_find>:
   1e710:	f3 0f 1e fa          	endbr64 
   1e714:	48 85 f6             	test   %rsi,%rsi
   1e717:	53                   	push   %rbx
   1e718:	48 89 d3             	mov    %rdx,%rbx
   1e71b:	0f 94 c2             	sete   %dl
   1e71e:	48 85 db             	test   %rbx,%rbx
   1e721:	0f 94 c0             	sete   %al
   1e724:	08 c2                	or     %al,%dl
   1e726:	75 28                	jne    1e750 <hola_list_find+0x40>
   1e728:	48 85 ff             	test   %rdi,%rdi
   1e72b:	74 23                	je     1e750 <hola_list_find+0x40>
   1e72d:	48 8b 3f             	mov    (%rdi),%rdi
   1e730:	e8 db bd 01 00       	callq  3a510 <fzhashx_lookup>
   1e735:	48 85 c0             	test   %rax,%rax
   1e738:	74 26                	je     1e760 <hola_list_find+0x50>
   1e73a:	48 89 de             	mov    %rbx,%rsi
   1e73d:	48 89 c7             	mov    %rax,%rdi
   1e740:	e8 cb d5 01 00       	callq  3bd10 <fzlistx_find>
   1e745:	48 85 c0             	test   %rax,%rax
   1e748:	74 16                	je     1e760 <hola_list_find+0x50>
   1e74a:	5b                   	pop    %rbx
   1e74b:	c3                   	retq   
   1e74c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e750:	e8 bb 13 ff ff       	callq  fb10 <__errno_location@plt>
   1e755:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e75b:	31 c0                	xor    %eax,%eax
   1e75d:	5b                   	pop    %rbx
   1e75e:	c3                   	retq   
   1e75f:	90                   	nop
   1e760:	e8 ab 13 ff ff       	callq  fb10 <__errno_location@plt>
   1e765:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e76b:	31 c0                	xor    %eax,%eax
   1e76d:	5b                   	pop    %rbx
   1e76e:	c3                   	retq   

000000000001e76f <.annobin_hola_list_delete.start>:
   1e76f:	90                   	nop

000000000001e770 <hola_list_delete>:
   1e770:	f3 0f 1e fa          	endbr64 
   1e774:	41 55                	push   %r13
   1e776:	49 89 d5             	mov    %rdx,%r13
   1e779:	41 54                	push   %r12
   1e77b:	55                   	push   %rbp
   1e77c:	53                   	push   %rbx
   1e77d:	48 83 ec 08          	sub    $0x8,%rsp
   1e781:	48 85 f6             	test   %rsi,%rsi
   1e784:	0f 94 c2             	sete   %dl
   1e787:	4d 85 ed             	test   %r13,%r13
   1e78a:	0f 94 c0             	sete   %al
   1e78d:	08 c2                	or     %al,%dl
   1e78f:	75 5f                	jne    1e7f0 <hola_list_delete+0x80>
   1e791:	48 89 fb             	mov    %rdi,%rbx
   1e794:	48 85 ff             	test   %rdi,%rdi
   1e797:	74 57                	je     1e7f0 <hola_list_delete+0x80>
   1e799:	48 8b 3f             	mov    (%rdi),%rdi
   1e79c:	49 89 f4             	mov    %rsi,%r12
   1e79f:	e8 6c bd 01 00       	callq  3a510 <fzhashx_lookup>
   1e7a4:	48 89 c5             	mov    %rax,%rbp
   1e7a7:	48 85 c0             	test   %rax,%rax
   1e7aa:	74 5c                	je     1e808 <hola_list_delete+0x98>
   1e7ac:	4c 89 ee             	mov    %r13,%rsi
   1e7af:	48 89 c7             	mov    %rax,%rdi
   1e7b2:	e8 19 d7 01 00       	callq  3bed0 <fzlistx_delete>
   1e7b7:	85 c0                	test   %eax,%eax
   1e7b9:	78 4d                	js     1e808 <hola_list_delete+0x98>
   1e7bb:	f6 43 2c 02          	testb  $0x2,0x2c(%rbx)
   1e7bf:	75 0f                	jne    1e7d0 <hola_list_delete+0x60>
   1e7c1:	31 c0                	xor    %eax,%eax
   1e7c3:	48 83 c4 08          	add    $0x8,%rsp
   1e7c7:	5b                   	pop    %rbx
   1e7c8:	5d                   	pop    %rbp
   1e7c9:	41 5c                	pop    %r12
   1e7cb:	41 5d                	pop    %r13
   1e7cd:	c3                   	retq   
   1e7ce:	66 90                	xchg   %ax,%ax
   1e7d0:	48 89 ef             	mov    %rbp,%rdi
   1e7d3:	e8 68 d2 01 00       	callq  3ba40 <fzlistx_size>
   1e7d8:	48 85 c0             	test   %rax,%rax
   1e7db:	75 e4                	jne    1e7c1 <hola_list_delete+0x51>
   1e7dd:	48 8b 3b             	mov    (%rbx),%rdi
   1e7e0:	4c 89 e6             	mov    %r12,%rsi
   1e7e3:	e8 e8 bb 01 00       	callq  3a3d0 <fzhashx_delete>
   1e7e8:	80 63 28 fe          	andb   $0xfe,0x28(%rbx)
   1e7ec:	eb d3                	jmp    1e7c1 <hola_list_delete+0x51>
   1e7ee:	66 90                	xchg   %ax,%ax
   1e7f0:	e8 1b 13 ff ff       	callq  fb10 <__errno_location@plt>
   1e7f5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1e7fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e800:	eb c1                	jmp    1e7c3 <hola_list_delete+0x53>
   1e802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e808:	e8 03 13 ff ff       	callq  fb10 <__errno_location@plt>
   1e80d:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1e813:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e818:	eb a9                	jmp    1e7c3 <hola_list_delete+0x53>

000000000001e81a <.annobin_hola_list_delete.end>:
   1e81a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e820 <hola_list_first>:
   1e820:	f3 0f 1e fa          	endbr64 
   1e824:	48 85 ff             	test   %rdi,%rdi
   1e827:	74 37                	je     1e860 <hola_list_first+0x40>
   1e829:	48 85 f6             	test   %rsi,%rsi
   1e82c:	74 32                	je     1e860 <hola_list_first+0x40>
   1e82e:	48 83 ec 08          	sub    $0x8,%rsp
   1e832:	48 8b 3f             	mov    (%rdi),%rdi
   1e835:	e8 d6 bc 01 00       	callq  3a510 <fzhashx_lookup>
   1e83a:	48 85 c0             	test   %rax,%rax
   1e83d:	74 11                	je     1e850 <hola_list_first+0x30>
   1e83f:	48 89 c7             	mov    %rax,%rdi
   1e842:	48 83 c4 08          	add    $0x8,%rsp
   1e846:	e9 a5 d2 01 00       	jmpq   3baf0 <fzlistx_first>
   1e84b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e850:	31 c0                	xor    %eax,%eax
   1e852:	48 83 c4 08          	add    $0x8,%rsp
   1e856:	c3                   	retq   
   1e857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e85e:	00 00 
   1e860:	31 c0                	xor    %eax,%eax
   1e862:	c3                   	retq   

000000000001e863 <.annobin_hola_list_first.end>:
   1e863:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e86a:	00 00 00 00 
   1e86e:	66 90                	xchg   %ax,%ax

000000000001e870 <hola_list_next>:
   1e870:	f3 0f 1e fa          	endbr64 
   1e874:	48 85 ff             	test   %rdi,%rdi
   1e877:	74 37                	je     1e8b0 <hola_list_next+0x40>
   1e879:	48 85 f6             	test   %rsi,%rsi
   1e87c:	74 32                	je     1e8b0 <hola_list_next+0x40>
   1e87e:	48 83 ec 08          	sub    $0x8,%rsp
   1e882:	48 8b 3f             	mov    (%rdi),%rdi
   1e885:	e8 86 bc 01 00       	callq  3a510 <fzhashx_lookup>
   1e88a:	48 85 c0             	test   %rax,%rax
   1e88d:	74 11                	je     1e8a0 <hola_list_next+0x30>
   1e88f:	48 89 c7             	mov    %rax,%rdi
   1e892:	48 83 c4 08          	add    $0x8,%rsp
   1e896:	e9 a5 d2 01 00       	jmpq   3bb40 <fzlistx_next>
   1e89b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e8a0:	31 c0                	xor    %eax,%eax
   1e8a2:	48 83 c4 08          	add    $0x8,%rsp
   1e8a6:	c3                   	retq   
   1e8a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e8ae:	00 00 
   1e8b0:	31 c0                	xor    %eax,%eax
   1e8b2:	c3                   	retq   

000000000001e8b3 <.annobin_hola_list_next.end>:
   1e8b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e8ba:	00 00 00 00 
   1e8be:	66 90                	xchg   %ax,%ax

000000000001e8c0 <hola_list_prev>:
   1e8c0:	f3 0f 1e fa          	endbr64 
   1e8c4:	48 85 ff             	test   %rdi,%rdi
   1e8c7:	74 37                	je     1e900 <hola_list_prev+0x40>
   1e8c9:	48 85 f6             	test   %rsi,%rsi
   1e8cc:	74 32                	je     1e900 <hola_list_prev+0x40>
   1e8ce:	48 83 ec 08          	sub    $0x8,%rsp
   1e8d2:	48 8b 3f             	mov    (%rdi),%rdi
   1e8d5:	e8 36 bc 01 00       	callq  3a510 <fzhashx_lookup>
   1e8da:	48 85 c0             	test   %rax,%rax
   1e8dd:	74 11                	je     1e8f0 <hola_list_prev+0x30>
   1e8df:	48 89 c7             	mov    %rax,%rdi
   1e8e2:	48 83 c4 08          	add    $0x8,%rsp
   1e8e6:	e9 a5 d2 01 00       	jmpq   3bb90 <fzlistx_prev>
   1e8eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e8f0:	31 c0                	xor    %eax,%eax
   1e8f2:	48 83 c4 08          	add    $0x8,%rsp
   1e8f6:	c3                   	retq   
   1e8f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e8fe:	00 00 
   1e900:	31 c0                	xor    %eax,%eax
   1e902:	c3                   	retq   

000000000001e903 <.annobin_hola_list_last.start>:
   1e903:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e90a:	00 00 00 00 
   1e90e:	66 90                	xchg   %ax,%ax

000000000001e910 <hola_list_last>:
   1e910:	f3 0f 1e fa          	endbr64 
   1e914:	48 85 ff             	test   %rdi,%rdi
   1e917:	74 37                	je     1e950 <hola_list_last+0x40>
   1e919:	48 85 f6             	test   %rsi,%rsi
   1e91c:	74 32                	je     1e950 <hola_list_last+0x40>
   1e91e:	48 83 ec 08          	sub    $0x8,%rsp
   1e922:	48 8b 3f             	mov    (%rdi),%rdi
   1e925:	e8 e6 bb 01 00       	callq  3a510 <fzhashx_lookup>
   1e92a:	48 85 c0             	test   %rax,%rax
   1e92d:	74 11                	je     1e940 <hola_list_last+0x30>
   1e92f:	48 89 c7             	mov    %rax,%rdi
   1e932:	48 83 c4 08          	add    $0x8,%rsp
   1e936:	e9 a5 d2 01 00       	jmpq   3bbe0 <fzlistx_last>
   1e93b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e940:	31 c0                	xor    %eax,%eax
   1e942:	48 83 c4 08          	add    $0x8,%rsp
   1e946:	c3                   	retq   
   1e947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e94e:	00 00 
   1e950:	31 c0                	xor    %eax,%eax
   1e952:	c3                   	retq   

000000000001e953 <.annobin_hola_list_cursor.start>:
   1e953:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e95a:	00 00 00 00 
   1e95e:	66 90                	xchg   %ax,%ax

000000000001e960 <hola_list_cursor>:
   1e960:	f3 0f 1e fa          	endbr64 
   1e964:	48 85 ff             	test   %rdi,%rdi
   1e967:	74 37                	je     1e9a0 <hola_list_cursor+0x40>
   1e969:	48 85 f6             	test   %rsi,%rsi
   1e96c:	74 32                	je     1e9a0 <hola_list_cursor+0x40>
   1e96e:	48 83 ec 08          	sub    $0x8,%rsp
   1e972:	48 8b 3f             	mov    (%rdi),%rdi
   1e975:	e8 96 bb 01 00       	callq  3a510 <fzhashx_lookup>
   1e97a:	48 85 c0             	test   %rax,%rax
   1e97d:	74 11                	je     1e990 <hola_list_cursor+0x30>
   1e97f:	48 89 c7             	mov    %rax,%rdi
   1e982:	48 83 c4 08          	add    $0x8,%rsp
   1e986:	e9 f5 d2 01 00       	jmpq   3bc80 <fzlistx_cursor>
   1e98b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e990:	31 c0                	xor    %eax,%eax
   1e992:	48 83 c4 08          	add    $0x8,%rsp
   1e996:	c3                   	retq   
   1e997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e99e:	00 00 
   1e9a0:	31 c0                	xor    %eax,%eax
   1e9a2:	c3                   	retq   

000000000001e9a3 <.annobin_hola_list_cursor.end>:
   1e9a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1e9aa:	00 00 00 00 
   1e9ae:	66 90                	xchg   %ax,%ax

000000000001e9b0 <hola_list_size>:
   1e9b0:	f3 0f 1e fa          	endbr64 
   1e9b4:	48 85 ff             	test   %rdi,%rdi
   1e9b7:	74 05                	je     1e9be <hola_list_size+0xe>
   1e9b9:	48 85 f6             	test   %rsi,%rsi
   1e9bc:	75 0a                	jne    1e9c8 <hola_list_size+0x18>
   1e9be:	31 c0                	xor    %eax,%eax
   1e9c0:	c3                   	retq   
   1e9c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e9c8:	48 83 ec 08          	sub    $0x8,%rsp
   1e9cc:	48 8b 3f             	mov    (%rdi),%rdi
   1e9cf:	e8 3c bb 01 00       	callq  3a510 <fzhashx_lookup>
   1e9d4:	48 85 c0             	test   %rax,%rax
   1e9d7:	74 0f                	je     1e9e8 <hola_list_size+0x38>
   1e9d9:	48 89 c7             	mov    %rax,%rdi
   1e9dc:	48 83 c4 08          	add    $0x8,%rsp
   1e9e0:	e9 5b d0 01 00       	jmpq   3ba40 <fzlistx_size>
   1e9e5:	0f 1f 00             	nopl   (%rax)
   1e9e8:	31 c0                	xor    %eax,%eax
   1e9ea:	48 83 c4 08          	add    $0x8,%rsp
   1e9ee:	c3                   	retq   

000000000001e9ef <.annobin_hola.c_end>:
   1e9ef:	90                   	nop

000000000001e9f0 <executable_selfdir>:
   1e9f0:	f3 0f 1e fa          	endbr64 
   1e9f4:	53                   	push   %rbx
   1e9f5:	48 8d 3d a4 8a 23 00 	lea    0x238aa4(%rip),%rdi        # 2574a0 <selfdir_lock.5038>
   1e9fc:	e8 cf 20 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1ea01:	48 83 3d 77 8a 23 00 	cmpq   $0x0,0x238a77(%rip)        # 257480 <current_exe_dir.5040>
   1ea08:	00 
   1ea09:	74 15                	je     1ea20 <executable_selfdir+0x30>
   1ea0b:	48 8d 3d 8e 8a 23 00 	lea    0x238a8e(%rip),%rdi        # 2574a0 <selfdir_lock.5038>
   1ea12:	e8 d9 19 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   1ea17:	48 8b 05 62 8a 23 00 	mov    0x238a62(%rip),%rax        # 257480 <current_exe_dir.5040>
   1ea1e:	5b                   	pop    %rbx
   1ea1f:	c3                   	retq   
  return __builtin___memset_chk (__dest, __ch, __len,
   1ea20:	48 8d 1d 59 7a 23 00 	lea    0x237a59(%rip),%rbx        # 256480 <current_exe_path.5039>
   1ea27:	31 c0                	xor    %eax,%eax
   1ea29:	b9 00 02 00 00       	mov    $0x200,%ecx
   1ea2e:	ba ff 0f 00 00       	mov    $0xfff,%edx
   1ea33:	48 89 df             	mov    %rbx,%rdi
   1ea36:	48 89 de             	mov    %rbx,%rsi
   1ea39:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ea3c:	48 8d 3d 95 0a 02 00 	lea    0x20a95(%rip),%rdi        # 3f4d8 <f58_prefix+0x75>
   1ea43:	e8 68 12 ff ff       	callq  fcb0 <readlink@plt>
   1ea48:	48 85 c0             	test   %rax,%rax
   1ea4b:	78 be                	js     1ea0b <executable_selfdir+0x1b>
   1ea4d:	48 89 df             	mov    %rbx,%rdi
   1ea50:	e8 5b 15 ff ff       	callq  ffb0 <dirname@plt>
   1ea55:	48 89 c7             	mov    %rax,%rdi
   1ea58:	48 89 c3             	mov    %rax,%rbx
   1ea5b:	e8 c0 13 ff ff       	callq  fe20 <strlen@plt>
   1ea60:	48 8d 44 03 ff       	lea    -0x1(%rbx,%rax,1),%rax
   1ea65:	80 38 73             	cmpb   $0x73,(%rax)
   1ea68:	74 0e                	je     1ea78 <executable_selfdir+0x88>
   1ea6a:	48 89 1d 0f 8a 23 00 	mov    %rbx,0x238a0f(%rip)        # 257480 <current_exe_dir.5040>
   1ea71:	eb 98                	jmp    1ea0b <executable_selfdir+0x1b>
   1ea73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ea78:	80 78 ff 62          	cmpb   $0x62,-0x1(%rax)
   1ea7c:	75 ec                	jne    1ea6a <executable_selfdir+0x7a>
   1ea7e:	80 78 fe 69          	cmpb   $0x69,-0x2(%rax)
   1ea82:	75 e6                	jne    1ea6a <executable_selfdir+0x7a>
   1ea84:	80 78 fd 6c          	cmpb   $0x6c,-0x3(%rax)
   1ea88:	75 e0                	jne    1ea6a <executable_selfdir+0x7a>
   1ea8a:	80 78 fc 2e          	cmpb   $0x2e,-0x4(%rax)
   1ea8e:	75 da                	jne    1ea6a <executable_selfdir+0x7a>
   1ea90:	80 78 fb 2f          	cmpb   $0x2f,-0x5(%rax)
   1ea94:	75 d4                	jne    1ea6a <executable_selfdir+0x7a>
   1ea96:	c6 40 fb 00          	movb   $0x0,-0x5(%rax)
   1ea9a:	eb ce                	jmp    1ea6a <executable_selfdir+0x7a>

000000000001ea9c <.annobin_executable_is_intree.start>:
   1ea9c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001eaa0 <executable_is_intree>:
   1eaa0:	f3 0f 1e fa          	endbr64 
   1eaa4:	41 54                	push   %r12
   1eaa6:	48 8d 3d 93 79 23 00 	lea    0x237993(%rip),%rdi        # 256440 <intree_lock.5051>
   1eaad:	55                   	push   %rbp
   1eaae:	53                   	push   %rbx
   1eaaf:	e8 1c 20 ff ff       	callq  10ad0 <pthread_mutex_lock@plt>
   1eab4:	8b 05 ae 45 23 00    	mov    0x2345ae(%rip),%eax        # 253068 <current_exe_intree.5052>
   1eaba:	85 c0                	test   %eax,%eax
   1eabc:	78 1a                	js     1ead8 <executable_is_intree+0x38>
   1eabe:	48 8d 3d 7b 79 23 00 	lea    0x23797b(%rip),%rdi        # 256440 <intree_lock.5051>
   1eac5:	e8 26 19 ff ff       	callq  103f0 <pthread_mutex_unlock@plt>
   1eaca:	5b                   	pop    %rbx
   1eacb:	8b 05 97 45 23 00    	mov    0x234597(%rip),%eax        # 253068 <current_exe_intree.5052>
   1ead1:	5d                   	pop    %rbp
   1ead2:	41 5c                	pop    %r12
   1ead4:	c3                   	retq   
   1ead5:	0f 1f 00             	nopl   (%rax)
   1ead8:	e8 13 ff ff ff       	callq  1e9f0 <executable_selfdir>
   1eadd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1eae2:	49 89 c4             	mov    %rax,%r12
   1eae5:	48 85 c0             	test   %rax,%rax
   1eae8:	74 3b                	je     1eb25 <executable_is_intree+0x85>
   1eaea:	31 f6                	xor    %esi,%esi
   1eaec:	48 8d 3d f5 09 02 00 	lea    0x209f5(%rip),%rdi        # 3f4e8 <f58_prefix+0x85>
   1eaf3:	e8 f8 17 ff ff       	callq  102f0 <realpath@plt>
   1eaf8:	48 89 c5             	mov    %rax,%rbp
   1eafb:	48 85 c0             	test   %rax,%rax
   1eafe:	74 30                	je     1eb30 <executable_is_intree+0x90>
   1eb00:	48 89 c7             	mov    %rax,%rdi
   1eb03:	31 db                	xor    %ebx,%ebx
   1eb05:	e8 16 13 ff ff       	callq  fe20 <strlen@plt>
   1eb0a:	48 89 ef             	mov    %rbp,%rdi
   1eb0d:	4c 89 e6             	mov    %r12,%rsi
   1eb10:	48 89 c2             	mov    %rax,%rdx
   1eb13:	e8 98 10 ff ff       	callq  fbb0 <strncmp@plt>
   1eb18:	48 89 ef             	mov    %rbp,%rdi
   1eb1b:	85 c0                	test   %eax,%eax
   1eb1d:	0f 94 c3             	sete   %bl
   1eb20:	e8 8b 0f ff ff       	callq  fab0 <free@plt>
   1eb25:	89 1d 3d 45 23 00    	mov    %ebx,0x23453d(%rip)        # 253068 <current_exe_intree.5052>
   1eb2b:	eb 91                	jmp    1eabe <executable_is_intree+0x1e>
   1eb2d:	0f 1f 00             	nopl   (%rax)
   1eb30:	e8 db 0f ff ff       	callq  fb10 <__errno_location@plt>
   1eb35:	8b 00                	mov    (%rax),%eax
   1eb37:	83 f8 02             	cmp    $0x2,%eax
   1eb3a:	0f 94 c3             	sete   %bl
   1eb3d:	83 f8 0d             	cmp    $0xd,%eax
   1eb40:	0f 94 c0             	sete   %al
   1eb43:	09 c3                	or     %eax,%ebx
   1eb45:	83 f3 01             	xor    $0x1,%ebx
   1eb48:	0f b6 db             	movzbl %bl,%ebx
   1eb4b:	f7 db                	neg    %ebx
   1eb4d:	eb d6                	jmp    1eb25 <executable_is_intree+0x85>

000000000001eb4f <.annobin_executable_is_intree.end>:
   1eb4f:	90                   	nop

000000000001eb50 <esprintf>:
   1eb50:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   1eb57:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1eb5c:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1eb61:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1eb66:	84 c0                	test   %al,%al
   1eb68:	74 37                	je     1eba1 <esprintf+0x51>
   1eb6a:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1eb6f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1eb74:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1eb79:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1eb80:	00 
   1eb81:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1eb88:	00 
   1eb89:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   1eb90:	00 
   1eb91:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   1eb98:	00 
   1eb99:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   1eba0:	00 
   1eba1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1eba8:	00 00 
   1ebaa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ebaf:	31 c0                	xor    %eax,%eax
   1ebb1:	48 85 ff             	test   %rdi,%rdi
   1ebb4:	74 40                	je     1ebf6 <esprintf+0xa6>
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1ebb6:	49 89 d0             	mov    %rdx,%r8
   1ebb9:	48 63 f6             	movslq %esi,%rsi
   1ebbc:	49 89 e1             	mov    %rsp,%r9
   1ebbf:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1ebc6:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1ebcd:	00 
   1ebce:	ba 01 00 00 00       	mov    $0x1,%edx
   1ebd3:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
   1ebda:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ebdf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1ebe4:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   1ebeb:	00 
   1ebec:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ebf1:	e8 6a 19 ff ff       	callq  10560 <__vsnprintf_chk@plt>
   1ebf6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ebfb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ec02:	00 00 
   1ec04:	75 08                	jne    1ec0e <esprintf+0xbe>
   1ec06:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   1ec0d:	c3                   	retq   
   1ec0e:	e8 3d 12 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001ec13 <.annobin_esprintf.end>:
   1ec13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ec1a:	00 00 00 00 
   1ec1e:	66 90                	xchg   %ax,%ax

000000000001ec20 <find_ifaddr>:
   1ec20:	41 54                	push   %r12
   1ec22:	55                   	push   %rbp
   1ec23:	53                   	push   %rbx
   1ec24:	48 89 fb             	mov    %rdi,%rbx
   1ec27:	48 85 ff             	test   %rdi,%rdi
   1ec2a:	74 41                	je     1ec6d <find_ifaddr+0x4d>
   1ec2c:	48 89 f5             	mov    %rsi,%rbp
   1ec2f:	41 89 d4             	mov    %edx,%r12d
   1ec32:	eb 0c                	jmp    1ec40 <find_ifaddr+0x20>
   1ec34:	0f 1f 40 00          	nopl   0x0(%rax)
   1ec38:	48 8b 1b             	mov    (%rbx),%rbx
   1ec3b:	48 85 db             	test   %rbx,%rbx
   1ec3e:	74 2d                	je     1ec6d <find_ifaddr+0x4d>
   1ec40:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1ec44:	48 89 ee             	mov    %rbp,%rsi
   1ec47:	e8 d4 15 ff ff       	callq  10220 <strcmp@plt>
   1ec4c:	85 c0                	test   %eax,%eax
   1ec4e:	75 e8                	jne    1ec38 <find_ifaddr+0x18>
   1ec50:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1ec54:	48 85 c0             	test   %rax,%rax
   1ec57:	74 df                	je     1ec38 <find_ifaddr+0x18>
   1ec59:	0f b7 08             	movzwl (%rax),%ecx
   1ec5c:	44 39 e1             	cmp    %r12d,%ecx
   1ec5f:	75 d7                	jne    1ec38 <find_ifaddr+0x18>
   1ec61:	66 83 f9 0a          	cmp    $0xa,%cx
   1ec65:	75 06                	jne    1ec6d <find_ifaddr+0x4d>
   1ec67:	80 78 08 fe          	cmpb   $0xfe,0x8(%rax)
   1ec6b:	74 0b                	je     1ec78 <find_ifaddr+0x58>
   1ec6d:	48 89 d8             	mov    %rbx,%rax
   1ec70:	5b                   	pop    %rbx
   1ec71:	5d                   	pop    %rbp
   1ec72:	41 5c                	pop    %r12
   1ec74:	c3                   	retq   
   1ec75:	0f 1f 00             	nopl   (%rax)
   1ec78:	0f b6 40 09          	movzbl 0x9(%rax),%eax
   1ec7c:	83 e0 c0             	and    $0xffffffc0,%eax
   1ec7f:	3c 80                	cmp    $0x80,%al
   1ec81:	74 b5                	je     1ec38 <find_ifaddr+0x18>
   1ec83:	48 89 d8             	mov    %rbx,%rax
   1ec86:	5b                   	pop    %rbx
   1ec87:	5d                   	pop    %rbp
   1ec88:	41 5c                	pop    %r12
   1ec8a:	c3                   	retq   

000000000001ec8b <.annobin_find_ifaddr.end>:
   1ec8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ec90 <getprimary_ifaddr>:
   1ec90:	41 57                	push   %r15
   1ec92:	41 56                	push   %r14
   1ec94:	41 55                	push   %r13
   1ec96:	41 54                	push   %r12
   1ec98:	55                   	push   %rbp
   1ec99:	53                   	push   %rbx
   1ec9a:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   1eca1:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1eca6:	48 8d 3d 62 08 02 00 	lea    0x20862(%rip),%rdi        # 3f50f <f58_prefix+0xac>
   1ecad:	89 74 24 18          	mov    %esi,0x18(%rsp)
   1ecb1:	48 8d 35 bd 1e 02 00 	lea    0x21ebd(%rip),%rsi        # 40b75 <f58_prefix+0x1712>
   1ecb8:	89 54 24 04          	mov    %edx,0x4(%rsp)
   1ecbc:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1ecc1:	44 89 44 24 1c       	mov    %r8d,0x1c(%rsp)
   1ecc6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1eccd:	00 00 
   1eccf:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   1ecd6:	00 
   1ecd7:	31 c0                	xor    %eax,%eax
   1ecd9:	e8 b2 1a ff ff       	callq  10790 <fopen@plt>
   1ecde:	48 85 c0             	test   %rax,%rax
   1ece1:	0f 84 01 02 00 00    	je     1eee8 <getprimary_ifaddr+0x258>
   1ece7:	49 89 c7             	mov    %rax,%r15
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1ecea:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
   1ecef:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
   1ecf4:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   1ecfb:	00 
   1ecfc:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   1ed01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
__fortify_function __wur char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  size_t sz = __glibc_objsize (__s);
  if (__glibc_safe_or_unknown_len (__n, sizeof (char), sz))
    return __fgets_alias (__s, __n, __stream);
   1ed08:	4c 89 fa             	mov    %r15,%rdx
   1ed0b:	be 00 01 00 00       	mov    $0x100,%esi
   1ed10:	4c 89 e7             	mov    %r12,%rdi
   1ed13:	e8 88 14 ff ff       	callq  101a0 <fgets@plt>
   1ed18:	48 85 c0             	test   %rax,%rax
   1ed1b:	0f 84 ef 00 00 00    	je     1ee10 <getprimary_ifaddr+0x180>
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1ed21:	b9 18 00 00 00       	mov    $0x18,%ecx
   1ed26:	ba 01 00 00 00       	mov    $0x1,%edx
   1ed2b:	48 89 ef             	mov    %rbp,%rdi
   1ed2e:	31 c0                	xor    %eax,%eax
   1ed30:	be 18 00 00 00       	mov    $0x18,%esi
   1ed35:	41 b9 3f 00 00 00    	mov    $0x3f,%r9d
   1ed3b:	4c 8d 05 dd 07 02 00 	lea    0x207dd(%rip),%r8        # 3f51f <f58_prefix+0xbc>
   1ed42:	e8 59 0d ff ff       	callq  faa0 <__snprintf_chk@plt>
   1ed47:	31 c0                	xor    %eax,%eax
   1ed49:	4c 89 e9             	mov    %r13,%rcx
   1ed4c:	48 89 da             	mov    %rbx,%rdx
   1ed4f:	48 89 ee             	mov    %rbp,%rsi
   1ed52:	4c 89 e7             	mov    %r12,%rdi
   1ed55:	e8 c6 17 ff ff       	callq  10520 <sscanf@plt>
   1ed5a:	83 f8 02             	cmp    $0x2,%eax
   1ed5d:	75 a9                	jne    1ed08 <getprimary_ifaddr+0x78>
   1ed5f:	48 83 7c 24 28 00    	cmpq   $0x0,0x28(%rsp)
   1ed65:	75 a1                	jne    1ed08 <getprimary_ifaddr+0x78>
   1ed67:	4c 89 ff             	mov    %r15,%rdi
   1ed6a:	41 89 c6             	mov    %eax,%r14d
   1ed6d:	e8 2e 10 ff ff       	callq  fda0 <fclose@plt>
   1ed72:	4c 89 ef             	mov    %r13,%rdi
   1ed75:	e8 46 17 ff ff       	callq  104c0 <getifaddrs@plt>
   1ed7a:	85 c0                	test   %eax,%eax
   1ed7c:	0f 88 4b 01 00 00    	js     1eecd <getprimary_ifaddr+0x23d>
   1ed82:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1ed87:	8b 54 24 04          	mov    0x4(%rsp),%edx
   1ed8b:	48 89 de             	mov    %rbx,%rsi
   1ed8e:	48 89 ef             	mov    %rbp,%rdi
   1ed91:	e8 8a fe ff ff       	callq  1ec20 <find_ifaddr>
   1ed96:	48 85 c0             	test   %rax,%rax
   1ed99:	0f 84 a1 00 00 00    	je     1ee40 <getprimary_ifaddr+0x1b0>
   1ed9f:	48 8b 78 18          	mov    0x18(%rax),%rdi
   1eda3:	be 10 00 00 00       	mov    $0x10,%esi
   1eda8:	b8 1c 00 00 00       	mov    $0x1c,%eax
   1edad:	66 83 3f 02          	cmpw   $0x2,(%rdi)
   1edb1:	0f 45 f0             	cmovne %eax,%esi
   1edb4:	48 83 ec 08          	sub    $0x8,%rsp
   1edb8:	45 31 c9             	xor    %r9d,%r9d
   1edbb:	45 31 c0             	xor    %r8d,%r8d
   1edbe:	6a 01                	pushq  $0x1
   1edc0:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   1edc4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1edc9:	e8 12 13 ff ff       	callq  100e0 <getnameinfo@plt>
   1edce:	89 c3                	mov    %eax,%ebx
   1edd0:	58                   	pop    %rax
   1edd1:	5a                   	pop    %rdx
   1edd2:	85 db                	test   %ebx,%ebx
   1edd4:	0f 85 be 00 00 00    	jne    1ee98 <getprimary_ifaddr+0x208>
   1edda:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1eddf:	e8 5c 18 ff ff       	callq  10640 <freeifaddrs@plt>
   1ede4:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   1edeb:	00 
   1edec:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1edf3:	00 00 
   1edf5:	89 d8                	mov    %ebx,%eax
   1edf7:	0f 85 22 01 00 00    	jne    1ef1f <getprimary_ifaddr+0x28f>
   1edfd:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   1ee04:	5b                   	pop    %rbx
   1ee05:	5d                   	pop    %rbp
   1ee06:	41 5c                	pop    %r12
   1ee08:	41 5d                	pop    %r13
   1ee0a:	41 5e                	pop    %r14
   1ee0c:	41 5f                	pop    %r15
   1ee0e:	c3                   	retq   
   1ee0f:	90                   	nop
   1ee10:	4c 89 ff             	mov    %r15,%rdi
   1ee13:	e8 88 0f ff ff       	callq  fda0 <fclose@plt>
   1ee18:	48 8d 0d f0 06 02 00 	lea    0x206f0(%rip),%rcx        # 3f50f <f58_prefix+0xac>
   1ee1f:	48 8d 15 04 07 02 00 	lea    0x20704(%rip),%rdx        # 3f52a <f58_prefix+0xc7>
   1ee26:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   1ee2a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1ee2f:	31 c0                	xor    %eax,%eax
   1ee31:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1ee36:	e8 15 fd ff ff       	callq  1eb50 <esprintf>
   1ee3b:	eb a7                	jmp    1ede4 <getprimary_ifaddr+0x154>
   1ee3d:	0f 1f 00             	nopl   (%rax)
   1ee40:	83 7c 24 04 02       	cmpl   $0x2,0x4(%rsp)
   1ee45:	b8 0a 00 00 00       	mov    $0xa,%eax
   1ee4a:	48 89 de             	mov    %rbx,%rsi
   1ee4d:	48 89 ef             	mov    %rbp,%rdi
   1ee50:	44 0f 44 f0          	cmove  %eax,%r14d
   1ee54:	44 89 f2             	mov    %r14d,%edx
   1ee57:	e8 c4 fd ff ff       	callq  1ec20 <find_ifaddr>
   1ee5c:	48 85 c0             	test   %rax,%rax
   1ee5f:	0f 85 3a ff ff ff    	jne    1ed9f <getprimary_ifaddr+0x10f>
   1ee65:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   1ee69:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1ee6e:	48 89 d9             	mov    %rbx,%rcx
   1ee71:	48 8d 15 d6 06 02 00 	lea    0x206d6(%rip),%rdx        # 3f54e <f58_prefix+0xeb>
   1ee78:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1ee7d:	e8 ce fc ff ff       	callq  1eb50 <esprintf>
   1ee82:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1ee87:	e8 b4 17 ff ff       	callq  10640 <freeifaddrs@plt>
   1ee8c:	e9 53 ff ff ff       	jmpq   1ede4 <getprimary_ifaddr+0x154>
   1ee91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ee98:	89 df                	mov    %ebx,%edi
   1ee9a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1ee9f:	e8 9c 10 ff ff       	callq  ff40 <gai_strerror@plt>
   1eea4:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   1eea8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1eead:	48 8d 15 b7 06 02 00 	lea    0x206b7(%rip),%rdx        # 3f56b <f58_prefix+0x108>
   1eeb4:	48 89 c1             	mov    %rax,%rcx
   1eeb7:	31 c0                	xor    %eax,%eax
   1eeb9:	e8 92 fc ff ff       	callq  1eb50 <esprintf>
   1eebe:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1eec3:	e8 78 17 ff ff       	callq  10640 <freeifaddrs@plt>
   1eec8:	e9 17 ff ff ff       	jmpq   1ede4 <getprimary_ifaddr+0x154>
   1eecd:	e8 3e 0c ff ff       	callq  fb10 <__errno_location@plt>
   1eed2:	8b 38                	mov    (%rax),%edi
   1eed4:	e8 f7 1a ff ff       	callq  109d0 <strerror@plt>
   1eed9:	48 8d 15 5f 06 02 00 	lea    0x2065f(%rip),%rdx        # 3f53f <f58_prefix+0xdc>
   1eee0:	48 89 c1             	mov    %rax,%rcx
   1eee3:	e9 3e ff ff ff       	jmpq   1ee26 <getprimary_ifaddr+0x196>
   1eee8:	e8 23 0c ff ff       	callq  fb10 <__errno_location@plt>
   1eeed:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1eef2:	8b 38                	mov    (%rax),%edi
   1eef4:	e8 d7 1a ff ff       	callq  109d0 <strerror@plt>
   1eef9:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   1eefd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1ef02:	48 8d 0d 06 06 02 00 	lea    0x20606(%rip),%rcx        # 3f50f <f58_prefix+0xac>
   1ef09:	49 89 c0             	mov    %rax,%r8
   1ef0c:	48 8d 15 6e 02 02 00 	lea    0x2026e(%rip),%rdx        # 3f181 <__FUNCTION__.5439+0xd1>
   1ef13:	31 c0                	xor    %eax,%eax
   1ef15:	e8 36 fc ff ff       	callq  1eb50 <esprintf>
   1ef1a:	e9 c5 fe ff ff       	jmpq   1ede4 <getprimary_ifaddr+0x154>
   1ef1f:	e8 2c 0f ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001ef24 <.annobin_find_addrinfo.start>:
   1ef24:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ef2b:	00 00 00 00 
   1ef2f:	90                   	nop

000000000001ef30 <find_addrinfo>:
   1ef30:	48 89 f8             	mov    %rdi,%rax
   1ef33:	48 85 ff             	test   %rdi,%rdi
   1ef36:	74 0e                	je     1ef46 <find_addrinfo+0x16>
   1ef38:	39 70 04             	cmp    %esi,0x4(%rax)
   1ef3b:	74 13                	je     1ef50 <find_addrinfo+0x20>
   1ef3d:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ef41:	48 85 c0             	test   %rax,%rax
   1ef44:	75 f2                	jne    1ef38 <find_addrinfo+0x8>
   1ef46:	c3                   	retq   
   1ef47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ef4e:	00 00 
   1ef50:	83 fe 0a             	cmp    $0xa,%esi
   1ef53:	75 f1                	jne    1ef46 <find_addrinfo+0x16>
   1ef55:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1ef59:	80 7a 08 fe          	cmpb   $0xfe,0x8(%rdx)
   1ef5d:	75 e7                	jne    1ef46 <find_addrinfo+0x16>
   1ef5f:	0f b6 52 09          	movzbl 0x9(%rdx),%edx
   1ef63:	83 e2 c0             	and    $0xffffffc0,%edx
   1ef66:	80 fa 80             	cmp    $0x80,%dl
   1ef69:	74 d2                	je     1ef3d <find_addrinfo+0xd>
   1ef6b:	c3                   	retq   

000000000001ef6c <.annobin_find_addrinfo.end>:
   1ef6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ef70 <ipaddr_getprimary>:
   1ef70:	f3 0f 1e fa          	endbr64 
   1ef74:	41 57                	push   %r15
   1ef76:	41 89 cf             	mov    %ecx,%r15d
   1ef79:	41 56                	push   %r14
   1ef7b:	49 89 d6             	mov    %rdx,%r14
   1ef7e:	41 55                	push   %r13
   1ef80:	41 89 f5             	mov    %esi,%r13d
   1ef83:	41 54                	push   %r12
   1ef85:	49 89 fc             	mov    %rdi,%r12
   1ef88:	48 8d 3d ec 05 02 00 	lea    0x205ec(%rip),%rdi        # 3f57b <f58_prefix+0x118>
   1ef8f:	55                   	push   %rbp
   1ef90:	53                   	push   %rbx
   1ef91:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1ef98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ef9f:	00 00 
   1efa1:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1efa8:	00 
   1efa9:	31 c0                	xor    %eax,%eax
   1efab:	e8 a0 0a ff ff       	callq  fa50 <getenv@plt>
   1efb0:	48 8d 3d d3 05 02 00 	lea    0x205d3(%rip),%rdi        # 3f58a <f58_prefix+0x127>
   1efb7:	48 83 f8 01          	cmp    $0x1,%rax
   1efbb:	19 db                	sbb    %ebx,%ebx
   1efbd:	83 e3 f8             	and    $0xfffffff8,%ebx
   1efc0:	83 c3 0a             	add    $0xa,%ebx
   1efc3:	e8 88 0a ff ff       	callq  fa50 <getenv@plt>
   1efc8:	48 85 c0             	test   %rax,%rax
   1efcb:	0f 84 d7 00 00 00    	je     1f0a8 <ipaddr_getprimary+0x138>
				 "size of destination buffer");

__fortify_function int
__NTH (gethostname (char *__buf, size_t __buflen))
{
  return __glibc_fortify (gethostname, __buflen, sizeof (char),
   1efd1:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   1efd6:	be 41 00 00 00       	mov    $0x41,%esi
   1efdb:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1efe2:	00 00 
   1efe4:	48 89 ef             	mov    %rbp,%rdi
   1efe7:	e8 e4 18 ff ff       	callq  108d0 <gethostname@plt>
   1efec:	85 c0                	test   %eax,%eax
   1efee:	0f 88 80 01 00 00    	js     1f174 <ipaddr_getprimary+0x204>
   1eff4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1eff8:	31 f6                	xor    %esi,%esi
   1effa:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1efff:	48 89 ef             	mov    %rbp,%rdi
   1f002:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1f007:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1f00c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1f011:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1f016:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%rsp)
   1f01d:	00 
   1f01e:	e8 6d 19 ff ff       	callq  10990 <getaddrinfo@plt>
   1f023:	85 c0                	test   %eax,%eax
   1f025:	0f 85 ec 00 00 00    	jne    1f117 <ipaddr_getprimary+0x1a7>
   1f02b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1f030:	89 de                	mov    %ebx,%esi
   1f032:	48 89 cf             	mov    %rcx,%rdi
   1f035:	e8 f6 fe ff ff       	callq  1ef30 <find_addrinfo>
   1f03a:	48 85 c0             	test   %rax,%rax
   1f03d:	0f 84 8d 00 00 00    	je     1f0d0 <ipaddr_getprimary+0x160>
   1f043:	48 83 ec 08          	sub    $0x8,%rsp
   1f047:	8b 70 10             	mov    0x10(%rax),%esi
   1f04a:	48 8b 78 18          	mov    0x18(%rax),%rdi
   1f04e:	4c 89 e2             	mov    %r12,%rdx
   1f051:	6a 01                	pushq  $0x1
   1f053:	45 31 c9             	xor    %r9d,%r9d
   1f056:	45 31 c0             	xor    %r8d,%r8d
   1f059:	44 89 e9             	mov    %r13d,%ecx
   1f05c:	e8 7f 10 ff ff       	callq  100e0 <getnameinfo@plt>
   1f061:	89 c5                	mov    %eax,%ebp
   1f063:	58                   	pop    %rax
   1f064:	5a                   	pop    %rdx
   1f065:	85 ed                	test   %ebp,%ebp
   1f067:	0f 85 d5 00 00 00    	jne    1f142 <ipaddr_getprimary+0x1d2>
   1f06d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1f072:	e8 b9 1a ff ff       	callq  10b30 <freeaddrinfo@plt>
   1f077:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
   1f07e:	00 
   1f07f:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1f086:	00 00 
   1f088:	89 e8                	mov    %ebp,%eax
   1f08a:	0f 85 11 01 00 00    	jne    1f1a1 <ipaddr_getprimary+0x231>
   1f090:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   1f097:	5b                   	pop    %rbx
   1f098:	5d                   	pop    %rbp
   1f099:	41 5c                	pop    %r12
   1f09b:	41 5d                	pop    %r13
   1f09d:	41 5e                	pop    %r14
   1f09f:	41 5f                	pop    %r15
   1f0a1:	c3                   	retq   
   1f0a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f0a8:	45 89 f8             	mov    %r15d,%r8d
   1f0ab:	4c 89 f1             	mov    %r14,%rcx
   1f0ae:	89 da                	mov    %ebx,%edx
   1f0b0:	44 89 ee             	mov    %r13d,%esi
   1f0b3:	4c 89 e7             	mov    %r12,%rdi
   1f0b6:	e8 d5 fb ff ff       	callq  1ec90 <getprimary_ifaddr>
   1f0bb:	89 c5                	mov    %eax,%ebp
   1f0bd:	85 c0                	test   %eax,%eax
   1f0bf:	79 b6                	jns    1f077 <ipaddr_getprimary+0x107>
   1f0c1:	e9 0b ff ff ff       	jmpq   1efd1 <ipaddr_getprimary+0x61>
   1f0c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f0cd:	00 00 00 
   1f0d0:	31 f6                	xor    %esi,%esi
   1f0d2:	83 fb 02             	cmp    $0x2,%ebx
   1f0d5:	40 0f 94 c6          	sete   %sil
   1f0d9:	8d 34 f5 02 00 00 00 	lea    0x2(,%rsi,8),%esi
   1f0e0:	e8 4b fe ff ff       	callq  1ef30 <find_addrinfo>
   1f0e5:	48 85 c0             	test   %rax,%rax
   1f0e8:	0f 85 55 ff ff ff    	jne    1f043 <ipaddr_getprimary+0xd3>
   1f0ee:	48 89 e9             	mov    %rbp,%rcx
   1f0f1:	48 8d 15 56 04 02 00 	lea    0x20456(%rip),%rdx        # 3f54e <f58_prefix+0xeb>
   1f0f8:	44 89 fe             	mov    %r15d,%esi
   1f0fb:	4c 89 f7             	mov    %r14,%rdi
   1f0fe:	e8 4d fa ff ff       	callq  1eb50 <esprintf>
   1f103:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1f108:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   1f10d:	e8 1e 1a ff ff       	callq  10b30 <freeaddrinfo@plt>
   1f112:	e9 60 ff ff ff       	jmpq   1f077 <ipaddr_getprimary+0x107>
   1f117:	89 c7                	mov    %eax,%edi
   1f119:	e8 22 0e ff ff       	callq  ff40 <gai_strerror@plt>
   1f11e:	48 89 e9             	mov    %rbp,%rcx
   1f121:	44 89 fe             	mov    %r15d,%esi
   1f124:	4c 89 f7             	mov    %r14,%rdi
   1f127:	49 89 c0             	mov    %rax,%r8
   1f12a:	48 8d 15 7e 04 02 00 	lea    0x2047e(%rip),%rdx        # 3f5af <f58_prefix+0x14c>
   1f131:	31 c0                	xor    %eax,%eax
   1f133:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   1f138:	e8 13 fa ff ff       	callq  1eb50 <esprintf>
   1f13d:	e9 35 ff ff ff       	jmpq   1f077 <ipaddr_getprimary+0x107>
   1f142:	89 ef                	mov    %ebp,%edi
   1f144:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   1f149:	e8 f2 0d ff ff       	callq  ff40 <gai_strerror@plt>
   1f14e:	48 8d 15 16 04 02 00 	lea    0x20416(%rip),%rdx        # 3f56b <f58_prefix+0x108>
   1f155:	44 89 fe             	mov    %r15d,%esi
   1f158:	4c 89 f7             	mov    %r14,%rdi
   1f15b:	48 89 c1             	mov    %rax,%rcx
   1f15e:	31 c0                	xor    %eax,%eax
   1f160:	e8 eb f9 ff ff       	callq  1eb50 <esprintf>
   1f165:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1f16a:	e8 c1 19 ff ff       	callq  10b30 <freeaddrinfo@plt>
   1f16f:	e9 03 ff ff ff       	jmpq   1f077 <ipaddr_getprimary+0x107>
   1f174:	e8 97 09 ff ff       	callq  fb10 <__errno_location@plt>
   1f179:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   1f17e:	8b 38                	mov    (%rax),%edi
   1f180:	e8 4b 18 ff ff       	callq  109d0 <strerror@plt>
   1f185:	48 8d 15 13 04 02 00 	lea    0x20413(%rip),%rdx        # 3f59f <f58_prefix+0x13c>
   1f18c:	44 89 fe             	mov    %r15d,%esi
   1f18f:	4c 89 f7             	mov    %r14,%rdi
   1f192:	48 89 c1             	mov    %rax,%rcx
   1f195:	31 c0                	xor    %eax,%eax
   1f197:	e8 b4 f9 ff ff       	callq  1eb50 <esprintf>
   1f19c:	e9 d6 fe ff ff       	jmpq   1f077 <ipaddr_getprimary+0x107>
   1f1a1:	e8 aa 0c ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001f1a6 <.annobin_ipaddr.c_end>:
   1f1a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f1ad:	00 00 00 

000000000001f1b0 <update_object_recursive>:
   1f1b0:	41 56                	push   %r14
   1f1b2:	49 89 f6             	mov    %rsi,%r14
   1f1b5:	41 55                	push   %r13
   1f1b7:	49 89 fd             	mov    %rdi,%r13
   1f1ba:	48 89 f7             	mov    %rsi,%rdi
   1f1bd:	41 54                	push   %r12
   1f1bf:	55                   	push   %rbp
   1f1c0:	53                   	push   %rbx
   1f1c1:	e8 4a 0a ff ff       	callq  fc10 <json_object_iter@plt>
   1f1c6:	48 89 c7             	mov    %rax,%rdi
   1f1c9:	e8 92 11 ff ff       	callq  10360 <json_object_iter_key@plt>
   1f1ce:	48 89 c3             	mov    %rax,%rbx
   1f1d1:	48 85 c0             	test   %rax,%rax
   1f1d4:	75 72                	jne    1f248 <update_object_recursive+0x98>
   1f1d6:	e9 dd 00 00 00       	jmpq   1f2b8 <update_object_recursive+0x108>
   1f1db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f1e0:	48 85 c0             	test   %rax,%rax
   1f1e3:	74 06                	je     1f1eb <update_object_recursive+0x3b>
   1f1e5:	8b 00                	mov    (%rax),%eax
   1f1e7:	85 c0                	test   %eax,%eax
   1f1e9:	74 27                	je     1f212 <update_object_recursive+0x62>
   1f1eb:	e8 80 17 ff ff       	callq  10970 <json_object@plt>
   1f1f0:	49 89 c4             	mov    %rax,%r12
   1f1f3:	48 85 c0             	test   %rax,%rax
   1f1f6:	0f 84 9f 00 00 00    	je     1f29b <update_object_recursive+0xeb>
   1f1fc:	48 89 c2             	mov    %rax,%rdx
   1f1ff:	48 89 de             	mov    %rbx,%rsi
   1f202:	4c 89 ef             	mov    %r13,%rdi
   1f205:	e8 46 15 ff ff       	callq  10750 <json_object_set_new@plt>
   1f20a:	85 c0                	test   %eax,%eax
   1f20c:	0f 88 b6 00 00 00    	js     1f2c8 <update_object_recursive+0x118>
   1f212:	48 89 ee             	mov    %rbp,%rsi
   1f215:	4c 89 e7             	mov    %r12,%rdi
   1f218:	e8 93 ff ff ff       	callq  1f1b0 <update_object_recursive>
   1f21d:	85 c0                	test   %eax,%eax
   1f21f:	0f 88 81 00 00 00    	js     1f2a6 <update_object_recursive+0xf6>
   1f225:	48 89 df             	mov    %rbx,%rdi
   1f228:	e8 93 0c ff ff       	callq  fec0 <json_object_key_to_iter@plt>
   1f22d:	4c 89 f7             	mov    %r14,%rdi
   1f230:	48 89 c6             	mov    %rax,%rsi
   1f233:	e8 f8 16 ff ff       	callq  10930 <json_object_iter_next@plt>
   1f238:	48 89 c7             	mov    %rax,%rdi
   1f23b:	e8 20 11 ff ff       	callq  10360 <json_object_iter_key@plt>
   1f240:	48 89 c3             	mov    %rax,%rbx
   1f243:	48 85 c0             	test   %rax,%rax
   1f246:	74 70                	je     1f2b8 <update_object_recursive+0x108>
   1f248:	48 89 df             	mov    %rbx,%rdi
   1f24b:	e8 70 0c ff ff       	callq  fec0 <json_object_key_to_iter@plt>
   1f250:	48 89 c7             	mov    %rax,%rdi
   1f253:	e8 b8 13 ff ff       	callq  10610 <json_object_iter_value@plt>
   1f258:	48 89 c5             	mov    %rax,%rbp
   1f25b:	48 85 c0             	test   %rax,%rax
   1f25e:	74 58                	je     1f2b8 <update_object_recursive+0x108>
   1f260:	48 89 de             	mov    %rbx,%rsi
   1f263:	4c 89 ef             	mov    %r13,%rdi
   1f266:	e8 e5 13 ff ff       	callq  10650 <json_object_get@plt>
   1f26b:	8b 55 00             	mov    0x0(%rbp),%edx
   1f26e:	49 89 c4             	mov    %rax,%r12
   1f271:	85 d2                	test   %edx,%edx
   1f273:	0f 84 67 ff ff ff    	je     1f1e0 <update_object_recursive+0x30>
    if (json && json->refcount != (size_t)-1)
   1f279:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1f27d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f281:	74 06                	je     1f289 <update_object_recursive+0xd9>
        JSON_INTERNAL_INCREF(json);
   1f283:	f0 48 83 45 08 01    	lock addq $0x1,0x8(%rbp)
    for (index = 0;                                                                      \
         index < json_array_size(array) && (value = json_array_get(array, index));       \
         index++)

static JSON_INLINE int json_object_set(json_t *object, const char *key, json_t *value) {
    return json_object_set_new(object, key, json_incref(value));
   1f289:	48 89 ea             	mov    %rbp,%rdx
   1f28c:	48 89 de             	mov    %rbx,%rsi
   1f28f:	4c 89 ef             	mov    %r13,%rdi
   1f292:	e8 b9 14 ff ff       	callq  10750 <json_object_set_new@plt>
   1f297:	85 c0                	test   %eax,%eax
   1f299:	79 8a                	jns    1f225 <update_object_recursive+0x75>
   1f29b:	e8 70 08 ff ff       	callq  fb10 <__errno_location@plt>
   1f2a0:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1f2a6:	5b                   	pop    %rbx
   1f2a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f2ac:	5d                   	pop    %rbp
   1f2ad:	41 5c                	pop    %r12
   1f2af:	41 5d                	pop    %r13
   1f2b1:	41 5e                	pop    %r14
   1f2b3:	c3                   	retq   
   1f2b4:	0f 1f 40 00          	nopl   0x0(%rax)
   1f2b8:	31 c0                	xor    %eax,%eax
   1f2ba:	5b                   	pop    %rbx
   1f2bb:	5d                   	pop    %rbp
   1f2bc:	41 5c                	pop    %r12
   1f2be:	41 5d                	pop    %r13
   1f2c0:	41 5e                	pop    %r14
   1f2c2:	c3                   	retq   
   1f2c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f2c8:	e8 43 08 ff ff       	callq  fb10 <__errno_location@plt>
   1f2cd:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f2d3:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   1f2d8:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f2dc:	74 c8                	je     1f2a6 <update_object_recursive+0xf6>
   1f2de:	f0 49 83 6c 24 08 01 	lock subq $0x1,0x8(%r12)
   1f2e5:	75 bf                	jne    1f2a6 <update_object_recursive+0xf6>
        json_delete(json);
   1f2e7:	4c 89 e7             	mov    %r12,%rdi
   1f2ea:	e8 31 0d ff ff       	callq  10020 <json_delete@plt>
   1f2ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f2f4:	eb c4                	jmp    1f2ba <update_object_recursive+0x10a>

000000000001f2f6 <.annobin_jpath_do_set.start>:
   1f2f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f2fd:	00 00 00 

000000000001f300 <jpath_do_set>:
   1f300:	41 57                	push   %r15
   1f302:	41 56                	push   %r14
   1f304:	41 55                	push   %r13
   1f306:	49 89 cd             	mov    %rcx,%r13
   1f309:	41 54                	push   %r12
   1f30b:	55                   	push   %rbp
   1f30c:	53                   	push   %rbx
   1f30d:	48 83 ec 18          	sub    $0x18,%rsp
   1f311:	48 85 d2             	test   %rdx,%rdx
   1f314:	0f 94 c1             	sete   %cl
   1f317:	4d 85 ed             	test   %r13,%r13
   1f31a:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1f31e:	0f 94 c0             	sete   %al
   1f321:	08 c1                	or     %al,%cl
   1f323:	0f 85 67 01 00 00    	jne    1f490 <jpath_do_set+0x190>
   1f329:	48 89 fd             	mov    %rdi,%rbp
   1f32c:	48 85 ff             	test   %rdi,%rdi
   1f32f:	0f 84 5b 01 00 00    	je     1f490 <jpath_do_set+0x190>
   1f335:	48 89 d7             	mov    %rdx,%rdi
   1f338:	e8 63 16 ff ff       	callq  109a0 <strdup@plt>
   1f33d:	49 89 c4             	mov    %rax,%r12
   1f340:	48 85 c0             	test   %rax,%rax
   1f343:	0f 84 5c 01 00 00    	je     1f4a5 <jpath_do_set+0x1a5>
   1f349:	48 89 c3             	mov    %rax,%rbx
   1f34c:	eb 08                	jmp    1f356 <jpath_do_set+0x56>
   1f34e:	66 90                	xchg   %ax,%ax
   1f350:	4c 89 f3             	mov    %r14,%rbx
   1f353:	4c 89 fd             	mov    %r15,%rbp
   1f356:	be 2e 00 00 00       	mov    $0x2e,%esi
   1f35b:	48 89 df             	mov    %rbx,%rdi
   1f35e:	e8 4d 0b ff ff       	callq  feb0 <strchr@plt>
   1f363:	48 85 c0             	test   %rax,%rax
   1f366:	74 68                	je     1f3d0 <jpath_do_set+0xd0>
   1f368:	c6 00 00             	movb   $0x0,(%rax)
   1f36b:	80 3b 00             	cmpb   $0x0,(%rbx)
   1f36e:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1f372:	0f 84 d0 00 00 00    	je     1f448 <jpath_do_set+0x148>
   1f378:	48 89 de             	mov    %rbx,%rsi
   1f37b:	48 89 ef             	mov    %rbp,%rdi
   1f37e:	e8 cd 12 ff ff       	callq  10650 <json_object_get@plt>
   1f383:	49 89 c7             	mov    %rax,%r15
   1f386:	48 85 c0             	test   %rax,%rax
   1f389:	75 c5                	jne    1f350 <jpath_do_set+0x50>
   1f38b:	e8 e0 15 ff ff       	callq  10970 <json_object@plt>
   1f390:	49 89 c7             	mov    %rax,%r15
   1f393:	48 85 c0             	test   %rax,%rax
   1f396:	74 20                	je     1f3b8 <jpath_do_set+0xb8>
   1f398:	48 89 c2             	mov    %rax,%rdx
   1f39b:	48 89 de             	mov    %rbx,%rsi
   1f39e:	48 89 ef             	mov    %rbp,%rdi
   1f3a1:	e8 aa 13 ff ff       	callq  10750 <json_object_set_new@plt>
   1f3a6:	85 c0                	test   %eax,%eax
   1f3a8:	79 a6                	jns    1f350 <jpath_do_set+0x50>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f3aa:	49 8b 47 08          	mov    0x8(%r15),%rax
   1f3ae:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f3b2:	0f 85 b8 00 00 00    	jne    1f470 <jpath_do_set+0x170>
   1f3b8:	e8 53 07 ff ff       	callq  fb10 <__errno_location@plt>
   1f3bd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f3c2:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1f3c8:	eb 34                	jmp    1f3fe <jpath_do_set+0xfe>
   1f3ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f3d0:	80 3b 00             	cmpb   $0x0,(%rbx)
   1f3d3:	74 73                	je     1f448 <jpath_do_set+0x148>
   1f3d5:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1f3d9:	85 c0                	test   %eax,%eax
   1f3db:	75 43                	jne    1f420 <jpath_do_set+0x120>
   1f3dd:	48 89 de             	mov    %rbx,%rsi
   1f3e0:	48 89 ef             	mov    %rbp,%rdi
   1f3e3:	e8 68 12 ff ff       	callq  10650 <json_object_get@plt>
   1f3e8:	48 85 c0             	test   %rax,%rax
   1f3eb:	74 33                	je     1f420 <jpath_do_set+0x120>
   1f3ed:	4c 89 ee             	mov    %r13,%rsi
   1f3f0:	48 89 c7             	mov    %rax,%rdi
   1f3f3:	e8 b8 fd ff ff       	callq  1f1b0 <update_object_recursive>
   1f3f8:	85 c0                	test   %eax,%eax
   1f3fa:	78 bc                	js     1f3b8 <jpath_do_set+0xb8>
   1f3fc:	31 db                	xor    %ebx,%ebx
   1f3fe:	4c 89 e7             	mov    %r12,%rdi
   1f401:	e8 aa 06 ff ff       	callq  fab0 <free@plt>
   1f406:	48 83 c4 18          	add    $0x18,%rsp
   1f40a:	89 d8                	mov    %ebx,%eax
   1f40c:	5b                   	pop    %rbx
   1f40d:	5d                   	pop    %rbp
   1f40e:	41 5c                	pop    %r12
   1f410:	41 5d                	pop    %r13
   1f412:	41 5e                	pop    %r14
   1f414:	41 5f                	pop    %r15
   1f416:	c3                   	retq   
   1f417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f41e:	00 00 
    if (json && json->refcount != (size_t)-1)
   1f420:	49 8b 45 08          	mov    0x8(%r13),%rax
   1f424:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f428:	75 36                	jne    1f460 <jpath_do_set+0x160>
    return json_object_set_new(object, key, json_incref(value));
   1f42a:	4c 89 ea             	mov    %r13,%rdx
   1f42d:	48 89 de             	mov    %rbx,%rsi
   1f430:	48 89 ef             	mov    %rbp,%rdi
   1f433:	e8 18 13 ff ff       	callq  10750 <json_object_set_new@plt>
   1f438:	85 c0                	test   %eax,%eax
   1f43a:	79 c0                	jns    1f3fc <jpath_do_set+0xfc>
   1f43c:	e9 77 ff ff ff       	jmpq   1f3b8 <jpath_do_set+0xb8>
   1f441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f448:	e8 c3 06 ff ff       	callq  fb10 <__errno_location@plt>
   1f44d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f452:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f458:	eb a4                	jmp    1f3fe <jpath_do_set+0xfe>
   1f45a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        JSON_INTERNAL_INCREF(json);
   1f460:	f0 49 83 45 08 01    	lock addq $0x1,0x8(%r13)
   1f466:	eb c2                	jmp    1f42a <jpath_do_set+0x12a>
   1f468:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f46f:	00 
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f470:	f0 49 83 6f 08 01    	lock subq $0x1,0x8(%r15)
   1f476:	0f 85 3c ff ff ff    	jne    1f3b8 <jpath_do_set+0xb8>
        json_delete(json);
   1f47c:	4c 89 ff             	mov    %r15,%rdi
   1f47f:	e8 9c 0b ff ff       	callq  10020 <json_delete@plt>
   1f484:	e9 2f ff ff ff       	jmpq   1f3b8 <jpath_do_set+0xb8>
   1f489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f490:	e8 7b 06 ff ff       	callq  fb10 <__errno_location@plt>
   1f495:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f49a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f4a0:	e9 61 ff ff ff       	jmpq   1f406 <jpath_do_set+0x106>
   1f4a5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f4aa:	e9 57 ff ff ff       	jmpq   1f406 <jpath_do_set+0x106>

000000000001f4af <.annobin_jpath_do_set.end>:
   1f4af:	90                   	nop

000000000001f4b0 <jpath_set>:
   1f4b0:	f3 0f 1e fa          	endbr64 
   1f4b4:	48 89 d1             	mov    %rdx,%rcx
   1f4b7:	48 89 f2             	mov    %rsi,%rdx
   1f4ba:	be 01 00 00 00       	mov    $0x1,%esi
   1f4bf:	e9 3c fe ff ff       	jmpq   1f300 <jpath_do_set>

000000000001f4c4 <.annobin_jpath_set.end>:
   1f4c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f4cb:	00 00 00 00 
   1f4cf:	90                   	nop

000000000001f4d0 <jpath_set_new>:
   1f4d0:	f3 0f 1e fa          	endbr64 
   1f4d4:	55                   	push   %rbp
   1f4d5:	53                   	push   %rbx
   1f4d6:	48 83 ec 18          	sub    $0x18,%rsp
   1f4da:	48 85 f6             	test   %rsi,%rsi
   1f4dd:	0f 84 a5 00 00 00    	je     1f588 <jpath_set_new+0xb8>
   1f4e3:	48 89 d5             	mov    %rdx,%rbp
   1f4e6:	48 85 d2             	test   %rdx,%rdx
   1f4e9:	0f 84 99 00 00 00    	je     1f588 <jpath_set_new+0xb8>
   1f4ef:	48 89 fb             	mov    %rdi,%rbx
   1f4f2:	48 85 ff             	test   %rdi,%rdi
   1f4f5:	74 49                	je     1f540 <jpath_set_new+0x70>
   1f4f7:	e8 b4 ff ff ff       	callq  1f4b0 <jpath_set>
   1f4fc:	85 c0                	test   %eax,%eax
   1f4fe:	0f 88 bc 00 00 00    	js     1f5c0 <jpath_set_new+0xf0>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f504:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1f508:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f50c:	75 12                	jne    1f520 <jpath_set_new+0x50>
   1f50e:	48 83 c4 18          	add    $0x18,%rsp
   1f512:	48 89 d8             	mov    %rbx,%rax
   1f515:	5b                   	pop    %rbx
   1f516:	5d                   	pop    %rbp
   1f517:	c3                   	retq   
   1f518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f51f:	00 
   1f520:	f0 48 83 6d 08 01    	lock subq $0x1,0x8(%rbp)
   1f526:	75 e6                	jne    1f50e <jpath_set_new+0x3e>
        json_delete(json);
   1f528:	48 89 ef             	mov    %rbp,%rdi
   1f52b:	e8 f0 0a ff ff       	callq  10020 <json_delete@plt>
   1f530:	48 83 c4 18          	add    $0x18,%rsp
   1f534:	48 89 d8             	mov    %rbx,%rax
   1f537:	5b                   	pop    %rbx
   1f538:	5d                   	pop    %rbp
   1f539:	c3                   	retq   
   1f53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f540:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1f545:	e8 26 14 ff ff       	callq  10970 <json_object@plt>
   1f54a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1f54f:	48 85 c0             	test   %rax,%rax
   1f552:	48 89 c3             	mov    %rax,%rbx
   1f555:	74 79                	je     1f5d0 <jpath_set_new+0x100>
   1f557:	48 89 ea             	mov    %rbp,%rdx
   1f55a:	48 89 c7             	mov    %rax,%rdi
   1f55d:	e8 4e ff ff ff       	callq  1f4b0 <jpath_set>
   1f562:	85 c0                	test   %eax,%eax
   1f564:	79 9e                	jns    1f504 <jpath_set_new+0x34>
   1f566:	e8 a5 05 ff ff       	callq  fb10 <__errno_location@plt>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f56b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1f56f:	8b 28                	mov    (%rax),%ebp
   1f571:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1f575:	75 29                	jne    1f5a0 <jpath_set_new+0xd0>
   1f577:	89 28                	mov    %ebp,(%rax)
   1f579:	31 db                	xor    %ebx,%ebx
   1f57b:	48 83 c4 18          	add    $0x18,%rsp
   1f57f:	48 89 d8             	mov    %rbx,%rax
   1f582:	5b                   	pop    %rbx
   1f583:	5d                   	pop    %rbp
   1f584:	c3                   	retq   
   1f585:	0f 1f 00             	nopl   (%rax)
   1f588:	e8 83 05 ff ff       	callq  fb10 <__errno_location@plt>
   1f58d:	31 db                	xor    %ebx,%ebx
   1f58f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f595:	48 83 c4 18          	add    $0x18,%rsp
   1f599:	48 89 d8             	mov    %rbx,%rax
   1f59c:	5b                   	pop    %rbx
   1f59d:	5d                   	pop    %rbp
   1f59e:	c3                   	retq   
   1f59f:	90                   	nop
   1f5a0:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   1f5a6:	75 cf                	jne    1f577 <jpath_set_new+0xa7>
        json_delete(json);
   1f5a8:	48 89 df             	mov    %rbx,%rdi
   1f5ab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1f5b0:	e8 6b 0a ff ff       	callq  10020 <json_delete@plt>
   1f5b5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1f5ba:	eb bb                	jmp    1f577 <jpath_set_new+0xa7>
   1f5bc:	0f 1f 40 00          	nopl   0x0(%rax)
   1f5c0:	e8 4b 05 ff ff       	callq  fb10 <__errno_location@plt>
   1f5c5:	8b 28                	mov    (%rax),%ebp
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   1f5c7:	eb ae                	jmp    1f577 <jpath_set_new+0xa7>
   1f5c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f5d0:	e8 3b 05 ff ff       	callq  fb10 <__errno_location@plt>
   1f5d5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1f5db:	e9 2e ff ff ff       	jmpq   1f50e <jpath_set_new+0x3e>

000000000001f5e0 <jpath_update>:
   1f5e0:	f3 0f 1e fa          	endbr64 
   1f5e4:	49 89 f9             	mov    %rdi,%r9
   1f5e7:	b9 02 00 00 00       	mov    $0x2,%ecx
   1f5ec:	48 8d 3d 3b fa 01 00 	lea    0x1fa3b(%rip),%rdi        # 3f02e <__PRETTY_FUNCTION__.4363+0x116>
   1f5f3:	49 89 f0             	mov    %rsi,%r8
   1f5f6:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   1f5f8:	0f 97 c0             	seta   %al
   1f5fb:	1c 00                	sbb    $0x0,%al
   1f5fd:	84 c0                	test   %al,%al
   1f5ff:	74 17                	je     1f618 <jpath_update+0x38>
   1f601:	48 89 d1             	mov    %rdx,%rcx
   1f604:	31 f6                	xor    %esi,%esi
   1f606:	4c 89 c2             	mov    %r8,%rdx
   1f609:	4c 89 cf             	mov    %r9,%rdi
   1f60c:	e9 ef fc ff ff       	jmpq   1f300 <jpath_do_set>
   1f611:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f618:	48 89 d6             	mov    %rdx,%rsi
   1f61b:	4c 89 cf             	mov    %r9,%rdi
   1f61e:	e9 8d fb ff ff       	jmpq   1f1b0 <update_object_recursive>

000000000001f623 <.annobin_jpath_del.start>:
   1f623:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f62a:	00 00 00 00 
   1f62e:	66 90                	xchg   %ax,%ax

000000000001f630 <jpath_del>:
   1f630:	f3 0f 1e fa          	endbr64 
   1f634:	41 55                	push   %r13
   1f636:	41 54                	push   %r12
   1f638:	55                   	push   %rbp
   1f639:	53                   	push   %rbx
   1f63a:	48 83 ec 08          	sub    $0x8,%rsp
   1f63e:	48 85 ff             	test   %rdi,%rdi
   1f641:	0f 84 a9 00 00 00    	je     1f6f0 <jpath_del+0xc0>
   1f647:	48 85 f6             	test   %rsi,%rsi
   1f64a:	0f 84 a0 00 00 00    	je     1f6f0 <jpath_del+0xc0>
   1f650:	48 89 fd             	mov    %rdi,%rbp
   1f653:	48 89 f7             	mov    %rsi,%rdi
   1f656:	e8 45 13 ff ff       	callq  109a0 <strdup@plt>
   1f65b:	49 89 c4             	mov    %rax,%r12
   1f65e:	48 85 c0             	test   %rax,%rax
   1f661:	0f 84 9b 00 00 00    	je     1f702 <jpath_del+0xd2>
   1f667:	48 89 c3             	mov    %rax,%rbx
   1f66a:	eb 26                	jmp    1f692 <jpath_del+0x62>
   1f66c:	0f 1f 40 00          	nopl   0x0(%rax)
   1f670:	c6 00 00             	movb   $0x0,(%rax)
   1f673:	80 3b 00             	cmpb   $0x0,(%rbx)
   1f676:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1f67a:	74 54                	je     1f6d0 <jpath_del+0xa0>
   1f67c:	48 89 de             	mov    %rbx,%rsi
   1f67f:	48 89 ef             	mov    %rbp,%rdi
   1f682:	4c 89 eb             	mov    %r13,%rbx
   1f685:	e8 c6 0f ff ff       	callq  10650 <json_object_get@plt>
   1f68a:	48 89 c5             	mov    %rax,%rbp
   1f68d:	48 85 c0             	test   %rax,%rax
   1f690:	74 56                	je     1f6e8 <jpath_del+0xb8>
   1f692:	be 2e 00 00 00       	mov    $0x2e,%esi
   1f697:	48 89 df             	mov    %rbx,%rdi
   1f69a:	e8 11 08 ff ff       	callq  feb0 <strchr@plt>
   1f69f:	48 85 c0             	test   %rax,%rax
   1f6a2:	75 cc                	jne    1f670 <jpath_del+0x40>
   1f6a4:	80 3b 00             	cmpb   $0x0,(%rbx)
   1f6a7:	74 27                	je     1f6d0 <jpath_del+0xa0>
   1f6a9:	48 89 de             	mov    %rbx,%rsi
   1f6ac:	48 89 ef             	mov    %rbp,%rdi
   1f6af:	31 db                	xor    %ebx,%ebx
   1f6b1:	e8 4a 05 ff ff       	callq  fc00 <json_object_del@plt>
   1f6b6:	4c 89 e7             	mov    %r12,%rdi
   1f6b9:	e8 f2 03 ff ff       	callq  fab0 <free@plt>
   1f6be:	48 83 c4 08          	add    $0x8,%rsp
   1f6c2:	89 d8                	mov    %ebx,%eax
   1f6c4:	5b                   	pop    %rbx
   1f6c5:	5d                   	pop    %rbp
   1f6c6:	41 5c                	pop    %r12
   1f6c8:	41 5d                	pop    %r13
   1f6ca:	c3                   	retq   
   1f6cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f6d0:	e8 3b 04 ff ff       	callq  fb10 <__errno_location@plt>
   1f6d5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f6da:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f6e0:	eb d4                	jmp    1f6b6 <jpath_del+0x86>
   1f6e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f6e8:	31 db                	xor    %ebx,%ebx
   1f6ea:	eb ca                	jmp    1f6b6 <jpath_del+0x86>
   1f6ec:	0f 1f 40 00          	nopl   0x0(%rax)
   1f6f0:	e8 1b 04 ff ff       	callq  fb10 <__errno_location@plt>
   1f6f5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f6fa:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f700:	eb bc                	jmp    1f6be <jpath_del+0x8e>
   1f702:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f707:	eb b5                	jmp    1f6be <jpath_del+0x8e>

000000000001f709 <.annobin_jpath_del.end>:
   1f709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f710 <jpath_get>:
   1f710:	f3 0f 1e fa          	endbr64 
   1f714:	41 56                	push   %r14
   1f716:	41 55                	push   %r13
   1f718:	41 54                	push   %r12
   1f71a:	55                   	push   %rbp
   1f71b:	53                   	push   %rbx
   1f71c:	48 85 ff             	test   %rdi,%rdi
   1f71f:	0f 84 9b 00 00 00    	je     1f7c0 <jpath_get+0xb0>
   1f725:	48 85 f6             	test   %rsi,%rsi
   1f728:	0f 84 92 00 00 00    	je     1f7c0 <jpath_get+0xb0>
   1f72e:	48 89 fd             	mov    %rdi,%rbp
   1f731:	48 89 f7             	mov    %rsi,%rdi
   1f734:	e8 67 12 ff ff       	callq  109a0 <strdup@plt>
   1f739:	49 89 c5             	mov    %rax,%r13
   1f73c:	48 85 c0             	test   %rax,%rax
   1f73f:	0f 84 cb 00 00 00    	je     1f810 <jpath_get+0x100>
   1f745:	49 89 c4             	mov    %rax,%r12
   1f748:	eb 32                	jmp    1f77c <jpath_get+0x6c>
   1f74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f750:	c6 00 00             	movb   $0x0,(%rax)
   1f753:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   1f758:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1f75c:	0f 84 8e 00 00 00    	je     1f7f0 <jpath_get+0xe0>
   1f762:	4c 89 e6             	mov    %r12,%rsi
   1f765:	48 89 ef             	mov    %rbp,%rdi
   1f768:	4d 89 f4             	mov    %r14,%r12
   1f76b:	e8 e0 0e ff ff       	callq  10650 <json_object_get@plt>
   1f770:	48 89 c5             	mov    %rax,%rbp
   1f773:	48 85 c0             	test   %rax,%rax
   1f776:	0f 84 84 00 00 00    	je     1f800 <jpath_get+0xf0>
   1f77c:	be 2e 00 00 00       	mov    $0x2e,%esi
   1f781:	4c 89 e7             	mov    %r12,%rdi
   1f784:	e8 27 07 ff ff       	callq  feb0 <strchr@plt>
   1f789:	48 89 c3             	mov    %rax,%rbx
   1f78c:	48 85 c0             	test   %rax,%rax
   1f78f:	75 bf                	jne    1f750 <jpath_get+0x40>
   1f791:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   1f796:	74 48                	je     1f7e0 <jpath_get+0xd0>
   1f798:	4c 89 e6             	mov    %r12,%rsi
   1f79b:	48 89 ef             	mov    %rbp,%rdi
   1f79e:	e8 ad 0e ff ff       	callq  10650 <json_object_get@plt>
   1f7a3:	48 89 c3             	mov    %rax,%rbx
   1f7a6:	48 85 c0             	test   %rax,%rax
   1f7a9:	74 75                	je     1f820 <jpath_get+0x110>
   1f7ab:	4c 89 ef             	mov    %r13,%rdi
   1f7ae:	e8 fd 02 ff ff       	callq  fab0 <free@plt>
   1f7b3:	48 89 d8             	mov    %rbx,%rax
   1f7b6:	5b                   	pop    %rbx
   1f7b7:	5d                   	pop    %rbp
   1f7b8:	41 5c                	pop    %r12
   1f7ba:	41 5d                	pop    %r13
   1f7bc:	41 5e                	pop    %r14
   1f7be:	c3                   	retq   
   1f7bf:	90                   	nop
   1f7c0:	e8 4b 03 ff ff       	callq  fb10 <__errno_location@plt>
   1f7c5:	31 db                	xor    %ebx,%ebx
   1f7c7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f7cd:	48 89 d8             	mov    %rbx,%rax
   1f7d0:	5b                   	pop    %rbx
   1f7d1:	5d                   	pop    %rbp
   1f7d2:	41 5c                	pop    %r12
   1f7d4:	41 5d                	pop    %r13
   1f7d6:	41 5e                	pop    %r14
   1f7d8:	c3                   	retq   
   1f7d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f7e0:	e8 2b 03 ff ff       	callq  fb10 <__errno_location@plt>
   1f7e5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f7eb:	eb be                	jmp    1f7ab <jpath_get+0x9b>
   1f7ed:	0f 1f 00             	nopl   (%rax)
   1f7f0:	e8 1b 03 ff ff       	callq  fb10 <__errno_location@plt>
   1f7f5:	31 db                	xor    %ebx,%ebx
   1f7f7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f7fd:	eb ac                	jmp    1f7ab <jpath_get+0x9b>
   1f7ff:	90                   	nop
   1f800:	e8 0b 03 ff ff       	callq  fb10 <__errno_location@plt>
   1f805:	31 db                	xor    %ebx,%ebx
   1f807:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1f80d:	eb 9c                	jmp    1f7ab <jpath_get+0x9b>
   1f80f:	90                   	nop
   1f810:	31 db                	xor    %ebx,%ebx
   1f812:	48 89 d8             	mov    %rbx,%rax
   1f815:	5b                   	pop    %rbx
   1f816:	5d                   	pop    %rbp
   1f817:	41 5c                	pop    %r12
   1f819:	41 5d                	pop    %r13
   1f81b:	41 5e                	pop    %r14
   1f81d:	c3                   	retq   
   1f81e:	66 90                	xchg   %ax,%ax
   1f820:	e8 eb 02 ff ff       	callq  fb10 <__errno_location@plt>
   1f825:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1f82b:	e9 7b ff ff ff       	jmpq   1f7ab <jpath_get+0x9b>

000000000001f830 <jpath_clear_null>:
   1f830:	f3 0f 1e fa          	endbr64 
   1f834:	41 55                	push   %r13
   1f836:	41 54                	push   %r12
   1f838:	55                   	push   %rbp
   1f839:	53                   	push   %rbx
   1f83a:	48 83 ec 08          	sub    $0x8,%rsp
   1f83e:	48 85 ff             	test   %rdi,%rdi
   1f841:	0f 84 a9 00 00 00    	je     1f8f0 <jpath_clear_null+0xc0>
   1f847:	49 89 fd             	mov    %rdi,%r13
   1f84a:	e8 c1 03 ff ff       	callq  fc10 <json_object_iter@plt>
   1f84f:	48 89 c7             	mov    %rax,%rdi
   1f852:	eb 0c                	jmp    1f860 <jpath_clear_null+0x30>
   1f854:	0f 1f 40 00          	nopl   0x0(%rax)
   1f858:	83 f8 07             	cmp    $0x7,%eax
   1f85b:	74 5e                	je     1f8bb <jpath_clear_null+0x8b>
   1f85d:	4c 89 e7             	mov    %r12,%rdi
   1f860:	e8 fb 0a ff ff       	callq  10360 <json_object_iter_key@plt>
   1f865:	48 89 c7             	mov    %rax,%rdi
   1f868:	48 89 c3             	mov    %rax,%rbx
   1f86b:	e8 50 06 ff ff       	callq  fec0 <json_object_key_to_iter@plt>
   1f870:	4c 89 ef             	mov    %r13,%rdi
   1f873:	48 89 c6             	mov    %rax,%rsi
   1f876:	e8 b5 10 ff ff       	callq  10930 <json_object_iter_next@plt>
   1f87b:	49 89 c4             	mov    %rax,%r12
   1f87e:	48 85 db             	test   %rbx,%rbx
   1f881:	74 4d                	je     1f8d0 <jpath_clear_null+0xa0>
   1f883:	48 89 df             	mov    %rbx,%rdi
   1f886:	e8 35 06 ff ff       	callq  fec0 <json_object_key_to_iter@plt>
   1f88b:	48 89 c7             	mov    %rax,%rdi
   1f88e:	e8 7d 0d ff ff       	callq  10610 <json_object_iter_value@plt>
   1f893:	48 89 c5             	mov    %rax,%rbp
   1f896:	48 85 c0             	test   %rax,%rax
   1f899:	74 35                	je     1f8d0 <jpath_clear_null+0xa0>
   1f89b:	8b 45 00             	mov    0x0(%rbp),%eax
   1f89e:	85 c0                	test   %eax,%eax
   1f8a0:	75 b6                	jne    1f858 <jpath_clear_null+0x28>
   1f8a2:	48 89 ef             	mov    %rbp,%rdi
   1f8a5:	e8 86 ff ff ff       	callq  1f830 <jpath_clear_null>
   1f8aa:	85 c0                	test   %eax,%eax
   1f8ac:	78 32                	js     1f8e0 <jpath_clear_null+0xb0>
   1f8ae:	48 89 ef             	mov    %rbp,%rdi
   1f8b1:	e8 2a 0b ff ff       	callq  103e0 <json_object_size@plt>
   1f8b6:	48 85 c0             	test   %rax,%rax
   1f8b9:	75 a2                	jne    1f85d <jpath_clear_null+0x2d>
   1f8bb:	48 89 de             	mov    %rbx,%rsi
   1f8be:	4c 89 ef             	mov    %r13,%rdi
   1f8c1:	e8 3a 03 ff ff       	callq  fc00 <json_object_del@plt>
   1f8c6:	eb 95                	jmp    1f85d <jpath_clear_null+0x2d>
   1f8c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f8cf:	00 
   1f8d0:	31 c0                	xor    %eax,%eax
   1f8d2:	48 83 c4 08          	add    $0x8,%rsp
   1f8d6:	5b                   	pop    %rbx
   1f8d7:	5d                   	pop    %rbp
   1f8d8:	41 5c                	pop    %r12
   1f8da:	41 5d                	pop    %r13
   1f8dc:	c3                   	retq   
   1f8dd:	0f 1f 00             	nopl   (%rax)
   1f8e0:	48 83 c4 08          	add    $0x8,%rsp
   1f8e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f8e9:	5b                   	pop    %rbx
   1f8ea:	5d                   	pop    %rbp
   1f8eb:	41 5c                	pop    %r12
   1f8ed:	41 5d                	pop    %r13
   1f8ef:	c3                   	retq   
   1f8f0:	e8 1b 02 ff ff       	callq  fb10 <__errno_location@plt>
   1f8f5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   1f8fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f900:	eb d0                	jmp    1f8d2 <jpath_clear_null+0xa2>

000000000001f902 <.annobin_jpath.c_end>:
   1f902:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f909:	00 00 00 
   1f90c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f910 <kary_parentof>:
   1f910:	f3 0f 1e fa          	endbr64 
   1f914:	85 f6                	test   %esi,%esi
   1f916:	74 18                	je     1f930 <kary_parentof+0x20>
   1f918:	85 ff                	test   %edi,%edi
   1f91a:	7e 14                	jle    1f930 <kary_parentof+0x20>
   1f91c:	83 ff 01             	cmp    $0x1,%edi
   1f91f:	74 1f                	je     1f940 <kary_parentof+0x30>
   1f921:	8d 44 37 ff          	lea    -0x1(%rdi,%rsi,1),%eax
   1f925:	31 d2                	xor    %edx,%edx
   1f927:	f7 f7                	div    %edi
   1f929:	83 e8 01             	sub    $0x1,%eax
   1f92c:	c3                   	retq   
   1f92d:	0f 1f 00             	nopl   (%rax)
   1f930:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f935:	c3                   	retq   
   1f936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f93d:	00 00 00 
   1f940:	8d 46 ff             	lea    -0x1(%rsi),%eax
   1f943:	c3                   	retq   

000000000001f944 <.annobin_kary_childof.start>:
   1f944:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1f94b:	00 00 00 00 
   1f94f:	90                   	nop

000000000001f950 <kary_childof>:
   1f950:	f3 0f 1e fa          	endbr64 
   1f954:	85 c9                	test   %ecx,%ecx
   1f956:	b8 00 00 00 00       	mov    $0x0,%eax
   1f95b:	0f 49 c1             	cmovns %ecx,%eax
   1f95e:	39 f8                	cmp    %edi,%eax
   1f960:	7d 1e                	jge    1f980 <kary_childof+0x30>
   1f962:	85 c9                	test   %ecx,%ecx
   1f964:	78 1a                	js     1f980 <kary_childof+0x30>
   1f966:	0f af fa             	imul   %edx,%edi
   1f969:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1f96e:	8d 44 39 01          	lea    0x1(%rcx,%rdi,1),%eax
   1f972:	39 c6                	cmp    %eax,%esi
   1f974:	0f 46 c2             	cmovbe %edx,%eax
   1f977:	c3                   	retq   
   1f978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f97f:	00 
   1f980:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f985:	c3                   	retq   

000000000001f986 <.annobin_kary_childof.end>:
   1f986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1f98d:	00 00 00 

000000000001f990 <kary_levelof>:
   1f990:	f3 0f 1e fa          	endbr64 
   1f994:	41 54                	push   %r12
   1f996:	41 89 fc             	mov    %edi,%r12d
   1f999:	55                   	push   %rbp
   1f99a:	53                   	push   %rbx
   1f99b:	31 db                	xor    %ebx,%ebx
   1f99d:	0f 1f 00             	nopl   (%rax)
   1f9a0:	44 89 e7             	mov    %r12d,%edi
   1f9a3:	89 dd                	mov    %ebx,%ebp
   1f9a5:	83 c3 01             	add    $0x1,%ebx
   1f9a8:	e8 63 ff ff ff       	callq  1f910 <kary_parentof>
   1f9ad:	89 c6                	mov    %eax,%esi
   1f9af:	83 f8 ff             	cmp    $0xffffffff,%eax
   1f9b2:	75 ec                	jne    1f9a0 <kary_levelof+0x10>
   1f9b4:	89 e8                	mov    %ebp,%eax
   1f9b6:	5b                   	pop    %rbx
   1f9b7:	5d                   	pop    %rbp
   1f9b8:	41 5c                	pop    %r12
   1f9ba:	c3                   	retq   

000000000001f9bb <.annobin_kary_levelof.end>:
   1f9bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f9c0 <kary_sum_descendants>:
   1f9c0:	f3 0f 1e fa          	endbr64 
   1f9c4:	41 56                	push   %r14
   1f9c6:	45 31 f6             	xor    %r14d,%r14d
   1f9c9:	41 55                	push   %r13
   1f9cb:	41 54                	push   %r12
   1f9cd:	55                   	push   %rbp
   1f9ce:	53                   	push   %rbx
   1f9cf:	85 ff                	test   %edi,%edi
   1f9d1:	7e 36                	jle    1fa09 <kary_sum_descendants+0x49>
   1f9d3:	41 89 d5             	mov    %edx,%r13d
   1f9d6:	41 89 f4             	mov    %esi,%r12d
   1f9d9:	89 fd                	mov    %edi,%ebp
   1f9db:	31 db                	xor    %ebx,%ebx
   1f9dd:	89 d9                	mov    %ebx,%ecx
   1f9df:	44 89 ea             	mov    %r13d,%edx
   1f9e2:	44 89 e6             	mov    %r12d,%esi
   1f9e5:	89 ef                	mov    %ebp,%edi
   1f9e7:	e8 64 ff ff ff       	callq  1f950 <kary_childof>
   1f9ec:	83 f8 ff             	cmp    $0xffffffff,%eax
   1f9ef:	74 11                	je     1fa02 <kary_sum_descendants+0x42>
   1f9f1:	89 c2                	mov    %eax,%edx
   1f9f3:	44 89 e6             	mov    %r12d,%esi
   1f9f6:	89 ef                	mov    %ebp,%edi
   1f9f8:	e8 c3 ff ff ff       	callq  1f9c0 <kary_sum_descendants>
   1f9fd:	46 8d 74 30 01       	lea    0x1(%rax,%r14,1),%r14d
   1fa02:	83 c3 01             	add    $0x1,%ebx
   1fa05:	39 dd                	cmp    %ebx,%ebp
   1fa07:	75 d4                	jne    1f9dd <kary_sum_descendants+0x1d>
   1fa09:	5b                   	pop    %rbx
   1fa0a:	44 89 f0             	mov    %r14d,%eax
   1fa0d:	5d                   	pop    %rbp
   1fa0e:	41 5c                	pop    %r12
   1fa10:	41 5d                	pop    %r13
   1fa12:	41 5e                	pop    %r14
   1fa14:	c3                   	retq   

000000000001fa15 <.annobin_kary_parent_route.start>:
   1fa15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fa1c:	00 00 00 00 

000000000001fa20 <kary_parent_route>:
   1fa20:	f3 0f 1e fa          	endbr64 
   1fa24:	41 54                	push   %r12
   1fa26:	55                   	push   %rbp
   1fa27:	53                   	push   %rbx
   1fa28:	85 ff                	test   %edi,%edi
   1fa2a:	7e 0d                	jle    1fa39 <kary_parent_route+0x19>
   1fa2c:	39 ca                	cmp    %ecx,%edx
   1fa2e:	74 09                	je     1fa39 <kary_parent_route+0x19>
   1fa30:	89 c8                	mov    %ecx,%eax
   1fa32:	0f 43 c2             	cmovae %edx,%eax
   1fa35:	39 c6                	cmp    %eax,%esi
   1fa37:	77 17                	ja     1fa50 <kary_parent_route+0x30>
   1fa39:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1fa3f:	44 89 e0             	mov    %r12d,%eax
   1fa42:	5b                   	pop    %rbx
   1fa43:	5d                   	pop    %rbp
   1fa44:	41 5c                	pop    %r12
   1fa46:	c3                   	retq   
   1fa47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fa4e:	00 00 
   1fa50:	89 d6                	mov    %edx,%esi
   1fa52:	89 cd                	mov    %ecx,%ebp
   1fa54:	89 fb                	mov    %edi,%ebx
   1fa56:	e8 b5 fe ff ff       	callq  1f910 <kary_parentof>
   1fa5b:	41 89 c4             	mov    %eax,%r12d
   1fa5e:	83 f8 ff             	cmp    $0xffffffff,%eax
   1fa61:	74 d6                	je     1fa39 <kary_parent_route+0x19>
   1fa63:	39 c5                	cmp    %eax,%ebp
   1fa65:	75 0d                	jne    1fa74 <kary_parent_route+0x54>
   1fa67:	eb d6                	jmp    1fa3f <kary_parent_route+0x1f>
   1fa69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fa70:	39 c5                	cmp    %eax,%ebp
   1fa72:	74 cb                	je     1fa3f <kary_parent_route+0x1f>
   1fa74:	89 c6                	mov    %eax,%esi
   1fa76:	89 df                	mov    %ebx,%edi
   1fa78:	e8 93 fe ff ff       	callq  1f910 <kary_parentof>
   1fa7d:	83 f8 ff             	cmp    $0xffffffff,%eax
   1fa80:	75 ee                	jne    1fa70 <kary_parent_route+0x50>
   1fa82:	eb b5                	jmp    1fa39 <kary_parent_route+0x19>

000000000001fa84 <.annobin_kary_child_route.start>:
   1fa84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fa8b:	00 00 00 00 
   1fa8f:	90                   	nop

000000000001fa90 <kary_child_route>:
   1fa90:	f3 0f 1e fa          	endbr64 
   1fa94:	85 ff                	test   %edi,%edi
   1fa96:	7e 0d                	jle    1faa5 <kary_child_route+0x15>
   1fa98:	39 ca                	cmp    %ecx,%edx
   1fa9a:	74 09                	je     1faa5 <kary_child_route+0x15>
   1fa9c:	89 c8                	mov    %ecx,%eax
   1fa9e:	0f 43 c2             	cmovae %edx,%eax
   1faa1:	39 c6                	cmp    %eax,%esi
   1faa3:	77 0b                	ja     1fab0 <kary_child_route+0x20>
   1faa5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1faaa:	c3                   	retq   
   1faab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fab0:	41 56                	push   %r14
   1fab2:	41 55                	push   %r13
   1fab4:	41 89 f5             	mov    %esi,%r13d
   1fab7:	89 ce                	mov    %ecx,%esi
   1fab9:	41 54                	push   %r12
   1fabb:	41 89 d4             	mov    %edx,%r12d
   1fabe:	55                   	push   %rbp
   1fabf:	89 fd                	mov    %edi,%ebp
   1fac1:	53                   	push   %rbx
   1fac2:	89 cb                	mov    %ecx,%ebx
   1fac4:	e8 47 fe ff ff       	callq  1f910 <kary_parentof>
   1fac9:	41 89 c6             	mov    %eax,%r14d
   1facc:	89 d8                	mov    %ebx,%eax
   1face:	45 39 f4             	cmp    %r14d,%r12d
   1fad1:	74 3c                	je     1fb0f <kary_child_route+0x7f>
   1fad3:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   1fad7:	74 31                	je     1fb0a <kary_child_route+0x7a>
   1fad9:	31 db                	xor    %ebx,%ebx
   1fadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fae0:	89 d9                	mov    %ebx,%ecx
   1fae2:	44 89 e2             	mov    %r12d,%edx
   1fae5:	44 89 ee             	mov    %r13d,%esi
   1fae8:	89 ef                	mov    %ebp,%edi
   1faea:	e8 61 fe ff ff       	callq  1f950 <kary_childof>
   1faef:	41 39 c6             	cmp    %eax,%r14d
   1faf2:	74 1b                	je     1fb0f <kary_child_route+0x7f>
   1faf4:	83 c3 01             	add    $0x1,%ebx
   1faf7:	39 dd                	cmp    %ebx,%ebp
   1faf9:	7f e5                	jg     1fae0 <kary_child_route+0x50>
   1fafb:	44 89 f6             	mov    %r14d,%esi
   1fafe:	89 ef                	mov    %ebp,%edi
   1fb00:	e8 0b fe ff ff       	callq  1f910 <kary_parentof>
   1fb05:	41 89 c6             	mov    %eax,%r14d
   1fb08:	eb c9                	jmp    1fad3 <kary_child_route+0x43>
   1fb0a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1fb0f:	5b                   	pop    %rbx
   1fb10:	5d                   	pop    %rbp
   1fb11:	41 5c                	pop    %r12
   1fb13:	41 5d                	pop    %r13
   1fb15:	41 5e                	pop    %r14
   1fb17:	c3                   	retq   

000000000001fb18 <.annobin_kary.c_end>:
   1fb18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fb1f:	00 

000000000001fb20 <log_init>:
   1fb20:	f3 0f 1e fa          	endbr64 
   1fb24:	48 85 ff             	test   %rdi,%rdi
   1fb27:	74 17                	je     1fb40 <log_init+0x20>
   1fb29:	48 83 ec 08          	sub    $0x8,%rsp
   1fb2d:	e8 1e 08 ff ff       	callq  10350 <__xpg_basename@plt>
   1fb32:	48 89 05 8f 79 23 00 	mov    %rax,0x23798f(%rip)        # 2574c8 <prog>
   1fb39:	48 83 c4 08          	add    $0x8,%rsp
   1fb3d:	c3                   	retq   
   1fb3e:	66 90                	xchg   %ax,%ax
   1fb40:	48 8b 05 59 34 23 00 	mov    0x233459(%rip),%rax        # 252fa0 <__progname@GLIBC_2.2.5>
   1fb47:	48 8b 00             	mov    (%rax),%rax
   1fb4a:	48 89 05 77 79 23 00 	mov    %rax,0x237977(%rip)        # 2574c8 <prog>
   1fb51:	c3                   	retq   

000000000001fb52 <.annobin__verr.start>:
   1fb52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fb59:	00 00 00 00 
   1fb5d:	0f 1f 00             	nopl   (%rax)

000000000001fb60 <_verr>:
   1fb60:	41 55                	push   %r13
   1fb62:	41 54                	push   %r12
   1fb64:	49 89 d4             	mov    %rdx,%r12
   1fb67:	55                   	push   %rbp
   1fb68:	48 89 f5             	mov    %rsi,%rbp
   1fb6b:	53                   	push   %rbx
   1fb6c:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1fb73:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fb7a:	00 00 
   1fb7c:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1fb83:	00 
   1fb84:	31 c0                	xor    %eax,%eax
   1fb86:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1fb8d:	00 00 
   1fb8f:	e8 3c 0e ff ff       	callq  109d0 <strerror@plt>
   1fb94:	48 83 3d 2c 79 23 00 	cmpq   $0x0,0x23792c(%rip)        # 2574c8 <prog>
   1fb9b:	00 
   1fb9c:	49 89 c5             	mov    %rax,%r13
   1fb9f:	0f 84 ab 00 00 00    	je     1fc50 <_verr+0xf0>
  return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
   1fba5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1fbaa:	4c 89 e1             	mov    %r12,%rcx
   1fbad:	48 89 ea             	mov    %rbp,%rdx
   1fbb0:	be 01 00 00 00       	mov    $0x1,%esi
   1fbb5:	e8 d6 08 ff ff       	callq  10490 <__vasprintf_chk@plt>
   1fbba:	85 c0                	test   %eax,%eax
   1fbbc:	78 62                	js     1fc20 <_verr+0xc0>
   1fbbe:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1fbc3:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   1fbc8:	48 8b 05 19 34 23 00 	mov    0x233419(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1fbcf:	4d 89 e9             	mov    %r13,%r9
   1fbd2:	48 8b 0d ef 78 23 00 	mov    0x2378ef(%rip),%rcx        # 2574c8 <prog>
   1fbd9:	48 8d 15 e2 f9 01 00 	lea    0x1f9e2(%rip),%rdx        # 3f5c2 <f58_prefix+0x15f>
   1fbe0:	be 01 00 00 00       	mov    $0x1,%esi
   1fbe5:	48 8b 38             	mov    (%rax),%rdi
   1fbe8:	31 c0                	xor    %eax,%eax
   1fbea:	e8 71 0d ff ff       	callq  10960 <__fprintf_chk@plt>
   1fbef:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1fbf4:	48 39 df             	cmp    %rbx,%rdi
   1fbf7:	74 05                	je     1fbfe <_verr+0x9e>
   1fbf9:	e8 b2 fe fe ff       	callq  fab0 <free@plt>
   1fbfe:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1fc05:	00 
   1fc06:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fc0d:	00 00 
   1fc0f:	75 4b                	jne    1fc5c <_verr+0xfc>
   1fc11:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1fc18:	5b                   	pop    %rbx
   1fc19:	5d                   	pop    %rbp
   1fc1a:	41 5c                	pop    %r12
   1fc1c:	41 5d                	pop    %r13
   1fc1e:	c3                   	retq   
   1fc1f:	90                   	nop
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1fc20:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   1fc25:	49 89 e8             	mov    %rbp,%r8
   1fc28:	4d 89 e1             	mov    %r12,%r9
   1fc2b:	b9 80 00 00 00       	mov    $0x80,%ecx
   1fc30:	ba 01 00 00 00       	mov    $0x1,%edx
   1fc35:	be 80 00 00 00       	mov    $0x80,%esi
   1fc3a:	48 89 df             	mov    %rbx,%rdi
   1fc3d:	e8 1e 09 ff ff       	callq  10560 <__vsnprintf_chk@plt>
   1fc42:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1fc47:	49 89 d8             	mov    %rbx,%r8
   1fc4a:	e9 79 ff ff ff       	jmpq   1fbc8 <_verr+0x68>
   1fc4f:	90                   	nop
   1fc50:	31 ff                	xor    %edi,%edi
   1fc52:	e8 c9 fe ff ff       	callq  1fb20 <log_init>
   1fc57:	e9 49 ff ff ff       	jmpq   1fba5 <_verr+0x45>
   1fc5c:	e8 ef 01 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001fc61 <.annobin__verr.end>:
   1fc61:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fc68:	00 00 00 00 
   1fc6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fc70 <_vlog>:
   1fc70:	41 54                	push   %r12
   1fc72:	49 89 f4             	mov    %rsi,%r12
   1fc75:	55                   	push   %rbp
   1fc76:	48 89 fd             	mov    %rdi,%rbp
   1fc79:	53                   	push   %rbx
   1fc7a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1fc81:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fc88:	00 00 
   1fc8a:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1fc91:	00 
   1fc92:	31 c0                	xor    %eax,%eax
   1fc94:	48 83 3d 2c 78 23 00 	cmpq   $0x0,0x23782c(%rip)        # 2574c8 <prog>
   1fc9b:	00 
   1fc9c:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1fca3:	00 00 
   1fca5:	0f 84 a5 00 00 00    	je     1fd50 <_vlog+0xe0>
  return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
   1fcab:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1fcb0:	4c 89 e1             	mov    %r12,%rcx
   1fcb3:	48 89 ea             	mov    %rbp,%rdx
   1fcb6:	be 01 00 00 00       	mov    $0x1,%esi
   1fcbb:	e8 d0 07 ff ff       	callq  10490 <__vasprintf_chk@plt>
   1fcc0:	85 c0                	test   %eax,%eax
   1fcc2:	78 5c                	js     1fd20 <_vlog+0xb0>
   1fcc4:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1fcc9:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   1fcce:	48 8b 05 13 33 23 00 	mov    0x233313(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   1fcd5:	48 8b 0d ec 77 23 00 	mov    0x2377ec(%rip),%rcx        # 2574c8 <prog>
   1fcdc:	be 01 00 00 00       	mov    $0x1,%esi
   1fce1:	48 8d 15 de f8 01 00 	lea    0x1f8de(%rip),%rdx        # 3f5c6 <f58_prefix+0x163>
   1fce8:	48 8b 38             	mov    (%rax),%rdi
   1fceb:	31 c0                	xor    %eax,%eax
   1fced:	e8 6e 0c ff ff       	callq  10960 <__fprintf_chk@plt>
   1fcf2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1fcf7:	48 39 df             	cmp    %rbx,%rdi
   1fcfa:	74 05                	je     1fd01 <_vlog+0x91>
   1fcfc:	e8 af fd fe ff       	callq  fab0 <free@plt>
   1fd01:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1fd08:	00 
   1fd09:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fd10:	00 00 
   1fd12:	75 48                	jne    1fd5c <_vlog+0xec>
   1fd14:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   1fd1b:	5b                   	pop    %rbx
   1fd1c:	5d                   	pop    %rbp
   1fd1d:	41 5c                	pop    %r12
   1fd1f:	c3                   	retq   
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   1fd20:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   1fd25:	49 89 e8             	mov    %rbp,%r8
   1fd28:	4d 89 e1             	mov    %r12,%r9
   1fd2b:	b9 80 00 00 00       	mov    $0x80,%ecx
   1fd30:	ba 01 00 00 00       	mov    $0x1,%edx
   1fd35:	be 80 00 00 00       	mov    $0x80,%esi
   1fd3a:	48 89 df             	mov    %rbx,%rdi
   1fd3d:	e8 1e 08 ff ff       	callq  10560 <__vsnprintf_chk@plt>
   1fd42:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1fd47:	49 89 d8             	mov    %rbx,%r8
   1fd4a:	eb 82                	jmp    1fcce <_vlog+0x5e>
   1fd4c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fd50:	31 ff                	xor    %edi,%edi
   1fd52:	e8 c9 fd ff ff       	callq  1fb20 <log_init>
   1fd57:	e9 4f ff ff ff       	jmpq   1fcab <_vlog+0x3b>
   1fd5c:	e8 ef 00 ff ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001fd61 <.annobin__vlog.end>:
   1fd61:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fd68:	00 00 00 00 
   1fd6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fd70 <log_fini>:
   1fd70:	f3 0f 1e fa          	endbr64 
   1fd74:	c3                   	retq   

000000000001fd75 <.annobin_log_err_exit.start>:
   1fd75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fd7c:	00 00 00 00 

000000000001fd80 <log_err_exit>:
   1fd80:	f3 0f 1e fa          	endbr64 
   1fd84:	53                   	push   %rbx
   1fd85:	48 89 fb             	mov    %rdi,%rbx
   1fd88:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   1fd8f:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1fd94:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1fd99:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1fd9e:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1fda3:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1fda8:	84 c0                	test   %al,%al
   1fdaa:	74 37                	je     1fde3 <log_err_exit+0x63>
   1fdac:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1fdb1:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1fdb6:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1fdbb:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1fdc2:	00 
   1fdc3:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1fdca:	00 
   1fdcb:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   1fdd2:	00 
   1fdd3:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   1fdda:	00 
   1fddb:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   1fde2:	00 
   1fde3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fdea:	00 00 
   1fdec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1fdf1:	31 c0                	xor    %eax,%eax
   1fdf3:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1fdfa:	00 
   1fdfb:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   1fe02:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fe07:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1fe0c:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   1fe13:	00 
   1fe14:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1fe19:	e8 f2 fc fe ff       	callq  fb10 <__errno_location@plt>
   1fe1e:	48 89 e2             	mov    %rsp,%rdx
   1fe21:	48 89 de             	mov    %rbx,%rsi
   1fe24:	8b 38                	mov    (%rax),%edi
   1fe26:	e8 35 fd ff ff       	callq  1fb60 <_verr>
   1fe2b:	bf 01 00 00 00       	mov    $0x1,%edi
   1fe30:	e8 db 0a ff ff       	callq  10910 <exit@plt>

000000000001fe35 <.annobin_log_err.start>:
   1fe35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1fe3c:	00 00 00 00 

000000000001fe40 <log_err>:
   1fe40:	f3 0f 1e fa          	endbr64 
   1fe44:	53                   	push   %rbx
   1fe45:	48 89 fb             	mov    %rdi,%rbx
   1fe48:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   1fe4f:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1fe54:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1fe59:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1fe5e:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1fe63:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1fe68:	84 c0                	test   %al,%al
   1fe6a:	74 37                	je     1fea3 <log_err+0x63>
   1fe6c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1fe71:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1fe76:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1fe7b:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1fe82:	00 
   1fe83:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1fe8a:	00 
   1fe8b:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   1fe92:	00 
   1fe93:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   1fe9a:	00 
   1fe9b:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   1fea2:	00 
   1fea3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1feaa:	00 00 
   1feac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1feb1:	31 c0                	xor    %eax,%eax
   1feb3:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1feba:	00 
   1febb:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   1fec2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fec7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1fecc:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   1fed3:	00 
   1fed4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1fed9:	e8 32 fc fe ff       	callq  fb10 <__errno_location@plt>
   1fede:	48 89 e2             	mov    %rsp,%rdx
   1fee1:	48 89 de             	mov    %rbx,%rsi
   1fee4:	8b 38                	mov    (%rax),%edi
   1fee6:	e8 75 fc ff ff       	callq  1fb60 <_verr>
   1feeb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1fef0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fef7:	00 00 
   1fef9:	75 09                	jne    1ff04 <log_err+0xc4>
   1fefb:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
   1ff02:	5b                   	pop    %rbx
   1ff03:	c3                   	retq   
   1ff04:	e8 47 ff fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000001ff09 <.annobin_log_err.end>:
   1ff09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001ff10 <log_errn_exit>:
   1ff10:	f3 0f 1e fa          	endbr64 
   1ff14:	50                   	push   %rax
   1ff15:	58                   	pop    %rax
   1ff16:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   1ff1d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1ff22:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1ff27:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1ff2c:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1ff31:	84 c0                	test   %al,%al
   1ff33:	74 37                	je     1ff6c <log_errn_exit+0x5c>
   1ff35:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1ff3a:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1ff3f:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1ff44:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1ff4b:	00 
   1ff4c:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1ff53:	00 
   1ff54:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   1ff5b:	00 
   1ff5c:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   1ff63:	00 
   1ff64:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   1ff6b:	00 
   1ff6c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ff73:	00 00 
   1ff75:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ff7a:	31 c0                	xor    %eax,%eax
   1ff7c:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   1ff83:	00 
   1ff84:	48 89 e2             	mov    %rsp,%rdx
   1ff87:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1ff8e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ff93:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1ff98:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   1ff9f:	00 
   1ffa0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ffa5:	e8 b6 fb ff ff       	callq  1fb60 <_verr>
   1ffaa:	bf 01 00 00 00       	mov    $0x1,%edi
   1ffaf:	e8 5c 09 ff ff       	callq  10910 <exit@plt>

000000000001ffb4 <.annobin_log_errn.start>:
   1ffb4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1ffbb:	00 00 00 00 
   1ffbf:	90                   	nop

000000000001ffc0 <log_errn>:
   1ffc0:	f3 0f 1e fa          	endbr64 
   1ffc4:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   1ffcb:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1ffd0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1ffd5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1ffda:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1ffdf:	84 c0                	test   %al,%al
   1ffe1:	74 37                	je     2001a <log_errn+0x5a>
   1ffe3:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1ffe8:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1ffed:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1fff2:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   1fff9:	00 
   1fffa:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   20001:	00 
   20002:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   20009:	00 
   2000a:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   20011:	00 
   20012:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   20019:	00 
   2001a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20021:	00 00 
   20023:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20028:	31 c0                	xor    %eax,%eax
   2002a:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   20031:	00 
   20032:	48 89 e2             	mov    %rsp,%rdx
   20035:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   2003c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20041:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   20046:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2004b:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   20052:	00 
   20053:	e8 08 fb ff ff       	callq  1fb60 <_verr>
   20058:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2005d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   20064:	00 00 
   20066:	75 08                	jne    20070 <log_errn+0xb0>
   20068:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   2006f:	c3                   	retq   
   20070:	e8 db fd fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000020075 <.annobin_log_errn.end>:
   20075:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2007c:	00 00 00 00 

0000000000020080 <log_msg_exit>:
   20080:	f3 0f 1e fa          	endbr64 
   20084:	50                   	push   %rax
   20085:	58                   	pop    %rax
   20086:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   2008d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   20092:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   20097:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2009c:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   200a1:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   200a6:	84 c0                	test   %al,%al
   200a8:	74 37                	je     200e1 <log_msg_exit+0x61>
   200aa:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   200af:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   200b4:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   200b9:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   200c0:	00 
   200c1:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   200c8:	00 
   200c9:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   200d0:	00 
   200d1:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   200d8:	00 
   200d9:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   200e0:	00 
   200e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   200e8:	00 00 
   200ea:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   200ef:	31 c0                	xor    %eax,%eax
   200f1:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   200f8:	00 
   200f9:	48 89 e6             	mov    %rsp,%rsi
   200fc:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   20103:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20108:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   2010d:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   20114:	00 
   20115:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2011a:	e8 51 fb ff ff       	callq  1fc70 <_vlog>
   2011f:	bf 01 00 00 00       	mov    $0x1,%edi
   20124:	e8 e7 07 ff ff       	callq  10910 <exit@plt>

0000000000020129 <.annobin_log_msg.start>:
   20129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020130 <log_msg>:
   20130:	f3 0f 1e fa          	endbr64 
   20134:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   2013b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   20140:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   20145:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2014a:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   2014f:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   20154:	84 c0                	test   %al,%al
   20156:	74 37                	je     2018f <log_msg+0x5f>
   20158:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   2015d:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   20162:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   20167:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   2016e:	00 
   2016f:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   20176:	00 
   20177:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   2017e:	00 
   2017f:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   20186:	00 
   20187:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   2018e:	00 
   2018f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20196:	00 00 
   20198:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2019d:	31 c0                	xor    %eax,%eax
   2019f:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   201a6:	00 
   201a7:	48 89 e6             	mov    %rsp,%rsi
   201aa:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   201b1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   201b6:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   201bb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   201c0:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   201c7:	00 
   201c8:	e8 a3 fa ff ff       	callq  1fc70 <_vlog>
   201cd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   201d2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   201d9:	00 00 
   201db:	75 08                	jne    201e5 <log_msg+0xb5>
   201dd:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   201e4:	c3                   	retq   
   201e5:	e8 66 fc fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000201ea <.annobin_log.c_end>:
   201ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000201f0 <lru_entry_purge>:
   201f0:	53                   	push   %rbx
   201f1:	48 89 fb             	mov    %rdi,%rbx
   201f4:	48 3b 77 18          	cmp    0x18(%rdi),%rsi
   201f8:	74 5e                	je     20258 <lru_entry_purge+0x68>
   201fa:	48 8b 46 18          	mov    0x18(%rsi),%rax
   201fe:	48 85 c0             	test   %rax,%rax
   20201:	74 08                	je     2020b <lru_entry_purge+0x1b>
   20203:	48 8b 56 20          	mov    0x20(%rsi),%rdx
   20207:	48 89 50 20          	mov    %rdx,0x20(%rax)
   2020b:	48 3b 73 20          	cmp    0x20(%rbx),%rsi
   2020f:	74 37                	je     20248 <lru_entry_purge+0x58>
   20211:	48 8b 46 20          	mov    0x20(%rsi),%rax
   20215:	48 85 c0             	test   %rax,%rax
   20218:	74 08                	je     20222 <lru_entry_purge+0x32>
   2021a:	48 8b 56 18          	mov    0x18(%rsi),%rdx
   2021e:	48 89 50 18          	mov    %rdx,0x18(%rax)
   20222:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
   20229:	00 
   2022a:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2022e:	48 c7 46 18 00 00 00 	movq   $0x0,0x18(%rsi)
   20235:	00 
   20236:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   2023a:	e8 91 94 01 00       	callq  396d0 <fzhash_delete>
   2023f:	83 6b 04 01          	subl   $0x1,0x4(%rbx)
   20243:	5b                   	pop    %rbx
   20244:	c3                   	retq   
   20245:	0f 1f 00             	nopl   (%rax)
   20248:	48 8b 46 18          	mov    0x18(%rsi),%rax
   2024c:	48 89 43 20          	mov    %rax,0x20(%rbx)
   20250:	eb d0                	jmp    20222 <lru_entry_purge+0x32>
   20252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20258:	48 8b 46 20          	mov    0x20(%rsi),%rax
   2025c:	48 89 47 18          	mov    %rax,0x18(%rdi)
   20260:	eb a9                	jmp    2020b <lru_entry_purge+0x1b>

0000000000020262 <.annobin_lru_entry_destroy.start>:
   20262:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20269:	00 00 00 00 
   2026d:	0f 1f 00             	nopl   (%rax)

0000000000020270 <lru_entry_destroy>:
   20270:	f3 0f 1e fa          	endbr64 
   20274:	48 85 ff             	test   %rdi,%rdi
   20277:	74 37                	je     202b0 <lru_entry_destroy+0x40>
   20279:	53                   	push   %rbx
   2027a:	48 8b 07             	mov    (%rdi),%rax
   2027d:	48 89 fb             	mov    %rdi,%rbx
   20280:	48 85 c0             	test   %rax,%rax
   20283:	74 0f                	je     20294 <lru_entry_destroy+0x24>
   20285:	48 8b 40 08          	mov    0x8(%rax),%rax
   20289:	48 85 c0             	test   %rax,%rax
   2028c:	74 06                	je     20294 <lru_entry_destroy+0x24>
   2028e:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   20292:	ff d0                	callq  *%rax
   20294:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   20298:	e8 13 f8 fe ff       	callq  fab0 <free@plt>
   2029d:	48 89 df             	mov    %rbx,%rdi
   202a0:	5b                   	pop    %rbx
   202a1:	e9 0a f8 fe ff       	jmpq   fab0 <free@plt>
   202a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   202ad:	00 00 00 
   202b0:	c3                   	retq   

00000000000202b1 <.annobin_lru_cache_selfcheck.start>:
   202b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   202b8:	00 00 00 00 
   202bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000202c0 <lru_cache_selfcheck>:
   202c0:	f3 0f 1e fa          	endbr64 
   202c4:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
   202c8:	48 85 c9             	test   %rcx,%rcx
   202cb:	74 43                	je     20310 <lru_cache_selfcheck+0x50>
   202cd:	48 83 79 18 00       	cmpq   $0x0,0x18(%rcx)
   202d2:	75 4b                	jne    2031f <lru_cache_selfcheck+0x5f>
   202d4:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   202d8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   202dd:	48 39 d1             	cmp    %rdx,%rcx
   202e0:	74 27                	je     20309 <lru_cache_selfcheck+0x49>
   202e2:	b9 01 00 00 00       	mov    $0x1,%ecx
   202e7:	eb 0a                	jmp    202f3 <lru_cache_selfcheck+0x33>
   202e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   202f0:	48 89 c2             	mov    %rax,%rdx
   202f3:	48 85 d2             	test   %rdx,%rdx
   202f6:	74 1a                	je     20312 <lru_cache_selfcheck+0x52>
   202f8:	48 8b 42 20          	mov    0x20(%rdx),%rax
   202fc:	83 c1 01             	add    $0x1,%ecx
   202ff:	48 39 d0             	cmp    %rdx,%rax
   20302:	75 ec                	jne    202f0 <lru_cache_selfcheck+0x30>
   20304:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   20309:	c3                   	retq   
   2030a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20310:	31 c9                	xor    %ecx,%ecx
   20312:	31 c0                	xor    %eax,%eax
   20314:	39 4f 04             	cmp    %ecx,0x4(%rdi)
   20317:	0f 94 c0             	sete   %al
   2031a:	8d 44 40 fd          	lea    -0x3(%rax,%rax,2),%eax
   2031e:	c3                   	retq   
   2031f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20324:	c3                   	retq   

0000000000020325 <.annobin_lru_cache_destroy.start>:
   20325:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2032c:	00 00 00 00 

0000000000020330 <lru_cache_destroy>:
   20330:	f3 0f 1e fa          	endbr64 
   20334:	53                   	push   %rbx
   20335:	48 89 fb             	mov    %rdi,%rbx
   20338:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
   2033c:	e8 1f 8f 01 00       	callq  39260 <fzhash_destroy>
   20341:	48 89 df             	mov    %rbx,%rdi
   20344:	5b                   	pop    %rbx
   20345:	e9 66 f7 fe ff       	jmpq   fab0 <free@plt>

000000000002034a <.annobin_lru_cache_create.start>:
   2034a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020350 <lru_cache_create>:
   20350:	f3 0f 1e fa          	endbr64 
   20354:	55                   	push   %rbp
   20355:	89 fd                	mov    %edi,%ebp
   20357:	53                   	push   %rbx
   20358:	48 83 ec 08          	sub    $0x8,%rsp
   2035c:	e8 3f 8e 01 00       	callq  391a0 <fzhash_new>
   20361:	48 89 c3             	mov    %rax,%rbx
   20364:	48 85 c0             	test   %rax,%rax
   20367:	74 3f                	je     203a8 <lru_cache_create+0x58>
   20369:	bf 28 00 00 00       	mov    $0x28,%edi
   2036e:	e8 ad 00 ff ff       	callq  10420 <malloc@plt>
   20373:	48 85 c0             	test   %rax,%rax
   20376:	74 30                	je     203a8 <lru_cache_create+0x58>
   20378:	89 28                	mov    %ebp,(%rax)
   2037a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   20381:	48 89 58 10          	mov    %rbx,0x10(%rax)
   20385:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   2038c:	00 
   2038d:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   20394:	00 
   20395:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   2039c:	00 
   2039d:	48 83 c4 08          	add    $0x8,%rsp
   203a1:	5b                   	pop    %rbx
   203a2:	5d                   	pop    %rbp
   203a3:	c3                   	retq   
   203a4:	0f 1f 40 00          	nopl   0x0(%rax)
   203a8:	48 89 df             	mov    %rbx,%rdi
   203ab:	e8 00 f7 fe ff       	callq  fab0 <free@plt>
   203b0:	48 83 c4 08          	add    $0x8,%rsp
   203b4:	31 c0                	xor    %eax,%eax
   203b6:	5b                   	pop    %rbx
   203b7:	5d                   	pop    %rbp
   203b8:	c3                   	retq   

00000000000203b9 <.annobin_lru_cache_create.end>:
   203b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000203c0 <lru_cache_set_free_f>:
   203c0:	f3 0f 1e fa          	endbr64 
   203c4:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   203c8:	c3                   	retq   

00000000000203c9 <.annobin_lru_cache_get.start>:
   203c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000203d0 <lru_cache_get>:
   203d0:	f3 0f 1e fa          	endbr64 
   203d4:	53                   	push   %rbx
   203d5:	48 89 fb             	mov    %rdi,%rbx
   203d8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   203dc:	e8 5f 93 01 00       	callq  39740 <fzhash_lookup>
   203e1:	48 85 c0             	test   %rax,%rax
   203e4:	74 55                	je     2043b <lru_cache_get+0x6b>
   203e6:	48 3b 43 18          	cmp    0x18(%rbx),%rax
   203ea:	74 4b                	je     20437 <lru_cache_get+0x67>
   203ec:	48 8b 50 18          	mov    0x18(%rax),%rdx
   203f0:	48 85 d2             	test   %rdx,%rdx
   203f3:	74 08                	je     203fd <lru_cache_get+0x2d>
   203f5:	48 8b 48 20          	mov    0x20(%rax),%rcx
   203f9:	48 89 4a 20          	mov    %rcx,0x20(%rdx)
   203fd:	48 3b 43 20          	cmp    0x20(%rbx),%rax
   20401:	74 3d                	je     20440 <lru_cache_get+0x70>
   20403:	48 8b 48 20          	mov    0x20(%rax),%rcx
   20407:	48 85 c9             	test   %rcx,%rcx
   2040a:	74 04                	je     20410 <lru_cache_get+0x40>
   2040c:	48 89 51 18          	mov    %rdx,0x18(%rcx)
   20410:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   20417:	00 
   20418:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   2041f:	00 
   20420:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   20424:	48 89 50 20          	mov    %rdx,0x20(%rax)
   20428:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   2042d:	74 21                	je     20450 <lru_cache_get+0x80>
   2042f:	48 89 42 18          	mov    %rax,0x18(%rdx)
   20433:	48 89 43 18          	mov    %rax,0x18(%rbx)
   20437:	48 8b 40 10          	mov    0x10(%rax),%rax
   2043b:	5b                   	pop    %rbx
   2043c:	c3                   	retq   
   2043d:	0f 1f 00             	nopl   (%rax)
   20440:	48 89 53 20          	mov    %rdx,0x20(%rbx)
   20444:	eb ca                	jmp    20410 <lru_cache_get+0x40>
   20446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2044d:	00 00 00 
   20450:	48 89 43 18          	mov    %rax,0x18(%rbx)
   20454:	48 89 43 20          	mov    %rax,0x20(%rbx)
   20458:	48 8b 40 10          	mov    0x10(%rax),%rax
   2045c:	eb dd                	jmp    2043b <lru_cache_get+0x6b>

000000000002045e <.annobin_lru_cache_check.start>:
   2045e:	66 90                	xchg   %ax,%ax

0000000000020460 <lru_cache_check>:
   20460:	f3 0f 1e fa          	endbr64 
   20464:	48 83 ec 08          	sub    $0x8,%rsp
   20468:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2046c:	e8 cf 92 01 00       	callq  39740 <fzhash_lookup>
   20471:	48 85 c0             	test   %rax,%rax
   20474:	0f 95 c0             	setne  %al
   20477:	48 83 c4 08          	add    $0x8,%rsp
   2047b:	c3                   	retq   

000000000002047c <.annobin_lru_cache_check.end>:
   2047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020480 <lru_cache_put>:
   20480:	f3 0f 1e fa          	endbr64 
   20484:	41 55                	push   %r13
   20486:	49 89 d5             	mov    %rdx,%r13
   20489:	41 54                	push   %r12
   2048b:	49 89 f4             	mov    %rsi,%r12
   2048e:	55                   	push   %rbp
   2048f:	53                   	push   %rbx
   20490:	48 89 fb             	mov    %rdi,%rbx
   20493:	48 83 ec 08          	sub    $0x8,%rsp
   20497:	e8 34 ff ff ff       	callq  203d0 <lru_cache_get>
   2049c:	48 85 c0             	test   %rax,%rax
   2049f:	0f 85 03 01 00 00    	jne    205a8 <lru_cache_put+0x128>
   204a5:	bf 28 00 00 00       	mov    $0x28,%edi
   204aa:	e8 71 ff fe ff       	callq  10420 <malloc@plt>
   204af:	48 89 c5             	mov    %rax,%rbp
   204b2:	48 85 c0             	test   %rax,%rax
   204b5:	0f 84 c5 00 00 00    	je     20580 <lru_cache_put+0x100>
   204bb:	4c 89 e7             	mov    %r12,%rdi
   204be:	e8 dd 04 ff ff       	callq  109a0 <strdup@plt>
   204c3:	48 89 45 08          	mov    %rax,0x8(%rbp)
   204c7:	48 85 c0             	test   %rax,%rax
   204ca:	0f 84 b0 00 00 00    	je     20580 <lru_cache_put+0x100>
   204d0:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   204d4:	8b 43 04             	mov    0x4(%rbx),%eax
   204d7:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   204db:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   204df:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   204e6:	00 
   204e7:	48 c7 45 18 00 00 00 	movq   $0x0,0x18(%rbp)
   204ee:	00 
   204ef:	3b 03                	cmp    (%rbx),%eax
   204f1:	74 55                	je     20548 <lru_cache_put+0xc8>
   204f3:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   204f7:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   204fb:	48 85 f6             	test   %rsi,%rsi
   204fe:	74 70                	je     20570 <lru_cache_put+0xf0>
   20500:	48 89 6a 18          	mov    %rbp,0x18(%rdx)
   20504:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   20508:	83 c0 01             	add    $0x1,%eax
   2050b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2050f:	48 89 ea             	mov    %rbp,%rdx
   20512:	4c 89 e6             	mov    %r12,%rsi
   20515:	89 43 04             	mov    %eax,0x4(%rbx)
   20518:	e8 23 8e 01 00       	callq  39340 <fzhash_insert>
   2051d:	85 c0                	test   %eax,%eax
   2051f:	0f 88 4b 06 ff ff    	js     10b70 <lru_cache_put.cold.3>
   20525:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   20529:	48 8d 15 40 fd ff ff 	lea    -0x2c0(%rip),%rdx        # 20270 <lru_entry_destroy>
   20530:	4c 89 e6             	mov    %r12,%rsi
   20533:	e8 28 93 01 00       	callq  39860 <fzhash_freefn>
   20538:	31 c0                	xor    %eax,%eax
   2053a:	48 83 c4 08          	add    $0x8,%rsp
   2053e:	5b                   	pop    %rbx
   2053f:	5d                   	pop    %rbp
   20540:	41 5c                	pop    %r12
   20542:	41 5d                	pop    %r13
   20544:	c3                   	retq   
   20545:	0f 1f 00             	nopl   (%rax)
   20548:	48 85 f6             	test   %rsi,%rsi
   2054b:	74 4b                	je     20598 <lru_cache_put+0x118>
   2054d:	48 89 df             	mov    %rbx,%rdi
   20550:	e8 9b fc ff ff       	callq  201f0 <lru_entry_purge>
   20555:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   20559:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   2055d:	8b 43 04             	mov    0x4(%rbx),%eax
   20560:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   20564:	48 85 f6             	test   %rsi,%rsi
   20567:	75 97                	jne    20500 <lru_cache_put+0x80>
   20569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20570:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   20574:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
   20578:	eb 8e                	jmp    20508 <lru_cache_put+0x88>
   2057a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20580:	48 89 ef             	mov    %rbp,%rdi
   20583:	e8 28 f5 fe ff       	callq  fab0 <free@plt>
   20588:	48 83 c4 08          	add    $0x8,%rsp
   2058c:	31 c0                	xor    %eax,%eax
   2058e:	5b                   	pop    %rbx
   2058f:	5d                   	pop    %rbp
   20590:	41 5c                	pop    %r12
   20592:	41 5d                	pop    %r13
   20594:	c3                   	retq   
   20595:	0f 1f 00             	nopl   (%rax)
   20598:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   2059c:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   205a0:	eb ce                	jmp    20570 <lru_cache_put+0xf0>
   205a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   205a8:	e8 63 f5 fe ff       	callq  fb10 <__errno_location@plt>
   205ad:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   205b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   205b8:	eb 80                	jmp    2053a <lru_cache_put+0xba>

00000000000205ba <.annobin_lru_cache_put.end>:
   205ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000205c0 <lru_cache_remove>:
   205c0:	f3 0f 1e fa          	endbr64 
   205c4:	53                   	push   %rbx
   205c5:	48 89 fb             	mov    %rdi,%rbx
   205c8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   205cc:	e8 6f 91 01 00       	callq  39740 <fzhash_lookup>
   205d1:	48 85 c0             	test   %rax,%rax
   205d4:	74 0f                	je     205e5 <lru_cache_remove+0x25>
   205d6:	48 89 c6             	mov    %rax,%rsi
   205d9:	48 89 df             	mov    %rbx,%rdi
   205dc:	e8 0f fc ff ff       	callq  201f0 <lru_entry_purge>
   205e1:	31 c0                	xor    %eax,%eax
   205e3:	5b                   	pop    %rbx
   205e4:	c3                   	retq   
   205e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   205ea:	5b                   	pop    %rbx
   205eb:	c3                   	retq   

00000000000205ec <.annobin_lru_cache_remove.end>:
   205ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000205f0 <lru_cache_size>:
   205f0:	f3 0f 1e fa          	endbr64 
   205f4:	8b 47 04             	mov    0x4(%rdi),%eax
   205f7:	c3                   	retq   

00000000000205f8 <.annobin_lru_cache.c_end>:
   205f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   205ff:	00 

0000000000020600 <mn_words_required>:
   20600:	f3 0f 1e fa          	endbr64 
   20604:	8d 54 7f 03          	lea    0x3(%rdi,%rdi,2),%edx
   20608:	85 d2                	test   %edx,%edx
   2060a:	8d 42 03             	lea    0x3(%rdx),%eax
   2060d:	0f 49 c2             	cmovns %edx,%eax
   20610:	c1 f8 02             	sar    $0x2,%eax
   20613:	c3                   	retq   

0000000000020614 <.annobin_mn_encode_word_index.start>:
   20614:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2061b:	00 00 00 00 
   2061f:	90                   	nop

0000000000020620 <mn_encode_word_index>:
   20620:	f3 0f 1e fa          	endbr64 
   20624:	85 d2                	test   %edx,%edx
   20626:	0f 88 d4 00 00 00    	js     20700 <mn_encode_word_index+0xe0>
   2062c:	41 54                	push   %r12
   2062e:	41 89 f4             	mov    %esi,%r12d
   20631:	55                   	push   %rbp
   20632:	48 89 fd             	mov    %rdi,%rbp
   20635:	89 f7                	mov    %esi,%edi
   20637:	53                   	push   %rbx
   20638:	89 d3                	mov    %edx,%ebx
   2063a:	e8 c1 ff ff ff       	callq  20600 <mn_words_required>
   2063f:	39 c3                	cmp    %eax,%ebx
   20641:	0f 8d a9 00 00 00    	jge    206f0 <mn_encode_word_index+0xd0>
   20647:	89 d8                	mov    %ebx,%eax
   20649:	ba 56 55 55 55       	mov    $0x55555556,%edx
   2064e:	44 89 e6             	mov    %r12d,%esi
   20651:	f7 ea                	imul   %edx
   20653:	89 d8                	mov    %ebx,%eax
   20655:	c1 f8 1f             	sar    $0x1f,%eax
   20658:	29 c2                	sub    %eax,%edx
   2065a:	c1 e2 02             	shl    $0x2,%edx
   2065d:	29 d6                	sub    %edx,%esi
   2065f:	85 f6                	test   %esi,%esi
   20661:	0f 8e 89 00 00 00    	jle    206f0 <mn_encode_word_index+0xd0>
   20667:	83 fe 04             	cmp    $0x4,%esi
   2066a:	b8 04 00 00 00       	mov    $0x4,%eax
   2066f:	48 63 d2             	movslq %edx,%rdx
   20672:	0f 4e c6             	cmovle %esi,%eax
   20675:	45 31 c0             	xor    %r8d,%r8d
   20678:	45 31 d2             	xor    %r10d,%r10d
   2067b:	48 01 ea             	add    %rbp,%rdx
   2067e:	66 90                	xchg   %ax,%ax
   20680:	46 0f b6 0c 02       	movzbl (%rdx,%r8,1),%r9d
   20685:	42 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%ecx
   2068c:	00 
   2068d:	49 83 c0 01          	add    $0x1,%r8
   20691:	49 d3 e1             	shl    %cl,%r9
   20694:	4d 09 ca             	or     %r9,%r10
   20697:	44 39 c0             	cmp    %r8d,%eax
   2069a:	7f e4                	jg     20680 <mn_encode_word_index+0x60>
   2069c:	89 d8                	mov    %ebx,%eax
   2069e:	ba 56 55 55 55       	mov    $0x55555556,%edx
   206a3:	f7 ea                	imul   %edx
   206a5:	89 d8                	mov    %ebx,%eax
   206a7:	c1 f8 1f             	sar    $0x1f,%eax
   206aa:	29 c2                	sub    %eax,%edx
   206ac:	8d 04 52             	lea    (%rdx,%rdx,2),%eax
   206af:	29 c3                	sub    %eax,%ebx
   206b1:	83 fb 01             	cmp    $0x1,%ebx
   206b4:	74 7a                	je     20730 <mn_encode_word_index+0x110>
   206b6:	b9 01 00 00 00       	mov    $0x1,%ecx
   206bb:	83 fb 02             	cmp    $0x2,%ebx
   206be:	74 48                	je     20708 <mn_encode_word_index+0xe8>
   206c0:	48 ba a7 66 e2 95 34 	movabs $0xa1385d3495e266a7,%rdx
   206c7:	5d 38 a1 
   206ca:	4c 89 d0             	mov    %r10,%rax
   206cd:	5b                   	pop    %rbx
   206ce:	5d                   	pop    %rbp
   206cf:	48 f7 e2             	mul    %rdx
   206d2:	41 5c                	pop    %r12
   206d4:	48 c1 ea 0a          	shr    $0xa,%rdx
   206d8:	48 69 d2 5a 06 00 00 	imul   $0x65a,%rdx,%rdx
   206df:	49 29 d2             	sub    %rdx,%r10
   206e2:	42 8d 04 11          	lea    (%rcx,%r10,1),%eax
   206e6:	c3                   	retq   
   206e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   206ee:	00 00 
   206f0:	5b                   	pop    %rbx
   206f1:	31 c0                	xor    %eax,%eax
   206f3:	5d                   	pop    %rbp
   206f4:	41 5c                	pop    %r12
   206f6:	c3                   	retq   
   206f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   206fe:	00 00 
   20700:	31 c0                	xor    %eax,%eax
   20702:	c3                   	retq   
   20703:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20708:	83 fe 03             	cmp    $0x3,%esi
   2070b:	b8 5b 06 00 00       	mov    $0x65b,%eax
   20710:	48 ba bf bc 6b 28 8d 	movabs $0x32c3f8d286bbcbf,%rdx
   20717:	3f 2c 03 
   2071a:	0f 44 c8             	cmove  %eax,%ecx
   2071d:	49 c1 ea 02          	shr    $0x2,%r10
   20721:	4c 89 d0             	mov    %r10,%rax
   20724:	48 f7 e2             	mul    %rdx
   20727:	48 c1 ea 0d          	shr    $0xd,%rdx
   2072b:	49 89 d2             	mov    %rdx,%r10
   2072e:	eb 90                	jmp    206c0 <mn_encode_word_index+0xa0>
   20730:	4c 89 d0             	mov    %r10,%rax
   20733:	b9 01 00 00 00       	mov    $0x1,%ecx
   20738:	48 ba a7 66 e2 95 34 	movabs $0xa1385d3495e266a7,%rdx
   2073f:	5d 38 a1 
   20742:	48 f7 e2             	mul    %rdx
   20745:	48 c1 ea 0a          	shr    $0xa,%rdx
   20749:	49 89 d2             	mov    %rdx,%r10
   2074c:	e9 6f ff ff ff       	jmpq   206c0 <mn_encode_word_index+0xa0>

0000000000020751 <.annobin_mn_encode_word.start>:
   20751:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20758:	00 00 00 00 
   2075c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020760 <mn_encode_word>:
   20760:	f3 0f 1e fa          	endbr64 
   20764:	48 83 ec 08          	sub    $0x8,%rsp
   20768:	e8 b3 fe ff ff       	callq  20620 <mn_encode_word_index>
   2076d:	48 8d 15 0c 29 23 00 	lea    0x23290c(%rip),%rdx        # 253080 <mn_words>
   20774:	89 c0                	mov    %eax,%eax
   20776:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   2077a:	48 83 c4 08          	add    $0x8,%rsp
   2077e:	c3                   	retq   

000000000002077f <.annobin_mn_encode_word.end>:
   2077f:	90                   	nop

0000000000020780 <mn_next_word_index>:
   20780:	f3 0f 1e fa          	endbr64 
   20784:	41 57                	push   %r15
   20786:	41 56                	push   %r14
   20788:	41 55                	push   %r13
   2078a:	41 54                	push   %r12
   2078c:	55                   	push   %rbp
   2078d:	48 89 fd             	mov    %rdi,%rbp
   20790:	53                   	push   %rbx
   20791:	48 83 ec 38          	sub    $0x38,%rsp
   20795:	4c 8b 27             	mov    (%rdi),%r12
   20798:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2079f:	00 00 
   207a1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   207a6:	31 c0                	xor    %eax,%eax
   207a8:	49 0f be 1c 24       	movsbq (%r12),%rbx
   207ad:	84 db                	test   %bl,%bl
   207af:	0f 84 73 01 00 00    	je     20928 <mn_next_word_index+0x1a8>
   207b5:	e8 46 03 ff ff       	callq  10b00 <__ctype_b_loc@plt>
   207ba:	48 8b 38             	mov    (%rax),%rdi
   207bd:	eb 16                	jmp    207d5 <mn_next_word_index+0x55>
   207bf:	90                   	nop
   207c0:	49 83 c4 01          	add    $0x1,%r12
   207c4:	4c 89 65 00          	mov    %r12,0x0(%rbp)
   207c8:	49 0f be 1c 24       	movsbq (%r12),%rbx
   207cd:	84 db                	test   %bl,%bl
   207cf:	0f 84 53 01 00 00    	je     20928 <mn_next_word_index+0x1a8>
   207d5:	f6 44 5f 01 04       	testb  $0x4,0x1(%rdi,%rbx,2)
   207da:	74 e4                	je     207c0 <mn_next_word_index+0x40>
   207dc:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   207e0:	48 0f be 02          	movsbq (%rdx),%rax
   207e4:	84 c0                	test   %al,%al
   207e6:	0f 84 3c 01 00 00    	je     20928 <mn_next_word_index+0x1a8>
   207ec:	48 83 c2 01          	add    $0x1,%rdx
   207f0:	48 89 e6             	mov    %rsp,%rsi
   207f3:	31 c9                	xor    %ecx,%ecx
   207f5:	eb 3c                	jmp    20833 <mn_next_word_index+0xb3>
   207f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   207fe:	00 00 
   20800:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   20804:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
   20808:	44 8d 48 bf          	lea    -0x41(%rax),%r9d
   2080c:	44 8d 40 20          	lea    0x20(%rax),%r8d
   20810:	41 80 f9 1a          	cmp    $0x1a,%r9b
   20814:	41 0f 42 c0          	cmovb  %r8d,%eax
   20818:	83 c1 01             	add    $0x1,%ecx
   2081b:	48 83 c2 01          	add    $0x1,%rdx
   2081f:	48 83 c6 01          	add    $0x1,%rsi
   20823:	88 46 ff             	mov    %al,-0x1(%rsi)
   20826:	48 0f be 42 ff       	movsbq -0x1(%rdx),%rax
   2082b:	84 c0                	test   %al,%al
   2082d:	0f 84 fd 00 00 00    	je     20930 <mn_next_word_index+0x1b0>
   20833:	f6 44 47 01 04       	testb  $0x4,0x1(%rdi,%rax,2)
   20838:	74 05                	je     2083f <mn_next_word_index+0xbf>
   2083a:	83 f9 18             	cmp    $0x18,%ecx
   2083d:	75 c1                	jne    20800 <mn_next_word_index+0x80>
   2083f:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   20843:	48 63 c9             	movslq %ecx,%rcx
   20846:	49 0f be 5d 00       	movsbq 0x0(%r13),%rbx
   2084b:	c6 04 0c 00          	movb   $0x0,(%rsp,%rcx,1)
   2084f:	84 db                	test   %bl,%bl
   20851:	74 5d                	je     208b0 <mn_next_word_index+0x130>
   20853:	e8 a8 02 ff ff       	callq  10b00 <__ctype_b_loc@plt>
   20858:	48 8b 08             	mov    (%rax),%rcx
   2085b:	49 8d 45 01          	lea    0x1(%r13),%rax
   2085f:	eb 18                	jmp    20879 <mn_next_word_index+0xf9>
   20861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20868:	48 89 45 00          	mov    %rax,0x0(%rbp)
   2086c:	48 83 c0 01          	add    $0x1,%rax
   20870:	48 0f be 58 ff       	movsbq -0x1(%rax),%rbx
   20875:	84 db                	test   %bl,%bl
   20877:	74 37                	je     208b0 <mn_next_word_index+0x130>
   20879:	f6 44 59 01 04       	testb  $0x4,0x1(%rcx,%rbx,2)
   2087e:	75 e8                	jne    20868 <mn_next_word_index+0xe8>
   20880:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   20884:	48 0f be 02          	movsbq (%rdx),%rax
   20888:	84 c0                	test   %al,%al
   2088a:	74 24                	je     208b0 <mn_next_word_index+0x130>
   2088c:	48 83 c2 01          	add    $0x1,%rdx
   20890:	eb 17                	jmp    208a9 <mn_next_word_index+0x129>
   20892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20898:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   2089c:	48 83 c2 01          	add    $0x1,%rdx
   208a0:	48 0f be 42 ff       	movsbq -0x1(%rdx),%rax
   208a5:	84 c0                	test   %al,%al
   208a7:	74 07                	je     208b0 <mn_next_word_index+0x130>
   208a9:	f6 44 41 01 04       	testb  $0x4,0x1(%rcx,%rax,2)
   208ae:	74 e8                	je     20898 <mn_next_word_index+0x118>
   208b0:	45 31 ed             	xor    %r13d,%r13d
   208b3:	80 3c 24 00          	cmpb   $0x0,(%rsp)
   208b7:	74 37                	je     208f0 <mn_next_word_index+0x170>
   208b9:	bb 01 00 00 00       	mov    $0x1,%ebx
   208be:	49 89 e7             	mov    %rsp,%r15
   208c1:	4c 8d 35 b8 27 23 00 	lea    0x2327b8(%rip),%r14        # 253080 <mn_words>
   208c8:	eb 13                	jmp    208dd <mn_next_word_index+0x15d>
   208ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   208d0:	48 83 c3 01          	add    $0x1,%rbx
   208d4:	48 81 fb 62 06 00 00 	cmp    $0x662,%rbx
   208db:	74 3b                	je     20918 <mn_next_word_index+0x198>
   208dd:	49 8b 34 de          	mov    (%r14,%rbx,8),%rsi
   208e1:	4c 89 ff             	mov    %r15,%rdi
   208e4:	41 89 dd             	mov    %ebx,%r13d
   208e7:	e8 34 f9 fe ff       	callq  10220 <strcmp@plt>
   208ec:	85 c0                	test   %eax,%eax
   208ee:	75 e0                	jne    208d0 <mn_next_word_index+0x150>
   208f0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   208f5:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   208fc:	00 00 
   208fe:	44 89 e8             	mov    %r13d,%eax
   20901:	75 39                	jne    2093c <mn_next_word_index+0x1bc>
   20903:	48 83 c4 38          	add    $0x38,%rsp
   20907:	5b                   	pop    %rbx
   20908:	5d                   	pop    %rbp
   20909:	41 5c                	pop    %r12
   2090b:	41 5d                	pop    %r13
   2090d:	41 5e                	pop    %r14
   2090f:	41 5f                	pop    %r15
   20911:	c3                   	retq   
   20912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20918:	4c 89 65 00          	mov    %r12,0x0(%rbp)
   2091c:	45 31 ed             	xor    %r13d,%r13d
   2091f:	eb cf                	jmp    208f0 <mn_next_word_index+0x170>
   20921:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20928:	31 c9                	xor    %ecx,%ecx
   2092a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20930:	48 63 c9             	movslq %ecx,%rcx
   20933:	c6 04 0c 00          	movb   $0x0,(%rsp,%rcx,1)
   20937:	e9 74 ff ff ff       	jmpq   208b0 <mn_next_word_index+0x130>
   2093c:	e8 0f f5 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000020941 <.annobin_mn_decode_word_index.start>:
   20941:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20948:	00 00 00 00 
   2094c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020950 <mn_decode_word_index>:
   20950:	f3 0f 1e fa          	endbr64 
   20954:	8b 01                	mov    (%rcx),%eax
   20956:	85 c0                	test   %eax,%eax
   20958:	0f 88 6a 01 00 00    	js     20ac8 <mn_decode_word_index+0x178>
   2095e:	55                   	push   %rbp
   2095f:	53                   	push   %rbx
   20960:	48 89 cb             	mov    %rcx,%rbx
   20963:	81 ff 61 06 00 00    	cmp    $0x661,%edi
   20969:	0f 87 0a 02 00 00    	ja     20b79 <mn_decode_word_index+0x229>
   2096f:	39 d0                	cmp    %edx,%eax
   20971:	0f 8f f2 01 00 00    	jg     20b69 <mn_decode_word_index+0x219>
   20977:	81 ff 5a 06 00 00    	cmp    $0x65a,%edi
   2097d:	0f 87 95 00 00 00    	ja     20a18 <mn_decode_word_index+0xc8>
   20983:	41 89 c2             	mov    %eax,%r10d
   20986:	45 31 c0             	xor    %r8d,%r8d
   20989:	45 31 c9             	xor    %r9d,%r9d
   2098c:	41 83 e2 fc          	and    $0xfffffffc,%r10d
   20990:	49 63 ea             	movslq %r10d,%rbp
   20993:	48 01 f5             	add    %rsi,%rbp
   20996:	43 8d 0c 02          	lea    (%r10,%r8,1),%ecx
   2099a:	39 ca                	cmp    %ecx,%edx
   2099c:	7e 14                	jle    209b2 <mn_decode_word_index+0x62>
   2099e:	46 0f b6 5c 05 00    	movzbl 0x0(%rbp,%r8,1),%r11d
   209a4:	42 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%ecx
   209ab:	00 
   209ac:	49 d3 e3             	shl    %cl,%r11
   209af:	4d 09 d9             	or     %r11,%r9
   209b2:	49 83 c0 01          	add    $0x1,%r8
   209b6:	49 83 f8 04          	cmp    $0x4,%r8
   209ba:	75 da                	jne    20996 <mn_decode_word_index+0x46>
   209bc:	85 ff                	test   %edi,%edi
   209be:	0f 84 84 00 00 00    	je     20a48 <mn_decode_word_index+0xf8>
   209c4:	39 d0                	cmp    %edx,%eax
   209c6:	0f 84 9d 01 00 00    	je     20b69 <mn_decode_word_index+0x219>
   209cc:	41 89 c0             	mov    %eax,%r8d
   209cf:	83 ef 01             	sub    $0x1,%edi
   209d2:	41 c1 f8 1f          	sar    $0x1f,%r8d
   209d6:	41 c1 e8 1e          	shr    $0x1e,%r8d
   209da:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
   209de:	83 e1 03             	and    $0x3,%ecx
   209e1:	44 29 c1             	sub    %r8d,%ecx
   209e4:	83 f9 01             	cmp    $0x1,%ecx
   209e7:	0f 84 1b 01 00 00    	je     20b08 <mn_decode_word_index+0x1b8>
   209ed:	0f 8e 8d 00 00 00    	jle    20a80 <mn_decode_word_index+0x130>
   209f3:	83 f9 02             	cmp    $0x2,%ecx
   209f6:	0f 84 d4 00 00 00    	je     20ad0 <mn_decode_word_index+0x180>
   209fc:	83 f9 03             	cmp    $0x3,%ecx
   209ff:	0f 85 8b 00 00 00    	jne    20a90 <mn_decode_word_index+0x140>
   20a05:	c7 03 fd ff ff ff    	movl   $0xfffffffd,(%rbx)
   20a0b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   20a10:	eb 6a                	jmp    20a7c <mn_decode_word_index+0x12c>
   20a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20a18:	41 89 c0             	mov    %eax,%r8d
   20a1b:	41 c1 f8 1f          	sar    $0x1f,%r8d
   20a1f:	41 c1 e8 1e          	shr    $0x1e,%r8d
   20a23:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
   20a27:	83 e1 03             	and    $0x3,%ecx
   20a2a:	44 29 c1             	sub    %r8d,%ecx
   20a2d:	83 f9 02             	cmp    $0x2,%ecx
   20a30:	0f 84 4d ff ff ff    	je     20983 <mn_decode_word_index+0x33>
   20a36:	c7 03 fb ff ff ff    	movl   $0xfffffffb,(%rbx)
   20a3c:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   20a41:	eb 39                	jmp    20a7c <mn_decode_word_index+0x12c>
   20a43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20a48:	41 89 c0             	mov    %eax,%r8d
   20a4b:	41 c1 f8 1f          	sar    $0x1f,%r8d
   20a4f:	41 c1 e8 1e          	shr    $0x1e,%r8d
   20a53:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
   20a57:	83 e1 03             	and    $0x3,%ecx
   20a5a:	44 29 c1             	sub    %r8d,%ecx
   20a5d:	83 f9 01             	cmp    $0x1,%ecx
   20a60:	0f 84 da 00 00 00    	je     20b40 <mn_decode_word_index+0x1f0>
   20a66:	7e 50                	jle    20ab8 <mn_decode_word_index+0x168>
   20a68:	83 f9 02             	cmp    $0x2,%ecx
   20a6b:	0f 84 af 00 00 00    	je     20b20 <mn_decode_word_index+0x1d0>
   20a71:	83 f9 03             	cmp    $0x3,%ecx
   20a74:	0f 85 4a ff ff ff    	jne    209c4 <mn_decode_word_index+0x74>
   20a7a:	31 c0                	xor    %eax,%eax
   20a7c:	5b                   	pop    %rbx
   20a7d:	5d                   	pop    %rbp
   20a7e:	c3                   	retq   
   20a7f:	90                   	nop
   20a80:	85 c9                	test   %ecx,%ecx
   20a82:	75 0c                	jne    20a90 <mn_decode_word_index+0x140>
   20a84:	83 c0 01             	add    $0x1,%eax
   20a87:	41 89 f9             	mov    %edi,%r9d
   20a8a:	89 03                	mov    %eax,(%rbx)
   20a8c:	0f 1f 40 00          	nopl   0x0(%rax)
   20a90:	49 63 ca             	movslq %r10d,%rcx
   20a93:	31 c0                	xor    %eax,%eax
   20a95:	48 01 ce             	add    %rcx,%rsi
   20a98:	41 8d 0c 02          	lea    (%r10,%rax,1),%ecx
   20a9c:	39 ca                	cmp    %ecx,%edx
   20a9e:	7e 08                	jle    20aa8 <mn_decode_word_index+0x158>
   20aa0:	44 88 0c 06          	mov    %r9b,(%rsi,%rax,1)
   20aa4:	49 c1 e9 08          	shr    $0x8,%r9
   20aa8:	48 83 c0 01          	add    $0x1,%rax
   20aac:	48 83 f8 04          	cmp    $0x4,%rax
   20ab0:	75 e6                	jne    20a98 <mn_decode_word_index+0x148>
   20ab2:	eb c6                	jmp    20a7a <mn_decode_word_index+0x12a>
   20ab4:	0f 1f 40 00          	nopl   0x0(%rax)
   20ab8:	85 c9                	test   %ecx,%ecx
   20aba:	74 be                	je     20a7a <mn_decode_word_index+0x12a>
   20abc:	e9 03 ff ff ff       	jmpq   209c4 <mn_decode_word_index+0x74>
   20ac1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20ac8:	c3                   	retq   
   20ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20ad0:	81 ff 59 06 00 00    	cmp    $0x659,%edi
   20ad6:	77 78                	ja     20b50 <mn_decode_word_index+0x200>
   20ad8:	0f 84 ab 00 00 00    	je     20b89 <mn_decode_word_index+0x239>
   20ade:	81 ff 58 06 00 00    	cmp    $0x658,%edi
   20ae4:	75 0d                	jne    20af3 <mn_decode_word_index+0x1a3>
   20ae6:	49 81 f9 9f 07 14 00 	cmp    $0x14079f,%r9
   20aed:	0f 87 96 00 00 00    	ja     20b89 <mn_decode_word_index+0x239>
   20af3:	69 cf a4 57 28 00    	imul   $0x2857a4,%edi,%ecx
   20af9:	83 c0 02             	add    $0x2,%eax
   20afc:	89 03                	mov    %eax,(%rbx)
   20afe:	49 01 c9             	add    %rcx,%r9
   20b01:	eb 8d                	jmp    20a90 <mn_decode_word_index+0x140>
   20b03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20b08:	69 ff 5a 06 00 00    	imul   $0x65a,%edi,%edi
   20b0e:	83 c0 01             	add    $0x1,%eax
   20b11:	89 03                	mov    %eax,(%rbx)
   20b13:	49 01 f9             	add    %rdi,%r9
   20b16:	e9 75 ff ff ff       	jmpq   20a90 <mn_decode_word_index+0x140>
   20b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20b20:	49 81 f9 ff ff 00 00 	cmp    $0xffff,%r9
   20b27:	0f 86 4d ff ff ff    	jbe    20a7a <mn_decode_word_index+0x12a>
   20b2d:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   20b33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20b38:	e9 3f ff ff ff       	jmpq   20a7c <mn_decode_word_index+0x12c>
   20b3d:	0f 1f 00             	nopl   (%rax)
   20b40:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
   20b47:	0f 86 2d ff ff ff    	jbe    20a7a <mn_decode_word_index+0x12a>
   20b4d:	eb de                	jmp    20b2d <mn_decode_word_index+0x1dd>
   20b4f:	90                   	nop
   20b50:	69 cf a4 57 28 00    	imul   $0x2857a4,%edi,%ecx
   20b56:	83 c0 01             	add    $0x1,%eax
   20b59:	89 03                	mov    %eax,(%rbx)
   20b5b:	81 e9 a8 a7 3c 00    	sub    $0x3ca7a8,%ecx
   20b61:	49 01 c9             	add    %rcx,%r9
   20b64:	e9 27 ff ff ff       	jmpq   20a90 <mn_decode_word_index+0x140>
   20b69:	c7 03 fe ff ff ff    	movl   $0xfffffffe,(%rbx)
   20b6f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   20b74:	e9 03 ff ff ff       	jmpq   20a7c <mn_decode_word_index+0x12c>
   20b79:	c7 01 fc ff ff ff    	movl   $0xfffffffc,(%rcx)
   20b7f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   20b84:	e9 f3 fe ff ff       	jmpq   20a7c <mn_decode_word_index+0x12c>
   20b89:	c7 03 fa ff ff ff    	movl   $0xfffffffa,(%rbx)
   20b8f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   20b94:	e9 e3 fe ff ff       	jmpq   20a7c <mn_decode_word_index+0x12c>

0000000000020b99 <.annobin_mn_decode_word_index.end>:
   20b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020ba0 <mn_encode>:
   20ba0:	f3 0f 1e fa          	endbr64 
   20ba4:	41 57                	push   %r15
   20ba6:	48 63 c9             	movslq %ecx,%rcx
   20ba9:	41 56                	push   %r14
   20bab:	4c 8d 3c 0a          	lea    (%rdx,%rcx,1),%r15
   20baf:	41 55                	push   %r13
   20bb1:	41 54                	push   %r12
   20bb3:	55                   	push   %rbp
   20bb4:	53                   	push   %rbx
   20bb5:	48 89 d3             	mov    %rdx,%rbx
   20bb8:	48 83 ec 28          	sub    $0x28,%rsp
   20bbc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   20bc1:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   20bc5:	4d 85 c0             	test   %r8,%r8
   20bc8:	0f 84 1f 02 00 00    	je     20ded <mn_encode+0x24d>
   20bce:	41 80 38 00          	cmpb   $0x0,(%r8)
   20bd2:	48 8d 05 ba e7 01 00 	lea    0x1e7ba(%rip),%rax        # 3f393 <__PRETTY_FUNCTION__.5787+0x23>
   20bd9:	49 0f 45 c0          	cmovne %r8,%rax
   20bdd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20be2:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   20be6:	45 31 e4             	xor    %r12d,%r12d
   20be9:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   20bee:	e8 0d fa ff ff       	callq  20600 <mn_words_required>
   20bf3:	41 39 c4             	cmp    %eax,%r12d
   20bf6:	0f 8d 71 01 00 00    	jge    20d6d <mn_encode+0x1cd>
   20bfc:	0f 1f 40 00          	nopl   0x0(%rax)
   20c00:	4c 39 fb             	cmp    %r15,%rbx
   20c03:	0f 83 97 01 00 00    	jae    20da0 <mn_encode+0x200>
   20c09:	e8 f2 fe fe ff       	callq  10b00 <__ctype_b_loc@plt>
   20c0e:	44 0f b6 6d 00       	movzbl 0x0(%rbp),%r13d
   20c13:	49 89 c6             	mov    %rax,%r14
   20c16:	45 84 ed             	test   %r13b,%r13b
   20c19:	0f 84 99 01 00 00    	je     20db8 <mn_encode+0x218>
   20c1f:	4c 89 ff             	mov    %r15,%rdi
   20c22:	48 29 df             	sub    %rbx,%rdi
   20c25:	48 01 ef             	add    %rbp,%rdi
   20c28:	eb 29                	jmp    20c53 <mn_encode+0xb3>
   20c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20c30:	48 83 c3 01          	add    $0x1,%rbx
   20c34:	48 83 c5 01          	add    $0x1,%rbp
   20c38:	44 88 6b ff          	mov    %r13b,-0x1(%rbx)
   20c3c:	48 39 fd             	cmp    %rdi,%rbp
   20c3f:	0f 84 5b 01 00 00    	je     20da0 <mn_encode+0x200>
   20c45:	44 0f b6 6d 00       	movzbl 0x0(%rbp),%r13d
   20c4a:	45 84 ed             	test   %r13b,%r13b
   20c4d:	0f 84 65 01 00 00    	je     20db8 <mn_encode+0x218>
   20c53:	49 8b 36             	mov    (%r14),%rsi
   20c56:	49 0f be c5          	movsbq %r13b,%rax
   20c5a:	f6 44 46 01 04       	testb  $0x4,0x1(%rsi,%rax,2)
   20c5f:	74 cf                	je     20c30 <mn_encode+0x90>
   20c61:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   20c65:	0f 85 8c 00 00 00    	jne    20cf7 <mn_encode+0x157>
   20c6b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   20c70:	48 0f be 11          	movsbq (%rcx),%rdx
   20c74:	0f b7 3c 56          	movzwl (%rsi,%rdx,2),%edi
   20c78:	48 89 d0             	mov    %rdx,%rax
   20c7b:	48 0f be 55 ff       	movsbq -0x1(%rbp),%rdx
   20c80:	66 81 e7 00 04       	and    $0x400,%di
   20c85:	f6 44 56 01 04       	testb  $0x4,0x1(%rsi,%rdx,2)
   20c8a:	0f 85 30 01 00 00    	jne    20dc0 <mn_encode+0x220>
   20c90:	49 39 df             	cmp    %rbx,%r15
   20c93:	0f 86 65 01 00 00    	jbe    20dfe <mn_encode+0x25e>
   20c99:	84 c0                	test   %al,%al
   20c9b:	0f 84 5d 01 00 00    	je     20dfe <mn_encode+0x25e>
   20ca1:	48 89 ca             	mov    %rcx,%rdx
   20ca4:	48 89 cd             	mov    %rcx,%rbp
   20ca7:	66 85 ff             	test   %di,%di
   20caa:	74 21                	je     20ccd <mn_encode+0x12d>
   20cac:	eb 49                	jmp    20cf7 <mn_encode+0x157>
   20cae:	66 90                	xchg   %ax,%ax
   20cb0:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
   20cb4:	49 8b 36             	mov    (%r14),%rsi
   20cb7:	84 c0                	test   %al,%al
   20cb9:	0f 84 21 01 00 00    	je     20de0 <mn_encode+0x240>
   20cbf:	48 0f be f8          	movsbq %al,%rdi
   20cc3:	48 89 ea             	mov    %rbp,%rdx
   20cc6:	f6 44 7e 01 04       	testb  $0x4,0x1(%rsi,%rdi,2)
   20ccb:	75 2a                	jne    20cf7 <mn_encode+0x157>
   20ccd:	48 83 c3 01          	add    $0x1,%rbx
   20cd1:	48 8d 6a 01          	lea    0x1(%rdx),%rbp
   20cd5:	88 43 ff             	mov    %al,-0x1(%rbx)
   20cd8:	49 39 df             	cmp    %rbx,%r15
   20cdb:	77 d3                	ja     20cb0 <mn_encode+0x110>
   20cdd:	48 0f be 52 01       	movsbq 0x1(%rdx),%rdx
   20ce2:	49 8b 06             	mov    (%r14),%rax
   20ce5:	0f b7 3c 50          	movzwl (%rax,%rdx,2),%edi
   20ce9:	66 81 e7 00 04       	and    $0x400,%di
   20cee:	66 85 ff             	test   %di,%di
   20cf1:	0f 84 11 01 00 00    	je     20e08 <mn_encode+0x268>
   20cf7:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   20cfb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   20d00:	44 89 e2             	mov    %r12d,%edx
   20d03:	e8 58 fa ff ff       	callq  20760 <mn_encode_word>
   20d08:	48 85 c0             	test   %rax,%rax
   20d0b:	0f 84 8f 00 00 00    	je     20da0 <mn_encode+0x200>
   20d11:	49 8b 36             	mov    (%r14),%rsi
   20d14:	eb 0e                	jmp    20d24 <mn_encode+0x184>
   20d16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20d1d:	00 00 00 
   20d20:	48 83 c5 01          	add    $0x1,%rbp
   20d24:	48 0f be 55 00       	movsbq 0x0(%rbp),%rdx
   20d29:	f6 44 56 01 04       	testb  $0x4,0x1(%rsi,%rdx,2)
   20d2e:	75 f0                	jne    20d20 <mn_encode+0x180>
   20d30:	4c 39 fb             	cmp    %r15,%rbx
   20d33:	72 1b                	jb     20d50 <mn_encode+0x1b0>
   20d35:	eb 20                	jmp    20d57 <mn_encode+0x1b7>
   20d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   20d3e:	00 00 
   20d40:	48 83 c3 01          	add    $0x1,%rbx
   20d44:	48 83 c0 01          	add    $0x1,%rax
   20d48:	88 53 ff             	mov    %dl,-0x1(%rbx)
   20d4b:	49 39 df             	cmp    %rbx,%r15
   20d4e:	74 40                	je     20d90 <mn_encode+0x1f0>
   20d50:	0f b6 10             	movzbl (%rax),%edx
   20d53:	84 d2                	test   %dl,%dl
   20d55:	75 e9                	jne    20d40 <mn_encode+0x1a0>
   20d57:	41 83 c4 01          	add    $0x1,%r12d
   20d5b:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
   20d5f:	e8 9c f8 ff ff       	callq  20600 <mn_words_required>
   20d64:	41 39 c4             	cmp    %eax,%r12d
   20d67:	0f 8c 93 fe ff ff    	jl     20c00 <mn_encode+0x60>
   20d6d:	4c 39 fb             	cmp    %r15,%rbx
   20d70:	73 2e                	jae    20da0 <mn_encode+0x200>
   20d72:	c6 03 00             	movb   $0x0,(%rbx)
   20d75:	48 83 c4 28          	add    $0x28,%rsp
   20d79:	31 c0                	xor    %eax,%eax
   20d7b:	5b                   	pop    %rbx
   20d7c:	5d                   	pop    %rbp
   20d7d:	41 5c                	pop    %r12
   20d7f:	41 5d                	pop    %r13
   20d81:	41 5e                	pop    %r14
   20d83:	41 5f                	pop    %r15
   20d85:	c3                   	retq   
   20d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20d8d:	00 00 00 
   20d90:	4c 89 fb             	mov    %r15,%rbx
   20d93:	41 83 c4 01          	add    $0x1,%r12d
   20d97:	eb c2                	jmp    20d5b <mn_encode+0x1bb>
   20d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20da0:	48 83 c4 28          	add    $0x28,%rsp
   20da4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   20da9:	5b                   	pop    %rbx
   20daa:	5d                   	pop    %rbp
   20dab:	41 5c                	pop    %r12
   20dad:	41 5d                	pop    %r13
   20daf:	41 5e                	pop    %r14
   20db1:	41 5f                	pop    %r15
   20db3:	c3                   	retq   
   20db4:	0f 1f 40 00          	nopl   0x0(%rax)
   20db8:	49 8b 36             	mov    (%r14),%rsi
   20dbb:	e9 ab fe ff ff       	jmpq   20c6b <mn_encode+0xcb>
   20dc0:	66 85 ff             	test   %di,%di
   20dc3:	75 43                	jne    20e08 <mn_encode+0x268>
   20dc5:	49 39 df             	cmp    %rbx,%r15
   20dc8:	76 3e                	jbe    20e08 <mn_encode+0x268>
   20dca:	84 c0                	test   %al,%al
   20dcc:	74 3a                	je     20e08 <mn_encode+0x268>
   20dce:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   20dd3:	e9 f5 fe ff ff       	jmpq   20ccd <mn_encode+0x12d>
   20dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20ddf:	00 
   20de0:	0f b7 3e             	movzwl (%rsi),%edi
   20de3:	66 81 e7 00 04       	and    $0x400,%di
   20de8:	e9 01 ff ff ff       	jmpq   20cee <mn_encode+0x14e>
   20ded:	48 8d 05 9f e5 01 00 	lea    0x1e59f(%rip),%rax        # 3f393 <__PRETTY_FUNCTION__.5787+0x23>
   20df4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20df9:	e9 e4 fd ff ff       	jmpq   20be2 <mn_encode+0x42>
   20dfe:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   20e03:	e9 e6 fe ff ff       	jmpq   20cee <mn_encode+0x14e>
   20e08:	48 83 c4 28          	add    $0x28,%rsp
   20e0c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   20e11:	5b                   	pop    %rbx
   20e12:	5d                   	pop    %rbp
   20e13:	41 5c                	pop    %r12
   20e15:	41 5d                	pop    %r13
   20e17:	41 5e                	pop    %r14
   20e19:	41 5f                	pop    %r15
   20e1b:	c3                   	retq   

0000000000020e1c <.annobin_mn_decode.start>:
   20e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020e20 <mn_decode>:
   20e20:	f3 0f 1e fa          	endbr64 
   20e24:	41 55                	push   %r13
   20e26:	41 54                	push   %r12
   20e28:	55                   	push   %rbp
   20e29:	89 d5                	mov    %edx,%ebp
   20e2b:	53                   	push   %rbx
   20e2c:	48 89 f3             	mov    %rsi,%rbx
   20e2f:	48 83 ec 28          	sub    $0x28,%rsp
   20e33:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20e38:	4c 8d 64 24 14       	lea    0x14(%rsp),%r12
   20e3d:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   20e42:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20e49:	00 00 
   20e4b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20e50:	31 c0                	xor    %eax,%eax
   20e52:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   20e59:	00 
   20e5a:	eb 0b                	jmp    20e67 <mn_decode+0x47>
   20e5c:	0f 1f 40 00          	nopl   0x0(%rax)
   20e60:	89 c7                	mov    %eax,%edi
   20e62:	e8 e9 fa ff ff       	callq  20950 <mn_decode_word_index>
   20e67:	4c 89 ef             	mov    %r13,%rdi
   20e6a:	e8 11 f9 ff ff       	callq  20780 <mn_next_word_index>
   20e6f:	4c 89 e1             	mov    %r12,%rcx
   20e72:	89 ea                	mov    %ebp,%edx
   20e74:	48 89 de             	mov    %rbx,%rsi
   20e77:	85 c0                	test   %eax,%eax
   20e79:	75 e5                	jne    20e60 <mn_decode+0x40>
   20e7b:	31 ff                	xor    %edi,%edi
   20e7d:	e8 ce fa ff ff       	callq  20950 <mn_decode_word_index>
   20e82:	8b 44 24 14          	mov    0x14(%rsp),%eax
   20e86:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   20e8b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   20e92:	00 00 
   20e94:	75 0b                	jne    20ea1 <mn_decode+0x81>
   20e96:	48 83 c4 28          	add    $0x28,%rsp
   20e9a:	5b                   	pop    %rbx
   20e9b:	5d                   	pop    %rbp
   20e9c:	41 5c                	pop    %r12
   20e9e:	41 5d                	pop    %r13
   20ea0:	c3                   	retq   
   20ea1:	e8 aa ef fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000020ea6 <.annobin_mn_decode.end>:
   20ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20ead:	00 00 00 

0000000000020eb0 <monotime_since>:
   20eb0:	f3 0f 1e fa          	endbr64 
   20eb4:	55                   	push   %rbp
   20eb5:	48 89 fd             	mov    %rdi,%rbp
   20eb8:	bf 01 00 00 00       	mov    $0x1,%edi
   20ebd:	53                   	push   %rbx
   20ebe:	48 89 f3             	mov    %rsi,%rbx
   20ec1:	48 83 ec 28          	sub    $0x28,%rsp
   20ec5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20ecc:	00 00 
   20ece:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20ed3:	31 c0                	xor    %eax,%eax
   20ed5:	48 89 e6             	mov    %rsp,%rsi
   20ed8:	e8 03 ee fe ff       	callq  fce0 <clock_gettime@plt>
   20edd:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20ee2:	48 8b 04 24          	mov    (%rsp),%rax
   20ee6:	48 89 ca             	mov    %rcx,%rdx
   20ee9:	48 29 e8             	sub    %rbp,%rax
   20eec:	48 29 da             	sub    %rbx,%rdx
   20eef:	79 0e                	jns    20eff <monotime_since+0x4f>
   20ef1:	48 8d 91 00 ca 9a 3b 	lea    0x3b9aca00(%rcx),%rdx
   20ef8:	48 83 e8 01          	sub    $0x1,%rax
   20efc:	48 29 da             	sub    %rbx,%rdx
   20eff:	66 0f ef c0          	pxor   %xmm0,%xmm0
   20f03:	66 0f ef c9          	pxor   %xmm1,%xmm1
   20f07:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   20f0c:	f2 0f 59 05 bc e5 01 	mulsd  0x1e5bc(%rip),%xmm0        # 3f4d0 <f58_prefix+0x6d>
   20f13:	00 
   20f14:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   20f19:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   20f20:	00 00 
   20f22:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
   20f27:	f2 0f 5e 0d 89 10 02 	divsd  0x21089(%rip),%xmm1        # 41fb8 <f58_prefix+0x2b55>
   20f2e:	00 
   20f2f:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   20f33:	75 07                	jne    20f3c <monotime_since+0x8c>
   20f35:	48 83 c4 28          	add    $0x28,%rsp
   20f39:	5b                   	pop    %rbx
   20f3a:	5d                   	pop    %rbp
   20f3b:	c3                   	retq   
   20f3c:	e8 0f ef fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000020f41 <.annobin_monotime.start>:
   20f41:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20f48:	00 00 00 00 
   20f4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020f50 <monotime>:
   20f50:	f3 0f 1e fa          	endbr64 
   20f54:	48 89 fe             	mov    %rdi,%rsi
   20f57:	bf 01 00 00 00       	mov    $0x1,%edi
   20f5c:	e9 7f ed fe ff       	jmpq   fce0 <clock_gettime@plt>

0000000000020f61 <.annobin_monotime.end>:
   20f61:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   20f68:	00 00 00 00 
   20f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020f70 <monotime_isset>:
   20f70:	f3 0f 1e fa          	endbr64 
   20f74:	48 09 f7             	or     %rsi,%rdi
   20f77:	0f 95 c0             	setne  %al
   20f7a:	c3                   	retq   

0000000000020f7b <.annobin_monotime.c_end>:
   20f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000020f80 <popen2_child_close_fd>:
   20f80:	f3 0f 1e fa          	endbr64 
   20f84:	83 fe 02             	cmp    $0x2,%esi
   20f87:	76 05                	jbe    20f8e <popen2_child_close_fd+0xe>
   20f89:	3b 77 18             	cmp    0x18(%rdi),%esi
   20f8c:	75 02                	jne    20f90 <popen2_child_close_fd+0x10>
   20f8e:	c3                   	retq   
   20f8f:	90                   	nop
   20f90:	89 f7                	mov    %esi,%edi
   20f92:	e9 19 f1 fe ff       	jmpq   100b0 <close@plt>

0000000000020f97 <.annobin_popen2_child_close_fd.end>:
   20f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   20f9e:	00 00 

0000000000020fa0 <popen2_get_fd>:
   20fa0:	f3 0f 1e fa          	endbr64 
   20fa4:	48 85 ff             	test   %rdi,%rdi
   20fa7:	74 04                	je     20fad <popen2_get_fd+0xd>
   20fa9:	8b 47 04             	mov    0x4(%rdi),%eax
   20fac:	c3                   	retq   
   20fad:	48 83 ec 08          	sub    $0x8,%rsp
   20fb1:	e8 5a eb fe ff       	callq  fb10 <__errno_location@plt>
   20fb6:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   20fbc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20fc1:	48 83 c4 08          	add    $0x8,%rsp
   20fc5:	c3                   	retq   

0000000000020fc6 <.annobin_popen2_get_fd.end>:
   20fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20fcd:	00 00 00 

0000000000020fd0 <popen2_get_stderr_fd>:
   20fd0:	f3 0f 1e fa          	endbr64 
   20fd4:	48 85 ff             	test   %rdi,%rdi
   20fd7:	74 04                	je     20fdd <popen2_get_stderr_fd+0xd>
   20fd9:	8b 47 0c             	mov    0xc(%rdi),%eax
   20fdc:	c3                   	retq   
   20fdd:	48 83 ec 08          	sub    $0x8,%rsp
   20fe1:	e8 2a eb fe ff       	callq  fb10 <__errno_location@plt>
   20fe6:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   20fec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20ff1:	48 83 c4 08          	add    $0x8,%rsp
   20ff5:	c3                   	retq   

0000000000020ff6 <.annobin_pclose2.start>:
   20ff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20ffd:	00 00 00 

0000000000021000 <pclose2>:
   21000:	f3 0f 1e fa          	endbr64 
   21004:	41 54                	push   %r12
   21006:	55                   	push   %rbp
   21007:	31 ed                	xor    %ebp,%ebp
   21009:	53                   	push   %rbx
   2100a:	48 83 ec 10          	sub    $0x10,%rsp
   2100e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21015:	00 00 
   21017:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2101c:	31 c0                	xor    %eax,%eax
   2101e:	48 85 ff             	test   %rdi,%rdi
   21021:	74 75                	je     21098 <pclose2+0x98>
   21023:	44 8b 67 04          	mov    0x4(%rdi),%r12d
   21027:	48 89 fb             	mov    %rdi,%rbx
   2102a:	45 85 e4             	test   %r12d,%r12d
   2102d:	0f 85 8d 00 00 00    	jne    210c0 <pclose2+0xc0>
   21033:	8b 7f 1c             	mov    0x1c(%rdi),%edi
   21036:	85 ff                	test   %edi,%edi
   21038:	0f 85 ea 00 00 00    	jne    21128 <pclose2+0x128>
   2103e:	89 fd                	mov    %edi,%ebp
   21040:	41 89 fc             	mov    %edi,%r12d
   21043:	e8 68 f0 fe ff       	callq  100b0 <close@plt>
   21048:	85 c0                	test   %eax,%eax
   2104a:	0f 88 b2 00 00 00    	js     21102 <pclose2+0x102>
   21050:	8b 7b 08             	mov    0x8(%rbx),%edi
   21053:	85 ff                	test   %edi,%edi
   21055:	0f 89 9a 00 00 00    	jns    210f5 <pclose2+0xf5>
   2105b:	8b 7b 0c             	mov    0xc(%rbx),%edi
   2105e:	85 ff                	test   %edi,%edi
   21060:	0f 89 4a 01 00 00    	jns    211b0 <pclose2+0x1b0>
   21066:	8b 7b 10             	mov    0x10(%rbx),%edi
   21069:	85 ff                	test   %edi,%edi
   2106b:	0f 89 57 01 00 00    	jns    211c8 <pclose2+0x1c8>
   21071:	8b 7b 14             	mov    0x14(%rbx),%edi
   21074:	85 ff                	test   %edi,%edi
   21076:	0f 89 e4 00 00 00    	jns    21160 <pclose2+0x160>
   2107c:	8b 7b 18             	mov    0x18(%rbx),%edi
   2107f:	85 ff                	test   %edi,%edi
   21081:	0f 89 e9 00 00 00    	jns    21170 <pclose2+0x170>
   21087:	48 89 df             	mov    %rbx,%rdi
   2108a:	e8 21 ea fe ff       	callq  fab0 <free@plt>
   2108f:	83 fd ff             	cmp    $0xffffffff,%ebp
   21092:	0f 84 42 01 00 00    	je     211da <pclose2+0x1da>
   21098:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2109d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   210a4:	00 00 
   210a6:	89 e8                	mov    %ebp,%eax
   210a8:	0f 85 39 01 00 00    	jne    211e7 <pclose2+0x1e7>
   210ae:	48 83 c4 10          	add    $0x10,%rsp
   210b2:	5b                   	pop    %rbx
   210b3:	5d                   	pop    %rbp
   210b4:	41 5c                	pop    %r12
   210b6:	c3                   	retq   
   210b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   210be:	00 00 
   210c0:	44 89 e7             	mov    %r12d,%edi
   210c3:	be 01 00 00 00       	mov    $0x1,%esi
   210c8:	45 31 e4             	xor    %r12d,%r12d
   210cb:	e8 f0 ec fe ff       	callq  fdc0 <shutdown@plt>
   210d0:	85 c0                	test   %eax,%eax
   210d2:	0f 88 c0 00 00 00    	js     21198 <pclose2+0x198>
   210d8:	8b 7b 1c             	mov    0x1c(%rbx),%edi
   210db:	85 ff                	test   %edi,%edi
   210dd:	75 49                	jne    21128 <pclose2+0x128>
   210df:	8b 7b 04             	mov    0x4(%rbx),%edi
   210e2:	85 ff                	test   %edi,%edi
   210e4:	0f 89 59 ff ff ff    	jns    21043 <pclose2+0x43>
   210ea:	8b 7b 08             	mov    0x8(%rbx),%edi
   210ed:	85 ff                	test   %edi,%edi
   210ef:	0f 88 66 ff ff ff    	js     2105b <pclose2+0x5b>
   210f5:	e8 b6 ef fe ff       	callq  100b0 <close@plt>
   210fa:	85 c0                	test   %eax,%eax
   210fc:	0f 89 59 ff ff ff    	jns    2105b <pclose2+0x5b>
   21102:	e8 09 ea fe ff       	callq  fb10 <__errno_location@plt>
   21107:	48 89 df             	mov    %rbx,%rdi
   2110a:	48 89 c5             	mov    %rax,%rbp
   2110d:	44 8b 20             	mov    (%rax),%r12d
   21110:	e8 9b e9 fe ff       	callq  fab0 <free@plt>
   21115:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   21119:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   2111e:	e9 75 ff ff ff       	jmpq   21098 <pclose2+0x98>
   21123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21128:	31 d2                	xor    %edx,%edx
   2112a:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   2112f:	e8 ec f5 fe ff       	callq  10720 <waitpid@plt>
   21134:	85 c0                	test   %eax,%eax
   21136:	78 48                	js     21180 <pclose2+0x180>
   21138:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   2113c:	8b 7b 04             	mov    0x4(%rbx),%edi
   2113f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   21144:	89 e8                	mov    %ebp,%eax
   21146:	83 e0 7f             	and    $0x7f,%eax
   21149:	b8 05 00 00 00       	mov    $0x5,%eax
   2114e:	0f 45 ea             	cmovne %edx,%ebp
   21151:	44 0f 45 e0          	cmovne %eax,%r12d
   21155:	85 ff                	test   %edi,%edi
   21157:	78 91                	js     210ea <pclose2+0xea>
   21159:	e9 e5 fe ff ff       	jmpq   21043 <pclose2+0x43>
   2115e:	66 90                	xchg   %ax,%ax
   21160:	e8 4b ef fe ff       	callq  100b0 <close@plt>
   21165:	85 c0                	test   %eax,%eax
   21167:	0f 89 0f ff ff ff    	jns    2107c <pclose2+0x7c>
   2116d:	eb 93                	jmp    21102 <pclose2+0x102>
   2116f:	90                   	nop
   21170:	e8 3b ef fe ff       	callq  100b0 <close@plt>
   21175:	85 c0                	test   %eax,%eax
   21177:	0f 89 0a ff ff ff    	jns    21087 <pclose2+0x87>
   2117d:	eb 83                	jmp    21102 <pclose2+0x102>
   2117f:	90                   	nop
   21180:	e8 8b e9 fe ff       	callq  fb10 <__errno_location@plt>
   21185:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   2118a:	44 8b 20             	mov    (%rax),%r12d
   2118d:	e9 4d ff ff ff       	jmpq   210df <pclose2+0xdf>
   21192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   21198:	e8 73 e9 fe ff       	callq  fb10 <__errno_location@plt>
   2119d:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   211a2:	44 8b 20             	mov    (%rax),%r12d
   211a5:	e9 2e ff ff ff       	jmpq   210d8 <pclose2+0xd8>
   211aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   211b0:	e8 fb ee fe ff       	callq  100b0 <close@plt>
   211b5:	85 c0                	test   %eax,%eax
   211b7:	0f 88 45 ff ff ff    	js     21102 <pclose2+0x102>
   211bd:	8b 7b 10             	mov    0x10(%rbx),%edi
   211c0:	85 ff                	test   %edi,%edi
   211c2:	0f 88 a9 fe ff ff    	js     21071 <pclose2+0x71>
   211c8:	e8 e3 ee fe ff       	callq  100b0 <close@plt>
   211cd:	85 c0                	test   %eax,%eax
   211cf:	0f 89 9c fe ff ff    	jns    21071 <pclose2+0x71>
   211d5:	e9 28 ff ff ff       	jmpq   21102 <pclose2+0x102>
   211da:	e8 31 e9 fe ff       	callq  fb10 <__errno_location@plt>
   211df:	48 89 c5             	mov    %rax,%rbp
   211e2:	e9 2e ff ff ff       	jmpq   21115 <pclose2+0x115>
   211e7:	e8 64 ec fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000211ec <.annobin_pclose2.end>:
   211ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000211f0 <popen2>:
   211f0:	f3 0f 1e fa          	endbr64 
   211f4:	41 56                	push   %r14
   211f6:	41 55                	push   %r13
   211f8:	41 54                	push   %r12
   211fa:	55                   	push   %rbp
   211fb:	89 d5                	mov    %edx,%ebp
   211fd:	53                   	push   %rbx
   211fe:	83 e5 01             	and    $0x1,%ebp
   21201:	48 83 ec 10          	sub    $0x10,%rsp
   21205:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2120c:	00 00 
   2120e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21213:	31 c0                	xor    %eax,%eax
   21215:	39 d5                	cmp    %edx,%ebp
   21217:	0f 85 63 01 00 00    	jne    21380 <popen2+0x190>
   2121d:	49 89 fc             	mov    %rdi,%r12
   21220:	49 89 f5             	mov    %rsi,%r13
   21223:	bf 01 00 00 00       	mov    $0x1,%edi
   21228:	be 20 00 00 00       	mov    $0x20,%esi
   2122d:	e8 de ef fe ff       	callq  10210 <calloc@plt>
   21232:	48 89 c3             	mov    %rax,%rbx
   21235:	48 85 c0             	test   %rax,%rax
   21238:	0f 84 52 01 00 00    	je     21390 <popen2+0x1a0>
   2123e:	89 28                	mov    %ebp,(%rax)
   21240:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   21247:	31 d2                	xor    %edx,%edx
   21249:	48 8d 4b 04          	lea    0x4(%rbx),%rcx
   2124d:	48 89 43 04          	mov    %rax,0x4(%rbx)
   21251:	be 01 00 00 00       	mov    $0x1,%esi
   21256:	bf 01 00 00 00       	mov    $0x1,%edi
   2125b:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   2125f:	48 89 43 14          	mov    %rax,0x14(%rbx)
   21263:	e8 c8 f0 fe ff       	callq  10330 <socketpair@plt>
   21268:	85 c0                	test   %eax,%eax
   2126a:	0f 88 d0 00 00 00    	js     21340 <popen2+0x150>
   21270:	8b 7b 04             	mov    0x4(%rbx),%edi
   21273:	e8 a8 af ff ff       	callq  1c220 <fd_set_cloexec>
   21278:	85 c0                	test   %eax,%eax
   2127a:	0f 88 c0 00 00 00    	js     21340 <popen2+0x150>
   21280:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
   21284:	be 00 00 08 00       	mov    $0x80000,%esi
   21289:	e8 62 f6 fe ff       	callq  108f0 <pipe2@plt>
   2128e:	85 c0                	test   %eax,%eax
   21290:	0f 88 aa 00 00 00    	js     21340 <popen2+0x150>
   21296:	f6 03 01             	testb  $0x1,(%rbx)
   21299:	74 16                	je     212b1 <popen2+0xc1>
   2129b:	48 8d 7b 0c          	lea    0xc(%rbx),%rdi
   2129f:	be 00 00 08 00       	mov    $0x80000,%esi
   212a4:	e8 47 f6 fe ff       	callq  108f0 <pipe2@plt>
   212a9:	85 c0                	test   %eax,%eax
   212ab:	0f 88 8f 00 00 00    	js     21340 <popen2+0x150>
   212b1:	be 01 00 00 00       	mov    $0x1,%esi
   212b6:	bf 0d 00 00 00       	mov    $0xd,%edi
   212bb:	e8 80 ef fe ff       	callq  10240 <signal@plt>
   212c0:	e8 db f7 fe ff       	callq  10aa0 <fork@plt>
   212c5:	89 43 1c             	mov    %eax,0x1c(%rbx)
   212c8:	83 f8 ff             	cmp    $0xffffffff,%eax
   212cb:	74 73                	je     21340 <popen2+0x150>
   212cd:	85 c0                	test   %eax,%eax
   212cf:	0f 84 fd 00 00 00    	je     213d2 <popen2+0x1e2>
   212d5:	8b 7b 08             	mov    0x8(%rbx),%edi
   212d8:	e8 d3 ed fe ff       	callq  100b0 <close@plt>
   212dd:	8b 7b 10             	mov    0x10(%rbx),%edi
   212e0:	e8 cb ed fe ff       	callq  100b0 <close@plt>
   212e5:	8b 7b 18             	mov    0x18(%rbx),%edi
   212e8:	e8 c3 ed fe ff       	callq  100b0 <close@plt>
   212ed:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
  return __glibc_fortify (read, __nbytes, sizeof (char),
   212f4:	8b 7b 14             	mov    0x14(%rbx),%edi
   212f7:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   212fc:	c7 43 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rbx)
   21303:	ba 04 00 00 00       	mov    $0x4,%edx
   21308:	c7 43 18 ff ff ff ff 	movl   $0xffffffff,0x18(%rbx)
   2130f:	e8 6c ee fe ff       	callq  10180 <read@plt>
   21314:	83 f8 04             	cmp    $0x4,%eax
   21317:	0f 84 8b 00 00 00    	je     213a8 <popen2+0x1b8>
   2131d:	85 c0                	test   %eax,%eax
   2131f:	78 1f                	js     21340 <popen2+0x150>
   21321:	0f 85 91 00 00 00    	jne    213b8 <popen2+0x1c8>
   21327:	8b 7b 14             	mov    0x14(%rbx),%edi
   2132a:	e8 81 ed fe ff       	callq  100b0 <close@plt>
   2132f:	c7 43 14 ff ff ff ff 	movl   $0xffffffff,0x14(%rbx)
   21336:	eb 27                	jmp    2135f <popen2+0x16f>
   21338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2133f:	00 
   21340:	e8 cb e7 fe ff       	callq  fb10 <__errno_location@plt>
   21345:	48 89 c5             	mov    %rax,%rbp
   21348:	8b 00                	mov    (%rax),%eax
   2134a:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2134e:	48 89 df             	mov    %rbx,%rdi
   21351:	31 db                	xor    %ebx,%ebx
   21353:	e8 a8 fc ff ff       	callq  21000 <pclose2>
   21358:	8b 44 24 04          	mov    0x4(%rsp),%eax
   2135c:	89 45 00             	mov    %eax,0x0(%rbp)
   2135f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   21364:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2136b:	00 00 
   2136d:	48 89 d8             	mov    %rbx,%rax
   21370:	75 5b                	jne    213cd <popen2+0x1dd>
   21372:	48 83 c4 10          	add    $0x10,%rsp
   21376:	5b                   	pop    %rbx
   21377:	5d                   	pop    %rbp
   21378:	41 5c                	pop    %r12
   2137a:	41 5d                	pop    %r13
   2137c:	41 5e                	pop    %r14
   2137e:	c3                   	retq   
   2137f:	90                   	nop
   21380:	e8 8b e7 fe ff       	callq  fb10 <__errno_location@plt>
   21385:	31 db                	xor    %ebx,%ebx
   21387:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2138d:	eb d0                	jmp    2135f <popen2+0x16f>
   2138f:	90                   	nop
   21390:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%rsp)
   21397:	00 
   21398:	e8 73 e7 fe ff       	callq  fb10 <__errno_location@plt>
   2139d:	48 89 c5             	mov    %rax,%rbp
   213a0:	eb ac                	jmp    2134e <popen2+0x15e>
   213a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   213a8:	e8 63 e7 fe ff       	callq  fb10 <__errno_location@plt>
   213ad:	48 89 c5             	mov    %rax,%rbp
   213b0:	eb 9c                	jmp    2134e <popen2+0x15e>
   213b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   213b8:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%rsp)
   213bf:	00 
   213c0:	e8 4b e7 fe ff       	callq  fb10 <__errno_location@plt>
   213c5:	48 89 c5             	mov    %rax,%rbp
   213c8:	e9 81 ff ff ff       	jmpq   2134e <popen2+0x15e>
   213cd:	e8 7e ea fe ff       	callq  fe50 <__stack_chk_fail@plt>
   213d2:	8b 7b 08             	mov    0x8(%rbx),%edi
   213d5:	31 f6                	xor    %esi,%esi
   213d7:	8b 6b 10             	mov    0x10(%rbx),%ebp
   213da:	e8 c1 ea fe ff       	callq  fea0 <dup2@plt>
   213df:	85 c0                	test   %eax,%eax
   213e1:	0f 88 8c 00 00 00    	js     21473 <popen2+0x283>
   213e7:	8b 7b 08             	mov    0x8(%rbx),%edi
   213ea:	be 01 00 00 00       	mov    $0x1,%esi
   213ef:	e8 ac ea fe ff       	callq  fea0 <dup2@plt>
   213f4:	85 c0                	test   %eax,%eax
   213f6:	78 7b                	js     21473 <popen2+0x283>
   213f8:	85 ed                	test   %ebp,%ebp
   213fa:	78 10                	js     2140c <popen2+0x21c>
   213fc:	be 02 00 00 00       	mov    $0x2,%esi
   21401:	89 ef                	mov    %ebp,%edi
   21403:	e8 98 ea fe ff       	callq  fea0 <dup2@plt>
   21408:	85 c0                	test   %eax,%eax
   2140a:	78 67                	js     21473 <popen2+0x283>
   2140c:	8b 7b 08             	mov    0x8(%rbx),%edi
   2140f:	e8 9c ec fe ff       	callq  100b0 <close@plt>
   21414:	8b 7b 10             	mov    0x10(%rbx),%edi
   21417:	e8 94 ec fe ff       	callq  100b0 <close@plt>
   2141c:	48 89 de             	mov    %rbx,%rsi
   2141f:	48 8d 3d 5a fb ff ff 	lea    -0x4a6(%rip),%rdi        # 20f80 <popen2_child_close_fd>
   21426:	e8 e5 ae ff ff       	callq  1c310 <fdwalk>
   2142b:	41 89 c6             	mov    %eax,%r14d
   2142e:	e8 dd e6 fe ff       	callq  fb10 <__errno_location@plt>
   21433:	48 89 c5             	mov    %rax,%rbp
   21436:	45 85 f6             	test   %r14d,%r14d
   21439:	75 0b                	jne    21446 <popen2+0x256>
   2143b:	4c 89 ee             	mov    %r13,%rsi
   2143e:	4c 89 e7             	mov    %r12,%rdi
   21441:	e8 2a f4 fe ff       	callq  10870 <execvp@plt>
   21446:	8b 45 00             	mov    0x0(%rbp),%eax
   21449:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2144d:	8b 7b 18             	mov    0x18(%rbx),%edi
   21450:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   21455:	ba 04 00 00 00       	mov    $0x4,%edx
   2145a:	e8 a1 e8 fe ff       	callq  fd00 <write@plt>
   2145f:	48 85 c0             	test   %rax,%rax
   21462:	78 1c                	js     21480 <popen2+0x290>
   21464:	8b 7b 18             	mov    0x18(%rbx),%edi
   21467:	e8 44 ec fe ff       	callq  100b0 <close@plt>
   2146c:	31 ff                	xor    %edi,%edi
   2146e:	e8 9d f4 fe ff       	callq  10910 <exit@plt>
   21473:	e8 98 e6 fe ff       	callq  fb10 <__errno_location@plt>
   21478:	8b 00                	mov    (%rax),%eax
   2147a:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2147e:	eb cd                	jmp    2144d <popen2+0x25d>
   21480:	e8 8b e6 fe ff       	callq  fb10 <__errno_location@plt>
   21485:	8b 38                	mov    (%rax),%edi
   21487:	e8 44 f5 fe ff       	callq  109d0 <strerror@plt>
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   2148c:	48 8d 15 2d 0b 02 00 	lea    0x20b2d(%rip),%rdx        # 41fc0 <f58_prefix+0x2b5d>
   21493:	be 01 00 00 00       	mov    $0x1,%esi
   21498:	48 89 c1             	mov    %rax,%rcx
   2149b:	48 8b 05 46 1b 23 00 	mov    0x231b46(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   214a2:	48 8b 38             	mov    (%rax),%rdi
   214a5:	31 c0                	xor    %eax,%eax
   214a7:	e8 b4 f4 fe ff       	callq  10960 <__fprintf_chk@plt>
   214ac:	eb b6                	jmp    21464 <popen2+0x274>

00000000000214ae <.annobin_popen2.c_end>:
   214ae:	66 90                	xchg   %ax,%ax

00000000000214b0 <write_all>:
   214b0:	f3 0f 1e fa          	endbr64 
   214b4:	41 55                	push   %r13
   214b6:	41 54                	push   %r12
   214b8:	55                   	push   %rbp
   214b9:	53                   	push   %rbx
   214ba:	48 83 ec 08          	sub    $0x8,%rsp
   214be:	85 ff                	test   %edi,%edi
   214c0:	78 53                	js     21515 <write_all+0x65>
   214c2:	89 fd                	mov    %edi,%ebp
   214c4:	49 89 f4             	mov    %rsi,%r12
   214c7:	49 89 d5             	mov    %rdx,%r13
   214ca:	48 85 f6             	test   %rsi,%rsi
   214cd:	75 05                	jne    214d4 <write_all+0x24>
   214cf:	48 85 d2             	test   %rdx,%rdx
   214d2:	75 41                	jne    21515 <write_all+0x65>
   214d4:	31 db                	xor    %ebx,%ebx
   214d6:	31 f6                	xor    %esi,%esi
   214d8:	4d 85 ed             	test   %r13,%r13
   214db:	75 0e                	jne    214eb <write_all+0x3b>
   214dd:	eb 28                	jmp    21507 <write_all+0x57>
   214df:	90                   	nop
   214e0:	48 01 c3             	add    %rax,%rbx
   214e3:	48 89 de             	mov    %rbx,%rsi
   214e6:	4c 39 eb             	cmp    %r13,%rbx
   214e9:	73 1c                	jae    21507 <write_all+0x57>
   214eb:	4c 89 ea             	mov    %r13,%rdx
   214ee:	89 ef                	mov    %ebp,%edi
   214f0:	48 29 f2             	sub    %rsi,%rdx
   214f3:	4c 01 e6             	add    %r12,%rsi
   214f6:	e8 05 e8 fe ff       	callq  fd00 <write@plt>
   214fb:	48 85 c0             	test   %rax,%rax
   214fe:	79 e0                	jns    214e0 <write_all+0x30>
   21500:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   21507:	48 83 c4 08          	add    $0x8,%rsp
   2150b:	48 89 d8             	mov    %rbx,%rax
   2150e:	5b                   	pop    %rbx
   2150f:	5d                   	pop    %rbp
   21510:	41 5c                	pop    %r12
   21512:	41 5d                	pop    %r13
   21514:	c3                   	retq   
   21515:	e8 f6 e5 fe ff       	callq  fb10 <__errno_location@plt>
   2151a:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   21521:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   21527:	eb de                	jmp    21507 <write_all+0x57>

0000000000021529 <.annobin_read_all.start>:
   21529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021530 <read_all>:
   21530:	f3 0f 1e fa          	endbr64 
   21534:	41 56                	push   %r14
   21536:	41 55                	push   %r13
   21538:	41 54                	push   %r12
   2153a:	55                   	push   %rbp
   2153b:	53                   	push   %rbx
   2153c:	85 ff                	test   %edi,%edi
   2153e:	0f 88 98 00 00 00    	js     215dc <read_all+0xac>
   21544:	49 89 f6             	mov    %rsi,%r14
   21547:	48 85 f6             	test   %rsi,%rsi
   2154a:	0f 84 8c 00 00 00    	je     215dc <read_all+0xac>
   21550:	41 89 fd             	mov    %edi,%r13d
   21553:	31 db                	xor    %ebx,%ebx
   21555:	45 31 e4             	xor    %r12d,%r12d
   21558:	31 ed                	xor    %ebp,%ebp
   2155a:	eb 23                	jmp    2157f <read_all+0x4f>
   2155c:	0f 1f 40 00          	nopl   0x0(%rax)
   21560:	48 89 ea             	mov    %rbp,%rdx
   21563:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
   21567:	44 89 ef             	mov    %r13d,%edi
   2156a:	48 29 da             	sub    %rbx,%rdx
   2156d:	e8 0e ec fe ff       	callq  10180 <read@plt>
   21572:	48 85 c0             	test   %rax,%rax
   21575:	78 31                	js     215a8 <read_all+0x78>
   21577:	48 01 c3             	add    %rax,%rbx
   2157a:	48 85 c0             	test   %rax,%rax
   2157d:	74 49                	je     215c8 <read_all+0x98>
   2157f:	48 39 eb             	cmp    %rbp,%rbx
   21582:	75 dc                	jne    21560 <read_all+0x30>
   21584:	48 8d b3 01 10 00 00 	lea    0x1001(%rbx),%rsi
   2158b:	4c 89 e7             	mov    %r12,%rdi
   2158e:	48 8d ab 00 10 00 00 	lea    0x1000(%rbx),%rbp
   21595:	e8 36 f0 fe ff       	callq  105d0 <realloc@plt>
   2159a:	48 85 c0             	test   %rax,%rax
   2159d:	74 09                	je     215a8 <read_all+0x78>
   2159f:	49 89 c4             	mov    %rax,%r12
   215a2:	eb bc                	jmp    21560 <read_all+0x30>
   215a4:	0f 1f 40 00          	nopl   0x0(%rax)
   215a8:	4c 89 e7             	mov    %r12,%rdi
   215ab:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   215b2:	e8 f9 e4 fe ff       	callq  fab0 <free@plt>
   215b7:	48 89 d8             	mov    %rbx,%rax
   215ba:	5b                   	pop    %rbx
   215bb:	5d                   	pop    %rbp
   215bc:	41 5c                	pop    %r12
   215be:	41 5d                	pop    %r13
   215c0:	41 5e                	pop    %r14
   215c2:	c3                   	retq   
   215c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   215c8:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
   215cd:	48 89 d8             	mov    %rbx,%rax
   215d0:	4d 89 26             	mov    %r12,(%r14)
   215d3:	5b                   	pop    %rbx
   215d4:	5d                   	pop    %rbp
   215d5:	41 5c                	pop    %r12
   215d7:	41 5d                	pop    %r13
   215d9:	41 5e                	pop    %r14
   215db:	c3                   	retq   
   215dc:	e8 2f e5 fe ff       	callq  fb10 <__errno_location@plt>
   215e1:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   215e8:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   215ee:	eb c7                	jmp    215b7 <read_all+0x87>

00000000000215f0 <setenvf>:
   215f0:	f3 0f 1e fa          	endbr64 
   215f4:	55                   	push   %rbp
   215f5:	89 f5                	mov    %esi,%ebp
   215f7:	53                   	push   %rbx
   215f8:	48 89 fb             	mov    %rdi,%rbx
   215fb:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
   21602:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   21607:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   2160c:	4c 89 4c 24 68       	mov    %r9,0x68(%rsp)
   21611:	84 c0                	test   %al,%al
   21613:	74 3d                	je     21652 <setenvf+0x62>
   21615:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   2161a:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   21621:	00 
   21622:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   21629:	00 
   2162a:	0f 29 9c 24 a0 00 00 	movaps %xmm3,0xa0(%rsp)
   21631:	00 
   21632:	0f 29 a4 24 b0 00 00 	movaps %xmm4,0xb0(%rsp)
   21639:	00 
   2163a:	0f 29 ac 24 c0 00 00 	movaps %xmm5,0xc0(%rsp)
   21641:	00 
   21642:	0f 29 b4 24 d0 00 00 	movaps %xmm6,0xd0(%rsp)
   21649:	00 
   2164a:	0f 29 bc 24 e0 00 00 	movaps %xmm7,0xe0(%rsp)
   21651:	00 
   21652:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21659:	00 00 
   2165b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   21660:	31 c0                	xor    %eax,%eax
  return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
   21662:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   21667:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2166c:	be 01 00 00 00       	mov    $0x1,%esi
   21671:	48 8d 84 24 10 01 00 	lea    0x110(%rsp),%rax
   21678:	00 
   21679:	c7 44 24 20 18 00 00 	movl   $0x18,0x20(%rsp)
   21680:	00 
   21681:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   21686:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   2168b:	c7 44 24 24 30 00 00 	movl   $0x30,0x24(%rsp)
   21692:	00 
   21693:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   21698:	e8 f3 ed fe ff       	callq  10490 <__vasprintf_chk@plt>
   2169d:	85 c0                	test   %eax,%eax
   2169f:	78 21                	js     216c2 <setenvf+0xd2>
   216a1:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   216a6:	89 ea                	mov    %ebp,%edx
   216a8:	48 89 df             	mov    %rbx,%rdi
   216ab:	e8 40 e6 fe ff       	callq  fcf0 <setenv@plt>
   216b0:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   216b5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   216b9:	e8 f2 e3 fe ff       	callq  fab0 <free@plt>
   216be:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   216c2:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   216c7:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   216ce:	00 00 
   216d0:	75 0a                	jne    216dc <setenvf+0xec>
   216d2:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
   216d9:	5b                   	pop    %rbx
   216da:	5d                   	pop    %rbp
   216db:	c3                   	retq   
   216dc:	e8 6f e7 fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000216e1 <.annobin_setenvf.c_end>:
   216e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   216e8:	00 00 00 
   216eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000216f0 <SHA1_Transform>:
   216f0:	f3 0f 1e fa          	endbr64 
   216f4:	41 57                	push   %r15
   216f6:	41 56                	push   %r14
   216f8:	41 55                	push   %r13
   216fa:	41 54                	push   %r12
   216fc:	55                   	push   %rbp
   216fd:	53                   	push   %rbx
   216fe:	8b 5f 08             	mov    0x8(%rdi),%ebx
   21701:	44 8b 5f 0c          	mov    0xc(%rdi),%r11d
   21705:	8b 0e                	mov    (%rsi),%ecx
   21707:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   2170b:	44 8b 6e 10          	mov    0x10(%rsi),%r13d
   2170f:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   21714:	44 8b 76 20          	mov    0x20(%rsi),%r14d
   21718:	0f c9                	bswap  %ecx
   2171a:	89 4c 24 a8          	mov    %ecx,-0x58(%rsp)
   2171e:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   21723:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   21728:	89 de                	mov    %ebx,%esi
   2172a:	0f 29 05 af 5d 23 00 	movaps %xmm0,0x235daf(%rip)        # 2574e0 <workspace.3602>
   21731:	44 8b 7f 04          	mov    0x4(%rdi),%r15d
   21735:	8b 17                	mov    (%rdi),%edx
   21737:	44 31 de             	xor    %r11d,%esi
   2173a:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
   2173f:	44 8b 47 10          	mov    0x10(%rdi),%r8d
   21743:	89 f0                	mov    %esi,%eax
   21745:	44 89 5c 24 e8       	mov    %r11d,-0x18(%rsp)
   2174a:	41 0f cd             	bswap  %r13d
   2174d:	89 d6                	mov    %edx,%esi
   2174f:	44 21 f8             	and    %r15d,%eax
   21752:	c1 c2 05             	rol    $0x5,%edx
   21755:	44 89 7c 24 e0       	mov    %r15d,-0x20(%rsp)
   2175a:	44 31 d8             	xor    %r11d,%eax
   2175d:	41 8d 94 10 99 79 82 	lea    0x5a827999(%r8,%rdx,1),%edx
   21764:	5a 
   21765:	44 89 44 24 ec       	mov    %r8d,-0x14(%rsp)
   2176a:	44 8b 05 77 5d 23 00 	mov    0x235d77(%rip),%r8d        # 2574e8 <workspace.3602+0x8>
   21771:	01 d0                	add    %edx,%eax
   21773:	8b 15 6b 5d 23 00    	mov    0x235d6b(%rip),%edx        # 2574e4 <workspace.3602+0x4>
   21779:	89 74 24 dc          	mov    %esi,-0x24(%rsp)
   2177d:	41 0f ce             	bswap  %r14d
   21780:	01 c8                	add    %ecx,%eax
   21782:	44 89 f9             	mov    %r15d,%ecx
   21785:	41 0f c8             	bswap  %r8d
   21788:	0f 29 1d 81 5d 23 00 	movaps %xmm3,0x235d81(%rip)        # 257510 <workspace.3602+0x30>
   2178f:	c1 c9 02             	ror    $0x2,%ecx
   21792:	0f ca                	bswap  %edx
   21794:	89 d5                	mov    %edx,%ebp
   21796:	89 da                	mov    %ebx,%edx
   21798:	31 ca                	xor    %ecx,%edx
   2179a:	89 cf                	mov    %ecx,%edi
   2179c:	44 8b 15 6d 5d 23 00 	mov    0x235d6d(%rip),%r10d        # 257510 <workspace.3602+0x30>
   217a3:	89 5c 24 e4          	mov    %ebx,-0x1c(%rsp)
   217a7:	21 f2                	and    %esi,%edx
   217a9:	0f 29 0d 40 5d 23 00 	movaps %xmm1,0x235d40(%rip)        # 2574f0 <workspace.3602+0x10>
   217b0:	31 da                	xor    %ebx,%edx
   217b2:	0f 29 15 47 5d 23 00 	movaps %xmm2,0x235d47(%rip)        # 257500 <workspace.3602+0x20>
   217b9:	41 0f ca             	bswap  %r10d
   217bc:	45 8d 8c 13 99 79 82 	lea    0x5a827999(%r11,%rdx,1),%r9d
   217c3:	5a 
   217c4:	89 c2                	mov    %eax,%edx
   217c6:	41 01 e9             	add    %ebp,%r9d
   217c9:	c1 c2 05             	rol    $0x5,%edx
   217cc:	41 01 d1             	add    %edx,%r9d
   217cf:	89 f2                	mov    %esi,%edx
   217d1:	41 8d b4 18 99 79 82 	lea    0x5a827999(%r8,%rbx,1),%esi
   217d8:	5a 
   217d9:	8b 1d 0d 5d 23 00    	mov    0x235d0d(%rip),%ebx        # 2574ec <workspace.3602+0xc>
   217df:	c1 ca 02             	ror    $0x2,%edx
   217e2:	45 89 cc             	mov    %r9d,%r12d
   217e5:	44 89 54 24 c4       	mov    %r10d,-0x3c(%rsp)
   217ea:	31 d7                	xor    %edx,%edi
   217ec:	41 c1 c4 05          	rol    $0x5,%r12d
   217f0:	21 c7                	and    %eax,%edi
   217f2:	c1 c8 02             	ror    $0x2,%eax
   217f5:	31 cf                	xor    %ecx,%edi
   217f7:	01 f7                	add    %esi,%edi
   217f9:	89 d6                	mov    %edx,%esi
   217fb:	31 c6                	xor    %eax,%esi
   217fd:	44 01 e7             	add    %r12d,%edi
   21800:	41 89 dc             	mov    %ebx,%r12d
   21803:	44 21 ce             	and    %r9d,%esi
   21806:	41 0f cc             	bswap  %r12d
   21809:	41 89 ff             	mov    %edi,%r15d
   2180c:	41 c1 c9 02          	ror    $0x2,%r9d
   21810:	31 d6                	xor    %edx,%esi
   21812:	41 8d 8c 0c 99 79 82 	lea    0x5a827999(%r12,%rcx,1),%ecx
   21819:	5a 
   2181a:	41 c1 c7 05          	rol    $0x5,%r15d
   2181e:	41 8d 94 15 99 79 82 	lea    0x5a827999(%r13,%rdx,1),%edx
   21825:	5a 
   21826:	01 ce                	add    %ecx,%esi
   21828:	44 01 fe             	add    %r15d,%esi
   2182b:	41 89 c7             	mov    %eax,%r15d
   2182e:	45 31 cf             	xor    %r9d,%r15d
   21831:	44 89 f9             	mov    %r15d,%ecx
   21834:	44 8b 3d b9 5c 23 00 	mov    0x235cb9(%rip),%r15d        # 2574f4 <workspace.3602+0x14>
   2183b:	21 f9                	and    %edi,%ecx
   2183d:	31 c1                	xor    %eax,%ecx
   2183f:	41 0f cf             	bswap  %r15d
   21842:	41 8d 84 07 99 79 82 	lea    0x5a827999(%r15,%rax,1),%eax
   21849:	5a 
   2184a:	01 d1                	add    %edx,%ecx
   2184c:	89 f2                	mov    %esi,%edx
   2184e:	c1 c2 05             	rol    $0x5,%edx
   21851:	c1 cf 02             	ror    $0x2,%edi
   21854:	01 d1                	add    %edx,%ecx
   21856:	44 89 ca             	mov    %r9d,%edx
   21859:	31 fa                	xor    %edi,%edx
   2185b:	21 f2                	and    %esi,%edx
   2185d:	c1 ce 02             	ror    $0x2,%esi
   21860:	44 31 ca             	xor    %r9d,%edx
   21863:	01 c2                	add    %eax,%edx
   21865:	89 c8                	mov    %ecx,%eax
   21867:	c1 c0 05             	rol    $0x5,%eax
   2186a:	01 c2                	add    %eax,%edx
   2186c:	8b 05 86 5c 23 00    	mov    0x235c86(%rip),%eax        # 2574f8 <workspace.3602+0x18>
   21872:	41 89 c3             	mov    %eax,%r11d
   21875:	89 f8                	mov    %edi,%eax
   21877:	31 f0                	xor    %esi,%eax
   21879:	41 0f cb             	bswap  %r11d
   2187c:	47 8d 8c 0b 99 79 82 	lea    0x5a827999(%r11,%r9,1),%r9d
   21883:	5a 
   21884:	44 89 5c 24 b4       	mov    %r11d,-0x4c(%rsp)
   21889:	21 c8                	and    %ecx,%eax
   2188b:	c1 c9 02             	ror    $0x2,%ecx
   2188e:	31 f8                	xor    %edi,%eax
   21890:	44 01 c8             	add    %r9d,%eax
   21893:	41 89 d1             	mov    %edx,%r9d
   21896:	41 c1 c1 05          	rol    $0x5,%r9d
   2189a:	44 01 c8             	add    %r9d,%eax
   2189d:	44 8b 0d 58 5c 23 00 	mov    0x235c58(%rip),%r9d        # 2574fc <workspace.3602+0x1c>
   218a4:	41 0f c9             	bswap  %r9d
   218a7:	45 89 cb             	mov    %r9d,%r11d
   218aa:	41 89 f1             	mov    %esi,%r9d
   218ad:	41 31 c9             	xor    %ecx,%r9d
   218b0:	41 8d bc 3b 99 79 82 	lea    0x5a827999(%r11,%rdi,1),%edi
   218b7:	5a 
   218b8:	44 89 5c 24 b8       	mov    %r11d,-0x48(%rsp)
   218bd:	41 21 d1             	and    %edx,%r9d
   218c0:	c1 ca 02             	ror    $0x2,%edx
   218c3:	41 31 f1             	xor    %esi,%r9d
   218c6:	41 8d b4 36 99 79 82 	lea    0x5a827999(%r14,%rsi,1),%esi
   218cd:	5a 
   218ce:	41 01 f9             	add    %edi,%r9d
   218d1:	89 c7                	mov    %eax,%edi
   218d3:	c1 c7 05             	rol    $0x5,%edi
   218d6:	41 01 f9             	add    %edi,%r9d
   218d9:	89 cf                	mov    %ecx,%edi
   218db:	31 d7                	xor    %edx,%edi
   218dd:	21 c7                	and    %eax,%edi
   218df:	c1 c8 02             	ror    $0x2,%eax
   218e2:	31 cf                	xor    %ecx,%edi
   218e4:	01 f7                	add    %esi,%edi
   218e6:	44 89 ce             	mov    %r9d,%esi
   218e9:	c1 c6 05             	rol    $0x5,%esi
   218ec:	01 f7                	add    %esi,%edi
   218ee:	8b 35 10 5c 23 00    	mov    0x235c10(%rip),%esi        # 257504 <workspace.3602+0x24>
   218f4:	41 89 f3             	mov    %esi,%r11d
   218f7:	89 d6                	mov    %edx,%esi
   218f9:	31 c6                	xor    %eax,%esi
   218fb:	41 0f cb             	bswap  %r11d
   218fe:	41 8d 8c 0b 99 79 82 	lea    0x5a827999(%r11,%rcx,1),%ecx
   21905:	5a 
   21906:	44 89 5c 24 bc       	mov    %r11d,-0x44(%rsp)
   2190b:	44 21 ce             	and    %r9d,%esi
   2190e:	41 c1 c9 02          	ror    $0x2,%r9d
   21912:	31 d6                	xor    %edx,%esi
   21914:	01 ce                	add    %ecx,%esi
   21916:	89 f9                	mov    %edi,%ecx
   21918:	c1 c1 05             	rol    $0x5,%ecx
   2191b:	01 ce                	add    %ecx,%esi
   2191d:	8b 0d e5 5b 23 00    	mov    0x235be5(%rip),%ecx        # 257508 <workspace.3602+0x28>
   21923:	0f c9                	bswap  %ecx
   21925:	41 89 cb             	mov    %ecx,%r11d
   21928:	89 c1                	mov    %eax,%ecx
   2192a:	44 31 c9             	xor    %r9d,%ecx
   2192d:	41 8d 94 13 99 79 82 	lea    0x5a827999(%r11,%rdx,1),%edx
   21934:	5a 
   21935:	44 89 5c 24 c0       	mov    %r11d,-0x40(%rsp)
   2193a:	44 8b 1d d3 5b 23 00 	mov    0x235bd3(%rip),%r11d        # 257514 <workspace.3602+0x34>
   21941:	21 f9                	and    %edi,%ecx
   21943:	c1 cf 02             	ror    $0x2,%edi
   21946:	31 c1                	xor    %eax,%ecx
   21948:	41 0f cb             	bswap  %r11d
   2194b:	44 89 5c 24 b0       	mov    %r11d,-0x50(%rsp)
   21950:	01 d1                	add    %edx,%ecx
   21952:	89 f2                	mov    %esi,%edx
   21954:	c1 c2 05             	rol    $0x5,%edx
   21957:	01 d1                	add    %edx,%ecx
   21959:	8b 15 ad 5b 23 00    	mov    0x235bad(%rip),%edx        # 25750c <workspace.3602+0x2c>
   2195f:	0f ca                	bswap  %edx
   21961:	89 d3                	mov    %edx,%ebx
   21963:	44 89 ca             	mov    %r9d,%edx
   21966:	31 fa                	xor    %edi,%edx
   21968:	8d 84 03 99 79 82 5a 	lea    0x5a827999(%rbx,%rax,1),%eax
   2196f:	89 5c 24 ac          	mov    %ebx,-0x54(%rsp)
   21973:	21 f2                	and    %esi,%edx
   21975:	c1 ce 02             	ror    $0x2,%esi
   21978:	44 31 ca             	xor    %r9d,%edx
   2197b:	47 8d 8c 0a 99 79 82 	lea    0x5a827999(%r10,%r9,1),%r9d
   21982:	5a 
   21983:	44 8b 15 8e 5b 23 00 	mov    0x235b8e(%rip),%r10d        # 257518 <workspace.3602+0x38>
   2198a:	01 c2                	add    %eax,%edx
   2198c:	89 c8                	mov    %ecx,%eax
   2198e:	c1 c0 05             	rol    $0x5,%eax
   21991:	41 0f ca             	bswap  %r10d
   21994:	01 c2                	add    %eax,%edx
   21996:	89 f8                	mov    %edi,%eax
   21998:	31 f0                	xor    %esi,%eax
   2199a:	21 c8                	and    %ecx,%eax
   2199c:	c1 c9 02             	ror    $0x2,%ecx
   2199f:	31 f8                	xor    %edi,%eax
   219a1:	41 8d bc 3b 99 79 82 	lea    0x5a827999(%r11,%rdi,1),%edi
   219a8:	5a 
   219a9:	44 01 c8             	add    %r9d,%eax
   219ac:	41 89 d1             	mov    %edx,%r9d
   219af:	41 c1 c1 05          	rol    $0x5,%r9d
   219b3:	44 01 c8             	add    %r9d,%eax
   219b6:	41 89 f1             	mov    %esi,%r9d
   219b9:	41 31 c9             	xor    %ecx,%r9d
   219bc:	44 89 cb             	mov    %r9d,%ebx
   219bf:	21 d3                	and    %edx,%ebx
   219c1:	31 f3                	xor    %esi,%ebx
   219c3:	41 8d b4 32 99 79 82 	lea    0x5a827999(%r10,%rsi,1),%esi
   219ca:	5a 
   219cb:	01 fb                	add    %edi,%ebx
   219cd:	89 c7                	mov    %eax,%edi
   219cf:	c1 c7 05             	rol    $0x5,%edi
   219d2:	01 fb                	add    %edi,%ebx
   219d4:	c1 ca 02             	ror    $0x2,%edx
   219d7:	89 cf                	mov    %ecx,%edi
   219d9:	44 31 e5             	xor    %r12d,%ebp
   219dc:	31 d7                	xor    %edx,%edi
   219de:	41 89 d9             	mov    %ebx,%r9d
   219e1:	21 c7                	and    %eax,%edi
   219e3:	41 c1 c1 05          	rol    $0x5,%r9d
   219e7:	31 cf                	xor    %ecx,%edi
   219e9:	c1 c8 02             	ror    $0x2,%eax
   219ec:	01 f7                	add    %esi,%edi
   219ee:	89 d6                	mov    %edx,%esi
   219f0:	44 01 cf             	add    %r9d,%edi
   219f3:	31 c6                	xor    %eax,%esi
   219f5:	44 8b 0d 20 5b 23 00 	mov    0x235b20(%rip),%r9d        # 25751c <workspace.3602+0x3c>
   219fc:	21 de                	and    %ebx,%esi
   219fe:	c1 cb 02             	ror    $0x2,%ebx
   21a01:	41 0f c9             	bswap  %r9d
   21a04:	31 d6                	xor    %edx,%esi
   21a06:	41 8d 8c 09 99 79 82 	lea    0x5a827999(%r9,%rcx,1),%ecx
   21a0d:	5a 
   21a0e:	01 ce                	add    %ecx,%esi
   21a10:	89 f9                	mov    %edi,%ecx
   21a12:	c1 c1 05             	rol    $0x5,%ecx
   21a15:	01 ce                	add    %ecx,%esi
   21a17:	8b 4c 24 a8          	mov    -0x58(%rsp),%ecx
   21a1b:	44 31 c1             	xor    %r8d,%ecx
   21a1e:	44 31 f1             	xor    %r14d,%ecx
   21a21:	44 31 d9             	xor    %r11d,%ecx
   21a24:	d1 c1                	rol    %ecx
   21a26:	41 89 cb             	mov    %ecx,%r11d
   21a29:	89 c1                	mov    %eax,%ecx
   21a2b:	31 d9                	xor    %ebx,%ecx
   21a2d:	41 8d 94 13 99 79 82 	lea    0x5a827999(%r11,%rdx,1),%edx
   21a34:	5a 
   21a35:	44 89 5c 24 c8       	mov    %r11d,-0x38(%rsp)
   21a3a:	21 f9                	and    %edi,%ecx
   21a3c:	c1 cf 02             	ror    $0x2,%edi
   21a3f:	31 c1                	xor    %eax,%ecx
   21a41:	01 d1                	add    %edx,%ecx
   21a43:	89 f2                	mov    %esi,%edx
   21a45:	c1 c2 05             	rol    $0x5,%edx
   21a48:	01 d1                	add    %edx,%ecx
   21a4a:	8b 54 24 bc          	mov    -0x44(%rsp),%edx
   21a4e:	31 ea                	xor    %ebp,%edx
   21a50:	44 31 d2             	xor    %r10d,%edx
   21a53:	d1 c2                	rol    %edx
   21a55:	89 d5                	mov    %edx,%ebp
   21a57:	89 da                	mov    %ebx,%edx
   21a59:	31 fa                	xor    %edi,%edx
   21a5b:	8d 84 05 99 79 82 5a 	lea    0x5a827999(%rbp,%rax,1),%eax
   21a62:	89 6c 24 a8          	mov    %ebp,-0x58(%rsp)
   21a66:	21 f2                	and    %esi,%edx
   21a68:	c1 ce 02             	ror    $0x2,%esi
   21a6b:	45 31 e8             	xor    %r13d,%r8d
   21a6e:	44 33 44 24 c0       	xor    -0x40(%rsp),%r8d
   21a73:	31 da                	xor    %ebx,%edx
   21a75:	45 31 c8             	xor    %r9d,%r8d
   21a78:	45 31 fc             	xor    %r15d,%r12d
   21a7b:	01 c2                	add    %eax,%edx
   21a7d:	89 c8                	mov    %ecx,%eax
   21a7f:	41 d1 c0             	rol    %r8d
   21a82:	c1 c0 05             	rol    $0x5,%eax
   21a85:	41 8d 9c 18 99 79 82 	lea    0x5a827999(%r8,%rbx,1),%ebx
   21a8c:	5a 
   21a8d:	01 c2                	add    %eax,%edx
   21a8f:	89 f8                	mov    %edi,%eax
   21a91:	31 f0                	xor    %esi,%eax
   21a93:	89 d5                	mov    %edx,%ebp
   21a95:	21 c8                	and    %ecx,%eax
   21a97:	c1 c5 05             	rol    $0x5,%ebp
   21a9a:	31 f8                	xor    %edi,%eax
   21a9c:	c1 c9 02             	ror    $0x2,%ecx
   21a9f:	01 d8                	add    %ebx,%eax
   21aa1:	8b 5c 24 ac          	mov    -0x54(%rsp),%ebx
   21aa5:	01 e8                	add    %ebp,%eax
   21aa7:	89 f5                	mov    %esi,%ebp
   21aa9:	44 31 e3             	xor    %r12d,%ebx
   21aac:	31 cd                	xor    %ecx,%ebp
   21aae:	44 31 db             	xor    %r11d,%ebx
   21ab1:	21 d5                	and    %edx,%ebp
   21ab3:	c1 ca 02             	ror    $0x2,%edx
   21ab6:	41 89 dc             	mov    %ebx,%r12d
   21ab9:	31 f5                	xor    %esi,%ebp
   21abb:	8b 5c 24 b4          	mov    -0x4c(%rsp),%ebx
   21abf:	41 d1 c4             	rol    %r12d
   21ac2:	41 8d bc 3c 99 79 82 	lea    0x5a827999(%r12,%rdi,1),%edi
   21ac9:	5a 
   21aca:	45 89 e3             	mov    %r12d,%r11d
   21acd:	41 89 d4             	mov    %edx,%r12d
   21ad0:	01 fd                	add    %edi,%ebp
   21ad2:	89 c7                	mov    %eax,%edi
   21ad4:	44 89 5c 24 b4       	mov    %r11d,-0x4c(%rsp)
   21ad9:	c1 c7 05             	rol    $0x5,%edi
   21adc:	01 fd                	add    %edi,%ebp
   21ade:	44 89 ef             	mov    %r13d,%edi
   21ae1:	41 89 cd             	mov    %ecx,%r13d
   21ae4:	31 df                	xor    %ebx,%edi
   21ae6:	33 7c 24 c4          	xor    -0x3c(%rsp),%edi
   21aea:	33 7c 24 a8          	xor    -0x58(%rsp),%edi
   21aee:	d1 c7                	rol    %edi
   21af0:	41 31 d5             	xor    %edx,%r13d
   21af3:	41 31 c5             	xor    %eax,%r13d
   21af6:	8d b4 37 a1 eb d9 6e 	lea    0x6ed9eba1(%rdi,%rsi,1),%esi
   21afd:	c1 c8 02             	ror    $0x2,%eax
   21b00:	41 01 f5             	add    %esi,%r13d
   21b03:	89 ee                	mov    %ebp,%esi
   21b05:	41 31 c4             	xor    %eax,%r12d
   21b08:	c1 c6 05             	rol    $0x5,%esi
   21b0b:	41 31 ec             	xor    %ebp,%r12d
   21b0e:	c1 cd 02             	ror    $0x2,%ebp
   21b11:	41 01 f5             	add    %esi,%r13d
   21b14:	8b 74 24 b8          	mov    -0x48(%rsp),%esi
   21b18:	44 31 fe             	xor    %r15d,%esi
   21b1b:	33 74 24 b0          	xor    -0x50(%rsp),%esi
   21b1f:	41 89 c7             	mov    %eax,%r15d
   21b22:	44 31 c6             	xor    %r8d,%esi
   21b25:	41 31 ef             	xor    %ebp,%r15d
   21b28:	d1 c6                	rol    %esi
   21b2a:	45 31 ef             	xor    %r13d,%r15d
   21b2d:	8d 8c 0e a1 eb d9 6e 	lea    0x6ed9eba1(%rsi,%rcx,1),%ecx
   21b34:	41 01 cc             	add    %ecx,%r12d
   21b37:	44 89 e9             	mov    %r13d,%ecx
   21b3a:	41 c1 cd 02          	ror    $0x2,%r13d
   21b3e:	c1 c1 05             	rol    $0x5,%ecx
   21b41:	41 01 cc             	add    %ecx,%r12d
   21b44:	89 d9                	mov    %ebx,%ecx
   21b46:	44 31 f1             	xor    %r14d,%ecx
   21b49:	44 89 e3             	mov    %r12d,%ebx
   21b4c:	44 31 d1             	xor    %r10d,%ecx
   21b4f:	c1 c3 05             	rol    $0x5,%ebx
   21b52:	44 31 d9             	xor    %r11d,%ecx
   21b55:	44 8b 5c 24 bc       	mov    -0x44(%rsp),%r11d
   21b5a:	d1 c1                	rol    %ecx
   21b5c:	8d 94 11 a1 eb d9 6e 	lea    0x6ed9eba1(%rcx,%rdx,1),%edx
   21b63:	41 01 d7             	add    %edx,%r15d
   21b66:	8b 54 24 b8          	mov    -0x48(%rsp),%edx
   21b6a:	41 01 df             	add    %ebx,%r15d
   21b6d:	89 eb                	mov    %ebp,%ebx
   21b6f:	44 31 da             	xor    %r11d,%edx
   21b72:	44 31 eb             	xor    %r13d,%ebx
   21b75:	44 31 ca             	xor    %r9d,%edx
   21b78:	44 31 e3             	xor    %r12d,%ebx
   21b7b:	31 fa                	xor    %edi,%edx
   21b7d:	d1 c2                	rol    %edx
   21b7f:	8d 84 02 a1 eb d9 6e 	lea    0x6ed9eba1(%rdx,%rax,1),%eax
   21b86:	89 54 24 b8          	mov    %edx,-0x48(%rsp)
   21b8a:	8b 54 24 c0          	mov    -0x40(%rsp),%edx
   21b8e:	01 c3                	add    %eax,%ebx
   21b90:	44 89 f8             	mov    %r15d,%eax
   21b93:	41 c1 cc 02          	ror    $0x2,%r12d
   21b97:	c1 c0 05             	rol    $0x5,%eax
   21b9a:	01 c3                	add    %eax,%ebx
   21b9c:	44 89 f0             	mov    %r14d,%eax
   21b9f:	45 89 ee             	mov    %r13d,%r14d
   21ba2:	31 d0                	xor    %edx,%eax
   21ba4:	33 44 24 c8          	xor    -0x38(%rsp),%eax
   21ba8:	45 31 e6             	xor    %r12d,%r14d
   21bab:	31 f0                	xor    %esi,%eax
   21bad:	45 31 fe             	xor    %r15d,%r14d
   21bb0:	41 c1 cf 02          	ror    $0x2,%r15d
   21bb4:	d1 c0                	rol    %eax
   21bb6:	8d ac 28 a1 eb d9 6e 	lea    0x6ed9eba1(%rax,%rbp,1),%ebp
   21bbd:	41 01 ee             	add    %ebp,%r14d
   21bc0:	89 dd                	mov    %ebx,%ebp
   21bc2:	c1 c5 05             	rol    $0x5,%ebp
   21bc5:	41 01 ee             	add    %ebp,%r14d
   21bc8:	8b 6c 24 ac          	mov    -0x54(%rsp),%ebp
   21bcc:	44 31 dd             	xor    %r11d,%ebp
   21bcf:	33 6c 24 a8          	xor    -0x58(%rsp),%ebp
   21bd3:	31 cd                	xor    %ecx,%ebp
   21bd5:	d1 c5                	rol    %ebp
   21bd7:	41 89 eb             	mov    %ebp,%r11d
   21bda:	44 89 e5             	mov    %r12d,%ebp
   21bdd:	44 31 fd             	xor    %r15d,%ebp
   21be0:	47 8d ac 2b a1 eb d9 	lea    0x6ed9eba1(%r11,%r13,1),%r13d
   21be7:	6e 
   21be8:	44 89 5c 24 bc       	mov    %r11d,-0x44(%rsp)
   21bed:	31 dd                	xor    %ebx,%ebp
   21bef:	c1 cb 02             	ror    $0x2,%ebx
   21bf2:	41 01 ed             	add    %ebp,%r13d
   21bf5:	44 89 f5             	mov    %r14d,%ebp
   21bf8:	c1 c5 05             	rol    $0x5,%ebp
   21bfb:	41 01 ed             	add    %ebp,%r13d
   21bfe:	89 d5                	mov    %edx,%ebp
   21c00:	8b 54 24 c4          	mov    -0x3c(%rsp),%edx
   21c04:	31 d5                	xor    %edx,%ebp
   21c06:	44 31 c5             	xor    %r8d,%ebp
   21c09:	33 6c 24 b8          	xor    -0x48(%rsp),%ebp
   21c0d:	d1 c5                	rol    %ebp
   21c0f:	41 89 eb             	mov    %ebp,%r11d
   21c12:	44 89 fd             	mov    %r15d,%ebp
   21c15:	31 dd                	xor    %ebx,%ebp
   21c17:	47 8d a4 23 a1 eb d9 	lea    0x6ed9eba1(%r11,%r12,1),%r12d
   21c1e:	6e 
   21c1f:	44 89 5c 24 c0       	mov    %r11d,-0x40(%rsp)
   21c24:	44 31 f5             	xor    %r14d,%ebp
   21c27:	44 01 e5             	add    %r12d,%ebp
   21c2a:	45 89 ec             	mov    %r13d,%r12d
   21c2d:	41 c1 c4 05          	rol    $0x5,%r12d
   21c31:	41 01 ec             	add    %ebp,%r12d
   21c34:	8b 6c 24 ac          	mov    -0x54(%rsp),%ebp
   21c38:	33 6c 24 b0          	xor    -0x50(%rsp),%ebp
   21c3c:	41 c1 ce 02          	ror    $0x2,%r14d
   21c40:	33 6c 24 b4          	xor    -0x4c(%rsp),%ebp
   21c44:	31 c5                	xor    %eax,%ebp
   21c46:	d1 c5                	rol    %ebp
   21c48:	41 89 eb             	mov    %ebp,%r11d
   21c4b:	89 dd                	mov    %ebx,%ebp
   21c4d:	44 31 f5             	xor    %r14d,%ebp
   21c50:	47 8d bc 3b a1 eb d9 	lea    0x6ed9eba1(%r11,%r15,1),%r15d
   21c57:	6e 
   21c58:	44 89 5c 24 ac       	mov    %r11d,-0x54(%rsp)
   21c5d:	44 31 ed             	xor    %r13d,%ebp
   21c60:	41 c1 cd 02          	ror    $0x2,%r13d
   21c64:	44 01 fd             	add    %r15d,%ebp
   21c67:	45 89 e7             	mov    %r12d,%r15d
   21c6a:	41 c1 c7 05          	rol    $0x5,%r15d
   21c6e:	44 01 fd             	add    %r15d,%ebp
   21c71:	41 89 d7             	mov    %edx,%r15d
   21c74:	44 89 f2             	mov    %r14d,%edx
   21c77:	45 31 d7             	xor    %r10d,%r15d
   21c7a:	44 31 ea             	xor    %r13d,%edx
   21c7d:	41 31 ff             	xor    %edi,%r15d
   21c80:	44 33 7c 24 bc       	xor    -0x44(%rsp),%r15d
   21c85:	41 d1 c7             	rol    %r15d
   21c88:	45 89 fb             	mov    %r15d,%r11d
   21c8b:	41 89 d7             	mov    %edx,%r15d
   21c8e:	89 ea                	mov    %ebp,%edx
   21c90:	44 89 5c 24 c4       	mov    %r11d,-0x3c(%rsp)
   21c95:	41 8d 9c 1b a1 eb d9 	lea    0x6ed9eba1(%r11,%rbx,1),%ebx
   21c9c:	6e 
   21c9d:	44 8b 5c 24 b0       	mov    -0x50(%rsp),%r11d
   21ca2:	45 31 e7             	xor    %r12d,%r15d
   21ca5:	c1 c2 05             	rol    $0x5,%edx
   21ca8:	44 01 fb             	add    %r15d,%ebx
   21cab:	41 c1 cc 02          	ror    $0x2,%r12d
   21caf:	45 31 cb             	xor    %r9d,%r11d
   21cb2:	01 d3                	add    %edx,%ebx
   21cb4:	41 31 f3             	xor    %esi,%r11d
   21cb7:	44 33 5c 24 c0       	xor    -0x40(%rsp),%r11d
   21cbc:	44 89 da             	mov    %r11d,%edx
   21cbf:	d1 c2                	rol    %edx
   21cc1:	41 89 d7             	mov    %edx,%r15d
   21cc4:	44 89 ea             	mov    %r13d,%edx
   21cc7:	44 31 e2             	xor    %r12d,%edx
   21cca:	47 8d b4 37 a1 eb d9 	lea    0x6ed9eba1(%r15,%r14,1),%r14d
   21cd1:	6e 
   21cd2:	41 89 d3             	mov    %edx,%r11d
   21cd5:	8b 54 24 c8          	mov    -0x38(%rsp),%edx
   21cd9:	41 31 eb             	xor    %ebp,%r11d
   21cdc:	c1 cd 02             	ror    $0x2,%ebp
   21cdf:	45 01 f3             	add    %r14d,%r11d
   21ce2:	41 89 de             	mov    %ebx,%r14d
   21ce5:	41 c1 c6 05          	rol    $0x5,%r14d
   21ce9:	45 01 f3             	add    %r14d,%r11d
   21cec:	41 31 d2             	xor    %edx,%r10d
   21cef:	44 33 4c 24 a8       	xor    -0x58(%rsp),%r9d
   21cf4:	44 33 4c 24 b8       	xor    -0x48(%rsp),%r9d
   21cf9:	41 31 ca             	xor    %ecx,%r10d
   21cfc:	44 33 54 24 ac       	xor    -0x54(%rsp),%r10d
   21d01:	44 33 4c 24 c4       	xor    -0x3c(%rsp),%r9d
   21d06:	41 d1 c2             	rol    %r10d
   21d09:	41 d1 c1             	rol    %r9d
   21d0c:	45 89 d6             	mov    %r10d,%r14d
   21d0f:	45 89 e2             	mov    %r12d,%r10d
   21d12:	41 31 ea             	xor    %ebp,%r10d
   21d15:	47 8d ac 2e a1 eb d9 	lea    0x6ed9eba1(%r14,%r13,1),%r13d
   21d1c:	6e 
   21d1d:	41 31 da             	xor    %ebx,%r10d
   21d20:	c1 cb 02             	ror    $0x2,%ebx
   21d23:	45 01 ea             	add    %r13d,%r10d
   21d26:	45 89 dd             	mov    %r11d,%r13d
   21d29:	41 c1 c5 05          	rol    $0x5,%r13d
   21d2d:	45 01 ea             	add    %r13d,%r10d
   21d30:	45 89 cd             	mov    %r9d,%r13d
   21d33:	41 89 e9             	mov    %ebp,%r9d
   21d36:	41 31 d9             	xor    %ebx,%r9d
   21d39:	47 8d a4 25 a1 eb d9 	lea    0x6ed9eba1(%r13,%r12,1),%r12d
   21d40:	6e 
   21d41:	45 31 d9             	xor    %r11d,%r9d
   21d44:	41 c1 cb 02          	ror    $0x2,%r11d
   21d48:	45 01 e1             	add    %r12d,%r9d
   21d4b:	45 89 d4             	mov    %r10d,%r12d
   21d4e:	41 c1 c4 05          	rol    $0x5,%r12d
   21d52:	45 01 e1             	add    %r12d,%r9d
   21d55:	41 89 d4             	mov    %edx,%r12d
   21d58:	45 31 c4             	xor    %r8d,%r12d
   21d5b:	41 31 c4             	xor    %eax,%r12d
   21d5e:	45 31 fc             	xor    %r15d,%r12d
   21d61:	41 d1 c4             	rol    %r12d
   21d64:	44 89 e2             	mov    %r12d,%edx
   21d67:	41 89 dc             	mov    %ebx,%r12d
   21d6a:	45 31 dc             	xor    %r11d,%r12d
   21d6d:	8d ac 2a a1 eb d9 6e 	lea    0x6ed9eba1(%rdx,%rbp,1),%ebp
   21d74:	89 54 24 b0          	mov    %edx,-0x50(%rsp)
   21d78:	45 31 d4             	xor    %r10d,%r12d
   21d7b:	41 c1 ca 02          	ror    $0x2,%r10d
   21d7f:	44 01 e5             	add    %r12d,%ebp
   21d82:	45 89 cc             	mov    %r9d,%r12d
   21d85:	41 c1 c4 05          	rol    $0x5,%r12d
   21d89:	44 01 e5             	add    %r12d,%ebp
   21d8c:	44 8b 64 24 a8       	mov    -0x58(%rsp),%r12d
   21d91:	44 33 64 24 b4       	xor    -0x4c(%rsp),%r12d
   21d96:	44 33 64 24 bc       	xor    -0x44(%rsp),%r12d
   21d9b:	45 31 f4             	xor    %r14d,%r12d
   21d9e:	41 31 f8             	xor    %edi,%r8d
   21da1:	44 33 44 24 c0       	xor    -0x40(%rsp),%r8d
   21da6:	31 cf                	xor    %ecx,%edi
   21da8:	41 d1 c4             	rol    %r12d
   21dab:	45 31 e8             	xor    %r13d,%r8d
   21dae:	33 7c 24 c4          	xor    -0x3c(%rsp),%edi
   21db2:	44 89 e2             	mov    %r12d,%edx
   21db5:	45 89 dc             	mov    %r11d,%r12d
   21db8:	45 31 d4             	xor    %r10d,%r12d
   21dbb:	8d 9c 1a a1 eb d9 6e 	lea    0x6ed9eba1(%rdx,%rbx,1),%ebx
   21dc2:	89 54 24 a8          	mov    %edx,-0x58(%rsp)
   21dc6:	45 31 cc             	xor    %r9d,%r12d
   21dc9:	41 c1 c9 02          	ror    $0x2,%r9d
   21dcd:	44 01 e3             	add    %r12d,%ebx
   21dd0:	41 89 ec             	mov    %ebp,%r12d
   21dd3:	41 c1 c4 05          	rol    $0x5,%r12d
   21dd7:	44 01 e3             	add    %r12d,%ebx
   21dda:	45 89 c4             	mov    %r8d,%r12d
   21ddd:	45 89 d0             	mov    %r10d,%r8d
   21de0:	41 d1 c4             	rol    %r12d
   21de3:	45 31 c8             	xor    %r9d,%r8d
   21de6:	89 da                	mov    %ebx,%edx
   21de8:	41 31 e8             	xor    %ebp,%r8d
   21deb:	47 8d 9c 1c a1 eb d9 	lea    0x6ed9eba1(%r12,%r11,1),%r11d
   21df2:	6e 
   21df3:	c1 c2 05             	rol    $0x5,%edx
   21df6:	45 01 d8             	add    %r11d,%r8d
   21df9:	44 8b 5c 24 b4       	mov    -0x4c(%rsp),%r11d
   21dfe:	c1 cd 02             	ror    $0x2,%ebp
   21e01:	41 01 d0             	add    %edx,%r8d
   21e04:	41 31 f3             	xor    %esi,%r11d
   21e07:	44 33 5c 24 ac       	xor    -0x54(%rsp),%r11d
   21e0c:	44 33 5c 24 b0       	xor    -0x50(%rsp),%r11d
   21e11:	44 89 da             	mov    %r11d,%edx
   21e14:	45 89 cb             	mov    %r9d,%r11d
   21e17:	d1 c2                	rol    %edx
   21e19:	41 31 eb             	xor    %ebp,%r11d
   21e1c:	41 31 db             	xor    %ebx,%r11d
   21e1f:	46 8d 94 12 a1 eb d9 	lea    0x6ed9eba1(%rdx,%r10,1),%r10d
   21e26:	6e 
   21e27:	89 54 24 b4          	mov    %edx,-0x4c(%rsp)
   21e2b:	33 7c 24 a8          	xor    -0x58(%rsp),%edi
   21e2f:	d1 c7                	rol    %edi
   21e31:	45 01 da             	add    %r11d,%r10d
   21e34:	45 89 c3             	mov    %r8d,%r11d
   21e37:	8b 54 24 b8          	mov    -0x48(%rsp),%edx
   21e3b:	41 c1 c3 05          	rol    $0x5,%r11d
   21e3f:	c1 cb 02             	ror    $0x2,%ebx
   21e42:	45 01 da             	add    %r11d,%r10d
   21e45:	41 89 fb             	mov    %edi,%r11d
   21e48:	89 ef                	mov    %ebp,%edi
   21e4a:	31 df                	xor    %ebx,%edi
   21e4c:	31 d6                	xor    %edx,%esi
   21e4e:	47 8d 8c 0b a1 eb d9 	lea    0x6ed9eba1(%r11,%r9,1),%r9d
   21e55:	6e 
   21e56:	31 c1                	xor    %eax,%ecx
   21e58:	44 31 c7             	xor    %r8d,%edi
   21e5b:	44 31 fe             	xor    %r15d,%esi
   21e5e:	41 c1 c8 02          	ror    $0x2,%r8d
   21e62:	44 31 f1             	xor    %r14d,%ecx
   21e65:	44 01 cf             	add    %r9d,%edi
   21e68:	44 31 e6             	xor    %r12d,%esi
   21e6b:	45 89 d1             	mov    %r10d,%r9d
   21e6e:	33 4c 24 b4          	xor    -0x4c(%rsp),%ecx
   21e72:	41 c1 c1 05          	rol    $0x5,%r9d
   21e76:	d1 c6                	rol    %esi
   21e78:	44 89 5c 24 c8       	mov    %r11d,-0x38(%rsp)
   21e7d:	44 8b 5c 24 bc       	mov    -0x44(%rsp),%r11d
   21e82:	44 01 cf             	add    %r9d,%edi
   21e85:	41 89 f1             	mov    %esi,%r9d
   21e88:	89 de                	mov    %ebx,%esi
   21e8a:	d1 c1                	rol    %ecx
   21e8c:	44 31 c6             	xor    %r8d,%esi
   21e8f:	44 89 4c 24 b8       	mov    %r9d,-0x48(%rsp)
   21e94:	45 8d 8c 29 a1 eb d9 	lea    0x6ed9eba1(%r9,%rbp,1),%r9d
   21e9b:	6e 
   21e9c:	89 fd                	mov    %edi,%ebp
   21e9e:	44 31 d6             	xor    %r10d,%esi
   21ea1:	c1 c5 05             	rol    $0x5,%ebp
   21ea4:	44 31 da             	xor    %r11d,%edx
   21ea7:	44 01 ce             	add    %r9d,%esi
   21eaa:	41 c1 ca 02          	ror    $0x2,%r10d
   21eae:	44 31 ea             	xor    %r13d,%edx
   21eb1:	33 54 24 c8          	xor    -0x38(%rsp),%edx
   21eb5:	01 ee                	add    %ebp,%esi
   21eb7:	89 cd                	mov    %ecx,%ebp
   21eb9:	44 89 c1             	mov    %r8d,%ecx
   21ebc:	44 31 d1             	xor    %r10d,%ecx
   21ebf:	44 8d 8c 1d a1 eb d9 	lea    0x6ed9eba1(%rbp,%rbx,1),%r9d
   21ec6:	6e 
   21ec7:	89 6c 24 cc          	mov    %ebp,-0x34(%rsp)
   21ecb:	89 d5                	mov    %edx,%ebp
   21ecd:	31 f9                	xor    %edi,%ecx
   21ecf:	c1 cf 02             	ror    $0x2,%edi
   21ed2:	8b 5c 24 c0          	mov    -0x40(%rsp),%ebx
   21ed6:	44 01 c9             	add    %r9d,%ecx
   21ed9:	41 89 f1             	mov    %esi,%r9d
   21edc:	d1 c5                	rol    %ebp
   21ede:	41 c1 c1 05          	rol    $0x5,%r9d
   21ee2:	46 8d 84 05 a1 eb d9 	lea    0x6ed9eba1(%rbp,%r8,1),%r8d
   21ee9:	6e 
   21eea:	89 6c 24 bc          	mov    %ebp,-0x44(%rsp)
   21eee:	8b 6c 24 a8          	mov    -0x58(%rsp),%ebp
   21ef2:	44 01 c9             	add    %r9d,%ecx
   21ef5:	45 89 d1             	mov    %r10d,%r9d
   21ef8:	41 31 f9             	xor    %edi,%r9d
   21efb:	44 89 ca             	mov    %r9d,%edx
   21efe:	31 f2                	xor    %esi,%edx
   21f00:	44 01 c2             	add    %r8d,%edx
   21f03:	41 89 c8             	mov    %ecx,%r8d
   21f06:	31 d8                	xor    %ebx,%eax
   21f08:	33 44 24 b0          	xor    -0x50(%rsp),%eax
   21f0c:	41 c1 c0 05          	rol    $0x5,%r8d
   21f10:	33 44 24 b8          	xor    -0x48(%rsp),%eax
   21f14:	c1 ce 02             	ror    $0x2,%esi
   21f17:	44 01 c2             	add    %r8d,%edx
   21f1a:	41 89 c0             	mov    %eax,%r8d
   21f1d:	89 c8                	mov    %ecx,%eax
   21f1f:	09 f0                	or     %esi,%eax
   21f21:	41 d1 c0             	rol    %r8d
   21f24:	45 89 c1             	mov    %r8d,%r9d
   21f27:	41 89 c0             	mov    %eax,%r8d
   21f2a:	89 c8                	mov    %ecx,%eax
   21f2c:	c1 c9 02             	ror    $0x2,%ecx
   21f2f:	41 21 f8             	and    %edi,%r8d
   21f32:	21 f0                	and    %esi,%eax
   21f34:	44 89 4c 24 c0       	mov    %r9d,-0x40(%rsp)
   21f39:	44 09 c0             	or     %r8d,%eax
   21f3c:	47 8d 84 11 dc bc 1b 	lea    -0x70e44324(%r9,%r10,1),%r8d
   21f43:	8f 
   21f44:	41 89 d2             	mov    %edx,%r10d
   21f47:	41 89 d1             	mov    %edx,%r9d
   21f4a:	44 01 c0             	add    %r8d,%eax
   21f4d:	41 c1 c2 05          	rol    $0x5,%r10d
   21f51:	41 09 c9             	or     %ecx,%r9d
   21f54:	44 01 d0             	add    %r10d,%eax
   21f57:	44 8b 54 24 ac       	mov    -0x54(%rsp),%r10d
   21f5c:	41 21 f1             	and    %esi,%r9d
   21f5f:	45 31 d3             	xor    %r10d,%r11d
   21f62:	44 31 dd             	xor    %r11d,%ebp
   21f65:	33 6c 24 cc          	xor    -0x34(%rsp),%ebp
   21f69:	d1 c5                	rol    %ebp
   21f6b:	41 89 eb             	mov    %ebp,%r11d
   21f6e:	89 d5                	mov    %edx,%ebp
   21f70:	c1 ca 02             	ror    $0x2,%edx
   21f73:	21 cd                	and    %ecx,%ebp
   21f75:	41 89 e8             	mov    %ebp,%r8d
   21f78:	89 dd                	mov    %ebx,%ebp
   21f7a:	8b 5c 24 c4          	mov    -0x3c(%rsp),%ebx
   21f7e:	45 09 c8             	or     %r9d,%r8d
   21f81:	45 8d 8c 3b dc bc 1b 	lea    -0x70e44324(%r11,%rdi,1),%r9d
   21f88:	8f 
   21f89:	89 c7                	mov    %eax,%edi
   21f8b:	31 dd                	xor    %ebx,%ebp
   21f8d:	c1 c7 05             	rol    $0x5,%edi
   21f90:	45 01 c8             	add    %r9d,%r8d
   21f93:	44 31 e5             	xor    %r12d,%ebp
   21f96:	33 6c 24 bc          	xor    -0x44(%rsp),%ebp
   21f9a:	41 89 f9             	mov    %edi,%r9d
   21f9d:	89 ef                	mov    %ebp,%edi
   21f9f:	45 01 c1             	add    %r8d,%r9d
   21fa2:	d1 c7                	rol    %edi
   21fa4:	89 fd                	mov    %edi,%ebp
   21fa6:	89 c7                	mov    %eax,%edi
   21fa8:	09 d7                	or     %edx,%edi
   21faa:	8d b4 35 dc bc 1b 8f 	lea    -0x70e44324(%rbp,%rsi,1),%esi
   21fb1:	45 31 fa             	xor    %r15d,%r10d
   21fb4:	89 6c 24 d8          	mov    %ebp,-0x28(%rsp)
   21fb8:	41 89 f8             	mov    %edi,%r8d
   21fbb:	89 c7                	mov    %eax,%edi
   21fbd:	c1 c8 02             	ror    $0x2,%eax
   21fc0:	41 21 c8             	and    %ecx,%r8d
   21fc3:	21 d7                	and    %edx,%edi
   21fc5:	44 09 c7             	or     %r8d,%edi
   21fc8:	44 8b 44 24 b4       	mov    -0x4c(%rsp),%r8d
   21fcd:	01 f7                	add    %esi,%edi
   21fcf:	44 89 ce             	mov    %r9d,%esi
   21fd2:	45 31 d0             	xor    %r10d,%r8d
   21fd5:	c1 c6 05             	rol    $0x5,%esi
   21fd8:	44 33 44 24 c0       	xor    -0x40(%rsp),%r8d
   21fdd:	01 fe                	add    %edi,%esi
   21fdf:	44 89 c7             	mov    %r8d,%edi
   21fe2:	d1 c7                	rol    %edi
   21fe4:	41 89 fa             	mov    %edi,%r10d
   21fe7:	44 89 cf             	mov    %r9d,%edi
   21fea:	09 c7                	or     %eax,%edi
   21fec:	41 8d 8c 0a dc bc 1b 	lea    -0x70e44324(%r10,%rcx,1),%ecx
   21ff3:	8f 
   21ff4:	44 89 54 24 ac       	mov    %r10d,-0x54(%rsp)
   21ff9:	41 89 f8             	mov    %edi,%r8d
   21ffc:	44 89 cf             	mov    %r9d,%edi
   21fff:	41 c1 c9 02          	ror    $0x2,%r9d
   22003:	41 21 d0             	and    %edx,%r8d
   22006:	21 c7                	and    %eax,%edi
   22008:	44 09 c7             	or     %r8d,%edi
   2200b:	01 cf                	add    %ecx,%edi
   2200d:	89 f1                	mov    %esi,%ecx
   2200f:	c1 c1 05             	rol    $0x5,%ecx
   22012:	01 f9                	add    %edi,%ecx
   22014:	89 df                	mov    %ebx,%edi
   22016:	44 31 f7             	xor    %r14d,%edi
   22019:	33 7c 24 c8          	xor    -0x38(%rsp),%edi
   2201d:	41 89 ca             	mov    %ecx,%r10d
   22020:	44 31 df             	xor    %r11d,%edi
   22023:	d1 c7                	rol    %edi
   22025:	89 fb                	mov    %edi,%ebx
   22027:	89 f7                	mov    %esi,%edi
   22029:	44 09 cf             	or     %r9d,%edi
   2202c:	8d 94 13 dc bc 1b 8f 	lea    -0x70e44324(%rbx,%rdx,1),%edx
   22033:	41 89 f8             	mov    %edi,%r8d
   22036:	89 f7                	mov    %esi,%edi
   22038:	c1 ce 02             	ror    $0x2,%esi
   2203b:	41 21 c0             	and    %eax,%r8d
   2203e:	44 21 cf             	and    %r9d,%edi
   22041:	44 09 c7             	or     %r8d,%edi
   22044:	01 d7                	add    %edx,%edi
   22046:	89 ca                	mov    %ecx,%edx
   22048:	c1 c2 05             	rol    $0x5,%edx
   2204b:	01 fa                	add    %edi,%edx
   2204d:	45 31 ef             	xor    %r13d,%r15d
   22050:	89 cf                	mov    %ecx,%edi
   22052:	44 33 7c 24 b8       	xor    -0x48(%rsp),%r15d
   22057:	41 21 f2             	and    %esi,%r10d
   2205a:	41 31 ef             	xor    %ebp,%r15d
   2205d:	09 f7                	or     %esi,%edi
   2205f:	c1 c9 02             	ror    $0x2,%ecx
   22062:	41 d1 c7             	rol    %r15d
   22065:	44 21 cf             	and    %r9d,%edi
   22068:	44 89 d5             	mov    %r10d,%ebp
   2206b:	44 8b 54 24 b0       	mov    -0x50(%rsp),%r10d
   22070:	09 fd                	or     %edi,%ebp
   22072:	41 8d bc 07 dc bc 1b 	lea    -0x70e44324(%r15,%rax,1),%edi
   22079:	8f 
   2207a:	41 89 c8             	mov    %ecx,%r8d
   2207d:	89 d0                	mov    %edx,%eax
   2207f:	01 fd                	add    %edi,%ebp
   22081:	89 d7                	mov    %edx,%edi
   22083:	44 89 f1             	mov    %r14d,%ecx
   22086:	44 09 c0             	or     %r8d,%eax
   22089:	c1 c7 05             	rol    $0x5,%edi
   2208c:	44 31 d1             	xor    %r10d,%ecx
   2208f:	33 4c 24 cc          	xor    -0x34(%rsp),%ecx
   22093:	33 4c 24 ac          	xor    -0x54(%rsp),%ecx
   22097:	01 fd                	add    %edi,%ebp
   22099:	89 d7                	mov    %edx,%edi
   2209b:	d1 c1                	rol    %ecx
   2209d:	21 f0                	and    %esi,%eax
   2209f:	44 21 c7             	and    %r8d,%edi
   220a2:	44 8b 74 24 a8       	mov    -0x58(%rsp),%r14d
   220a7:	c1 ca 02             	ror    $0x2,%edx
   220aa:	89 4c 24 c4          	mov    %ecx,-0x3c(%rsp)
   220ae:	09 c7                	or     %eax,%edi
   220b0:	42 8d 84 09 dc bc 1b 	lea    -0x70e44324(%rcx,%r9,1),%eax
   220b7:	8f 
   220b8:	41 89 e9             	mov    %ebp,%r9d
   220bb:	89 5c 24 b0          	mov    %ebx,-0x50(%rsp)
   220bf:	01 c7                	add    %eax,%edi
   220c1:	41 c1 c1 05          	rol    $0x5,%r9d
   220c5:	8b 44 24 bc          	mov    -0x44(%rsp),%eax
   220c9:	45 31 f5             	xor    %r14d,%r13d
   220cc:	44 01 cf             	add    %r9d,%edi
   220cf:	41 89 e9             	mov    %ebp,%r9d
   220d2:	41 09 d1             	or     %edx,%r9d
   220d5:	44 31 e8             	xor    %r13d,%eax
   220d8:	31 d8                	xor    %ebx,%eax
   220da:	44 89 c9             	mov    %r9d,%ecx
   220dd:	41 89 e9             	mov    %ebp,%r9d
   220e0:	41 21 d1             	and    %edx,%r9d
   220e3:	41 89 c5             	mov    %eax,%r13d
   220e6:	44 21 c1             	and    %r8d,%ecx
   220e9:	41 d1 c5             	rol    %r13d
   220ec:	44 89 c8             	mov    %r9d,%eax
   220ef:	41 8d b4 35 dc bc 1b 	lea    -0x70e44324(%r13,%rsi,1),%esi
   220f6:	8f 
   220f7:	09 c8                	or     %ecx,%eax
   220f9:	44 89 d1             	mov    %r10d,%ecx
   220fc:	44 89 6c 24 d0       	mov    %r13d,-0x30(%rsp)
   22101:	01 f0                	add    %esi,%eax
   22103:	44 31 e1             	xor    %r12d,%ecx
   22106:	33 4c 24 c0          	xor    -0x40(%rsp),%ecx
   2210a:	c1 cd 02             	ror    $0x2,%ebp
   2210d:	44 31 f9             	xor    %r15d,%ecx
   22110:	89 fe                	mov    %edi,%esi
   22112:	44 8b 6c 24 b4       	mov    -0x4c(%rsp),%r13d
   22117:	41 89 c9             	mov    %ecx,%r9d
   2211a:	c1 c6 05             	rol    $0x5,%esi
   2211d:	41 d1 c1             	rol    %r9d
   22120:	01 c6                	add    %eax,%esi
   22122:	45 31 ee             	xor    %r13d,%r14d
   22125:	44 89 cb             	mov    %r9d,%ebx
   22128:	41 89 f9             	mov    %edi,%r9d
   2212b:	41 09 e9             	or     %ebp,%r9d
   2212e:	44 89 c8             	mov    %r9d,%eax
   22131:	41 89 f9             	mov    %edi,%r9d
   22134:	c1 cf 02             	ror    $0x2,%edi
   22137:	41 21 e9             	and    %ebp,%r9d
   2213a:	21 d0                	and    %edx,%eax
   2213c:	44 89 c9             	mov    %r9d,%ecx
   2213f:	41 89 f1             	mov    %esi,%r9d
   22142:	09 c1                	or     %eax,%ecx
   22144:	42 8d 84 03 dc bc 1b 	lea    -0x70e44324(%rbx,%r8,1),%eax
   2214b:	8f 
   2214c:	41 c1 c1 05          	rol    $0x5,%r9d
   22150:	01 c1                	add    %eax,%ecx
   22152:	44 89 f0             	mov    %r14d,%eax
   22155:	44 01 c9             	add    %r9d,%ecx
   22158:	44 31 d8             	xor    %r11d,%eax
   2215b:	41 89 f1             	mov    %esi,%r9d
   2215e:	33 44 24 c4          	xor    -0x3c(%rsp),%eax
   22162:	41 09 f9             	or     %edi,%r9d
   22165:	41 89 c6             	mov    %eax,%r14d
   22168:	41 d1 c6             	rol    %r14d
   2216b:	45 89 c8             	mov    %r9d,%r8d
   2216e:	41 89 f1             	mov    %esi,%r9d
   22171:	c1 ce 02             	ror    $0x2,%esi
   22174:	44 89 74 24 d4       	mov    %r14d,-0x2c(%rsp)
   22179:	41 21 f9             	and    %edi,%r9d
   2217c:	41 8d 94 16 dc bc 1b 	lea    -0x70e44324(%r14,%rdx,1),%edx
   22183:	8f 
   22184:	44 8b 74 24 c8       	mov    -0x38(%rsp),%r14d
   22189:	41 21 e8             	and    %ebp,%r8d
   2218c:	44 89 c8             	mov    %r9d,%eax
   2218f:	45 89 e1             	mov    %r12d,%r9d
   22192:	44 8b 64 24 cc       	mov    -0x34(%rsp),%r12d
   22197:	44 09 c0             	or     %r8d,%eax
   2219a:	45 31 f1             	xor    %r14d,%r9d
   2219d:	44 33 4c 24 d8       	xor    -0x28(%rsp),%r9d
   221a2:	44 33 4c 24 d0       	xor    -0x30(%rsp),%r9d
   221a7:	01 d0                	add    %edx,%eax
   221a9:	41 d1 c1             	rol    %r9d
   221ac:	89 ca                	mov    %ecx,%edx
   221ae:	45 89 ca             	mov    %r9d,%r10d
   221b1:	c1 c2 05             	rol    $0x5,%edx
   221b4:	41 89 c9             	mov    %ecx,%r9d
   221b7:	01 c2                	add    %eax,%edx
   221b9:	41 09 f1             	or     %esi,%r9d
   221bc:	45 31 e6             	xor    %r12d,%r14d
   221bf:	45 89 c8             	mov    %r9d,%r8d
   221c2:	41 89 c9             	mov    %ecx,%r9d
   221c5:	c1 c9 02             	ror    $0x2,%ecx
   221c8:	41 21 f1             	and    %esi,%r9d
   221cb:	41 21 f8             	and    %edi,%r8d
   221ce:	44 89 c8             	mov    %r9d,%eax
   221d1:	41 89 d1             	mov    %edx,%r9d
   221d4:	44 09 c0             	or     %r8d,%eax
   221d7:	45 8d 84 2a dc bc 1b 	lea    -0x70e44324(%r10,%rbp,1),%r8d
   221de:	8f 
   221df:	8b 6c 24 b8          	mov    -0x48(%rsp),%ebp
   221e3:	41 c1 c1 05          	rol    $0x5,%r9d
   221e7:	44 01 c0             	add    %r8d,%eax
   221ea:	45 89 e8             	mov    %r13d,%r8d
   221ed:	44 01 c8             	add    %r9d,%eax
   221f0:	41 31 e8             	xor    %ebp,%r8d
   221f3:	41 89 d1             	mov    %edx,%r9d
   221f6:	44 33 44 24 ac       	xor    -0x54(%rsp),%r8d
   221fb:	41 31 d8             	xor    %ebx,%r8d
   221fe:	41 09 c9             	or     %ecx,%r9d
   22201:	45 89 c5             	mov    %r8d,%r13d
   22204:	45 89 c8             	mov    %r9d,%r8d
   22207:	41 89 d1             	mov    %edx,%r9d
   2220a:	c1 ca 02             	ror    $0x2,%edx
   2220d:	41 d1 c5             	rol    %r13d
   22210:	41 21 f0             	and    %esi,%r8d
   22213:	41 21 c9             	and    %ecx,%r9d
   22216:	45 09 c1             	or     %r8d,%r9d
   22219:	45 8d 84 3d dc bc 1b 	lea    -0x70e44324(%r13,%rdi,1),%r8d
   22220:	8f 
   22221:	89 c7                	mov    %eax,%edi
   22223:	44 89 6c 24 c8       	mov    %r13d,-0x38(%rsp)
   22228:	45 01 c1             	add    %r8d,%r9d
   2222b:	c1 c7 05             	rol    $0x5,%edi
   2222e:	41 01 f9             	add    %edi,%r9d
   22231:	8b 7c 24 b0          	mov    -0x50(%rsp),%edi
   22235:	44 31 f7             	xor    %r14d,%edi
   22238:	33 7c 24 d4          	xor    -0x2c(%rsp),%edi
   2223c:	41 89 c6             	mov    %eax,%r14d
   2223f:	d1 c7                	rol    %edi
   22241:	41 21 d6             	and    %edx,%r14d
   22244:	41 89 fd             	mov    %edi,%r13d
   22247:	89 c7                	mov    %eax,%edi
   22249:	45 89 f0             	mov    %r14d,%r8d
   2224c:	c1 c8 02             	ror    $0x2,%eax
   2224f:	09 d7                	or     %edx,%edi
   22251:	21 cf                	and    %ecx,%edi
   22253:	41 09 f8             	or     %edi,%r8d
   22256:	41 8d bc 35 dc bc 1b 	lea    -0x70e44324(%r13,%rsi,1),%edi
   2225d:	8f 
   2225e:	89 ee                	mov    %ebp,%esi
   22260:	8b 6c 24 bc          	mov    -0x44(%rsp),%ebp
   22264:	41 01 f8             	add    %edi,%r8d
   22267:	44 89 cf             	mov    %r9d,%edi
   2226a:	c1 c7 05             	rol    $0x5,%edi
   2226d:	41 01 f8             	add    %edi,%r8d
   22270:	31 ee                	xor    %ebp,%esi
   22272:	44 31 fe             	xor    %r15d,%esi
   22275:	44 31 d6             	xor    %r10d,%esi
   22278:	89 f7                	mov    %esi,%edi
   2227a:	d1 c7                	rol    %edi
   2227c:	41 89 fe             	mov    %edi,%r14d
   2227f:	44 89 cf             	mov    %r9d,%edi
   22282:	09 c7                	or     %eax,%edi
   22284:	89 fe                	mov    %edi,%esi
   22286:	44 89 cf             	mov    %r9d,%edi
   22289:	41 c1 c9 02          	ror    $0x2,%r9d
   2228d:	21 d6                	and    %edx,%esi
   2228f:	21 c7                	and    %eax,%edi
   22291:	09 f7                	or     %esi,%edi
   22293:	41 8d b4 0e dc bc 1b 	lea    -0x70e44324(%r14,%rcx,1),%esi
   2229a:	8f 
   2229b:	44 89 c1             	mov    %r8d,%ecx
   2229e:	01 f7                	add    %esi,%edi
   222a0:	c1 c1 05             	rol    $0x5,%ecx
   222a3:	44 89 c6             	mov    %r8d,%esi
   222a6:	01 cf                	add    %ecx,%edi
   222a8:	44 89 e1             	mov    %r12d,%ecx
   222ab:	44 8b 64 24 c0       	mov    -0x40(%rsp),%r12d
   222b0:	44 21 ce             	and    %r9d,%esi
   222b3:	44 31 e1             	xor    %r12d,%ecx
   222b6:	33 4c 24 c4          	xor    -0x3c(%rsp),%ecx
   222ba:	33 4c 24 c8          	xor    -0x38(%rsp),%ecx
   222be:	d1 c1                	rol    %ecx
   222c0:	89 4c 24 a8          	mov    %ecx,-0x58(%rsp)
   222c4:	44 89 c1             	mov    %r8d,%ecx
   222c7:	41 c1 c8 02          	ror    $0x2,%r8d
   222cb:	44 09 c9             	or     %r9d,%ecx
   222ce:	21 c1                	and    %eax,%ecx
   222d0:	09 ce                	or     %ecx,%esi
   222d2:	8b 4c 24 a8          	mov    -0x58(%rsp),%ecx
   222d6:	8d 8c 11 dc bc 1b 8f 	lea    -0x70e44324(%rcx,%rdx,1),%ecx
   222dd:	89 fa                	mov    %edi,%edx
   222df:	01 ce                	add    %ecx,%esi
   222e1:	c1 c2 05             	rol    $0x5,%edx
   222e4:	89 f9                	mov    %edi,%ecx
   222e6:	01 d6                	add    %edx,%esi
   222e8:	89 ea                	mov    %ebp,%edx
   222ea:	44 21 c1             	and    %r8d,%ecx
   222ed:	44 31 da             	xor    %r11d,%edx
   222f0:	33 54 24 d0          	xor    -0x30(%rsp),%edx
   222f4:	44 31 ea             	xor    %r13d,%edx
   222f7:	d1 c2                	rol    %edx
   222f9:	89 d5                	mov    %edx,%ebp
   222fb:	89 fa                	mov    %edi,%edx
   222fd:	44 09 c2             	or     %r8d,%edx
   22300:	89 6c 24 c0          	mov    %ebp,-0x40(%rsp)
   22304:	44 21 ca             	and    %r9d,%edx
   22307:	09 d1                	or     %edx,%ecx
   22309:	8d 94 05 dc bc 1b 8f 	lea    -0x70e44324(%rbp,%rax,1),%edx
   22310:	8b 6c 24 d8          	mov    -0x28(%rsp),%ebp
   22314:	89 f0                	mov    %esi,%eax
   22316:	01 d1                	add    %edx,%ecx
   22318:	c1 c0 05             	rol    $0x5,%eax
   2231b:	41 31 ec             	xor    %ebp,%r12d
   2231e:	01 c1                	add    %eax,%ecx
   22320:	c1 cf 02             	ror    $0x2,%edi
   22323:	44 89 e0             	mov    %r12d,%eax
   22326:	31 d8                	xor    %ebx,%eax
   22328:	44 31 f0             	xor    %r14d,%eax
   2232b:	89 c2                	mov    %eax,%edx
   2232d:	89 f0                	mov    %esi,%eax
   2232f:	d1 c2                	rol    %edx
   22331:	09 f8                	or     %edi,%eax
   22333:	41 89 d4             	mov    %edx,%r12d
   22336:	89 f2                	mov    %esi,%edx
   22338:	44 21 c0             	and    %r8d,%eax
   2233b:	c1 ce 02             	ror    $0x2,%esi
   2233e:	21 fa                	and    %edi,%edx
   22340:	44 89 64 24 cc       	mov    %r12d,-0x34(%rsp)
   22345:	09 c2                	or     %eax,%edx
   22347:	43 8d 84 0c dc bc 1b 	lea    -0x70e44324(%r12,%r9,1),%eax
   2234e:	8f 
   2234f:	41 89 c9             	mov    %ecx,%r9d
   22352:	44 8b 64 24 ac       	mov    -0x54(%rsp),%r12d
   22357:	01 c2                	add    %eax,%edx
   22359:	41 c1 c1 05          	rol    $0x5,%r9d
   2235d:	89 c8                	mov    %ecx,%eax
   2235f:	44 01 ca             	add    %r9d,%edx
   22362:	41 89 c9             	mov    %ecx,%r9d
   22365:	45 31 e3             	xor    %r12d,%r11d
   22368:	44 33 5c 24 d4       	xor    -0x2c(%rsp),%r11d
   2236d:	41 09 f1             	or     %esi,%r9d
   22370:	44 33 5c 24 a8       	xor    -0x58(%rsp),%r11d
   22375:	21 f0                	and    %esi,%eax
   22377:	c1 c9 02             	ror    $0x2,%ecx
   2237a:	41 d1 c3             	rol    %r11d
   2237d:	41 21 f9             	and    %edi,%r9d
   22380:	44 09 c8             	or     %r9d,%eax
   22383:	44 89 5c 24 ac       	mov    %r11d,-0x54(%rsp)
   22388:	47 8d 8c 03 dc bc 1b 	lea    -0x70e44324(%r11,%r8,1),%r9d
   2238f:	8f 
   22390:	44 8b 5c 24 b0       	mov    -0x50(%rsp),%r11d
   22395:	44 01 c8             	add    %r9d,%eax
   22398:	41 89 e9             	mov    %ebp,%r9d
   2239b:	41 89 d0             	mov    %edx,%r8d
   2239e:	89 d5                	mov    %edx,%ebp
   223a0:	45 31 d9             	xor    %r11d,%r9d
   223a3:	41 c1 c0 05          	rol    $0x5,%r8d
   223a7:	45 31 d1             	xor    %r10d,%r9d
   223aa:	44 33 4c 24 c0       	xor    -0x40(%rsp),%r9d
   223af:	44 01 c0             	add    %r8d,%eax
   223b2:	41 d1 c1             	rol    %r9d
   223b5:	09 cd                	or     %ecx,%ebp
   223b7:	41 89 e8             	mov    %ebp,%r8d
   223ba:	89 d5                	mov    %edx,%ebp
   223bc:	c1 ca 02             	ror    $0x2,%edx
   223bf:	44 89 4c 24 b0       	mov    %r9d,-0x50(%rsp)
   223c4:	41 21 f0             	and    %esi,%r8d
   223c7:	21 cd                	and    %ecx,%ebp
   223c9:	44 09 c5             	or     %r8d,%ebp
   223cc:	45 8d 84 39 dc bc 1b 	lea    -0x70e44324(%r9,%rdi,1),%r8d
   223d3:	8f 
   223d4:	89 c7                	mov    %eax,%edi
   223d6:	45 89 f9             	mov    %r15d,%r9d
   223d9:	44 01 c5             	add    %r8d,%ebp
   223dc:	45 89 e0             	mov    %r12d,%r8d
   223df:	c1 c7 05             	rol    $0x5,%edi
   223e2:	45 31 f8             	xor    %r15d,%r8d
   223e5:	44 33 44 24 c8       	xor    -0x38(%rsp),%r8d
   223ea:	44 33 44 24 cc       	xor    -0x34(%rsp),%r8d
   223ef:	01 fd                	add    %edi,%ebp
   223f1:	41 d1 c0             	rol    %r8d
   223f4:	89 c7                	mov    %eax,%edi
   223f6:	45 89 c4             	mov    %r8d,%r12d
   223f9:	09 d7                	or     %edx,%edi
   223fb:	41 89 c0             	mov    %eax,%r8d
   223fe:	c1 c8 02             	ror    $0x2,%eax
   22401:	21 cf                	and    %ecx,%edi
   22403:	41 21 d0             	and    %edx,%r8d
   22406:	44 89 64 24 b4       	mov    %r12d,-0x4c(%rsp)
   2240b:	44 8b 7c 24 d4       	mov    -0x2c(%rsp),%r15d
   22410:	41 09 f8             	or     %edi,%r8d
   22413:	41 8d bc 34 dc bc 1b 	lea    -0x70e44324(%r12,%rsi,1),%edi
   2241a:	8f 
   2241b:	44 8b 64 24 c4       	mov    -0x3c(%rsp),%r12d
   22420:	89 ee                	mov    %ebp,%esi
   22422:	41 01 f8             	add    %edi,%r8d
   22425:	c1 c6 05             	rol    $0x5,%esi
   22428:	45 31 e3             	xor    %r12d,%r11d
   2242b:	41 01 f0             	add    %esi,%r8d
   2242e:	89 d6                	mov    %edx,%esi
   22430:	44 89 df             	mov    %r11d,%edi
   22433:	31 c6                	xor    %eax,%esi
   22435:	44 8b 5c 24 d0       	mov    -0x30(%rsp),%r11d
   2243a:	44 31 ef             	xor    %r13d,%edi
   2243d:	33 7c 24 ac          	xor    -0x54(%rsp),%edi
   22441:	31 ee                	xor    %ebp,%esi
   22443:	c1 cd 02             	ror    $0x2,%ebp
   22446:	d1 c7                	rol    %edi
   22448:	45 31 d9             	xor    %r11d,%r9d
   2244b:	8d 8c 0f d6 c1 62 ca 	lea    -0x359d3e2a(%rdi,%rcx,1),%ecx
   22452:	45 31 f1             	xor    %r14d,%r9d
   22455:	89 7c 24 b8          	mov    %edi,-0x48(%rsp)
   22459:	01 ce                	add    %ecx,%esi
   2245b:	44 89 c1             	mov    %r8d,%ecx
   2245e:	c1 c1 05             	rol    $0x5,%ecx
   22461:	01 ce                	add    %ecx,%esi
   22463:	89 c1                	mov    %eax,%ecx
   22465:	44 33 4c 24 b0       	xor    -0x50(%rsp),%r9d
   2246a:	45 31 fb             	xor    %r15d,%r11d
   2246d:	31 e9                	xor    %ebp,%ecx
   2246f:	41 d1 c1             	rol    %r9d
   22472:	89 cf                	mov    %ecx,%edi
   22474:	41 8d 94 11 d6 c1 62 	lea    -0x359d3e2a(%r9,%rdx,1),%edx
   2247b:	ca 
   2247c:	44 89 e1             	mov    %r12d,%ecx
   2247f:	41 89 ec             	mov    %ebp,%r12d
   22482:	44 31 c7             	xor    %r8d,%edi
   22485:	41 c1 c8 02          	ror    $0x2,%r8d
   22489:	31 d9                	xor    %ebx,%ecx
   2248b:	33 4c 24 a8          	xor    -0x58(%rsp),%ecx
   2248f:	01 d7                	add    %edx,%edi
   22491:	89 f2                	mov    %esi,%edx
   22493:	33 4c 24 b4          	xor    -0x4c(%rsp),%ecx
   22497:	45 31 c4             	xor    %r8d,%r12d
   2249a:	c1 c2 05             	rol    $0x5,%edx
   2249d:	d1 c1                	rol    %ecx
   2249f:	44 89 4c 24 c4       	mov    %r9d,-0x3c(%rsp)
   224a4:	01 d7                	add    %edx,%edi
   224a6:	44 89 e2             	mov    %r12d,%edx
   224a9:	8d 84 01 d6 c1 62 ca 	lea    -0x359d3e2a(%rcx,%rax,1),%eax
   224b0:	45 89 c4             	mov    %r8d,%r12d
   224b3:	31 f2                	xor    %esi,%edx
   224b5:	c1 ce 02             	ror    $0x2,%esi
   224b8:	89 4c 24 bc          	mov    %ecx,-0x44(%rsp)
   224bc:	8b 4c 24 cc          	mov    -0x34(%rsp),%ecx
   224c0:	01 c2                	add    %eax,%edx
   224c2:	89 f8                	mov    %edi,%eax
   224c4:	41 31 f4             	xor    %esi,%r12d
   224c7:	c1 c0 05             	rol    $0x5,%eax
   224ca:	41 31 fc             	xor    %edi,%r12d
   224cd:	c1 cf 02             	ror    $0x2,%edi
   224d0:	01 c2                	add    %eax,%edx
   224d2:	8b 44 24 c0          	mov    -0x40(%rsp),%eax
   224d6:	44 31 d8             	xor    %r11d,%eax
   224d9:	33 44 24 b8          	xor    -0x48(%rsp),%eax
   224dd:	41 89 c3             	mov    %eax,%r11d
   224e0:	41 d1 c3             	rol    %r11d
   224e3:	41 8d 84 2b d6 c1 62 	lea    -0x359d3e2a(%r11,%rbp,1),%eax
   224ea:	ca 
   224eb:	89 d5                	mov    %edx,%ebp
   224ed:	44 89 5c 24 d0       	mov    %r11d,-0x30(%rsp)
   224f2:	44 8b 5c 24 c8       	mov    -0x38(%rsp),%r11d
   224f7:	41 01 c4             	add    %eax,%r12d
   224fa:	c1 c5 05             	rol    $0x5,%ebp
   224fd:	41 01 ec             	add    %ebp,%r12d
   22500:	89 dd                	mov    %ebx,%ebp
   22502:	44 31 d5             	xor    %r10d,%ebp
   22505:	31 e9                	xor    %ebp,%ecx
   22507:	89 f5                	mov    %esi,%ebp
   22509:	44 31 c9             	xor    %r9d,%ecx
   2250c:	41 89 f9             	mov    %edi,%r9d
   2250f:	89 cb                	mov    %ecx,%ebx
   22511:	d1 c3                	rol    %ebx
   22513:	31 fd                	xor    %edi,%ebp
   22515:	45 31 df             	xor    %r11d,%r15d
   22518:	45 31 ea             	xor    %r13d,%r10d
   2251b:	42 8d 84 03 d6 c1 62 	lea    -0x359d3e2a(%rbx,%r8,1),%eax
   22522:	ca 
   22523:	31 d5                	xor    %edx,%ebp
   22525:	c1 ca 02             	ror    $0x2,%edx
   22528:	89 5c 24 d4          	mov    %ebx,-0x2c(%rsp)
   2252c:	01 c5                	add    %eax,%ebp
   2252e:	44 89 e0             	mov    %r12d,%eax
   22531:	41 31 d1             	xor    %edx,%r9d
   22534:	89 1d a6 4f 23 00    	mov    %ebx,0x234fa6(%rip)        # 2574e0 <workspace.3602>
   2253a:	c1 c0 05             	rol    $0x5,%eax
   2253d:	44 89 cb             	mov    %r9d,%ebx
   22540:	44 8b 4c 24 b0       	mov    -0x50(%rsp),%r9d
   22545:	44 8b 44 24 b4       	mov    -0x4c(%rsp),%r8d
   2254a:	01 c5                	add    %eax,%ebp
   2254c:	8b 44 24 ac          	mov    -0x54(%rsp),%eax
   22550:	44 31 e3             	xor    %r12d,%ebx
   22553:	41 c1 cc 02          	ror    $0x2,%r12d
   22557:	45 31 d1             	xor    %r10d,%r9d
   2255a:	41 89 d2             	mov    %edx,%r10d
   2255d:	44 33 4c 24 d0       	xor    -0x30(%rsp),%r9d
   22562:	45 31 f3             	xor    %r14d,%r11d
   22565:	44 31 f8             	xor    %r15d,%eax
   22568:	33 44 24 bc          	xor    -0x44(%rsp),%eax
   2256c:	41 d1 c1             	rol    %r9d
   2256f:	45 31 e2             	xor    %r12d,%r10d
   22572:	d1 c0                	rol    %eax
   22574:	41 31 ea             	xor    %ebp,%r10d
   22577:	45 31 d8             	xor    %r11d,%r8d
   2257a:	44 33 44 24 d4       	xor    -0x2c(%rsp),%r8d
   2257f:	8d 8c 30 d6 c1 62 ca 	lea    -0x359d3e2a(%rax,%rsi,1),%ecx
   22586:	89 ee                	mov    %ebp,%esi
   22588:	c1 cd 02             	ror    $0x2,%ebp
   2258b:	89 05 53 4f 23 00    	mov    %eax,0x234f53(%rip)        # 2574e4 <workspace.3602+0x4>
   22591:	c1 c6 05             	rol    $0x5,%esi
   22594:	01 cb                	add    %ecx,%ebx
   22596:	41 8d 8c 39 d6 c1 62 	lea    -0x359d3e2a(%r9,%rdi,1),%ecx
   2259d:	ca 
   2259e:	41 d1 c0             	rol    %r8d
   225a1:	01 f3                	add    %esi,%ebx
   225a3:	41 01 ca             	add    %ecx,%r10d
   225a6:	41 8d 94 10 d6 c1 62 	lea    -0x359d3e2a(%r8,%rdx,1),%edx
   225ad:	ca 
   225ae:	8b 4c 24 a8          	mov    -0x58(%rsp),%ecx
   225b2:	89 df                	mov    %ebx,%edi
   225b4:	8b 74 24 c4          	mov    -0x3c(%rsp),%esi
   225b8:	44 89 0d 29 4f 23 00 	mov    %r9d,0x234f29(%rip)        # 2574e8 <workspace.3602+0x8>
   225bf:	c1 c7 05             	rol    $0x5,%edi
   225c2:	44 89 05 23 4f 23 00 	mov    %r8d,0x234f23(%rip)        # 2574ec <workspace.3602+0xc>
   225c9:	41 01 fa             	add    %edi,%r10d
   225cc:	44 89 e7             	mov    %r12d,%edi
   225cf:	31 ef                	xor    %ebp,%edi
   225d1:	41 89 fb             	mov    %edi,%r11d
   225d4:	44 89 d7             	mov    %r10d,%edi
   225d7:	41 31 db             	xor    %ebx,%r11d
   225da:	41 01 d3             	add    %edx,%r11d
   225dd:	c1 c7 05             	rol    $0x5,%edi
   225e0:	41 31 cd             	xor    %ecx,%r13d
   225e3:	41 01 fb             	add    %edi,%r11d
   225e6:	8b 7c 24 b8          	mov    -0x48(%rsp),%edi
   225ea:	c1 cb 02             	ror    $0x2,%ebx
   225ed:	44 31 ef             	xor    %r13d,%edi
   225f0:	41 89 ed             	mov    %ebp,%r13d
   225f3:	31 c7                	xor    %eax,%edi
   225f5:	41 31 dd             	xor    %ebx,%r13d
   225f8:	d1 c7                	rol    %edi
   225fa:	45 89 ef             	mov    %r13d,%r15d
   225fd:	45 89 dd             	mov    %r11d,%r13d
   22600:	42 8d 94 27 d6 c1 62 	lea    -0x359d3e2a(%rdi,%r12,1),%edx
   22607:	ca 
   22608:	44 8b 64 24 c0       	mov    -0x40(%rsp),%r12d
   2260d:	45 31 d7             	xor    %r10d,%r15d
   22610:	41 c1 c5 05          	rol    $0x5,%r13d
   22614:	41 c1 ca 02          	ror    $0x2,%r10d
   22618:	41 01 d7             	add    %edx,%r15d
   2261b:	89 3d cf 4e 23 00    	mov    %edi,0x234ecf(%rip)        # 2574f0 <workspace.3602+0x10>
   22621:	45 31 e6             	xor    %r12d,%r14d
   22624:	45 01 ef             	add    %r13d,%r15d
   22627:	44 31 f6             	xor    %r14d,%esi
   2262a:	41 89 de             	mov    %ebx,%r14d
   2262d:	45 89 fd             	mov    %r15d,%r13d
   22630:	44 31 ce             	xor    %r9d,%esi
   22633:	45 31 d6             	xor    %r10d,%r14d
   22636:	41 c1 c5 05          	rol    $0x5,%r13d
   2263a:	d1 c6                	rol    %esi
   2263c:	45 31 de             	xor    %r11d,%r14d
   2263f:	41 c1 cb 02          	ror    $0x2,%r11d
   22643:	8d 94 2e d6 c1 62 ca 	lea    -0x359d3e2a(%rsi,%rbp,1),%edx
   2264a:	89 35 a4 4e 23 00    	mov    %esi,0x234ea4(%rip)        # 2574f4 <workspace.3602+0x14>
   22650:	8b 6c 24 cc          	mov    -0x34(%rsp),%ebp
   22654:	41 01 d6             	add    %edx,%r14d
   22657:	31 e9                	xor    %ebp,%ecx
   22659:	33 4c 24 bc          	xor    -0x44(%rsp),%ecx
   2265d:	45 01 ee             	add    %r13d,%r14d
   22660:	45 89 d5             	mov    %r10d,%r13d
   22663:	44 31 c1             	xor    %r8d,%ecx
   22666:	45 31 dd             	xor    %r11d,%r13d
   22669:	d1 c1                	rol    %ecx
   2266b:	45 31 fd             	xor    %r15d,%r13d
   2266e:	8d 94 19 d6 c1 62 ca 	lea    -0x359d3e2a(%rcx,%rbx,1),%edx
   22675:	8b 5c 24 d4          	mov    -0x2c(%rsp),%ebx
   22679:	89 0d 79 4e 23 00    	mov    %ecx,0x234e79(%rip)        # 2574f8 <workspace.3602+0x18>
   2267f:	41 01 d5             	add    %edx,%r13d
   22682:	44 89 f2             	mov    %r14d,%edx
   22685:	c1 c2 05             	rol    $0x5,%edx
   22688:	41 01 d5             	add    %edx,%r13d
   2268b:	8b 54 24 ac          	mov    -0x54(%rsp),%edx
   2268f:	41 c1 cf 02          	ror    $0x2,%r15d
   22693:	33 6c 24 b0          	xor    -0x50(%rsp),%ebp
   22697:	31 eb                	xor    %ebp,%ebx
   22699:	44 31 e2             	xor    %r12d,%edx
   2269c:	33 54 24 d0          	xor    -0x30(%rsp),%edx
   226a0:	45 89 dc             	mov    %r11d,%r12d
   226a3:	31 f3                	xor    %esi,%ebx
   226a5:	31 fa                	xor    %edi,%edx
   226a7:	45 31 fc             	xor    %r15d,%r12d
   226aa:	d1 c3                	rol    %ebx
   226ac:	d1 c2                	rol    %edx
   226ae:	45 31 f4             	xor    %r14d,%r12d
   226b1:	41 c1 ce 02          	ror    $0x2,%r14d
   226b5:	46 8d 9c 1b d6 c1 62 	lea    -0x359d3e2a(%rbx,%r11,1),%r11d
   226bc:	ca 
   226bd:	46 8d 94 12 d6 c1 62 	lea    -0x359d3e2a(%rdx,%r10,1),%r10d
   226c4:	ca 
   226c5:	89 1d 35 4e 23 00    	mov    %ebx,0x234e35(%rip)        # 257500 <workspace.3602+0x20>
   226cb:	45 01 d4             	add    %r10d,%r12d
   226ce:	45 89 ea             	mov    %r13d,%r10d
   226d1:	89 15 25 4e 23 00    	mov    %edx,0x234e25(%rip)        # 2574fc <workspace.3602+0x1c>
   226d7:	41 c1 c2 05          	rol    $0x5,%r10d
   226db:	45 01 d4             	add    %r10d,%r12d
   226de:	45 89 fa             	mov    %r15d,%r10d
   226e1:	45 31 f2             	xor    %r14d,%r10d
   226e4:	44 89 e5             	mov    %r12d,%ebp
   226e7:	45 31 ea             	xor    %r13d,%r10d
   226ea:	c1 c5 05             	rol    $0x5,%ebp
   226ed:	45 01 da             	add    %r11d,%r10d
   226f0:	44 8b 5c 24 ac       	mov    -0x54(%rsp),%r11d
   226f5:	44 33 5c 24 b4       	xor    -0x4c(%rsp),%r11d
   226fa:	41 c1 cd 02          	ror    $0x2,%r13d
   226fe:	41 31 c3             	xor    %eax,%r11d
   22701:	41 01 ea             	add    %ebp,%r10d
   22704:	44 89 f5             	mov    %r14d,%ebp
   22707:	41 31 cb             	xor    %ecx,%r11d
   2270a:	44 31 ed             	xor    %r13d,%ebp
   2270d:	41 d1 c3             	rol    %r11d
   22710:	44 31 e5             	xor    %r12d,%ebp
   22713:	41 c1 cc 02          	ror    $0x2,%r12d
   22717:	47 8d bc 3b d6 c1 62 	lea    -0x359d3e2a(%r11,%r15,1),%r15d
   2271e:	ca 
   2271f:	44 89 1d de 4d 23 00 	mov    %r11d,0x234dde(%rip)        # 257504 <workspace.3602+0x24>
   22726:	44 01 fd             	add    %r15d,%ebp
   22729:	45 89 d7             	mov    %r10d,%r15d
   2272c:	41 c1 c7 05          	rol    $0x5,%r15d
   22730:	44 01 fd             	add    %r15d,%ebp
   22733:	44 8b 7c 24 b0       	mov    -0x50(%rsp),%r15d
   22738:	44 33 7c 24 b8       	xor    -0x48(%rsp),%r15d
   2273d:	45 31 f9             	xor    %r15d,%r9d
   22740:	45 89 ef             	mov    %r13d,%r15d
   22743:	41 31 d1             	xor    %edx,%r9d
   22746:	45 31 e7             	xor    %r12d,%r15d
   22749:	41 d1 c1             	rol    %r9d
   2274c:	45 31 d7             	xor    %r10d,%r15d
   2274f:	41 c1 ca 02          	ror    $0x2,%r10d
   22753:	47 8d b4 31 d6 c1 62 	lea    -0x359d3e2a(%r9,%r14,1),%r14d
   2275a:	ca 
   2275b:	44 89 0d a6 4d 23 00 	mov    %r9d,0x234da6(%rip)        # 257508 <workspace.3602+0x28>
   22762:	45 01 fe             	add    %r15d,%r14d
   22765:	41 89 ef             	mov    %ebp,%r15d
   22768:	41 c1 c7 05          	rol    $0x5,%r15d
   2276c:	45 01 fe             	add    %r15d,%r14d
   2276f:	45 89 d7             	mov    %r10d,%r15d
   22772:	44 8b 54 24 b4       	mov    -0x4c(%rsp),%r10d
   22777:	44 33 54 24 c4       	xor    -0x3c(%rsp),%r10d
   2277c:	45 31 d0             	xor    %r10d,%r8d
   2277f:	45 89 e2             	mov    %r12d,%r10d
   22782:	45 31 fa             	xor    %r15d,%r10d
   22785:	44 31 c3             	xor    %r8d,%ebx
   22788:	d1 c3                	rol    %ebx
   2278a:	45 89 d0             	mov    %r10d,%r8d
   2278d:	45 89 f2             	mov    %r14d,%r10d
   22790:	41 31 e8             	xor    %ebp,%r8d
   22793:	41 c1 c2 05          	rol    $0x5,%r10d
   22797:	46 8d ac 2b d6 c1 62 	lea    -0x359d3e2a(%rbx,%r13,1),%r13d
   2279e:	ca 
   2279f:	89 1d 67 4d 23 00    	mov    %ebx,0x234d67(%rip)        # 25750c <workspace.3602+0x2c>
   227a5:	45 01 c5             	add    %r8d,%r13d
   227a8:	44 8b 44 24 b8       	mov    -0x48(%rsp),%r8d
   227ad:	44 33 44 24 bc       	xor    -0x44(%rsp),%r8d
   227b2:	c1 cd 02             	ror    $0x2,%ebp
   227b5:	44 31 c7             	xor    %r8d,%edi
   227b8:	45 01 d5             	add    %r10d,%r13d
   227bb:	45 89 fa             	mov    %r15d,%r10d
   227be:	44 8b 44 24 bc       	mov    -0x44(%rsp),%r8d
   227c3:	41 31 fb             	xor    %edi,%r11d
   227c6:	41 31 ea             	xor    %ebp,%r10d
   227c9:	41 d1 c3             	rol    %r11d
   227cc:	45 31 f2             	xor    %r14d,%r10d
   227cf:	41 c1 ce 02          	ror    $0x2,%r14d
   227d3:	43 8d bc 23 d6 c1 62 	lea    -0x359d3e2a(%r11,%r12,1),%edi
   227da:	ca 
   227db:	44 8b 64 24 d0       	mov    -0x30(%rsp),%r12d
   227e0:	44 89 1d 29 4d 23 00 	mov    %r11d,0x234d29(%rip)        # 257510 <workspace.3602+0x30>
   227e7:	41 01 fa             	add    %edi,%r10d
   227ea:	44 89 ef             	mov    %r13d,%edi
   227ed:	c1 c7 05             	rol    $0x5,%edi
   227f0:	41 01 fa             	add    %edi,%r10d
   227f3:	8b 7c 24 c4          	mov    -0x3c(%rsp),%edi
   227f7:	44 31 e7             	xor    %r12d,%edi
   227fa:	31 fe                	xor    %edi,%esi
   227fc:	89 ef                	mov    %ebp,%edi
   227fe:	41 31 f1             	xor    %esi,%r9d
   22801:	44 31 f7             	xor    %r14d,%edi
   22804:	44 33 44 24 d4       	xor    -0x2c(%rsp),%r8d
   22809:	44 31 e0             	xor    %r12d,%eax
   2280c:	41 d1 c1             	rol    %r9d
   2280f:	89 fe                	mov    %edi,%esi
   22811:	44 31 c1             	xor    %r8d,%ecx
   22814:	31 c2                	xor    %eax,%edx
   22816:	44 31 ee             	xor    %r13d,%esi
   22819:	43 8d bc 39 d6 c1 62 	lea    -0x359d3e2a(%r9,%r15,1),%edi
   22820:	ca 
   22821:	31 cb                	xor    %ecx,%ebx
   22823:	44 89 f1             	mov    %r14d,%ecx
   22826:	01 fe                	add    %edi,%esi
   22828:	41 c1 cd 02          	ror    $0x2,%r13d
   2282c:	44 89 d7             	mov    %r10d,%edi
   2282f:	41 31 d3             	xor    %edx,%r11d
   22832:	d1 c3                	rol    %ebx
   22834:	8b 54 24 dc          	mov    -0x24(%rsp),%edx
   22838:	c1 c7 05             	rol    $0x5,%edi
   2283b:	44 31 e9             	xor    %r13d,%ecx
   2283e:	01 fe                	add    %edi,%esi
   22840:	44 31 d1             	xor    %r10d,%ecx
   22843:	8d bc 2b d6 c1 62 ca 	lea    -0x359d3e2a(%rbx,%rbp,1),%edi
   2284a:	41 d1 c3             	rol    %r11d
   2284d:	01 f9                	add    %edi,%ecx
   2284f:	41 8d 84 13 d6 c1 62 	lea    -0x359d3e2a(%r11,%rdx,1),%eax
   22856:	ca 
   22857:	89 f7                	mov    %esi,%edi
   22859:	41 c1 ca 02          	ror    $0x2,%r10d
   2285d:	44 01 f0             	add    %r14d,%eax
   22860:	c1 c7 05             	rol    $0x5,%edi
   22863:	45 89 ee             	mov    %r13d,%r14d
   22866:	89 1d ac 4c 23 00    	mov    %ebx,0x234cac(%rip)        # 257518 <workspace.3602+0x38>
   2286c:	01 f9                	add    %edi,%ecx
   2286e:	45 31 d6             	xor    %r10d,%r14d
   22871:	44 89 0d 9c 4c 23 00 	mov    %r9d,0x234c9c(%rip)        # 257514 <workspace.3602+0x34>
   22878:	41 31 f6             	xor    %esi,%r14d
   2287b:	89 ca                	mov    %ecx,%edx
   2287d:	03 4c 24 e0          	add    -0x20(%rsp),%ecx
   22881:	c1 ce 02             	ror    $0x2,%esi
   22884:	41 01 c6             	add    %eax,%r14d
   22887:	c1 c2 05             	rol    $0x5,%edx
   2288a:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
   2288f:	44 89 1d 86 4c 23 00 	mov    %r11d,0x234c86(%rip)        # 25751c <workspace.3602+0x3c>
   22896:	41 01 d6             	add    %edx,%r14d
   22899:	44 89 30             	mov    %r14d,(%rax)
   2289c:	89 48 04             	mov    %ecx,0x4(%rax)
   2289f:	03 74 24 e4          	add    -0x1c(%rsp),%esi
   228a3:	44 03 54 24 e8       	add    -0x18(%rsp),%r10d
   228a8:	44 03 6c 24 ec       	add    -0x14(%rsp),%r13d
   228ad:	89 70 08             	mov    %esi,0x8(%rax)
   228b0:	44 89 50 0c          	mov    %r10d,0xc(%rax)
   228b4:	44 89 68 10          	mov    %r13d,0x10(%rax)
   228b8:	5b                   	pop    %rbx
   228b9:	5d                   	pop    %rbp
   228ba:	41 5c                	pop    %r12
   228bc:	41 5d                	pop    %r13
   228be:	41 5e                	pop    %r14
   228c0:	41 5f                	pop    %r15
   228c2:	c3                   	retq   

00000000000228c3 <.annobin_SHA1_Init.start>:
   228c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   228ca:	00 00 00 00 
   228ce:	66 90                	xchg   %ax,%ax

00000000000228d0 <SHA1_Init>:
   228d0:	f3 0f 1e fa          	endbr64 
   228d4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
   228db:	ab cd ef 
   228de:	c7 47 18 00 00 00 00 	movl   $0x0,0x18(%rdi)
   228e5:	48 89 07             	mov    %rax,(%rdi)
   228e8:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
   228ef:	54 32 10 
   228f2:	48 89 47 08          	mov    %rax,0x8(%rdi)
   228f6:	b8 f0 e1 d2 c3       	mov    $0xc3d2e1f0,%eax
   228fb:	48 89 47 10          	mov    %rax,0x10(%rdi)
   228ff:	c3                   	retq   

0000000000022900 <SHA1_Update>:
   22900:	f3 0f 1e fa          	endbr64 
   22904:	41 57                	push   %r15
   22906:	41 56                	push   %r14
   22908:	41 55                	push   %r13
   2290a:	49 89 f5             	mov    %rsi,%r13
   2290d:	41 54                	push   %r12
   2290f:	55                   	push   %rbp
   22910:	48 89 d5             	mov    %rdx,%rbp
   22913:	53                   	push   %rbx
   22914:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
   2291b:	00 
   2291c:	48 83 ec 08          	sub    $0x8,%rsp
   22920:	8b 47 14             	mov    0x14(%rdi),%eax
   22923:	41 89 c6             	mov    %eax,%r14d
   22926:	8d 14 d0             	lea    (%rax,%rdx,8),%edx
   22929:	8b 47 18             	mov    0x18(%rdi),%eax
   2292c:	41 c1 ee 03          	shr    $0x3,%r14d
   22930:	89 57 14             	mov    %edx,0x14(%rdi)
   22933:	41 83 e6 3f          	and    $0x3f,%r14d
   22937:	48 39 ca             	cmp    %rcx,%rdx
   2293a:	48 89 ea             	mov    %rbp,%rdx
   2293d:	83 d0 00             	adc    $0x0,%eax
   22940:	48 c1 ea 1d          	shr    $0x1d,%rdx
   22944:	4e 8d 7c 37 1c       	lea    0x1c(%rdi,%r14,1),%r15
   22949:	01 d0                	add    %edx,%eax
   2294b:	89 47 18             	mov    %eax,0x18(%rdi)
   2294e:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   22952:	48 83 f8 3f          	cmp    $0x3f,%rax
   22956:	77 20                	ja     22978 <SHA1_Update+0x78>
   22958:	48 83 c4 08          	add    $0x8,%rsp
  return __builtin___memcpy_chk (__dest, __src, __len,
   2295c:	48 89 ea             	mov    %rbp,%rdx
   2295f:	4c 89 ee             	mov    %r13,%rsi
   22962:	4c 89 ff             	mov    %r15,%rdi
   22965:	5b                   	pop    %rbx
   22966:	5d                   	pop    %rbp
   22967:	41 5c                	pop    %r12
   22969:	41 5d                	pop    %r13
   2296b:	41 5e                	pop    %r14
   2296d:	41 5f                	pop    %r15
   2296f:	e9 9c d9 fe ff       	jmpq   10310 <memcpy@plt>
   22974:	0f 1f 40 00          	nopl   0x0(%rax)
   22978:	bb 40 00 00 00       	mov    $0x40,%ebx
   2297d:	49 89 fc             	mov    %rdi,%r12
   22980:	4c 29 f3             	sub    %r14,%rbx
   22983:	89 d8                	mov    %ebx,%eax
   22985:	83 fb 08             	cmp    $0x8,%ebx
   22988:	73 66                	jae    229f0 <SHA1_Update+0xf0>
   2298a:	f6 c3 04             	test   $0x4,%bl
   2298d:	0f 85 ba 00 00 00    	jne    22a4d <SHA1_Update+0x14d>
   22993:	85 c0                	test   %eax,%eax
   22995:	74 0e                	je     229a5 <SHA1_Update+0xa5>
   22997:	0f b6 16             	movzbl (%rsi),%edx
   2299a:	41 88 17             	mov    %dl,(%r15)
   2299d:	a8 02                	test   $0x2,%al
   2299f:	0f 85 bb 00 00 00    	jne    22a60 <SHA1_Update+0x160>
   229a5:	4d 8d 7c 24 1c       	lea    0x1c(%r12),%r15
   229aa:	4c 89 e7             	mov    %r12,%rdi
   229ad:	4c 89 fe             	mov    %r15,%rsi
   229b0:	e8 3b ed ff ff       	callq  216f0 <SHA1_Transform>
   229b5:	b8 7f 00 00 00       	mov    $0x7f,%eax
   229ba:	4c 29 f0             	sub    %r14,%rax
   229bd:	48 39 c5             	cmp    %rax,%rbp
   229c0:	76 7e                	jbe    22a40 <SHA1_Update+0x140>
   229c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   229c8:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
   229cd:	4c 89 e7             	mov    %r12,%rdi
   229d0:	e8 1b ed ff ff       	callq  216f0 <SHA1_Transform>
   229d5:	48 8d 43 7f          	lea    0x7f(%rbx),%rax
   229d9:	48 83 c3 40          	add    $0x40,%rbx
   229dd:	48 39 c5             	cmp    %rax,%rbp
   229e0:	77 e6                	ja     229c8 <SHA1_Update+0xc8>
   229e2:	49 01 dd             	add    %rbx,%r13
   229e5:	48 29 dd             	sub    %rbx,%rbp
   229e8:	e9 6b ff ff ff       	jmpq   22958 <SHA1_Update+0x58>
   229ed:	0f 1f 00             	nopl   (%rax)
   229f0:	48 8b 06             	mov    (%rsi),%rax
   229f3:	4d 89 e8             	mov    %r13,%r8
   229f6:	49 89 07             	mov    %rax,(%r15)
   229f9:	89 d8                	mov    %ebx,%eax
   229fb:	48 8b 54 06 f8       	mov    -0x8(%rsi,%rax,1),%rdx
   22a00:	49 8d 77 08          	lea    0x8(%r15),%rsi
   22a04:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   22a08:	49 89 54 07 f8       	mov    %rdx,-0x8(%r15,%rax,1)
   22a0d:	49 29 f7             	sub    %rsi,%r15
   22a10:	42 8d 04 3b          	lea    (%rbx,%r15,1),%eax
   22a14:	4d 29 f8             	sub    %r15,%r8
   22a17:	83 e0 f8             	and    $0xfffffff8,%eax
   22a1a:	83 f8 08             	cmp    $0x8,%eax
   22a1d:	72 86                	jb     229a5 <SHA1_Update+0xa5>
   22a1f:	83 e0 f8             	and    $0xfffffff8,%eax
   22a22:	31 d2                	xor    %edx,%edx
   22a24:	89 d1                	mov    %edx,%ecx
   22a26:	83 c2 08             	add    $0x8,%edx
   22a29:	49 8b 3c 08          	mov    (%r8,%rcx,1),%rdi
   22a2d:	48 89 3c 0e          	mov    %rdi,(%rsi,%rcx,1)
   22a31:	39 c2                	cmp    %eax,%edx
   22a33:	72 ef                	jb     22a24 <SHA1_Update+0x124>
   22a35:	e9 6b ff ff ff       	jmpq   229a5 <SHA1_Update+0xa5>
   22a3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22a40:	49 01 dd             	add    %rbx,%r13
   22a43:	49 8d 6c 2e c0       	lea    -0x40(%r14,%rbp,1),%rbp
   22a48:	e9 0b ff ff ff       	jmpq   22958 <SHA1_Update+0x58>
   22a4d:	8b 16                	mov    (%rsi),%edx
   22a4f:	41 89 17             	mov    %edx,(%r15)
   22a52:	8b 54 06 fc          	mov    -0x4(%rsi,%rax,1),%edx
   22a56:	41 89 54 07 fc       	mov    %edx,-0x4(%r15,%rax,1)
   22a5b:	e9 45 ff ff ff       	jmpq   229a5 <SHA1_Update+0xa5>
   22a60:	0f b7 54 06 fe       	movzwl -0x2(%rsi,%rax,1),%edx
   22a65:	66 41 89 54 07 fe    	mov    %dx,-0x2(%r15,%rax,1)
   22a6b:	e9 35 ff ff ff       	jmpq   229a5 <SHA1_Update+0xa5>

0000000000022a70 <SHA1_Final>:
   22a70:	f3 0f 1e fa          	endbr64 
   22a74:	41 55                	push   %r13
   22a76:	41 54                	push   %r12
   22a78:	55                   	push   %rbp
   22a79:	48 89 f5             	mov    %rsi,%rbp
   22a7c:	53                   	push   %rbx
   22a7d:	48 89 fb             	mov    %rdi,%rbx
   22a80:	48 83 ec 18          	sub    $0x18,%rsp
   22a84:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   22a8b:	00 00 
   22a8d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   22a92:	31 c0                	xor    %eax,%eax
   22a94:	49 89 e4             	mov    %rsp,%r12
   22a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   22a9e:	00 00 
   22aa0:	31 d2                	xor    %edx,%edx
   22aa2:	83 f8 03             	cmp    $0x3,%eax
   22aa5:	89 c1                	mov    %eax,%ecx
   22aa7:	0f 96 c2             	setbe  %dl
   22aaa:	f7 d1                	not    %ecx
   22aac:	48 83 c2 04          	add    $0x4,%rdx
   22ab0:	83 e1 03             	and    $0x3,%ecx
   22ab3:	8b 54 93 04          	mov    0x4(%rbx,%rdx,4),%edx
   22ab7:	c1 e1 03             	shl    $0x3,%ecx
   22aba:	d3 ea                	shr    %cl,%edx
   22abc:	41 88 14 04          	mov    %dl,(%r12,%rax,1)
   22ac0:	48 83 c0 01          	add    $0x1,%rax
   22ac4:	48 83 f8 08          	cmp    $0x8,%rax
   22ac8:	75 d6                	jne    22aa0 <SHA1_Final+0x30>
   22aca:	ba 01 00 00 00       	mov    $0x1,%edx
   22acf:	48 8d 35 0a f5 01 00 	lea    0x1f50a(%rip),%rsi        # 41fe0 <f58_prefix+0x2b7d>
   22ad6:	48 89 df             	mov    %rbx,%rdi
   22ad9:	e8 22 fe ff ff       	callq  22900 <SHA1_Update>
   22ade:	8b 43 14             	mov    0x14(%rbx),%eax
   22ae1:	25 f8 01 00 00       	and    $0x1f8,%eax
   22ae6:	3d c0 01 00 00       	cmp    $0x1c0,%eax
   22aeb:	74 2a                	je     22b17 <SHA1_Final+0xa7>
   22aed:	4c 8d 2d ee f4 01 00 	lea    0x1f4ee(%rip),%r13        # 41fe2 <f58_prefix+0x2b7f>
   22af4:	0f 1f 40 00          	nopl   0x0(%rax)
   22af8:	ba 01 00 00 00       	mov    $0x1,%edx
   22afd:	4c 89 ee             	mov    %r13,%rsi
   22b00:	48 89 df             	mov    %rbx,%rdi
   22b03:	e8 f8 fd ff ff       	callq  22900 <SHA1_Update>
   22b08:	8b 43 14             	mov    0x14(%rbx),%eax
   22b0b:	25 f8 01 00 00       	and    $0x1f8,%eax
   22b10:	3d c0 01 00 00       	cmp    $0x1c0,%eax
   22b15:	75 e1                	jne    22af8 <SHA1_Final+0x88>
   22b17:	ba 08 00 00 00       	mov    $0x8,%edx
   22b1c:	4c 89 e6             	mov    %r12,%rsi
   22b1f:	48 89 df             	mov    %rbx,%rdi
   22b22:	e8 d9 fd ff ff       	callq  22900 <SHA1_Update>
   22b27:	31 c0                	xor    %eax,%eax
   22b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22b30:	89 c2                	mov    %eax,%edx
   22b32:	89 c1                	mov    %eax,%ecx
   22b34:	c1 ea 02             	shr    $0x2,%edx
   22b37:	f7 d1                	not    %ecx
   22b39:	8b 14 93             	mov    (%rbx,%rdx,4),%edx
   22b3c:	83 e1 03             	and    $0x3,%ecx
   22b3f:	c1 e1 03             	shl    $0x3,%ecx
   22b42:	d3 ea                	shr    %cl,%edx
   22b44:	88 54 05 00          	mov    %dl,0x0(%rbp,%rax,1)
   22b48:	48 83 c0 01          	add    $0x1,%rax
   22b4c:	48 83 f8 14          	cmp    $0x14,%rax
   22b50:	75 de                	jne    22b30 <SHA1_Final+0xc0>
  return __builtin___memset_chk (__dest, __ch, __len,
   22b52:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22b56:	48 8d 73 1c          	lea    0x1c(%rbx),%rsi
   22b5a:	48 89 df             	mov    %rbx,%rdi
   22b5d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   22b64:	00 
   22b65:	0f 11 43 1c          	movups %xmm0,0x1c(%rbx)
   22b69:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
   22b6d:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
   22b71:	0f 11 46 30          	movups %xmm0,0x30(%rsi)
   22b75:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
   22b7c:	48 c7 43 14 00 00 00 	movq   $0x0,0x14(%rbx)
   22b83:	00 
   22b84:	0f 11 03             	movups %xmm0,(%rbx)
   22b87:	e8 64 eb ff ff       	callq  216f0 <SHA1_Transform>
   22b8c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22b91:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   22b98:	00 00 
   22b9a:	75 0b                	jne    22ba7 <SHA1_Final+0x137>
   22b9c:	48 83 c4 18          	add    $0x18,%rsp
   22ba0:	5b                   	pop    %rbx
   22ba1:	5d                   	pop    %rbp
   22ba2:	41 5c                	pop    %r12
   22ba4:	41 5d                	pop    %r13
   22ba6:	c3                   	retq   
   22ba7:	e8 a4 d2 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000022bac <.annobin_SHA1_Final.end>:
   22bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000022bb0 <sha256_transform>:
   22bb0:	f3 0f 1e fa          	endbr64 
   22bb4:	41 57                	push   %r15
   22bb6:	41 56                	push   %r14
   22bb8:	41 55                	push   %r13
   22bba:	41 54                	push   %r12
   22bbc:	55                   	push   %rbp
   22bbd:	53                   	push   %rbx
   22bbe:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   22bc5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   22bca:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   22bcf:	49 8d 78 40          	lea    0x40(%r8),%rdi
   22bd3:	4c 89 c2             	mov    %r8,%rdx
   22bd6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   22bdd:	00 00 
   22bdf:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   22be6:	00 
   22be7:	31 c0                	xor    %eax,%eax
   22be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22bf0:	0f b6 06             	movzbl (%rsi),%eax
   22bf3:	0f b6 4e 01          	movzbl 0x1(%rsi),%ecx
   22bf7:	48 83 c2 04          	add    $0x4,%rdx
   22bfb:	48 83 c6 04          	add    $0x4,%rsi
   22bff:	c1 e1 10             	shl    $0x10,%ecx
   22c02:	c1 e0 18             	shl    $0x18,%eax
   22c05:	09 c8                	or     %ecx,%eax
   22c07:	0f b6 4e ff          	movzbl -0x1(%rsi),%ecx
   22c0b:	09 c8                	or     %ecx,%eax
   22c0d:	0f b6 4e fe          	movzbl -0x2(%rsi),%ecx
   22c11:	c1 e1 08             	shl    $0x8,%ecx
   22c14:	09 c8                	or     %ecx,%eax
   22c16:	89 42 fc             	mov    %eax,-0x4(%rdx)
   22c19:	48 39 d7             	cmp    %rdx,%rdi
   22c1c:	75 d2                	jne    22bf0 <sha256_transform+0x40>
   22c1e:	49 8d b8 c0 00 00 00 	lea    0xc0(%r8),%rdi
   22c25:	4c 89 c1             	mov    %r8,%rcx
   22c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   22c2f:	00 
   22c30:	8b 41 38             	mov    0x38(%rcx),%eax
   22c33:	8b 71 04             	mov    0x4(%rcx),%esi
   22c36:	48 83 c1 04          	add    $0x4,%rcx
   22c3a:	89 c2                	mov    %eax,%edx
   22c3c:	41 89 c1             	mov    %eax,%r9d
   22c3f:	c1 e8 0a             	shr    $0xa,%eax
   22c42:	41 c1 c1 0d          	rol    $0xd,%r9d
   22c46:	c1 c2 0f             	rol    $0xf,%edx
   22c49:	44 31 ca             	xor    %r9d,%edx
   22c4c:	41 89 f1             	mov    %esi,%r9d
   22c4f:	31 c2                	xor    %eax,%edx
   22c51:	8b 41 fc             	mov    -0x4(%rcx),%eax
   22c54:	03 41 20             	add    0x20(%rcx),%eax
   22c57:	41 c1 c1 0e          	rol    $0xe,%r9d
   22c5b:	01 c2                	add    %eax,%edx
   22c5d:	89 f0                	mov    %esi,%eax
   22c5f:	c1 ee 03             	shr    $0x3,%esi
   22c62:	c1 c8 07             	ror    $0x7,%eax
   22c65:	44 31 c8             	xor    %r9d,%eax
   22c68:	31 f0                	xor    %esi,%eax
   22c6a:	01 d0                	add    %edx,%eax
   22c6c:	89 41 3c             	mov    %eax,0x3c(%rcx)
   22c6f:	48 39 cf             	cmp    %rcx,%rdi
   22c72:	75 bc                	jne    22c30 <sha256_transform+0x80>
   22c74:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22c79:	48 8d 2d 84 f3 01 00 	lea    0x1f384(%rip),%rbp        # 42004 <k+0x4>
   22c80:	4d 8d b8 00 01 00 00 	lea    0x100(%r8),%r15
   22c87:	41 bc 98 2f 8a 42    	mov    $0x428a2f98,%r12d
   22c8d:	8b 70 50             	mov    0x50(%rax),%esi
   22c90:	44 8b 50 54          	mov    0x54(%rax),%r10d
   22c94:	44 8b 48 58          	mov    0x58(%rax),%r9d
   22c98:	44 8b 68 5c          	mov    0x5c(%rax),%r13d
   22c9c:	8b 48 60             	mov    0x60(%rax),%ecx
   22c9f:	8b 58 64             	mov    0x64(%rax),%ebx
   22ca2:	89 74 24 10          	mov    %esi,0x10(%rsp)
   22ca6:	44 8b 58 68          	mov    0x68(%rax),%r11d
   22caa:	8b 40 6c             	mov    0x6c(%rax),%eax
   22cad:	44 89 54 24 14       	mov    %r10d,0x14(%rsp)
   22cb2:	44 89 4c 24 18       	mov    %r9d,0x18(%rsp)
   22cb7:	44 89 6c 24 1c       	mov    %r13d,0x1c(%rsp)
   22cbc:	41 89 c6             	mov    %eax,%r14d
   22cbf:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   22cc3:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
   22cc7:	44 89 5c 24 28       	mov    %r11d,0x28(%rsp)
   22ccc:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   22cd0:	eb 23                	jmp    22cf5 <sha256_transform+0x145>
   22cd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22cd8:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   22cdc:	45 89 cd             	mov    %r9d,%r13d
   22cdf:	45 89 de             	mov    %r11d,%r14d
   22ce2:	45 89 d1             	mov    %r10d,%r9d
   22ce5:	41 89 db             	mov    %ebx,%r11d
   22ce8:	41 89 f2             	mov    %esi,%r10d
   22ceb:	89 cb                	mov    %ecx,%ebx
   22ced:	48 83 c5 04          	add    $0x4,%rbp
   22cf1:	89 f9                	mov    %edi,%ecx
   22cf3:	89 c6                	mov    %eax,%esi
   22cf5:	89 c8                	mov    %ecx,%eax
   22cf7:	89 ca                	mov    %ecx,%edx
   22cf9:	89 cf                	mov    %ecx,%edi
   22cfb:	49 83 c0 04          	add    $0x4,%r8
   22cff:	c1 ca 0b             	ror    $0xb,%edx
   22d02:	c1 c8 06             	ror    $0x6,%eax
   22d05:	21 df                	and    %ebx,%edi
   22d07:	31 d0                	xor    %edx,%eax
   22d09:	89 ca                	mov    %ecx,%edx
   22d0b:	c1 c2 07             	rol    $0x7,%edx
   22d0e:	31 c2                	xor    %eax,%edx
   22d10:	89 c8                	mov    %ecx,%eax
   22d12:	f7 d0                	not    %eax
   22d14:	44 21 d8             	and    %r11d,%eax
   22d17:	31 f8                	xor    %edi,%eax
   22d19:	89 f7                	mov    %esi,%edi
   22d1b:	01 d0                	add    %edx,%eax
   22d1d:	89 f2                	mov    %esi,%edx
   22d1f:	c1 cf 0d             	ror    $0xd,%edi
   22d22:	41 03 40 fc          	add    -0x4(%r8),%eax
   22d26:	c1 ca 02             	ror    $0x2,%edx
   22d29:	44 01 f0             	add    %r14d,%eax
   22d2c:	31 fa                	xor    %edi,%edx
   22d2e:	89 f7                	mov    %esi,%edi
   22d30:	44 01 e0             	add    %r12d,%eax
   22d33:	45 89 d4             	mov    %r10d,%r12d
   22d36:	c1 c7 0a             	rol    $0xa,%edi
   22d39:	45 21 cc             	and    %r9d,%r12d
   22d3c:	31 d7                	xor    %edx,%edi
   22d3e:	44 89 d2             	mov    %r10d,%edx
   22d41:	44 31 ca             	xor    %r9d,%edx
   22d44:	21 f2                	and    %esi,%edx
   22d46:	44 31 e2             	xor    %r12d,%edx
   22d49:	01 fa                	add    %edi,%edx
   22d4b:	42 8d 3c 28          	lea    (%rax,%r13,1),%edi
   22d4f:	01 d0                	add    %edx,%eax
   22d51:	4d 39 c7             	cmp    %r8,%r15
   22d54:	75 82                	jne    22cd8 <sha256_transform+0x128>
   22d56:	89 fa                	mov    %edi,%edx
   22d58:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   22d5c:	03 74 24 14          	add    0x14(%rsp),%esi
   22d60:	44 03 54 24 18       	add    0x18(%rsp),%r10d
   22d65:	44 03 4c 24 1c       	add    0x1c(%rsp),%r9d
   22d6a:	01 c7                	add    %eax,%edi
   22d6c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22d71:	03 54 24 20          	add    0x20(%rsp),%edx
   22d75:	03 4c 24 24          	add    0x24(%rsp),%ecx
   22d79:	03 5c 24 28          	add    0x28(%rsp),%ebx
   22d7d:	44 03 5c 24 2c       	add    0x2c(%rsp),%r11d
   22d82:	89 78 50             	mov    %edi,0x50(%rax)
   22d85:	89 70 54             	mov    %esi,0x54(%rax)
   22d88:	44 89 50 58          	mov    %r10d,0x58(%rax)
   22d8c:	44 89 48 5c          	mov    %r9d,0x5c(%rax)
   22d90:	89 50 60             	mov    %edx,0x60(%rax)
   22d93:	89 48 64             	mov    %ecx,0x64(%rax)
   22d96:	89 58 68             	mov    %ebx,0x68(%rax)
   22d99:	44 89 58 6c          	mov    %r11d,0x6c(%rax)
   22d9d:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
   22da4:	00 
   22da5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   22dac:	00 00 
   22dae:	75 12                	jne    22dc2 <sha256_transform+0x212>
   22db0:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   22db7:	5b                   	pop    %rbx
   22db8:	5d                   	pop    %rbp
   22db9:	41 5c                	pop    %r12
   22dbb:	41 5d                	pop    %r13
   22dbd:	41 5e                	pop    %r14
   22dbf:	41 5f                	pop    %r15
   22dc1:	c3                   	retq   
   22dc2:	e8 89 d0 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000022dc7 <.annobin_sha256_init.start>:
   22dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   22dce:	00 00 

0000000000022dd0 <sha256_init>:
   22dd0:	f3 0f 1e fa          	endbr64 
   22dd4:	48 b8 67 e6 09 6a 85 	movabs $0xbb67ae856a09e667,%rax
   22ddb:	ae 67 bb 
   22dde:	c7 47 40 00 00 00 00 	movl   $0x0,0x40(%rdi)
   22de5:	48 89 47 50          	mov    %rax,0x50(%rdi)
   22de9:	48 b8 72 f3 6e 3c 3a 	movabs $0xa54ff53a3c6ef372,%rax
   22df0:	f5 4f a5 
   22df3:	48 89 47 58          	mov    %rax,0x58(%rdi)
   22df7:	48 b8 7f 52 0e 51 8c 	movabs $0x9b05688c510e527f,%rax
   22dfe:	68 05 9b 
   22e01:	48 89 47 60          	mov    %rax,0x60(%rdi)
   22e05:	48 b8 ab d9 83 1f 19 	movabs $0x5be0cd191f83d9ab,%rax
   22e0c:	cd e0 5b 
   22e0f:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
   22e16:	00 
   22e17:	48 89 47 68          	mov    %rax,0x68(%rdi)
   22e1b:	c3                   	retq   

0000000000022e1c <.annobin_sha256_init.end>:
   22e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000022e20 <sha256_update>:
   22e20:	f3 0f 1e fa          	endbr64 
   22e24:	48 85 d2             	test   %rdx,%rdx
   22e27:	74 77                	je     22ea0 <sha256_update+0x80>
   22e29:	41 55                	push   %r13
   22e2b:	31 c9                	xor    %ecx,%ecx
   22e2d:	49 89 f5             	mov    %rsi,%r13
   22e30:	41 54                	push   %r12
   22e32:	49 89 d4             	mov    %rdx,%r12
   22e35:	55                   	push   %rbp
   22e36:	31 ed                	xor    %ebp,%ebp
   22e38:	53                   	push   %rbx
   22e39:	48 89 fb             	mov    %rdi,%rbx
   22e3c:	48 83 ec 08          	sub    $0x8,%rsp
   22e40:	eb 11                	jmp    22e53 <sha256_update+0x33>
   22e42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22e48:	8d 4d 01             	lea    0x1(%rbp),%ecx
   22e4b:	48 89 cd             	mov    %rcx,%rbp
   22e4e:	4c 39 e1             	cmp    %r12,%rcx
   22e51:	73 3f                	jae    22e92 <sha256_update+0x72>
   22e53:	8b 43 40             	mov    0x40(%rbx),%eax
   22e56:	41 0f b6 7c 0d 00    	movzbl 0x0(%r13,%rcx,1),%edi
   22e5c:	89 c1                	mov    %eax,%ecx
   22e5e:	83 c0 01             	add    $0x1,%eax
   22e61:	40 88 3c 0b          	mov    %dil,(%rbx,%rcx,1)
   22e65:	89 43 40             	mov    %eax,0x40(%rbx)
   22e68:	83 f8 40             	cmp    $0x40,%eax
   22e6b:	75 db                	jne    22e48 <sha256_update+0x28>
   22e6d:	48 89 de             	mov    %rbx,%rsi
   22e70:	48 89 df             	mov    %rbx,%rdi
   22e73:	e8 38 fd ff ff       	callq  22bb0 <sha256_transform>
   22e78:	8d 4d 01             	lea    0x1(%rbp),%ecx
   22e7b:	48 81 43 48 00 02 00 	addq   $0x200,0x48(%rbx)
   22e82:	00 
   22e83:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)
   22e8a:	48 89 cd             	mov    %rcx,%rbp
   22e8d:	4c 39 e1             	cmp    %r12,%rcx
   22e90:	72 c1                	jb     22e53 <sha256_update+0x33>
   22e92:	48 83 c4 08          	add    $0x8,%rsp
   22e96:	5b                   	pop    %rbx
   22e97:	5d                   	pop    %rbp
   22e98:	41 5c                	pop    %r12
   22e9a:	41 5d                	pop    %r13
   22e9c:	c3                   	retq   
   22e9d:	0f 1f 00             	nopl   (%rax)
   22ea0:	c3                   	retq   

0000000000022ea1 <.annobin_sha256_final.start>:
   22ea1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   22ea8:	00 00 00 00 
   22eac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000022eb0 <sha256_final>:
   22eb0:	f3 0f 1e fa          	endbr64 
   22eb4:	55                   	push   %rbp
   22eb5:	48 89 f5             	mov    %rsi,%rbp
   22eb8:	53                   	push   %rbx
   22eb9:	48 89 fb             	mov    %rdi,%rbx
   22ebc:	48 83 ec 08          	sub    $0x8,%rsp
   22ec0:	8b 4f 40             	mov    0x40(%rdi),%ecx
   22ec3:	89 ca                	mov    %ecx,%edx
   22ec5:	8d 41 01             	lea    0x1(%rcx),%eax
   22ec8:	c6 04 17 80          	movb   $0x80,(%rdi,%rdx,1)
   22ecc:	83 f9 37             	cmp    $0x37,%ecx
   22ecf:	0f 87 9b 00 00 00    	ja     22f70 <sha256_final+0xc0>
   22ed5:	83 f8 38             	cmp    $0x38,%eax
   22ed8:	0f 84 f2 00 00 00    	je     22fd0 <sha256_final+0x120>
   22ede:	66 90                	xchg   %ax,%ax
   22ee0:	89 c2                	mov    %eax,%edx
   22ee2:	83 c0 01             	add    $0x1,%eax
   22ee5:	c6 04 13 00          	movb   $0x0,(%rbx,%rdx,1)
   22ee9:	83 f8 38             	cmp    $0x38,%eax
   22eec:	75 f2                	jne    22ee0 <sha256_final+0x30>
   22eee:	c1 e1 03             	shl    $0x3,%ecx
   22ef1:	48 03 4b 48          	add    0x48(%rbx),%rcx
   22ef5:	48 89 de             	mov    %rbx,%rsi
   22ef8:	48 89 df             	mov    %rbx,%rdi
   22efb:	48 89 4b 48          	mov    %rcx,0x48(%rbx)
   22eff:	48 0f c9             	bswap  %rcx
   22f02:	48 89 4b 38          	mov    %rcx,0x38(%rbx)
   22f06:	e8 a5 fc ff ff       	callq  22bb0 <sha256_transform>
   22f0b:	48 89 ee             	mov    %rbp,%rsi
   22f0e:	b9 18 00 00 00       	mov    $0x18,%ecx
   22f13:	8b 43 50             	mov    0x50(%rbx),%eax
   22f16:	48 83 c6 01          	add    $0x1,%rsi
   22f1a:	d3 e8                	shr    %cl,%eax
   22f1c:	88 46 ff             	mov    %al,-0x1(%rsi)
   22f1f:	8b 43 54             	mov    0x54(%rbx),%eax
   22f22:	d3 e8                	shr    %cl,%eax
   22f24:	88 46 03             	mov    %al,0x3(%rsi)
   22f27:	8b 43 58             	mov    0x58(%rbx),%eax
   22f2a:	d3 e8                	shr    %cl,%eax
   22f2c:	88 46 07             	mov    %al,0x7(%rsi)
   22f2f:	8b 43 5c             	mov    0x5c(%rbx),%eax
   22f32:	d3 e8                	shr    %cl,%eax
   22f34:	88 46 0b             	mov    %al,0xb(%rsi)
   22f37:	8b 43 60             	mov    0x60(%rbx),%eax
   22f3a:	d3 e8                	shr    %cl,%eax
   22f3c:	88 46 0f             	mov    %al,0xf(%rsi)
   22f3f:	8b 43 64             	mov    0x64(%rbx),%eax
   22f42:	d3 e8                	shr    %cl,%eax
   22f44:	88 46 13             	mov    %al,0x13(%rsi)
   22f47:	8b 43 68             	mov    0x68(%rbx),%eax
   22f4a:	d3 e8                	shr    %cl,%eax
   22f4c:	88 46 17             	mov    %al,0x17(%rsi)
   22f4f:	8b 43 6c             	mov    0x6c(%rbx),%eax
   22f52:	d3 e8                	shr    %cl,%eax
   22f54:	83 e9 08             	sub    $0x8,%ecx
   22f57:	88 46 1b             	mov    %al,0x1b(%rsi)
   22f5a:	83 f9 f8             	cmp    $0xfffffff8,%ecx
   22f5d:	75 b4                	jne    22f13 <sha256_final+0x63>
   22f5f:	48 83 c4 08          	add    $0x8,%rsp
   22f63:	5b                   	pop    %rbx
   22f64:	5d                   	pop    %rbp
   22f65:	c3                   	retq   
   22f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22f6d:	00 00 00 
   22f70:	83 f8 3f             	cmp    $0x3f,%eax
   22f73:	77 27                	ja     22f9c <sha256_final+0xec>
   22f75:	48 8d 74 07 01       	lea    0x1(%rdi,%rax,1),%rsi
   22f7a:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
   22f7e:	b8 3e 00 00 00       	mov    $0x3e,%eax
   22f83:	29 c8                	sub    %ecx,%eax
   22f85:	48 01 f0             	add    %rsi,%rax
   22f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   22f8f:	00 
   22f90:	c6 02 00             	movb   $0x0,(%rdx)
   22f93:	48 83 c2 01          	add    $0x1,%rdx
   22f97:	48 39 d0             	cmp    %rdx,%rax
   22f9a:	75 f4                	jne    22f90 <sha256_final+0xe0>
   22f9c:	48 89 de             	mov    %rbx,%rsi
   22f9f:	48 89 df             	mov    %rbx,%rdi
   22fa2:	e8 09 fc ff ff       	callq  22bb0 <sha256_transform>
   22fa7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22fab:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
   22fb2:	00 
   22fb3:	8b 4b 40             	mov    0x40(%rbx),%ecx
   22fb6:	0f 11 03             	movups %xmm0,(%rbx)
   22fb9:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   22fbd:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
   22fc1:	e9 28 ff ff ff       	jmpq   22eee <sha256_final+0x3e>
   22fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   22fcd:	00 00 00 
   22fd0:	b9 37 00 00 00       	mov    $0x37,%ecx
   22fd5:	e9 14 ff ff ff       	jmpq   22eee <sha256_final+0x3e>

0000000000022fda <.annobin_sha256.c_end>:
   22fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000022fe0 <overrun>:
   22fe0:	8b 47 08             	mov    0x8(%rdi),%eax
   22fe3:	85 c0                	test   %eax,%eax
   22fe5:	7e 19                	jle    23000 <overrun+0x20>
   22fe7:	b8 01 00 00 00       	mov    $0x1,%eax
   22fec:	39 77 04             	cmp    %esi,0x4(%rdi)
   22fef:	7e 21                	jle    23012 <overrun+0x32>
   22ff1:	48 63 f6             	movslq %esi,%rsi
   22ff4:	48 3b 77 10          	cmp    0x10(%rdi),%rsi
   22ff8:	0f 93 c0             	setae  %al
   22ffb:	c3                   	retq   
   22ffc:	0f 1f 40 00          	nopl   0x0(%rax)
   23000:	b8 00 00 00 00       	mov    $0x0,%eax
   23005:	74 0b                	je     23012 <overrun+0x32>
   23007:	3b 77 04             	cmp    0x4(%rdi),%esi
   2300a:	0f 9e c0             	setle  %al
   2300d:	c1 ee 1f             	shr    $0x1f,%esi
   23010:	09 f0                	or     %esi,%eax
   23012:	c3                   	retq   

0000000000023013 <.annobin_cursor_first.start>:
   23013:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2301a:	00 00 00 00 
   2301e:	66 90                	xchg   %ax,%ax

0000000000023020 <cursor_first>:
   23020:	8b 17                	mov    (%rdi),%edx
   23022:	48 89 f9             	mov    %rdi,%rcx
   23025:	89 57 18             	mov    %edx,0x18(%rdi)
   23028:	eb 19                	jmp    23043 <cursor_first+0x23>
   2302a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23030:	85 d2                	test   %edx,%edx
   23032:	78 09                	js     2303d <cursor_first+0x1d>
   23034:	48 63 c2             	movslq %edx,%rax
   23037:	48 3b 41 10          	cmp    0x10(%rcx),%rax
   2303b:	72 1b                	jb     23058 <cursor_first+0x38>
   2303d:	03 51 08             	add    0x8(%rcx),%edx
   23040:	89 51 18             	mov    %edx,0x18(%rcx)
   23043:	89 d6                	mov    %edx,%esi
   23045:	48 89 cf             	mov    %rcx,%rdi
   23048:	e8 93 ff ff ff       	callq  22fe0 <overrun>
   2304d:	84 c0                	test   %al,%al
   2304f:	74 df                	je     23030 <cursor_first+0x10>
   23051:	c7 41 18 ff ff ff ff 	movl   $0xffffffff,0x18(%rcx)
   23058:	c3                   	retq   

0000000000023059 <.annobin_cursor_first.end>:
   23059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000023060 <parse_int.constprop.1>:
   23060:	41 55                	push   %r13
   23062:	41 89 f5             	mov    %esi,%r13d
   23065:	41 54                	push   %r12
   23067:	49 89 d4             	mov    %rdx,%r12
   2306a:	55                   	push   %rbp
   2306b:	48 89 fd             	mov    %rdi,%rbp
   2306e:	53                   	push   %rbx
   2306f:	48 83 ec 18          	sub    $0x18,%rsp
   23073:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2307a:	00 00 
   2307c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   23081:	31 c0                	xor    %eax,%eax
   23083:	e8 88 ca fe ff       	callq  fb10 <__errno_location@plt>
   23088:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2308c:	ba 0a 00 00 00       	mov    $0xa,%edx
   23091:	48 89 e6             	mov    %rsp,%rsi
   23094:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2309a:	48 89 c3             	mov    %rax,%rbx
   2309d:	e8 3e d2 fe ff       	callq  102e0 <strtol@plt>
   230a2:	8b 13                	mov    (%rbx),%edx
   230a4:	85 d2                	test   %edx,%edx
   230a6:	75 40                	jne    230e8 <parse_int.constprop.1+0x88>
   230a8:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   230ac:	48 8b 0c 24          	mov    (%rsp),%rcx
   230b0:	48 39 ce             	cmp    %rcx,%rsi
   230b3:	74 53                	je     23108 <parse_int.constprop.1+0xa8>
   230b5:	0f b6 31             	movzbl (%rcx),%esi
   230b8:	40 84 f6             	test   %sil,%sil
   230bb:	74 37                	je     230f4 <parse_int.constprop.1+0x94>
   230bd:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   230c2:	40 80 fe 3a          	cmp    $0x3a,%sil
   230c6:	74 28                	je     230f0 <parse_int.constprop.1+0x90>
   230c8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   230cd:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   230d4:	00 00 
   230d6:	89 d0                	mov    %edx,%eax
   230d8:	75 50                	jne    2312a <parse_int.constprop.1+0xca>
   230da:	48 83 c4 18          	add    $0x18,%rsp
   230de:	5b                   	pop    %rbx
   230df:	5d                   	pop    %rbp
   230e0:	41 5c                	pop    %r12
   230e2:	41 5d                	pop    %r13
   230e4:	c3                   	retq   
   230e5:	0f 1f 00             	nopl   (%rax)
   230e8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   230ed:	eb d9                	jmp    230c8 <parse_int.constprop.1+0x68>
   230ef:	90                   	nop
   230f0:	48 83 c1 01          	add    $0x1,%rcx
   230f4:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   230f8:	ba 01 00 00 00       	mov    $0x1,%edx
   230fd:	41 89 04 24          	mov    %eax,(%r12)
   23101:	eb c5                	jmp    230c8 <parse_int.constprop.1+0x68>
   23103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23108:	0f b6 06             	movzbl (%rsi),%eax
   2310b:	3c 3a                	cmp    $0x3a,%al
   2310d:	74 11                	je     23120 <parse_int.constprop.1+0xc0>
   2310f:	84 c0                	test   %al,%al
   23111:	75 d5                	jne    230e8 <parse_int.constprop.1+0x88>
   23113:	45 89 2c 24          	mov    %r13d,(%r12)
   23117:	eb af                	jmp    230c8 <parse_int.constprop.1+0x68>
   23119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23120:	48 83 c6 01          	add    $0x1,%rsi
   23124:	48 89 75 00          	mov    %rsi,0x0(%rbp)
   23128:	eb e9                	jmp    23113 <parse_int.constprop.1+0xb3>
   2312a:	e8 21 cd fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002312f <.annobin_parse_int.constprop.1.end>:
   2312f:	90                   	nop

0000000000023130 <slice_next>:
   23130:	f3 0f 1e fa          	endbr64 
   23134:	48 85 ff             	test   %rdi,%rdi
   23137:	74 53                	je     2318c <slice_next+0x5c>
   23139:	44 8b 4f 18          	mov    0x18(%rdi),%r9d
   2313d:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
   23141:	74 45                	je     23188 <slice_next+0x58>
   23143:	4c 63 57 08          	movslq 0x8(%rdi),%r10
   23147:	4d 63 c1             	movslq %r9d,%r8
   2314a:	48 89 fa             	mov    %rdi,%rdx
   2314d:	44 89 c9             	mov    %r9d,%ecx
   23150:	4d 89 d3             	mov    %r10,%r11
   23153:	4d 01 d0             	add    %r10,%r8
   23156:	eb 15                	jmp    2316d <slice_next+0x3d>
   23158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2315f:	00 
   23160:	85 c9                	test   %ecx,%ecx
   23162:	78 06                	js     2316a <slice_next+0x3a>
   23164:	4c 3b 42 10          	cmp    0x10(%rdx),%r8
   23168:	72 1e                	jb     23188 <slice_next+0x58>
   2316a:	4d 01 d0             	add    %r10,%r8
   2316d:	44 01 d9             	add    %r11d,%ecx
   23170:	48 89 d7             	mov    %rdx,%rdi
   23173:	89 4a 18             	mov    %ecx,0x18(%rdx)
   23176:	89 ce                	mov    %ecx,%esi
   23178:	e8 63 fe ff ff       	callq  22fe0 <overrun>
   2317d:	84 c0                	test   %al,%al
   2317f:	74 df                	je     23160 <slice_next+0x30>
   23181:	c7 42 18 ff ff ff ff 	movl   $0xffffffff,0x18(%rdx)
   23188:	44 89 c8             	mov    %r9d,%eax
   2318b:	c3                   	retq   
   2318c:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
   23192:	eb f4                	jmp    23188 <slice_next+0x58>

0000000000023194 <.annobin_slice_first.start>:
   23194:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2319b:	00 00 00 00 
   2319f:	90                   	nop

00000000000231a0 <slice_first>:
   231a0:	f3 0f 1e fa          	endbr64 
   231a4:	48 85 ff             	test   %rdi,%rdi
   231a7:	74 18                	je     231c1 <slice_first+0x21>
   231a9:	48 83 ec 08          	sub    $0x8,%rsp
   231ad:	49 89 f8             	mov    %rdi,%r8
   231b0:	e8 6b fe ff ff       	callq  23020 <cursor_first>
   231b5:	48 83 c4 08          	add    $0x8,%rsp
   231b9:	4c 89 c7             	mov    %r8,%rdi
   231bc:	e9 6f ff ff ff       	jmpq   23130 <slice_next>
   231c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   231c6:	c3                   	retq   

00000000000231c7 <.annobin_slice_first.end>:
   231c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   231ce:	00 00 

00000000000231d0 <slice_parse>:
   231d0:	f3 0f 1e fa          	endbr64 
   231d4:	41 57                	push   %r15
   231d6:	41 56                	push   %r14
   231d8:	41 55                	push   %r13
   231da:	41 54                	push   %r12
   231dc:	55                   	push   %rbp
   231dd:	53                   	push   %rbx
   231de:	48 83 ec 18          	sub    $0x18,%rsp
   231e2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   231e9:	00 00 
   231eb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   231f0:	31 c0                	xor    %eax,%eax
   231f2:	48 85 ff             	test   %rdi,%rdi
   231f5:	0f 84 75 01 00 00    	je     23370 <slice_parse+0x1a0>
   231fb:	48 89 f5             	mov    %rsi,%rbp
   231fe:	48 85 f6             	test   %rsi,%rsi
   23201:	0f 84 69 01 00 00    	je     23370 <slice_parse+0x1a0>
   23207:	48 89 fb             	mov    %rdi,%rbx
   2320a:	be 3a 00 00 00       	mov    $0x3a,%esi
   2320f:	48 89 ef             	mov    %rbp,%rdi
   23212:	49 89 d4             	mov    %rdx,%r12
   23215:	e8 96 cc fe ff       	callq  feb0 <strchr@plt>
   2321a:	48 85 c0             	test   %rax,%rax
   2321d:	0f 84 4d 01 00 00    	je     23370 <slice_parse+0x1a0>
   23223:	48 89 ef             	mov    %rbp,%rdi
   23226:	e8 75 d7 fe ff       	callq  109a0 <strdup@plt>
   2322b:	48 89 c5             	mov    %rax,%rbp
   2322e:	48 85 c0             	test   %rax,%rax
   23231:	0f 84 39 01 00 00    	je     23370 <slice_parse+0x1a0>
   23237:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   2323b:	48 89 c2             	mov    %rax,%rdx
   2323e:	48 89 04 24          	mov    %rax,(%rsp)
   23242:	8b 0a                	mov    (%rdx),%ecx
   23244:	48 83 c2 04          	add    $0x4,%rdx
   23248:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
   2324e:	f7 d1                	not    %ecx
   23250:	21 c8                	and    %ecx,%eax
   23252:	25 80 80 80 80       	and    $0x80808080,%eax
   23257:	74 e9                	je     23242 <slice_parse+0x72>
   23259:	89 c1                	mov    %eax,%ecx
   2325b:	c1 e9 10             	shr    $0x10,%ecx
   2325e:	a9 80 80 00 00       	test   $0x8080,%eax
   23263:	0f 44 c1             	cmove  %ecx,%eax
   23266:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   2326a:	48 0f 44 d1          	cmove  %rcx,%rdx
   2326e:	89 c6                	mov    %eax,%esi
   23270:	40 00 c6             	add    %al,%sil
   23273:	48 83 da 03          	sbb    $0x3,%rdx
   23277:	48 29 ea             	sub    %rbp,%rdx
   2327a:	48 83 fa 01          	cmp    $0x1,%rdx
   2327e:	0f 86 e4 00 00 00    	jbe    23368 <slice_parse+0x198>
   23284:	80 7d 00 5b          	cmpb   $0x5b,0x0(%rbp)
   23288:	0f 85 da 00 00 00    	jne    23368 <slice_parse+0x198>
   2328e:	48 8d 44 15 ff       	lea    -0x1(%rbp,%rdx,1),%rax
   23293:	80 38 5d             	cmpb   $0x5d,(%rax)
   23296:	0f 85 cc 00 00 00    	jne    23368 <slice_parse+0x198>
   2329c:	c6 00 00             	movb   $0x0,(%rax)
   2329f:	49 89 e5             	mov    %rsp,%r13
   232a2:	48 8d 45 01          	lea    0x1(%rbp),%rax
   232a6:	48 89 da             	mov    %rbx,%rdx
   232a9:	31 f6                	xor    %esi,%esi
   232ab:	4c 89 ef             	mov    %r13,%rdi
   232ae:	48 89 04 24          	mov    %rax,(%rsp)
   232b2:	e8 a9 fd ff ff       	callq  23060 <parse_int.constprop.1>
   232b7:	41 89 c6             	mov    %eax,%r14d
   232ba:	85 c0                	test   %eax,%eax
   232bc:	0f 88 a6 00 00 00    	js     23368 <slice_parse+0x198>
   232c2:	48 8d 53 04          	lea    0x4(%rbx),%rdx
   232c6:	44 89 e6             	mov    %r12d,%esi
   232c9:	4c 89 ef             	mov    %r13,%rdi
   232cc:	e8 8f fd ff ff       	callq  23060 <parse_int.constprop.1>
   232d1:	41 89 c7             	mov    %eax,%r15d
   232d4:	85 c0                	test   %eax,%eax
   232d6:	0f 88 8c 00 00 00    	js     23368 <slice_parse+0x198>
   232dc:	48 8d 53 08          	lea    0x8(%rbx),%rdx
   232e0:	be 01 00 00 00       	mov    $0x1,%esi
   232e5:	4c 89 ef             	mov    %r13,%rdi
   232e8:	e8 73 fd ff ff       	callq  23060 <parse_int.constprop.1>
   232ed:	85 c0                	test   %eax,%eax
   232ef:	78 77                	js     23368 <slice_parse+0x198>
   232f1:	8b 53 08             	mov    0x8(%rbx),%edx
   232f4:	85 d2                	test   %edx,%edx
   232f6:	74 70                	je     23368 <slice_parse+0x198>
   232f8:	8b 03                	mov    (%rbx),%eax
   232fa:	85 c0                	test   %eax,%eax
   232fc:	79 05                	jns    23303 <slice_parse+0x133>
   232fe:	03 43 10             	add    0x10(%rbx),%eax
   23301:	89 03                	mov    %eax,(%rbx)
   23303:	8b 43 04             	mov    0x4(%rbx),%eax
   23306:	85 c0                	test   %eax,%eax
   23308:	79 06                	jns    23310 <slice_parse+0x140>
   2330a:	03 43 10             	add    0x10(%rbx),%eax
   2330d:	89 43 04             	mov    %eax,0x4(%rbx)
   23310:	85 d2                	test   %edx,%edx
   23312:	78 34                	js     23348 <slice_parse+0x178>
   23314:	48 89 df             	mov    %rbx,%rdi
   23317:	e8 04 fd ff ff       	callq  23020 <cursor_first>
   2331c:	48 89 ef             	mov    %rbp,%rdi
   2331f:	e8 8c c7 fe ff       	callq  fab0 <free@plt>
   23324:	31 c0                	xor    %eax,%eax
   23326:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2332b:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   23332:	00 00 
   23334:	75 41                	jne    23377 <slice_parse+0x1a7>
   23336:	48 83 c4 18          	add    $0x18,%rsp
   2333a:	5b                   	pop    %rbx
   2333b:	5d                   	pop    %rbp
   2333c:	41 5c                	pop    %r12
   2333e:	41 5d                	pop    %r13
   23340:	41 5e                	pop    %r14
   23342:	41 5f                	pop    %r15
   23344:	c3                   	retq   
   23345:	0f 1f 00             	nopl   (%rax)
   23348:	45 85 f6             	test   %r14d,%r14d
   2334b:	75 07                	jne    23354 <slice_parse+0x184>
   2334d:	41 83 ec 01          	sub    $0x1,%r12d
   23351:	44 89 23             	mov    %r12d,(%rbx)
   23354:	45 85 ff             	test   %r15d,%r15d
   23357:	75 bb                	jne    23314 <slice_parse+0x144>
   23359:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rbx)
   23360:	eb b2                	jmp    23314 <slice_parse+0x144>
   23362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23368:	48 89 ef             	mov    %rbp,%rdi
   2336b:	e8 40 c7 fe ff       	callq  fab0 <free@plt>
   23370:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   23375:	eb af                	jmp    23326 <slice_parse+0x156>
   23377:	e8 d4 ca fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002337c <.annobin_slice.c_end>:
   2337c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023380 <stdlog_decode>:
   23380:	f3 0f 1e fa          	endbr64 
   23384:	41 57                	push   %r15
   23386:	41 56                	push   %r14
   23388:	4d 89 c6             	mov    %r8,%r14
   2338b:	41 55                	push   %r13
   2338d:	49 89 d5             	mov    %rdx,%r13
   23390:	41 54                	push   %r12
   23392:	41 89 f4             	mov    %esi,%r12d
   23395:	55                   	push   %rbp
   23396:	48 89 cd             	mov    %rcx,%rbp
   23399:	53                   	push   %rbx
   2339a:	48 89 fb             	mov    %rdi,%rbx
   2339d:	48 83 ec 38          	sub    $0x38,%rsp
   233a1:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   233a6:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   233ab:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   233b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   233b7:	00 00 
   233b9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   233be:	31 c0                	xor    %eax,%eax
   233c0:	81 fe fb 01 00 00    	cmp    $0x1fb,%esi
   233c6:	0f 8f 94 02 00 00    	jg     23660 <stdlog_decode+0x2e0>
   233cc:	48 63 d6             	movslq %esi,%rdx
   233cf:	4c 63 fe             	movslq %esi,%r15
  return __builtin___strncpy_chk (__dest, __src, __len,
   233d2:	b9 fd 01 00 00       	mov    $0x1fd,%ecx
   233d7:	48 89 de             	mov    %rbx,%rsi
   233da:	4c 89 ef             	mov    %r13,%rdi
   233dd:	e8 ce d1 fe ff       	callq  105b0 <__strncpy_chk@plt>
   233e2:	43 c6 44 3d 00 00    	movb   $0x0,0x0(%r13,%r15,1)
   233e8:	41 80 7d 00 3c       	cmpb   $0x3c,0x0(%r13)
   233ed:	4d 8d 7d 01          	lea    0x1(%r13),%r15
   233f1:	0f 85 e9 01 00 00    	jne    235e0 <stdlog_decode+0x260>
   233f7:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   233fc:	4c 89 ff             	mov    %r15,%rdi
   233ff:	ba 0a 00 00 00       	mov    $0xa,%edx
   23404:	48 89 ce             	mov    %rcx,%rsi
   23407:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   2340c:	e8 3f d4 fe ff       	callq  10850 <strtoul@plt>
   23411:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   23416:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2341b:	49 39 ff             	cmp    %rdi,%r15
   2341e:	0f 84 bc 01 00 00    	je     235e0 <stdlog_decode+0x260>
   23424:	41 89 85 00 02 00 00 	mov    %eax,0x200(%r13)
   2342b:	4c 8d 7f 01          	lea    0x1(%rdi),%r15
   2342f:	ba 0a 00 00 00       	mov    $0xa,%edx
   23434:	48 89 ce             	mov    %rcx,%rsi
   23437:	4c 89 ff             	mov    %r15,%rdi
   2343a:	e8 11 d4 fe ff       	callq  10850 <strtoul@plt>
   2343f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   23444:	49 39 d7             	cmp    %rdx,%r15
   23447:	0f 84 93 01 00 00    	je     235e0 <stdlog_decode+0x260>
   2344d:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   23451:	41 89 85 04 02 00 00 	mov    %eax,0x204(%r13)
   23458:	48 89 f0             	mov    %rsi,%rax
   2345b:	f6 42 01 df          	testb  $0xdf,0x1(%rdx)
   2345f:	75 12                	jne    23473 <stdlog_decode+0xf3>
   23461:	e9 7a 01 00 00       	jmpq   235e0 <stdlog_decode+0x260>
   23466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2346d:	00 00 00 
   23470:	48 89 d0             	mov    %rdx,%rax
   23473:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   23477:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2347b:	f6 c1 df             	test   $0xdf,%cl
   2347e:	75 f0                	jne    23470 <stdlog_decode+0xf0>
   23480:	48 39 d6             	cmp    %rdx,%rsi
   23483:	0f 84 57 01 00 00    	je     235e0 <stdlog_decode+0x260>
   23489:	84 c9                	test   %cl,%cl
   2348b:	0f 85 df 01 00 00    	jne    23670 <stdlog_decode+0x2f0>
   23491:	49 89 b5 08 02 00 00 	mov    %rsi,0x208(%r13)
   23498:	f6 02 df             	testb  $0xdf,(%rdx)
   2349b:	0f 84 3f 01 00 00    	je     235e0 <stdlog_decode+0x260>
   234a1:	48 89 d0             	mov    %rdx,%rax
   234a4:	eb 0d                	jmp    234b3 <stdlog_decode+0x133>
   234a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   234ad:	00 00 00 
   234b0:	48 89 c8             	mov    %rcx,%rax
   234b3:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   234b7:	48 8d 48 01          	lea    0x1(%rax),%rcx
   234bb:	40 f6 c6 df          	test   $0xdf,%sil
   234bf:	75 ef                	jne    234b0 <stdlog_decode+0x130>
   234c1:	48 39 ca             	cmp    %rcx,%rdx
   234c4:	0f 84 16 01 00 00    	je     235e0 <stdlog_decode+0x260>
   234ca:	40 84 f6             	test   %sil,%sil
   234cd:	0f 85 ad 01 00 00    	jne    23680 <stdlog_decode+0x300>
   234d3:	49 89 95 10 02 00 00 	mov    %rdx,0x210(%r13)
   234da:	f6 01 df             	testb  $0xdf,(%rcx)
   234dd:	0f 84 fd 00 00 00    	je     235e0 <stdlog_decode+0x260>
   234e3:	48 89 c8             	mov    %rcx,%rax
   234e6:	eb 0b                	jmp    234f3 <stdlog_decode+0x173>
   234e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   234ef:	00 
   234f0:	48 89 d0             	mov    %rdx,%rax
   234f3:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   234f7:	48 8d 50 01          	lea    0x1(%rax),%rdx
   234fb:	40 f6 c6 df          	test   $0xdf,%sil
   234ff:	75 ef                	jne    234f0 <stdlog_decode+0x170>
   23501:	48 39 d1             	cmp    %rdx,%rcx
   23504:	0f 84 d6 00 00 00    	je     235e0 <stdlog_decode+0x260>
   2350a:	40 84 f6             	test   %sil,%sil
   2350d:	0f 85 7d 01 00 00    	jne    23690 <stdlog_decode+0x310>
   23513:	49 89 8d 18 02 00 00 	mov    %rcx,0x218(%r13)
   2351a:	f6 02 df             	testb  $0xdf,(%rdx)
   2351d:	0f 84 bd 00 00 00    	je     235e0 <stdlog_decode+0x260>
   23523:	48 89 d0             	mov    %rdx,%rax
   23526:	eb 0b                	jmp    23533 <stdlog_decode+0x1b3>
   23528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2352f:	00 
   23530:	48 89 c8             	mov    %rcx,%rax
   23533:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   23537:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2353b:	40 f6 c6 df          	test   $0xdf,%sil
   2353f:	75 ef                	jne    23530 <stdlog_decode+0x1b0>
   23541:	48 39 ca             	cmp    %rcx,%rdx
   23544:	0f 84 96 00 00 00    	je     235e0 <stdlog_decode+0x260>
   2354a:	40 84 f6             	test   %sil,%sil
   2354d:	0f 85 4d 01 00 00    	jne    236a0 <stdlog_decode+0x320>
   23553:	49 89 95 20 02 00 00 	mov    %rdx,0x220(%r13)
   2355a:	f6 01 df             	testb  $0xdf,(%rcx)
   2355d:	0f 84 7d 00 00 00    	je     235e0 <stdlog_decode+0x260>
   23563:	48 89 c8             	mov    %rcx,%rax
   23566:	eb 0b                	jmp    23573 <stdlog_decode+0x1f3>
   23568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2356f:	00 
   23570:	48 89 d0             	mov    %rdx,%rax
   23573:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   23577:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2357b:	40 f6 c6 df          	test   $0xdf,%sil
   2357f:	75 ef                	jne    23570 <stdlog_decode+0x1f0>
   23581:	48 39 d1             	cmp    %rdx,%rcx
   23584:	74 5a                	je     235e0 <stdlog_decode+0x260>
   23586:	40 84 f6             	test   %sil,%sil
   23589:	0f 85 21 01 00 00    	jne    236b0 <stdlog_decode+0x330>
   2358f:	48 89 d6             	mov    %rdx,%rsi
   23592:	49 89 8d 28 02 00 00 	mov    %rcx,0x228(%r13)
   23599:	4c 29 ee             	sub    %r13,%rsi
   2359c:	44 39 e6             	cmp    %r12d,%esi
   2359f:	7d 54                	jge    235f5 <stdlog_decode+0x275>
   235a1:	48 63 ce             	movslq %esi,%rcx
   235a4:	89 f2                	mov    %esi,%edx
   235a6:	31 ff                	xor    %edi,%edi
   235a8:	48 01 d9             	add    %rbx,%rcx
   235ab:	eb 1b                	jmp    235c8 <stdlog_decode+0x248>
   235ad:	0f 1f 00             	nopl   (%rax)
   235b0:	3c 5d                	cmp    $0x5d,%al
   235b2:	74 3c                	je     235f0 <stdlog_decode+0x270>
   235b4:	3c 20                	cmp    $0x20,%al
   235b6:	75 04                	jne    235bc <stdlog_decode+0x23c>
   235b8:	85 ff                	test   %edi,%edi
   235ba:	74 3d                	je     235f9 <stdlog_decode+0x279>
   235bc:	83 c2 01             	add    $0x1,%edx
   235bf:	48 83 c1 01          	add    $0x1,%rcx
   235c3:	41 39 d4             	cmp    %edx,%r12d
   235c6:	74 18                	je     235e0 <stdlog_decode+0x260>
   235c8:	0f b6 01             	movzbl (%rcx),%eax
   235cb:	3c 5b                	cmp    $0x5b,%al
   235cd:	75 e1                	jne    235b0 <stdlog_decode+0x230>
   235cf:	83 c2 01             	add    $0x1,%edx
   235d2:	83 c7 01             	add    $0x1,%edi
   235d5:	48 83 c1 01          	add    $0x1,%rcx
   235d9:	41 39 d4             	cmp    %edx,%r12d
   235dc:	75 ea                	jne    235c8 <stdlog_decode+0x248>
   235de:	66 90                	xchg   %ax,%ax
   235e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   235e5:	eb 56                	jmp    2363d <stdlog_decode+0x2bd>
   235e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   235ee:	00 00 
   235f0:	83 ef 01             	sub    $0x1,%edi
   235f3:	eb c7                	jmp    235bc <stdlog_decode+0x23c>
   235f5:	74 e9                	je     235e0 <stdlog_decode+0x260>
   235f7:	89 f2                	mov    %esi,%edx
   235f9:	8d 4a 01             	lea    0x1(%rdx),%ecx
   235fc:	48 85 ed             	test   %rbp,%rbp
   235ff:	74 0a                	je     2360b <stdlog_decode+0x28b>
   23601:	48 63 c6             	movslq %esi,%rax
   23604:	48 01 d8             	add    %rbx,%rax
   23607:	48 89 45 00          	mov    %rax,0x0(%rbp)
   2360b:	4d 85 f6             	test   %r14,%r14
   2360e:	74 05                	je     23615 <stdlog_decode+0x295>
   23610:	29 f2                	sub    %esi,%edx
   23612:	41 89 16             	mov    %edx,(%r14)
   23615:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2361a:	48 85 ff             	test   %rdi,%rdi
   2361d:	74 09                	je     23628 <stdlog_decode+0x2a8>
   2361f:	48 63 c1             	movslq %ecx,%rax
   23622:	48 01 c3             	add    %rax,%rbx
   23625:	48 89 1f             	mov    %rbx,(%rdi)
   23628:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2362d:	31 c0                	xor    %eax,%eax
   2362f:	48 85 db             	test   %rbx,%rbx
   23632:	74 09                	je     2363d <stdlog_decode+0x2bd>
   23634:	45 89 e2             	mov    %r12d,%r10d
   23637:	41 29 ca             	sub    %ecx,%r10d
   2363a:	44 89 13             	mov    %r10d,(%rbx)
   2363d:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   23642:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   23649:	00 00 
   2364b:	75 6f                	jne    236bc <stdlog_decode+0x33c>
   2364d:	48 83 c4 38          	add    $0x38,%rsp
   23651:	5b                   	pop    %rbx
   23652:	5d                   	pop    %rbp
   23653:	41 5c                	pop    %r12
   23655:	41 5d                	pop    %r13
   23657:	41 5e                	pop    %r14
   23659:	41 5f                	pop    %r15
   2365b:	c3                   	retq   
   2365c:	0f 1f 40 00          	nopl   0x0(%rax)
   23660:	ba fc 01 00 00       	mov    $0x1fc,%edx
   23665:	41 bf fc 01 00 00    	mov    $0x1fc,%r15d
   2366b:	e9 62 fd ff ff       	jmpq   233d2 <stdlog_decode+0x52>
   23670:	c6 02 00             	movb   $0x0,(%rdx)
   23673:	48 8d 50 02          	lea    0x2(%rax),%rdx
   23677:	e9 15 fe ff ff       	jmpq   23491 <stdlog_decode+0x111>
   2367c:	0f 1f 40 00          	nopl   0x0(%rax)
   23680:	c6 01 00             	movb   $0x0,(%rcx)
   23683:	48 8d 48 02          	lea    0x2(%rax),%rcx
   23687:	e9 47 fe ff ff       	jmpq   234d3 <stdlog_decode+0x153>
   2368c:	0f 1f 40 00          	nopl   0x0(%rax)
   23690:	c6 02 00             	movb   $0x0,(%rdx)
   23693:	48 8d 50 02          	lea    0x2(%rax),%rdx
   23697:	e9 77 fe ff ff       	jmpq   23513 <stdlog_decode+0x193>
   2369c:	0f 1f 40 00          	nopl   0x0(%rax)
   236a0:	c6 01 00             	movb   $0x0,(%rcx)
   236a3:	48 8d 48 02          	lea    0x2(%rax),%rcx
   236a7:	e9 a7 fe ff ff       	jmpq   23553 <stdlog_decode+0x1d3>
   236ac:	0f 1f 40 00          	nopl   0x0(%rax)
   236b0:	c6 02 00             	movb   $0x0,(%rdx)
   236b3:	48 8d 50 02          	lea    0x2(%rax),%rdx
   236b7:	e9 d3 fe ff ff       	jmpq   2358f <stdlog_decode+0x20f>
   236bc:	e8 8f c7 fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000236c1 <.annobin_stdlog_decode.end>:
   236c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   236c8:	00 00 00 00 
   236cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000236d0 <stdlog_split_message>:
   236d0:	f3 0f 1e fa          	endbr64 
   236d4:	41 57                	push   %r15
   236d6:	31 c9                	xor    %ecx,%ecx
   236d8:	45 31 c0             	xor    %r8d,%r8d
   236db:	41 56                	push   %r14
   236dd:	41 55                	push   %r13
   236df:	41 54                	push   %r12
   236e1:	49 89 d4             	mov    %rdx,%r12
   236e4:	55                   	push   %rbp
   236e5:	53                   	push   %rbx
   236e6:	48 81 ec 68 02 00 00 	sub    $0x268,%rsp
   236ed:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   236f2:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   236f7:	48 83 ec 08          	sub    $0x8,%rsp
   236fb:	8b 36                	mov    (%rsi),%esi
   236fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23704:	00 00 
   23706:	48 89 84 24 60 02 00 	mov    %rax,0x260(%rsp)
   2370d:	00 
   2370e:	31 c0                	xor    %eax,%eax
   23710:	48 8d 44 24 1c       	lea    0x1c(%rsp),%rax
   23715:	50                   	push   %rax
   23716:	4c 8d 4c 24 28       	lea    0x28(%rsp),%r9
   2371b:	e8 60 fc ff ff       	callq  23380 <stdlog_decode>
   23720:	5a                   	pop    %rdx
   23721:	59                   	pop    %rcx
   23722:	85 c0                	test   %eax,%eax
   23724:	0f 88 fe 00 00 00    	js     23828 <stdlog_split_message+0x158>
   2372a:	8b 5c 24 14          	mov    0x14(%rsp),%ebx
   2372e:	85 db                	test   %ebx,%ebx
   23730:	0f 8e f7 00 00 00    	jle    2382d <stdlog_split_message+0x15d>
   23736:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   2373b:	44 8d 73 ff          	lea    -0x1(%rbx),%r14d
   2373f:	45 31 ff             	xor    %r15d,%r15d
   23742:	eb 14                	jmp    23758 <stdlog_split_message+0x88>
   23744:	0f 1f 40 00          	nopl   0x0(%rax)
   23748:	41 8d 6f 01          	lea    0x1(%r15),%ebp
   2374c:	49 8d 47 01          	lea    0x1(%r15),%rax
   23750:	4d 39 f7             	cmp    %r14,%r15
   23753:	74 19                	je     2376e <stdlog_split_message+0x9e>
   23755:	49 89 c7             	mov    %rax,%r15
   23758:	43 0f be 74 3d 00    	movsbl 0x0(%r13,%r15,1),%esi
   2375e:	4c 89 e7             	mov    %r12,%rdi
   23761:	44 89 fd             	mov    %r15d,%ebp
   23764:	e8 47 c7 fe ff       	callq  feb0 <strchr@plt>
   23769:	48 85 c0             	test   %rax,%rax
   2376c:	74 da                	je     23748 <stdlog_split_message+0x78>
   2376e:	29 eb                	sub    %ebp,%ebx
   23770:	85 db                	test   %ebx,%ebx
   23772:	0f 84 b0 00 00 00    	je     23828 <stdlog_split_message+0x158>
   23778:	8d 7b 01             	lea    0x1(%rbx),%edi
   2377b:	48 63 ff             	movslq %edi,%rdi
   2377e:	e8 9d cc fe ff       	callq  10420 <malloc@plt>
   23783:	49 89 c6             	mov    %rax,%r14
   23786:	48 85 c0             	test   %rax,%rax
   23789:	0f 84 99 00 00 00    	je     23828 <stdlog_split_message+0x158>
   2378f:	4c 63 eb             	movslq %ebx,%r13
   23792:	48 63 f5             	movslq %ebp,%rsi
  return __builtin___memcpy_chk (__dest, __src, __len,
   23795:	48 89 c7             	mov    %rax,%rdi
   23798:	48 03 74 24 18       	add    0x18(%rsp),%rsi
   2379d:	4c 89 ea             	mov    %r13,%rdx
   237a0:	49 8d 6e 01          	lea    0x1(%r14),%rbp
   237a4:	e8 67 cb fe ff       	callq  10310 <memcpy@plt>
   237a9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   237ae:	43 c6 04 2e 00       	movb   $0x0,(%r14,%r13,1)
   237b3:	29 18                	sub    %ebx,(%rax)
   237b5:	85 db                	test   %ebx,%ebx
   237b7:	7f 50                	jg     23809 <stdlog_split_message+0x139>
   237b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   237c0:	48 8b 8c 24 58 02 00 	mov    0x258(%rsp),%rcx
   237c7:	00 
   237c8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   237cf:	00 00 
   237d1:	4c 89 f0             	mov    %r14,%rax
   237d4:	75 5e                	jne    23834 <stdlog_split_message+0x164>
   237d6:	48 81 c4 68 02 00 00 	add    $0x268,%rsp
   237dd:	5b                   	pop    %rbx
   237de:	5d                   	pop    %rbp
   237df:	41 5c                	pop    %r12
   237e1:	41 5d                	pop    %r13
   237e3:	41 5e                	pop    %r14
   237e5:	41 5f                	pop    %r15
   237e7:	c3                   	retq   
   237e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   237ef:	00 
  return __builtin___memmove_chk (__dest, __src, __len,
   237f0:	4c 89 ea             	mov    %r13,%rdx
   237f3:	48 89 ee             	mov    %rbp,%rsi
   237f6:	4c 89 f7             	mov    %r14,%rdi
   237f9:	83 eb 01             	sub    $0x1,%ebx
   237fc:	e8 cf ce fe ff       	callq  106d0 <memmove@plt>
   23801:	49 83 ed 01          	sub    $0x1,%r13
   23805:	85 db                	test   %ebx,%ebx
   23807:	74 17                	je     23820 <stdlog_split_message+0x150>
   23809:	41 0f be 36          	movsbl (%r14),%esi
   2380d:	4c 89 e7             	mov    %r12,%rdi
   23810:	e8 9b c6 fe ff       	callq  feb0 <strchr@plt>
   23815:	48 85 c0             	test   %rax,%rax
   23818:	75 d6                	jne    237f0 <stdlog_split_message+0x120>
   2381a:	eb a4                	jmp    237c0 <stdlog_split_message+0xf0>
   2381c:	0f 1f 40 00          	nopl   0x0(%rax)
   23820:	4c 89 f7             	mov    %r14,%rdi
   23823:	e8 88 c2 fe ff       	callq  fab0 <free@plt>
   23828:	45 31 f6             	xor    %r14d,%r14d
   2382b:	eb 93                	jmp    237c0 <stdlog_split_message+0xf0>
   2382d:	31 ed                	xor    %ebp,%ebp
   2382f:	e9 3c ff ff ff       	jmpq   23770 <stdlog_split_message+0xa0>
   23834:	e8 17 c6 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000023839 <.annobin_stdlog_split_message.end>:
   23839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000023840 <stdlog_vencodef>:
   23840:	f3 0f 1e fa          	endbr64 
   23844:	41 57                	push   %r15
   23846:	48 63 f6             	movslq %esi,%rsi
   23849:	41 56                	push   %r14
   2384b:	49 89 f6             	mov    %rsi,%r14
   2384e:	41 55                	push   %r13
   23850:	41 54                	push   %r12
   23852:	49 89 fc             	mov    %rdi,%r12
   23855:	55                   	push   %rbp
   23856:	53                   	push   %rbx
   23857:	48 83 ec 18          	sub    $0x18,%rsp
   2385b:	4c 89 04 24          	mov    %r8,(%rsp)
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   2385f:	4c 8d 05 9a e8 01 00 	lea    0x1e89a(%rip),%r8        # 42100 <k+0x100>
   23866:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   2386b:	51                   	push   %rcx
   2386c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   23873:	ff b2 28 02 00 00    	pushq  0x228(%rdx)
   23879:	6a 20                	pushq  $0x20
   2387b:	ff b2 20 02 00 00    	pushq  0x220(%rdx)
   23881:	68 80 00 00 00       	pushq  $0x80
   23886:	ff b2 18 02 00 00    	pushq  0x218(%rdx)
   2388c:	6a 30                	pushq  $0x30
   2388e:	ff b2 10 02 00 00    	pushq  0x210(%rdx)
   23894:	68 ff 00 00 00       	pushq  $0xff
   23899:	ff b2 08 02 00 00    	pushq  0x208(%rdx)
   2389f:	6a 20                	pushq  $0x20
   238a1:	8b 82 04 02 00 00    	mov    0x204(%rdx),%eax
   238a7:	50                   	push   %rax
   238a8:	44 8b 8a 00 02 00 00 	mov    0x200(%rdx),%r9d
   238af:	31 c0                	xor    %eax,%eax
   238b1:	ba 01 00 00 00       	mov    $0x1,%edx
   238b6:	e8 e5 c1 fe ff       	callq  faa0 <__snprintf_chk@plt>
   238bb:	48 83 c4 60          	add    $0x60,%rsp
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   238bf:	4c 8b 04 24          	mov    (%rsp),%r8
   238c3:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   238c8:	41 39 c6             	cmp    %eax,%r14d
   238cb:	89 c5                	mov    %eax,%ebp
   238cd:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   238d4:	41 89 c7             	mov    %eax,%r15d
   238d7:	41 0f 4e ee          	cmovle %r14d,%ebp
  return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   238db:	ba 01 00 00 00       	mov    $0x1,%edx
   238e0:	4c 63 ed             	movslq %ebp,%r13
   238e3:	41 29 ee             	sub    %ebp,%r14d
   238e6:	4b 8d 1c 2c          	lea    (%r12,%r13,1),%rbx
   238ea:	49 63 f6             	movslq %r14d,%rsi
   238ed:	48 89 df             	mov    %rbx,%rdi
   238f0:	e8 6b cc fe ff       	callq  10560 <__vsnprintf_chk@plt>
   238f5:	41 39 c6             	cmp    %eax,%r14d
   238f8:	45 8d 04 07          	lea    (%r15,%rax,1),%r8d
   238fc:	41 0f 4e c6          	cmovle %r14d,%eax
   23900:	85 c0                	test   %eax,%eax
   23902:	0f 8e 80 00 00 00    	jle    23988 <stdlog_vencodef+0x148>
   23908:	89 c1                	mov    %eax,%ecx
   2390a:	4b 8d 44 2c 01       	lea    0x1(%r12,%r13,1),%rax
   2390f:	48 89 df             	mov    %rbx,%rdi
   23912:	8d 51 ff             	lea    -0x1(%rcx),%edx
   23915:	48 89 d1             	mov    %rdx,%rcx
   23918:	48 01 d0             	add    %rdx,%rax
   2391b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23920:	80 27 7f             	andb   $0x7f,(%rdi)
   23923:	48 83 c7 01          	add    $0x1,%rdi
   23927:	48 39 c7             	cmp    %rax,%rdi
   2392a:	75 f4                	jne    23920 <stdlog_vencodef+0xe0>
   2392c:	8d 14 29             	lea    (%rcx,%rbp,1),%edx
   2392f:	48 63 d2             	movslq %edx,%rdx
   23932:	4c 01 e2             	add    %r12,%rdx
   23935:	0f b6 02             	movzbl (%rdx),%eax
   23938:	3c 0d                	cmp    $0xd,%al
   2393a:	74 04                	je     23940 <stdlog_vencodef+0x100>
   2393c:	3c 0a                	cmp    $0xa,%al
   2393e:	75 48                	jne    23988 <stdlog_vencodef+0x148>
   23940:	48 63 c1             	movslq %ecx,%rax
   23943:	49 8d 7c 05 ff       	lea    -0x1(%r13,%rax,1),%rdi
   23948:	44 89 c0             	mov    %r8d,%eax
   2394b:	4c 01 e7             	add    %r12,%rdi
   2394e:	66 90                	xchg   %ax,%ax
   23950:	83 e8 01             	sub    $0x1,%eax
   23953:	c6 02 00             	movb   $0x0,(%rdx)
   23956:	89 c2                	mov    %eax,%edx
   23958:	44 29 c2             	sub    %r8d,%edx
   2395b:	01 ca                	add    %ecx,%edx
   2395d:	78 16                	js     23975 <stdlog_vencodef+0x135>
   2395f:	0f b6 37             	movzbl (%rdi),%esi
   23962:	48 89 fa             	mov    %rdi,%rdx
   23965:	48 83 ef 01          	sub    $0x1,%rdi
   23969:	40 80 fe 0d          	cmp    $0xd,%sil
   2396d:	74 e1                	je     23950 <stdlog_vencodef+0x110>
   2396f:	40 80 fe 0a          	cmp    $0xa,%sil
   23973:	74 db                	je     23950 <stdlog_vencodef+0x110>
   23975:	48 83 c4 18          	add    $0x18,%rsp
   23979:	5b                   	pop    %rbx
   2397a:	5d                   	pop    %rbp
   2397b:	41 5c                	pop    %r12
   2397d:	41 5d                	pop    %r13
   2397f:	41 5e                	pop    %r14
   23981:	41 5f                	pop    %r15
   23983:	c3                   	retq   
   23984:	0f 1f 40 00          	nopl   0x0(%rax)
   23988:	48 83 c4 18          	add    $0x18,%rsp
   2398c:	44 89 c0             	mov    %r8d,%eax
   2398f:	5b                   	pop    %rbx
   23990:	5d                   	pop    %rbp
   23991:	41 5c                	pop    %r12
   23993:	41 5d                	pop    %r13
   23995:	41 5e                	pop    %r14
   23997:	41 5f                	pop    %r15
   23999:	c3                   	retq   

000000000002399a <.annobin_stdlog_encodef.start>:
   2399a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000239a0 <stdlog_encodef>:
   239a0:	f3 0f 1e fa          	endbr64 
   239a4:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   239ab:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   239b0:	84 c0                	test   %al,%al
   239b2:	74 37                	je     239eb <stdlog_encodef+0x4b>
   239b4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   239b9:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   239be:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   239c3:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   239ca:	00 
   239cb:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   239d2:	00 
   239d3:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   239da:	00 
   239db:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   239e2:	00 
   239e3:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   239ea:	00 
   239eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   239f2:	00 00 
   239f4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   239f9:	31 c0                	xor    %eax,%eax
   239fb:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   23a02:	00 
   23a03:	49 89 e1             	mov    %rsp,%r9
   23a06:	c7 04 24 28 00 00 00 	movl   $0x28,(%rsp)
   23a0d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   23a12:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   23a17:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   23a1e:	00 
   23a1f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   23a24:	e8 17 fe ff ff       	callq  23840 <stdlog_vencodef>
   23a29:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   23a2e:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   23a35:	00 00 
   23a37:	75 08                	jne    23a41 <stdlog_encodef+0xa1>
   23a39:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   23a40:	c3                   	retq   
   23a41:	e8 0a c4 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000023a46 <.annobin_stdlog_encode.start>:
   23a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23a4d:	00 00 00 

0000000000023a50 <stdlog_encode>:
   23a50:	f3 0f 1e fa          	endbr64 
   23a54:	4d 89 c1             	mov    %r8,%r9
   23a57:	31 c0                	xor    %eax,%eax
   23a59:	4c 8d 05 ac f7 01 00 	lea    0x1f7ac(%rip),%r8        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   23a60:	e9 3b ff ff ff       	jmpq   239a0 <stdlog_encodef>

0000000000023a65 <.annobin_stdlog_encode.end>:
   23a65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   23a6c:	00 00 00 00 

0000000000023a70 <stdlog_init>:
   23a70:	f3 0f 1e fa          	endbr64 
  return __builtin___memset_chk (__dest, __ch, __len,
   23a74:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   23a7b:	48 89 fa             	mov    %rdi,%rdx
   23a7e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   23a82:	31 c0                	xor    %eax,%eax
   23a84:	48 c7 87 ed 01 00 00 	movq   $0x0,0x1ed(%rdi)
   23a8b:	00 00 00 00 
   23a8f:	48 89 d1             	mov    %rdx,%rcx
   23a92:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   23a96:	48 29 f9             	sub    %rdi,%rcx
   23a99:	81 c1 fd 01 00 00    	add    $0x1fd,%ecx
   23a9f:	c1 e9 03             	shr    $0x3,%ecx
   23aa2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   23aa5:	48 b8 38 00 00 00 01 	movabs $0x100000038,%rax
   23aac:	00 00 00 
   23aaf:	48 89 82 00 02 00 00 	mov    %rax,0x200(%rdx)
   23ab6:	48 8d 05 dc b8 01 00 	lea    0x1b8dc(%rip),%rax        # 3f399 <__PRETTY_FUNCTION__.5787+0x29>
   23abd:	48 89 82 08 02 00 00 	mov    %rax,0x208(%rdx)
   23ac4:	48 89 82 10 02 00 00 	mov    %rax,0x210(%rdx)
   23acb:	48 89 82 18 02 00 00 	mov    %rax,0x218(%rdx)
   23ad2:	48 89 82 20 02 00 00 	mov    %rax,0x220(%rdx)
   23ad9:	48 89 82 28 02 00 00 	mov    %rax,0x228(%rdx)
   23ae0:	c3                   	retq   

0000000000023ae1 <.annobin_stdlog_init.end>:
   23ae1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   23ae8:	00 00 00 00 
   23aec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023af0 <stdlog_severity_to_string>:
   23af0:	f3 0f 1e fa          	endbr64 
   23af4:	85 ff                	test   %edi,%edi
   23af6:	74 32                	je     23b2a <stdlog_severity_to_string+0x3a>
   23af8:	48 8d 15 21 e8 22 00 	lea    0x22e821(%rip),%rdx        # 252320 <severity_tab>
   23aff:	48 8d 05 a0 d6 01 00 	lea    0x1d6a0(%rip),%rax        # 411a6 <f58_prefix+0x1d43>
   23b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23b0d:	00 00 00 
   23b10:	48 83 c2 10          	add    $0x10,%rdx
   23b14:	39 7a 08             	cmp    %edi,0x8(%rdx)
   23b17:	74 18                	je     23b31 <stdlog_severity_to_string+0x41>
   23b19:	48 8b 42 10          	mov    0x10(%rdx),%rax
   23b1d:	48 85 c0             	test   %rax,%rax
   23b20:	75 ee                	jne    23b10 <stdlog_severity_to_string+0x20>
   23b22:	48 8d 05 70 b8 01 00 	lea    0x1b870(%rip),%rax        # 3f399 <__PRETTY_FUNCTION__.5787+0x29>
   23b29:	c3                   	retq   
   23b2a:	48 8d 05 f3 e5 01 00 	lea    0x1e5f3(%rip),%rax        # 42124 <k+0x124>
   23b31:	c3                   	retq   

0000000000023b32 <.annobin_stdlog_severity_to_string.end>:
   23b32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   23b39:	00 00 00 00 
   23b3d:	0f 1f 00             	nopl   (%rax)

0000000000023b40 <stdlog_string_to_severity>:
   23b40:	f3 0f 1e fa          	endbr64 
   23b44:	41 54                	push   %r12
   23b46:	49 89 fc             	mov    %rdi,%r12
   23b49:	48 8d 3d d4 e5 01 00 	lea    0x1e5d4(%rip),%rdi        # 42124 <k+0x124>
   23b50:	55                   	push   %rbp
   23b51:	31 ed                	xor    %ebp,%ebp
   23b53:	53                   	push   %rbx
   23b54:	48 8d 1d d5 e7 22 00 	lea    0x22e7d5(%rip),%rbx        # 252330 <severity_tab+0x10>
   23b5b:	eb 13                	jmp    23b70 <stdlog_string_to_severity+0x30>
   23b5d:	0f 1f 00             	nopl   (%rax)
   23b60:	48 83 c3 10          	add    $0x10,%rbx
   23b64:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
   23b68:	83 c5 01             	add    $0x1,%ebp
   23b6b:	48 85 ff             	test   %rdi,%rdi
   23b6e:	74 28                	je     23b98 <stdlog_string_to_severity+0x58>
   23b70:	4c 89 e6             	mov    %r12,%rsi
   23b73:	e8 48 bf fe ff       	callq  fac0 <strcasecmp@plt>
   23b78:	85 c0                	test   %eax,%eax
   23b7a:	75 e4                	jne    23b60 <stdlog_string_to_severity+0x20>
   23b7c:	48 63 ed             	movslq %ebp,%rbp
   23b7f:	48 8d 05 9a e7 22 00 	lea    0x22e79a(%rip),%rax        # 252320 <severity_tab>
   23b86:	5b                   	pop    %rbx
   23b87:	48 c1 e5 04          	shl    $0x4,%rbp
   23b8b:	8b 44 28 08          	mov    0x8(%rax,%rbp,1),%eax
   23b8f:	5d                   	pop    %rbp
   23b90:	41 5c                	pop    %r12
   23b92:	c3                   	retq   
   23b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23b98:	5b                   	pop    %rbx
   23b99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   23b9e:	5d                   	pop    %rbp
   23b9f:	41 5c                	pop    %r12
   23ba1:	c3                   	retq   

0000000000023ba2 <.annobin_stdlog.c_end>:
   23ba2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23ba9:	00 00 00 
   23bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023bb0 <strstrip>:
   23bb0:	f3 0f 1e fa          	endbr64 
   23bb4:	55                   	push   %rbp
   23bb5:	53                   	push   %rbx
   23bb6:	48 83 ec 08          	sub    $0x8,%rsp
   23bba:	48 85 ff             	test   %rdi,%rdi
   23bbd:	0f 84 85 00 00 00    	je     23c48 <strstrip+0x98>
   23bc3:	48 89 fb             	mov    %rdi,%rbx
   23bc6:	e8 55 c2 fe ff       	callq  fe20 <strlen@plt>
   23bcb:	48 85 c0             	test   %rax,%rax
   23bce:	74 68                	je     23c38 <strstrip+0x88>
   23bd0:	48 8d 6c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbp
   23bd5:	48 39 eb             	cmp    %rbp,%rbx
   23bd8:	77 22                	ja     23bfc <strstrip+0x4c>
   23bda:	e8 21 cf fe ff       	callq  10b00 <__ctype_b_loc@plt>
   23bdf:	48 8b 10             	mov    (%rax),%rdx
   23be2:	eb 0d                	jmp    23bf1 <strstrip+0x41>
   23be4:	0f 1f 40 00          	nopl   0x0(%rax)
   23be8:	48 83 ed 01          	sub    $0x1,%rbp
   23bec:	48 39 eb             	cmp    %rbp,%rbx
   23bef:	77 0b                	ja     23bfc <strstrip+0x4c>
   23bf1:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   23bf5:	f6 44 42 01 20       	testb  $0x20,0x1(%rdx,%rax,2)
   23bfa:	75 ec                	jne    23be8 <strstrip+0x38>
   23bfc:	c6 45 01 00          	movb   $0x0,0x1(%rbp)
   23c00:	0f b6 2b             	movzbl (%rbx),%ebp
   23c03:	40 84 ed             	test   %bpl,%bpl
   23c06:	74 30                	je     23c38 <strstrip+0x88>
   23c08:	e8 f3 ce fe ff       	callq  10b00 <__ctype_b_loc@plt>
   23c0d:	48 8b 10             	mov    (%rax),%rdx
   23c10:	48 89 d8             	mov    %rbx,%rax
   23c13:	eb 0f                	jmp    23c24 <strstrip+0x74>
   23c15:	0f 1f 00             	nopl   (%rax)
   23c18:	48 83 c0 01          	add    $0x1,%rax
   23c1c:	0f b6 28             	movzbl (%rax),%ebp
   23c1f:	40 84 ed             	test   %bpl,%bpl
   23c22:	74 07                	je     23c2b <strstrip+0x7b>
   23c24:	f6 44 6a 01 20       	testb  $0x20,0x1(%rdx,%rbp,2)
   23c29:	75 ed                	jne    23c18 <strstrip+0x68>
   23c2b:	48 83 c4 08          	add    $0x8,%rsp
   23c2f:	5b                   	pop    %rbx
   23c30:	5d                   	pop    %rbp
   23c31:	c3                   	retq   
   23c32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23c38:	48 83 c4 08          	add    $0x8,%rsp
   23c3c:	48 89 d8             	mov    %rbx,%rax
   23c3f:	5b                   	pop    %rbx
   23c40:	5d                   	pop    %rbp
   23c41:	c3                   	retq   
   23c42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23c48:	e8 c3 be fe ff       	callq  fb10 <__errno_location@plt>
   23c4d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23c53:	31 c0                	xor    %eax,%eax
   23c55:	eb d4                	jmp    23c2b <strstrip+0x7b>

0000000000023c57 <.annobin_strstrip.end>:
   23c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   23c5e:	00 00 

0000000000023c60 <strstrip_copy>:
   23c60:	f3 0f 1e fa          	endbr64 
   23c64:	41 54                	push   %r12
   23c66:	55                   	push   %rbp
   23c67:	53                   	push   %rbx
   23c68:	48 85 ff             	test   %rdi,%rdi
   23c6b:	0f 84 cf 00 00 00    	je     23d40 <strstrip_copy+0xe0>
   23c71:	0f b6 1f             	movzbl (%rdi),%ebx
   23c74:	48 89 fd             	mov    %rdi,%rbp
   23c77:	84 db                	test   %bl,%bl
   23c79:	0f 84 b1 00 00 00    	je     23d30 <strstrip_copy+0xd0>
   23c7f:	e8 7c ce fe ff       	callq  10b00 <__ctype_b_loc@plt>
   23c84:	4c 8b 20             	mov    (%rax),%r12
   23c87:	eb 13                	jmp    23c9c <strstrip_copy+0x3c>
   23c89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23c90:	48 83 c5 01          	add    $0x1,%rbp
   23c94:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   23c98:	84 db                	test   %bl,%bl
   23c9a:	74 08                	je     23ca4 <strstrip_copy+0x44>
   23c9c:	41 f6 44 5c 01 20    	testb  $0x20,0x1(%r12,%rbx,2)
   23ca2:	75 ec                	jne    23c90 <strstrip_copy+0x30>
   23ca4:	48 89 ef             	mov    %rbp,%rdi
   23ca7:	e8 f4 cc fe ff       	callq  109a0 <strdup@plt>
   23cac:	48 85 c0             	test   %rax,%rax
   23caf:	74 53                	je     23d04 <strstrip_copy+0xa4>
   23cb1:	48 89 c1             	mov    %rax,%rcx
   23cb4:	8b 31                	mov    (%rcx),%esi
   23cb6:	48 83 c1 04          	add    $0x4,%rcx
   23cba:	8d 96 ff fe fe fe    	lea    -0x1010101(%rsi),%edx
   23cc0:	f7 d6                	not    %esi
   23cc2:	21 f2                	and    %esi,%edx
   23cc4:	81 e2 80 80 80 80    	and    $0x80808080,%edx
   23cca:	74 e8                	je     23cb4 <strstrip_copy+0x54>
   23ccc:	89 d6                	mov    %edx,%esi
   23cce:	c1 ee 10             	shr    $0x10,%esi
   23cd1:	f7 c2 80 80 00 00    	test   $0x8080,%edx
   23cd7:	0f 44 d6             	cmove  %esi,%edx
   23cda:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   23cde:	48 0f 44 ce          	cmove  %rsi,%rcx
   23ce2:	89 d7                	mov    %edx,%edi
   23ce4:	40 00 d7             	add    %dl,%dil
   23ce7:	48 83 d9 03          	sbb    $0x3,%rcx
   23ceb:	48 29 c1             	sub    %rax,%rcx
   23cee:	74 14                	je     23d04 <strstrip_copy+0xa4>
   23cf0:	48 8d 54 08 ff       	lea    -0x1(%rax,%rcx,1),%rdx
   23cf5:	48 39 d0             	cmp    %rdx,%rax
   23cf8:	76 1f                	jbe    23d19 <strstrip_copy+0xb9>
   23cfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23d00:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   23d04:	5b                   	pop    %rbx
   23d05:	5d                   	pop    %rbp
   23d06:	41 5c                	pop    %r12
   23d08:	c3                   	retq   
   23d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23d10:	48 83 ea 01          	sub    $0x1,%rdx
   23d14:	48 39 d0             	cmp    %rdx,%rax
   23d17:	77 e7                	ja     23d00 <strstrip_copy+0xa0>
   23d19:	0f b6 0a             	movzbl (%rdx),%ecx
   23d1c:	41 f6 44 4c 01 20    	testb  $0x20,0x1(%r12,%rcx,2)
   23d22:	75 ec                	jne    23d10 <strstrip_copy+0xb0>
   23d24:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   23d28:	eb da                	jmp    23d04 <strstrip_copy+0xa4>
   23d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23d30:	5b                   	pop    %rbx
   23d31:	5d                   	pop    %rbp
   23d32:	41 5c                	pop    %r12
   23d34:	e9 67 cc fe ff       	jmpq   109a0 <strdup@plt>
   23d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23d40:	e8 cb bd fe ff       	callq  fb10 <__errno_location@plt>
   23d45:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   23d4b:	31 c0                	xor    %eax,%eax
   23d4d:	eb b5                	jmp    23d04 <strstrip_copy+0xa4>

0000000000023d4f <.annobin_strstrip.c_end>:
   23d4f:	90                   	nop

0000000000023d50 <timestamp_tostr>:
   23d50:	f3 0f 1e fa          	endbr64 
   23d54:	41 54                	push   %r12
   23d56:	55                   	push   %rbp
   23d57:	53                   	push   %rbx
   23d58:	48 83 ec 50          	sub    $0x50,%rsp
   23d5c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   23d61:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23d68:	00 00 
   23d6a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   23d6f:	31 c0                	xor    %eax,%eax
   23d71:	48 85 ff             	test   %rdi,%rdi
   23d74:	78 5a                	js     23dd0 <timestamp_tostr+0x80>
   23d76:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   23d7b:	49 89 f4             	mov    %rsi,%r12
   23d7e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   23d83:	89 d3                	mov    %edx,%ebx
   23d85:	48 89 ee             	mov    %rbp,%rsi
   23d88:	e8 13 c2 fe ff       	callq  ffa0 <gmtime_r@plt>
   23d8d:	48 85 c0             	test   %rax,%rax
   23d90:	74 3e                	je     23dd0 <timestamp_tostr+0x80>
   23d92:	48 63 f3             	movslq %ebx,%rsi
   23d95:	48 89 e9             	mov    %rbp,%rcx
   23d98:	48 8d 15 a1 e3 01 00 	lea    0x1e3a1(%rip),%rdx        # 42140 <k+0x140>
   23d9f:	4c 89 e7             	mov    %r12,%rdi
   23da2:	e8 19 c9 fe ff       	callq  106c0 <strftime@plt>
   23da7:	48 85 c0             	test   %rax,%rax
   23daa:	0f 94 c0             	sete   %al
   23dad:	0f b6 c0             	movzbl %al,%eax
   23db0:	f7 d8                	neg    %eax
   23db2:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   23db7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   23dbe:	00 00 
   23dc0:	75 15                	jne    23dd7 <timestamp_tostr+0x87>
   23dc2:	48 83 c4 50          	add    $0x50,%rsp
   23dc6:	5b                   	pop    %rbx
   23dc7:	5d                   	pop    %rbp
   23dc8:	41 5c                	pop    %r12
   23dca:	c3                   	retq   
   23dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23dd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   23dd5:	eb db                	jmp    23db2 <timestamp_tostr+0x62>
   23dd7:	e8 74 c0 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000023ddc <.annobin_timestamp_fromstr.start>:
   23ddc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023de0 <timestamp_fromstr>:
   23de0:	f3 0f 1e fa          	endbr64 
   23de4:	55                   	push   %rbp
   23de5:	48 89 f5             	mov    %rsi,%rbp
   23de8:	48 8d 35 51 e3 01 00 	lea    0x1e351(%rip),%rsi        # 42140 <k+0x140>
   23def:	53                   	push   %rbx
   23df0:	48 83 ec 48          	sub    $0x48,%rsp
   23df4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23dfb:	00 00 
   23dfd:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23e02:	31 c0                	xor    %eax,%eax
   23e04:	48 89 e3             	mov    %rsp,%rbx
   23e07:	48 89 da             	mov    %rbx,%rdx
   23e0a:	e8 21 cc fe ff       	callq  10a30 <strptime@plt>
   23e0f:	48 85 c0             	test   %rax,%rax
   23e12:	74 3c                	je     23e50 <timestamp_fromstr+0x70>
   23e14:	48 89 df             	mov    %rbx,%rdi
   23e17:	e8 04 c8 fe ff       	callq  10620 <timegm@plt>
   23e1c:	48 89 c2             	mov    %rax,%rdx
   23e1f:	48 85 c0             	test   %rax,%rax
   23e22:	78 2c                	js     23e50 <timestamp_fromstr+0x70>
   23e24:	31 c0                	xor    %eax,%eax
   23e26:	48 85 ed             	test   %rbp,%rbp
   23e29:	74 04                	je     23e2f <timestamp_fromstr+0x4f>
   23e2b:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   23e2f:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   23e34:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   23e3b:	00 00 
   23e3d:	75 18                	jne    23e57 <timestamp_fromstr+0x77>
   23e3f:	48 83 c4 48          	add    $0x48,%rsp
   23e43:	5b                   	pop    %rbx
   23e44:	5d                   	pop    %rbp
   23e45:	c3                   	retq   
   23e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23e4d:	00 00 00 
   23e50:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   23e55:	eb d8                	jmp    23e2f <timestamp_fromstr+0x4f>
   23e57:	e8 f4 bf fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000023e5c <.annobin_timestamp.c_end>:
   23e5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023e60 <errprintf>:
   23e60:	41 57                	push   %r15
   23e62:	41 56                	push   %r14
   23e64:	41 55                	push   %r13
   23e66:	49 89 cd             	mov    %rcx,%r13
   23e69:	41 54                	push   %r12
   23e6b:	41 89 d4             	mov    %edx,%r12d
   23e6e:	55                   	push   %rbp
   23e6f:	48 89 f5             	mov    %rsi,%rbp
   23e72:	53                   	push   %rbx
   23e73:	48 89 fb             	mov    %rdi,%rbx
   23e76:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   23e7d:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   23e82:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   23e87:	84 c0                	test   %al,%al
   23e89:	74 37                	je     23ec2 <errprintf+0x62>
   23e8b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   23e90:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   23e95:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   23e9a:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   23ea1:	00 
   23ea2:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   23ea9:	00 
   23eaa:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   23eb1:	00 
   23eb2:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   23eb9:	00 
   23eba:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   23ec1:	00 
   23ec2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23ec9:	00 00 
   23ecb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   23ed0:	31 c0                	xor    %eax,%eax
   23ed2:	e8 39 bc fe ff       	callq  fb10 <__errno_location@plt>
   23ed7:	49 89 c6             	mov    %rax,%r14
   23eda:	44 8b 38             	mov    (%rax),%r15d
   23edd:	48 85 db             	test   %rbx,%rbx
   23ee0:	0f 84 93 00 00 00    	je     23f79 <errprintf+0x119>
   23ee6:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   23eea:	48 89 d9             	mov    %rbx,%rcx
   23eed:	31 c0                	xor    %eax,%eax
   23eef:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   23ef6:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   23efa:	49 89 e1             	mov    %rsp,%r9
   23efd:	4d 89 e8             	mov    %r13,%r8
   23f00:	ba 01 00 00 00       	mov    $0x1,%edx
   23f05:	48 29 f9             	sub    %rdi,%rcx
   23f08:	be c8 00 00 00       	mov    $0xc8,%esi
   23f0d:	48 c7 83 c8 10 00 00 	movq   $0x0,0x10c8(%rbx)
   23f14:	00 00 00 00 
   23f18:	81 c1 d0 10 00 00    	add    $0x10d0,%ecx
   23f1e:	c1 e9 03             	shr    $0x3,%ecx
   23f21:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   23f24:	48 8d 84 24 10 01 00 	lea    0x110(%rsp),%rax
   23f2b:	00 
   23f2c:	48 8d bb 08 10 00 00 	lea    0x1008(%rbx),%rdi
   23f33:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   23f3a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   23f3f:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   23f44:	c7 04 24 20 00 00 00 	movl   $0x20,(%rsp)
   23f4b:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   23f52:	00 
   23f53:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   23f58:	e8 03 c6 fe ff       	callq  10560 <__vsnprintf_chk@plt>
   23f5d:	48 85 ed             	test   %rbp,%rbp
   23f60:	74 10                	je     23f72 <errprintf+0x112>
  return __builtin___strncpy_chk (__dest, __src, __len,
   23f62:	ba 00 10 00 00       	mov    $0x1000,%edx
   23f67:	48 89 ee             	mov    %rbp,%rsi
   23f6a:	48 89 df             	mov    %rbx,%rdi
   23f6d:	e8 ee bb fe ff       	callq  fb60 <strncpy@plt>
   23f72:	44 89 a3 04 10 00 00 	mov    %r12d,0x1004(%rbx)
   23f79:	45 89 3e             	mov    %r15d,(%r14)
   23f7c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   23f81:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   23f88:	00 00 
   23f8a:	75 12                	jne    23f9e <errprintf+0x13e>
   23f8c:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   23f93:	5b                   	pop    %rbx
   23f94:	5d                   	pop    %rbp
   23f95:	41 5c                	pop    %r12
   23f97:	41 5d                	pop    %r13
   23f99:	41 5e                	pop    %r14
   23f9b:	41 5f                	pop    %r15
   23f9d:	c3                   	retq   
   23f9e:	e8 ad be fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000023fa3 <.annobin_errfromtoml.part.1.start>:
   23fa3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   23faa:	00 00 00 00 
   23fae:	66 90                	xchg   %ax,%ax

0000000000023fb0 <errfromtoml.part.1>:
   23fb0:	55                   	push   %rbp
   23fb1:	b9 05 00 00 00       	mov    $0x5,%ecx
   23fb6:	48 89 f5             	mov    %rsi,%rbp
   23fb9:	48 89 d6             	mov    %rdx,%rsi
   23fbc:	53                   	push   %rbx
   23fbd:	48 89 fb             	mov    %rdi,%rbx
   23fc0:	48 8d 3d 80 e1 01 00 	lea    0x1e180(%rip),%rdi        # 42147 <k+0x147>
   23fc7:	49 89 d0             	mov    %rdx,%r8
   23fca:	48 83 ec 18          	sub    $0x18,%rsp
   23fce:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23fd5:	00 00 
   23fd7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   23fdc:	31 c0                	xor    %eax,%eax
   23fde:	48 89 14 24          	mov    %rdx,(%rsp)
   23fe2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   23fe7:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   23fe9:	0f 97 c1             	seta   %cl
   23fec:	80 d9 00             	sbb    $0x0,%cl
   23fef:	84 c9                	test   %cl,%cl
   23ff1:	74 2d                	je     24020 <errfromtoml.part.1+0x70>
   23ff3:	31 c0                	xor    %eax,%eax
   23ff5:	48 8d 0d 10 f2 01 00 	lea    0x1f210(%rip),%rcx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   23ffc:	48 89 ee             	mov    %rbp,%rsi
   23fff:	48 89 df             	mov    %rbx,%rdi
   24002:	e8 59 fe ff ff       	callq  23e60 <errprintf>
   24007:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2400c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   24013:	00 00 
   24015:	75 44                	jne    2405b <errfromtoml.part.1+0xab>
   24017:	48 83 c4 18          	add    $0x18,%rsp
   2401b:	5b                   	pop    %rbx
   2401c:	5d                   	pop    %rbp
   2401d:	c3                   	retq   
   2401e:	66 90                	xchg   %ax,%ax
   24020:	49 8d 78 05          	lea    0x5(%r8),%rdi
   24024:	48 89 e6             	mov    %rsp,%rsi
   24027:	ba 0a 00 00 00       	mov    $0xa,%edx
   2402c:	e8 1f c8 fe ff       	callq  10850 <strtoul@plt>
   24031:	4c 8b 04 24          	mov    (%rsp),%r8
   24035:	b9 02 00 00 00       	mov    $0x2,%ecx
   2403a:	48 8d 3d 0c e1 01 00 	lea    0x1e10c(%rip),%rdi        # 4214d <k+0x14d>
   24041:	89 c2                	mov    %eax,%edx
   24043:	4c 89 c6             	mov    %r8,%rsi
   24046:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   24048:	0f 97 c0             	seta   %al
   2404b:	1c 00                	sbb    $0x0,%al
   2404d:	84 c0                	test   %al,%al
   2404f:	75 a2                	jne    23ff3 <errfromtoml.part.1+0x43>
   24051:	49 83 c0 02          	add    $0x2,%r8
   24055:	4c 89 04 24          	mov    %r8,(%rsp)
   24059:	eb 98                	jmp    23ff3 <errfromtoml.part.1+0x43>
   2405b:	e8 f0 bd fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024060 <tomltk_ts_to_epoch>:
   24060:	f3 0f 1e fa          	endbr64 
   24064:	53                   	push   %rbx
   24065:	48 83 ec 40          	sub    $0x40,%rsp
   24069:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24070:	00 00 
   24072:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24077:	31 c0                	xor    %eax,%eax
   24079:	48 85 ff             	test   %rdi,%rdi
   2407c:	0f 84 ce 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   24082:	48 8b 47 28          	mov    0x28(%rdi),%rax
   24086:	48 85 c0             	test   %rax,%rax
   24089:	0f 84 c1 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   2408f:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   24093:	48 85 d2             	test   %rdx,%rdx
   24096:	0f 84 b4 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   2409c:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   240a0:	48 85 c9             	test   %rcx,%rcx
   240a3:	0f 84 a7 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   240a9:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   240ad:	4d 85 c0             	test   %r8,%r8
   240b0:	0f 84 9a 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   240b6:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   240ba:	4d 85 c9             	test   %r9,%r9
   240bd:	0f 84 8d 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
   240c3:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   240c7:	4d 85 d2             	test   %r10,%r10
   240ca:	0f 84 80 00 00 00    	je     24150 <tomltk_ts_to_epoch+0xf0>
  return __builtin___memset_chk (__dest, __ch, __len,
   240d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   240d4:	48 89 e7             	mov    %rsp,%rdi
   240d7:	48 89 f3             	mov    %rsi,%rbx
   240da:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   240e1:	00 00 
   240e3:	0f 29 04 24          	movaps %xmm0,(%rsp)
   240e7:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   240ec:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   240f1:	8b 00                	mov    (%rax),%eax
   240f3:	2d 6c 07 00 00       	sub    $0x76c,%eax
   240f8:	89 44 24 14          	mov    %eax,0x14(%rsp)
   240fc:	8b 02                	mov    (%rdx),%eax
   240fe:	83 e8 01             	sub    $0x1,%eax
   24101:	89 44 24 10          	mov    %eax,0x10(%rsp)
   24105:	8b 01                	mov    (%rcx),%eax
   24107:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   2410b:	41 8b 00             	mov    (%r8),%eax
   2410e:	89 44 24 08          	mov    %eax,0x8(%rsp)
   24112:	41 8b 01             	mov    (%r9),%eax
   24115:	89 44 24 04          	mov    %eax,0x4(%rsp)
   24119:	41 8b 02             	mov    (%r10),%eax
   2411c:	89 04 24             	mov    %eax,(%rsp)
   2411f:	e8 fc c4 fe ff       	callq  10620 <timegm@plt>
   24124:	48 89 c2             	mov    %rax,%rdx
   24127:	48 85 c0             	test   %rax,%rax
   2412a:	78 24                	js     24150 <tomltk_ts_to_epoch+0xf0>
   2412c:	31 c0                	xor    %eax,%eax
   2412e:	48 85 db             	test   %rbx,%rbx
   24131:	74 03                	je     24136 <tomltk_ts_to_epoch+0xd6>
   24133:	48 89 13             	mov    %rdx,(%rbx)
   24136:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   2413b:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   24142:	00 00 
   24144:	75 1c                	jne    24162 <tomltk_ts_to_epoch+0x102>
   24146:	48 83 c4 40          	add    $0x40,%rsp
   2414a:	5b                   	pop    %rbx
   2414b:	c3                   	retq   
   2414c:	0f 1f 40 00          	nopl   0x0(%rax)
   24150:	e8 bb b9 fe ff       	callq  fb10 <__errno_location@plt>
   24155:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2415b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   24160:	eb d4                	jmp    24136 <tomltk_ts_to_epoch+0xd6>
   24162:	e8 e9 bc fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024167 <.annobin_tomltk_json_to_epoch.start>:
   24167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2416e:	00 00 

0000000000024170 <tomltk_json_to_epoch>:
   24170:	f3 0f 1e fa          	endbr64 
   24174:	53                   	push   %rbx
   24175:	48 83 ec 10          	sub    $0x10,%rsp
   24179:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24180:	00 00 
   24182:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24187:	31 c0                	xor    %eax,%eax
   24189:	48 85 ff             	test   %rdi,%rdi
   2418c:	74 4a                	je     241d8 <tomltk_json_to_epoch+0x68>
   2418e:	48 89 f3             	mov    %rsi,%rbx
   24191:	31 c0                	xor    %eax,%eax
   24193:	48 8d 15 b6 df 01 00 	lea    0x1dfb6(%rip),%rdx        # 42150 <k+0x150>
   2419a:	48 89 e1             	mov    %rsp,%rcx
   2419d:	48 8d 35 b8 df 01 00 	lea    0x1dfb8(%rip),%rsi        # 4215c <k+0x15c>
   241a4:	e8 b7 bf fe ff       	callq  10160 <json_unpack@plt>
   241a9:	85 c0                	test   %eax,%eax
   241ab:	78 2b                	js     241d8 <tomltk_json_to_epoch+0x68>
   241ad:	48 8b 3c 24          	mov    (%rsp),%rdi
   241b1:	48 89 de             	mov    %rbx,%rsi
   241b4:	e8 27 fc ff ff       	callq  23de0 <timestamp_fromstr>
   241b9:	85 c0                	test   %eax,%eax
   241bb:	78 1b                	js     241d8 <tomltk_json_to_epoch+0x68>
   241bd:	31 c0                	xor    %eax,%eax
   241bf:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   241c4:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   241cb:	00 00 
   241cd:	75 1b                	jne    241ea <tomltk_json_to_epoch+0x7a>
   241cf:	48 83 c4 10          	add    $0x10,%rsp
   241d3:	5b                   	pop    %rbx
   241d4:	c3                   	retq   
   241d5:	0f 1f 00             	nopl   (%rax)
   241d8:	e8 33 b9 fe ff       	callq  fb10 <__errno_location@plt>
   241dd:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   241e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   241e8:	eb d5                	jmp    241bf <tomltk_json_to_epoch+0x4f>
   241ea:	e8 61 bc fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000241ef <.annobin_tomltk_epoch_to_json.start>:
   241ef:	90                   	nop

00000000000241f0 <tomltk_epoch_to_json>:
   241f0:	f3 0f 1e fa          	endbr64 
   241f4:	53                   	push   %rbx
   241f5:	ba 50 00 00 00       	mov    $0x50,%edx
   241fa:	48 83 ec 60          	sub    $0x60,%rsp
   241fe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24205:	00 00 
   24207:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2420c:	31 c0                	xor    %eax,%eax
   2420e:	48 89 e3             	mov    %rsp,%rbx
   24211:	48 89 de             	mov    %rbx,%rsi
   24214:	e8 37 fb ff ff       	callq  23d50 <timestamp_tostr>
   24219:	85 c0                	test   %eax,%eax
   2421b:	78 43                	js     24260 <tomltk_epoch_to_json+0x70>
   2421d:	48 89 da             	mov    %rbx,%rdx
   24220:	48 8d 35 29 df 01 00 	lea    0x1df29(%rip),%rsi        # 42150 <k+0x150>
   24227:	48 8d 3d 2e df 01 00 	lea    0x1df2e(%rip),%rdi        # 4215c <k+0x15c>
   2422e:	31 c0                	xor    %eax,%eax
   24230:	e8 3b c1 fe ff       	callq  10370 <json_pack@plt>
   24235:	48 89 c3             	mov    %rax,%rbx
   24238:	48 85 c0             	test   %rax,%rax
   2423b:	74 33                	je     24270 <tomltk_epoch_to_json+0x80>
   2423d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   24242:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24249:	00 00 
   2424b:	48 89 d8             	mov    %rbx,%rax
   2424e:	75 2d                	jne    2427d <tomltk_epoch_to_json+0x8d>
   24250:	48 83 c4 60          	add    $0x60,%rsp
   24254:	5b                   	pop    %rbx
   24255:	c3                   	retq   
   24256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2425d:	00 00 00 
   24260:	e8 ab b8 fe ff       	callq  fb10 <__errno_location@plt>
   24265:	31 db                	xor    %ebx,%ebx
   24267:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2426d:	eb ce                	jmp    2423d <tomltk_epoch_to_json+0x4d>
   2426f:	90                   	nop
   24270:	e8 9b b8 fe ff       	callq  fb10 <__errno_location@plt>
   24275:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2427b:	eb c0                	jmp    2423d <tomltk_epoch_to_json+0x4d>
   2427d:	e8 ce bb fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024282 <.annobin_tomltk_epoch_to_json.end>:
   24282:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   24289:	00 00 00 00 
   2428d:	0f 1f 00             	nopl   (%rax)

0000000000024290 <value_to_json>:
   24290:	41 54                	push   %r12
   24292:	55                   	push   %rbp
   24293:	48 89 f5             	mov    %rsi,%rbp
   24296:	53                   	push   %rbx
   24297:	48 89 fb             	mov    %rdi,%rbx
   2429a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   242a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   242a8:	00 00 
   242aa:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   242b1:	00 
   242b2:	31 c0                	xor    %eax,%eax
   242b4:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   242b9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   242c0:	00 00 
   242c2:	e8 d9 c9 00 00       	callq  30ca0 <toml_rtos>
   242c7:	85 c0                	test   %eax,%eax
   242c9:	75 4d                	jne    24318 <value_to_json+0x88>
   242cb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   242d0:	e8 6b c8 fe ff       	callq  10b40 <json_string@plt>
   242d5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   242da:	48 89 c3             	mov    %rax,%rbx
   242dd:	e8 ce b7 fe ff       	callq  fab0 <free@plt>
   242e2:	48 85 db             	test   %rbx,%rbx
   242e5:	0f 84 0c 01 00 00    	je     243f7 <value_to_json+0x167>
   242eb:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   242ef:	31 c0                	xor    %eax,%eax
   242f1:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   242f8:	00 
   242f9:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   24300:	00 00 
   24302:	0f 85 0f 01 00 00    	jne    24417 <value_to_json+0x187>
   24308:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   2430f:	5b                   	pop    %rbx
   24310:	5d                   	pop    %rbp
   24311:	41 5c                	pop    %r12
   24313:	c3                   	retq   
   24314:	0f 1f 40 00          	nopl   0x0(%rax)
   24318:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   2431d:	48 89 df             	mov    %rbx,%rdi
   24320:	e8 fb b1 00 00       	callq  2f520 <toml_rtob>
   24325:	85 c0                	test   %eax,%eax
   24327:	75 2f                	jne    24358 <value_to_json+0xc8>
   24329:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   2432d:	85 c0                	test   %eax,%eax
   2432f:	75 17                	jne    24348 <value_to_json+0xb8>
   24331:	e8 ca c3 fe ff       	callq  10700 <json_false@plt>
   24336:	48 89 c3             	mov    %rax,%rbx
   24339:	48 85 db             	test   %rbx,%rbx
   2433c:	75 ad                	jne    242eb <value_to_json+0x5b>
   2433e:	e9 b4 00 00 00       	jmpq   243f7 <value_to_json+0x167>
   24343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24348:	e8 13 b7 fe ff       	callq  fa60 <json_true@plt>
   2434d:	48 89 c3             	mov    %rax,%rbx
   24350:	eb e7                	jmp    24339 <value_to_json+0xa9>
   24352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24358:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   2435d:	48 89 df             	mov    %rbx,%rdi
   24360:	e8 5b b2 00 00       	callq  2f5c0 <toml_rtoi>
   24365:	85 c0                	test   %eax,%eax
   24367:	75 1f                	jne    24388 <value_to_json+0xf8>
   24369:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2436e:	e8 5d ba fe ff       	callq  fdd0 <json_integer@plt>
   24373:	48 89 c3             	mov    %rax,%rbx
   24376:	48 85 c0             	test   %rax,%rax
   24379:	0f 85 6c ff ff ff    	jne    242eb <value_to_json+0x5b>
   2437f:	eb 76                	jmp    243f7 <value_to_json+0x167>
   24381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24388:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2438d:	48 89 df             	mov    %rbx,%rdi
   24390:	e8 5b b5 00 00       	callq  2f8f0 <toml_rtod>
   24395:	85 c0                	test   %eax,%eax
   24397:	74 47                	je     243e0 <value_to_json+0x150>
   24399:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   2439e:	48 89 df             	mov    %rbx,%rdi
   243a1:	4c 89 e6             	mov    %r12,%rsi
   243a4:	e8 b7 ae 00 00       	callq  2f260 <toml_rtots>
   243a9:	85 c0                	test   %eax,%eax
   243ab:	75 57                	jne    24404 <value_to_json+0x174>
   243ad:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   243b2:	4c 89 e7             	mov    %r12,%rdi
   243b5:	e8 a6 fc ff ff       	callq  24060 <tomltk_ts_to_epoch>
   243ba:	85 c0                	test   %eax,%eax
   243bc:	78 16                	js     243d4 <value_to_json+0x144>
   243be:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   243c3:	e8 28 fe ff ff       	callq  241f0 <tomltk_epoch_to_json>
   243c8:	48 89 c3             	mov    %rax,%rbx
   243cb:	48 85 c0             	test   %rax,%rax
   243ce:	0f 85 17 ff ff ff    	jne    242eb <value_to_json+0x5b>
   243d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   243d9:	e9 13 ff ff ff       	jmpq   242f1 <value_to_json+0x61>
   243de:	66 90                	xchg   %ax,%ax
   243e0:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
   243e6:	e8 e5 b7 fe ff       	callq  fbd0 <json_real@plt>
   243eb:	48 89 c3             	mov    %rax,%rbx
   243ee:	48 85 c0             	test   %rax,%rax
   243f1:	0f 85 f4 fe ff ff    	jne    242eb <value_to_json+0x5b>
   243f7:	e8 14 b7 fe ff       	callq  fb10 <__errno_location@plt>
   243fc:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   24402:	eb d0                	jmp    243d4 <value_to_json+0x144>
   24404:	e8 07 b7 fe ff       	callq  fb10 <__errno_location@plt>
   24409:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2440f:	83 c8 ff             	or     $0xffffffff,%eax
   24412:	e9 da fe ff ff       	jmpq   242f1 <value_to_json+0x61>
   24417:	e8 34 ba fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002441c <.annobin_array_to_json.start>:
   2441c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024420 <array_to_json>:
   24420:	41 56                	push   %r14
   24422:	49 89 f6             	mov    %rsi,%r14
   24425:	41 55                	push   %r13
   24427:	41 54                	push   %r12
   24429:	55                   	push   %rbp
   2442a:	48 89 fd             	mov    %rdi,%rbp
   2442d:	53                   	push   %rbx
   2442e:	48 83 ec 20          	sub    $0x20,%rsp
   24432:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24439:	00 00 
   2443b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24440:	31 c0                	xor    %eax,%eax
   24442:	e8 d9 c5 fe ff       	callq  10a20 <json_array@plt>
   24447:	48 85 c0             	test   %rax,%rax
   2444a:	0f 84 38 01 00 00    	je     24588 <array_to_json+0x168>
   24450:	49 89 c4             	mov    %rax,%r12
   24453:	31 db                	xor    %ebx,%ebx
   24455:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   2445a:	eb 2b                	jmp    24487 <array_to_json+0x67>
   2445c:	0f 1f 40 00          	nopl   0x0(%rax)
   24460:	4c 89 ee             	mov    %r13,%rsi
   24463:	48 89 c7             	mov    %rax,%rdi
   24466:	e8 25 fe ff ff       	callq  24290 <value_to_json>
   2446b:	85 c0                	test   %eax,%eax
   2446d:	78 45                	js     244b4 <array_to_json+0x94>
   2446f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   24474:	4c 89 e7             	mov    %r12,%rdi
   24477:	e8 44 c6 fe ff       	callq  10ac0 <json_array_append_new@plt>
   2447c:	85 c0                	test   %eax,%eax
   2447e:	0f 88 a4 00 00 00    	js     24528 <array_to_json+0x108>
   24484:	83 c3 01             	add    $0x1,%ebx
   24487:	89 de                	mov    %ebx,%esi
   24489:	48 89 ef             	mov    %rbp,%rdi
   2448c:	e8 8f ac 00 00       	callq  2f120 <toml_raw_at>
   24491:	48 85 c0             	test   %rax,%rax
   24494:	75 ca                	jne    24460 <array_to_json+0x40>
   24496:	89 de                	mov    %ebx,%esi
   24498:	48 89 ef             	mov    %rbp,%rdi
   2449b:	e8 90 ad 00 00       	callq  2f230 <toml_table_at>
   244a0:	48 85 c0             	test   %rax,%rax
   244a3:	74 5b                	je     24500 <array_to_json+0xe0>
   244a5:	4c 89 ee             	mov    %r13,%rsi
   244a8:	48 89 c7             	mov    %rax,%rdi
   244ab:	e8 00 01 00 00       	callq  245b0 <table_to_json>
   244b0:	85 c0                	test   %eax,%eax
   244b2:	79 bb                	jns    2446f <array_to_json+0x4f>
   244b4:	e8 57 b6 fe ff       	callq  fb10 <__errno_location@plt>
   244b9:	8b 18                	mov    (%rax),%ebx
   244bb:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   244c0:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   244c4:	74 0d                	je     244d3 <array_to_json+0xb3>
   244c6:	f0 49 83 6c 24 08 01 	lock subq $0x1,0x8(%r12)
   244cd:	0f 84 94 00 00 00    	je     24567 <array_to_json+0x147>
   244d3:	89 18                	mov    %ebx,(%rax)
   244d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   244da:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   244df:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   244e6:	00 00 
   244e8:	0f 85 af 00 00 00    	jne    2459d <array_to_json+0x17d>
   244ee:	48 83 c4 20          	add    $0x20,%rsp
   244f2:	5b                   	pop    %rbx
   244f3:	5d                   	pop    %rbp
   244f4:	41 5c                	pop    %r12
   244f6:	41 5d                	pop    %r13
   244f8:	41 5e                	pop    %r14
   244fa:	c3                   	retq   
   244fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24500:	89 de                	mov    %ebx,%esi
   24502:	48 89 ef             	mov    %rbp,%rdi
   24505:	e8 f6 ac 00 00       	callq  2f200 <toml_array_at>
   2450a:	48 85 c0             	test   %rax,%rax
   2450d:	74 6f                	je     2457e <array_to_json+0x15e>
   2450f:	4c 89 ee             	mov    %r13,%rsi
   24512:	48 89 c7             	mov    %rax,%rdi
   24515:	e8 06 ff ff ff       	callq  24420 <array_to_json>
   2451a:	85 c0                	test   %eax,%eax
   2451c:	0f 89 4d ff ff ff    	jns    2446f <array_to_json+0x4f>
   24522:	eb 90                	jmp    244b4 <array_to_json+0x94>
   24524:	0f 1f 40 00          	nopl   0x0(%rax)
   24528:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2452d:	48 85 ff             	test   %rdi,%rdi
   24530:	74 0a                	je     2453c <array_to_json+0x11c>
   24532:	48 8b 47 08          	mov    0x8(%rdi),%rax
   24536:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2453a:	75 1c                	jne    24558 <array_to_json+0x138>
   2453c:	e8 cf b5 fe ff       	callq  fb10 <__errno_location@plt>
   24541:	bb 0c 00 00 00       	mov    $0xc,%ebx
   24546:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   2454c:	e9 6a ff ff ff       	jmpq   244bb <array_to_json+0x9b>
   24551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24558:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
   2455e:	75 dc                	jne    2453c <array_to_json+0x11c>
        json_delete(json);
   24560:	e8 bb ba fe ff       	callq  10020 <json_delete@plt>
   24565:	eb d5                	jmp    2453c <array_to_json+0x11c>
   24567:	4c 89 e7             	mov    %r12,%rdi
   2456a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2456f:	e8 ac ba fe ff       	callq  10020 <json_delete@plt>
   24574:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   24579:	e9 55 ff ff ff       	jmpq   244d3 <array_to_json+0xb3>
   2457e:	4d 89 26             	mov    %r12,(%r14)
   24581:	31 c0                	xor    %eax,%eax
   24583:	e9 52 ff ff ff       	jmpq   244da <array_to_json+0xba>
   24588:	e8 83 b5 fe ff       	callq  fb10 <__errno_location@plt>
   2458d:	bb 0c 00 00 00       	mov    $0xc,%ebx
   24592:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   24598:	e9 36 ff ff ff       	jmpq   244d3 <array_to_json+0xb3>
   2459d:	e8 ae b8 fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000245a2 <.annobin_array_to_json.end>:
   245a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   245a9:	00 00 00 00 
   245ad:	0f 1f 00             	nopl   (%rax)

00000000000245b0 <table_to_json>:
   245b0:	41 57                	push   %r15
   245b2:	49 89 f7             	mov    %rsi,%r15
   245b5:	41 56                	push   %r14
   245b7:	41 55                	push   %r13
   245b9:	41 54                	push   %r12
   245bb:	49 89 fc             	mov    %rdi,%r12
   245be:	55                   	push   %rbp
   245bf:	53                   	push   %rbx
   245c0:	48 83 ec 28          	sub    $0x28,%rsp
   245c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   245cb:	00 00 
   245cd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   245d2:	31 c0                	xor    %eax,%eax
   245d4:	e8 97 c3 fe ff       	callq  10970 <json_object@plt>
   245d9:	48 85 c0             	test   %rax,%rax
   245dc:	0f 84 64 01 00 00    	je     24746 <table_to_json+0x196>
   245e2:	49 89 c5             	mov    %rax,%r13
   245e5:	31 ed                	xor    %ebp,%ebp
   245e7:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   245ec:	eb 2c                	jmp    2461a <table_to_json+0x6a>
   245ee:	66 90                	xchg   %ax,%ax
   245f0:	4c 89 f6             	mov    %r14,%rsi
   245f3:	48 89 c7             	mov    %rax,%rdi
   245f6:	e8 95 fc ff ff       	callq  24290 <value_to_json>
   245fb:	85 c0                	test   %eax,%eax
   245fd:	78 69                	js     24668 <table_to_json+0xb8>
   245ff:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   24604:	48 89 de             	mov    %rbx,%rsi
   24607:	4c 89 ef             	mov    %r13,%rdi
   2460a:	e8 41 c1 fe ff       	callq  10750 <json_object_set_new@plt>
   2460f:	85 c0                	test   %eax,%eax
   24611:	0f 88 d9 00 00 00    	js     246f0 <table_to_json+0x140>
   24617:	83 c5 01             	add    $0x1,%ebp
   2461a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   24621:	00 00 
   24623:	89 ee                	mov    %ebp,%esi
   24625:	4c 89 e7             	mov    %r12,%rdi
   24628:	e8 53 a9 00 00       	callq  2ef80 <toml_key_in>
   2462d:	48 89 c3             	mov    %rax,%rbx
   24630:	48 85 c0             	test   %rax,%rax
   24633:	0f 84 a7 00 00 00    	je     246e0 <table_to_json+0x130>
   24639:	48 89 c6             	mov    %rax,%rsi
   2463c:	4c 89 e7             	mov    %r12,%rdi
   2463f:	e8 8c a9 00 00       	callq  2efd0 <toml_raw_in>
   24644:	48 85 c0             	test   %rax,%rax
   24647:	75 a7                	jne    245f0 <table_to_json+0x40>
   24649:	48 89 de             	mov    %rbx,%rsi
   2464c:	4c 89 e7             	mov    %r12,%rdi
   2464f:	e8 5c aa 00 00       	callq  2f0b0 <toml_table_in>
   24654:	48 85 c0             	test   %rax,%rax
   24657:	74 57                	je     246b0 <table_to_json+0x100>
   24659:	4c 89 f6             	mov    %r14,%rsi
   2465c:	48 89 c7             	mov    %rax,%rdi
   2465f:	e8 4c ff ff ff       	callq  245b0 <table_to_json>
   24664:	85 c0                	test   %eax,%eax
   24666:	79 97                	jns    245ff <table_to_json+0x4f>
   24668:	e8 a3 b4 fe ff       	callq  fb10 <__errno_location@plt>
   2466d:	8b 18                	mov    (%rax),%ebx
   2466f:	49 8b 55 08          	mov    0x8(%r13),%rdx
   24673:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   24677:	74 0c                	je     24685 <table_to_json+0xd5>
   24679:	f0 49 83 6d 08 01    	lock subq $0x1,0x8(%r13)
   2467f:	0f 84 aa 00 00 00    	je     2472f <table_to_json+0x17f>
   24685:	89 18                	mov    %ebx,(%rax)
   24687:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2468c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   24691:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24698:	00 00 
   2469a:	0f 85 bb 00 00 00    	jne    2475b <table_to_json+0x1ab>
   246a0:	48 83 c4 28          	add    $0x28,%rsp
   246a4:	5b                   	pop    %rbx
   246a5:	5d                   	pop    %rbp
   246a6:	41 5c                	pop    %r12
   246a8:	41 5d                	pop    %r13
   246aa:	41 5e                	pop    %r14
   246ac:	41 5f                	pop    %r15
   246ae:	c3                   	retq   
   246af:	90                   	nop
   246b0:	48 89 de             	mov    %rbx,%rsi
   246b3:	4c 89 e7             	mov    %r12,%rdi
   246b6:	e8 85 a9 00 00       	callq  2f040 <toml_array_in>
   246bb:	48 85 c0             	test   %rax,%rax
   246be:	0f 84 3b ff ff ff    	je     245ff <table_to_json+0x4f>
   246c4:	4c 89 f6             	mov    %r14,%rsi
   246c7:	48 89 c7             	mov    %rax,%rdi
   246ca:	e8 51 fd ff ff       	callq  24420 <array_to_json>
   246cf:	85 c0                	test   %eax,%eax
   246d1:	0f 89 28 ff ff ff    	jns    245ff <table_to_json+0x4f>
   246d7:	eb 8f                	jmp    24668 <table_to_json+0xb8>
   246d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   246e0:	4d 89 2f             	mov    %r13,(%r15)
   246e3:	31 c0                	xor    %eax,%eax
   246e5:	eb a5                	jmp    2468c <table_to_json+0xdc>
   246e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   246ee:	00 00 
   246f0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   246f5:	48 85 ff             	test   %rdi,%rdi
   246f8:	74 0a                	je     24704 <table_to_json+0x154>
   246fa:	48 8b 47 08          	mov    0x8(%rdi),%rax
   246fe:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   24702:	75 1c                	jne    24720 <table_to_json+0x170>
   24704:	e8 07 b4 fe ff       	callq  fb10 <__errno_location@plt>
   24709:	bb 0c 00 00 00       	mov    $0xc,%ebx
   2470e:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   24714:	e9 56 ff ff ff       	jmpq   2466f <table_to_json+0xbf>
   24719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24720:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
   24726:	75 dc                	jne    24704 <table_to_json+0x154>
        json_delete(json);
   24728:	e8 f3 b8 fe ff       	callq  10020 <json_delete@plt>
   2472d:	eb d5                	jmp    24704 <table_to_json+0x154>
   2472f:	4c 89 ef             	mov    %r13,%rdi
   24732:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24737:	e8 e4 b8 fe ff       	callq  10020 <json_delete@plt>
   2473c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   24741:	e9 3f ff ff ff       	jmpq   24685 <table_to_json+0xd5>
   24746:	e8 c5 b3 fe ff       	callq  fb10 <__errno_location@plt>
   2474b:	bb 0c 00 00 00       	mov    $0xc,%ebx
   24750:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   24756:	e9 2a ff ff ff       	jmpq   24685 <table_to_json+0xd5>
   2475b:	e8 f0 b6 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024760 <tomltk_table_to_json>:
   24760:	f3 0f 1e fa          	endbr64 
   24764:	48 83 ec 18          	sub    $0x18,%rsp
   24768:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2476f:	00 00 
   24771:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24776:	31 c0                	xor    %eax,%eax
   24778:	48 85 ff             	test   %rdi,%rdi
   2477b:	74 2b                	je     247a8 <tomltk_table_to_json+0x48>
   2477d:	48 89 e6             	mov    %rsp,%rsi
   24780:	e8 2b fe ff ff       	callq  245b0 <table_to_json>
   24785:	85 c0                	test   %eax,%eax
   24787:	78 37                	js     247c0 <tomltk_table_to_json+0x60>
   24789:	48 8b 04 24          	mov    (%rsp),%rax
   2478d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   24792:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   24799:	00 00 
   2479b:	75 27                	jne    247c4 <tomltk_table_to_json+0x64>
   2479d:	48 83 c4 18          	add    $0x18,%rsp
   247a1:	c3                   	retq   
   247a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   247a8:	e8 63 b3 fe ff       	callq  fb10 <__errno_location@plt>
   247ad:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   247b3:	31 c0                	xor    %eax,%eax
   247b5:	eb d6                	jmp    2478d <tomltk_table_to_json+0x2d>
   247b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   247be:	00 00 
   247c0:	31 c0                	xor    %eax,%eax
   247c2:	eb c9                	jmp    2478d <tomltk_table_to_json+0x2d>
   247c4:	e8 87 b6 fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000247c9 <.annobin_tomltk_parse.start>:
   247c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000247d0 <tomltk_parse>:
   247d0:	f3 0f 1e fa          	endbr64 
   247d4:	41 55                	push   %r13
   247d6:	41 54                	push   %r12
   247d8:	49 89 d4             	mov    %rdx,%r12
   247db:	55                   	push   %rbp
   247dc:	53                   	push   %rbx
   247dd:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   247e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   247eb:	00 00 
   247ed:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   247f4:	00 
   247f5:	31 c0                	xor    %eax,%eax
   247f7:	85 f6                	test   %esi,%esi
   247f9:	0f 88 91 00 00 00    	js     24890 <tomltk_parse+0xc0>
   247ff:	49 89 fd             	mov    %rdi,%r13
   24802:	89 f3                	mov    %esi,%ebx
   24804:	48 85 ff             	test   %rdi,%rdi
   24807:	75 08                	jne    24811 <tomltk_parse+0x41>
   24809:	85 f6                	test   %esi,%esi
   2480b:	0f 85 7f 00 00 00    	jne    24890 <tomltk_parse+0xc0>
   24811:	8d 73 01             	lea    0x1(%rbx),%esi
   24814:	bf 01 00 00 00       	mov    $0x1,%edi
   24819:	48 63 f6             	movslq %esi,%rsi
   2481c:	e8 ef b9 fe ff       	callq  10210 <calloc@plt>
   24821:	48 89 c5             	mov    %rax,%rbp
   24824:	48 85 c0             	test   %rax,%rax
   24827:	0f 84 93 00 00 00    	je     248c0 <tomltk_parse+0xf0>
   2482d:	48 63 d3             	movslq %ebx,%rdx
  return __builtin___memcpy_chk (__dest, __src, __len,
   24830:	4c 89 ee             	mov    %r13,%rsi
   24833:	48 89 c7             	mov    %rax,%rdi
   24836:	49 89 e5             	mov    %rsp,%r13
   24839:	e8 d2 ba fe ff       	callq  10310 <memcpy@plt>
   2483e:	48 89 ef             	mov    %rbp,%rdi
   24841:	ba c8 00 00 00       	mov    $0xc8,%edx
   24846:	4c 89 ee             	mov    %r13,%rsi
   24849:	e8 92 b8 00 00       	callq  300e0 <toml_parse>
   2484e:	48 89 ef             	mov    %rbp,%rdi
   24851:	48 89 c3             	mov    %rax,%rbx
   24854:	e8 57 b2 fe ff       	callq  fab0 <free@plt>
   24859:	48 85 db             	test   %rbx,%rbx
   2485c:	0f 84 8e 00 00 00    	je     248f0 <tomltk_parse+0x120>
   24862:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   24869:	00 
   2486a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24871:	00 00 
   24873:	48 89 d8             	mov    %rbx,%rax
   24876:	0f 85 96 00 00 00    	jne    24912 <tomltk_parse+0x142>
   2487c:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   24883:	5b                   	pop    %rbx
   24884:	5d                   	pop    %rbp
   24885:	41 5c                	pop    %r12
   24887:	41 5d                	pop    %r13
   24889:	c3                   	retq   
   2488a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24890:	48 8d 0d cb d8 01 00 	lea    0x1d8cb(%rip),%rcx        # 42162 <k+0x162>
   24897:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2489c:	31 f6                	xor    %esi,%esi
   2489e:	31 c0                	xor    %eax,%eax
   248a0:	4c 89 e7             	mov    %r12,%rdi
   248a3:	31 db                	xor    %ebx,%ebx
   248a5:	e8 b6 f5 ff ff       	callq  23e60 <errprintf>
   248aa:	e8 61 b2 fe ff       	callq  fb10 <__errno_location@plt>
   248af:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   248b5:	eb ab                	jmp    24862 <tomltk_parse+0x92>
   248b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   248be:	00 00 
   248c0:	48 8d 0d ac d8 01 00 	lea    0x1d8ac(%rip),%rcx        # 42173 <k+0x173>
   248c7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   248cc:	31 f6                	xor    %esi,%esi
   248ce:	31 c0                	xor    %eax,%eax
   248d0:	4c 89 e7             	mov    %r12,%rdi
   248d3:	31 db                	xor    %ebx,%ebx
   248d5:	e8 86 f5 ff ff       	callq  23e60 <errprintf>
   248da:	e8 31 b2 fe ff       	callq  fb10 <__errno_location@plt>
   248df:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   248e5:	e9 78 ff ff ff       	jmpq   24862 <tomltk_parse+0x92>
   248ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   248f0:	4d 85 e4             	test   %r12,%r12
   248f3:	74 0d                	je     24902 <tomltk_parse+0x132>
   248f5:	4c 89 ea             	mov    %r13,%rdx
   248f8:	31 f6                	xor    %esi,%esi
   248fa:	4c 89 e7             	mov    %r12,%rdi
   248fd:	e8 ae f6 ff ff       	callq  23fb0 <errfromtoml.part.1>
   24902:	e8 09 b2 fe ff       	callq  fb10 <__errno_location@plt>
   24907:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2490d:	e9 50 ff ff ff       	jmpq   24862 <tomltk_parse+0x92>
   24912:	e8 39 b5 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024917 <.annobin_tomltk_parse.end>:
   24917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2491e:	00 00 

0000000000024920 <tomltk_parse_file>:
   24920:	f3 0f 1e fa          	endbr64 
   24924:	41 56                	push   %r14
   24926:	49 89 f6             	mov    %rsi,%r14
   24929:	41 55                	push   %r13
   2492b:	41 54                	push   %r12
   2492d:	55                   	push   %rbp
   2492e:	53                   	push   %rbx
   2492f:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   24936:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2493d:	00 00 
   2493f:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   24946:	00 
   24947:	31 c0                	xor    %eax,%eax
   24949:	48 85 ff             	test   %rdi,%rdi
   2494c:	74 72                	je     249c0 <tomltk_parse_file+0xa0>
   2494e:	48 8d 35 20 c2 01 00 	lea    0x1c220(%rip),%rsi        # 40b75 <f58_prefix+0x1712>
   24955:	48 89 fd             	mov    %rdi,%rbp
   24958:	e8 33 be fe ff       	callq  10790 <fopen@plt>
   2495d:	48 89 c3             	mov    %rax,%rbx
   24960:	48 85 c0             	test   %rax,%rax
   24963:	0f 84 87 00 00 00    	je     249f0 <tomltk_parse_file+0xd0>
   24969:	49 89 e5             	mov    %rsp,%r13
   2496c:	48 89 c7             	mov    %rax,%rdi
   2496f:	ba c8 00 00 00       	mov    $0xc8,%edx
   24974:	4c 89 ee             	mov    %r13,%rsi
   24977:	e8 04 c1 00 00       	callq  30a80 <toml_parse_file>
   2497c:	48 89 df             	mov    %rbx,%rdi
   2497f:	49 89 c4             	mov    %rax,%r12
   24982:	e8 19 b4 fe ff       	callq  fda0 <fclose@plt>
   24987:	4d 85 e4             	test   %r12,%r12
   2498a:	0f 84 90 00 00 00    	je     24a20 <tomltk_parse_file+0x100>
   24990:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   24997:	00 
   24998:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2499f:	00 00 
   249a1:	4c 89 e0             	mov    %r12,%rax
   249a4:	0f 85 99 00 00 00    	jne    24a43 <tomltk_parse_file+0x123>
   249aa:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
   249b1:	5b                   	pop    %rbx
   249b2:	5d                   	pop    %rbp
   249b3:	41 5c                	pop    %r12
   249b5:	41 5d                	pop    %r13
   249b7:	41 5e                	pop    %r14
   249b9:	c3                   	retq   
   249ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   249c0:	48 8d 0d 9b d7 01 00 	lea    0x1d79b(%rip),%rcx        # 42162 <k+0x162>
   249c7:	31 f6                	xor    %esi,%esi
   249c9:	4c 89 f7             	mov    %r14,%rdi
   249cc:	45 31 e4             	xor    %r12d,%r12d
   249cf:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   249d4:	e8 87 f4 ff ff       	callq  23e60 <errprintf>
   249d9:	e8 32 b1 fe ff       	callq  fb10 <__errno_location@plt>
   249de:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   249e4:	eb aa                	jmp    24990 <tomltk_parse_file+0x70>
   249e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   249ed:	00 00 00 
   249f0:	e8 1b b1 fe ff       	callq  fb10 <__errno_location@plt>
   249f5:	45 31 e4             	xor    %r12d,%r12d
   249f8:	8b 38                	mov    (%rax),%edi
   249fa:	e8 d1 bf fe ff       	callq  109d0 <strerror@plt>
   249ff:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   24a04:	48 89 ee             	mov    %rbp,%rsi
   24a07:	4c 89 f7             	mov    %r14,%rdi
   24a0a:	49 89 c0             	mov    %rax,%r8
   24a0d:	48 8d 0d f8 e7 01 00 	lea    0x1e7f8(%rip),%rcx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   24a14:	31 c0                	xor    %eax,%eax
   24a16:	e8 45 f4 ff ff       	callq  23e60 <errprintf>
   24a1b:	e9 70 ff ff ff       	jmpq   24990 <tomltk_parse_file+0x70>
   24a20:	4d 85 f6             	test   %r14,%r14
   24a23:	74 0e                	je     24a33 <tomltk_parse_file+0x113>
   24a25:	4c 89 ea             	mov    %r13,%rdx
   24a28:	48 89 ee             	mov    %rbp,%rsi
   24a2b:	4c 89 f7             	mov    %r14,%rdi
   24a2e:	e8 7d f5 ff ff       	callq  23fb0 <errfromtoml.part.1>
   24a33:	e8 d8 b0 fe ff       	callq  fb10 <__errno_location@plt>
   24a38:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   24a3e:	e9 4d ff ff ff       	jmpq   24990 <tomltk_parse_file+0x70>
   24a43:	e8 08 b4 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024a48 <.annobin_tomltk.c_end>:
   24a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   24a4f:	00 

0000000000024a50 <tstat_push>:
   24a50:	f3 0f 1e fa          	endbr64 
   24a54:	8b 47 10             	mov    0x10(%rdi),%eax
   24a57:	85 c0                	test   %eax,%eax
   24a59:	74 75                	je     24ad0 <tstat_push+0x80>
   24a5b:	f2 0f 10 0f          	movsd  (%rdi),%xmm1
   24a5f:	66 0f 2f c8          	comisd %xmm0,%xmm1
   24a63:	77 63                	ja     24ac8 <tstat_push+0x78>
   24a65:	66 0f 2f 47 08       	comisd 0x8(%rdi),%xmm0
   24a6a:	76 05                	jbe    24a71 <tstat_push+0x21>
   24a6c:	f2 0f 11 47 08       	movsd  %xmm0,0x8(%rdi)
   24a71:	83 c0 01             	add    $0x1,%eax
   24a74:	89 47 10             	mov    %eax,0x10(%rdi)
   24a77:	83 f8 01             	cmp    $0x1,%eax
   24a7a:	74 64                	je     24ae0 <tstat_push+0x90>
   24a7c:	f2 0f 10 5f 18       	movsd  0x18(%rdi),%xmm3
   24a81:	66 0f 28 d0          	movapd %xmm0,%xmm2
   24a85:	66 0f ef c9          	pxor   %xmm1,%xmm1
   24a89:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
   24a8d:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
   24a91:	66 0f 28 e2          	movapd %xmm2,%xmm4
   24a95:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
   24a99:	66 0f 28 cc          	movapd %xmm4,%xmm1
   24a9d:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
   24aa1:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   24aa5:	f2 0f 11 4f 28       	movsd  %xmm1,0x28(%rdi)
   24aaa:	f2 0f 11 4f 18       	movsd  %xmm1,0x18(%rdi)
   24aaf:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   24ab3:	f2 0f 58 47 20       	addsd  0x20(%rdi),%xmm0
   24ab8:	f2 0f 11 47 30       	movsd  %xmm0,0x30(%rdi)
   24abd:	f2 0f 11 47 20       	movsd  %xmm0,0x20(%rdi)
   24ac2:	c3                   	retq   
   24ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24ac8:	f2 0f 11 07          	movsd  %xmm0,(%rdi)
   24acc:	eb 97                	jmp    24a65 <tstat_push+0x15>
   24ace:	66 90                	xchg   %ax,%ax
   24ad0:	f2 0f 11 07          	movsd  %xmm0,(%rdi)
   24ad4:	eb 96                	jmp    24a6c <tstat_push+0x1c>
   24ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24add:	00 00 00 
   24ae0:	f2 0f 11 47 28       	movsd  %xmm0,0x28(%rdi)
   24ae5:	f2 0f 11 47 18       	movsd  %xmm0,0x18(%rdi)
   24aea:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   24af1:	00 
   24af2:	c3                   	retq   

0000000000024af3 <.annobin_tstat_mean.start>:
   24af3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   24afa:	00 00 00 00 
   24afe:	66 90                	xchg   %ax,%ax

0000000000024b00 <tstat_mean>:
   24b00:	f3 0f 1e fa          	endbr64 
   24b04:	8b 47 10             	mov    0x10(%rdi),%eax
   24b07:	85 c0                	test   %eax,%eax
   24b09:	7e 0d                	jle    24b18 <tstat_mean+0x18>
   24b0b:	f2 0f 10 47 28       	movsd  0x28(%rdi),%xmm0
   24b10:	c3                   	retq   
   24b11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24b18:	66 0f ef c0          	pxor   %xmm0,%xmm0
   24b1c:	c3                   	retq   

0000000000024b1d <.annobin_tstat_mean.end>:
   24b1d:	0f 1f 00             	nopl   (%rax)

0000000000024b20 <tstat_min>:
   24b20:	f3 0f 1e fa          	endbr64 
   24b24:	f2 0f 10 07          	movsd  (%rdi),%xmm0
   24b28:	c3                   	retq   

0000000000024b29 <.annobin_tstat_max.start>:
   24b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000024b30 <tstat_max>:
   24b30:	f3 0f 1e fa          	endbr64 
   24b34:	f2 0f 10 47 08       	movsd  0x8(%rdi),%xmm0
   24b39:	c3                   	retq   

0000000000024b3a <.annobin_tstat_max.end>:
   24b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024b40 <tstat_variance>:
   24b40:	f3 0f 1e fa          	endbr64 
   24b44:	8b 47 10             	mov    0x10(%rdi),%eax
   24b47:	83 f8 01             	cmp    $0x1,%eax
   24b4a:	7e 1c                	jle    24b68 <tstat_variance+0x28>
   24b4c:	83 e8 01             	sub    $0x1,%eax
   24b4f:	66 0f ef c9          	pxor   %xmm1,%xmm1
   24b53:	f2 0f 10 47 30       	movsd  0x30(%rdi),%xmm0
   24b58:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
   24b5c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   24b60:	c3                   	retq   
   24b61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24b68:	66 0f ef c0          	pxor   %xmm0,%xmm0
   24b6c:	c3                   	retq   

0000000000024b6d <.annobin_tstat_stddev.start>:
   24b6d:	0f 1f 00             	nopl   (%rax)

0000000000024b70 <tstat_stddev>:
   24b70:	f3 0f 1e fa          	endbr64 
   24b74:	48 83 ec 18          	sub    $0x18,%rsp
   24b78:	e8 c3 ff ff ff       	callq  24b40 <tstat_variance>
   24b7d:	66 0f ef d2          	pxor   %xmm2,%xmm2
   24b81:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
   24b85:	f2 0f 51 c8          	sqrtsd %xmm0,%xmm1
   24b89:	77 09                	ja     24b94 <tstat_stddev+0x24>
   24b8b:	66 0f 28 c1          	movapd %xmm1,%xmm0
   24b8f:	48 83 c4 18          	add    $0x18,%rsp
   24b93:	c3                   	retq   
   24b94:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
   24b9a:	e8 e1 bd fe ff       	callq  10980 <sqrt@plt>
   24b9f:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   24ba5:	eb e4                	jmp    24b8b <tstat_stddev+0x1b>

0000000000024ba7 <.annobin_tstat_count.start>:
   24ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24bae:	00 00 

0000000000024bb0 <tstat_count>:
   24bb0:	f3 0f 1e fa          	endbr64 
   24bb4:	8b 47 10             	mov    0x10(%rdi),%eax
   24bb7:	c3                   	retq   

0000000000024bb8 <.annobin_tstat.c_end>:
   24bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   24bbf:	00 

0000000000024bc0 <unlinker>:
   24bc0:	f3 0f 1e fa          	endbr64 
   24bc4:	41 54                	push   %r12
   24bc6:	55                   	push   %rbp
   24bc7:	48 89 fd             	mov    %rdi,%rbp
   24bca:	53                   	push   %rbx
   24bcb:	e8 20 66 ff ff       	callq  1b1f0 <dirwalk_isdir>
   24bd0:	48 89 ef             	mov    %rbp,%rdi
   24bd3:	85 c0                	test   %eax,%eax
   24bd5:	89 c3                	mov    %eax,%ebx
   24bd7:	b8 00 02 00 00       	mov    $0x200,%eax
   24bdc:	0f 45 d8             	cmovne %eax,%ebx
   24bdf:	e8 4c 65 ff ff       	callq  1b130 <dirwalk_name>
   24be4:	48 89 ef             	mov    %rbp,%rdi
   24be7:	49 89 c4             	mov    %rax,%r12
   24bea:	e8 e1 65 ff ff       	callq  1b1d0 <dirwalk_dirfd>
   24bef:	89 da                	mov    %ebx,%edx
   24bf1:	4c 89 e6             	mov    %r12,%rsi
   24bf4:	89 c7                	mov    %eax,%edi
   24bf6:	e8 35 b0 fe ff       	callq  fc30 <unlinkat@plt>
   24bfb:	85 c0                	test   %eax,%eax
   24bfd:	78 11                	js     24c10 <unlinker+0x50>
   24bff:	5b                   	pop    %rbx
   24c00:	31 c0                	xor    %eax,%eax
   24c02:	5d                   	pop    %rbp
   24c03:	41 5c                	pop    %r12
   24c05:	c3                   	retq   
   24c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c0d:	00 00 00 
   24c10:	e8 fb ae fe ff       	callq  fb10 <__errno_location@plt>
   24c15:	48 89 ef             	mov    %rbp,%rdi
   24c18:	8b 30                	mov    (%rax),%esi
   24c1a:	e8 01 66 ff ff       	callq  1b220 <dirwalk_stop>
   24c1f:	5b                   	pop    %rbx
   24c20:	31 c0                	xor    %eax,%eax
   24c22:	5d                   	pop    %rbp
   24c23:	41 5c                	pop    %r12
   24c25:	c3                   	retq   

0000000000024c26 <.annobin_unlink_recursive.start>:
   24c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c2d:	00 00 00 

0000000000024c30 <unlink_recursive>:
   24c30:	f3 0f 1e fa          	endbr64 
   24c34:	31 c9                	xor    %ecx,%ecx
   24c36:	48 8d 15 83 ff ff ff 	lea    -0x7d(%rip),%rdx        # 24bc0 <unlinker>
   24c3d:	be 01 00 00 00       	mov    $0x1,%esi
   24c42:	e9 39 69 ff ff       	jmpq   1b580 <dirwalk>

0000000000024c47 <.annobin_unlink_recursive.c_end>:
   24c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24c4e:	00 00 

0000000000024c50 <uri_resolve>:
   24c50:	f3 0f 1e fa          	endbr64 
   24c54:	41 54                	push   %r12
   24c56:	49 89 f4             	mov    %rsi,%r12
   24c59:	55                   	push   %rbp
   24c5a:	48 89 fd             	mov    %rdi,%rbp
   24c5d:	53                   	push   %rbx
   24c5e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   24c65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24c6c:	00 00 
   24c6e:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   24c75:	00 
   24c76:	31 c0                	xor    %eax,%eax
   24c78:	48 8d 05 02 d5 01 00 	lea    0x1d502(%rip),%rax        # 42181 <k+0x181>
   24c7f:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
   24c84:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   24c89:	48 8d 05 f6 d4 01 00 	lea    0x1d4f6(%rip),%rax        # 42186 <k+0x186>
   24c90:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   24c97:	00 00 
   24c99:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   24ca0:	00 00 
   24ca2:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   24ca7:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   24cae:	00 00 
   24cb0:	e8 eb bc fe ff       	callq  109a0 <strdup@plt>
   24cb5:	48 89 c3             	mov    %rax,%rbx
   24cb8:	48 85 c0             	test   %rax,%rax
   24cbb:	0f 84 20 01 00 00    	je     24de1 <uri_resolve+0x191>
   24cc1:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   24cc6:	48 89 c6             	mov    %rax,%rsi
   24cc9:	e8 f2 82 00 00       	callq  2cfc0 <yuarel_parse>
   24cce:	85 c0                	test   %eax,%eax
   24cd0:	75 47                	jne    24d19 <uri_resolve+0xc9>
   24cd2:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   24cd7:	48 85 c0             	test   %rax,%rax
   24cda:	74 3d                	je     24d19 <uri_resolve+0xc9>
   24cdc:	b9 04 00 00 00       	mov    $0x4,%ecx
   24ce1:	48 8d 3d a2 d4 01 00 	lea    0x1d4a2(%rip),%rdi        # 4218a <k+0x18a>
   24ce8:	48 89 c6             	mov    %rax,%rsi
   24ceb:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   24ced:	0f 97 c2             	seta   %dl
   24cf0:	80 da 00             	sbb    $0x0,%dl
   24cf3:	84 d2                	test   %dl,%dl
   24cf5:	0f 84 25 01 00 00    	je     24e20 <uri_resolve+0x1d0>
   24cfb:	48 89 c6             	mov    %rax,%rsi
   24cfe:	b9 06 00 00 00       	mov    $0x6,%ecx
   24d03:	48 8d 3d 4e b3 01 00 	lea    0x1b34e(%rip),%rdi        # 40058 <f58_prefix+0xbf5>
   24d0a:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   24d0c:	0f 97 c0             	seta   %al
   24d0f:	1c 00                	sbb    $0x0,%al
   24d11:	84 c0                	test   %al,%al
   24d13:	0f 84 07 01 00 00    	je     24e20 <uri_resolve+0x1d0>
   24d19:	48 89 df             	mov    %rbx,%rdi
   24d1c:	e8 8f ad fe ff       	callq  fab0 <free@plt>
   24d21:	31 d2                	xor    %edx,%edx
   24d23:	4d 85 e4             	test   %r12,%r12
   24d26:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   24d2b:	0f 95 c2             	setne  %dl
   24d2e:	48 8d 3d 4c d4 01 00 	lea    0x1d44c(%rip),%rdi        # 42181 <k+0x181>
   24d35:	e8 b6 c4 ff ff       	callq  211f0 <popen2>
   24d3a:	48 89 c3             	mov    %rax,%rbx
   24d3d:	48 85 c0             	test   %rax,%rax
   24d40:	0f 84 8a 00 00 00    	je     24dd0 <uri_resolve+0x180>
   24d46:	48 89 c7             	mov    %rax,%rdi
   24d49:	e8 52 c2 ff ff       	callq  20fa0 <popen2_get_fd>
   24d4e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   24d53:	89 c7                	mov    %eax,%edi
   24d55:	e8 d6 c7 ff ff       	callq  21530 <read_all>
   24d5a:	48 85 c0             	test   %rax,%rax
   24d5d:	78 71                	js     24dd0 <uri_resolve+0x180>
   24d5f:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   24d64:	48 85 ed             	test   %rbp,%rbp
   24d67:	74 1c                	je     24d85 <uri_resolve+0x135>
   24d69:	48 89 ef             	mov    %rbp,%rdi
   24d6c:	e8 af b0 fe ff       	callq  fe20 <strlen@plt>
   24d71:	85 c0                	test   %eax,%eax
   24d73:	7e 10                	jle    24d85 <uri_resolve+0x135>
   24d75:	48 98                	cltq   
   24d77:	48 8d 44 05 ff       	lea    -0x1(%rbp,%rax,1),%rax
   24d7c:	80 38 0a             	cmpb   $0xa,(%rax)
   24d7f:	0f 84 fb 00 00 00    	je     24e80 <uri_resolve+0x230>
   24d85:	4d 85 e4             	test   %r12,%r12
   24d88:	74 46                	je     24dd0 <uri_resolve+0x180>
   24d8a:	48 89 df             	mov    %rbx,%rdi
   24d8d:	e8 3e c2 ff ff       	callq  20fd0 <popen2_get_stderr_fd>
   24d92:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   24d97:	89 c7                	mov    %eax,%edi
   24d99:	e8 92 c7 ff ff       	callq  21530 <read_all>
   24d9e:	48 85 c0             	test   %rax,%rax
   24da1:	7e 2d                	jle    24dd0 <uri_resolve+0x180>
   24da3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   24da8:	e8 03 ee ff ff       	callq  23bb0 <strstrip>
   24dad:	4c 89 e7             	mov    %r12,%rdi
   24db0:	48 8d 35 55 e4 01 00 	lea    0x1e455(%rip),%rsi        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   24db7:	48 89 c2             	mov    %rax,%rdx
   24dba:	31 c0                	xor    %eax,%eax
   24dbc:	e8 ef 72 ff ff       	callq  1c0b0 <errprintf>
   24dc1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   24dc6:	e8 e5 ac fe ff       	callq  fab0 <free@plt>
   24dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24dd0:	48 89 df             	mov    %rbx,%rdi
   24dd3:	e8 28 c2 ff ff       	callq  21000 <pclose2>
   24dd8:	85 c0                	test   %eax,%eax
   24dda:	75 34                	jne    24e10 <uri_resolve+0x1c0>
   24ddc:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   24de1:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   24de8:	00 
   24de9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24df0:	00 00 
   24df2:	48 89 d8             	mov    %rbx,%rax
   24df5:	0f 85 99 00 00 00    	jne    24e94 <uri_resolve+0x244>
   24dfb:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   24e02:	5b                   	pop    %rbx
   24e03:	5d                   	pop    %rbp
   24e04:	41 5c                	pop    %r12
   24e06:	c3                   	retq   
   24e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24e0e:	00 00 
   24e10:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   24e15:	31 db                	xor    %ebx,%ebx
   24e17:	e8 94 ac fe ff       	callq  fab0 <free@plt>
   24e1c:	eb c3                	jmp    24de1 <uri_resolve+0x191>
   24e1e:	66 90                	xchg   %ax,%ax
   24e20:	48 8d 3d 67 d3 01 00 	lea    0x1d367(%rip),%rdi        # 4218e <k+0x18e>
   24e27:	e8 24 ac fe ff       	callq  fa50 <getenv@plt>
   24e2c:	48 85 c0             	test   %rax,%rax
   24e2f:	74 3f                	je     24e70 <uri_resolve+0x220>
  return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
   24e31:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   24e36:	31 c0                	xor    %eax,%eax
   24e38:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   24e3d:	48 8d 15 61 d3 01 00 	lea    0x1d361(%rip),%rdx        # 421a5 <k+0x1a5>
   24e44:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   24e4b:	00 00 
   24e4d:	be 01 00 00 00       	mov    $0x1,%esi
   24e52:	e8 99 b3 fe ff       	callq  101f0 <__asprintf_chk@plt>
   24e57:	85 c0                	test   %eax,%eax
   24e59:	78 35                	js     24e90 <uri_resolve+0x240>
   24e5b:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   24e60:	48 89 df             	mov    %rbx,%rdi
   24e63:	48 89 eb             	mov    %rbp,%rbx
   24e66:	e8 45 ac fe ff       	callq  fab0 <free@plt>
   24e6b:	e9 71 ff ff ff       	jmpq   24de1 <uri_resolve+0x191>
   24e70:	48 89 ef             	mov    %rbp,%rdi
   24e73:	e8 28 bb fe ff       	callq  109a0 <strdup@plt>
   24e78:	48 89 c5             	mov    %rax,%rbp
   24e7b:	eb e3                	jmp    24e60 <uri_resolve+0x210>
   24e7d:	0f 1f 00             	nopl   (%rax)
   24e80:	c6 00 00             	movb   $0x0,(%rax)
   24e83:	e9 fd fe ff ff       	jmpq   24d85 <uri_resolve+0x135>
   24e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   24e8f:	00 
   24e90:	31 ed                	xor    %ebp,%ebp
   24e92:	eb cc                	jmp    24e60 <uri_resolve+0x210>
   24e94:	e8 b7 af fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000024e99 <.annobin_uri.c_end>:
   24e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000024ea0 <highbits.part.0>:
   24ea0:	50                   	push   %rax
   24ea1:	58                   	pop    %rax
   24ea2:	48 8d 0d 57 d3 01 00 	lea    0x1d357(%rip),%rcx        # 42200 <__PRETTY_FUNCTION__.2885>
   24ea9:	ba 44 00 00 00       	mov    $0x44,%edx
   24eae:	48 8d 35 fc d2 01 00 	lea    0x1d2fc(%rip),%rsi        # 421b1 <k+0x1b1>
   24eb5:	48 8d 3d fb d2 01 00 	lea    0x1d2fb(%rip),%rdi        # 421b7 <k+0x1b7>
   24ebc:	48 83 ec 08          	sub    $0x8,%rsp
   24ec0:	e8 3b b1 fe ff       	callq  10000 <__assert_fail@plt>

0000000000024ec5 <.annobin_aux.start>:
   24ec5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   24ecc:	00 00 00 00 

0000000000024ed0 <aux>:
   24ed0:	89 f1                	mov    %esi,%ecx
   24ed2:	41 89 f0             	mov    %esi,%r8d
   24ed5:	31 c0                	xor    %eax,%eax
   24ed7:	89 f2                	mov    %esi,%edx
   24ed9:	d1 e9                	shr    %ecx
   24edb:	41 29 c8             	sub    %ecx,%r8d
   24ede:	40 f6 c6 07          	test   $0x7,%sil
   24ee2:	0f 95 c0             	setne  %al
   24ee5:	c1 ea 03             	shr    $0x3,%edx
   24ee8:	01 d0                	add    %edx,%eax
   24eea:	01 c0                	add    %eax,%eax
   24eec:	48 01 f8             	add    %rdi,%rax
   24eef:	48 89 f7             	mov    %rsi,%rdi
   24ef2:	48 c1 ef 20          	shr    $0x20,%rdi
   24ef6:	83 ef 01             	sub    $0x1,%edi
   24ef9:	83 fe 3f             	cmp    $0x3f,%esi
   24efc:	77 13                	ja     24f11 <aux+0x41>
   24efe:	d3 ef                	shr    %cl,%edi
   24f00:	8d 57 01             	lea    0x1(%rdi),%edx
   24f03:	48 89 d1             	mov    %rdx,%rcx
   24f06:	44 89 c2             	mov    %r8d,%edx
   24f09:	48 c1 e1 20          	shl    $0x20,%rcx
   24f0d:	48 09 ca             	or     %rcx,%rdx
   24f10:	c3                   	retq   
   24f11:	50                   	push   %rax
   24f12:	e8 89 ff ff ff       	callq  24ea0 <highbits.part.0>

0000000000024f17 <.annobin_aux.end>:
   24f17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24f1e:	00 00 

0000000000024f20 <ipow.part.1>:
   24f20:	50                   	push   %rax
   24f21:	58                   	pop    %rax
   24f22:	48 8d 0d cb d2 01 00 	lea    0x1d2cb(%rip),%rcx        # 421f4 <__PRETTY_FUNCTION__.2876>
   24f29:	ba 37 00 00 00       	mov    $0x37,%edx
   24f2e:	48 8d 35 7c d2 01 00 	lea    0x1d27c(%rip),%rsi        # 421b1 <k+0x1b1>
   24f35:	48 8d 3d 7b d2 01 00 	lea    0x1d27b(%rip),%rdi        # 421b7 <k+0x1b7>
   24f3c:	48 83 ec 08          	sub    $0x8,%rsp
   24f40:	e8 bb b0 fe ff       	callq  10000 <__assert_fail@plt>

0000000000024f45 <.annobin_encode.start>:
   24f45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   24f4c:	00 00 00 00 

0000000000024f50 <encode>:
   24f50:	8d 86 ff ff ff 1f    	lea    0x1fffffff(%rsi),%eax
   24f56:	c1 e0 03             	shl    $0x3,%eax
   24f59:	83 f8 1f             	cmp    $0x1f,%eax
   24f5c:	77 33                	ja     24f91 <encode+0x41>
   24f5e:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
   24f62:	31 c0                	xor    %eax,%eax
   24f64:	85 f6                	test   %esi,%esi
   24f66:	75 0b                	jne    24f73 <encode+0x23>
   24f68:	eb 26                	jmp    24f90 <encode+0x40>
   24f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24f70:	48 89 c8             	mov    %rcx,%rax
   24f73:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   24f7a:	89 d6                	mov    %edx,%esi
   24f7c:	d3 ee                	shr    %cl,%esi
   24f7e:	48 8d 48 01          	lea    0x1(%rax),%rcx
   24f82:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   24f86:	4c 39 c0             	cmp    %r8,%rax
   24f89:	75 e5                	jne    24f70 <encode+0x20>
   24f8b:	c3                   	retq   
   24f8c:	0f 1f 40 00          	nopl   0x0(%rax)
   24f90:	c3                   	retq   
   24f91:	50                   	push   %rax
   24f92:	48 8d 0d 54 d2 01 00 	lea    0x1d254(%rip),%rcx        # 421ed <__PRETTY_FUNCTION__.2902>
   24f99:	ba 58 00 00 00       	mov    $0x58,%edx
   24f9e:	48 8d 35 0c d2 01 00 	lea    0x1d20c(%rip),%rsi        # 421b1 <k+0x1b1>
   24fa5:	48 8d 3d 14 d2 01 00 	lea    0x1d214(%rip),%rdi        # 421c0 <k+0x1c0>
   24fac:	e8 4f b0 fe ff       	callq  10000 <__assert_fail@plt>

0000000000024fb1 <.annobin_encode.end>:
   24fb1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   24fb8:	00 00 00 00 
   24fbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024fc0 <setlow>:
   24fc0:	48 89 f0             	mov    %rsi,%rax
   24fc3:	48 c1 e8 20          	shr    $0x20,%rax
   24fc7:	83 f8 20             	cmp    $0x20,%eax
   24fca:	77 1c                	ja     24fe8 <setlow+0x28>
   24fcc:	89 d0                	mov    %edx,%eax
   24fce:	83 e2 07             	and    $0x7,%edx
   24fd1:	be 01 00 00 00       	mov    $0x1,%esi
   24fd6:	c1 e8 03             	shr    $0x3,%eax
   24fd9:	89 d1                	mov    %edx,%ecx
   24fdb:	d3 e6                	shl    %cl,%esi
   24fdd:	40 08 34 07          	or     %sil,(%rdi,%rax,1)
   24fe1:	c3                   	retq   
   24fe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24fe8:	31 c0                	xor    %eax,%eax
   24fea:	40 f6 c6 07          	test   $0x7,%sil
   24fee:	0f 95 c0             	setne  %al
   24ff1:	c1 ee 03             	shr    $0x3,%esi
   24ff4:	01 c6                	add    %eax,%esi
   24ff6:	e9 55 ff ff ff       	jmpq   24f50 <encode>

0000000000024ffb <.annobin_sethigh.start>:
   24ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000025000 <sethigh>:
   25000:	48 89 f0             	mov    %rsi,%rax
   25003:	48 c1 e8 20          	shr    $0x20,%rax
   25007:	83 f8 20             	cmp    $0x20,%eax
   2500a:	77 1c                	ja     25028 <sethigh+0x28>
   2500c:	89 d0                	mov    %edx,%eax
   2500e:	83 e2 07             	and    $0x7,%edx
   25011:	be 01 00 00 00       	mov    $0x1,%esi
   25016:	c1 e8 03             	shr    $0x3,%eax
   25019:	89 d1                	mov    %edx,%ecx
   2501b:	d3 e6                	shl    %cl,%esi
   2501d:	40 08 34 07          	or     %sil,(%rdi,%rax,1)
   25021:	c3                   	retq   
   25022:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25028:	31 c0                	xor    %eax,%eax
   2502a:	40 f6 c6 07          	test   $0x7,%sil
   2502e:	0f 95 c0             	setne  %al
   25031:	c1 ee 03             	shr    $0x3,%esi
   25034:	01 f0                	add    %esi,%eax
   25036:	48 89 c6             	mov    %rax,%rsi
   25039:	48 01 c7             	add    %rax,%rdi
   2503c:	e9 0f ff ff ff       	jmpq   24f50 <encode>

0000000000025041 <.annobin_decode.start>:
   25041:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   25048:	00 00 00 00 
   2504c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025050 <decode>:
   25050:	8d 86 ff ff ff 1f    	lea    0x1fffffff(%rsi),%eax
   25056:	c1 e0 03             	shl    $0x3,%eax
   25059:	83 f8 1f             	cmp    $0x1f,%eax
   2505c:	77 35                	ja     25093 <decode+0x43>
   2505e:	85 f6                	test   %esi,%esi
   25060:	74 2e                	je     25090 <decode+0x40>
   25062:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
   25066:	31 d2                	xor    %edx,%edx
   25068:	31 c0                	xor    %eax,%eax
   2506a:	eb 07                	jmp    25073 <decode+0x23>
   2506c:	0f 1f 40 00          	nopl   0x0(%rax)
   25070:	48 89 ca             	mov    %rcx,%rdx
   25073:	0f b6 34 17          	movzbl (%rdi,%rdx,1),%esi
   25077:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
   2507e:	d3 e6                	shl    %cl,%esi
   25080:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   25084:	09 f0                	or     %esi,%eax
   25086:	49 39 d0             	cmp    %rdx,%r8
   25089:	75 e5                	jne    25070 <decode+0x20>
   2508b:	c3                   	retq   
   2508c:	0f 1f 40 00          	nopl   0x0(%rax)
   25090:	31 c0                	xor    %eax,%eax
   25092:	c3                   	retq   
   25093:	50                   	push   %rax
   25094:	48 8d 0d 4b d1 01 00 	lea    0x1d14b(%rip),%rcx        # 421e6 <__PRETTY_FUNCTION__.2892>
   2509b:	ba 4e 00 00 00       	mov    $0x4e,%edx
   250a0:	48 8d 35 0a d1 01 00 	lea    0x1d10a(%rip),%rsi        # 421b1 <k+0x1b1>
   250a7:	48 8d 3d 12 d1 01 00 	lea    0x1d112(%rip),%rdi        # 421c0 <k+0x1c0>
   250ae:	e8 4d af fe ff       	callq  10000 <__assert_fail@plt>

00000000000250b3 <.annobin_decode.end>:
   250b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   250ba:	00 00 00 00 
   250be:	66 90                	xchg   %ax,%ax

00000000000250c0 <high>:
   250c0:	48 89 f0             	mov    %rsi,%rax
   250c3:	48 c1 e8 20          	shr    $0x20,%rax
   250c7:	83 f8 20             	cmp    $0x20,%eax
   250ca:	77 3c                	ja     25108 <high+0x48>
   250cc:	53                   	push   %rbx
   250cd:	31 f6                	xor    %esi,%esi
   250cf:	a8 07                	test   $0x7,%al
   250d1:	89 c3                	mov    %eax,%ebx
   250d3:	40 0f 95 c6          	setne  %sil
   250d7:	c1 e8 03             	shr    $0x3,%eax
   250da:	01 c6                	add    %eax,%esi
   250dc:	e8 6f ff ff ff       	callq  25050 <decode>
   250e1:	85 c0                	test   %eax,%eax
   250e3:	75 0b                	jne    250f0 <high+0x30>
   250e5:	89 d8                	mov    %ebx,%eax
   250e7:	5b                   	pop    %rbx
   250e8:	c3                   	retq   
   250e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   250f0:	0f bd c0             	bsr    %eax,%eax
   250f3:	bb 1f 00 00 00       	mov    $0x1f,%ebx
   250f8:	83 f0 1f             	xor    $0x1f,%eax
   250fb:	29 c3                	sub    %eax,%ebx
   250fd:	89 d8                	mov    %ebx,%eax
   250ff:	5b                   	pop    %rbx
   25100:	c3                   	retq   
   25101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25108:	31 c0                	xor    %eax,%eax
   2510a:	40 f6 c6 07          	test   $0x7,%sil
   2510e:	0f 95 c0             	setne  %al
   25111:	c1 ee 03             	shr    $0x3,%esi
   25114:	01 f0                	add    %esi,%eax
   25116:	48 89 c6             	mov    %rax,%rsi
   25119:	48 01 c7             	add    %rax,%rdi
   2511c:	e9 2f ff ff ff       	jmpq   25050 <decode>

0000000000025121 <.annobin_high.end>:
   25121:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   25128:	00 00 00 00 
   2512c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025130 <low>:
   25130:	48 89 f0             	mov    %rsi,%rax
   25133:	48 c1 e8 20          	shr    $0x20,%rax
   25137:	83 f8 20             	cmp    $0x20,%eax
   2513a:	76 14                	jbe    25150 <low+0x20>
   2513c:	31 c0                	xor    %eax,%eax
   2513e:	40 f6 c6 07          	test   $0x7,%sil
   25142:	0f 95 c0             	setne  %al
   25145:	c1 ee 03             	shr    $0x3,%esi
   25148:	01 c6                	add    %eax,%esi
   2514a:	e9 01 ff ff ff       	jmpq   25050 <decode>
   2514f:	90                   	nop
   25150:	53                   	push   %rbx
   25151:	31 f6                	xor    %esi,%esi
   25153:	a8 07                	test   $0x7,%al
   25155:	89 c3                	mov    %eax,%ebx
   25157:	40 0f 95 c6          	setne  %sil
   2515b:	c1 e8 03             	shr    $0x3,%eax
   2515e:	01 c6                	add    %eax,%esi
   25160:	e8 eb fe ff ff       	callq  25050 <decode>
   25165:	31 d2                	xor    %edx,%edx
   25167:	f3 0f bc d0          	tzcnt  %eax,%edx
   2516b:	85 c0                	test   %eax,%eax
   2516d:	0f 45 da             	cmovne %edx,%ebx
   25170:	89 d8                	mov    %ebx,%eax
   25172:	5b                   	pop    %rbx
   25173:	c3                   	retq   

0000000000025174 <.annobin_empty.start>:
   25174:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2517b:	00 00 00 00 
   2517f:	90                   	nop

0000000000025180 <empty>:
   25180:	41 54                	push   %r12
   25182:	55                   	push   %rbp
   25183:	48 89 fd             	mov    %rdi,%rbp
   25186:	53                   	push   %rbx
   25187:	48 89 f3             	mov    %rsi,%rbx
   2518a:	48 c1 ee 20          	shr    $0x20,%rsi
   2518e:	83 fe 20             	cmp    $0x20,%esi
   25191:	76 2d                	jbe    251c0 <empty+0x40>
   25193:	48 89 de             	mov    %rbx,%rsi
   25196:	e8 95 ff ff ff       	callq  25130 <low>
   2519b:	48 89 ef             	mov    %rbp,%rdi
   2519e:	48 89 de             	mov    %rbx,%rsi
   251a1:	41 89 c4             	mov    %eax,%r12d
   251a4:	e8 17 ff ff ff       	callq  250c0 <high>
   251a9:	5b                   	pop    %rbx
   251aa:	5d                   	pop    %rbp
   251ab:	41 39 c4             	cmp    %eax,%r12d
   251ae:	41 5c                	pop    %r12
   251b0:	0f 97 c0             	seta   %al
   251b3:	0f b6 c0             	movzbl %al,%eax
   251b6:	c3                   	retq   
   251b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   251be:	00 00 
   251c0:	31 c0                	xor    %eax,%eax
   251c2:	40 f6 c6 07          	test   $0x7,%sil
   251c6:	0f 95 c0             	setne  %al
   251c9:	c1 ee 03             	shr    $0x3,%esi
   251cc:	01 c6                	add    %eax,%esi
   251ce:	e8 7d fe ff ff       	callq  25050 <decode>
   251d3:	5b                   	pop    %rbx
   251d4:	5d                   	pop    %rbp
   251d5:	85 c0                	test   %eax,%eax
   251d7:	41 5c                	pop    %r12
   251d9:	0f 94 c0             	sete   %al
   251dc:	0f b6 c0             	movzbl %al,%eax
   251df:	c3                   	retq   

00000000000251e0 <zeros.part.4>:
   251e0:	50                   	push   %rax
   251e1:	58                   	pop    %rax
   251e2:	48 8d 0d f7 cf 01 00 	lea    0x1cff7(%rip),%rcx        # 421e0 <__PRETTY_FUNCTION__.2869>
   251e9:	ba 28 00 00 00       	mov    $0x28,%edx
   251ee:	48 8d 35 bc cf 01 00 	lea    0x1cfbc(%rip),%rsi        # 421b1 <k+0x1b1>
   251f5:	48 8d 3d d3 cf 01 00 	lea    0x1cfd3(%rip),%rdi        # 421cf <k+0x1cf>
   251fc:	48 83 ec 08          	sub    $0x8,%rsp
   25200:	e8 fb ad fe ff       	callq  10000 <__assert_fail@plt>

0000000000025205 <.annobin_vebsize.start>:
   25205:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2520c:	00 00 00 00 

0000000000025210 <vebsize>:
   25210:	f3 0f 1e fa          	endbr64 
   25214:	41 57                	push   %r15
   25216:	41 56                	push   %r14
   25218:	45 31 f6             	xor    %r14d,%r14d
   2521b:	41 55                	push   %r13
   2521d:	41 54                	push   %r12
   2521f:	55                   	push   %rbp
   25220:	89 fd                	mov    %edi,%ebp
   25222:	53                   	push   %rbx
   25223:	48 83 ec 08          	sub    $0x8,%rsp
   25227:	83 ff 20             	cmp    $0x20,%edi
   2522a:	76 5d                	jbe    25289 <vebsize+0x79>
   2522c:	8d 5d ff             	lea    -0x1(%rbp),%ebx
   2522f:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   25235:	bf 01 00 00 00       	mov    $0x1,%edi
   2523a:	0f bd c3             	bsr    %ebx,%eax
   2523d:	83 f0 1f             	xor    $0x1f,%eax
   25240:	41 29 c5             	sub    %eax,%r13d
   25243:	45 89 ef             	mov    %r13d,%r15d
   25246:	41 d1 ef             	shr    %r15d
   25249:	44 89 f9             	mov    %r15d,%ecx
   2524c:	d3 e7                	shl    %cl,%edi
   2524e:	d3 eb                	shr    %cl,%ebx
   25250:	e8 bb ff ff ff       	callq  25210 <vebsize>
   25255:	8d 7b 01             	lea    0x1(%rbx),%edi
   25258:	0f af c3             	imul   %ebx,%eax
   2525b:	41 89 c4             	mov    %eax,%r12d
   2525e:	e8 ad ff ff ff       	callq  25210 <vebsize>
   25263:	44 89 f9             	mov    %r15d,%ecx
   25266:	31 d2                	xor    %edx,%edx
   25268:	d3 e3                	shl    %cl,%ebx
   2526a:	29 dd                	sub    %ebx,%ebp
   2526c:	41 f6 c5 07          	test   $0x7,%r13b
   25270:	0f 95 c2             	setne  %dl
   25273:	41 c1 ed 03          	shr    $0x3,%r13d
   25277:	41 01 c4             	add    %eax,%r12d
   2527a:	41 01 d5             	add    %edx,%r13d
   2527d:	43 8d 04 6c          	lea    (%r12,%r13,2),%eax
   25281:	41 01 c6             	add    %eax,%r14d
   25284:	83 fd 20             	cmp    $0x20,%ebp
   25287:	77 a3                	ja     2522c <vebsize+0x1c>
   25289:	31 c0                	xor    %eax,%eax
   2528b:	40 f6 c5 07          	test   $0x7,%bpl
   2528f:	0f 95 c0             	setne  %al
   25292:	c1 ed 03             	shr    $0x3,%ebp
   25295:	48 83 c4 08          	add    $0x8,%rsp
   25299:	42 8d 74 35 00       	lea    0x0(%rbp,%r14,1),%esi
   2529e:	5b                   	pop    %rbx
   2529f:	5d                   	pop    %rbp
   252a0:	01 f0                	add    %esi,%eax
   252a2:	41 5c                	pop    %r12
   252a4:	41 5d                	pop    %r13
   252a6:	41 5e                	pop    %r14
   252a8:	41 5f                	pop    %r15
   252aa:	c3                   	retq   

00000000000252ab <.annobin_branch.start>:
   252ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000252b0 <branch>:
   252b0:	41 57                	push   %r15
   252b2:	41 56                	push   %r14
   252b4:	41 89 d6             	mov    %edx,%r14d
   252b7:	48 89 f2             	mov    %rsi,%rdx
   252ba:	41 55                	push   %r13
   252bc:	48 c1 ea 20          	shr    $0x20,%rdx
   252c0:	41 54                	push   %r12
   252c2:	55                   	push   %rbp
   252c3:	89 f5                	mov    %esi,%ebp
   252c5:	53                   	push   %rbx
   252c6:	d1 ed                	shr    %ebp
   252c8:	48 83 ec 08          	sub    $0x8,%rsp
   252cc:	83 fe 3f             	cmp    $0x3f,%esi
   252cf:	0f 87 86 00 00 00    	ja     2535b <branch+0xab>
   252d5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   252db:	89 e9                	mov    %ebp,%ecx
   252dd:	8d 42 ff             	lea    -0x1(%rdx),%eax
   252e0:	49 89 fd             	mov    %rdi,%r13
   252e3:	44 89 c3             	mov    %r8d,%ebx
   252e6:	d3 e8                	shr    %cl,%eax
   252e8:	49 89 f4             	mov    %rsi,%r12
   252eb:	d3 e3                	shl    %cl,%ebx
   252ed:	8d 78 01             	lea    0x1(%rax),%edi
   252f0:	41 89 df             	mov    %ebx,%r15d
   252f3:	44 39 f0             	cmp    %r14d,%eax
   252f6:	76 48                	jbe    25340 <branch+0x90>
   252f8:	e8 13 ff ff ff       	callq  25210 <vebsize>
   252fd:	31 f6                	xor    %esi,%esi
   252ff:	41 f6 c4 07          	test   $0x7,%r12b
   25303:	89 df                	mov    %ebx,%edi
   25305:	40 0f 95 c6          	setne  %sil
   25309:	41 c1 ec 03          	shr    $0x3,%r12d
   2530d:	89 c0                	mov    %eax,%eax
   2530f:	41 01 f4             	add    %esi,%r12d
   25312:	49 c1 e7 20          	shl    $0x20,%r15
   25316:	45 01 e4             	add    %r12d,%r12d
   25319:	49 01 c4             	add    %rax,%r12
   2531c:	e8 ef fe ff ff       	callq  25210 <vebsize>
   25321:	48 83 c4 08          	add    $0x8,%rsp
   25325:	89 ea                	mov    %ebp,%edx
   25327:	44 0f af f0          	imul   %eax,%r14d
   2532b:	5b                   	pop    %rbx
   2532c:	4c 09 fa             	or     %r15,%rdx
   2532f:	5d                   	pop    %rbp
   25330:	4b 8d 04 26          	lea    (%r14,%r12,1),%rax
   25334:	41 5c                	pop    %r12
   25336:	4c 01 e8             	add    %r13,%rax
   25339:	41 5d                	pop    %r13
   2533b:	41 5e                	pop    %r14
   2533d:	41 5f                	pop    %r15
   2533f:	c3                   	retq   
   25340:	d3 e0                	shl    %cl,%eax
   25342:	41 89 d7             	mov    %edx,%r15d
   25345:	bd 20 00 00 00       	mov    $0x20,%ebp
   2534a:	41 29 c7             	sub    %eax,%r15d
   2534d:	41 8d 47 ff          	lea    -0x1(%r15),%eax
   25351:	0f bd c0             	bsr    %eax,%eax
   25354:	83 f0 1f             	xor    $0x1f,%eax
   25357:	29 c5                	sub    %eax,%ebp
   25359:	eb 9d                	jmp    252f8 <branch+0x48>
   2535b:	e8 40 fb ff ff       	callq  24ea0 <highbits.part.0>

0000000000025360 <mkempty>:
   25360:	41 56                	push   %r14
   25362:	41 55                	push   %r13
   25364:	49 89 fd             	mov    %rdi,%r13
   25367:	41 54                	push   %r12
   25369:	55                   	push   %rbp
   2536a:	48 89 f5             	mov    %rsi,%rbp
   2536d:	48 c1 ed 20          	shr    $0x20,%rbp
   25371:	53                   	push   %rbx
   25372:	83 fd 20             	cmp    $0x20,%ebp
   25375:	0f 86 85 00 00 00    	jbe    25400 <mkempty+0xa0>
   2537b:	48 89 f3             	mov    %rsi,%rbx
   2537e:	ba 01 00 00 00       	mov    $0x1,%edx
   25383:	41 89 ee             	mov    %ebp,%r14d
   25386:	83 ed 01             	sub    $0x1,%ebp
   25389:	e8 32 fc ff ff       	callq  24fc0 <setlow>
   2538e:	31 d2                	xor    %edx,%edx
   25390:	4c 89 ef             	mov    %r13,%rdi
   25393:	48 89 de             	mov    %rbx,%rsi
   25396:	e8 65 fc ff ff       	callq  25000 <sethigh>
   2539b:	4c 89 ef             	mov    %r13,%rdi
   2539e:	48 89 de             	mov    %rbx,%rsi
   253a1:	e8 2a fb ff ff       	callq  24ed0 <aux>
   253a6:	48 89 d6             	mov    %rdx,%rsi
   253a9:	48 89 c7             	mov    %rax,%rdi
   253ac:	e8 af ff ff ff       	callq  25360 <mkempty>
   253b1:	89 d9                	mov    %ebx,%ecx
   253b3:	d1 e9                	shr    %ecx
   253b5:	83 fb 3f             	cmp    $0x3f,%ebx
   253b8:	77 64                	ja     2541e <mkempty+0xbe>
   253ba:	d3 ed                	shr    %cl,%ebp
   253bc:	83 c5 01             	add    $0x1,%ebp
   253bf:	74 2e                	je     253ef <mkempty+0x8f>
   253c1:	45 31 e4             	xor    %r12d,%r12d
   253c4:	49 c1 e6 20          	shl    $0x20,%r14
   253c8:	89 db                	mov    %ebx,%ebx
   253ca:	44 89 e2             	mov    %r12d,%edx
   253cd:	4c 89 ef             	mov    %r13,%rdi
   253d0:	41 83 c4 01          	add    $0x1,%r12d
   253d4:	4c 09 f3             	or     %r14,%rbx
   253d7:	48 89 de             	mov    %rbx,%rsi
   253da:	e8 d1 fe ff ff       	callq  252b0 <branch>
   253df:	48 89 d6             	mov    %rdx,%rsi
   253e2:	48 89 c7             	mov    %rax,%rdi
   253e5:	e8 76 ff ff ff       	callq  25360 <mkempty>
   253ea:	41 39 ec             	cmp    %ebp,%r12d
   253ed:	75 d9                	jne    253c8 <mkempty+0x68>
   253ef:	5b                   	pop    %rbx
   253f0:	5d                   	pop    %rbp
   253f1:	41 5c                	pop    %r12
   253f3:	41 5d                	pop    %r13
   253f5:	41 5e                	pop    %r14
   253f7:	c3                   	retq   
   253f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   253ff:	00 
   25400:	31 f6                	xor    %esi,%esi
   25402:	40 f6 c5 07          	test   $0x7,%bpl
   25406:	5b                   	pop    %rbx
   25407:	40 0f 95 c6          	setne  %sil
   2540b:	c1 ed 03             	shr    $0x3,%ebp
   2540e:	31 d2                	xor    %edx,%edx
   25410:	01 ee                	add    %ebp,%esi
   25412:	5d                   	pop    %rbp
   25413:	41 5c                	pop    %r12
   25415:	41 5d                	pop    %r13
   25417:	41 5e                	pop    %r14
   25419:	e9 32 fb ff ff       	jmpq   24f50 <encode>
   2541e:	e8 7d fa ff ff       	callq  24ea0 <highbits.part.0>

0000000000025423 <.annobin_mkempty.end>:
   25423:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2542a:	00 00 00 00 
   2542e:	66 90                	xchg   %ax,%ax

0000000000025430 <vebput>:
   25430:	f3 0f 1e fa          	endbr64 
   25434:	48 89 f0             	mov    %rsi,%rax
   25437:	48 c1 e8 20          	shr    $0x20,%rax
   2543b:	39 c2                	cmp    %eax,%edx
   2543d:	0f 83 15 01 00 00    	jae    25558 <vebput+0x128>
   25443:	41 57                	push   %r15
   25445:	41 56                	push   %r14
   25447:	41 55                	push   %r13
   25449:	41 54                	push   %r12
   2544b:	49 89 fc             	mov    %rdi,%r12
   2544e:	55                   	push   %rbp
   2544f:	53                   	push   %rbx
   25450:	89 d3                	mov    %edx,%ebx
   25452:	48 83 ec 08          	sub    $0x8,%rsp
   25456:	83 f8 20             	cmp    $0x20,%eax
   25459:	77 25                	ja     25480 <vebput+0x50>
   2545b:	89 d0                	mov    %edx,%eax
   2545d:	89 d1                	mov    %edx,%ecx
   2545f:	ba 01 00 00 00       	mov    $0x1,%edx
   25464:	c1 e8 03             	shr    $0x3,%eax
   25467:	83 e1 07             	and    $0x7,%ecx
   2546a:	d3 e2                	shl    %cl,%edx
   2546c:	08 14 38             	or     %dl,(%rax,%rdi,1)
   2546f:	48 83 c4 08          	add    $0x8,%rsp
   25473:	5b                   	pop    %rbx
   25474:	5d                   	pop    %rbp
   25475:	41 5c                	pop    %r12
   25477:	41 5d                	pop    %r13
   25479:	41 5e                	pop    %r14
   2547b:	41 5f                	pop    %r15
   2547d:	c3                   	retq   
   2547e:	66 90                	xchg   %ax,%ax
   25480:	48 89 f5             	mov    %rsi,%rbp
   25483:	e8 f8 fc ff ff       	callq  25180 <empty>
   25488:	85 c0                	test   %eax,%eax
   2548a:	0f 85 d0 00 00 00    	jne    25560 <vebput+0x130>
   25490:	4c 89 e7             	mov    %r12,%rdi
   25493:	48 89 ee             	mov    %rbp,%rsi
   25496:	e8 95 fc ff ff       	callq  25130 <low>
   2549b:	4c 89 e7             	mov    %r12,%rdi
   2549e:	48 89 ee             	mov    %rbp,%rsi
   254a1:	41 89 c5             	mov    %eax,%r13d
   254a4:	e8 17 fc ff ff       	callq  250c0 <high>
   254a9:	41 89 c6             	mov    %eax,%r14d
   254ac:	44 39 eb             	cmp    %r13d,%ebx
   254af:	74 be                	je     2546f <vebput+0x3f>
   254b1:	39 c3                	cmp    %eax,%ebx
   254b3:	74 ba                	je     2546f <vebput+0x3f>
   254b5:	44 39 eb             	cmp    %r13d,%ebx
   254b8:	0f 82 d2 00 00 00    	jb     25590 <vebput+0x160>
   254be:	39 c3                	cmp    %eax,%ebx
   254c0:	0f 87 ea 00 00 00    	ja     255b0 <vebput+0x180>
   254c6:	89 e9                	mov    %ebp,%ecx
   254c8:	d1 e9                	shr    %ecx
   254ca:	83 fd 3f             	cmp    $0x3f,%ebp
   254cd:	0f 87 fb 00 00 00    	ja     255ce <vebput+0x19e>
   254d3:	41 89 de             	mov    %ebx,%r14d
   254d6:	41 d3 ee             	shr    %cl,%r14d
   254d9:	83 f9 20             	cmp    $0x20,%ecx
   254dc:	74 0b                	je     254e9 <vebput+0xb9>
   254de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   254e3:	d3 e0                	shl    %cl,%eax
   254e5:	f7 d0                	not    %eax
   254e7:	21 c3                	and    %eax,%ebx
   254e9:	4c 89 e7             	mov    %r12,%rdi
   254ec:	48 89 ee             	mov    %rbp,%rsi
   254ef:	44 89 f2             	mov    %r14d,%edx
   254f2:	e8 b9 fd ff ff       	callq  252b0 <branch>
   254f7:	49 89 c7             	mov    %rax,%r15
   254fa:	49 89 d5             	mov    %rdx,%r13
   254fd:	89 da                	mov    %ebx,%edx
   254ff:	4c 89 ff             	mov    %r15,%rdi
   25502:	4c 89 ee             	mov    %r13,%rsi
   25505:	e8 26 ff ff ff       	callq  25430 <vebput>
   2550a:	4c 89 ff             	mov    %r15,%rdi
   2550d:	4c 89 ee             	mov    %r13,%rsi
   25510:	e8 1b fc ff ff       	callq  25130 <low>
   25515:	4c 89 ff             	mov    %r15,%rdi
   25518:	4c 89 ee             	mov    %r13,%rsi
   2551b:	89 c3                	mov    %eax,%ebx
   2551d:	e8 9e fb ff ff       	callq  250c0 <high>
   25522:	39 c3                	cmp    %eax,%ebx
   25524:	0f 85 45 ff ff ff    	jne    2546f <vebput+0x3f>
   2552a:	4c 89 e7             	mov    %r12,%rdi
   2552d:	48 89 ee             	mov    %rbp,%rsi
   25530:	e8 9b f9 ff ff       	callq  24ed0 <aux>
   25535:	48 83 c4 08          	add    $0x8,%rsp
   25539:	5b                   	pop    %rbx
   2553a:	48 89 d6             	mov    %rdx,%rsi
   2553d:	5d                   	pop    %rbp
   2553e:	44 89 f2             	mov    %r14d,%edx
   25541:	41 5c                	pop    %r12
   25543:	48 89 c7             	mov    %rax,%rdi
   25546:	41 5d                	pop    %r13
   25548:	41 5e                	pop    %r14
   2554a:	41 5f                	pop    %r15
   2554c:	e9 df fe ff ff       	jmpq   25430 <vebput>
   25551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25558:	c3                   	retq   
   25559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25560:	89 da                	mov    %ebx,%edx
   25562:	4c 89 e7             	mov    %r12,%rdi
   25565:	48 89 ee             	mov    %rbp,%rsi
   25568:	e8 53 fa ff ff       	callq  24fc0 <setlow>
   2556d:	48 83 c4 08          	add    $0x8,%rsp
   25571:	89 da                	mov    %ebx,%edx
   25573:	4c 89 e7             	mov    %r12,%rdi
   25576:	5b                   	pop    %rbx
   25577:	48 89 ee             	mov    %rbp,%rsi
   2557a:	5d                   	pop    %rbp
   2557b:	41 5c                	pop    %r12
   2557d:	41 5d                	pop    %r13
   2557f:	41 5e                	pop    %r14
   25581:	41 5f                	pop    %r15
   25583:	e9 78 fa ff ff       	jmpq   25000 <sethigh>
   25588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2558f:	00 
   25590:	89 da                	mov    %ebx,%edx
   25592:	4c 89 e7             	mov    %r12,%rdi
   25595:	48 89 ee             	mov    %rbp,%rsi
   25598:	44 89 eb             	mov    %r13d,%ebx
   2559b:	e8 20 fa ff ff       	callq  24fc0 <setlow>
   255a0:	45 39 f5             	cmp    %r14d,%r13d
   255a3:	0f 85 1d ff ff ff    	jne    254c6 <vebput+0x96>
   255a9:	e9 c1 fe ff ff       	jmpq   2546f <vebput+0x3f>
   255ae:	66 90                	xchg   %ax,%ax
   255b0:	89 da                	mov    %ebx,%edx
   255b2:	4c 89 e7             	mov    %r12,%rdi
   255b5:	48 89 ee             	mov    %rbp,%rsi
   255b8:	e8 43 fa ff ff       	callq  25000 <sethigh>
   255bd:	45 39 f5             	cmp    %r14d,%r13d
   255c0:	0f 84 a9 fe ff ff    	je     2546f <vebput+0x3f>
   255c6:	44 89 f3             	mov    %r14d,%ebx
   255c9:	e9 f8 fe ff ff       	jmpq   254c6 <vebput+0x96>
   255ce:	e8 cd f8 ff ff       	callq  24ea0 <highbits.part.0>

00000000000255d3 <.annobin_vebnew.start>:
   255d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   255da:	00 00 00 00 
   255de:	66 90                	xchg   %ax,%ax

00000000000255e0 <vebnew>:
   255e0:	f3 0f 1e fa          	endbr64 
   255e4:	41 56                	push   %r14
   255e6:	8d 47 ff             	lea    -0x1(%rdi),%eax
   255e9:	41 89 f6             	mov    %esi,%r14d
   255ec:	41 55                	push   %r13
   255ee:	0f bd c0             	bsr    %eax,%eax
   255f1:	41 54                	push   %r12
   255f3:	83 f0 1f             	xor    $0x1f,%eax
   255f6:	41 89 fc             	mov    %edi,%r12d
   255f9:	55                   	push   %rbp
   255fa:	53                   	push   %rbx
   255fb:	bb 20 00 00 00       	mov    $0x20,%ebx
   25600:	29 c3                	sub    %eax,%ebx
   25602:	e8 09 fc ff ff       	callq  25210 <vebsize>
   25607:	89 c7                	mov    %eax,%edi
   25609:	e8 12 ae fe ff       	callq  10420 <malloc@plt>
   2560e:	49 89 c5             	mov    %rax,%r13
   25611:	48 85 c0             	test   %rax,%rax
   25614:	74 62                	je     25678 <vebnew+0x98>
   25616:	44 89 e5             	mov    %r12d,%ebp
   25619:	48 89 c7             	mov    %rax,%rdi
   2561c:	48 89 ee             	mov    %rbp,%rsi
   2561f:	48 c1 e6 20          	shl    $0x20,%rsi
   25623:	48 09 de             	or     %rbx,%rsi
   25626:	e8 35 fd ff ff       	callq  25360 <mkempty>
   2562b:	45 85 f6             	test   %r14d,%r14d
   2562e:	74 2e                	je     2565e <vebnew+0x7e>
   25630:	45 85 e4             	test   %r12d,%r12d
   25633:	74 43                	je     25678 <vebnew+0x98>
   25635:	45 31 f6             	xor    %r14d,%r14d
   25638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2563f:	00 
   25640:	48 89 ee             	mov    %rbp,%rsi
   25643:	44 89 f2             	mov    %r14d,%edx
   25646:	4c 89 ef             	mov    %r13,%rdi
   25649:	41 83 c6 01          	add    $0x1,%r14d
   2564d:	48 c1 e6 20          	shl    $0x20,%rsi
   25651:	48 09 de             	or     %rbx,%rsi
   25654:	e8 d7 fd ff ff       	callq  25430 <vebput>
   25659:	45 39 f4             	cmp    %r14d,%r12d
   2565c:	75 e2                	jne    25640 <vebnew+0x60>
   2565e:	48 c1 e5 20          	shl    $0x20,%rbp
   25662:	48 89 da             	mov    %rbx,%rdx
   25665:	4c 89 e8             	mov    %r13,%rax
   25668:	5b                   	pop    %rbx
   25669:	48 09 ea             	or     %rbp,%rdx
   2566c:	5d                   	pop    %rbp
   2566d:	41 5c                	pop    %r12
   2566f:	41 5d                	pop    %r13
   25671:	41 5e                	pop    %r14
   25673:	c3                   	retq   
   25674:	0f 1f 40 00          	nopl   0x0(%rax)
   25678:	31 ed                	xor    %ebp,%ebp
   2567a:	eb e2                	jmp    2565e <vebnew+0x7e>

000000000002567c <.annobin_vebdel.start>:
   2567c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025680 <vebdel>:
   25680:	f3 0f 1e fa          	endbr64 
   25684:	41 57                	push   %r15
   25686:	41 56                	push   %r14
   25688:	41 89 d6             	mov    %edx,%r14d
   2568b:	41 55                	push   %r13
   2568d:	41 54                	push   %r12
   2568f:	49 89 f4             	mov    %rsi,%r12
   25692:	55                   	push   %rbp
   25693:	49 c1 ec 20          	shr    $0x20,%r12
   25697:	48 89 fd             	mov    %rdi,%rbp
   2569a:	53                   	push   %rbx
   2569b:	48 89 f3             	mov    %rsi,%rbx
   2569e:	48 83 ec 18          	sub    $0x18,%rsp
   256a2:	e8 d9 fa ff ff       	callq  25180 <empty>
   256a7:	45 39 e6             	cmp    %r12d,%r14d
   256aa:	73 22                	jae    256ce <vebdel+0x4e>
   256ac:	85 c0                	test   %eax,%eax
   256ae:	75 1e                	jne    256ce <vebdel+0x4e>
   256b0:	41 83 fc 20          	cmp    $0x20,%r12d
   256b4:	77 2a                	ja     256e0 <vebdel+0x60>
   256b6:	44 89 f1             	mov    %r14d,%ecx
   256b9:	44 89 f2             	mov    %r14d,%edx
   256bc:	b8 01 00 00 00       	mov    $0x1,%eax
   256c1:	83 e1 07             	and    $0x7,%ecx
   256c4:	c1 ea 03             	shr    $0x3,%edx
   256c7:	d3 e0                	shl    %cl,%eax
   256c9:	f7 d0                	not    %eax
   256cb:	20 04 2a             	and    %al,(%rdx,%rbp,1)
   256ce:	48 83 c4 18          	add    $0x18,%rsp
   256d2:	5b                   	pop    %rbx
   256d3:	5d                   	pop    %rbp
   256d4:	41 5c                	pop    %r12
   256d6:	41 5d                	pop    %r13
   256d8:	41 5e                	pop    %r14
   256da:	41 5f                	pop    %r15
   256dc:	c3                   	retq   
   256dd:	0f 1f 00             	nopl   (%rax)
   256e0:	48 89 ef             	mov    %rbp,%rdi
   256e3:	48 89 de             	mov    %rbx,%rsi
   256e6:	e8 45 fa ff ff       	callq  25130 <low>
   256eb:	48 89 ef             	mov    %rbp,%rdi
   256ee:	48 89 de             	mov    %rbx,%rsi
   256f1:	41 89 c4             	mov    %eax,%r12d
   256f4:	e8 c7 f9 ff ff       	callq  250c0 <high>
   256f9:	41 89 c5             	mov    %eax,%r13d
   256fc:	45 39 e6             	cmp    %r12d,%r14d
   256ff:	72 cd                	jb     256ce <vebdel+0x4e>
   25701:	41 39 c6             	cmp    %eax,%r14d
   25704:	77 c8                	ja     256ce <vebdel+0x4e>
   25706:	41 39 c4             	cmp    %eax,%r12d
   25709:	75 35                	jne    25740 <vebdel+0xc0>
   2570b:	45 39 e6             	cmp    %r12d,%r14d
   2570e:	75 30                	jne    25740 <vebdel+0xc0>
   25710:	31 d2                	xor    %edx,%edx
   25712:	48 89 ef             	mov    %rbp,%rdi
   25715:	48 89 de             	mov    %rbx,%rsi
   25718:	e8 e3 f8 ff ff       	callq  25000 <sethigh>
   2571d:	ba 01 00 00 00       	mov    $0x1,%edx
   25722:	48 83 c4 18          	add    $0x18,%rsp
   25726:	48 89 ef             	mov    %rbp,%rdi
   25729:	48 89 de             	mov    %rbx,%rsi
   2572c:	5b                   	pop    %rbx
   2572d:	5d                   	pop    %rbp
   2572e:	41 5c                	pop    %r12
   25730:	41 5d                	pop    %r13
   25732:	41 5e                	pop    %r14
   25734:	41 5f                	pop    %r15
   25736:	e9 85 f8 ff ff       	jmpq   24fc0 <setlow>
   2573b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   25740:	48 89 ef             	mov    %rbp,%rdi
   25743:	48 89 de             	mov    %rbx,%rsi
   25746:	e8 85 f7 ff ff       	callq  24ed0 <aux>
   2574b:	49 89 c7             	mov    %rax,%r15
   2574e:	48 89 14 24          	mov    %rdx,(%rsp)
   25752:	45 39 e6             	cmp    %r12d,%r14d
   25755:	0f 84 85 00 00 00    	je     257e0 <vebdel+0x160>
   2575b:	45 39 ee             	cmp    %r13d,%r14d
   2575e:	0f 84 fc 00 00 00    	je     25860 <vebdel+0x1e0>
   25764:	89 d9                	mov    %ebx,%ecx
   25766:	d1 e9                	shr    %ecx
   25768:	83 fb 3f             	cmp    $0x3f,%ebx
   2576b:	0f 87 7c 01 00 00    	ja     258ed <vebdel+0x26d>
   25771:	45 89 f5             	mov    %r14d,%r13d
   25774:	41 d3 ed             	shr    %cl,%r13d
   25777:	83 f9 20             	cmp    $0x20,%ecx
   2577a:	74 0c                	je     25788 <vebdel+0x108>
   2577c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25781:	d3 e0                	shl    %cl,%eax
   25783:	f7 d0                	not    %eax
   25785:	41 21 c6             	and    %eax,%r14d
   25788:	44 89 ea             	mov    %r13d,%edx
   2578b:	48 89 ef             	mov    %rbp,%rdi
   2578e:	48 89 de             	mov    %rbx,%rsi
   25791:	e8 1a fb ff ff       	callq  252b0 <branch>
   25796:	49 89 c4             	mov    %rax,%r12
   25799:	49 89 d1             	mov    %rdx,%r9
   2579c:	4c 89 cb             	mov    %r9,%rbx
   2579f:	4c 89 e7             	mov    %r12,%rdi
   257a2:	4c 89 ce             	mov    %r9,%rsi
   257a5:	44 89 f2             	mov    %r14d,%edx
   257a8:	e8 d3 fe ff ff       	callq  25680 <vebdel>
   257ad:	4c 89 e7             	mov    %r12,%rdi
   257b0:	48 89 de             	mov    %rbx,%rsi
   257b3:	e8 c8 f9 ff ff       	callq  25180 <empty>
   257b8:	85 c0                	test   %eax,%eax
   257ba:	0f 84 0e ff ff ff    	je     256ce <vebdel+0x4e>
   257c0:	48 8b 34 24          	mov    (%rsp),%rsi
   257c4:	48 83 c4 18          	add    $0x18,%rsp
   257c8:	44 89 ea             	mov    %r13d,%edx
   257cb:	4c 89 ff             	mov    %r15,%rdi
   257ce:	5b                   	pop    %rbx
   257cf:	5d                   	pop    %rbp
   257d0:	41 5c                	pop    %r12
   257d2:	41 5d                	pop    %r13
   257d4:	41 5e                	pop    %r14
   257d6:	41 5f                	pop    %r15
   257d8:	e9 a3 fe ff ff       	jmpq   25680 <vebdel>
   257dd:	0f 1f 00             	nopl   (%rax)
   257e0:	48 89 c7             	mov    %rax,%rdi
   257e3:	48 89 d6             	mov    %rdx,%rsi
   257e6:	49 89 d4             	mov    %rdx,%r12
   257e9:	e8 92 f9 ff ff       	callq  25180 <empty>
   257ee:	85 c0                	test   %eax,%eax
   257f0:	0f 85 d3 00 00 00    	jne    258c9 <vebdel+0x249>
   257f6:	4c 89 e6             	mov    %r12,%rsi
   257f9:	4c 89 ff             	mov    %r15,%rdi
   257fc:	e8 2f f9 ff ff       	callq  25130 <low>
   25801:	48 89 ef             	mov    %rbp,%rdi
   25804:	48 89 de             	mov    %rbx,%rsi
   25807:	89 c2                	mov    %eax,%edx
   25809:	41 89 c5             	mov    %eax,%r13d
   2580c:	e8 9f fa ff ff       	callq  252b0 <branch>
   25811:	48 89 d6             	mov    %rdx,%rsi
   25814:	48 89 c7             	mov    %rax,%rdi
   25817:	49 89 c4             	mov    %rax,%r12
   2581a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   2581f:	e8 0c f9 ff ff       	callq  25130 <low>
   25824:	89 d9                	mov    %ebx,%ecx
   25826:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   2582b:	d1 e9                	shr    %ecx
   2582d:	83 fb 3f             	cmp    $0x3f,%ebx
   25830:	41 89 c6             	mov    %eax,%r14d
   25833:	0f 87 b9 00 00 00    	ja     258f2 <vebdel+0x272>
   25839:	44 89 ea             	mov    %r13d,%edx
   2583c:	48 89 ef             	mov    %rbp,%rdi
   2583f:	48 89 de             	mov    %rbx,%rsi
   25842:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   25847:	d3 e2                	shl    %cl,%edx
   25849:	01 c2                	add    %eax,%edx
   2584b:	e8 70 f7 ff ff       	callq  24fc0 <setlow>
   25850:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   25855:	e9 42 ff ff ff       	jmpq   2579c <vebdel+0x11c>
   2585a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25860:	4c 8b 2c 24          	mov    (%rsp),%r13
   25864:	48 89 c7             	mov    %rax,%rdi
   25867:	4c 89 ee             	mov    %r13,%rsi
   2586a:	e8 11 f9 ff ff       	callq  25180 <empty>
   2586f:	85 c0                	test   %eax,%eax
   25871:	75 5e                	jne    258d1 <vebdel+0x251>
   25873:	4c 89 ee             	mov    %r13,%rsi
   25876:	4c 89 ff             	mov    %r15,%rdi
   25879:	e8 42 f8 ff ff       	callq  250c0 <high>
   2587e:	48 89 ef             	mov    %rbp,%rdi
   25881:	48 89 de             	mov    %rbx,%rsi
   25884:	89 c2                	mov    %eax,%edx
   25886:	41 89 c5             	mov    %eax,%r13d
   25889:	e8 22 fa ff ff       	callq  252b0 <branch>
   2588e:	48 89 d6             	mov    %rdx,%rsi
   25891:	48 89 c7             	mov    %rax,%rdi
   25894:	49 89 c4             	mov    %rax,%r12
   25897:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   2589c:	e8 1f f8 ff ff       	callq  250c0 <high>
   258a1:	89 d9                	mov    %ebx,%ecx
   258a3:	41 89 c6             	mov    %eax,%r14d
   258a6:	d1 e9                	shr    %ecx
   258a8:	83 fb 3f             	cmp    $0x3f,%ebx
   258ab:	77 45                	ja     258f2 <vebdel+0x272>
   258ad:	44 89 ea             	mov    %r13d,%edx
   258b0:	48 89 ef             	mov    %rbp,%rdi
   258b3:	48 89 de             	mov    %rbx,%rsi
   258b6:	d3 e2                	shl    %cl,%edx
   258b8:	01 c2                	add    %eax,%edx
   258ba:	e8 41 f7 ff ff       	callq  25000 <sethigh>
   258bf:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   258c4:	e9 d3 fe ff ff       	jmpq   2579c <vebdel+0x11c>
   258c9:	44 89 ea             	mov    %r13d,%edx
   258cc:	e9 51 fe ff ff       	jmpq   25722 <vebdel+0xa2>
   258d1:	48 83 c4 18          	add    $0x18,%rsp
   258d5:	44 89 e2             	mov    %r12d,%edx
   258d8:	48 89 ef             	mov    %rbp,%rdi
   258db:	48 89 de             	mov    %rbx,%rsi
   258de:	5b                   	pop    %rbx
   258df:	5d                   	pop    %rbp
   258e0:	41 5c                	pop    %r12
   258e2:	41 5d                	pop    %r13
   258e4:	41 5e                	pop    %r14
   258e6:	41 5f                	pop    %r15
   258e8:	e9 13 f7 ff ff       	jmpq   25000 <sethigh>
   258ed:	e8 ae f5 ff ff       	callq  24ea0 <highbits.part.0>
   258f2:	e8 29 f6 ff ff       	callq  24f20 <ipow.part.1>

00000000000258f7 <.annobin_vebdel.end>:
   258f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   258fe:	00 00 

0000000000025900 <vebsucc>:
   25900:	f3 0f 1e fa          	endbr64 
   25904:	41 57                	push   %r15
   25906:	41 56                	push   %r14
   25908:	49 89 f6             	mov    %rsi,%r14
   2590b:	41 55                	push   %r13
   2590d:	49 c1 ee 20          	shr    $0x20,%r14
   25911:	41 54                	push   %r12
   25913:	41 89 d4             	mov    %edx,%r12d
   25916:	45 89 f7             	mov    %r14d,%r15d
   25919:	55                   	push   %rbp
   2591a:	48 89 fd             	mov    %rdi,%rbp
   2591d:	53                   	push   %rbx
   2591e:	48 89 f3             	mov    %rsi,%rbx
   25921:	48 83 ec 28          	sub    $0x28,%rsp
   25925:	e8 96 f7 ff ff       	callq  250c0 <high>
   2592a:	48 89 ef             	mov    %rbp,%rdi
   2592d:	48 89 de             	mov    %rbx,%rsi
   25930:	41 89 c5             	mov    %eax,%r13d
   25933:	e8 48 f8 ff ff       	callq  25180 <empty>
   25938:	45 39 e5             	cmp    %r12d,%r13d
   2593b:	72 47                	jb     25984 <vebsucc+0x84>
   2593d:	85 c0                	test   %eax,%eax
   2593f:	75 43                	jne    25984 <vebsucc+0x84>
   25941:	41 83 fe 20          	cmp    $0x20,%r14d
   25945:	77 59                	ja     259a0 <vebsucc+0xa0>
   25947:	31 f6                	xor    %esi,%esi
   25949:	41 f6 c6 07          	test   $0x7,%r14b
   2594d:	48 89 ef             	mov    %rbp,%rdi
   25950:	40 0f 95 c6          	setne  %sil
   25954:	41 c1 ee 03          	shr    $0x3,%r14d
   25958:	44 01 f6             	add    %r14d,%esi
   2595b:	e8 f0 f6 ff ff       	callq  25050 <decode>
   25960:	41 83 fc 20          	cmp    $0x20,%r12d
   25964:	0f 87 74 01 00 00    	ja     25ade <vebsucc+0x1de>
   2596a:	74 18                	je     25984 <vebsucc+0x84>
   2596c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   25971:	44 89 e1             	mov    %r12d,%ecx
   25974:	d3 e2                	shl    %cl,%edx
   25976:	21 d0                	and    %edx,%eax
   25978:	31 d2                	xor    %edx,%edx
   2597a:	f3 0f bc d0          	tzcnt  %eax,%edx
   2597e:	85 c0                	test   %eax,%eax
   25980:	44 0f 45 fa          	cmovne %edx,%r15d
   25984:	48 83 c4 28          	add    $0x28,%rsp
   25988:	44 89 f8             	mov    %r15d,%eax
   2598b:	5b                   	pop    %rbx
   2598c:	5d                   	pop    %rbp
   2598d:	41 5c                	pop    %r12
   2598f:	41 5d                	pop    %r13
   25991:	41 5e                	pop    %r14
   25993:	41 5f                	pop    %r15
   25995:	c3                   	retq   
   25996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2599d:	00 00 00 
   259a0:	48 89 ef             	mov    %rbp,%rdi
   259a3:	48 89 de             	mov    %rbx,%rsi
   259a6:	e8 85 f7 ff ff       	callq  25130 <low>
   259ab:	41 89 c7             	mov    %eax,%r15d
   259ae:	41 39 c4             	cmp    %eax,%r12d
   259b1:	76 d1                	jbe    25984 <vebsucc+0x84>
   259b3:	48 89 ef             	mov    %rbp,%rdi
   259b6:	48 89 de             	mov    %rbx,%rsi
   259b9:	e8 12 f5 ff ff       	callq  24ed0 <aux>
   259be:	48 89 c7             	mov    %rax,%rdi
   259c1:	48 89 d6             	mov    %rdx,%rsi
   259c4:	49 89 c7             	mov    %rax,%r15
   259c7:	49 89 d6             	mov    %rdx,%r14
   259ca:	e8 b1 f7 ff ff       	callq  25180 <empty>
   259cf:	85 c0                	test   %eax,%eax
   259d1:	0f 85 a9 00 00 00    	jne    25a80 <vebsucc+0x180>
   259d7:	45 39 e5             	cmp    %r12d,%r13d
   259da:	0f 84 a0 00 00 00    	je     25a80 <vebsucc+0x180>
   259e0:	89 d8                	mov    %ebx,%eax
   259e2:	d1 e8                	shr    %eax
   259e4:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   259e8:	83 fb 3f             	cmp    $0x3f,%ebx
   259eb:	0f 87 f2 00 00 00    	ja     25ae3 <vebsucc+0x1e3>
   259f1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   259f5:	44 89 e2             	mov    %r12d,%edx
   259f8:	89 c1                	mov    %eax,%ecx
   259fa:	d3 ea                	shr    %cl,%edx
   259fc:	89 c1                	mov    %eax,%ecx
   259fe:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25a02:	83 f8 20             	cmp    $0x20,%eax
   25a05:	74 0c                	je     25a13 <vebsucc+0x113>
   25a07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25a0c:	d3 e0                	shl    %cl,%eax
   25a0e:	f7 d0                	not    %eax
   25a10:	41 21 c4             	and    %eax,%r12d
   25a13:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25a17:	48 89 ef             	mov    %rbp,%rdi
   25a1a:	48 89 de             	mov    %rbx,%rsi
   25a1d:	e8 8e f8 ff ff       	callq  252b0 <branch>
   25a22:	48 89 c7             	mov    %rax,%rdi
   25a25:	48 89 d6             	mov    %rdx,%rsi
   25a28:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   25a2d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   25a32:	e8 49 f7 ff ff       	callq  25180 <empty>
   25a37:	85 c0                	test   %eax,%eax
   25a39:	75 55                	jne    25a90 <vebsucc+0x190>
   25a3b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   25a40:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   25a45:	4c 89 c7             	mov    %r8,%rdi
   25a48:	e8 73 f6 ff ff       	callq  250c0 <high>
   25a4d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   25a52:	44 39 e0             	cmp    %r12d,%eax
   25a55:	72 39                	jb     25a90 <vebsucc+0x190>
   25a57:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   25a5c:	0f b6 4c 24 0c       	movzbl 0xc(%rsp),%ecx
   25a61:	44 89 e2             	mov    %r12d,%edx
   25a64:	4c 89 c7             	mov    %r8,%rdi
   25a67:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   25a6c:	41 d3 e7             	shl    %cl,%r15d
   25a6f:	e8 8c fe ff ff       	callq  25900 <vebsucc>
   25a74:	41 01 c7             	add    %eax,%r15d
   25a77:	e9 08 ff ff ff       	jmpq   25984 <vebsucc+0x84>
   25a7c:	0f 1f 40 00          	nopl   0x0(%rax)
   25a80:	45 89 ef             	mov    %r13d,%r15d
   25a83:	e9 fc fe ff ff       	jmpq   25984 <vebsucc+0x84>
   25a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   25a8f:	00 
   25a90:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25a94:	4c 89 ff             	mov    %r15,%rdi
   25a97:	4c 89 f6             	mov    %r14,%rsi
   25a9a:	49 c1 ee 20          	shr    $0x20,%r14
   25a9e:	45 89 ef             	mov    %r13d,%r15d
   25aa1:	83 c2 01             	add    $0x1,%edx
   25aa4:	e8 57 fe ff ff       	callq  25900 <vebsucc>
   25aa9:	41 89 c4             	mov    %eax,%r12d
   25aac:	44 39 f0             	cmp    %r14d,%eax
   25aaf:	0f 84 cf fe ff ff    	je     25984 <vebsucc+0x84>
   25ab5:	48 89 ef             	mov    %rbp,%rdi
   25ab8:	48 89 de             	mov    %rbx,%rsi
   25abb:	89 c2                	mov    %eax,%edx
   25abd:	e8 ee f7 ff ff       	callq  252b0 <branch>
   25ac2:	0f b6 4c 24 0c       	movzbl 0xc(%rsp),%ecx
   25ac7:	48 89 d6             	mov    %rdx,%rsi
   25aca:	48 89 c7             	mov    %rax,%rdi
   25acd:	41 d3 e4             	shl    %cl,%r12d
   25ad0:	e8 5b f6 ff ff       	callq  25130 <low>
   25ad5:	45 8d 3c 04          	lea    (%r12,%rax,1),%r15d
   25ad9:	e9 a6 fe ff ff       	jmpq   25984 <vebsucc+0x84>
   25ade:	e8 fd f6 ff ff       	callq  251e0 <zeros.part.4>
   25ae3:	e8 b8 f3 ff ff       	callq  24ea0 <highbits.part.0>

0000000000025ae8 <.annobin_vebpred.start>:
   25ae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   25aef:	00 

0000000000025af0 <vebpred>:
   25af0:	f3 0f 1e fa          	endbr64 
   25af4:	41 57                	push   %r15
   25af6:	41 56                	push   %r14
   25af8:	49 89 f6             	mov    %rsi,%r14
   25afb:	41 55                	push   %r13
   25afd:	49 c1 ee 20          	shr    $0x20,%r14
   25b01:	41 54                	push   %r12
   25b03:	49 89 fc             	mov    %rdi,%r12
   25b06:	45 89 f7             	mov    %r14d,%r15d
   25b09:	55                   	push   %rbp
   25b0a:	89 d5                	mov    %edx,%ebp
   25b0c:	53                   	push   %rbx
   25b0d:	48 89 f3             	mov    %rsi,%rbx
   25b10:	48 83 ec 28          	sub    $0x28,%rsp
   25b14:	e8 17 f6 ff ff       	callq  25130 <low>
   25b19:	4c 89 e7             	mov    %r12,%rdi
   25b1c:	48 89 de             	mov    %rbx,%rsi
   25b1f:	41 89 c5             	mov    %eax,%r13d
   25b22:	e8 59 f6 ff ff       	callq  25180 <empty>
   25b27:	41 39 ed             	cmp    %ebp,%r13d
   25b2a:	0f 97 c2             	seta   %dl
   25b2d:	85 c0                	test   %eax,%eax
   25b2f:	0f 95 c0             	setne  %al
   25b32:	08 c2                	or     %al,%dl
   25b34:	75 05                	jne    25b3b <vebpred+0x4b>
   25b36:	44 39 f5             	cmp    %r14d,%ebp
   25b39:	72 15                	jb     25b50 <vebpred+0x60>
   25b3b:	48 83 c4 28          	add    $0x28,%rsp
   25b3f:	44 89 f8             	mov    %r15d,%eax
   25b42:	5b                   	pop    %rbx
   25b43:	5d                   	pop    %rbp
   25b44:	41 5c                	pop    %r12
   25b46:	41 5d                	pop    %r13
   25b48:	41 5e                	pop    %r14
   25b4a:	41 5f                	pop    %r15
   25b4c:	c3                   	retq   
   25b4d:	0f 1f 00             	nopl   (%rax)
   25b50:	41 83 fe 20          	cmp    $0x20,%r14d
   25b54:	77 4a                	ja     25ba0 <vebpred+0xb0>
   25b56:	31 f6                	xor    %esi,%esi
   25b58:	41 f6 c6 07          	test   $0x7,%r14b
   25b5c:	4c 89 e7             	mov    %r12,%rdi
   25b5f:	40 0f 95 c6          	setne  %sil
   25b63:	41 c1 ee 03          	shr    $0x3,%r14d
   25b67:	44 01 f6             	add    %r14d,%esi
   25b6a:	e8 e1 f4 ff ff       	callq  25050 <decode>
   25b6f:	8d 4d 01             	lea    0x1(%rbp),%ecx
   25b72:	83 f9 20             	cmp    $0x20,%ecx
   25b75:	0f 87 51 01 00 00    	ja     25ccc <vebpred+0x1dc>
   25b7b:	74 0b                	je     25b88 <vebpred+0x98>
   25b7d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   25b82:	d3 e2                	shl    %cl,%edx
   25b84:	f7 d2                	not    %edx
   25b86:	21 d0                	and    %edx,%eax
   25b88:	85 c0                	test   %eax,%eax
   25b8a:	74 af                	je     25b3b <vebpred+0x4b>
   25b8c:	0f bd d0             	bsr    %eax,%edx
   25b8f:	41 bf 1f 00 00 00    	mov    $0x1f,%r15d
   25b95:	83 f2 1f             	xor    $0x1f,%edx
   25b98:	41 29 d7             	sub    %edx,%r15d
   25b9b:	eb 9e                	jmp    25b3b <vebpred+0x4b>
   25b9d:	0f 1f 00             	nopl   (%rax)
   25ba0:	4c 89 e7             	mov    %r12,%rdi
   25ba3:	48 89 de             	mov    %rbx,%rsi
   25ba6:	e8 15 f5 ff ff       	callq  250c0 <high>
   25bab:	41 89 c7             	mov    %eax,%r15d
   25bae:	39 c5                	cmp    %eax,%ebp
   25bb0:	73 89                	jae    25b3b <vebpred+0x4b>
   25bb2:	4c 89 e7             	mov    %r12,%rdi
   25bb5:	48 89 de             	mov    %rbx,%rsi
   25bb8:	e8 13 f3 ff ff       	callq  24ed0 <aux>
   25bbd:	48 89 c7             	mov    %rax,%rdi
   25bc0:	48 89 d6             	mov    %rdx,%rsi
   25bc3:	49 89 c7             	mov    %rax,%r15
   25bc6:	49 89 d6             	mov    %rdx,%r14
   25bc9:	e8 b2 f5 ff ff       	callq  25180 <empty>
   25bce:	41 39 ed             	cmp    %ebp,%r13d
   25bd1:	0f 84 c9 00 00 00    	je     25ca0 <vebpred+0x1b0>
   25bd7:	85 c0                	test   %eax,%eax
   25bd9:	0f 85 c1 00 00 00    	jne    25ca0 <vebpred+0x1b0>
   25bdf:	89 d8                	mov    %ebx,%eax
   25be1:	d1 e8                	shr    %eax
   25be3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   25be7:	83 fb 3f             	cmp    $0x3f,%ebx
   25bea:	0f 87 e1 00 00 00    	ja     25cd1 <vebpred+0x1e1>
   25bf0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   25bf4:	89 ef                	mov    %ebp,%edi
   25bf6:	89 c1                	mov    %eax,%ecx
   25bf8:	d3 ef                	shr    %cl,%edi
   25bfa:	89 c1                	mov    %eax,%ecx
   25bfc:	89 7c 24 08          	mov    %edi,0x8(%rsp)
   25c00:	83 f8 20             	cmp    $0x20,%eax
   25c03:	74 0b                	je     25c10 <vebpred+0x120>
   25c05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25c0a:	d3 e0                	shl    %cl,%eax
   25c0c:	f7 d0                	not    %eax
   25c0e:	21 c5                	and    %eax,%ebp
   25c10:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25c14:	4c 89 e7             	mov    %r12,%rdi
   25c17:	48 89 de             	mov    %rbx,%rsi
   25c1a:	e8 91 f6 ff ff       	callq  252b0 <branch>
   25c1f:	48 89 c7             	mov    %rax,%rdi
   25c22:	48 89 d6             	mov    %rdx,%rsi
   25c25:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   25c2a:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   25c2f:	e8 4c f5 ff ff       	callq  25180 <empty>
   25c34:	85 c0                	test   %eax,%eax
   25c36:	75 1b                	jne    25c53 <vebpred+0x163>
   25c38:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   25c3d:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   25c42:	4c 89 c7             	mov    %r8,%rdi
   25c45:	e8 e6 f4 ff ff       	callq  25130 <low>
   25c4a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   25c4f:	39 e8                	cmp    %ebp,%eax
   25c51:	76 55                	jbe    25ca8 <vebpred+0x1b8>
   25c53:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25c57:	4c 89 ff             	mov    %r15,%rdi
   25c5a:	4c 89 f6             	mov    %r14,%rsi
   25c5d:	49 c1 ee 20          	shr    $0x20,%r14
   25c61:	45 89 ef             	mov    %r13d,%r15d
   25c64:	83 ea 01             	sub    $0x1,%edx
   25c67:	e8 84 fe ff ff       	callq  25af0 <vebpred>
   25c6c:	89 c5                	mov    %eax,%ebp
   25c6e:	44 39 f0             	cmp    %r14d,%eax
   25c71:	0f 84 c4 fe ff ff    	je     25b3b <vebpred+0x4b>
   25c77:	4c 89 e7             	mov    %r12,%rdi
   25c7a:	48 89 de             	mov    %rbx,%rsi
   25c7d:	89 c2                	mov    %eax,%edx
   25c7f:	e8 2c f6 ff ff       	callq  252b0 <branch>
   25c84:	0f b6 4c 24 0c       	movzbl 0xc(%rsp),%ecx
   25c89:	48 89 d6             	mov    %rdx,%rsi
   25c8c:	48 89 c7             	mov    %rax,%rdi
   25c8f:	d3 e5                	shl    %cl,%ebp
   25c91:	e8 2a f4 ff ff       	callq  250c0 <high>
   25c96:	44 8d 7c 05 00       	lea    0x0(%rbp,%rax,1),%r15d
   25c9b:	e9 9b fe ff ff       	jmpq   25b3b <vebpred+0x4b>
   25ca0:	45 89 ef             	mov    %r13d,%r15d
   25ca3:	e9 93 fe ff ff       	jmpq   25b3b <vebpred+0x4b>
   25ca8:	44 8b 7c 24 08       	mov    0x8(%rsp),%r15d
   25cad:	0f b6 4c 24 0c       	movzbl 0xc(%rsp),%ecx
   25cb2:	89 ea                	mov    %ebp,%edx
   25cb4:	4c 89 c7             	mov    %r8,%rdi
   25cb7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   25cbc:	41 d3 e7             	shl    %cl,%r15d
   25cbf:	e8 2c fe ff ff       	callq  25af0 <vebpred>
   25cc4:	41 01 c7             	add    %eax,%r15d
   25cc7:	e9 6f fe ff ff       	jmpq   25b3b <vebpred+0x4b>
   25ccc:	e8 0f f5 ff ff       	callq  251e0 <zeros.part.4>
   25cd1:	e8 ca f1 ff ff       	callq  24ea0 <highbits.part.0>

0000000000025cd6 <.annobin_veb.c_end>:
   25cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25cdd:	00 00 00 

0000000000025ce0 <wallclock_get_zulu>:
   25ce0:	f3 0f 1e fa          	endbr64 
   25ce4:	41 54                	push   %r12
   25ce6:	55                   	push   %rbp
   25ce7:	53                   	push   %rbx
   25ce8:	48 83 ec 60          	sub    $0x60,%rsp
   25cec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   25cf3:	00 00 
   25cf5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   25cfa:	31 c0                	xor    %eax,%eax
   25cfc:	48 83 fe 20          	cmp    $0x20,%rsi
   25d00:	0f 86 ca 00 00 00    	jbe    25dd0 <wallclock_get_zulu+0xf0>
   25d06:	48 89 fd             	mov    %rdi,%rbp
   25d09:	48 89 f3             	mov    %rsi,%rbx
   25d0c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   25d11:	31 ff                	xor    %edi,%edi
   25d13:	e8 c8 9f fe ff       	callq  fce0 <clock_gettime@plt>
   25d18:	85 c0                	test   %eax,%eax
   25d1a:	0f 88 c8 00 00 00    	js     25de8 <wallclock_get_zulu+0x108>
   25d20:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   25d25:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   25d2a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   25d2f:	4c 89 e6             	mov    %r12,%rsi
   25d32:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   25d37:	e8 64 a2 fe ff       	callq  ffa0 <gmtime_r@plt>
   25d3c:	48 85 c0             	test   %rax,%rax
   25d3f:	0f 84 8b 00 00 00    	je     25dd0 <wallclock_get_zulu+0xf0>
   25d45:	4c 89 e1             	mov    %r12,%rcx
   25d48:	48 8d 15 ba c4 01 00 	lea    0x1c4ba(%rip),%rdx        # 42209 <__PRETTY_FUNCTION__.2885+0x9>
   25d4f:	48 89 de             	mov    %rbx,%rsi
   25d52:	48 89 ef             	mov    %rbp,%rdi
   25d55:	e8 66 a9 fe ff       	callq  106c0 <strftime@plt>
   25d5a:	48 85 c0             	test   %rax,%rax
   25d5d:	74 71                	je     25dd0 <wallclock_get_zulu+0xf0>
   25d5f:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   25d64:	48 8d 73 ed          	lea    -0x13(%rbx),%rsi
   25d68:	48 8d 7d 13          	lea    0x13(%rbp),%rdi
   25d6c:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   25d73:	9b c4 20 
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   25d76:	4c 8d 05 92 c4 01 00 	lea    0x1c492(%rip),%r8        # 4220f <__PRETTY_FUNCTION__.2885+0xf>
   25d7d:	48 83 eb 14          	sub    $0x14,%rbx
   25d81:	48 89 c8             	mov    %rcx,%rax
   25d84:	48 c1 f9 3f          	sar    $0x3f,%rcx
   25d88:	48 f7 ea             	imul   %rdx
   25d8b:	31 c0                	xor    %eax,%eax
   25d8d:	48 c1 fa 07          	sar    $0x7,%rdx
   25d91:	48 29 ca             	sub    %rcx,%rdx
   25d94:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   25d9b:	49 89 d1             	mov    %rdx,%r9
   25d9e:	ba 01 00 00 00       	mov    $0x1,%edx
   25da3:	e8 f8 9c fe ff       	callq  faa0 <__snprintf_chk@plt>
   25da8:	48 98                	cltq   
   25daa:	48 39 d8             	cmp    %rbx,%rax
   25dad:	73 21                	jae    25dd0 <wallclock_get_zulu+0xf0>
   25daf:	48 89 ef             	mov    %rbp,%rdi
   25db2:	e8 69 a0 fe ff       	callq  fe20 <strlen@plt>
   25db7:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   25dbc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   25dc3:	00 00 
   25dc5:	75 28                	jne    25def <wallclock_get_zulu+0x10f>
   25dc7:	48 83 c4 60          	add    $0x60,%rsp
   25dcb:	5b                   	pop    %rbx
   25dcc:	5d                   	pop    %rbp
   25dcd:	41 5c                	pop    %r12
   25dcf:	c3                   	retq   
   25dd0:	e8 3b 9d fe ff       	callq  fb10 <__errno_location@plt>
   25dd5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   25ddb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25de0:	eb d5                	jmp    25db7 <wallclock_get_zulu+0xd7>
   25de2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25de8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25ded:	eb c8                	jmp    25db7 <wallclock_get_zulu+0xd7>
   25def:	e8 5c a0 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000025df4 <.annobin_wallclock.c_end>:
   25df4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   25dfb:	00 00 00 
   25dfe:	66 90                	xchg   %ax,%ax

0000000000025e00 <xzmalloc>:
   25e00:	f3 0f 1e fa          	endbr64 
   25e04:	48 83 ec 08          	sub    $0x8,%rsp
   25e08:	be 01 00 00 00       	mov    $0x1,%esi
   25e0d:	e8 fe a3 fe ff       	callq  10210 <calloc@plt>
   25e12:	48 85 c0             	test   %rax,%rax
   25e15:	74 05                	je     25e1c <xzmalloc+0x1c>
   25e17:	48 83 c4 08          	add    $0x8,%rsp
   25e1b:	c3                   	retq   
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   25e1c:	48 8b 05 c5 d1 22 00 	mov    0x22d1c5(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   25e23:	41 b9 1b 00 00 00    	mov    $0x1b,%r9d
   25e29:	4c 8d 05 10 c4 01 00 	lea    0x1c410(%rip),%r8        # 42240 <__FUNCTION__.3752>
   25e30:	48 8d 0d e0 c3 01 00 	lea    0x1c3e0(%rip),%rcx        # 42217 <__PRETTY_FUNCTION__.2885+0x17>
   25e37:	48 8d 15 42 92 01 00 	lea    0x19242(%rip),%rdx        # 3f080 <__PRETTY_FUNCTION__.5641+0x40>
   25e3e:	be 01 00 00 00       	mov    $0x1,%esi
   25e43:	48 8b 38             	mov    (%rax),%rdi
   25e46:	31 c0                	xor    %eax,%eax
   25e48:	e8 13 ab fe ff       	callq  10960 <__fprintf_chk@plt>
   25e4d:	bf 01 00 00 00       	mov    $0x1,%edi
   25e52:	e8 b9 aa fe ff       	callq  10910 <exit@plt>

0000000000025e57 <.annobin_xstrdup.start>:
   25e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   25e5e:	00 00 

0000000000025e60 <xstrdup>:
   25e60:	f3 0f 1e fa          	endbr64 
   25e64:	48 83 ec 08          	sub    $0x8,%rsp
   25e68:	e8 33 ab fe ff       	callq  109a0 <strdup@plt>
   25e6d:	48 85 c0             	test   %rax,%rax
   25e70:	74 05                	je     25e77 <xstrdup+0x17>
   25e72:	48 83 c4 08          	add    $0x8,%rsp
   25e76:	c3                   	retq   
   25e77:	48 8b 05 6a d1 22 00 	mov    0x22d16a(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   25e7e:	41 b9 24 00 00 00    	mov    $0x24,%r9d
   25e84:	4c 8d 05 ad c3 01 00 	lea    0x1c3ad(%rip),%r8        # 42238 <__FUNCTION__.3757>
   25e8b:	48 8d 0d 85 c3 01 00 	lea    0x1c385(%rip),%rcx        # 42217 <__PRETTY_FUNCTION__.2885+0x17>
   25e92:	48 8d 15 e7 91 01 00 	lea    0x191e7(%rip),%rdx        # 3f080 <__PRETTY_FUNCTION__.5641+0x40>
   25e99:	be 01 00 00 00       	mov    $0x1,%esi
   25e9e:	48 8b 38             	mov    (%rax),%rdi
   25ea1:	31 c0                	xor    %eax,%eax
   25ea3:	e8 b8 aa fe ff       	callq  10960 <__fprintf_chk@plt>
   25ea8:	bf 01 00 00 00       	mov    $0x1,%edi
   25ead:	e8 5e aa fe ff       	callq  10910 <exit@plt>

0000000000025eb2 <.annobin_xstrdup.end>:
   25eb2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   25eb9:	00 00 00 00 
   25ebd:	0f 1f 00             	nopl   (%rax)

0000000000025ec0 <xvasprintf>:
   25ec0:	f3 0f 1e fa          	endbr64 
   25ec4:	48 83 ec 18          	sub    $0x18,%rsp
   25ec8:	48 89 fa             	mov    %rdi,%rdx
   25ecb:	48 89 f1             	mov    %rsi,%rcx
  return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
   25ece:	be 01 00 00 00       	mov    $0x1,%esi
   25ed3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   25eda:	00 00 
   25edc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   25ee1:	31 c0                	xor    %eax,%eax
   25ee3:	48 89 e7             	mov    %rsp,%rdi
   25ee6:	e8 a5 a5 fe ff       	callq  10490 <__vasprintf_chk@plt>
   25eeb:	85 c0                	test   %eax,%eax
   25eed:	78 19                	js     25f08 <xvasprintf+0x48>
   25eef:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   25ef4:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   25efb:	00 00 
   25efd:	48 8b 04 24          	mov    (%rsp),%rax
   25f01:	75 40                	jne    25f43 <xvasprintf+0x83>
   25f03:	48 83 c4 18          	add    $0x18,%rsp
   25f07:	c3                   	retq   
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   25f08:	48 8b 05 d9 d0 22 00 	mov    0x22d0d9(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   25f0f:	41 b9 2e 00 00 00    	mov    $0x2e,%r9d
   25f15:	4c 8d 05 0c c3 01 00 	lea    0x1c30c(%rip),%r8        # 42228 <__FUNCTION__.3763>
   25f1c:	48 8d 0d f4 c2 01 00 	lea    0x1c2f4(%rip),%rcx        # 42217 <__PRETTY_FUNCTION__.2885+0x17>
   25f23:	48 8d 15 56 91 01 00 	lea    0x19156(%rip),%rdx        # 3f080 <__PRETTY_FUNCTION__.5641+0x40>
   25f2a:	be 01 00 00 00       	mov    $0x1,%esi
   25f2f:	48 8b 38             	mov    (%rax),%rdi
   25f32:	31 c0                	xor    %eax,%eax
   25f34:	e8 27 aa fe ff       	callq  10960 <__fprintf_chk@plt>
   25f39:	bf 01 00 00 00       	mov    $0x1,%edi
   25f3e:	e8 cd a9 fe ff       	callq  10910 <exit@plt>
   25f43:	e8 08 9f fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000025f48 <.annobin_xasprintf.start>:
   25f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   25f4f:	00 

0000000000025f50 <xasprintf>:
   25f50:	f3 0f 1e fa          	endbr64 
   25f54:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   25f5b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   25f60:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   25f65:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   25f6a:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   25f6f:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   25f74:	84 c0                	test   %al,%al
   25f76:	74 37                	je     25faf <xasprintf+0x5f>
   25f78:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   25f7d:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   25f82:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   25f87:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   25f8e:	00 
   25f8f:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   25f96:	00 
   25f97:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   25f9e:	00 
   25f9f:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   25fa6:	00 
   25fa7:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   25fae:	00 
   25faf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   25fb6:	00 00 
   25fb8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   25fbd:	31 c0                	xor    %eax,%eax
   25fbf:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   25fc6:	00 
   25fc7:	48 89 e6             	mov    %rsp,%rsi
   25fca:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   25fd1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   25fd6:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   25fdb:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   25fe2:	00 
   25fe3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   25fe8:	e8 d3 fe ff ff       	callq  25ec0 <xvasprintf>
   25fed:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   25ff2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   25ff9:	00 00 
   25ffb:	75 08                	jne    26005 <xasprintf+0xb5>
   25ffd:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   26004:	c3                   	retq   
   26005:	e8 46 9e fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002600a <.annobin_xasprintf.end>:
   2600a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000026010 <idset_grow>:
   26010:	8b 4f 14             	mov    0x14(%rdi),%ecx
   26013:	48 39 f1             	cmp    %rsi,%rcx
   26016:	0f 83 a4 00 00 00    	jae    260c0 <idset_grow+0xb0>
   2601c:	48 89 ca             	mov    %rcx,%rdx
   2601f:	90                   	nop
   26020:	48 01 d2             	add    %rdx,%rdx
   26023:	48 39 d6             	cmp    %rdx,%rsi
   26026:	77 f8                	ja     26020 <idset_grow+0x10>
   26028:	31 c0                	xor    %eax,%eax
   2602a:	48 39 d1             	cmp    %rdx,%rcx
   2602d:	0f 83 85 00 00 00    	jae    260b8 <idset_grow+0xa8>
   26033:	41 55                	push   %r13
   26035:	41 54                	push   %r12
   26037:	55                   	push   %rbp
   26038:	48 89 fd             	mov    %rdi,%rbp
   2603b:	53                   	push   %rbx
   2603c:	48 83 ec 08          	sub    $0x8,%rsp
   26040:	f6 47 18 01          	testb  $0x1,0x18(%rdi)
   26044:	74 7d                	je     260c3 <idset_grow+0xb3>
   26046:	31 f6                	xor    %esi,%esi
   26048:	89 d7                	mov    %edx,%edi
   2604a:	e8 91 f5 ff ff       	callq  255e0 <vebnew>
   2604f:	49 89 c4             	mov    %rax,%r12
   26052:	49 89 d5             	mov    %rdx,%r13
   26055:	48 85 c0             	test   %rax,%rax
   26058:	74 7b                	je     260d5 <idset_grow+0xc5>
   2605a:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   2605e:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   26062:	31 d2                	xor    %edx,%edx
   26064:	e8 97 f8 ff ff       	callq  25900 <vebsucc>
   26069:	89 c3                	mov    %eax,%ebx
   2606b:	3b 45 14             	cmp    0x14(%rbp),%eax
   2606e:	73 24                	jae    26094 <idset_grow+0x84>
   26070:	89 da                	mov    %ebx,%edx
   26072:	4c 89 e7             	mov    %r12,%rdi
   26075:	4c 89 ee             	mov    %r13,%rsi
   26078:	e8 b3 f3 ff ff       	callq  25430 <vebput>
   2607d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   26081:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   26085:	8d 53 01             	lea    0x1(%rbx),%edx
   26088:	e8 73 f8 ff ff       	callq  25900 <vebsucc>
   2608d:	89 c3                	mov    %eax,%ebx
   2608f:	39 45 14             	cmp    %eax,0x14(%rbp)
   26092:	77 dc                	ja     26070 <idset_grow+0x60>
   26094:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   26098:	e8 13 9a fe ff       	callq  fab0 <free@plt>
   2609d:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   260a1:	31 c0                	xor    %eax,%eax
   260a3:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   260a7:	48 83 c4 08          	add    $0x8,%rsp
   260ab:	5b                   	pop    %rbx
   260ac:	5d                   	pop    %rbp
   260ad:	41 5c                	pop    %r12
   260af:	41 5d                	pop    %r13
   260b1:	c3                   	retq   
   260b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   260b8:	c3                   	retq   
   260b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   260c0:	31 c0                	xor    %eax,%eax
   260c2:	c3                   	retq   
   260c3:	e8 48 9a fe ff       	callq  fb10 <__errno_location@plt>
   260c8:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   260ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   260d3:	eb d2                	jmp    260a7 <idset_grow+0x97>
   260d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   260da:	eb cb                	jmp    260a7 <idset_grow+0x97>

00000000000260dc <.annobin_idset_grow.end>:
   260dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000260e0 <validate_idset_flags>:
   260e0:	f3 0f 1e fa          	endbr64 
   260e4:	21 fe                	and    %edi,%esi
   260e6:	39 fe                	cmp    %edi,%esi
   260e8:	75 06                	jne    260f0 <validate_idset_flags+0x10>
   260ea:	31 c0                	xor    %eax,%eax
   260ec:	c3                   	retq   
   260ed:	0f 1f 00             	nopl   (%rax)
   260f0:	48 83 ec 08          	sub    $0x8,%rsp
   260f4:	e8 17 9a fe ff       	callq  fb10 <__errno_location@plt>
   260f9:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   260ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26104:	48 83 c4 08          	add    $0x8,%rsp
   26108:	c3                   	retq   

0000000000026109 <.annobin_idset_create.start>:
   26109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000026110 <idset_create>:
   26110:	f3 0f 1e fa          	endbr64 
   26114:	41 54                	push   %r12
   26116:	41 89 f4             	mov    %esi,%r12d
   26119:	be 01 00 00 00       	mov    $0x1,%esi
   2611e:	55                   	push   %rbp
   2611f:	48 89 fd             	mov    %rdi,%rbp
   26122:	44 89 e7             	mov    %r12d,%edi
   26125:	53                   	push   %rbx
   26126:	e8 b5 ff ff ff       	callq  260e0 <validate_idset_flags>
   2612b:	85 c0                	test   %eax,%eax
   2612d:	78 64                	js     26193 <idset_create+0x83>
   2612f:	48 85 ed             	test   %rbp,%rbp
   26132:	b8 00 04 00 00       	mov    $0x400,%eax
   26137:	bf 20 00 00 00       	mov    $0x20,%edi
   2613c:	48 0f 44 e8          	cmove  %rax,%rbp
   26140:	e8 db a2 fe ff       	callq  10420 <malloc@plt>
   26145:	48 89 c3             	mov    %rax,%rbx
   26148:	48 85 c0             	test   %rax,%rax
   2614b:	74 46                	je     26193 <idset_create+0x83>
   2614d:	31 f6                	xor    %esi,%esi
   2614f:	89 ef                	mov    %ebp,%edi
   26151:	e8 8a f4 ff ff       	callq  255e0 <vebnew>
   26156:	48 89 43 08          	mov    %rax,0x8(%rbx)
   2615a:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   2615e:	48 85 c0             	test   %rax,%rax
   26161:	74 1d                	je     26180 <idset_create+0x70>
   26163:	44 89 63 18          	mov    %r12d,0x18(%rbx)
   26167:	48 89 d8             	mov    %rbx,%rax
   2616a:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   26171:	5b                   	pop    %rbx
   26172:	5d                   	pop    %rbp
   26173:	41 5c                	pop    %r12
   26175:	c3                   	retq   
   26176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2617d:	00 00 00 
   26180:	48 89 df             	mov    %rbx,%rdi
   26183:	e8 28 99 fe ff       	callq  fab0 <free@plt>
   26188:	e8 83 99 fe ff       	callq  fb10 <__errno_location@plt>
   2618d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   26193:	31 db                	xor    %ebx,%ebx
   26195:	48 89 d8             	mov    %rbx,%rax
   26198:	5b                   	pop    %rbx
   26199:	5d                   	pop    %rbp
   2619a:	41 5c                	pop    %r12
   2619c:	c3                   	retq   

000000000002619d <.annobin_idset_create.end>:
   2619d:	0f 1f 00             	nopl   (%rax)

00000000000261a0 <idset_destroy>:
   261a0:	f3 0f 1e fa          	endbr64 
   261a4:	48 85 ff             	test   %rdi,%rdi
   261a7:	74 2f                	je     261d8 <idset_destroy+0x38>
   261a9:	41 54                	push   %r12
   261ab:	55                   	push   %rbp
   261ac:	53                   	push   %rbx
   261ad:	48 89 fb             	mov    %rdi,%rbx
   261b0:	e8 5b 99 fe ff       	callq  fb10 <__errno_location@plt>
   261b5:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   261b9:	44 8b 20             	mov    (%rax),%r12d
   261bc:	48 89 c5             	mov    %rax,%rbp
   261bf:	e8 ec 98 fe ff       	callq  fab0 <free@plt>
   261c4:	48 89 df             	mov    %rbx,%rdi
   261c7:	e8 e4 98 fe ff       	callq  fab0 <free@plt>
   261cc:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   261d0:	5b                   	pop    %rbx
   261d1:	5d                   	pop    %rbp
   261d2:	41 5c                	pop    %r12
   261d4:	c3                   	retq   
   261d5:	0f 1f 00             	nopl   (%rax)
   261d8:	c3                   	retq   

00000000000261d9 <.annobin_idset_copy_flags.isra.2.start>:
   261d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000261e0 <idset_copy_flags.isra.2>:
   261e0:	41 57                	push   %r15
   261e2:	41 56                	push   %r14
   261e4:	41 55                	push   %r13
   261e6:	49 89 fd             	mov    %rdi,%r13
   261e9:	bf 20 00 00 00       	mov    $0x20,%edi
   261ee:	41 54                	push   %r12
   261f0:	41 89 d4             	mov    %edx,%r12d
   261f3:	55                   	push   %rbp
   261f4:	48 89 f5             	mov    %rsi,%rbp
   261f7:	53                   	push   %rbx
   261f8:	48 83 ec 08          	sub    $0x8,%rsp
   261fc:	e8 1f a2 fe ff       	callq  10420 <malloc@plt>
   26201:	48 89 c3             	mov    %rax,%rbx
   26204:	48 85 c0             	test   %rax,%rax
   26207:	74 48                	je     26251 <idset_copy_flags.isra.2+0x71>
   26209:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
   2620d:	44 8b 75 08          	mov    0x8(%rbp),%r14d
   26211:	44 89 60 18          	mov    %r12d,0x18(%rax)
   26215:	44 8b 65 0c          	mov    0xc(%rbp),%r12d
   26219:	44 89 e7             	mov    %r12d,%edi
   2621c:	e8 ef ef ff ff       	callq  25210 <vebsize>
   26221:	89 c5                	mov    %eax,%ebp
   26223:	48 89 ef             	mov    %rbp,%rdi
   26226:	e8 f5 a1 fe ff       	callq  10420 <malloc@plt>
   2622b:	48 85 c0             	test   %rax,%rax
   2622e:	74 38                	je     26268 <idset_copy_flags.isra.2+0x88>
   26230:	48 89 ea             	mov    %rbp,%rdx
   26233:	4c 89 fe             	mov    %r15,%rsi
   26236:	48 89 c7             	mov    %rax,%rdi
   26239:	e8 d2 a0 fe ff       	callq  10310 <memcpy@plt>
   2623e:	44 89 73 10          	mov    %r14d,0x10(%rbx)
   26242:	48 89 43 08          	mov    %rax,0x8(%rbx)
   26246:	49 8b 45 00          	mov    0x0(%r13),%rax
   2624a:	44 89 63 14          	mov    %r12d,0x14(%rbx)
   2624e:	48 89 03             	mov    %rax,(%rbx)
   26251:	48 83 c4 08          	add    $0x8,%rsp
   26255:	48 89 d8             	mov    %rbx,%rax
   26258:	5b                   	pop    %rbx
   26259:	5d                   	pop    %rbp
   2625a:	41 5c                	pop    %r12
   2625c:	41 5d                	pop    %r13
   2625e:	41 5e                	pop    %r14
   26260:	41 5f                	pop    %r15
   26262:	c3                   	retq   
   26263:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26268:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   2626f:	00 
   26270:	48 89 df             	mov    %rbx,%rdi
   26273:	44 89 73 10          	mov    %r14d,0x10(%rbx)
   26277:	44 89 63 14          	mov    %r12d,0x14(%rbx)
   2627b:	31 db                	xor    %ebx,%ebx
   2627d:	e8 1e ff ff ff       	callq  261a0 <idset_destroy>
   26282:	eb cd                	jmp    26251 <idset_copy_flags.isra.2+0x71>

0000000000026284 <.annobin_idset_copy.start>:
   26284:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2628b:	00 00 00 00 
   2628f:	90                   	nop

0000000000026290 <idset_copy>:
   26290:	f3 0f 1e fa          	endbr64 
   26294:	48 85 ff             	test   %rdi,%rdi
   26297:	74 0f                	je     262a8 <idset_copy+0x18>
   26299:	8b 57 18             	mov    0x18(%rdi),%edx
   2629c:	48 8d 77 08          	lea    0x8(%rdi),%rsi
   262a0:	e9 3b ff ff ff       	jmpq   261e0 <idset_copy_flags.isra.2>
   262a5:	0f 1f 00             	nopl   (%rax)
   262a8:	48 83 ec 08          	sub    $0x8,%rsp
   262ac:	e8 5f 98 fe ff       	callq  fb10 <__errno_location@plt>
   262b1:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   262b7:	31 c0                	xor    %eax,%eax
   262b9:	48 83 c4 08          	add    $0x8,%rsp
   262bd:	c3                   	retq   

00000000000262be <.annobin_idset_copy.end>:
   262be:	66 90                	xchg   %ax,%ax

00000000000262c0 <idset_test>:
   262c0:	f3 0f 1e fa          	endbr64 
   262c4:	48 85 ff             	test   %rdi,%rdi
   262c7:	74 37                	je     26300 <idset_test+0x40>
   262c9:	8d 56 02             	lea    0x2(%rsi),%edx
   262cc:	31 c0                	xor    %eax,%eax
   262ce:	83 fa 01             	cmp    $0x1,%edx
   262d1:	76 05                	jbe    262d8 <idset_test+0x18>
   262d3:	39 77 14             	cmp    %esi,0x14(%rdi)
   262d6:	77 08                	ja     262e0 <idset_test+0x20>
   262d8:	c3                   	retq   
   262d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   262e0:	53                   	push   %rbx
   262e1:	48 89 f8             	mov    %rdi,%rax
   262e4:	89 f3                	mov    %esi,%ebx
   262e6:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   262ea:	48 8b 70 10          	mov    0x10(%rax),%rsi
   262ee:	89 da                	mov    %ebx,%edx
   262f0:	e8 0b f6 ff ff       	callq  25900 <vebsucc>
   262f5:	39 c3                	cmp    %eax,%ebx
   262f7:	5b                   	pop    %rbx
   262f8:	0f 94 c0             	sete   %al
   262fb:	c3                   	retq   
   262fc:	0f 1f 40 00          	nopl   0x0(%rax)
   26300:	31 c0                	xor    %eax,%eax
   26302:	c3                   	retq   

0000000000026303 <.annobin_idset_put.start>:
   26303:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2630a:	00 00 00 00 
   2630e:	66 90                	xchg   %ax,%ax

0000000000026310 <idset_put>:
   26310:	55                   	push   %rbp
   26311:	89 f5                	mov    %esi,%ebp
   26313:	53                   	push   %rbx
   26314:	48 89 fb             	mov    %rdi,%rbx
   26317:	48 83 ec 08          	sub    $0x8,%rsp
   2631b:	e8 a0 ff ff ff       	callq  262c0 <idset_test>
   26320:	84 c0                	test   %al,%al
   26322:	75 04                	jne    26328 <idset_put+0x18>
   26324:	48 83 03 01          	addq   $0x1,(%rbx)
   26328:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   2632c:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   26330:	48 83 c4 08          	add    $0x8,%rsp
   26334:	89 ea                	mov    %ebp,%edx
   26336:	5b                   	pop    %rbx
   26337:	5d                   	pop    %rbp
   26338:	e9 f3 f0 ff ff       	jmpq   25430 <vebput>

000000000002633d <.annobin_idset_put.end>:
   2633d:	0f 1f 00             	nopl   (%rax)

0000000000026340 <idset_set>:
   26340:	f3 0f 1e fa          	endbr64 
   26344:	55                   	push   %rbp
   26345:	53                   	push   %rbx
   26346:	48 83 ec 08          	sub    $0x8,%rsp
   2634a:	48 85 ff             	test   %rdi,%rdi
   2634d:	74 31                	je     26380 <idset_set+0x40>
   2634f:	8d 46 02             	lea    0x2(%rsi),%eax
   26352:	89 f5                	mov    %esi,%ebp
   26354:	83 f8 01             	cmp    $0x1,%eax
   26357:	76 27                	jbe    26380 <idset_set+0x40>
   26359:	8d 76 01             	lea    0x1(%rsi),%esi
   2635c:	48 89 fb             	mov    %rdi,%rbx
   2635f:	e8 ac fc ff ff       	callq  26010 <idset_grow>
   26364:	85 c0                	test   %eax,%eax
   26366:	78 38                	js     263a0 <idset_set+0x60>
   26368:	89 ee                	mov    %ebp,%esi
   2636a:	48 89 df             	mov    %rbx,%rdi
   2636d:	e8 9e ff ff ff       	callq  26310 <idset_put>
   26372:	31 c0                	xor    %eax,%eax
   26374:	48 83 c4 08          	add    $0x8,%rsp
   26378:	5b                   	pop    %rbx
   26379:	5d                   	pop    %rbp
   2637a:	c3                   	retq   
   2637b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26380:	e8 8b 97 fe ff       	callq  fb10 <__errno_location@plt>
   26385:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2638b:	48 83 c4 08          	add    $0x8,%rsp
   2638f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26394:	5b                   	pop    %rbx
   26395:	5d                   	pop    %rbp
   26396:	c3                   	retq   
   26397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2639e:	00 00 
   263a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   263a5:	eb cd                	jmp    26374 <idset_set+0x34>

00000000000263a7 <.annobin_idset_range_set.start>:
   263a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   263ae:	00 00 

00000000000263b0 <idset_range_set>:
   263b0:	f3 0f 1e fa          	endbr64 
   263b4:	41 54                	push   %r12
   263b6:	55                   	push   %rbp
   263b7:	53                   	push   %rbx
   263b8:	48 85 ff             	test   %rdi,%rdi
   263bb:	74 53                	je     26410 <idset_range_set+0x60>
   263bd:	8d 46 02             	lea    0x2(%rsi),%eax
   263c0:	89 f3                	mov    %esi,%ebx
   263c2:	83 f8 01             	cmp    $0x1,%eax
   263c5:	76 49                	jbe    26410 <idset_range_set+0x60>
   263c7:	8d 42 02             	lea    0x2(%rdx),%eax
   263ca:	89 d5                	mov    %edx,%ebp
   263cc:	83 f8 01             	cmp    $0x1,%eax
   263cf:	76 3f                	jbe    26410 <idset_range_set+0x60>
   263d1:	49 89 fc             	mov    %rdi,%r12
   263d4:	39 d6                	cmp    %edx,%esi
   263d6:	76 04                	jbe    263dc <idset_range_set+0x2c>
   263d8:	89 d3                	mov    %edx,%ebx
   263da:	89 f5                	mov    %esi,%ebp
   263dc:	8d 75 01             	lea    0x1(%rbp),%esi
   263df:	4c 89 e7             	mov    %r12,%rdi
   263e2:	e8 29 fc ff ff       	callq  26010 <idset_grow>
   263e7:	89 c2                	mov    %eax,%edx
   263e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   263ee:	85 d2                	test   %edx,%edx
   263f0:	78 19                	js     2640b <idset_range_set+0x5b>
   263f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   263f8:	89 de                	mov    %ebx,%esi
   263fa:	4c 89 e7             	mov    %r12,%rdi
   263fd:	83 c3 01             	add    $0x1,%ebx
   26400:	e8 0b ff ff ff       	callq  26310 <idset_put>
   26405:	39 eb                	cmp    %ebp,%ebx
   26407:	76 ef                	jbe    263f8 <idset_range_set+0x48>
   26409:	31 c0                	xor    %eax,%eax
   2640b:	5b                   	pop    %rbx
   2640c:	5d                   	pop    %rbp
   2640d:	41 5c                	pop    %r12
   2640f:	c3                   	retq   
   26410:	e8 fb 96 fe ff       	callq  fb10 <__errno_location@plt>
   26415:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2641b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26420:	5b                   	pop    %rbx
   26421:	5d                   	pop    %rbp
   26422:	41 5c                	pop    %r12
   26424:	c3                   	retq   

0000000000026425 <.annobin_idset_del.start>:
   26425:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2642c:	00 00 00 00 

0000000000026430 <idset_del>:
   26430:	55                   	push   %rbp
   26431:	89 f5                	mov    %esi,%ebp
   26433:	53                   	push   %rbx
   26434:	48 89 fb             	mov    %rdi,%rbx
   26437:	48 83 ec 08          	sub    $0x8,%rsp
   2643b:	e8 80 fe ff ff       	callq  262c0 <idset_test>
   26440:	84 c0                	test   %al,%al
   26442:	74 04                	je     26448 <idset_del+0x18>
   26444:	48 83 2b 01          	subq   $0x1,(%rbx)
   26448:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   2644c:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   26450:	48 83 c4 08          	add    $0x8,%rsp
   26454:	89 ea                	mov    %ebp,%edx
   26456:	5b                   	pop    %rbx
   26457:	5d                   	pop    %rbp
   26458:	e9 23 f2 ff ff       	jmpq   25680 <vebdel>

000000000002645d <.annobin_idset_clear.start>:
   2645d:	0f 1f 00             	nopl   (%rax)

0000000000026460 <idset_clear>:
   26460:	f3 0f 1e fa          	endbr64 
   26464:	48 83 ec 08          	sub    $0x8,%rsp
   26468:	48 85 ff             	test   %rdi,%rdi
   2646b:	74 1b                	je     26488 <idset_clear+0x28>
   2646d:	8d 46 02             	lea    0x2(%rsi),%eax
   26470:	83 f8 01             	cmp    $0x1,%eax
   26473:	76 13                	jbe    26488 <idset_clear+0x28>
   26475:	e8 b6 ff ff ff       	callq  26430 <idset_del>
   2647a:	31 c0                	xor    %eax,%eax
   2647c:	48 83 c4 08          	add    $0x8,%rsp
   26480:	c3                   	retq   
   26481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26488:	e8 83 96 fe ff       	callq  fb10 <__errno_location@plt>
   2648d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   26493:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26498:	48 83 c4 08          	add    $0x8,%rsp
   2649c:	c3                   	retq   

000000000002649d <.annobin_idset_clear.end>:
   2649d:	0f 1f 00             	nopl   (%rax)

00000000000264a0 <idset_range_clear>:
   264a0:	f3 0f 1e fa          	endbr64 
   264a4:	41 54                	push   %r12
   264a6:	55                   	push   %rbp
   264a7:	53                   	push   %rbx
   264a8:	48 85 ff             	test   %rdi,%rdi
   264ab:	74 53                	je     26500 <idset_range_clear+0x60>
   264ad:	8d 46 02             	lea    0x2(%rsi),%eax
   264b0:	89 f3                	mov    %esi,%ebx
   264b2:	83 f8 01             	cmp    $0x1,%eax
   264b5:	76 49                	jbe    26500 <idset_range_clear+0x60>
   264b7:	8d 42 02             	lea    0x2(%rdx),%eax
   264ba:	41 89 d4             	mov    %edx,%r12d
   264bd:	83 f8 01             	cmp    $0x1,%eax
   264c0:	76 3e                	jbe    26500 <idset_range_clear+0x60>
   264c2:	48 89 fd             	mov    %rdi,%rbp
   264c5:	39 d6                	cmp    %edx,%esi
   264c7:	76 05                	jbe    264ce <idset_range_clear+0x2e>
   264c9:	89 d3                	mov    %edx,%ebx
   264cb:	41 89 f4             	mov    %esi,%r12d
   264ce:	3b 5d 14             	cmp    0x14(%rbp),%ebx
   264d1:	72 12                	jb     264e5 <idset_range_clear+0x45>
   264d3:	5b                   	pop    %rbx
   264d4:	31 c0                	xor    %eax,%eax
   264d6:	5d                   	pop    %rbp
   264d7:	41 5c                	pop    %r12
   264d9:	c3                   	retq   
   264da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   264e0:	39 5d 14             	cmp    %ebx,0x14(%rbp)
   264e3:	76 ee                	jbe    264d3 <idset_range_clear+0x33>
   264e5:	89 de                	mov    %ebx,%esi
   264e7:	48 89 ef             	mov    %rbp,%rdi
   264ea:	83 c3 01             	add    $0x1,%ebx
   264ed:	e8 3e ff ff ff       	callq  26430 <idset_del>
   264f2:	41 39 dc             	cmp    %ebx,%r12d
   264f5:	73 e9                	jae    264e0 <idset_range_clear+0x40>
   264f7:	eb da                	jmp    264d3 <idset_range_clear+0x33>
   264f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26500:	e8 0b 96 fe ff       	callq  fb10 <__errno_location@plt>
   26505:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2650b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26510:	5b                   	pop    %rbx
   26511:	5d                   	pop    %rbp
   26512:	41 5c                	pop    %r12
   26514:	c3                   	retq   

0000000000026515 <.annobin_idset_first.start>:
   26515:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2651c:	00 00 00 00 

0000000000026520 <idset_first>:
   26520:	f3 0f 1e fa          	endbr64 
   26524:	48 85 ff             	test   %rdi,%rdi
   26527:	74 27                	je     26550 <idset_first+0x30>
   26529:	53                   	push   %rbx
   2652a:	48 89 fb             	mov    %rdi,%rbx
   2652d:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   26531:	31 d2                	xor    %edx,%edx
   26533:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   26537:	e8 c4 f3 ff ff       	callq  25900 <vebsucc>
   2653c:	3b 43 14             	cmp    0x14(%rbx),%eax
   2653f:	74 07                	je     26548 <idset_first+0x28>
   26541:	5b                   	pop    %rbx
   26542:	c3                   	retq   
   26543:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26548:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2654d:	5b                   	pop    %rbx
   2654e:	c3                   	retq   
   2654f:	90                   	nop
   26550:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   26555:	c3                   	retq   

0000000000026556 <.annobin_idset_first.end>:
   26556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2655d:	00 00 00 

0000000000026560 <idset_next>:
   26560:	f3 0f 1e fa          	endbr64 
   26564:	48 85 ff             	test   %rdi,%rdi
   26567:	74 27                	je     26590 <idset_next+0x30>
   26569:	53                   	push   %rbx
   2656a:	48 89 fb             	mov    %rdi,%rbx
   2656d:	8d 56 01             	lea    0x1(%rsi),%edx
   26570:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   26574:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   26578:	e8 83 f3 ff ff       	callq  25900 <vebsucc>
   2657d:	3b 43 14             	cmp    0x14(%rbx),%eax
   26580:	74 06                	je     26588 <idset_next+0x28>
   26582:	5b                   	pop    %rbx
   26583:	c3                   	retq   
   26584:	0f 1f 40 00          	nopl   0x0(%rax)
   26588:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2658d:	5b                   	pop    %rbx
   2658e:	c3                   	retq   
   2658f:	90                   	nop
   26590:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   26595:	c3                   	retq   

0000000000026596 <.annobin_idset_last.start>:
   26596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2659d:	00 00 00 

00000000000265a0 <idset_last>:
   265a0:	f3 0f 1e fa          	endbr64 
   265a4:	48 85 ff             	test   %rdi,%rdi
   265a7:	74 37                	je     265e0 <idset_last+0x40>
   265a9:	53                   	push   %rbx
   265aa:	48 89 fb             	mov    %rdi,%rbx
   265ad:	8b 47 14             	mov    0x14(%rdi),%eax
   265b0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   265b4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   265b8:	8d 50 ff             	lea    -0x1(%rax),%edx
   265bb:	e8 30 f5 ff ff       	callq  25af0 <vebpred>
   265c0:	39 43 14             	cmp    %eax,0x14(%rbx)
   265c3:	74 0b                	je     265d0 <idset_last+0x30>
   265c5:	5b                   	pop    %rbx
   265c6:	c3                   	retq   
   265c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   265ce:	00 00 
   265d0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   265d5:	5b                   	pop    %rbx
   265d6:	c3                   	retq   
   265d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   265de:	00 00 
   265e0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   265e5:	c3                   	retq   

00000000000265e6 <.annobin_idset_count.start>:
   265e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   265ed:	00 00 00 

00000000000265f0 <idset_count>:
   265f0:	f3 0f 1e fa          	endbr64 
   265f4:	48 85 ff             	test   %rdi,%rdi
   265f7:	74 07                	je     26600 <idset_count+0x10>
   265f9:	48 8b 07             	mov    (%rdi),%rax
   265fc:	c3                   	retq   
   265fd:	0f 1f 00             	nopl   (%rax)
   26600:	31 c0                	xor    %eax,%eax
   26602:	c3                   	retq   

0000000000026603 <.annobin_idset_count.end>:
   26603:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2660a:	00 00 00 00 
   2660e:	66 90                	xchg   %ax,%ax

0000000000026610 <idset_equal>:
   26610:	f3 0f 1e fa          	endbr64 
   26614:	48 85 ff             	test   %rdi,%rdi
   26617:	74 2f                	je     26648 <idset_equal+0x38>
   26619:	48 85 f6             	test   %rsi,%rsi
   2661c:	74 2a                	je     26648 <idset_equal+0x38>
   2661e:	41 54                	push   %r12
   26620:	49 89 f4             	mov    %rsi,%r12
   26623:	55                   	push   %rbp
   26624:	48 89 fd             	mov    %rdi,%rbp
   26627:	53                   	push   %rbx
   26628:	e8 c3 ff ff ff       	callq  265f0 <idset_count>
   2662d:	4c 89 e7             	mov    %r12,%rdi
   26630:	48 89 c3             	mov    %rax,%rbx
   26633:	e8 b8 ff ff ff       	callq  265f0 <idset_count>
   26638:	48 39 c3             	cmp    %rax,%rbx
   2663b:	74 13                	je     26650 <idset_equal+0x40>
   2663d:	31 c0                	xor    %eax,%eax
   2663f:	5b                   	pop    %rbx
   26640:	5d                   	pop    %rbp
   26641:	41 5c                	pop    %r12
   26643:	c3                   	retq   
   26644:	0f 1f 40 00          	nopl   0x0(%rax)
   26648:	31 c0                	xor    %eax,%eax
   2664a:	c3                   	retq   
   2664b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26650:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   26654:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   26658:	31 d2                	xor    %edx,%edx
   2665a:	e8 a1 f2 ff ff       	callq  25900 <vebsucc>
   2665f:	89 c3                	mov    %eax,%ebx
   26661:	3b 45 14             	cmp    0x14(%rbp),%eax
   26664:	72 21                	jb     26687 <idset_equal+0x77>
   26666:	eb 38                	jmp    266a0 <idset_equal+0x90>
   26668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2666f:	00 
   26670:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   26674:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   26678:	8d 53 01             	lea    0x1(%rbx),%edx
   2667b:	e8 80 f2 ff ff       	callq  25900 <vebsucc>
   26680:	89 c3                	mov    %eax,%ebx
   26682:	39 45 14             	cmp    %eax,0x14(%rbp)
   26685:	76 19                	jbe    266a0 <idset_equal+0x90>
   26687:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   2668c:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   26691:	89 da                	mov    %ebx,%edx
   26693:	e8 68 f2 ff ff       	callq  25900 <vebsucc>
   26698:	39 d8                	cmp    %ebx,%eax
   2669a:	74 d4                	je     26670 <idset_equal+0x60>
   2669c:	eb 9f                	jmp    2663d <idset_equal+0x2d>
   2669e:	66 90                	xchg   %ax,%ax
   266a0:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   266a5:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   266aa:	31 d2                	xor    %edx,%edx
   266ac:	e8 4f f2 ff ff       	callq  25900 <vebsucc>
   266b1:	89 c3                	mov    %eax,%ebx
   266b3:	41 3b 44 24 14       	cmp    0x14(%r12),%eax
   266b8:	72 21                	jb     266db <idset_equal+0xcb>
   266ba:	eb 3c                	jmp    266f8 <idset_equal+0xe8>
   266bc:	0f 1f 40 00          	nopl   0x0(%rax)
   266c0:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   266c5:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   266ca:	8d 53 01             	lea    0x1(%rbx),%edx
   266cd:	e8 2e f2 ff ff       	callq  25900 <vebsucc>
   266d2:	89 c3                	mov    %eax,%ebx
   266d4:	41 39 44 24 14       	cmp    %eax,0x14(%r12)
   266d9:	76 1d                	jbe    266f8 <idset_equal+0xe8>
   266db:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   266df:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   266e3:	89 da                	mov    %ebx,%edx
   266e5:	e8 16 f2 ff ff       	callq  25900 <vebsucc>
   266ea:	39 d8                	cmp    %ebx,%eax
   266ec:	74 d2                	je     266c0 <idset_equal+0xb0>
   266ee:	e9 4a ff ff ff       	jmpq   2663d <idset_equal+0x2d>
   266f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   266f8:	b8 01 00 00 00       	mov    $0x1,%eax
   266fd:	e9 3d ff ff ff       	jmpq   2663f <idset_equal+0x2f>

0000000000026702 <.annobin_idset_equal.end>:
   26702:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   26709:	00 00 00 00 
   2670d:	0f 1f 00             	nopl   (%rax)

0000000000026710 <idset_has_intersection>:
   26710:	f3 0f 1e fa          	endbr64 
   26714:	48 85 ff             	test   %rdi,%rdi
   26717:	74 05                	je     2671e <idset_has_intersection+0xe>
   26719:	48 85 f6             	test   %rsi,%rsi
   2671c:	75 0a                	jne    26728 <idset_has_intersection+0x18>
   2671e:	31 c0                	xor    %eax,%eax
   26720:	c3                   	retq   
   26721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26728:	41 54                	push   %r12
   2672a:	49 89 f4             	mov    %rsi,%r12
   2672d:	55                   	push   %rbp
   2672e:	48 89 fd             	mov    %rdi,%rbp
   26731:	48 89 f7             	mov    %rsi,%rdi
   26734:	53                   	push   %rbx
   26735:	e8 e6 fd ff ff       	callq  26520 <idset_first>
   2673a:	89 c3                	mov    %eax,%ebx
   2673c:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2673f:	75 18                	jne    26759 <idset_has_intersection+0x49>
   26741:	eb 2d                	jmp    26770 <idset_has_intersection+0x60>
   26743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26748:	89 de                	mov    %ebx,%esi
   2674a:	4c 89 e7             	mov    %r12,%rdi
   2674d:	e8 0e fe ff ff       	callq  26560 <idset_next>
   26752:	89 c3                	mov    %eax,%ebx
   26754:	83 f8 fe             	cmp    $0xfffffffe,%eax
   26757:	74 17                	je     26770 <idset_has_intersection+0x60>
   26759:	89 de                	mov    %ebx,%esi
   2675b:	48 89 ef             	mov    %rbp,%rdi
   2675e:	e8 5d fb ff ff       	callq  262c0 <idset_test>
   26763:	84 c0                	test   %al,%al
   26765:	74 e1                	je     26748 <idset_has_intersection+0x38>
   26767:	5b                   	pop    %rbx
   26768:	5d                   	pop    %rbp
   26769:	41 5c                	pop    %r12
   2676b:	c3                   	retq   
   2676c:	0f 1f 40 00          	nopl   0x0(%rax)
   26770:	5b                   	pop    %rbx
   26771:	31 c0                	xor    %eax,%eax
   26773:	5d                   	pop    %rbp
   26774:	41 5c                	pop    %r12
   26776:	c3                   	retq   

0000000000026777 <.annobin_idset_add.start>:
   26777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2677e:	00 00 

0000000000026780 <idset_add>:
   26780:	f3 0f 1e fa          	endbr64 
   26784:	41 54                	push   %r12
   26786:	55                   	push   %rbp
   26787:	53                   	push   %rbx
   26788:	48 85 ff             	test   %rdi,%rdi
   2678b:	74 5a                	je     267e7 <idset_add+0x67>
   2678d:	48 89 f5             	mov    %rsi,%rbp
   26790:	48 85 f6             	test   %rsi,%rsi
   26793:	74 4b                	je     267e0 <idset_add+0x60>
   26795:	49 89 fc             	mov    %rdi,%r12
   26798:	48 89 f7             	mov    %rsi,%rdi
   2679b:	e8 80 fd ff ff       	callq  26520 <idset_first>
   267a0:	89 c3                	mov    %eax,%ebx
   267a2:	83 f8 fe             	cmp    $0xfffffffe,%eax
   267a5:	75 1a                	jne    267c1 <idset_add+0x41>
   267a7:	eb 37                	jmp    267e0 <idset_add+0x60>
   267a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   267b0:	89 de                	mov    %ebx,%esi
   267b2:	48 89 ef             	mov    %rbp,%rdi
   267b5:	e8 a6 fd ff ff       	callq  26560 <idset_next>
   267ba:	89 c3                	mov    %eax,%ebx
   267bc:	83 f8 fe             	cmp    $0xfffffffe,%eax
   267bf:	74 1f                	je     267e0 <idset_add+0x60>
   267c1:	89 de                	mov    %ebx,%esi
   267c3:	4c 89 e7             	mov    %r12,%rdi
   267c6:	e8 75 fb ff ff       	callq  26340 <idset_set>
   267cb:	85 c0                	test   %eax,%eax
   267cd:	79 e1                	jns    267b0 <idset_add+0x30>
   267cf:	5b                   	pop    %rbx
   267d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   267d5:	5d                   	pop    %rbp
   267d6:	41 5c                	pop    %r12
   267d8:	c3                   	retq   
   267d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   267e0:	31 c0                	xor    %eax,%eax
   267e2:	5b                   	pop    %rbx
   267e3:	5d                   	pop    %rbp
   267e4:	41 5c                	pop    %r12
   267e6:	c3                   	retq   
   267e7:	e8 24 93 fe ff       	callq  fb10 <__errno_location@plt>
   267ec:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   267f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   267f7:	eb e9                	jmp    267e2 <idset_add+0x62>

00000000000267f9 <.annobin_idset_add.end>:
   267f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000026800 <idset_union>:
   26800:	f3 0f 1e fa          	endbr64 
   26804:	55                   	push   %rbp
   26805:	53                   	push   %rbx
   26806:	48 83 ec 08          	sub    $0x8,%rsp
   2680a:	48 85 ff             	test   %rdi,%rdi
   2680d:	74 39                	je     26848 <idset_union+0x48>
   2680f:	48 89 f5             	mov    %rsi,%rbp
   26812:	ba 01 00 00 00       	mov    $0x1,%edx
   26817:	48 8d 77 08          	lea    0x8(%rdi),%rsi
   2681b:	e8 c0 f9 ff ff       	callq  261e0 <idset_copy_flags.isra.2>
   26820:	48 89 c3             	mov    %rax,%rbx
   26823:	48 85 c0             	test   %rax,%rax
   26826:	74 0f                	je     26837 <idset_union+0x37>
   26828:	48 89 ee             	mov    %rbp,%rsi
   2682b:	48 89 c7             	mov    %rax,%rdi
   2682e:	e8 4d ff ff ff       	callq  26780 <idset_add>
   26833:	85 c0                	test   %eax,%eax
   26835:	78 29                	js     26860 <idset_union+0x60>
   26837:	48 83 c4 08          	add    $0x8,%rsp
   2683b:	48 89 d8             	mov    %rbx,%rax
   2683e:	5b                   	pop    %rbx
   2683f:	5d                   	pop    %rbp
   26840:	c3                   	retq   
   26841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26848:	e8 c3 92 fe ff       	callq  fb10 <__errno_location@plt>
   2684d:	31 db                	xor    %ebx,%ebx
   2684f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   26855:	48 83 c4 08          	add    $0x8,%rsp
   26859:	48 89 d8             	mov    %rbx,%rax
   2685c:	5b                   	pop    %rbx
   2685d:	5d                   	pop    %rbp
   2685e:	c3                   	retq   
   2685f:	90                   	nop
   26860:	48 89 df             	mov    %rbx,%rdi
   26863:	31 db                	xor    %ebx,%ebx
   26865:	e8 36 f9 ff ff       	callq  261a0 <idset_destroy>
   2686a:	eb cb                	jmp    26837 <idset_union+0x37>

000000000002686c <.annobin_idset_subtract.start>:
   2686c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000026870 <idset_subtract>:
   26870:	f3 0f 1e fa          	endbr64 
   26874:	41 54                	push   %r12
   26876:	55                   	push   %rbp
   26877:	53                   	push   %rbx
   26878:	48 85 ff             	test   %rdi,%rdi
   2687b:	74 5a                	je     268d7 <idset_subtract+0x67>
   2687d:	48 89 f5             	mov    %rsi,%rbp
   26880:	48 85 f6             	test   %rsi,%rsi
   26883:	74 4b                	je     268d0 <idset_subtract+0x60>
   26885:	49 89 fc             	mov    %rdi,%r12
   26888:	48 89 f7             	mov    %rsi,%rdi
   2688b:	e8 90 fc ff ff       	callq  26520 <idset_first>
   26890:	89 c3                	mov    %eax,%ebx
   26892:	83 f8 fe             	cmp    $0xfffffffe,%eax
   26895:	75 1a                	jne    268b1 <idset_subtract+0x41>
   26897:	eb 37                	jmp    268d0 <idset_subtract+0x60>
   26899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   268a0:	89 de                	mov    %ebx,%esi
   268a2:	48 89 ef             	mov    %rbp,%rdi
   268a5:	e8 b6 fc ff ff       	callq  26560 <idset_next>
   268aa:	89 c3                	mov    %eax,%ebx
   268ac:	83 f8 fe             	cmp    $0xfffffffe,%eax
   268af:	74 1f                	je     268d0 <idset_subtract+0x60>
   268b1:	89 de                	mov    %ebx,%esi
   268b3:	4c 89 e7             	mov    %r12,%rdi
   268b6:	e8 a5 fb ff ff       	callq  26460 <idset_clear>
   268bb:	85 c0                	test   %eax,%eax
   268bd:	79 e1                	jns    268a0 <idset_subtract+0x30>
   268bf:	5b                   	pop    %rbx
   268c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   268c5:	5d                   	pop    %rbp
   268c6:	41 5c                	pop    %r12
   268c8:	c3                   	retq   
   268c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   268d0:	31 c0                	xor    %eax,%eax
   268d2:	5b                   	pop    %rbx
   268d3:	5d                   	pop    %rbp
   268d4:	41 5c                	pop    %r12
   268d6:	c3                   	retq   
   268d7:	e8 34 92 fe ff       	callq  fb10 <__errno_location@plt>
   268dc:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   268e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   268e7:	eb e9                	jmp    268d2 <idset_subtract+0x62>

00000000000268e9 <.annobin_idset_difference.start>:
   268e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000268f0 <idset_difference>:
   268f0:	f3 0f 1e fa          	endbr64 
   268f4:	55                   	push   %rbp
   268f5:	53                   	push   %rbx
   268f6:	48 83 ec 08          	sub    $0x8,%rsp
   268fa:	48 85 ff             	test   %rdi,%rdi
   268fd:	74 31                	je     26930 <idset_difference+0x40>
   268ff:	48 89 f5             	mov    %rsi,%rbp
   26902:	e8 89 f9 ff ff       	callq  26290 <idset_copy>
   26907:	48 89 c3             	mov    %rax,%rbx
   2690a:	48 85 c0             	test   %rax,%rax
   2690d:	74 0f                	je     2691e <idset_difference+0x2e>
   2690f:	48 89 ee             	mov    %rbp,%rsi
   26912:	48 89 c7             	mov    %rax,%rdi
   26915:	e8 56 ff ff ff       	callq  26870 <idset_subtract>
   2691a:	85 c0                	test   %eax,%eax
   2691c:	78 32                	js     26950 <idset_difference+0x60>
   2691e:	48 83 c4 08          	add    $0x8,%rsp
   26922:	48 89 d8             	mov    %rbx,%rax
   26925:	5b                   	pop    %rbx
   26926:	5d                   	pop    %rbp
   26927:	c3                   	retq   
   26928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2692f:	00 
   26930:	e8 db 91 fe ff       	callq  fb10 <__errno_location@plt>
   26935:	31 db                	xor    %ebx,%ebx
   26937:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2693d:	48 83 c4 08          	add    $0x8,%rsp
   26941:	48 89 d8             	mov    %rbx,%rax
   26944:	5b                   	pop    %rbx
   26945:	5d                   	pop    %rbp
   26946:	c3                   	retq   
   26947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2694e:	00 00 
   26950:	48 89 df             	mov    %rbx,%rdi
   26953:	31 db                	xor    %ebx,%ebx
   26955:	e8 46 f8 ff ff       	callq  261a0 <idset_destroy>
   2695a:	eb c2                	jmp    2691e <idset_difference+0x2e>

000000000002695c <.annobin_idset_difference.end>:
   2695c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000026960 <idset_intersect>:
   26960:	f3 0f 1e fa          	endbr64 
   26964:	41 55                	push   %r13
   26966:	41 54                	push   %r12
   26968:	55                   	push   %rbp
   26969:	53                   	push   %rbx
   2696a:	48 83 ec 08          	sub    $0x8,%rsp
   2696e:	48 85 ff             	test   %rdi,%rdi
   26971:	74 6d                	je     269e0 <idset_intersect+0x80>
   26973:	49 89 f4             	mov    %rsi,%r12
   26976:	48 85 f6             	test   %rsi,%rsi
   26979:	74 65                	je     269e0 <idset_intersect+0x80>
   2697b:	48 89 fd             	mov    %rdi,%rbp
   2697e:	e8 0d f9 ff ff       	callq  26290 <idset_copy>
   26983:	49 89 c5             	mov    %rax,%r13
   26986:	48 85 c0             	test   %rax,%rax
   26989:	74 42                	je     269cd <idset_intersect+0x6d>
   2698b:	48 89 ef             	mov    %rbp,%rdi
   2698e:	e8 8d fb ff ff       	callq  26520 <idset_first>
   26993:	89 c3                	mov    %eax,%ebx
   26995:	83 f8 fe             	cmp    $0xfffffffe,%eax
   26998:	74 33                	je     269cd <idset_intersect+0x6d>
   2699a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   269a0:	89 de                	mov    %ebx,%esi
   269a2:	4c 89 e7             	mov    %r12,%rdi
   269a5:	e8 16 f9 ff ff       	callq  262c0 <idset_test>
   269aa:	84 c0                	test   %al,%al
   269ac:	75 0e                	jne    269bc <idset_intersect+0x5c>
   269ae:	89 de                	mov    %ebx,%esi
   269b0:	4c 89 ef             	mov    %r13,%rdi
   269b3:	e8 a8 fa ff ff       	callq  26460 <idset_clear>
   269b8:	85 c0                	test   %eax,%eax
   269ba:	78 44                	js     26a00 <idset_intersect+0xa0>
   269bc:	89 de                	mov    %ebx,%esi
   269be:	48 89 ef             	mov    %rbp,%rdi
   269c1:	e8 9a fb ff ff       	callq  26560 <idset_next>
   269c6:	89 c3                	mov    %eax,%ebx
   269c8:	83 f8 fe             	cmp    $0xfffffffe,%eax
   269cb:	75 d3                	jne    269a0 <idset_intersect+0x40>
   269cd:	48 83 c4 08          	add    $0x8,%rsp
   269d1:	4c 89 e8             	mov    %r13,%rax
   269d4:	5b                   	pop    %rbx
   269d5:	5d                   	pop    %rbp
   269d6:	41 5c                	pop    %r12
   269d8:	41 5d                	pop    %r13
   269da:	c3                   	retq   
   269db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   269e0:	e8 2b 91 fe ff       	callq  fb10 <__errno_location@plt>
   269e5:	45 31 ed             	xor    %r13d,%r13d
   269e8:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   269ee:	48 83 c4 08          	add    $0x8,%rsp
   269f2:	4c 89 e8             	mov    %r13,%rax
   269f5:	5b                   	pop    %rbx
   269f6:	5d                   	pop    %rbp
   269f7:	41 5c                	pop    %r12
   269f9:	41 5d                	pop    %r13
   269fb:	c3                   	retq   
   269fc:	0f 1f 40 00          	nopl   0x0(%rax)
   26a00:	4c 89 ef             	mov    %r13,%rdi
   26a03:	45 31 ed             	xor    %r13d,%r13d
   26a06:	e8 95 f7 ff ff       	callq  261a0 <idset_destroy>
   26a0b:	48 83 c4 08          	add    $0x8,%rsp
   26a0f:	4c 89 e8             	mov    %r13,%rax
   26a12:	5b                   	pop    %rbx
   26a13:	5d                   	pop    %rbp
   26a14:	41 5c                	pop    %r12
   26a16:	41 5d                	pop    %r13
   26a18:	c3                   	retq   

0000000000026a19 <.annobin_idset.c_end>:
   26a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000026a20 <strtoul_check>:
   26a20:	41 57                	push   %r15
   26a22:	41 56                	push   %r14
   26a24:	41 55                	push   %r13
   26a26:	49 89 d5             	mov    %rdx,%r13
   26a29:	41 54                	push   %r12
   26a2b:	49 89 f4             	mov    %rsi,%r12
   26a2e:	55                   	push   %rbp
   26a2f:	53                   	push   %rbx
   26a30:	48 89 fb             	mov    %rdi,%rbx
   26a33:	48 83 ec 18          	sub    $0x18,%rsp
   26a37:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26a3e:	00 00 
   26a40:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   26a45:	31 c0                	xor    %eax,%eax
   26a47:	e8 c4 90 fe ff       	callq  fb10 <__errno_location@plt>
   26a4c:	48 89 e6             	mov    %rsp,%rsi
   26a4f:	ba 0a 00 00 00       	mov    $0xa,%edx
   26a54:	48 89 df             	mov    %rbx,%rdi
   26a57:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   26a5d:	48 89 c5             	mov    %rax,%rbp
   26a60:	e8 eb 9d fe ff       	callq  10850 <strtoul@plt>
   26a65:	8b 6d 00             	mov    0x0(%rbp),%ebp
   26a68:	85 ed                	test   %ebp,%ebp
   26a6a:	75 64                	jne    26ad0 <strtoul_check+0xb0>
   26a6c:	4c 8b 3c 24          	mov    (%rsp),%r15
   26a70:	49 39 df             	cmp    %rbx,%r15
   26a73:	74 5b                	je     26ad0 <strtoul_check+0xb0>
   26a75:	49 89 c6             	mov    %rax,%r14
   26a78:	e8 83 a0 fe ff       	callq  10b00 <__ctype_b_loc@plt>
   26a7d:	48 0f be 0b          	movsbq (%rbx),%rcx
   26a81:	48 8b 00             	mov    (%rax),%rax
   26a84:	f6 44 48 01 08       	testb  $0x8,0x1(%rax,%rcx,2)
   26a89:	74 45                	je     26ad0 <strtoul_check+0xb0>
   26a8b:	80 f9 30             	cmp    $0x30,%cl
   26a8e:	74 30                	je     26ac0 <strtoul_check+0xa0>
   26a90:	4d 89 75 00          	mov    %r14,0x0(%r13)
   26a94:	4d 89 3c 24          	mov    %r15,(%r12)
   26a98:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   26a9d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   26aa4:	00 00 
   26aa6:	89 e8                	mov    %ebp,%eax
   26aa8:	75 2d                	jne    26ad7 <strtoul_check+0xb7>
   26aaa:	48 83 c4 18          	add    $0x18,%rsp
   26aae:	5b                   	pop    %rbx
   26aaf:	5d                   	pop    %rbp
   26ab0:	41 5c                	pop    %r12
   26ab2:	41 5d                	pop    %r13
   26ab4:	41 5e                	pop    %r14
   26ab6:	41 5f                	pop    %r15
   26ab8:	c3                   	retq   
   26ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26ac0:	4c 89 f8             	mov    %r15,%rax
   26ac3:	48 29 d8             	sub    %rbx,%rax
   26ac6:	48 83 f8 01          	cmp    $0x1,%rax
   26aca:	7e c4                	jle    26a90 <strtoul_check+0x70>
   26acc:	0f 1f 40 00          	nopl   0x0(%rax)
   26ad0:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   26ad5:	eb c1                	jmp    26a98 <strtoul_check+0x78>
   26ad7:	e8 74 93 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000026adc <.annobin_idset_ndecode.start>:
   26adc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000026ae0 <idset_ndecode>:
   26ae0:	f3 0f 1e fa          	endbr64 
   26ae4:	41 57                	push   %r15
   26ae6:	41 56                	push   %r14
   26ae8:	41 55                	push   %r13
   26aea:	41 54                	push   %r12
   26aec:	55                   	push   %rbp
   26aed:	53                   	push   %rbx
   26aee:	48 83 ec 38          	sub    $0x38,%rsp
   26af2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26af9:	00 00 
   26afb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   26b00:	31 c0                	xor    %eax,%eax
   26b02:	48 85 ff             	test   %rdi,%rdi
   26b05:	0f 84 05 02 00 00    	je     26d10 <idset_ndecode+0x230>
   26b0b:	48 89 fd             	mov    %rdi,%rbp
   26b0e:	49 89 f4             	mov    %rsi,%r12
   26b11:	31 ff                	xor    %edi,%edi
   26b13:	be 01 00 00 00       	mov    $0x1,%esi
   26b18:	e8 f3 f5 ff ff       	callq  26110 <idset_create>
   26b1d:	48 89 c3             	mov    %rax,%rbx
   26b20:	48 85 c0             	test   %rax,%rax
   26b23:	0f 84 91 01 00 00    	je     26cba <idset_ndecode+0x1da>
   26b29:	4c 89 e6             	mov    %r12,%rsi
   26b2c:	48 89 ef             	mov    %rbp,%rdi
   26b2f:	e8 5c 96 fe ff       	callq  10190 <strndup@plt>
   26b34:	49 89 c7             	mov    %rax,%r15
   26b37:	48 85 c0             	test   %rax,%rax
   26b3a:	0f 84 e0 01 00 00    	je     26d20 <idset_ndecode+0x240>
   26b40:	48 89 c2             	mov    %rax,%rdx
   26b43:	8b 0a                	mov    (%rdx),%ecx
   26b45:	48 83 c2 04          	add    $0x4,%rdx
   26b49:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
   26b4f:	f7 d1                	not    %ecx
   26b51:	21 c8                	and    %ecx,%eax
   26b53:	25 80 80 80 80       	and    $0x80808080,%eax
   26b58:	74 e9                	je     26b43 <idset_ndecode+0x63>
   26b5a:	89 c1                	mov    %eax,%ecx
   26b5c:	4c 89 fd             	mov    %r15,%rbp
   26b5f:	c1 e9 10             	shr    $0x10,%ecx
   26b62:	a9 80 80 00 00       	test   $0x8080,%eax
   26b67:	0f 44 c1             	cmove  %ecx,%eax
   26b6a:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
   26b6e:	48 0f 44 d1          	cmove  %rcx,%rdx
   26b72:	89 c1                	mov    %eax,%ecx
   26b74:	00 c1                	add    %al,%cl
   26b76:	48 83 da 03          	sbb    $0x3,%rdx
   26b7a:	4c 29 fa             	sub    %r15,%rdx
   26b7d:	48 63 c2             	movslq %edx,%rax
   26b80:	83 fa 01             	cmp    $0x1,%edx
   26b83:	7e 0a                	jle    26b8f <idset_ndecode+0xaf>
   26b85:	41 80 3f 5b          	cmpb   $0x5b,(%r15)
   26b89:	0f 84 61 01 00 00    	je     26cf0 <idset_ndecode+0x210>
   26b8f:	be 5b 00 00 00       	mov    $0x5b,%esi
   26b94:	48 89 ef             	mov    %rbp,%rdi
   26b97:	e8 14 93 fe ff       	callq  feb0 <strchr@plt>
   26b9c:	48 85 c0             	test   %rax,%rax
   26b9f:	0f 85 eb 00 00 00    	jne    26c90 <idset_ndecode+0x1b0>
   26ba5:	be 5d 00 00 00       	mov    $0x5d,%esi
   26baa:	48 89 ef             	mov    %rbp,%rdi
   26bad:	e8 fe 92 fe ff       	callq  feb0 <strchr@plt>
   26bb2:	48 85 c0             	test   %rax,%rax
   26bb5:	0f 85 d5 00 00 00    	jne    26c90 <idset_ndecode+0x1b0>
   26bbb:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   26bc0:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   26bc5:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   26bcc:	00 00 
   26bce:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   26bd3:	4c 8d 64 24 18       	lea    0x18(%rsp),%r12
   26bd8:	eb 2c                	jmp    26c06 <idset_ndecode+0x126>
   26bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   26be0:	44 89 f2             	mov    %r14d,%edx
   26be3:	44 39 f5             	cmp    %r14d,%ebp
   26be6:	72 09                	jb     26bf1 <idset_ndecode+0x111>
   26be8:	83 fd fe             	cmp    $0xfffffffe,%ebp
   26beb:	0f 85 9f 00 00 00    	jne    26c90 <idset_ndecode+0x1b0>
   26bf1:	44 89 f6             	mov    %r14d,%esi
   26bf4:	48 89 df             	mov    %rbx,%rdi
   26bf7:	31 ed                	xor    %ebp,%ebp
   26bf9:	e8 b2 f7 ff ff       	callq  263b0 <idset_range_set>
   26bfe:	85 c0                	test   %eax,%eax
   26c00:	0f 88 1a 01 00 00    	js     26d20 <idset_ndecode+0x240>
   26c06:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   26c0b:	48 8d 35 3e e3 01 00 	lea    0x1e33e(%rip),%rsi        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   26c12:	48 89 ef             	mov    %rbp,%rdi
   26c15:	e8 56 95 fe ff       	callq  10170 <strtok_r@plt>
   26c1a:	49 89 c6             	mov    %rax,%r14
   26c1d:	48 85 c0             	test   %rax,%rax
   26c20:	0f 84 ba 00 00 00    	je     26ce0 <idset_ndecode+0x200>
   26c26:	48 89 df             	mov    %rbx,%rdi
   26c29:	e8 72 f9 ff ff       	callq  265a0 <idset_last>
   26c2e:	4c 89 ea             	mov    %r13,%rdx
   26c31:	4c 89 e6             	mov    %r12,%rsi
   26c34:	4c 89 f7             	mov    %r14,%rdi
   26c37:	89 c5                	mov    %eax,%ebp
   26c39:	e8 e2 fd ff ff       	callq  26a20 <strtoul_check>
   26c3e:	85 c0                	test   %eax,%eax
   26c40:	78 4e                	js     26c90 <idset_ndecode+0x1b0>
   26c42:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   26c47:	0f b6 07             	movzbl (%rdi),%eax
   26c4a:	84 c0                	test   %al,%al
   26c4c:	74 04                	je     26c52 <idset_ndecode+0x172>
   26c4e:	3c 2d                	cmp    $0x2d,%al
   26c50:	75 3e                	jne    26c90 <idset_ndecode+0x1b0>
   26c52:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   26c57:	3c 2d                	cmp    $0x2d,%al
   26c59:	75 85                	jne    26be0 <idset_ndecode+0x100>
   26c5b:	48 83 c7 01          	add    $0x1,%rdi
   26c5f:	4c 89 ea             	mov    %r13,%rdx
   26c62:	4c 89 e6             	mov    %r12,%rsi
   26c65:	e8 b6 fd ff ff       	callq  26a20 <strtoul_check>
   26c6a:	85 c0                	test   %eax,%eax
   26c6c:	78 22                	js     26c90 <idset_ndecode+0x1b0>
   26c6e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   26c73:	80 38 00             	cmpb   $0x0,(%rax)
   26c76:	75 18                	jne    26c90 <idset_ndecode+0x1b0>
   26c78:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   26c7d:	44 89 f0             	mov    %r14d,%eax
   26c80:	48 39 d0             	cmp    %rdx,%rax
   26c83:	0f 82 5a ff ff ff    	jb     26be3 <idset_ndecode+0x103>
   26c89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   26c90:	e8 7b 8e fe ff       	callq  fb10 <__errno_location@plt>
   26c95:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   26c9b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   26ca1:	48 89 c5             	mov    %rax,%rbp
   26ca4:	48 89 df             	mov    %rbx,%rdi
   26ca7:	31 db                	xor    %ebx,%ebx
   26ca9:	e8 f2 f4 ff ff       	callq  261a0 <idset_destroy>
   26cae:	4c 89 ff             	mov    %r15,%rdi
   26cb1:	e8 fa 8d fe ff       	callq  fab0 <free@plt>
   26cb6:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   26cba:	48 89 d8             	mov    %rbx,%rax
   26cbd:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   26cc2:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   26cc9:	00 00 
   26ccb:	75 63                	jne    26d30 <idset_ndecode+0x250>
   26ccd:	48 83 c4 38          	add    $0x38,%rsp
   26cd1:	5b                   	pop    %rbx
   26cd2:	5d                   	pop    %rbp
   26cd3:	41 5c                	pop    %r12
   26cd5:	41 5d                	pop    %r13
   26cd7:	41 5e                	pop    %r14
   26cd9:	41 5f                	pop    %r15
   26cdb:	c3                   	retq   
   26cdc:	0f 1f 40 00          	nopl   0x0(%rax)
   26ce0:	4c 89 ff             	mov    %r15,%rdi
   26ce3:	e8 c8 8d fe ff       	callq  fab0 <free@plt>
   26ce8:	eb d0                	jmp    26cba <idset_ndecode+0x1da>
   26cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   26cf0:	49 8d 44 07 ff       	lea    -0x1(%r15,%rax,1),%rax
   26cf5:	80 38 5d             	cmpb   $0x5d,(%rax)
   26cf8:	0f 85 91 fe ff ff    	jne    26b8f <idset_ndecode+0xaf>
   26cfe:	c6 00 00             	movb   $0x0,(%rax)
   26d01:	49 8d 6f 01          	lea    0x1(%r15),%rbp
   26d05:	e9 85 fe ff ff       	jmpq   26b8f <idset_ndecode+0xaf>
   26d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   26d10:	e8 fb 8d fe ff       	callq  fb10 <__errno_location@plt>
   26d15:	31 db                	xor    %ebx,%ebx
   26d17:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   26d1d:	eb 9b                	jmp    26cba <idset_ndecode+0x1da>
   26d1f:	90                   	nop
   26d20:	e8 eb 8d fe ff       	callq  fb10 <__errno_location@plt>
   26d25:	48 89 c5             	mov    %rax,%rbp
   26d28:	44 8b 20             	mov    (%rax),%r12d
   26d2b:	e9 74 ff ff ff       	jmpq   26ca4 <idset_ndecode+0x1c4>
   26d30:	e8 1b 91 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000026d35 <.annobin_idset_decode.start>:
   26d35:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   26d3c:	00 00 00 00 

0000000000026d40 <idset_decode>:
   26d40:	f3 0f 1e fa          	endbr64 
   26d44:	53                   	push   %rbx
   26d45:	31 f6                	xor    %esi,%esi
   26d47:	48 89 fb             	mov    %rdi,%rbx
   26d4a:	48 85 ff             	test   %rdi,%rdi
   26d4d:	74 08                	je     26d57 <idset_decode+0x17>
   26d4f:	e8 cc 90 fe ff       	callq  fe20 <strlen@plt>
   26d54:	48 89 c6             	mov    %rax,%rsi
   26d57:	48 89 df             	mov    %rbx,%rdi
   26d5a:	5b                   	pop    %rbx
   26d5b:	e9 80 fd ff ff       	jmpq   26ae0 <idset_ndecode>

0000000000026d60 <catprintf>:
   26d60:	41 57                	push   %r15
   26d62:	41 56                	push   %r14
   26d64:	49 89 f6             	mov    %rsi,%r14
   26d67:	41 55                	push   %r13
   26d69:	41 54                	push   %r12
   26d6b:	49 89 d4             	mov    %rdx,%r12
   26d6e:	48 89 ca             	mov    %rcx,%rdx
   26d71:	55                   	push   %rbp
   26d72:	48 89 fd             	mov    %rdi,%rbp
   26d75:	53                   	push   %rbx
   26d76:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   26d7d:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   26d82:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
   26d87:	84 c0                	test   %al,%al
   26d89:	74 3a                	je     26dc5 <catprintf+0x65>
   26d8b:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   26d90:	0f 29 4c 24 70       	movaps %xmm1,0x70(%rsp)
   26d95:	0f 29 94 24 80 00 00 	movaps %xmm2,0x80(%rsp)
   26d9c:	00 
   26d9d:	0f 29 9c 24 90 00 00 	movaps %xmm3,0x90(%rsp)
   26da4:	00 
   26da5:	0f 29 a4 24 a0 00 00 	movaps %xmm4,0xa0(%rsp)
   26dac:	00 
   26dad:	0f 29 ac 24 b0 00 00 	movaps %xmm5,0xb0(%rsp)
   26db4:	00 
   26db5:	0f 29 b4 24 c0 00 00 	movaps %xmm6,0xc0(%rsp)
   26dbc:	00 
   26dbd:	0f 29 bc 24 d0 00 00 	movaps %xmm7,0xd0(%rsp)
   26dc4:	00 
   26dc5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26dcc:	00 00 
   26dce:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   26dd3:	31 c0                	xor    %eax,%eax
  return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
   26dd5:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   26dda:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   26ddf:	be 01 00 00 00       	mov    $0x1,%esi
   26de4:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
   26deb:	00 
   26dec:	c7 44 24 10 20 00 00 	movl   $0x20,0x10(%rsp)
   26df3:	00 
   26df4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   26df9:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   26dfe:	c7 44 24 14 30 00 00 	movl   $0x30,0x14(%rsp)
   26e05:	00 
   26e06:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   26e0b:	e8 80 96 fe ff       	callq  10490 <__vasprintf_chk@plt>
   26e10:	85 c0                	test   %eax,%eax
   26e12:	0f 88 c4 00 00 00    	js     26edc <catprintf+0x17c>
   26e18:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   26e1d:	4c 89 ff             	mov    %r15,%rdi
   26e20:	e8 fb 8f fe ff       	callq  fe20 <strlen@plt>
   26e25:	49 8b 1e             	mov    (%r14),%rbx
   26e28:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   26e2c:	49 89 c5             	mov    %rax,%r13
   26e2f:	49 8b 04 24          	mov    (%r12),%rax
   26e33:	49 8d 44 05 01       	lea    0x1(%r13,%rax,1),%rax
   26e38:	48 39 c3             	cmp    %rax,%rbx
   26e3b:	72 18                	jb     26e55 <catprintf+0xf5>
   26e3d:	eb 46                	jmp    26e85 <catprintf+0x125>
   26e3f:	90                   	nop
   26e40:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   26e44:	49 89 1e             	mov    %rbx,(%r14)
   26e47:	49 8b 04 24          	mov    (%r12),%rax
   26e4b:	49 8d 44 05 01       	lea    0x1(%r13,%rax,1),%rax
   26e50:	48 39 d8             	cmp    %rbx,%rax
   26e53:	76 2b                	jbe    26e80 <catprintf+0x120>
   26e55:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   26e5c:	48 89 de             	mov    %rbx,%rsi
   26e5f:	e8 6c 97 fe ff       	callq  105d0 <realloc@plt>
   26e64:	48 89 c7             	mov    %rax,%rdi
   26e67:	48 85 c0             	test   %rax,%rax
   26e6a:	74 54                	je     26ec0 <catprintf+0x160>
   26e6c:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
   26e71:	75 cd                	jne    26e40 <catprintf+0xe0>
   26e73:	c6 00 00             	movb   $0x0,(%rax)
   26e76:	eb c8                	jmp    26e40 <catprintf+0xe0>
   26e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   26e7f:	00 
   26e80:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
  return __builtin___strcat_chk (__dest, __src, __glibc_objsize (__dest));
   26e85:	4c 89 fe             	mov    %r15,%rsi
   26e88:	e8 13 9a fe ff       	callq  108a0 <strcat@plt>
   26e8d:	4d 01 2c 24          	add    %r13,(%r12)
   26e91:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   26e96:	e8 15 8c fe ff       	callq  fab0 <free@plt>
   26e9b:	31 c0                	xor    %eax,%eax
   26e9d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   26ea2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   26ea9:	00 00 
   26eab:	75 36                	jne    26ee3 <catprintf+0x183>
   26ead:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   26eb4:	5b                   	pop    %rbx
   26eb5:	5d                   	pop    %rbp
   26eb6:	41 5c                	pop    %r12
   26eb8:	41 5d                	pop    %r13
   26eba:	41 5e                	pop    %r14
   26ebc:	41 5f                	pop    %r15
   26ebe:	c3                   	retq   
   26ebf:	90                   	nop
   26ec0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   26ec5:	e8 e6 8b fe ff       	callq  fab0 <free@plt>
   26eca:	e8 41 8c fe ff       	callq  fb10 <__errno_location@plt>
   26ecf:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   26ed5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26eda:	eb c1                	jmp    26e9d <catprintf+0x13d>
   26edc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26ee1:	eb ba                	jmp    26e9d <catprintf+0x13d>
   26ee3:	e8 68 8f fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000026ee8 <.annobin_catprintf.end>:
   26ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   26eef:	00 

0000000000026ef0 <idset_encode>:
   26ef0:	f3 0f 1e fa          	endbr64 
   26ef4:	41 57                	push   %r15
   26ef6:	41 56                	push   %r14
   26ef8:	41 55                	push   %r13
   26efa:	41 54                	push   %r12
   26efc:	55                   	push   %rbp
   26efd:	48 89 fd             	mov    %rdi,%rbp
   26f00:	53                   	push   %rbx
   26f01:	89 f3                	mov    %esi,%ebx
   26f03:	be 06 00 00 00       	mov    $0x6,%esi
   26f08:	89 df                	mov    %ebx,%edi
   26f0a:	48 83 ec 58          	sub    $0x58,%rsp
   26f0e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   26f15:	00 00 
   26f17:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   26f1c:	31 c0                	xor    %eax,%eax
   26f1e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   26f25:	00 00 
   26f27:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   26f2e:	00 00 
   26f30:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   26f37:	00 00 
   26f39:	e8 a2 f1 ff ff       	callq  260e0 <validate_idset_flags>
   26f3e:	85 c0                	test   %eax,%eax
   26f40:	0f 88 8a 03 00 00    	js     272d0 <idset_encode+0x3e0>
   26f46:	48 85 ed             	test   %rbp,%rbp
   26f49:	0f 84 b1 03 00 00    	je     27300 <idset_encode+0x410>
   26f4f:	89 d8                	mov    %ebx,%eax
   26f51:	83 e0 02             	and    $0x2,%eax
   26f54:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   26f58:	0f 85 ca 02 00 00    	jne    27228 <idset_encode+0x338>
   26f5e:	83 e3 04             	and    $0x4,%ebx
   26f61:	0f 84 59 01 00 00    	je     270c0 <idset_encode+0x1d0>
   26f67:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   26f6b:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   26f6f:	31 d2                	xor    %edx,%edx
   26f71:	31 db                	xor    %ebx,%ebx
   26f73:	e8 88 e9 ff ff       	callq  25900 <vebsucc>
   26f78:	44 8b 55 14          	mov    0x14(%rbp),%r10d
   26f7c:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
   26f80:	b9 01 00 00 00       	mov    $0x1,%ecx
   26f85:	41 89 c5             	mov    %eax,%r13d
   26f88:	41 89 c4             	mov    %eax,%r12d
   26f8b:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   26f90:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   26f95:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   26f9a:	44 89 eb             	mov    %r13d,%ebx
   26f9d:	45 89 d7             	mov    %r10d,%r15d
   26fa0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   26fa5:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   26faa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   26faf:	e9 86 00 00 00       	jmpq   2703a <idset_encode+0x14a>
   26fb4:	0f 1f 40 00          	nopl   0x0(%rax)
   26fb8:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   26fbd:	41 39 c5             	cmp    %eax,%r13d
   26fc0:	0f 84 ea 01 00 00    	je     271b0 <idset_encode+0x2c0>
   26fc6:	41 39 dc             	cmp    %ebx,%r12d
   26fc9:	0f 84 f1 01 00 00    	je     271c0 <idset_encode+0x2d0>
   26fcf:	48 83 ec 08          	sub    $0x8,%rsp
   26fd3:	48 8d 05 76 df 01 00 	lea    0x1df76(%rip),%rax        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   26fda:	45 89 e1             	mov    %r12d,%r9d
   26fdd:	41 89 d8             	mov    %ebx,%r8d
   26fe0:	50                   	push   %rax
   26fe1:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   26fe6:	48 8d 0d 5e b2 01 00 	lea    0x1b25e(%rip),%rcx        # 4224b <__FUNCTION__.3752+0xb>
   26fed:	31 c0                	xor    %eax,%eax
   26fef:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   26ff4:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   26ff9:	e8 62 fd ff ff       	callq  26d60 <catprintf>
   26ffe:	5e                   	pop    %rsi
   26fff:	5f                   	pop    %rdi
   27000:	85 c0                	test   %eax,%eax
   27002:	0f 88 48 02 00 00    	js     27250 <idset_encode+0x360>
   27008:	45 39 fe             	cmp    %r15d,%r14d
   2700b:	0f 84 e2 01 00 00    	je     271f3 <idset_encode+0x303>
   27011:	44 8b 7d 14          	mov    0x14(%rbp),%r15d
   27015:	45 89 ec             	mov    %r13d,%r12d
   27018:	44 89 eb             	mov    %r13d,%ebx
   2701b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27020:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   27024:	31 c0                	xor    %eax,%eax
   27026:	45 89 f5             	mov    %r14d,%r13d
   27029:	81 f9 ff ff ff 7f    	cmp    $0x7fffffff,%ecx
   2702f:	0f 95 c0             	setne  %al
   27032:	01 c1                	add    %eax,%ecx
   27034:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   27038:	31 c9                	xor    %ecx,%ecx
   2703a:	45 39 fd             	cmp    %r15d,%r13d
   2703d:	0f 83 2d 02 00 00    	jae    27270 <idset_encode+0x380>
   27043:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   27047:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   2704b:	41 8d 55 01          	lea    0x1(%r13),%edx
   2704f:	88 4c 24 2b          	mov    %cl,0x2b(%rsp)
   27053:	e8 a8 e8 ff ff       	callq  25900 <vebsucc>
   27058:	0f b6 4c 24 2b       	movzbl 0x2b(%rsp),%ecx
   2705d:	44 8b 7d 14          	mov    0x14(%rbp),%r15d
   27061:	41 89 c6             	mov    %eax,%r14d
   27064:	84 c9                	test   %cl,%cl
   27066:	0f 84 4c ff ff ff    	je     26fb8 <idset_encode+0xc8>
   2706c:	45 39 fe             	cmp    %r15d,%r14d
   2706f:	75 af                	jne    27020 <idset_encode+0x130>
   27071:	44 39 e3             	cmp    %r12d,%ebx
   27074:	0f 84 76 01 00 00    	je     271f0 <idset_encode+0x300>
   2707a:	48 83 ec 08          	sub    $0x8,%rsp
   2707e:	48 8d 05 94 c2 01 00 	lea    0x1c294(%rip),%rax        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   27085:	45 89 e1             	mov    %r12d,%r9d
   27088:	41 89 d8             	mov    %ebx,%r8d
   2708b:	50                   	push   %rax
   2708c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   27091:	48 8d 0d b3 b1 01 00 	lea    0x1b1b3(%rip),%rcx        # 4224b <__FUNCTION__.3752+0xb>
   27098:	31 c0                	xor    %eax,%eax
   2709a:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   2709f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   270a4:	e8 b7 fc ff ff       	callq  26d60 <catprintf>
   270a9:	5a                   	pop    %rdx
   270aa:	59                   	pop    %rcx
   270ab:	85 c0                	test   %eax,%eax
   270ad:	0f 88 9d 01 00 00    	js     27250 <idset_encode+0x360>
   270b3:	44 8b 7d 14          	mov    0x14(%rbp),%r15d
   270b7:	e9 64 ff ff ff       	jmpq   27020 <idset_encode+0x130>
   270bc:	0f 1f 40 00          	nopl   0x0(%rax)
   270c0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   270c4:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   270c8:	31 d2                	xor    %edx,%edx
   270ca:	4c 8d 3d 48 c2 01 00 	lea    0x1c248(%rip),%r15        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   270d1:	4c 8d 35 78 de 01 00 	lea    0x1de78(%rip),%r14        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   270d8:	e8 23 e8 ff ff       	callq  25900 <vebsucc>
   270dd:	41 89 c4             	mov    %eax,%r12d
   270e0:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   270e5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   270ea:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   270ef:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   270f4:	eb 61                	jmp    27157 <idset_encode+0x267>
   270f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   270fd:	00 00 00 
   27100:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   27104:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   27108:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   2710d:	e8 ee e7 ff ff       	callq  25900 <vebsucc>
   27112:	4d 89 f1             	mov    %r14,%r9
   27115:	3b 45 14             	cmp    0x14(%rbp),%eax
   27118:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2711d:	4d 0f 44 cf          	cmove  %r15,%r9
   27121:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   27126:	41 89 c5             	mov    %eax,%r13d
   27129:	45 89 e0             	mov    %r12d,%r8d
   2712c:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   27131:	48 8d 0d 1b b1 01 00 	lea    0x1b11b(%rip),%rcx        # 42253 <__FUNCTION__.3752+0x13>
   27138:	31 c0                	xor    %eax,%eax
   2713a:	e8 21 fc ff ff       	callq  26d60 <catprintf>
   2713f:	85 c0                	test   %eax,%eax
   27141:	0f 88 09 01 00 00    	js     27250 <idset_encode+0x360>
   27147:	31 c0                	xor    %eax,%eax
   27149:	81 fb ff ff ff 7f    	cmp    $0x7fffffff,%ebx
   2714f:	45 89 ec             	mov    %r13d,%r12d
   27152:	0f 95 c0             	setne  %al
   27155:	01 c3                	add    %eax,%ebx
   27157:	44 3b 65 14          	cmp    0x14(%rbp),%r12d
   2715b:	75 a3                	jne    27100 <idset_encode+0x210>
   2715d:	83 fb 01             	cmp    $0x1,%ebx
   27160:	7e 0c                	jle    2716e <idset_encode+0x27e>
   27162:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   27166:	85 c0                	test   %eax,%eax
   27168:	0f 85 12 01 00 00    	jne    27280 <idset_encode+0x390>
   2716e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   27173:	48 85 c0             	test   %rax,%rax
   27176:	0f 84 64 01 00 00    	je     272e0 <idset_encode+0x3f0>
   2717c:	83 fb 01             	cmp    $0x1,%ebx
   2717f:	7f 09                	jg     2718a <idset_encode+0x29a>
   27181:	80 38 5b             	cmpb   $0x5b,(%rax)
   27184:	0f 84 8e 01 00 00    	je     27318 <idset_encode+0x428>
   2718a:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   2718f:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   27196:	00 00 
   27198:	0f 85 95 01 00 00    	jne    27333 <idset_encode+0x443>
   2719e:	48 83 c4 58          	add    $0x58,%rsp
   271a2:	5b                   	pop    %rbx
   271a3:	5d                   	pop    %rbp
   271a4:	41 5c                	pop    %r12
   271a6:	41 5d                	pop    %r13
   271a8:	41 5e                	pop    %r14
   271aa:	41 5f                	pop    %r15
   271ac:	c3                   	retq   
   271ad:	0f 1f 00             	nopl   (%rax)
   271b0:	45 89 ec             	mov    %r13d,%r12d
   271b3:	e9 b4 fe ff ff       	jmpq   2706c <idset_encode+0x17c>
   271b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   271bf:	00 
   271c0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   271c5:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   271ca:	45 89 e0             	mov    %r12d,%r8d
   271cd:	31 c0                	xor    %eax,%eax
   271cf:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   271d4:	4c 8d 0d 75 dd 01 00 	lea    0x1dd75(%rip),%r9        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   271db:	48 8d 0d 6c b0 01 00 	lea    0x1b06c(%rip),%rcx        # 4224e <__FUNCTION__.3752+0xe>
   271e2:	e8 79 fb ff ff       	callq  26d60 <catprintf>
   271e7:	e9 14 fe ff ff       	jmpq   27000 <idset_encode+0x110>
   271ec:	0f 1f 40 00          	nopl   0x0(%rax)
   271f0:	41 89 dd             	mov    %ebx,%r13d
   271f3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   271f8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   271fd:	45 89 e8             	mov    %r13d,%r8d
   27200:	31 c0                	xor    %eax,%eax
   27202:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   27207:	4c 8d 0d 0b c1 01 00 	lea    0x1c10b(%rip),%r9        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   2720e:	45 89 ec             	mov    %r13d,%r12d
   27211:	44 89 eb             	mov    %r13d,%ebx
   27214:	48 8d 0d 33 b0 01 00 	lea    0x1b033(%rip),%rcx        # 4224e <__FUNCTION__.3752+0xe>
   2721b:	e8 40 fb ff ff       	callq  26d60 <catprintf>
   27220:	e9 86 fe ff ff       	jmpq   270ab <idset_encode+0x1bb>
   27225:	0f 1f 00             	nopl   (%rax)
   27228:	31 c0                	xor    %eax,%eax
   2722a:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   2722f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   27234:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   27239:	48 8d 0d 09 b0 01 00 	lea    0x1b009(%rip),%rcx        # 42249 <__FUNCTION__.3752+0x9>
   27240:	e8 1b fb ff ff       	callq  26d60 <catprintf>
   27245:	85 c0                	test   %eax,%eax
   27247:	0f 89 11 fd ff ff    	jns    26f5e <idset_encode+0x6e>
   2724d:	0f 1f 00             	nopl   (%rax)
   27250:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   27255:	48 89 c7             	mov    %rax,%rdi
   27258:	e8 53 88 fe ff       	callq  fab0 <free@plt>
   2725d:	e8 ae 88 fe ff       	callq  fb10 <__errno_location@plt>
   27262:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   27268:	31 c0                	xor    %eax,%eax
   2726a:	e9 1b ff ff ff       	jmpq   2718a <idset_encode+0x29a>
   2726f:	90                   	nop
   27270:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
   27274:	e9 e4 fe ff ff       	jmpq   2715d <idset_encode+0x26d>
   27279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   27280:	31 c0                	xor    %eax,%eax
   27282:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
   27287:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   2728c:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   27291:	48 8d 0d 99 c2 01 00 	lea    0x1c299(%rip),%rcx        # 43531 <__PRETTY_FUNCTION__.11024+0x3f1>
   27298:	e8 c3 fa ff ff       	callq  26d60 <catprintf>
   2729d:	85 c0                	test   %eax,%eax
   2729f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   272a4:	78 af                	js     27255 <idset_encode+0x365>
   272a6:	48 85 c0             	test   %rax,%rax
   272a9:	0f 85 db fe ff ff    	jne    2718a <idset_encode+0x29a>
   272af:	48 8d 3d 63 c0 01 00 	lea    0x1c063(%rip),%rdi        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   272b6:	e8 e5 96 fe ff       	callq  109a0 <strdup@plt>
   272bb:	48 85 c0             	test   %rax,%rax
   272be:	0f 85 c6 fe ff ff    	jne    2718a <idset_encode+0x29a>
   272c4:	eb 8f                	jmp    27255 <idset_encode+0x365>
   272c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   272cd:	00 00 00 
   272d0:	31 c0                	xor    %eax,%eax
   272d2:	e9 b3 fe ff ff       	jmpq   2718a <idset_encode+0x29a>
   272d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   272de:	00 00 
   272e0:	48 8d 3d 32 c0 01 00 	lea    0x1c032(%rip),%rdi        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   272e7:	e8 b4 96 fe ff       	callq  109a0 <strdup@plt>
   272ec:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   272f1:	48 85 c0             	test   %rax,%rax
   272f4:	0f 85 82 fe ff ff    	jne    2717c <idset_encode+0x28c>
   272fa:	e9 56 ff ff ff       	jmpq   27255 <idset_encode+0x365>
   272ff:	90                   	nop
   27300:	e8 0b 88 fe ff       	callq  fb10 <__errno_location@plt>
   27305:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2730b:	31 c0                	xor    %eax,%eax
   2730d:	e9 78 fe ff ff       	jmpq   2718a <idset_encode+0x29a>
   27312:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return __builtin___memmove_chk (__dest, __src, __len,
   27318:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   2731d:	48 8d 70 01          	lea    0x1(%rax),%rsi
   27321:	48 89 c7             	mov    %rax,%rdi
   27324:	e8 a7 93 fe ff       	callq  106d0 <memmove@plt>
   27329:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   2732e:	e9 57 fe ff ff       	jmpq   2718a <idset_encode+0x29a>
   27333:	e8 18 8b fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000027338 <.annobin_idset_encode.c_end>:
   27338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2733f:	00 

0000000000027340 <format_first>:
   27340:	f3 0f 1e fa          	endbr64 
   27344:	41 56                	push   %r14
   27346:	41 55                	push   %r13
   27348:	41 54                	push   %r12
   2734a:	55                   	push   %rbp
   2734b:	53                   	push   %rbx
   2734c:	48 85 ff             	test   %rdi,%rdi
   2734f:	0f 84 8b 00 00 00    	je     273e0 <format_first+0xa0>
   27355:	48 89 d3             	mov    %rdx,%rbx
   27358:	48 85 d2             	test   %rdx,%rdx
   2735b:	0f 84 7f 00 00 00    	je     273e0 <format_first+0xa0>
   27361:	48 89 fd             	mov    %rdi,%rbp
   27364:	49 89 f4             	mov    %rsi,%r12
   27367:	48 89 d7             	mov    %rdx,%rdi
   2736a:	be 5b 00 00 00       	mov    $0x5b,%esi
   2736f:	41 89 cd             	mov    %ecx,%r13d
   27372:	e8 39 8b fe ff       	callq  feb0 <strchr@plt>
   27377:	49 89 c6             	mov    %rax,%r14
   2737a:	48 85 c0             	test   %rax,%rax
   2737d:	74 61                	je     273e0 <format_first+0xa0>
   2737f:	48 8d 78 01          	lea    0x1(%rax),%rdi
   27383:	be 5d 00 00 00       	mov    $0x5d,%esi
   27388:	e8 23 8b fe ff       	callq  feb0 <strchr@plt>
   2738d:	48 85 c0             	test   %rax,%rax
   27390:	74 4e                	je     273e0 <format_first+0xa0>
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   27392:	48 83 ec 08          	sub    $0x8,%rsp
   27396:	48 83 c0 01          	add    $0x1,%rax
   2739a:	45 89 f1             	mov    %r14d,%r9d
   2739d:	ba 01 00 00 00       	mov    $0x1,%edx
   273a2:	50                   	push   %rax
   273a3:	41 29 d9             	sub    %ebx,%r9d
   273a6:	4c 8d 05 ab ae 01 00 	lea    0x1aeab(%rip),%r8        # 42258 <__FUNCTION__.3752+0x18>
   273ad:	4c 89 e6             	mov    %r12,%rsi
   273b0:	41 55                	push   %r13
   273b2:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   273b9:	48 89 ef             	mov    %rbp,%rdi
   273bc:	31 c0                	xor    %eax,%eax
   273be:	53                   	push   %rbx
   273bf:	e8 dc 86 fe ff       	callq  faa0 <__snprintf_chk@plt>
   273c4:	48 83 c4 20          	add    $0x20,%rsp
   273c8:	48 98                	cltq   
   273ca:	4c 39 e0             	cmp    %r12,%rax
   273cd:	73 29                	jae    273f8 <format_first+0xb8>
   273cf:	31 c0                	xor    %eax,%eax
   273d1:	5b                   	pop    %rbx
   273d2:	5d                   	pop    %rbp
   273d3:	41 5c                	pop    %r12
   273d5:	41 5d                	pop    %r13
   273d7:	41 5e                	pop    %r14
   273d9:	c3                   	retq   
   273da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   273e0:	e8 2b 87 fe ff       	callq  fb10 <__errno_location@plt>
   273e5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   273eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   273f0:	eb df                	jmp    273d1 <format_first+0x91>
   273f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   273f8:	e8 13 87 fe ff       	callq  fb10 <__errno_location@plt>
   273fd:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
   27403:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   27408:	eb c7                	jmp    273d1 <format_first+0x91>

000000000002740a <.annobin_format_first.end>:
   2740a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000027410 <pendingcb>:
   27410:	f3 0f 1e fa          	endbr64 
   27414:	c3                   	retq   

0000000000027415 <.annobin_iouring_tfd_cb.start>:
   27415:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2741c:	00 00 00 00 

0000000000027420 <iouring_tfd_cb>:
   27420:	f3 0f 1e fa          	endbr64 
   27424:	48 8b 05 2d bd 01 00 	mov    0x1bd2d(%rip),%rax        # 43158 <__PRETTY_FUNCTION__.11024+0x18>
   2742b:	48 89 87 08 02 00 00 	mov    %rax,0x208(%rdi)
   27432:	c3                   	retq   

0000000000027433 <.annobin_ev_invoke_pending.start>:
   27433:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2743a:	00 00 00 00 
   2743e:	66 90                	xchg   %ax,%ax

0000000000027440 <ev_invoke_pending>:
   27440:	f3 0f 1e fa          	endbr64 
   27444:	53                   	push   %rbx
   27445:	ba 05 00 00 00       	mov    $0x5,%edx
   2744a:	48 89 fb             	mov    %rdi,%rbx
   2744d:	0f 1f 00             	nopl   (%rax)
   27450:	83 ea 01             	sub    $0x1,%edx
   27453:	48 63 ca             	movslq %edx,%rcx
   27456:	89 93 80 00 00 00    	mov    %edx,0x80(%rbx)
   2745c:	8b 44 8b 6c          	mov    0x6c(%rbx,%rcx,4),%eax
   27460:	85 c0                	test   %eax,%eax
   27462:	74 41                	je     274a5 <ev_invoke_pending+0x65>
   27464:	0f 1f 40 00          	nopl   0x0(%rax)
   27468:	83 e8 01             	sub    $0x1,%eax
   2746b:	48 8b 54 cb 30       	mov    0x30(%rbx,%rcx,8),%rdx
   27470:	48 89 df             	mov    %rbx,%rdi
   27473:	89 44 8b 6c          	mov    %eax,0x6c(%rbx,%rcx,4)
   27477:	48 98                	cltq   
   27479:	48 c1 e0 04          	shl    $0x4,%rax
   2747d:	48 01 d0             	add    %rdx,%rax
   27480:	48 8b 08             	mov    (%rax),%rcx
   27483:	8b 50 08             	mov    0x8(%rax),%edx
   27486:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%rcx)
   2748d:	48 89 ce             	mov    %rcx,%rsi
   27490:	ff 51 18             	callq  *0x18(%rcx)
   27493:	48 63 8b 80 00 00 00 	movslq 0x80(%rbx),%rcx
   2749a:	8b 44 8b 6c          	mov    0x6c(%rbx,%rcx,4),%eax
   2749e:	48 89 ca             	mov    %rcx,%rdx
   274a1:	85 c0                	test   %eax,%eax
   274a3:	75 c3                	jne    27468 <ev_invoke_pending+0x28>
   274a5:	85 d2                	test   %edx,%edx
   274a7:	74 0f                	je     274b8 <ev_invoke_pending+0x78>
   274a9:	8b 93 80 00 00 00    	mov    0x80(%rbx),%edx
   274af:	eb 9f                	jmp    27450 <ev_invoke_pending+0x10>
   274b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   274b8:	5b                   	pop    %rbx
   274b9:	c3                   	retq   

00000000000274ba <.annobin_ev_invoke_pending.end>:
   274ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000274c0 <ev_realloc_emul>:
   274c0:	f3 0f 1e fa          	endbr64 
   274c4:	48 85 f6             	test   %rsi,%rsi
   274c7:	74 07                	je     274d0 <ev_realloc_emul+0x10>
   274c9:	e9 02 91 fe ff       	jmpq   105d0 <realloc@plt>
   274ce:	66 90                	xchg   %ax,%ax
   274d0:	48 83 ec 08          	sub    $0x8,%rsp
   274d4:	e8 d7 85 fe ff       	callq  fab0 <free@plt>
   274d9:	31 c0                	xor    %eax,%eax
   274db:	48 83 c4 08          	add    $0x8,%rsp
   274df:	c3                   	retq   

00000000000274e0 <fd_intern>:
   274e0:	53                   	push   %rbx
   274e1:	ba 01 00 00 00       	mov    $0x1,%edx
   274e6:	89 fb                	mov    %edi,%ebx
   274e8:	be 02 00 00 00       	mov    $0x2,%esi
   274ed:	31 c0                	xor    %eax,%eax
   274ef:	e8 cc 87 fe ff       	callq  fcc0 <fcntl@plt>
   274f4:	89 df                	mov    %ebx,%edi
   274f6:	ba 00 08 00 00       	mov    $0x800,%edx
   274fb:	31 c0                	xor    %eax,%eax
   274fd:	be 04 00 00 00       	mov    $0x4,%esi
   27502:	5b                   	pop    %rbx
   27503:	e9 b8 87 fe ff       	jmpq   fcc0 <fcntl@plt>

0000000000027508 <.annobin_fd_intern.end>:
   27508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2750f:	00 

0000000000027510 <periodic_recalc>:
   27510:	f2 0f 10 17          	movsd  (%rdi),%xmm2
   27514:	f2 0f 10 5e 30       	movsd  0x30(%rsi),%xmm3
   27519:	f2 0f 10 4e 28       	movsd  0x28(%rsi),%xmm1
   2751e:	f2 0f 10 2d 6a 7f 01 	movsd  0x17f6a(%rip),%xmm5        # 3f490 <f58_prefix+0x2d>
   27525:	00 
   27526:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2752a:	66 0f 28 f3          	movapd %xmm3,%xmm6
   2752e:	f2 0f 5f 35 2a bc 01 	maxsd  0x1bc2a(%rip),%xmm6        # 43160 <__PRETTY_FUNCTION__.11024+0x20>
   27535:	00 
   27536:	f2 0f 10 3d 2a bc 01 	movsd  0x1bc2a(%rip),%xmm7        # 43168 <__PRETTY_FUNCTION__.11024+0x28>
   2753d:	00 
   2753e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   27542:	f2 0f 5e c6          	divsd  %xmm6,%xmm0
   27546:	66 0f 28 e0          	movapd %xmm0,%xmm4
   2754a:	66 0f 54 e5          	andpd  %xmm5,%xmm4
   2754e:	66 0f 2e fc          	ucomisd %xmm4,%xmm7
   27552:	76 35                	jbe    27589 <periodic_recalc+0x79>
   27554:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   27559:	66 0f ef e4          	pxor   %xmm4,%xmm4
   2755d:	66 0f 55 e8          	andnpd %xmm0,%xmm5
   27561:	f2 44 0f 10 05 06 bc 	movsd  0x1bc06(%rip),%xmm8        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   27568:	01 00 
   2756a:	f2 48 0f 2a e0       	cvtsi2sd %rax,%xmm4
   2756f:	66 0f 28 fc          	movapd %xmm4,%xmm7
   27573:	f2 0f c2 f8 06       	cmpnlesd %xmm0,%xmm7
   27578:	66 41 0f 54 f8       	andpd  %xmm8,%xmm7
   2757d:	f2 0f 5c e7          	subsd  %xmm7,%xmm4
   27581:	66 0f 56 e5          	orpd   %xmm5,%xmm4
   27585:	66 0f 28 c4          	movapd %xmm4,%xmm0
   27589:	f2 0f 59 c6          	mulsd  %xmm6,%xmm0
   2758d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   27591:	66 0f 2f d1          	comisd %xmm1,%xmm2
   27595:	72 4d                	jb     275e4 <periodic_recalc+0xd4>
   27597:	66 0f 28 c3          	movapd %xmm3,%xmm0
   2759b:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2759f:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   275a3:	7a 0f                	jp     275b4 <periodic_recalc+0xa4>
   275a5:	eb 39                	jmp    275e0 <periodic_recalc+0xd0>
   275a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   275ae:	00 00 
   275b0:	66 0f 28 c1          	movapd %xmm1,%xmm0
   275b4:	66 0f 2f d0          	comisd %xmm0,%xmm2
   275b8:	72 16                	jb     275d0 <periodic_recalc+0xc0>
   275ba:	66 0f 28 cb          	movapd %xmm3,%xmm1
   275be:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   275c2:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   275c6:	7a e8                	jp     275b0 <periodic_recalc+0xa0>
   275c8:	75 e6                	jne    275b0 <periodic_recalc+0xa0>
   275ca:	f2 0f 11 56 20       	movsd  %xmm2,0x20(%rsi)
   275cf:	c3                   	retq   
   275d0:	66 0f 28 d0          	movapd %xmm0,%xmm2
   275d4:	f2 0f 11 56 20       	movsd  %xmm2,0x20(%rsi)
   275d9:	c3                   	retq   
   275da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   275e0:	74 e8                	je     275ca <periodic_recalc+0xba>
   275e2:	eb d0                	jmp    275b4 <periodic_recalc+0xa4>
   275e4:	66 0f 28 d1          	movapd %xmm1,%xmm2
   275e8:	eb e0                	jmp    275ca <periodic_recalc+0xba>

00000000000275ea <.annobin_ev_realloc.part.5.start>:
   275ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000275f0 <ev_realloc.part.5>:
   275f0:	50                   	push   %rax
   275f1:	58                   	pop    %rax
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   275f2:	48 8d 15 47 b0 01 00 	lea    0x1b047(%rip),%rdx        # 42640 <__FUNCTION__.3752+0x400>
   275f9:	be 01 00 00 00       	mov    $0x1,%esi
   275fe:	48 83 ec 08          	sub    $0x8,%rsp
   27602:	48 8b 05 df b9 22 00 	mov    0x22b9df(%rip),%rax        # 252fe8 <stderr@GLIBC_2.2.5>
   27609:	48 89 f9             	mov    %rdi,%rcx
   2760c:	48 8b 38             	mov    (%rax),%rdi
   2760f:	31 c0                	xor    %eax,%eax
   27611:	e8 4a 93 fe ff       	callq  10960 <__fprintf_chk@plt>
   27616:	e8 d5 84 fe ff       	callq  faf0 <abort@plt>

000000000002761b <.annobin_ev_realloc.part.5.end>:
   2761b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000027620 <ev_realloc>:
   27620:	53                   	push   %rbx
   27621:	48 89 f3             	mov    %rsi,%rbx
   27624:	ff 15 6e ed 22 00    	callq  *0x22ed6e(%rip)        # 256398 <alloc>
   2762a:	48 85 c0             	test   %rax,%rax
   2762d:	75 05                	jne    27634 <ev_realloc+0x14>
   2762f:	48 85 db             	test   %rbx,%rbx
   27632:	75 02                	jne    27636 <ev_realloc+0x16>
   27634:	5b                   	pop    %rbx
   27635:	c3                   	retq   
   27636:	48 89 df             	mov    %rbx,%rdi
   27639:	e8 b2 ff ff ff       	callq  275f0 <ev_realloc.part.5>

000000000002763e <.annobin_ev_realloc.end>:
   2763e:	66 90                	xchg   %ax,%ax

0000000000027640 <poll_modify>:
   27640:	f3 0f 1e fa          	endbr64 
   27644:	39 ca                	cmp    %ecx,%edx
   27646:	0f 84 e4 00 00 00    	je     27730 <poll_modify+0xf0>
   2764c:	41 56                	push   %r14
   2764e:	41 55                	push   %r13
   27650:	41 54                	push   %r12
   27652:	41 89 f4             	mov    %esi,%r12d
   27655:	55                   	push   %rbp
   27656:	89 cd                	mov    %ecx,%ebp
   27658:	53                   	push   %rbx
   27659:	44 8b af 78 01 00 00 	mov    0x178(%rdi),%r13d
   27660:	48 89 fb             	mov    %rdi,%rbx
   27663:	48 8b 87 70 01 00 00 	mov    0x170(%rdi),%rax
   2766a:	41 39 f5             	cmp    %esi,%r13d
   2766d:	0f 8e 46 9b fe ff    	jle    111b9 <poll_modify.cold.22>
   27673:	4d 63 f4             	movslq %r12d,%r14
   27676:	4a 8d 14 b0          	lea    (%rax,%r14,4),%rdx
   2767a:	48 8b 83 60 01 00 00 	mov    0x160(%rbx),%rax
   27681:	44 8b 2a             	mov    (%rdx),%r13d
   27684:	45 85 ed             	test   %r13d,%r13d
   27687:	78 37                	js     276c0 <poll_modify+0x80>
   27689:	49 63 d5             	movslq %r13d,%rdx
   2768c:	48 8d 3c d0          	lea    (%rax,%rdx,8),%rdi
   27690:	44 39 27             	cmp    %r12d,(%rdi)
   27693:	0f 85 98 00 00 00    	jne    27731 <poll_modify+0xf1>
   27699:	85 ed                	test   %ebp,%ebp
   2769b:	74 57                	je     276f4 <poll_modify+0xb4>
   2769d:	8d 4c 2d 00          	lea    0x0(%rbp,%rbp,1),%ecx
   276a1:	89 c8                	mov    %ecx,%eax
   276a3:	89 e9                	mov    %ebp,%ecx
   276a5:	83 e0 04             	and    $0x4,%eax
   276a8:	83 e1 01             	and    $0x1,%ecx
   276ab:	09 c1                	or     %eax,%ecx
   276ad:	66 89 4f 04          	mov    %cx,0x4(%rdi)
   276b1:	5b                   	pop    %rbx
   276b2:	5d                   	pop    %rbp
   276b3:	41 5c                	pop    %r12
   276b5:	41 5d                	pop    %r13
   276b7:	41 5e                	pop    %r14
   276b9:	c3                   	retq   
   276ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   276c0:	44 8b ab 6c 01 00 00 	mov    0x16c(%rbx),%r13d
   276c7:	41 8d 4d 01          	lea    0x1(%r13),%ecx
   276cb:	89 8b 6c 01 00 00    	mov    %ecx,0x16c(%rbx)
   276d1:	44 89 2a             	mov    %r13d,(%rdx)
   276d4:	8b 8b 6c 01 00 00    	mov    0x16c(%rbx),%ecx
   276da:	3b 8b 68 01 00 00    	cmp    0x168(%rbx),%ecx
   276e0:	0f 8f 19 9b fe ff    	jg     111ff <poll_modify.cold.22+0x46>
   276e6:	49 63 d5             	movslq %r13d,%rdx
   276e9:	48 8d 3c d0          	lea    (%rax,%rdx,8),%rdi
   276ed:	44 89 27             	mov    %r12d,(%rdi)
   276f0:	85 ed                	test   %ebp,%ebp
   276f2:	75 a9                	jne    2769d <poll_modify+0x5d>
   276f4:	48 8b 8b 70 01 00 00 	mov    0x170(%rbx),%rcx
   276fb:	42 c7 04 b1 ff ff ff 	movl   $0xffffffff,(%rcx,%r14,4)
   27702:	ff 
   27703:	8b b3 6c 01 00 00    	mov    0x16c(%rbx),%esi
   27709:	8d 56 ff             	lea    -0x1(%rsi),%edx
   2770c:	89 93 6c 01 00 00    	mov    %edx,0x16c(%rbx)
   27712:	44 39 ea             	cmp    %r13d,%edx
   27715:	7e 9a                	jle    276b1 <poll_modify+0x71>
   27717:	48 63 d2             	movslq %edx,%rdx
   2771a:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   2771e:	48 89 07             	mov    %rax,(%rdi)
   27721:	48 98                	cltq   
   27723:	44 89 2c 81          	mov    %r13d,(%rcx,%rax,4)
   27727:	5b                   	pop    %rbx
   27728:	5d                   	pop    %rbp
   27729:	41 5c                	pop    %r12
   2772b:	41 5d                	pop    %r13
   2772d:	41 5e                	pop    %r14
   2772f:	c3                   	retq   
   27730:	c3                   	retq   
   27731:	48 8d 0d a0 b9 01 00 	lea    0x1b9a0(%rip),%rcx        # 430d8 <__PRETTY_FUNCTION__.11075>
   27738:	ba 49 00 00 00       	mov    $0x49,%edx
   2773d:	48 8d 35 22 ab 01 00 	lea    0x1ab22(%rip),%rsi        # 42266 <__FUNCTION__.3752+0x26>
   27744:	48 8d 3d 25 ab 01 00 	lea    0x1ab25(%rip),%rdi        # 42270 <__FUNCTION__.3752+0x30>
   2774b:	e8 b0 88 fe ff       	callq  10000 <__assert_fail@plt>

0000000000027750 <iouring_enter.part.7>:
   27750:	50                   	push   %rax
   27751:	58                   	pop    %rax
   27752:	48 8d 0d cf b9 01 00 	lea    0x1b9cf(%rip),%rcx        # 43128 <__PRETTY_FUNCTION__.10973>
   27759:	ba f0 00 00 00       	mov    $0xf0,%edx
   2775e:	48 8d 35 20 ab 01 00 	lea    0x1ab20(%rip),%rsi        # 42285 <__FUNCTION__.3752+0x45>
   27765:	48 8d 3d 04 af 01 00 	lea    0x1af04(%rip),%rdi        # 42670 <__FUNCTION__.3752+0x430>
   2776c:	48 83 ec 08          	sub    $0x8,%rsp
   27770:	e8 8b 88 fe ff       	callq  10000 <__assert_fail@plt>

0000000000027775 <.annobin_infy_del.start>:
   27775:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2777c:	00 00 00 00 

0000000000027780 <infy_del>:
   27780:	8b 86 88 01 00 00    	mov    0x188(%rsi),%eax
   27786:	85 c0                	test   %eax,%eax
   27788:	78 46                	js     277d0 <infy_del+0x50>
   2778a:	c7 86 88 01 00 00 fe 	movl   $0xfffffffe,0x188(%rsi)
   27791:	ff ff ff 
   27794:	89 c2                	mov    %eax,%edx
   27796:	83 e2 0f             	and    $0xf,%edx
   27799:	48 8d 8c d7 68 03 00 	lea    0x368(%rdi,%rdx,8),%rcx
   277a0:	00 
   277a1:	48 8b 94 d7 68 03 00 	mov    0x368(%rdi,%rdx,8),%rdx
   277a8:	00 
   277a9:	48 85 d2             	test   %rdx,%rdx
   277ac:	74 0c                	je     277ba <infy_del+0x3a>
   277ae:	48 39 d6             	cmp    %rdx,%rsi
   277b1:	75 25                	jne    277d8 <infy_del+0x58>
   277b3:	48 8b 56 20          	mov    0x20(%rsi),%rdx
   277b7:	48 89 11             	mov    %rdx,(%rcx)
   277ba:	8b bf 28 03 00 00    	mov    0x328(%rdi),%edi
   277c0:	89 c6                	mov    %eax,%esi
   277c2:	e9 29 92 fe ff       	jmpq   109f0 <inotify_rm_watch@plt>
   277c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   277ce:	00 00 
   277d0:	c3                   	retq   
   277d1:	48 89 ca             	mov    %rcx,%rdx
   277d4:	0f 1f 40 00          	nopl   0x0(%rax)
   277d8:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
   277dc:	48 85 c9             	test   %rcx,%rcx
   277df:	74 d9                	je     277ba <infy_del+0x3a>
   277e1:	48 39 ce             	cmp    %rcx,%rsi
   277e4:	75 eb                	jne    277d1 <infy_del+0x51>
   277e6:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
   277ea:	eb c7                	jmp    277b3 <infy_del+0x33>

00000000000277ec <.annobin_infy_del.end>:
   277ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000277f0 <select_modify>:
   277f0:	f3 0f 1e fa          	endbr64 
   277f4:	39 ca                	cmp    %ecx,%edx
   277f6:	0f 84 a4 00 00 00    	je     278a0 <select_modify+0xb0>
   277fc:	41 57                	push   %r15
   277fe:	89 f0                	mov    %esi,%eax
   27800:	41 56                	push   %r14
   27802:	41 55                	push   %r13
   27804:	41 54                	push   %r12
   27806:	41 89 cc             	mov    %ecx,%r12d
   27809:	55                   	push   %rbp
   2780a:	48 89 fd             	mov    %rdi,%rbp
   2780d:	53                   	push   %rbx
   2780e:	8d 5e 3f             	lea    0x3f(%rsi),%ebx
   27811:	48 83 ec 18          	sub    $0x18,%rsp
   27815:	85 f6                	test   %esi,%esi
   27817:	48 8b bf 38 01 00 00 	mov    0x138(%rdi),%rdi
   2781e:	0f 49 de             	cmovns %esi,%ebx
   27821:	c1 f8 1f             	sar    $0x1f,%eax
   27824:	c1 e8 1a             	shr    $0x1a,%eax
   27827:	8d 0c 06             	lea    (%rsi,%rax,1),%ecx
   2782a:	c1 fb 06             	sar    $0x6,%ebx
   2782d:	83 e1 3f             	and    $0x3f,%ecx
   27830:	29 c1                	sub    %eax,%ecx
   27832:	b8 01 00 00 00       	mov    $0x1,%eax
   27837:	48 d3 e0             	shl    %cl,%rax
   2783a:	49 89 c7             	mov    %rax,%r15
   2783d:	39 9d 58 01 00 00    	cmp    %ebx,0x158(%rbp)
   27843:	7e 63                	jle    278a8 <select_modify+0xb8>
   27845:	48 8b b5 48 01 00 00 	mov    0x148(%rbp),%rsi
   2784c:	48 63 db             	movslq %ebx,%rbx
   2784f:	4d 89 f8             	mov    %r15,%r8
   27852:	48 c1 e3 03          	shl    $0x3,%rbx
   27856:	49 f7 d0             	not    %r8
   27859:	48 01 df             	add    %rbx,%rdi
   2785c:	4c 89 c0             	mov    %r8,%rax
   2785f:	48 8b 17             	mov    (%rdi),%rdx
   27862:	48 21 d0             	and    %rdx,%rax
   27865:	4c 09 fa             	or     %r15,%rdx
   27868:	41 f6 c4 01          	test   $0x1,%r12b
   2786c:	48 0f 44 d0          	cmove  %rax,%rdx
   27870:	48 01 f3             	add    %rsi,%rbx
   27873:	48 89 17             	mov    %rdx,(%rdi)
   27876:	48 8b 03             	mov    (%rbx),%rax
   27879:	49 21 c0             	and    %rax,%r8
   2787c:	4c 09 f8             	or     %r15,%rax
   2787f:	41 83 e4 02          	and    $0x2,%r12d
   27883:	49 0f 44 c0          	cmove  %r8,%rax
   27887:	48 89 03             	mov    %rax,(%rbx)
   2788a:	48 83 c4 18          	add    $0x18,%rsp
   2788e:	5b                   	pop    %rbx
   2788f:	5d                   	pop    %rbp
   27890:	41 5c                	pop    %r12
   27892:	41 5d                	pop    %r13
   27894:	41 5e                	pop    %r14
   27896:	41 5f                	pop    %r15
   27898:	c3                   	retq   
   27899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   278a0:	c3                   	retq   
   278a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   278a8:	44 8d 73 01          	lea    0x1(%rbx),%r14d
   278ac:	46 8d 2c f5 00 00 00 	lea    0x0(,%r14,8),%r13d
   278b3:	00 
   278b4:	4d 63 ed             	movslq %r13d,%r13
   278b7:	4c 89 ee             	mov    %r13,%rsi
   278ba:	ff 15 d8 ea 22 00    	callq  *0x22ead8(%rip)        # 256398 <alloc>
   278c0:	4d 85 ed             	test   %r13,%r13
   278c3:	0f 95 44 24 0f       	setne  0xf(%rsp)
   278c8:	0f b6 7c 24 0f       	movzbl 0xf(%rsp),%edi
   278cd:	48 85 c0             	test   %rax,%rax
   278d0:	75 0e                	jne    278e0 <select_modify+0xf0>
   278d2:	40 84 ff             	test   %dil,%dil
   278d5:	74 09                	je     278e0 <select_modify+0xf0>
   278d7:	4c 89 ef             	mov    %r13,%rdi
   278da:	e8 11 fd ff ff       	callq  275f0 <ev_realloc.part.5>
   278df:	90                   	nop
   278e0:	48 89 85 38 01 00 00 	mov    %rax,0x138(%rbp)
   278e7:	48 8b bd 40 01 00 00 	mov    0x140(%rbp),%rdi
   278ee:	4c 89 ee             	mov    %r13,%rsi
   278f1:	ff 15 a1 ea 22 00    	callq  *0x22eaa1(%rip)        # 256398 <alloc>
   278f7:	48 85 c0             	test   %rax,%rax
   278fa:	75 14                	jne    27910 <select_modify+0x120>
   278fc:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   27901:	74 0d                	je     27910 <select_modify+0x120>
   27903:	4c 89 ef             	mov    %r13,%rdi
   27906:	e8 e5 fc ff ff       	callq  275f0 <ev_realloc.part.5>
   2790b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27910:	48 89 85 40 01 00 00 	mov    %rax,0x140(%rbp)
   27917:	48 8b bd 48 01 00 00 	mov    0x148(%rbp),%rdi
   2791e:	4c 89 ee             	mov    %r13,%rsi
   27921:	ff 15 71 ea 22 00    	callq  *0x22ea71(%rip)        # 256398 <alloc>
   27927:	48 85 c0             	test   %rax,%rax
   2792a:	75 14                	jne    27940 <select_modify+0x150>
   2792c:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   27931:	74 0d                	je     27940 <select_modify+0x150>
   27933:	4c 89 ef             	mov    %r13,%rdi
   27936:	e8 b5 fc ff ff       	callq  275f0 <ev_realloc.part.5>
   2793b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27940:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
   27947:	48 8b bd 50 01 00 00 	mov    0x150(%rbp),%rdi
   2794e:	4c 89 ee             	mov    %r13,%rsi
   27951:	ff 15 41 ea 22 00    	callq  *0x22ea41(%rip)        # 256398 <alloc>
   27957:	48 85 c0             	test   %rax,%rax
   2795a:	75 14                	jne    27970 <select_modify+0x180>
   2795c:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
   27961:	74 0d                	je     27970 <select_modify+0x180>
   27963:	4c 89 ef             	mov    %r13,%rdi
   27966:	e8 85 fc ff ff       	callq  275f0 <ev_realloc.part.5>
   2796b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   27970:	8b 95 58 01 00 00    	mov    0x158(%rbp),%edx
   27976:	48 89 85 50 01 00 00 	mov    %rax,0x150(%rbp)
   2797d:	48 8b b5 48 01 00 00 	mov    0x148(%rbp),%rsi
   27984:	48 8b bd 38 01 00 00 	mov    0x138(%rbp),%rdi
   2798b:	44 39 f2             	cmp    %r14d,%edx
   2798e:	0f 8d b8 fe ff ff    	jge    2784c <select_modify+0x5c>
   27994:	89 d9                	mov    %ebx,%ecx
   27996:	4c 63 c2             	movslq %edx,%r8
   27999:	29 d1                	sub    %edx,%ecx
   2799b:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
   279a2:	00 
   279a3:	49 8d 54 08 01       	lea    0x1(%r8,%rcx,1),%rdx
   279a8:	48 c1 e2 03          	shl    $0x3,%rdx
   279ac:	0f 1f 40 00          	nopl   0x0(%rax)
   279b0:	48 c7 04 06 00 00 00 	movq   $0x0,(%rsi,%rax,1)
   279b7:	00 
   279b8:	48 c7 04 07 00 00 00 	movq   $0x0,(%rdi,%rax,1)
   279bf:	00 
   279c0:	48 83 c0 08          	add    $0x8,%rax
   279c4:	48 39 c2             	cmp    %rax,%rdx
   279c7:	75 e7                	jne    279b0 <select_modify+0x1c0>
   279c9:	44 89 b5 58 01 00 00 	mov    %r14d,0x158(%rbp)
   279d0:	e9 77 fe ff ff       	jmpq   2784c <select_modify+0x5c>

00000000000279d5 <.annobin_ev_time.start>:
   279d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   279dc:	00 00 00 00 

00000000000279e0 <ev_time>:
   279e0:	f3 0f 1e fa          	endbr64 
   279e4:	48 83 ec 28          	sub    $0x28,%rsp
   279e8:	31 f6                	xor    %esi,%esi
   279ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   279f1:	00 00 
   279f3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   279f8:	31 c0                	xor    %eax,%eax
   279fa:	48 89 e7             	mov    %rsp,%rdi
   279fd:	e8 de 85 fe ff       	callq  ffe0 <gettimeofday@plt>
   27a02:	66 0f ef c0          	pxor   %xmm0,%xmm0
   27a06:	66 0f ef c9          	pxor   %xmm1,%xmm1
   27a0a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   27a0f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   27a16:	00 00 
   27a18:	f2 48 0f 2a 44 24 08 	cvtsi2sdq 0x8(%rsp),%xmm0
   27a1f:	f2 0f 59 05 59 b7 01 	mulsd  0x1b759(%rip),%xmm0        # 43180 <__PRETTY_FUNCTION__.11024+0x40>
   27a26:	00 
   27a27:	f2 48 0f 2a 0c 24    	cvtsi2sdq (%rsp),%xmm1
   27a2d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   27a31:	75 05                	jne    27a38 <ev_time+0x58>
   27a33:	48 83 c4 28          	add    $0x28,%rsp
   27a37:	c3                   	retq   
   27a38:	e8 13 84 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000027a3d <.annobin_ev_time.end>:
   27a3d:	0f 1f 00             	nopl   (%rax)

0000000000027a40 <timerfdcb>:
   27a40:	f3 0f 1e fa          	endbr64 
   27a44:	53                   	push   %rbx
   27a45:	66 0f ef c0          	pxor   %xmm0,%xmm0
   27a49:	48 89 fb             	mov    %rdi,%rbx
   27a4c:	31 c9                	xor    %ecx,%ecx
   27a4e:	be 03 00 00 00       	mov    $0x3,%esi
   27a53:	48 83 ec 30          	sub    $0x30,%rsp
   27a57:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   27a5e:	00 00 
   27a60:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   27a65:	31 c0                	xor    %eax,%eax
   27a67:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   27a6c:	48 89 e2             	mov    %rsp,%rdx
   27a6f:	0f 29 04 24          	movaps %xmm0,(%rsp)
   27a73:	f2 0f 10 05 0d b7 01 	movsd  0x1b70d(%rip),%xmm0        # 43188 <__PRETTY_FUNCTION__.11024+0x48>
   27a7a:	00 
   27a7b:	f2 0f 58 07          	addsd  (%rdi),%xmm0
   27a7f:	8b bf a0 04 00 00    	mov    0x4a0(%rdi),%edi
   27a85:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   27a8a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   27a8f:	e8 cc 8d fe ff       	callq  10860 <timerfd_settime@plt>
   27a94:	e8 47 ff ff ff       	callq  279e0 <ev_time>
   27a99:	48 89 df             	mov    %rbx,%rdi
   27a9c:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   27aa0:	e8 43 95 fe ff       	callq  10fe8 <periodics_reschedule>
   27aa5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   27aaa:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   27ab1:	00 00 
   27ab3:	75 06                	jne    27abb <timerfdcb+0x7b>
   27ab5:	48 83 c4 30          	add    $0x30,%rsp
   27ab9:	5b                   	pop    %rbx
   27aba:	c3                   	retq   
   27abb:	e8 90 83 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000027ac0 <ev_now>:
   27ac0:	f3 0f 1e fa          	endbr64 
   27ac4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
   27ac8:	c3                   	retq   

0000000000027ac9 <.annobin_ev_now.end>:
   27ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000027ad0 <ev_sleep>:
   27ad0:	f3 0f 1e fa          	endbr64 
   27ad4:	48 83 ec 28          	sub    $0x28,%rsp
   27ad8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   27adf:	00 00 
   27ae1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   27ae6:	31 c0                	xor    %eax,%eax
   27ae8:	66 0f 2f 05 88 b6 01 	comisd 0x1b688(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   27aef:	00 
   27af0:	76 32                	jbe    27b24 <ev_sleep+0x54>
   27af2:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   27af7:	66 0f ef c9          	pxor   %xmm1,%xmm1
   27afb:	48 89 e7             	mov    %rsp,%rdi
   27afe:	31 f6                	xor    %esi,%esi
   27b00:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
   27b05:	48 89 04 24          	mov    %rax,(%rsp)
   27b09:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   27b0d:	f2 0f 59 05 7b b6 01 	mulsd  0x1b67b(%rip),%xmm0        # 43190 <__PRETTY_FUNCTION__.11024+0x50>
   27b14:	00 
   27b15:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   27b1a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   27b1f:	e8 0c 84 fe ff       	callq  ff30 <nanosleep@plt>
   27b24:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   27b29:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   27b30:	00 00 
   27b32:	75 05                	jne    27b39 <ev_sleep+0x69>
   27b34:	48 83 c4 28          	add    $0x28,%rsp
   27b38:	c3                   	retq   
   27b39:	e8 12 83 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000027b3e <.annobin_ev_feed_event.start>:
   27b3e:	66 90                	xchg   %ax,%ax

0000000000027b40 <ev_feed_event>:
   27b40:	f3 0f 1e fa          	endbr64 
   27b44:	41 55                	push   %r13
   27b46:	41 54                	push   %r12
   27b48:	41 89 d4             	mov    %edx,%r12d
   27b4b:	55                   	push   %rbp
   27b4c:	48 89 fd             	mov    %rdi,%rbp
   27b4f:	53                   	push   %rbx
   27b50:	48 89 f3             	mov    %rsi,%rbx
   27b53:	48 83 ec 08          	sub    $0x8,%rsp
   27b57:	48 63 46 08          	movslq 0x8(%rsi),%rax
   27b5b:	48 63 56 04          	movslq 0x4(%rsi),%rdx
   27b5f:	4c 8d 2c c7          	lea    (%rdi,%rax,8),%r13
   27b63:	49 8b 75 40          	mov    0x40(%r13),%rsi
   27b67:	85 d2                	test   %edx,%edx
   27b69:	75 45                	jne    27bb0 <ev_feed_event+0x70>
   27b6b:	48 8d 54 85 00       	lea    0x0(%rbp,%rax,4),%rdx
   27b70:	8d 78 02             	lea    0x2(%rax),%edi
   27b73:	8b 42 74             	mov    0x74(%rdx),%eax
   27b76:	8d 48 01             	lea    0x1(%rax),%ecx
   27b79:	89 4a 74             	mov    %ecx,0x74(%rdx)
   27b7c:	89 4b 04             	mov    %ecx,0x4(%rbx)
   27b7f:	3b 4a 60             	cmp    0x60(%rdx),%ecx
   27b82:	0f 8f 5b 97 fe ff    	jg     112e3 <ev_feed_event.cold.23>
   27b88:	48 63 c9             	movslq %ecx,%rcx
   27b8b:	48 c1 e1 04          	shl    $0x4,%rcx
   27b8f:	48 8d 44 0e f0       	lea    -0x10(%rsi,%rcx,1),%rax
   27b94:	48 89 18             	mov    %rbx,(%rax)
   27b97:	44 89 60 08          	mov    %r12d,0x8(%rax)
   27b9b:	c7 85 80 00 00 00 04 	movl   $0x4,0x80(%rbp)
   27ba2:	00 00 00 
   27ba5:	48 83 c4 08          	add    $0x8,%rsp
   27ba9:	5b                   	pop    %rbx
   27baa:	5d                   	pop    %rbp
   27bab:	41 5c                	pop    %r12
   27bad:	41 5d                	pop    %r13
   27baf:	c3                   	retq   
   27bb0:	48 c1 e2 04          	shl    $0x4,%rdx
   27bb4:	44 09 64 16 f8       	or     %r12d,-0x8(%rsi,%rdx,1)
   27bb9:	eb e0                	jmp    27b9b <ev_feed_event+0x5b>

0000000000027bbb <.annobin_childcb.start>:
   27bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000027bc0 <childcb>:
   27bc0:	f3 0f 1e fa          	endbr64 
   27bc4:	41 56                	push   %r14
   27bc6:	ba 0b 00 00 00       	mov    $0xb,%edx
   27bcb:	49 89 fe             	mov    %rdi,%r14
   27bce:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   27bd3:	41 55                	push   %r13
   27bd5:	41 54                	push   %r12
   27bd7:	49 89 f4             	mov    %rsi,%r12
   27bda:	55                   	push   %rbp
   27bdb:	53                   	push   %rbx
   27bdc:	48 83 ec 10          	sub    $0x10,%rsp
   27be0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   27be7:	00 00 
   27be9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   27bee:	31 c0                	xor    %eax,%eax
   27bf0:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
   27bf5:	48 89 de             	mov    %rbx,%rsi
   27bf8:	e8 23 8b fe ff       	callq  10720 <waitpid@plt>
   27bfd:	85 c0                	test   %eax,%eax
   27bff:	7f 2f                	jg     27c30 <childcb+0x70>
   27c01:	e8 0a 7f fe ff       	callq  fb10 <__errno_location@plt>
   27c06:	83 38 16             	cmpl   $0x16,(%rax)
   27c09:	0f 84 19 01 00 00    	je     27d28 <childcb+0x168>
   27c0f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   27c14:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   27c1b:	00 00 
   27c1d:	0f 85 26 01 00 00    	jne    27d49 <childcb+0x189>
   27c23:	48 83 c4 10          	add    $0x10,%rsp
   27c27:	5b                   	pop    %rbx
   27c28:	5d                   	pop    %rbp
   27c29:	41 5c                	pop    %r12
   27c2b:	41 5d                	pop    %r13
   27c2d:	41 5e                	pop    %r14
   27c2f:	c3                   	retq   
   27c30:	89 c5                	mov    %eax,%ebp
   27c32:	ba 00 04 00 00       	mov    $0x400,%edx
   27c37:	4c 89 e6             	mov    %r12,%rsi
   27c3a:	4c 89 f7             	mov    %r14,%rdi
   27c3d:	e8 fe fe ff ff       	callq  27b40 <ev_feed_event>
   27c42:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   27c47:	89 ea                	mov    %ebp,%edx
   27c49:	41 80 fc 7f          	cmp    $0x7f,%r12b
   27c4d:	41 0f 94 c5          	sete   %r13b
   27c51:	41 81 fc ff ff 00 00 	cmp    $0xffff,%r12d
   27c58:	0f 94 c0             	sete   %al
   27c5b:	83 e2 0f             	and    $0xf,%edx
   27c5e:	41 09 c5             	or     %eax,%r13d
   27c61:	48 8d 05 18 f9 22 00 	lea    0x22f918(%rip),%rax        # 257580 <childs>
   27c68:	48 8b 1c d0          	mov    (%rax,%rdx,8),%rbx
   27c6c:	48 85 db             	test   %rbx,%rbx
   27c6f:	74 5e                	je     27ccf <childcb+0x10f>
   27c71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   27c78:	8b 43 2c             	mov    0x2c(%rbx),%eax
   27c7b:	85 c0                	test   %eax,%eax
   27c7d:	74 04                	je     27c83 <childcb+0xc3>
   27c7f:	39 c5                	cmp    %eax,%ebp
   27c81:	75 29                	jne    27cac <childcb+0xec>
   27c83:	45 84 ed             	test   %r13b,%r13b
   27c86:	74 06                	je     27c8e <childcb+0xce>
   27c88:	f6 43 28 01          	testb  $0x1,0x28(%rbx)
   27c8c:	74 1e                	je     27cac <childcb+0xec>
   27c8e:	89 6b 30             	mov    %ebp,0x30(%rbx)
   27c91:	ba 00 08 00 00       	mov    $0x800,%edx
   27c96:	48 89 de             	mov    %rbx,%rsi
   27c99:	4c 89 f7             	mov    %r14,%rdi
   27c9c:	c7 43 08 02 00 00 00 	movl   $0x2,0x8(%rbx)
   27ca3:	44 89 63 34          	mov    %r12d,0x34(%rbx)
   27ca7:	e8 94 fe ff ff       	callq  27b40 <ev_feed_event>
   27cac:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   27cb0:	48 85 db             	test   %rbx,%rbx
   27cb3:	75 c3                	jne    27c78 <childcb+0xb8>
   27cb5:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
   27cba:	41 80 fc 7f          	cmp    $0x7f,%r12b
   27cbe:	41 0f 94 c5          	sete   %r13b
   27cc2:	41 81 fc ff ff 00 00 	cmp    $0xffff,%r12d
   27cc9:	0f 94 c0             	sete   %al
   27ccc:	41 09 c5             	or     %eax,%r13d
   27ccf:	48 8b 1d aa f8 22 00 	mov    0x22f8aa(%rip),%rbx        # 257580 <childs>
   27cd6:	48 85 db             	test   %rbx,%rbx
   27cd9:	0f 84 30 ff ff ff    	je     27c0f <childcb+0x4f>
   27cdf:	90                   	nop
   27ce0:	8b 43 2c             	mov    0x2c(%rbx),%eax
   27ce3:	39 c5                	cmp    %eax,%ebp
   27ce5:	74 04                	je     27ceb <childcb+0x12b>
   27ce7:	85 c0                	test   %eax,%eax
   27ce9:	75 29                	jne    27d14 <childcb+0x154>
   27ceb:	45 84 ed             	test   %r13b,%r13b
   27cee:	74 06                	je     27cf6 <childcb+0x136>
   27cf0:	f6 43 28 01          	testb  $0x1,0x28(%rbx)
   27cf4:	74 1e                	je     27d14 <childcb+0x154>
   27cf6:	89 6b 30             	mov    %ebp,0x30(%rbx)
   27cf9:	ba 00 08 00 00       	mov    $0x800,%edx
   27cfe:	48 89 de             	mov    %rbx,%rsi
   27d01:	4c 89 f7             	mov    %r14,%rdi
   27d04:	c7 43 08 02 00 00 00 	movl   $0x2,0x8(%rbx)
   27d0b:	44 89 63 34          	mov    %r12d,0x34(%rbx)
   27d0f:	e8 2c fe ff ff       	callq  27b40 <ev_feed_event>
   27d14:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   27d18:	48 85 db             	test   %rbx,%rbx
   27d1b:	75 c3                	jne    27ce0 <childcb+0x120>
   27d1d:	e9 ed fe ff ff       	jmpq   27c0f <childcb+0x4f>
   27d22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   27d28:	ba 03 00 00 00       	mov    $0x3,%edx
   27d2d:	48 89 de             	mov    %rbx,%rsi
   27d30:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   27d35:	e8 e6 89 fe ff       	callq  10720 <waitpid@plt>
   27d3a:	89 c5                	mov    %eax,%ebp
   27d3c:	85 c0                	test   %eax,%eax
   27d3e:	0f 8f ee fe ff ff    	jg     27c32 <childcb+0x72>
   27d44:	e9 c6 fe ff ff       	jmpq   27c0f <childcb+0x4f>
   27d49:	e8 02 81 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000027d4e <.annobin_childcb.end>:
   27d4e:	66 90                	xchg   %ax,%ax

0000000000027d50 <epoll_poll>:
   27d50:	f3 0f 1e fa          	endbr64 
   27d54:	41 57                	push   %r15
   27d56:	41 56                	push   %r14
   27d58:	41 55                	push   %r13
   27d5a:	41 54                	push   %r12
   27d5c:	55                   	push   %rbp
   27d5d:	53                   	push   %rbx
   27d5e:	48 89 fb             	mov    %rdi,%rbx
   27d61:	48 83 ec 18          	sub    $0x18,%rsp
   27d65:	8b 87 98 01 00 00    	mov    0x198(%rdi),%eax
   27d6b:	85 c0                	test   %eax,%eax
   27d6d:	0f 85 5d 02 00 00    	jne    27fd0 <epoll_poll+0x280>
   27d73:	48 8b 83 f0 04 00 00 	mov    0x4f0(%rbx),%rax
   27d7a:	48 85 c0             	test   %rax,%rax
   27d7d:	0f 85 65 02 00 00    	jne    27fe8 <epoll_poll+0x298>
   27d83:	f2 0f 59 05 45 77 01 	mulsd  0x17745(%rip),%xmm0        # 3f4d0 <f58_prefix+0x6d>
   27d8a:	00 
   27d8b:	8b 93 88 01 00 00    	mov    0x188(%rbx),%edx
   27d91:	f2 0f 58 05 ff b3 01 	addsd  0x1b3ff(%rip),%xmm0        # 43198 <__PRETTY_FUNCTION__.11024+0x58>
   27d98:	00 
   27d99:	48 8b b3 80 01 00 00 	mov    0x180(%rbx),%rsi
   27da0:	8b bb c4 00 00 00    	mov    0xc4(%rbx),%edi
   27da6:	f2 0f 2c c8          	cvttsd2si %xmm0,%ecx
   27daa:	e8 c1 88 fe ff       	callq  10670 <epoll_wait@plt>
   27daf:	41 89 c6             	mov    %eax,%r14d
   27db2:	48 8b 83 f8 04 00 00 	mov    0x4f8(%rbx),%rax
   27db9:	48 85 c0             	test   %rax,%rax
   27dbc:	0f 85 3e 02 00 00    	jne    28000 <epoll_poll+0x2b0>
   27dc2:	45 85 f6             	test   %r14d,%r14d
   27dc5:	0f 88 85 01 00 00    	js     27f50 <epoll_poll+0x200>
   27dcb:	0f 84 c1 00 00 00    	je     27e92 <epoll_poll+0x142>
   27dd1:	41 8d 46 ff          	lea    -0x1(%r14),%eax
   27dd5:	45 31 ff             	xor    %r15d,%r15d
   27dd8:	4c 8d 6c 40 03       	lea    0x3(%rax,%rax,2),%r13
   27ddd:	49 c1 e5 02          	shl    $0x2,%r13
   27de1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   27de8:	48 8b 8b 80 01 00 00 	mov    0x180(%rbx),%rcx
   27def:	48 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%rax
   27df6:	31 f6                	xor    %esi,%esi
   27df8:	4c 01 f9             	add    %r15,%rcx
   27dfb:	48 8b 51 04          	mov    0x4(%rcx),%rdx
   27dff:	8b 39                	mov    (%rcx),%edi
   27e01:	48 63 ea             	movslq %edx,%rbp
   27e04:	48 c1 e5 04          	shl    $0x4,%rbp
   27e08:	48 01 e8             	add    %rbp,%rax
   27e0b:	40 f6 c7 1c          	test   $0x1c,%dil
   27e0f:	40 0f 95 c6          	setne  %sil
   27e13:	45 31 e4             	xor    %r12d,%r12d
   27e16:	44 0f b6 48 08       	movzbl 0x8(%rax),%r9d
   27e1b:	01 f6                	add    %esi,%esi
   27e1d:	83 e7 19             	and    $0x19,%edi
   27e20:	41 0f 95 c4          	setne  %r12b
   27e24:	45 89 c8             	mov    %r9d,%r8d
   27e27:	41 09 f4             	or     %esi,%r12d
   27e2a:	48 89 d6             	mov    %rdx,%rsi
   27e2d:	48 c1 ee 20          	shr    $0x20,%rsi
   27e31:	39 70 0c             	cmp    %esi,0xc(%rax)
   27e34:	0f 85 66 01 00 00    	jne    27fa0 <epoll_poll+0x250>
   27e3a:	44 89 ce             	mov    %r9d,%esi
   27e3d:	f7 d6                	not    %esi
   27e3f:	44 85 e6             	test   %r12d,%esi
   27e42:	0f 85 28 01 00 00    	jne    27f70 <epoll_poll+0x220>
   27e48:	80 78 09 00          	cmpb   $0x0,0x9(%rax)
   27e4c:	75 37                	jne    27e85 <epoll_poll+0x135>
   27e4e:	48 8b 28             	mov    (%rax),%rbp
   27e51:	48 85 ed             	test   %rbp,%rbp
   27e54:	75 13                	jne    27e69 <epoll_poll+0x119>
   27e56:	eb 2d                	jmp    27e85 <epoll_poll+0x135>
   27e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   27e5f:	00 
   27e60:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   27e64:	48 85 ed             	test   %rbp,%rbp
   27e67:	74 1c                	je     27e85 <epoll_poll+0x135>
   27e69:	44 89 e2             	mov    %r12d,%edx
   27e6c:	23 55 2c             	and    0x2c(%rbp),%edx
   27e6f:	74 ef                	je     27e60 <epoll_poll+0x110>
   27e71:	48 89 ee             	mov    %rbp,%rsi
   27e74:	48 89 df             	mov    %rbx,%rdi
   27e77:	e8 c4 fc ff ff       	callq  27b40 <ev_feed_event>
   27e7c:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   27e80:	48 85 ed             	test   %rbp,%rbp
   27e83:	75 e4                	jne    27e69 <epoll_poll+0x119>
   27e85:	49 83 c7 0c          	add    $0xc,%r15
   27e89:	4d 39 fd             	cmp    %r15,%r13
   27e8c:	0f 85 56 ff ff ff    	jne    27de8 <epoll_poll+0x98>
   27e92:	44 39 b3 88 01 00 00 	cmp    %r14d,0x188(%rbx)
   27e99:	0f 84 71 01 00 00    	je     28010 <epoll_poll+0x2c0>
   27e9f:	48 63 83 98 01 00 00 	movslq 0x198(%rbx),%rax
   27ea6:	89 c2                	mov    %eax,%edx
   27ea8:	4c 8d 2c 85 fc ff ff 	lea    -0x4(,%rax,4),%r13
   27eaf:	ff 
   27eb0:	48 29 d0             	sub    %rdx,%rax
   27eb3:	4c 8d 34 85 fc ff ff 	lea    -0x4(,%rax,4),%r14
   27eba:	ff 
   27ebb:	eb 22                	jmp    27edf <epoll_poll+0x18f>
   27ebd:	0f 1f 00             	nopl   (%rax)
   27ec0:	8b bb 98 01 00 00    	mov    0x198(%rbx),%edi
   27ec6:	8d 57 ff             	lea    -0x1(%rdi),%edx
   27ec9:	89 93 98 01 00 00    	mov    %edx,0x198(%rbx)
   27ecf:	48 63 d2             	movslq %edx,%rdx
   27ed2:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
   27ed5:	89 11                	mov    %edx,(%rcx)
   27ed7:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
   27edb:	49 83 ed 04          	sub    $0x4,%r13
   27edf:	4d 39 ee             	cmp    %r13,%r14
   27ee2:	74 7a                	je     27f5e <epoll_poll+0x20e>
   27ee4:	48 8b b3 90 01 00 00 	mov    0x190(%rbx),%rsi
   27eeb:	4a 8d 0c 2e          	lea    (%rsi,%r13,1),%rcx
   27eef:	48 63 01             	movslq (%rcx),%rax
   27ef2:	48 c1 e0 04          	shl    $0x4,%rax
   27ef6:	48 03 83 e0 00 00 00 	add    0xe0(%rbx),%rax
   27efd:	44 0f b6 60 08       	movzbl 0x8(%rax),%r12d
   27f02:	41 83 e4 03          	and    $0x3,%r12d
   27f06:	80 78 0a 00          	cmpb   $0x0,0xa(%rax)
   27f0a:	79 b4                	jns    27ec0 <epoll_poll+0x170>
   27f0c:	45 84 e4             	test   %r12b,%r12b
   27f0f:	74 af                	je     27ec0 <epoll_poll+0x170>
   27f11:	80 78 09 00          	cmpb   $0x0,0x9(%rax)
   27f15:	45 0f b6 e4          	movzbl %r12b,%r12d
   27f19:	75 c0                	jne    27edb <epoll_poll+0x18b>
   27f1b:	48 8b 28             	mov    (%rax),%rbp
   27f1e:	48 85 ed             	test   %rbp,%rbp
   27f21:	75 0e                	jne    27f31 <epoll_poll+0x1e1>
   27f23:	eb b6                	jmp    27edb <epoll_poll+0x18b>
   27f25:	0f 1f 00             	nopl   (%rax)
   27f28:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   27f2c:	48 85 ed             	test   %rbp,%rbp
   27f2f:	74 aa                	je     27edb <epoll_poll+0x18b>
   27f31:	44 89 e2             	mov    %r12d,%edx
   27f34:	23 55 2c             	and    0x2c(%rbp),%edx
   27f37:	74 ef                	je     27f28 <epoll_poll+0x1d8>
   27f39:	48 89 ee             	mov    %rbp,%rsi
   27f3c:	48 89 df             	mov    %rbx,%rdi
   27f3f:	e8 fc fb ff ff       	callq  27b40 <ev_feed_event>
   27f44:	eb e2                	jmp    27f28 <epoll_poll+0x1d8>
   27f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27f4d:	00 00 00 
   27f50:	e8 bb 7b fe ff       	callq  fb10 <__errno_location@plt>
   27f55:	83 38 04             	cmpl   $0x4,(%rax)
   27f58:	0f 85 a6 93 fe ff    	jne    11304 <epoll_poll.cold.24>
   27f5e:	48 83 c4 18          	add    $0x18,%rsp
   27f62:	5b                   	pop    %rbx
   27f63:	5d                   	pop    %rbp
   27f64:	41 5c                	pop    %r12
   27f66:	41 5d                	pop    %r13
   27f68:	41 5e                	pop    %r14
   27f6a:	41 5f                	pop    %r15
   27f6c:	c3                   	retq   
   27f6d:	0f 1f 00             	nopl   (%rax)
   27f70:	44 88 48 0a          	mov    %r9b,0xa(%rax)
   27f74:	43 8d 04 09          	lea    (%r9,%r9,1),%eax
   27f78:	41 83 e0 01          	and    $0x1,%r8d
   27f7c:	31 f6                	xor    %esi,%esi
   27f7e:	83 e0 04             	and    $0x4,%eax
   27f81:	8b bb c4 00 00 00    	mov    0xc4(%rbx),%edi
   27f87:	41 09 c0             	or     %eax,%r8d
   27f8a:	45 85 c9             	test   %r9d,%r9d
   27f8d:	44 89 01             	mov    %r8d,(%rcx)
   27f90:	40 0f 95 c6          	setne  %sil
   27f94:	83 c6 02             	add    $0x2,%esi
   27f97:	e8 a4 81 fe ff       	callq  10140 <epoll_ctl@plt>
   27f9c:	85 c0                	test   %eax,%eax
   27f9e:	74 20                	je     27fc0 <epoll_poll+0x270>
   27fa0:	49 83 c7 0c          	add    $0xc,%r15
   27fa4:	80 8b 34 01 00 00 02 	orb    $0x2,0x134(%rbx)
   27fab:	4d 39 fd             	cmp    %r15,%r13
   27fae:	0f 85 34 fe ff ff    	jne    27de8 <epoll_poll+0x98>
   27fb4:	e9 d9 fe ff ff       	jmpq   27e92 <epoll_poll+0x142>
   27fb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   27fc0:	48 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%rax
   27fc7:	48 01 e8             	add    %rbp,%rax
   27fca:	e9 79 fe ff ff       	jmpq   27e48 <epoll_poll+0xf8>
   27fcf:	90                   	nop
   27fd0:	48 8b 83 f0 04 00 00 	mov    0x4f0(%rbx),%rax
   27fd7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   27fdb:	48 85 c0             	test   %rax,%rax
   27fde:	0f 84 9f fd ff ff    	je     27d83 <epoll_poll+0x33>
   27fe4:	0f 1f 40 00          	nopl   0x0(%rax)
   27fe8:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   27fee:	48 89 df             	mov    %rbx,%rdi
   27ff1:	ff d0                	callq  *%rax
   27ff3:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   27ff9:	e9 85 fd ff ff       	jmpq   27d83 <epoll_poll+0x33>
   27ffe:	66 90                	xchg   %ax,%ax
   28000:	48 89 df             	mov    %rbx,%rdi
   28003:	ff d0                	callq  *%rax
   28005:	e9 b8 fd ff ff       	jmpq   27dc2 <epoll_poll+0x72>
   2800a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28010:	48 8b bb 80 01 00 00 	mov    0x180(%rbx),%rdi
   28017:	31 f6                	xor    %esi,%esi
   28019:	ff 15 79 e3 22 00    	callq  *0x22e379(%rip)        # 256398 <alloc>
   2801f:	8b 93 88 01 00 00    	mov    0x188(%rbx),%edx
   28025:	8d 42 01             	lea    0x1(%rdx),%eax
   28028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2802f:	00 
   28030:	01 c0                	add    %eax,%eax
   28032:	39 c2                	cmp    %eax,%edx
   28034:	7d fa                	jge    28030 <epoll_poll+0x2e0>
   28036:	8d 14 40             	lea    (%rax,%rax,2),%edx
   28039:	c1 e2 02             	shl    $0x2,%edx
   2803c:	81 fa e0 0f 00 00    	cmp    $0xfe0,%edx
   28042:	76 21                	jbe    28065 <epoll_poll+0x315>
   28044:	81 c2 2b 10 00 00    	add    $0x102b,%edx
   2804a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   28050:	8d 4a e0             	lea    -0x20(%rdx),%ecx
   28053:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
   28058:	89 c8                	mov    %ecx,%eax
   2805a:	c1 f9 1f             	sar    $0x1f,%ecx
   2805d:	f7 ea                	imul   %edx
   2805f:	89 d0                	mov    %edx,%eax
   28061:	d1 f8                	sar    %eax
   28063:	29 c8                	sub    %ecx,%eax
   28065:	89 83 88 01 00 00    	mov    %eax,0x188(%rbx)
   2806b:	48 98                	cltq   
   2806d:	31 ff                	xor    %edi,%edi
   2806f:	48 8d 2c 40          	lea    (%rax,%rax,2),%rbp
   28073:	48 c1 e5 02          	shl    $0x2,%rbp
   28077:	48 89 ee             	mov    %rbp,%rsi
   2807a:	ff 15 18 e3 22 00    	callq  *0x22e318(%rip)        # 256398 <alloc>
   28080:	48 85 c0             	test   %rax,%rax
   28083:	75 13                	jne    28098 <epoll_poll+0x348>
   28085:	48 85 ed             	test   %rbp,%rbp
   28088:	74 0e                	je     28098 <epoll_poll+0x348>
   2808a:	48 89 ef             	mov    %rbp,%rdi
   2808d:	e8 5e f5 ff ff       	callq  275f0 <ev_realloc.part.5>
   28092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28098:	48 89 83 80 01 00 00 	mov    %rax,0x180(%rbx)
   2809f:	e9 fb fd ff ff       	jmpq   27e9f <epoll_poll+0x14f>

00000000000280a4 <.annobin_epoll_poll.end>:
   280a4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   280ab:	00 00 00 00 
   280af:	90                   	nop

00000000000280b0 <ev_feed_fd_event>:
   280b0:	f3 0f 1e fa          	endbr64 
   280b4:	85 f6                	test   %esi,%esi
   280b6:	78 08                	js     280c0 <ev_feed_fd_event+0x10>
   280b8:	39 b7 e8 00 00 00    	cmp    %esi,0xe8(%rdi)
   280be:	7f 08                	jg     280c8 <ev_feed_fd_event+0x18>
   280c0:	c3                   	retq   
   280c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   280c8:	48 63 f6             	movslq %esi,%rsi
   280cb:	41 54                	push   %r12
   280cd:	41 89 d4             	mov    %edx,%r12d
   280d0:	55                   	push   %rbp
   280d1:	48 c1 e6 04          	shl    $0x4,%rsi
   280d5:	48 89 fd             	mov    %rdi,%rbp
   280d8:	53                   	push   %rbx
   280d9:	48 03 b7 e0 00 00 00 	add    0xe0(%rdi),%rsi
   280e0:	48 8b 1e             	mov    (%rsi),%rbx
   280e3:	48 85 db             	test   %rbx,%rbx
   280e6:	75 11                	jne    280f9 <ev_feed_fd_event+0x49>
   280e8:	eb 2b                	jmp    28115 <ev_feed_fd_event+0x65>
   280ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   280f0:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   280f4:	48 85 db             	test   %rbx,%rbx
   280f7:	74 1c                	je     28115 <ev_feed_fd_event+0x65>
   280f9:	44 89 e2             	mov    %r12d,%edx
   280fc:	23 53 2c             	and    0x2c(%rbx),%edx
   280ff:	74 ef                	je     280f0 <ev_feed_fd_event+0x40>
   28101:	48 89 de             	mov    %rbx,%rsi
   28104:	48 89 ef             	mov    %rbp,%rdi
   28107:	e8 34 fa ff ff       	callq  27b40 <ev_feed_event>
   2810c:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   28110:	48 85 db             	test   %rbx,%rbx
   28113:	75 e4                	jne    280f9 <ev_feed_fd_event+0x49>
   28115:	5b                   	pop    %rbx
   28116:	5d                   	pop    %rbp
   28117:	41 5c                	pop    %r12
   28119:	c3                   	retq   

000000000002811a <.annobin_ev_feed_fd_event.end>:
   2811a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000028120 <ev_feed_signal>:
   28120:	f3 0f 1e fa          	endbr64 
   28124:	41 54                	push   %r12
   28126:	55                   	push   %rbp
   28127:	53                   	push   %rbx
   28128:	48 83 ec 10          	sub    $0x10,%rsp
   2812c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28133:	00 00 
   28135:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2813a:	31 c0                	xor    %eax,%eax
   2813c:	83 ef 01             	sub    $0x1,%edi
   2813f:	48 8d 05 ba f4 22 00 	lea    0x22f4ba(%rip),%rax        # 257600 <signals>
   28146:	48 63 ff             	movslq %edi,%rdi
   28149:	48 8d 14 7f          	lea    (%rdi,%rdi,2),%rdx
   2814d:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
   28151:	48 8b 58 08          	mov    0x8(%rax),%rbx
   28155:	48 85 db             	test   %rbx,%rbx
   28158:	74 13                	je     2816d <ev_feed_signal+0x4d>
   2815a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   28160:	0f ae f0             	mfence 
   28163:	8b 83 e8 03 00 00    	mov    0x3e8(%rbx),%eax
   28169:	85 c0                	test   %eax,%eax
   2816b:	74 23                	je     28190 <ev_feed_signal+0x70>
   2816d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   28172:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   28179:	00 00 
   2817b:	0f 85 8c 00 00 00    	jne    2820d <ev_feed_signal+0xed>
   28181:	48 83 c4 10          	add    $0x10,%rsp
   28185:	5b                   	pop    %rbx
   28186:	5d                   	pop    %rbp
   28187:	41 5c                	pop    %r12
   28189:	c3                   	retq   
   2818a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28190:	c7 83 e8 03 00 00 01 	movl   $0x1,0x3e8(%rbx)
   28197:	00 00 00 
   2819a:	c7 83 2c 01 00 00 01 	movl   $0x1,0x12c(%rbx)
   281a1:	00 00 00 
   281a4:	0f ae f0             	mfence 
   281a7:	8b 83 28 01 00 00    	mov    0x128(%rbx),%eax
   281ad:	85 c0                	test   %eax,%eax
   281af:	74 bc                	je     2816d <ev_feed_signal+0x4d>
   281b1:	c7 83 2c 01 00 00 00 	movl   $0x0,0x12c(%rbx)
   281b8:	00 00 00 
   281bb:	e8 50 79 fe ff       	callq  fb10 <__errno_location@plt>
   281c0:	48 89 c5             	mov    %rax,%rbp
   281c3:	44 8b 20             	mov    (%rax),%r12d
   281c6:	8b 83 ec 00 00 00    	mov    0xec(%rbx),%eax
   281cc:	85 c0                	test   %eax,%eax
   281ce:	78 20                	js     281f0 <ev_feed_signal+0xd0>
   281d0:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
   281d6:	48 8d b3 f0 00 00 00 	lea    0xf0(%rbx),%rsi
   281dd:	ba 01 00 00 00       	mov    $0x1,%edx
   281e2:	e8 19 7b fe ff       	callq  fd00 <write@plt>
   281e7:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   281eb:	eb 80                	jmp    2816d <ev_feed_signal+0x4d>
   281ed:	0f 1f 00             	nopl   (%rax)
   281f0:	8b bb f0 00 00 00    	mov    0xf0(%rbx),%edi
   281f6:	48 89 e6             	mov    %rsp,%rsi
   281f9:	ba 08 00 00 00       	mov    $0x8,%edx
   281fe:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   28205:	00 
   28206:	e8 f5 7a fe ff       	callq  fd00 <write@plt>
   2820b:	eb da                	jmp    281e7 <ev_feed_signal+0xc7>
   2820d:	e8 3e 7c fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000028212 <.annobin_ev_feed_signal.end>:
   28212:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   28219:	00 00 00 00 
   2821d:	0f 1f 00             	nopl   (%rax)

0000000000028220 <ev_sighandler>:
   28220:	f3 0f 1e fa          	endbr64 
   28224:	e9 f7 fe ff ff       	jmpq   28120 <ev_feed_signal>

0000000000028229 <.annobin_ev_feed_signal_event.start>:
   28229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000028230 <ev_feed_signal_event>:
   28230:	f3 0f 1e fa          	endbr64 
   28234:	83 ee 01             	sub    $0x1,%esi
   28237:	83 fe 3f             	cmp    $0x3f,%esi
   2823a:	77 54                	ja     28290 <ev_feed_signal_event+0x60>
   2823c:	48 63 f6             	movslq %esi,%rsi
   2823f:	48 8d 05 ba f3 22 00 	lea    0x22f3ba(%rip),%rax        # 257600 <signals>
   28246:	48 8d 14 76          	lea    (%rsi,%rsi,2),%rdx
   2824a:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
   2824e:	48 39 78 08          	cmp    %rdi,0x8(%rax)
   28252:	75 3c                	jne    28290 <ev_feed_signal_event+0x60>
   28254:	55                   	push   %rbp
   28255:	48 89 fd             	mov    %rdi,%rbp
   28258:	53                   	push   %rbx
   28259:	48 83 ec 08          	sub    $0x8,%rsp
   2825d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   28263:	48 8b 58 10          	mov    0x10(%rax),%rbx
   28267:	48 85 db             	test   %rbx,%rbx
   2826a:	74 1d                	je     28289 <ev_feed_signal_event+0x59>
   2826c:	0f 1f 40 00          	nopl   0x0(%rax)
   28270:	48 89 de             	mov    %rbx,%rsi
   28273:	ba 00 04 00 00       	mov    $0x400,%edx
   28278:	48 89 ef             	mov    %rbp,%rdi
   2827b:	e8 c0 f8 ff ff       	callq  27b40 <ev_feed_event>
   28280:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   28284:	48 85 db             	test   %rbx,%rbx
   28287:	75 e7                	jne    28270 <ev_feed_signal_event+0x40>
   28289:	48 83 c4 08          	add    $0x8,%rsp
   2828d:	5b                   	pop    %rbx
   2828e:	5d                   	pop    %rbp
   2828f:	c3                   	retq   
   28290:	c3                   	retq   

0000000000028291 <.annobin_ev_feed_signal_event.end>:
   28291:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   28298:	00 00 00 00 
   2829c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000282a0 <pipecb>:
   282a0:	f3 0f 1e fa          	endbr64 
   282a4:	41 54                	push   %r12
   282a6:	49 89 fc             	mov    %rdi,%r12
   282a9:	55                   	push   %rbp
   282aa:	53                   	push   %rbx
   282ab:	48 83 ec 20          	sub    $0x20,%rsp
   282af:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   282b6:	00 00 
   282b8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   282bd:	31 c0                	xor    %eax,%eax
   282bf:	83 e2 01             	and    $0x1,%edx
   282c2:	74 1d                	je     282e1 <pipecb+0x41>
   282c4:	8b bf ec 00 00 00    	mov    0xec(%rdi),%edi
   282ca:	85 ff                	test   %edi,%edi
   282cc:	0f 88 17 01 00 00    	js     283e9 <pipecb+0x149>
   282d2:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   282d7:	ba 04 00 00 00       	mov    $0x4,%edx
   282dc:	e8 9f 7e fe ff       	callq  10180 <read@plt>
   282e1:	41 c7 84 24 2c 01 00 	movl   $0x0,0x12c(%r12)
   282e8:	00 00 00 00 00 
   282ed:	0f ae f0             	mfence 
   282f0:	41 8b 84 24 e8 03 00 	mov    0x3e8(%r12),%eax
   282f7:	00 
   282f8:	85 c0                	test   %eax,%eax
   282fa:	74 54                	je     28350 <pipecb+0xb0>
   282fc:	41 c7 84 24 e8 03 00 	movl   $0x0,0x3e8(%r12)
   28303:	00 00 00 00 00 
   28308:	0f ae f0             	mfence 
   2830b:	bb 3f 00 00 00       	mov    $0x3f,%ebx
   28310:	48 8d 2d e9 f2 22 00 	lea    0x22f2e9(%rip),%rbp        # 257600 <signals>
   28317:	eb 0f                	jmp    28328 <pipecb+0x88>
   28319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   28320:	83 eb 01             	sub    $0x1,%ebx
   28323:	83 fb ff             	cmp    $0xffffffff,%ebx
   28326:	74 28                	je     28350 <pipecb+0xb0>
   28328:	48 63 c3             	movslq %ebx,%rax
   2832b:	8d 73 01             	lea    0x1(%rbx),%esi
   2832e:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   28332:	48 8d 44 c5 00       	lea    0x0(%rbp,%rax,8),%rax
   28337:	8b 00                	mov    (%rax),%eax
   28339:	85 c0                	test   %eax,%eax
   2833b:	74 e3                	je     28320 <pipecb+0x80>
   2833d:	4c 89 e7             	mov    %r12,%rdi
   28340:	83 eb 01             	sub    $0x1,%ebx
   28343:	e8 e8 fe ff ff       	callq  28230 <ev_feed_signal_event>
   28348:	83 fb ff             	cmp    $0xffffffff,%ebx
   2834b:	75 db                	jne    28328 <pipecb+0x88>
   2834d:	0f 1f 00             	nopl   (%rax)
   28350:	41 8b 84 24 10 03 00 	mov    0x310(%r12),%eax
   28357:	00 
   28358:	85 c0                	test   %eax,%eax
   2835a:	74 74                	je     283d0 <pipecb+0x130>
   2835c:	41 c7 84 24 10 03 00 	movl   $0x0,0x310(%r12)
   28363:	00 00 00 00 00 
   28368:	0f ae f0             	mfence 
   2836b:	49 63 84 24 24 03 00 	movslq 0x324(%r12),%rax
   28372:	00 
   28373:	89 c2                	mov    %eax,%edx
   28375:	48 8d 1c c5 f8 ff ff 	lea    -0x8(,%rax,8),%rbx
   2837c:	ff 
   2837d:	48 29 d0             	sub    %rdx,%rax
   28380:	48 8d 2c c5 f8 ff ff 	lea    -0x8(,%rax,8),%rbp
   28387:	ff 
   28388:	eb 0a                	jmp    28394 <pipecb+0xf4>
   2838a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28390:	48 83 eb 08          	sub    $0x8,%rbx
   28394:	48 39 eb             	cmp    %rbp,%rbx
   28397:	74 37                	je     283d0 <pipecb+0x130>
   28399:	49 8b 84 24 18 03 00 	mov    0x318(%r12),%rax
   283a0:	00 
   283a1:	48 8b 04 18          	mov    (%rax,%rbx,1),%rax
   283a5:	8b 50 20             	mov    0x20(%rax),%edx
   283a8:	85 d2                	test   %edx,%edx
   283aa:	74 e4                	je     28390 <pipecb+0xf0>
   283ac:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
   283b3:	49 8b 84 24 18 03 00 	mov    0x318(%r12),%rax
   283ba:	00 
   283bb:	ba 00 00 08 00       	mov    $0x80000,%edx
   283c0:	4c 89 e7             	mov    %r12,%rdi
   283c3:	48 8b 34 18          	mov    (%rax,%rbx,1),%rsi
   283c7:	e8 74 f7 ff ff       	callq  27b40 <ev_feed_event>
   283cc:	eb c2                	jmp    28390 <pipecb+0xf0>
   283ce:	66 90                	xchg   %ax,%ax
   283d0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   283d5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   283dc:	00 00 
   283de:	75 25                	jne    28405 <pipecb+0x165>
   283e0:	48 83 c4 20          	add    $0x20,%rsp
   283e4:	5b                   	pop    %rbx
   283e5:	5d                   	pop    %rbp
   283e6:	41 5c                	pop    %r12
   283e8:	c3                   	retq   
   283e9:	41 8b bc 24 f0 00 00 	mov    0xf0(%r12),%edi
   283f0:	00 
   283f1:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   283f6:	ba 08 00 00 00       	mov    $0x8,%edx
   283fb:	e8 80 7d fe ff       	callq  10180 <read@plt>
   28400:	e9 dc fe ff ff       	jmpq   282e1 <pipecb+0x41>
   28405:	e8 46 7a fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002840a <.annobin_pipecb.end>:
   2840a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000028410 <sigfdcb>:
   28410:	f3 0f 1e fa          	endbr64 
   28414:	41 56                	push   %r14
   28416:	41 55                	push   %r13
   28418:	41 54                	push   %r12
   2841a:	49 89 fc             	mov    %rdi,%r12
   2841d:	55                   	push   %rbp
   2841e:	53                   	push   %rbx
   2841f:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
   28426:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2842d:	00 00 
   2842f:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   28436:	00 
   28437:	31 c0                	xor    %eax,%eax
   28439:	49 89 e5             	mov    %rsp,%r13
   2843c:	0f 1f 40 00          	nopl   0x0(%rax)
   28440:	41 8b bc 24 ec 03 00 	mov    0x3ec(%r12),%edi
   28447:	00 
   28448:	ba 00 01 00 00       	mov    $0x100,%edx
   2844d:	4c 89 ee             	mov    %r13,%rsi
   28450:	e8 2b 7d fe ff       	callq  10180 <read@plt>
   28455:	49 8d 6c 05 00       	lea    0x0(%r13,%rax,1),%rbp
   2845a:	49 89 c6             	mov    %rax,%r14
   2845d:	4c 39 ed             	cmp    %r13,%rbp
   28460:	76 19                	jbe    2847b <sigfdcb+0x6b>
   28462:	4c 89 eb             	mov    %r13,%rbx
   28465:	0f 1f 00             	nopl   (%rax)
   28468:	8b 33                	mov    (%rbx),%esi
   2846a:	4c 89 e7             	mov    %r12,%rdi
   2846d:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
   28471:	e8 ba fd ff ff       	callq  28230 <ev_feed_signal_event>
   28476:	48 39 eb             	cmp    %rbp,%rbx
   28479:	72 ed                	jb     28468 <sigfdcb+0x58>
   2847b:	49 81 fe ff 00 00 00 	cmp    $0xff,%r14
   28482:	7f bc                	jg     28440 <sigfdcb+0x30>
   28484:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   2848b:	00 
   2848c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   28493:	00 00 
   28495:	75 10                	jne    284a7 <sigfdcb+0x97>
   28497:	48 81 c4 10 01 00 00 	add    $0x110,%rsp
   2849e:	5b                   	pop    %rbx
   2849f:	5d                   	pop    %rbp
   284a0:	41 5c                	pop    %r12
   284a2:	41 5d                	pop    %r13
   284a4:	41 5e                	pop    %r14
   284a6:	c3                   	retq   
   284a7:	e8 a4 79 fe ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000284ac <.annobin_ev_backend.start>:
   284ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000284b0 <ev_backend>:
   284b0:	f3 0f 1e fa          	endbr64 
   284b4:	8b 87 b8 00 00 00    	mov    0xb8(%rdi),%eax
   284ba:	c3                   	retq   

00000000000284bb <.annobin_ev_backend.end>:
   284bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000284c0 <ev_iteration>:
   284c0:	f3 0f 1e fa          	endbr64 
   284c4:	8b 87 dc 04 00 00    	mov    0x4dc(%rdi),%eax
   284ca:	c3                   	retq   

00000000000284cb <.annobin_ev_depth.start>:
   284cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000284d0 <ev_depth>:
   284d0:	f3 0f 1e fa          	endbr64 
   284d4:	8b 87 e0 04 00 00    	mov    0x4e0(%rdi),%eax
   284da:	c3                   	retq   

00000000000284db <.annobin_ev_depth.end>:
   284db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000284e0 <ev_set_io_collect_interval>:
   284e0:	f3 0f 1e fa          	endbr64 
   284e4:	f2 0f 11 87 a8 00 00 	movsd  %xmm0,0xa8(%rdi)
   284eb:	00 
   284ec:	c3                   	retq   

00000000000284ed <.annobin_ev_set_io_collect_interval.end>:
   284ed:	0f 1f 00             	nopl   (%rax)

00000000000284f0 <ev_set_timeout_collect_interval>:
   284f0:	f3 0f 1e fa          	endbr64 
   284f4:	f2 0f 11 87 b0 00 00 	movsd  %xmm0,0xb0(%rdi)
   284fb:	00 
   284fc:	c3                   	retq   

00000000000284fd <.annobin_ev_set_timeout_collect_interval.end>:
   284fd:	0f 1f 00             	nopl   (%rax)

0000000000028500 <ev_set_userdata>:
   28500:	f3 0f 1e fa          	endbr64 
   28504:	48 89 b7 e8 04 00 00 	mov    %rsi,0x4e8(%rdi)
   2850b:	c3                   	retq   

000000000002850c <.annobin_ev_set_userdata.end>:
   2850c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000028510 <ev_userdata>:
   28510:	f3 0f 1e fa          	endbr64 
   28514:	48 8b 87 e8 04 00 00 	mov    0x4e8(%rdi),%rax
   2851b:	c3                   	retq   

000000000002851c <.annobin_ev_set_invoke_pending_cb.start>:
   2851c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000028520 <ev_set_invoke_pending_cb>:
   28520:	f3 0f 1e fa          	endbr64 
   28524:	48 89 b7 00 05 00 00 	mov    %rsi,0x500(%rdi)
   2852b:	c3                   	retq   

000000000002852c <.annobin_ev_set_invoke_pending_cb.end>:
   2852c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000028530 <ev_set_loop_release_cb>:
   28530:	f3 0f 1e fa          	endbr64 
   28534:	48 89 b7 f0 04 00 00 	mov    %rsi,0x4f0(%rdi)
   2853b:	48 89 97 f8 04 00 00 	mov    %rdx,0x4f8(%rdi)
   28542:	c3                   	retq   

0000000000028543 <.annobin_ev_loop_fork.start>:
   28543:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2854a:	00 00 00 00 
   2854e:	66 90                	xchg   %ax,%ax

0000000000028550 <ev_loop_fork>:
   28550:	f3 0f 1e fa          	endbr64 
   28554:	c6 87 34 01 00 00 01 	movb   $0x1,0x134(%rdi)
   2855b:	c3                   	retq   

000000000002855c <.annobin_ev_invoke.start>:
   2855c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000028560 <ev_invoke>:
   28560:	f3 0f 1e fa          	endbr64 
   28564:	ff 66 18             	jmpq   *0x18(%rsi)

0000000000028567 <.annobin_ev_invoke.end>:
   28567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2856e:	00 00 

0000000000028570 <ev_pending_count>:
   28570:	f3 0f 1e fa          	endbr64 
   28574:	8b 47 74             	mov    0x74(%rdi),%eax
   28577:	03 47 78             	add    0x78(%rdi),%eax
   2857a:	03 47 70             	add    0x70(%rdi),%eax
   2857d:	03 47 7c             	add    0x7c(%rdi),%eax
   28580:	03 47 6c             	add    0x6c(%rdi),%eax
   28583:	c3                   	retq   

0000000000028584 <.annobin_ev_break.start>:
   28584:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2858b:	00 00 00 00 
   2858f:	90                   	nop

0000000000028590 <ev_break>:
   28590:	f3 0f 1e fa          	endbr64 
   28594:	89 b7 c0 00 00 00    	mov    %esi,0xc0(%rdi)
   2859a:	c3                   	retq   

000000000002859b <.annobin_ev_break.end>:
   2859b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000285a0 <ev_ref>:
   285a0:	f3 0f 1e fa          	endbr64 
   285a4:	83 87 bc 00 00 00 01 	addl   $0x1,0xbc(%rdi)
   285ab:	c3                   	retq   

00000000000285ac <.annobin_ev_ref.end>:
   285ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000285b0 <ev_unref>:
   285b0:	f3 0f 1e fa          	endbr64 
   285b4:	83 af bc 00 00 00 01 	subl   $0x1,0xbc(%rdi)
   285bb:	c3                   	retq   

00000000000285bc <.annobin_ev_now_update.start>:
   285bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000285c0 <ev_now_update>:
   285c0:	f3 0f 1e fa          	endbr64 
   285c4:	41 54                	push   %r12
   285c6:	55                   	push   %rbp
   285c7:	53                   	push   %rbx
   285c8:	48 89 fb             	mov    %rdi,%rbx
   285cb:	48 83 ec 30          	sub    $0x30,%rsp
   285cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   285d6:	00 00 
   285d8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   285dd:	31 c0                	xor    %eax,%eax
   285df:	8b 05 2b fb 22 00    	mov    0x22fb2b(%rip),%eax        # 258110 <have_monotonic>
   285e5:	85 c0                	test   %eax,%eax
   285e7:	0f 84 93 00 00 00    	je     28680 <ev_now_update+0xc0>
   285ed:	f2 0f 10 5f 18       	movsd  0x18(%rdi),%xmm3
   285f2:	8b 05 18 fb 22 00    	mov    0x22fb18(%rip),%eax        # 258110 <have_monotonic>
   285f8:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
   285fe:	85 c0                	test   %eax,%eax
   28600:	0f 84 ba 00 00 00    	je     286c0 <ev_now_update+0x100>
   28606:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2860b:	bf 01 00 00 00       	mov    $0x1,%edi
   28610:	e8 cb 76 fe ff       	callq  fce0 <clock_gettime@plt>
   28615:	66 0f ef c0          	pxor   %xmm0,%xmm0
   28619:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2861d:	f2 48 0f 2a 44 24 18 	cvtsi2sdq 0x18(%rsp),%xmm0
   28624:	f2 0f 59 05 74 ab 01 	mulsd  0x1ab74(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2862b:	00 
   2862c:	f2 48 0f 2a 4c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm1
   28633:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   28637:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2863b:	f2 0f 5c 4b 08       	subsd  0x8(%rbx),%xmm1
   28640:	f2 0f 11 43 10       	movsd  %xmm0,0x10(%rbx)
   28645:	f2 0f 10 15 5b ab 01 	movsd  0x1ab5b(%rip),%xmm2        # 431a8 <__PRETTY_FUNCTION__.11024+0x68>
   2864c:	00 
   2864d:	66 0f 2f d1          	comisd %xmm1,%xmm2
   28651:	76 7d                	jbe    286d0 <ev_now_update+0x110>
   28653:	f2 0f 58 43 18       	addsd  0x18(%rbx),%xmm0
   28658:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   2865c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   28661:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   28668:	00 00 
   2866a:	0f 85 32 01 00 00    	jne    287a2 <ev_now_update+0x1e2>
   28670:	48 83 c4 30          	add    $0x30,%rsp
   28674:	5b                   	pop    %rbx
   28675:	5d                   	pop    %rbp
   28676:	41 5c                	pop    %r12
   28678:	c3                   	retq   
   28679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   28680:	e8 5b f3 ff ff       	callq  279e0 <ev_time>
   28685:	f2 0f 10 53 10       	movsd  0x10(%rbx),%xmm2
   2868a:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   2868e:	66 0f 2f d0          	comisd %xmm0,%xmm2
   28692:	0f 87 0f 01 00 00    	ja     287a7 <ev_now_update+0x1e7>
   28698:	f2 0f 10 0d b8 aa 01 	movsd  0x1aab8(%rip),%xmm1        # 43158 <__PRETTY_FUNCTION__.11024+0x18>
   2869f:	00 
   286a0:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   286a4:	f2 0f 58 0d c4 aa 01 	addsd  0x1aac4(%rip),%xmm1        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   286ab:	00 
   286ac:	66 0f 2f c1          	comisd %xmm1,%xmm0
   286b0:	0f 87 f1 00 00 00    	ja     287a7 <ev_now_update+0x1e7>
   286b6:	f2 0f 11 43 10       	movsd  %xmm0,0x10(%rbx)
   286bb:	eb 9f                	jmp    2865c <ev_now_update+0x9c>
   286bd:	0f 1f 00             	nopl   (%rax)
   286c0:	e8 1b f3 ff ff       	callq  279e0 <ev_time>
   286c5:	e9 6d ff ff ff       	jmpq   28637 <ev_now_update+0x77>
   286ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   286d0:	f2 0f 11 43 08       	movsd  %xmm0,0x8(%rbx)
   286d5:	bd 03 00 00 00       	mov    $0x3,%ebp
   286da:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   286df:	e8 fc f2 ff ff       	callq  279e0 <ev_time>
   286e4:	f2 0f 10 4b 10       	movsd  0x10(%rbx),%xmm1
   286e9:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   286ed:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   286f1:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
   286f7:	66 0f ef ed          	pxor   %xmm5,%xmm5
   286fb:	f2 0f 5c e0          	subsd  %xmm0,%xmm4
   286ff:	f2 0f 11 43 18       	movsd  %xmm0,0x18(%rbx)
   28704:	66 0f 2f ec          	comisd %xmm4,%xmm5
   28708:	77 7e                	ja     28788 <ev_now_update+0x1c8>
   2870a:	f2 0f 10 35 5e aa 01 	movsd  0x1aa5e(%rip),%xmm6        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   28711:	00 
   28712:	31 c0                	xor    %eax,%eax
   28714:	66 0f 2f f4          	comisd %xmm4,%xmm6
   28718:	0f 97 c0             	seta   %al
   2871b:	48 85 c0             	test   %rax,%rax
   2871e:	0f 85 38 ff ff ff    	jne    2865c <ev_now_update+0x9c>
   28724:	e8 b7 f2 ff ff       	callq  279e0 <ev_time>
   28729:	8b 05 e1 f9 22 00    	mov    0x22f9e1(%rip),%eax        # 258110 <have_monotonic>
   2872f:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
   28733:	85 c0                	test   %eax,%eax
   28735:	74 60                	je     28797 <ev_now_update+0x1d7>
   28737:	4c 89 e6             	mov    %r12,%rsi
   2873a:	bf 01 00 00 00       	mov    $0x1,%edi
   2873f:	e8 9c 75 fe ff       	callq  fce0 <clock_gettime@plt>
   28744:	66 0f ef c9          	pxor   %xmm1,%xmm1
   28748:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2874c:	f2 48 0f 2a 4c 24 18 	cvtsi2sdq 0x18(%rsp),%xmm1
   28753:	f2 0f 59 0d 45 aa 01 	mulsd  0x1aa45(%rip),%xmm1        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2875a:	00 
   2875b:	f2 48 0f 2a 44 24 10 	cvtsi2sdq 0x10(%rsp),%xmm0
   28762:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   28766:	f2 0f 11 4b 10       	movsd  %xmm1,0x10(%rbx)
   2876b:	f2 0f 11 4b 08       	movsd  %xmm1,0x8(%rbx)
   28770:	83 ed 01             	sub    $0x1,%ebp
   28773:	0f 84 e8 8f fe ff    	je     11761 <ev_now_update.cold.25>
   28779:	f2 0f 10 03          	movsd  (%rbx),%xmm0
   2877d:	e9 6b ff ff ff       	jmpq   286ed <ev_now_update+0x12d>
   28782:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28788:	31 c0                	xor    %eax,%eax
   2878a:	66 0f 2f 25 6e 68 01 	comisd 0x1686e(%rip),%xmm4        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   28791:	00 
   28792:	0f 97 c0             	seta   %al
   28795:	eb 84                	jmp    2871b <ev_now_update+0x15b>
   28797:	e8 44 f2 ff ff       	callq  279e0 <ev_time>
   2879c:	66 0f 28 c8          	movapd %xmm0,%xmm1
   287a0:	eb c4                	jmp    28766 <ev_now_update+0x1a6>
   287a2:	e8 a9 76 fe ff       	callq  fe50 <__stack_chk_fail@plt>
   287a7:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   287ab:	48 89 df             	mov    %rbx,%rdi
   287ae:	e8 c2 83 fe ff       	callq  10b75 <timers_reschedule>
   287b3:	e8 30 88 fe ff       	callq  10fe8 <periodics_reschedule>
   287b8:	f2 0f 10 03          	movsd  (%rbx),%xmm0
   287bc:	e9 f5 fe ff ff       	jmpq   286b6 <ev_now_update+0xf6>

00000000000287c1 <.annobin_ev_now_update.end>:
   287c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   287c8:	00 00 00 00 
   287cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000287d0 <ev_suspend>:
   287d0:	f3 0f 1e fa          	endbr64 
   287d4:	e9 e7 fd ff ff       	jmpq   285c0 <ev_now_update>

00000000000287d9 <.annobin_ev_resume.start>:
   287d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000287e0 <ev_resume>:
   287e0:	f3 0f 1e fa          	endbr64 
   287e4:	53                   	push   %rbx
   287e5:	48 89 fb             	mov    %rdi,%rbx
   287e8:	48 83 ec 10          	sub    $0x10,%rsp
   287ec:	f2 0f 10 4f 10       	movsd  0x10(%rdi),%xmm1
   287f1:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
   287f7:	e8 c4 fd ff ff       	callq  285c0 <ev_now_update>
   287fc:	f2 0f 10 43 10       	movsd  0x10(%rbx),%xmm0
   28801:	f2 0f 5c 44 24 08    	subsd  0x8(%rsp),%xmm0
   28807:	48 89 df             	mov    %rbx,%rdi
   2880a:	e8 66 83 fe ff       	callq  10b75 <timers_reschedule>
   2880f:	48 83 c4 10          	add    $0x10,%rsp
   28813:	5b                   	pop    %rbx
   28814:	e9 cf 87 fe ff       	jmpq   10fe8 <periodics_reschedule>

0000000000028819 <.annobin_ev_clear_pending.start>:
   28819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000028820 <ev_clear_pending>:
   28820:	f3 0f 1e fa          	endbr64 
   28824:	48 63 46 04          	movslq 0x4(%rsi),%rax
   28828:	85 c0                	test   %eax,%eax
   2882a:	74 2b                	je     28857 <ev_clear_pending+0x37>
   2882c:	8b 4e 08             	mov    0x8(%rsi),%ecx
   2882f:	48 c1 e0 04          	shl    $0x4,%rax
   28833:	8d 51 02             	lea    0x2(%rcx),%edx
   28836:	48 63 d2             	movslq %edx,%rdx
   28839:	48 8b 54 d7 30       	mov    0x30(%rdi,%rdx,8),%rdx
   2883e:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
   28845:	48 8d 44 02 f0       	lea    -0x10(%rdx,%rax,1),%rax
   2884a:	48 89 38             	mov    %rdi,(%rax)
   2884d:	8b 40 08             	mov    0x8(%rax),%eax
   28850:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   28857:	c3                   	retq   

0000000000028858 <.annobin_ev_clear_pending.end>:
   28858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2885f:	00 

0000000000028860 <ev_io_start>:
   28860:	f3 0f 1e fa          	endbr64 
   28864:	41 55                	push   %r13
   28866:	41 54                	push   %r12
   28868:	55                   	push   %rbp
   28869:	53                   	push   %rbx
   2886a:	48 83 ec 08          	sub    $0x8,%rsp
   2886e:	8b 06                	mov    (%rsi),%eax
   28870:	44 8b 66 28          	mov    0x28(%rsi),%r12d
   28874:	85 c0                	test   %eax,%eax
   28876:	0f 85 c4 00 00 00    	jne    28940 <ev_io_start+0xe0>
   2887c:	48 89 f3             	mov    %rsi,%rbx
   2887f:	48 89 fd             	mov    %rdi,%rbp
   28882:	45 85 e4             	test   %r12d,%r12d
   28885:	0f 88 c0 00 00 00    	js     2894b <ev_io_start+0xeb>
   2888b:	f7 46 2c 7c ff ff ff 	testl  $0xffffff7c,0x2c(%rsi)
   28892:	0f 85 d2 00 00 00    	jne    2896a <ev_io_start+0x10a>
   28898:	8b 46 08             	mov    0x8(%rsi),%eax
   2889b:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   288a0:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
   288a6:	83 f8 fe             	cmp    $0xfffffffe,%eax
   288a9:	0f 4c c2             	cmovl  %edx,%eax
   288ac:	ba 02 00 00 00       	mov    $0x2,%edx
   288b1:	83 f8 02             	cmp    $0x2,%eax
   288b4:	0f 4f c2             	cmovg  %edx,%eax
   288b7:	89 46 08             	mov    %eax,0x8(%rsi)
   288ba:	e8 e1 fc ff ff       	callq  285a0 <ev_ref>
   288bf:	44 8b ad e8 00 00 00 	mov    0xe8(%rbp),%r13d
   288c6:	45 39 e5             	cmp    %r12d,%r13d
   288c9:	0f 8e 9f 8e fe ff    	jle    1176e <ev_io_start.cold.26>
   288cf:	49 63 c4             	movslq %r12d,%rax
   288d2:	48 c1 e0 04          	shl    $0x4,%rax
   288d6:	48 03 85 e0 00 00 00 	add    0xe0(%rbp),%rax
   288dd:	48 8b 10             	mov    (%rax),%rdx
   288e0:	48 89 53 20          	mov    %rdx,0x20(%rbx)
   288e4:	48 89 18             	mov    %rbx,(%rax)
   288e7:	48 39 5b 20          	cmp    %rbx,0x20(%rbx)
   288eb:	0f 84 98 00 00 00    	je     28989 <ev_io_start+0x129>
   288f1:	8b 4b 2c             	mov    0x2c(%rbx),%ecx
   288f4:	0f b6 70 09          	movzbl 0x9(%rax),%esi
   288f8:	89 ca                	mov    %ecx,%edx
   288fa:	81 e2 80 00 00 00    	and    $0x80,%edx
   28900:	83 ca 01             	or     $0x1,%edx
   28903:	09 f2                	or     %esi,%edx
   28905:	88 50 09             	mov    %dl,0x9(%rax)
   28908:	40 84 f6             	test   %sil,%sil
   2890b:	75 2d                	jne    2893a <ev_io_start+0xda>
   2890d:	8b 85 54 02 00 00    	mov    0x254(%rbp),%eax
   28913:	8d 48 01             	lea    0x1(%rax),%ecx
   28916:	48 8b 85 48 02 00 00 	mov    0x248(%rbp),%rax
   2891d:	89 8d 54 02 00 00    	mov    %ecx,0x254(%rbp)
   28923:	3b 8d 50 02 00 00    	cmp    0x250(%rbp),%ecx
   28929:	0f 8f 8a 8e fe ff    	jg     117b9 <ev_io_start.cold.26+0x4b>
   2892f:	48 63 c9             	movslq %ecx,%rcx
   28932:	44 89 64 88 fc       	mov    %r12d,-0x4(%rax,%rcx,4)
   28937:	8b 4b 2c             	mov    0x2c(%rbx),%ecx
   2893a:	80 e1 7f             	and    $0x7f,%cl
   2893d:	89 4b 2c             	mov    %ecx,0x2c(%rbx)
   28940:	48 83 c4 08          	add    $0x8,%rsp
   28944:	5b                   	pop    %rbx
   28945:	5d                   	pop    %rbp
   28946:	41 5c                	pop    %r12
   28948:	41 5d                	pop    %r13
   2894a:	c3                   	retq   
   2894b:	48 8d 0d 06 a7 01 00 	lea    0x1a706(%rip),%rcx        # 43058 <__PRETTY_FUNCTION__.11415>
   28952:	ba f3 10 00 00       	mov    $0x10f3,%edx
   28957:	48 8d 35 03 99 01 00 	lea    0x19903(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2895e:	48 8d 3d 8b 9e 01 00 	lea    0x19e8b(%rip),%rdi        # 427f0 <__FUNCTION__.3752+0x5b0>
   28965:	e8 96 76 fe ff       	callq  10000 <__assert_fail@plt>
   2896a:	48 8d 0d e7 a6 01 00 	lea    0x1a6e7(%rip),%rcx        # 43058 <__PRETTY_FUNCTION__.11415>
   28971:	ba f4 10 00 00       	mov    $0x10f4,%edx
   28976:	48 8d 35 e4 98 01 00 	lea    0x198e4(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2897d:	48 8d 3d a4 9e 01 00 	lea    0x19ea4(%rip),%rdi        # 42828 <__FUNCTION__.3752+0x5e8>
   28984:	e8 77 76 fe ff       	callq  10000 <__assert_fail@plt>
   28989:	48 8d 0d c8 a6 01 00 	lea    0x1a6c8(%rip),%rcx        # 43058 <__PRETTY_FUNCTION__.11415>
   28990:	ba 00 11 00 00       	mov    $0x1100,%edx
   28995:	48 8d 35 c5 98 01 00 	lea    0x198c5(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2899c:	48 8d 3d f5 9e 01 00 	lea    0x19ef5(%rip),%rdi        # 42898 <__FUNCTION__.3752+0x658>
   289a3:	e8 58 76 fe ff       	callq  10000 <__assert_fail@plt>

00000000000289a8 <.annobin_ev_io_start.end>:
   289a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   289af:	00 

00000000000289b0 <ev_io_stop>:
   289b0:	f3 0f 1e fa          	endbr64 
   289b4:	55                   	push   %rbp
   289b5:	53                   	push   %rbx
   289b6:	48 83 ec 08          	sub    $0x8,%rsp
   289ba:	48 63 46 04          	movslq 0x4(%rsi),%rax
   289be:	85 c0                	test   %eax,%eax
   289c0:	74 24                	je     289e6 <ev_io_stop+0x36>
   289c2:	8b 5e 08             	mov    0x8(%rsi),%ebx
   289c5:	48 c1 e0 04          	shl    $0x4,%rax
   289c9:	8d 53 02             	lea    0x2(%rbx),%edx
   289cc:	48 63 d2             	movslq %edx,%rdx
   289cf:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   289d4:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   289db:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   289df:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   289e6:	8b 06                	mov    (%rsi),%eax
   289e8:	85 c0                	test   %eax,%eax
   289ea:	0f 84 97 00 00 00    	je     28a87 <ev_io_stop+0xd7>
   289f0:	48 63 46 28          	movslq 0x28(%rsi),%rax
   289f4:	48 89 f5             	mov    %rsi,%rbp
   289f7:	48 89 fb             	mov    %rdi,%rbx
   289fa:	85 c0                	test   %eax,%eax
   289fc:	0f 88 ad 00 00 00    	js     28aaf <ev_io_stop+0xff>
   28a02:	3b 87 e8 00 00 00    	cmp    0xe8(%rdi),%eax
   28a08:	0f 8d a1 00 00 00    	jge    28aaf <ev_io_stop+0xff>
   28a0e:	48 c1 e0 04          	shl    $0x4,%rax
   28a12:	48 03 87 e0 00 00 00 	add    0xe0(%rdi),%rax
   28a19:	48 8b 10             	mov    (%rax),%rdx
   28a1c:	48 85 d2             	test   %rdx,%rdx
   28a1f:	74 0c                	je     28a2d <ev_io_stop+0x7d>
   28a21:	48 39 d6             	cmp    %rdx,%rsi
   28a24:	75 72                	jne    28a98 <ev_io_stop+0xe8>
   28a26:	48 8b 55 20          	mov    0x20(%rbp),%rdx
   28a2a:	48 89 10             	mov    %rdx,(%rax)
   28a2d:	48 89 df             	mov    %rbx,%rdi
   28a30:	e8 7b fb ff ff       	callq  285b0 <ev_unref>
   28a35:	48 63 45 28          	movslq 0x28(%rbp),%rax
   28a39:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   28a40:	48 89 c5             	mov    %rax,%rbp
   28a43:	48 c1 e0 04          	shl    $0x4,%rax
   28a47:	48 03 83 e0 00 00 00 	add    0xe0(%rbx),%rax
   28a4e:	0f b6 50 09          	movzbl 0x9(%rax),%edx
   28a52:	89 d1                	mov    %edx,%ecx
   28a54:	83 c9 01             	or     $0x1,%ecx
   28a57:	88 48 09             	mov    %cl,0x9(%rax)
   28a5a:	84 d2                	test   %dl,%dl
   28a5c:	75 29                	jne    28a87 <ev_io_stop+0xd7>
   28a5e:	8b 83 54 02 00 00    	mov    0x254(%rbx),%eax
   28a64:	8d 48 01             	lea    0x1(%rax),%ecx
   28a67:	48 8b 83 48 02 00 00 	mov    0x248(%rbx),%rax
   28a6e:	89 8b 54 02 00 00    	mov    %ecx,0x254(%rbx)
   28a74:	3b 8b 50 02 00 00    	cmp    0x250(%rbx),%ecx
   28a7a:	0f 8f f9 8e fe ff    	jg     11979 <ev_io_stop.cold.27>
   28a80:	48 63 c9             	movslq %ecx,%rcx
   28a83:	89 6c 88 fc          	mov    %ebp,-0x4(%rax,%rcx,4)
   28a87:	48 83 c4 08          	add    $0x8,%rsp
   28a8b:	5b                   	pop    %rbx
   28a8c:	5d                   	pop    %rbp
   28a8d:	c3                   	retq   
   28a8e:	48 89 c2             	mov    %rax,%rdx
   28a91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   28a98:	48 8b 42 20          	mov    0x20(%rdx),%rax
   28a9c:	48 85 c0             	test   %rax,%rax
   28a9f:	74 8c                	je     28a2d <ev_io_stop+0x7d>
   28aa1:	48 39 c5             	cmp    %rax,%rbp
   28aa4:	75 e8                	jne    28a8e <ev_io_stop+0xde>
   28aa6:	48 8d 42 20          	lea    0x20(%rdx),%rax
   28aaa:	e9 77 ff ff ff       	jmpq   28a26 <ev_io_stop+0x76>
   28aaf:	48 8d 0d 92 a5 01 00 	lea    0x1a592(%rip),%rcx        # 43048 <__PRETTY_FUNCTION__.11421>
   28ab6:	ba 10 11 00 00       	mov    $0x1110,%edx
   28abb:	48 8d 35 9f 97 01 00 	lea    0x1979f(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   28ac2:	48 8d 3d 4f 9e 01 00 	lea    0x19e4f(%rip),%rdi        # 42918 <__FUNCTION__.3752+0x6d8>
   28ac9:	e8 32 75 fe ff       	callq  10000 <__assert_fail@plt>

0000000000028ace <.annobin_ev_io_stop.end>:
   28ace:	66 90                	xchg   %ax,%ax

0000000000028ad0 <iouring_handle_cq>:
   28ad0:	41 57                	push   %r15
   28ad2:	41 56                	push   %r14
   28ad4:	41 55                	push   %r13
   28ad6:	41 54                	push   %r12
   28ad8:	55                   	push   %rbp
   28ad9:	53                   	push   %rbx
   28ada:	48 83 ec 18          	sub    $0x18,%rsp
   28ade:	8b 87 f0 01 00 00    	mov    0x1f0(%rdi),%eax
   28ae4:	48 03 87 b8 01 00 00 	add    0x1b8(%rdi),%rax
   28aeb:	8b 00                	mov    (%rax),%eax
   28aed:	48 8b 97 b8 01 00 00 	mov    0x1b8(%rdi),%rdx
   28af4:	8b 8f f4 01 00 00    	mov    0x1f4(%rdi),%ecx
   28afa:	48 01 d1             	add    %rdx,%rcx
   28afd:	8b 19                	mov    (%rcx),%ebx
   28aff:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
   28b03:	39 d8                	cmp    %ebx,%eax
   28b05:	0f 84 a5 01 00 00    	je     28cb0 <iouring_handle_cq+0x1e0>
   28b0b:	8b 8f 00 02 00 00    	mov    0x200(%rdi),%ecx
   28b11:	49 89 fd             	mov    %rdi,%r13
   28b14:	48 01 d1             	add    %rdx,%rcx
   28b17:	8b 09                	mov    (%rcx),%ecx
   28b19:	85 c9                	test   %ecx,%ecx
   28b1b:	0f 85 e1 93 fe ff    	jne    11f02 <iouring_handle_cq.cold.28+0x4a>
   28b21:	8b 8f f8 01 00 00    	mov    0x1f8(%rdi),%ecx
   28b27:	48 01 d1             	add    %rdx,%rcx
   28b2a:	8b 19                	mov    (%rcx),%ebx
   28b2c:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
   28b30:	8d 58 01             	lea    0x1(%rax),%ebx
   28b33:	41 8b 8d 04 02 00 00 	mov    0x204(%r13),%ecx
   28b3a:	23 44 24 0c          	and    0xc(%rsp),%eax
   28b3e:	48 c1 e0 04          	shl    $0x4,%rax
   28b42:	48 01 c8             	add    %rcx,%rax
   28b45:	48 01 d0             	add    %rdx,%rax
   28b48:	4c 8b 20             	mov    (%rax),%r12
   28b4b:	4c 89 e6             	mov    %r12,%rsi
   28b4e:	48 c1 ee 20          	shr    $0x20,%rsi
   28b52:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   28b56:	0f 84 eb 00 00 00    	je     28c47 <iouring_handle_cq+0x177>
   28b5c:	45 85 e4             	test   %r12d,%r12d
   28b5f:	0f 88 89 01 00 00    	js     28cee <iouring_handle_cq+0x21e>
   28b65:	45 3b a5 e8 00 00 00 	cmp    0xe8(%r13),%r12d
   28b6c:	0f 8d 7c 01 00 00    	jge    28cee <iouring_handle_cq+0x21e>
   28b72:	4d 63 f4             	movslq %r12d,%r14
   28b75:	49 8b 8d e0 00 00 00 	mov    0xe0(%r13),%rcx
   28b7c:	49 c1 e6 04          	shl    $0x4,%r14
   28b80:	4c 01 f1             	add    %r14,%rcx
   28b83:	3b 71 0c             	cmp    0xc(%rcx),%esi
   28b86:	0f 85 bb 00 00 00    	jne    28c47 <iouring_handle_cq+0x177>
   28b8c:	8b 68 08             	mov    0x8(%rax),%ebp
   28b8f:	85 ed                	test   %ebp,%ebp
   28b91:	0f 88 e9 00 00 00    	js     28c80 <iouring_handle_cq+0x1b0>
   28b97:	89 e8                	mov    %ebp,%eax
   28b99:	bf 02 00 00 00       	mov    $0x2,%edi
   28b9e:	83 e0 1c             	and    $0x1c,%eax
   28ba1:	0f 45 c7             	cmovne %edi,%eax
   28ba4:	45 31 ff             	xor    %r15d,%r15d
   28ba7:	83 e5 19             	and    $0x19,%ebp
   28baa:	41 0f 95 c7          	setne  %r15b
   28bae:	41 09 c7             	or     %eax,%r15d
   28bb1:	0f b6 41 09          	movzbl 0x9(%rcx),%eax
   28bb5:	84 c0                	test   %al,%al
   28bb7:	0f 85 0b 01 00 00    	jne    28cc8 <iouring_handle_cq+0x1f8>
   28bbd:	48 8b 29             	mov    (%rcx),%rbp
   28bc0:	48 85 ed             	test   %rbp,%rbp
   28bc3:	75 14                	jne    28bd9 <iouring_handle_cq+0x109>
   28bc5:	e9 16 01 00 00       	jmpq   28ce0 <iouring_handle_cq+0x210>
   28bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   28bd0:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   28bd4:	48 85 ed             	test   %rbp,%rbp
   28bd7:	74 1c                	je     28bf5 <iouring_handle_cq+0x125>
   28bd9:	44 89 fa             	mov    %r15d,%edx
   28bdc:	23 55 2c             	and    0x2c(%rbp),%edx
   28bdf:	74 ef                	je     28bd0 <iouring_handle_cq+0x100>
   28be1:	48 89 ee             	mov    %rbp,%rsi
   28be4:	4c 89 ef             	mov    %r13,%rdi
   28be7:	e8 54 ef ff ff       	callq  27b40 <ev_feed_event>
   28bec:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   28bf0:	48 85 ed             	test   %rbp,%rbp
   28bf3:	75 e4                	jne    28bd9 <iouring_handle_cq+0x109>
   28bf5:	4d 03 b5 e0 00 00 00 	add    0xe0(%r13),%r14
   28bfc:	41 0f b6 46 09       	movzbl 0x9(%r14),%eax
   28c01:	41 c6 46 08 00       	movb   $0x0,0x8(%r14)
   28c06:	89 c2                	mov    %eax,%edx
   28c08:	83 ca 01             	or     $0x1,%edx
   28c0b:	41 88 56 09          	mov    %dl,0x9(%r14)
   28c0f:	84 c0                	test   %al,%al
   28c11:	75 2d                	jne    28c40 <iouring_handle_cq+0x170>
   28c13:	41 8b 85 54 02 00 00 	mov    0x254(%r13),%eax
   28c1a:	8d 48 01             	lea    0x1(%rax),%ecx
   28c1d:	49 8b 85 48 02 00 00 	mov    0x248(%r13),%rax
   28c24:	41 89 8d 54 02 00 00 	mov    %ecx,0x254(%r13)
   28c2b:	41 3b 8d 50 02 00 00 	cmp    0x250(%r13),%ecx
   28c32:	0f 8f a3 92 fe ff    	jg     11edb <iouring_handle_cq.cold.28+0x23>
   28c38:	48 63 c9             	movslq %ecx,%rcx
   28c3b:	44 89 64 88 fc       	mov    %r12d,-0x4(%rax,%rcx,4)
   28c40:	49 8b 95 b8 01 00 00 	mov    0x1b8(%r13),%rdx
   28c47:	89 d8                	mov    %ebx,%eax
   28c49:	39 5c 24 08          	cmp    %ebx,0x8(%rsp)
   28c4d:	0f 85 dd fe ff ff    	jne    28b30 <iouring_handle_cq+0x60>
   28c53:	41 8b 85 f0 01 00 00 	mov    0x1f0(%r13),%eax
   28c5a:	48 01 c2             	add    %rax,%rdx
   28c5d:	8b 44 24 08          	mov    0x8(%rsp),%eax
   28c61:	89 02                	mov    %eax,(%rdx)
   28c63:	b8 01 00 00 00       	mov    $0x1,%eax
   28c68:	48 83 c4 18          	add    $0x18,%rsp
   28c6c:	5b                   	pop    %rbx
   28c6d:	5d                   	pop    %rbp
   28c6e:	41 5c                	pop    %r12
   28c70:	41 5d                	pop    %r13
   28c72:	41 5e                	pop    %r14
   28c74:	41 5f                	pop    %r15
   28c76:	c3                   	retq   
   28c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   28c7e:	00 00 
   28c80:	83 fd f7             	cmp    $0xfffffff7,%ebp
   28c83:	0f 85 2f 92 fe ff    	jne    11eb8 <iouring_handle_cq.cold.28>
   28c89:	48 8d 0d 80 a4 01 00 	lea    0x1a480(%rip),%rcx        # 43110 <__PRETTY_FUNCTION__.11032>
   28c90:	ba 0d 02 00 00       	mov    $0x20d,%edx
   28c95:	48 8d 35 e9 95 01 00 	lea    0x195e9(%rip),%rsi        # 42285 <__FUNCTION__.3752+0x45>
   28c9c:	48 8d 3d 4d 9d 01 00 	lea    0x19d4d(%rip),%rdi        # 429f0 <__FUNCTION__.3752+0x7b0>
   28ca3:	e8 58 73 fe ff       	callq  10000 <__assert_fail@plt>
   28ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   28caf:	00 
   28cb0:	48 83 c4 18          	add    $0x18,%rsp
   28cb4:	31 c0                	xor    %eax,%eax
   28cb6:	5b                   	pop    %rbx
   28cb7:	5d                   	pop    %rbp
   28cb8:	41 5c                	pop    %r12
   28cba:	41 5d                	pop    %r13
   28cbc:	41 5e                	pop    %r14
   28cbe:	41 5f                	pop    %r15
   28cc0:	c3                   	retq   
   28cc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   28cc8:	83 c8 01             	or     $0x1,%eax
   28ccb:	c6 41 08 00          	movb   $0x0,0x8(%rcx)
   28ccf:	88 41 09             	mov    %al,0x9(%rcx)
   28cd2:	e9 69 ff ff ff       	jmpq   28c40 <iouring_handle_cq+0x170>
   28cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   28cde:	00 00 
   28ce0:	b8 00 01 00 00       	mov    $0x100,%eax
   28ce5:	66 89 41 08          	mov    %ax,0x8(%rcx)
   28ce9:	e9 25 ff ff ff       	jmpq   28c13 <iouring_handle_cq+0x143>
   28cee:	48 8d 0d 1b a4 01 00 	lea    0x1a41b(%rip),%rcx        # 43110 <__PRETTY_FUNCTION__.11032>
   28cf5:	ba f9 01 00 00       	mov    $0x1f9,%edx
   28cfa:	48 8d 35 84 95 01 00 	lea    0x19584(%rip),%rsi        # 42285 <__FUNCTION__.3752+0x45>
   28d01:	48 8d 3d a0 9c 01 00 	lea    0x19ca0(%rip),%rdi        # 429a8 <__FUNCTION__.3752+0x768>
   28d08:	e8 f3 72 fe ff       	callq  10000 <__assert_fail@plt>

0000000000028d0d <.annobin_iouring_handle_cq.end>:
   28d0d:	0f 1f 00             	nopl   (%rax)

0000000000028d10 <iouring_poll>:
   28d10:	f3 0f 1e fa          	endbr64 
   28d14:	53                   	push   %rbx
   28d15:	48 89 fb             	mov    %rdi,%rbx
   28d18:	48 83 ec 40          	sub    $0x40,%rsp
   28d1c:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   28d21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   28d28:	00 00 
   28d2a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   28d2f:	31 c0                	xor    %eax,%eax
   28d31:	e8 9a fd ff ff       	callq  28ad0 <iouring_handle_cq>
   28d36:	85 c0                	test   %eax,%eax
   28d38:	75 13                	jne    28d4d <iouring_poll+0x3d>
   28d3a:	8b bb 54 02 00 00    	mov    0x254(%rbx),%edi
   28d40:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   28d45:	85 ff                	test   %edi,%edi
   28d47:	0f 84 e3 00 00 00    	je     28e30 <iouring_poll+0x120>
   28d4d:	66 0f ef c9          	pxor   %xmm1,%xmm1
   28d51:	66 0f ef c0          	pxor   %xmm0,%xmm0
   28d55:	8b b3 a4 01 00 00    	mov    0x1a4(%rbx),%esi
   28d5b:	85 f6                	test   %esi,%esi
   28d5d:	74 75                	je     28dd4 <iouring_poll+0xc4>
   28d5f:	48 8b 83 f0 04 00 00 	mov    0x4f0(%rbx),%rax
   28d66:	48 85 c0             	test   %rax,%rax
   28d69:	0f 85 f1 00 00 00    	jne    28e60 <iouring_poll+0x150>
   28d6f:	45 31 c0             	xor    %r8d,%r8d
   28d72:	66 0f 2f c1          	comisd %xmm1,%xmm0
   28d76:	8b 93 a4 01 00 00    	mov    0x1a4(%rbx),%edx
   28d7c:	8b b3 a0 01 00 00    	mov    0x1a0(%rbx),%esi
   28d82:	b9 01 00 00 00       	mov    $0x1,%ecx
   28d87:	bf aa 01 00 00       	mov    $0x1aa,%edi
   28d8c:	41 0f 97 c0          	seta   %r8b
   28d90:	48 83 ec 08          	sub    $0x8,%rsp
   28d94:	45 31 c9             	xor    %r9d,%r9d
   28d97:	31 c0                	xor    %eax,%eax
   28d99:	6a 00                	pushq  $0x0
   28d9b:	e8 f0 74 fe ff       	callq  10290 <syscall@plt>
   28da0:	5a                   	pop    %rdx
   28da1:	59                   	pop    %rcx
   28da2:	85 c0                	test   %eax,%eax
   28da4:	78 4a                	js     28df0 <iouring_poll+0xe0>
   28da6:	39 83 a4 01 00 00    	cmp    %eax,0x1a4(%rbx)
   28dac:	0f 85 59 01 00 00    	jne    28f0b <iouring_poll+0x1fb>
   28db2:	48 8b 83 f8 04 00 00 	mov    0x4f8(%rbx),%rax
   28db9:	c7 83 a4 01 00 00 00 	movl   $0x0,0x1a4(%rbx)
   28dc0:	00 00 00 
   28dc3:	48 85 c0             	test   %rax,%rax
   28dc6:	0f 85 44 01 00 00    	jne    28f10 <iouring_poll+0x200>
   28dcc:	48 89 df             	mov    %rbx,%rdi
   28dcf:	e8 fc fc ff ff       	callq  28ad0 <iouring_handle_cq>
   28dd4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   28dd9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   28de0:	00 00 
   28de2:	0f 85 1e 01 00 00    	jne    28f06 <iouring_poll+0x1f6>
   28de8:	48 83 c4 40          	add    $0x40,%rsp
   28dec:	5b                   	pop    %rbx
   28ded:	c3                   	retq   
   28dee:	66 90                	xchg   %ax,%ax
   28df0:	48 8b 83 f8 04 00 00 	mov    0x4f8(%rbx),%rax
   28df7:	c7 83 a4 01 00 00 00 	movl   $0x0,0x1a4(%rbx)
   28dfe:	00 00 00 
   28e01:	48 85 c0             	test   %rax,%rax
   28e04:	74 0a                	je     28e10 <iouring_poll+0x100>
   28e06:	48 89 df             	mov    %rbx,%rdi
   28e09:	ff d0                	callq  *%rax
   28e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   28e10:	e8 fb 6c fe ff       	callq  fb10 <__errno_location@plt>
   28e15:	8b 00                	mov    (%rax),%eax
   28e17:	83 f8 10             	cmp    $0x10,%eax
   28e1a:	74 b8                	je     28dd4 <iouring_poll+0xc4>
   28e1c:	83 f8 04             	cmp    $0x4,%eax
   28e1f:	74 b3                	je     28dd4 <iouring_poll+0xc4>
   28e21:	48 8d 3d ba 95 01 00 	lea    0x195ba(%rip),%rdi        # 423e2 <__FUNCTION__.3752+0x1a2>
   28e28:	e8 97 7f fe ff       	callq  10dc4 <ev_syserr>
   28e2d:	eb a5                	jmp    28dd4 <iouring_poll+0xc4>
   28e2f:	90                   	nop
   28e30:	f2 0f 10 4b 10       	movsd  0x10(%rbx),%xmm1
   28e35:	f2 0f 10 93 08 02 00 	movsd  0x208(%rbx),%xmm2
   28e3c:	00 
   28e3d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   28e41:	66 0f 2f d1          	comisd %xmm1,%xmm2
   28e45:	77 39                	ja     28e80 <iouring_poll+0x170>
   28e47:	66 0f ef c9          	pxor   %xmm1,%xmm1
   28e4b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   28e4f:	0f 8a 0a ff ff ff    	jp     28d5f <iouring_poll+0x4f>
   28e55:	0f 85 04 ff ff ff    	jne    28d5f <iouring_poll+0x4f>
   28e5b:	e9 f5 fe ff ff       	jmpq   28d55 <iouring_poll+0x45>
   28e60:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
   28e66:	48 89 df             	mov    %rbx,%rdi
   28e69:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   28e6e:	ff d0                	callq  *%rax
   28e70:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   28e76:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   28e7b:	e9 ef fe ff ff       	jmpq   28d6f <iouring_poll+0x5f>
   28e80:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
   28e85:	66 0f ef d2          	pxor   %xmm2,%xmm2
   28e89:	31 c9                	xor    %ecx,%ecx
   28e8b:	be 01 00 00 00       	mov    $0x1,%esi
   28e90:	f2 0f 11 8b 08 02 00 	movsd  %xmm1,0x208(%rbx)
   28e97:	00 
   28e98:	8b bb 10 02 00 00    	mov    0x210(%rbx),%edi
   28e9e:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   28ea3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   28eaa:	00 00 
   28eac:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   28eb3:	00 00 
   28eb5:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
   28eba:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   28ebf:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
   28ec3:	f2 0f 59 0d c5 a2 01 	mulsd  0x1a2c5(%rip),%xmm1        # 43190 <__PRETTY_FUNCTION__.11024+0x50>
   28eca:	00 
   28ecb:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
   28ed0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   28ed5:	e8 86 79 fe ff       	callq  10860 <timerfd_settime@plt>
   28eda:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   28edf:	85 c0                	test   %eax,%eax
   28ee1:	0f 89 60 ff ff ff    	jns    28e47 <iouring_poll+0x137>
   28ee7:	48 8d 0d 52 a2 01 00 	lea    0x1a252(%rip),%rcx        # 43140 <__PRETTY_FUNCTION__.11024>
   28eee:	ba e9 01 00 00       	mov    $0x1e9,%edx
   28ef3:	48 8d 35 8b 93 01 00 	lea    0x1938b(%rip),%rsi        # 42285 <__FUNCTION__.3752+0x45>
   28efa:	48 8d 3d 27 9b 01 00 	lea    0x19b27(%rip),%rdi        # 42a28 <__FUNCTION__.3752+0x7e8>
   28f01:	e8 fa 70 fe ff       	callq  10000 <__assert_fail@plt>
   28f06:	e8 45 6f fe ff       	callq  fe50 <__stack_chk_fail@plt>
   28f0b:	e8 40 e8 ff ff       	callq  27750 <iouring_enter.part.7>
   28f10:	48 89 df             	mov    %rbx,%rdi
   28f13:	ff d0                	callq  *%rax
   28f15:	e9 b2 fe ff ff       	jmpq   28dcc <iouring_poll+0xbc>

0000000000028f1a <.annobin_iouring_poll.end>:
   28f1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000028f20 <iouring_sqe_get>:
   28f20:	53                   	push   %rbx
   28f21:	48 89 fb             	mov    %rdi,%rbx
   28f24:	48 83 ec 10          	sub    $0x10,%rsp
   28f28:	48 8b 93 b0 01 00 00 	mov    0x1b0(%rbx),%rdx
   28f2f:	8b 83 d8 01 00 00    	mov    0x1d8(%rbx),%eax
   28f35:	8b 8b d4 01 00 00    	mov    0x1d4(%rbx),%ecx
   28f3b:	48 01 d0             	add    %rdx,%rax
   28f3e:	48 01 d1             	add    %rdx,%rcx
   28f41:	8b 30                	mov    (%rax),%esi
   28f43:	8b 39                	mov    (%rcx),%edi
   28f45:	8b 8b e0 01 00 00    	mov    0x1e0(%rbx),%ecx
   28f4b:	48 01 d1             	add    %rdx,%rcx
   28f4e:	8b 01                	mov    (%rcx),%eax
   28f50:	8d 4e 01             	lea    0x1(%rsi),%ecx
   28f53:	29 f9                	sub    %edi,%ecx
   28f55:	39 c1                	cmp    %eax,%ecx
   28f57:	77 27                	ja     28f80 <iouring_sqe_get+0x60>
   28f59:	8b 83 dc 01 00 00    	mov    0x1dc(%rbx),%eax
   28f5f:	48 01 c2             	add    %rax,%rdx
   28f62:	8b 02                	mov    (%rdx),%eax
   28f64:	21 f0                	and    %esi,%eax
   28f66:	48 c1 e0 06          	shl    $0x6,%rax
   28f6a:	48 03 83 c0 01 00 00 	add    0x1c0(%rbx),%rax
   28f71:	48 83 c4 10          	add    $0x10,%rsp
   28f75:	5b                   	pop    %rbx
   28f76:	c3                   	retq   
   28f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   28f7e:	00 00 
   28f80:	48 8b 83 f0 04 00 00 	mov    0x4f0(%rbx),%rax
   28f87:	48 85 c0             	test   %rax,%rax
   28f8a:	75 77                	jne    29003 <iouring_sqe_get+0xe3>
   28f8c:	48 83 ec 08          	sub    $0x8,%rsp
   28f90:	8b 93 a4 01 00 00    	mov    0x1a4(%rbx),%edx
   28f96:	45 31 c9             	xor    %r9d,%r9d
   28f99:	45 31 c0             	xor    %r8d,%r8d
   28f9c:	6a 00                	pushq  $0x0
   28f9e:	8b b3 a0 01 00 00    	mov    0x1a0(%rbx),%esi
   28fa4:	b9 01 00 00 00       	mov    $0x1,%ecx
   28fa9:	31 c0                	xor    %eax,%eax
   28fab:	bf aa 01 00 00       	mov    $0x1aa,%edi
   28fb0:	e8 db 72 fe ff       	callq  10290 <syscall@plt>
   28fb5:	5a                   	pop    %rdx
   28fb6:	59                   	pop    %rcx
   28fb7:	85 c0                	test   %eax,%eax
   28fb9:	78 08                	js     28fc3 <iouring_sqe_get+0xa3>
   28fbb:	39 83 a4 01 00 00    	cmp    %eax,0x1a4(%rbx)
   28fc1:	75 47                	jne    2900a <iouring_sqe_get+0xea>
   28fc3:	48 8b 93 f8 04 00 00 	mov    0x4f8(%rbx),%rdx
   28fca:	c7 83 a4 01 00 00 00 	movl   $0x0,0x1a4(%rbx)
   28fd1:	00 00 00 
   28fd4:	48 85 d2             	test   %rdx,%rdx
   28fd7:	75 19                	jne    28ff2 <iouring_sqe_get+0xd2>
   28fd9:	85 c0                	test   %eax,%eax
   28fdb:	0f 89 47 ff ff ff    	jns    28f28 <iouring_sqe_get+0x8>
   28fe1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   28fe5:	48 89 df             	mov    %rbx,%rdi
   28fe8:	e8 23 fd ff ff       	callq  28d10 <iouring_poll>
   28fed:	e9 36 ff ff ff       	jmpq   28f28 <iouring_sqe_get+0x8>
   28ff2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28ff7:	48 89 df             	mov    %rbx,%rdi
   28ffa:	ff d2                	callq  *%rdx
   28ffc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   29001:	eb d6                	jmp    28fd9 <iouring_sqe_get+0xb9>
   29003:	48 89 df             	mov    %rbx,%rdi
   29006:	ff d0                	callq  *%rax
   29008:	eb 82                	jmp    28f8c <iouring_sqe_get+0x6c>
   2900a:	e8 41 e7 ff ff       	callq  27750 <iouring_enter.part.7>

000000000002900f <.annobin_iouring_modify.start>:
   2900f:	90                   	nop

0000000000029010 <iouring_modify>:
   29010:	f3 0f 1e fa          	endbr64 
   29014:	41 54                	push   %r12
   29016:	41 89 cc             	mov    %ecx,%r12d
   29019:	55                   	push   %rbp
   2901a:	89 f5                	mov    %esi,%ebp
   2901c:	53                   	push   %rbx
   2901d:	48 89 fb             	mov    %rdi,%rbx
   29020:	85 d2                	test   %edx,%edx
   29022:	75 14                	jne    29038 <iouring_modify+0x28>
   29024:	45 85 e4             	test   %r12d,%r12d
   29027:	0f 85 8d 00 00 00    	jne    290ba <iouring_modify+0xaa>
   2902d:	5b                   	pop    %rbx
   2902e:	5d                   	pop    %rbp
   2902f:	41 5c                	pop    %r12
   29031:	c3                   	retq   
   29032:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29038:	e8 e3 fe ff ff       	callq  28f20 <iouring_sqe_get>
   2903d:	48 63 d5             	movslq %ebp,%rdx
   29040:	89 ee                	mov    %ebp,%esi
   29042:	c6 00 07             	movb   $0x7,(%rax)
   29045:	48 8b 8b e0 00 00 00 	mov    0xe0(%rbx),%rcx
   2904c:	48 c1 e2 04          	shl    $0x4,%rdx
   29050:	89 68 04             	mov    %ebp,0x4(%rax)
   29053:	48 8b bb b0 01 00 00 	mov    0x1b0(%rbx),%rdi
   2905a:	8b 4c 11 0c          	mov    0xc(%rcx,%rdx,1),%ecx
   2905e:	48 c7 40 20 ff ff ff 	movq   $0xffffffffffffffff,0x20(%rax)
   29065:	ff 
   29066:	48 c1 e1 20          	shl    $0x20,%rcx
   2906a:	48 09 f1             	or     %rsi,%rcx
   2906d:	8b b3 ec 01 00 00    	mov    0x1ec(%rbx),%esi
   29073:	48 89 48 10          	mov    %rcx,0x10(%rax)
   29077:	48 2b 83 c0 01 00 00 	sub    0x1c0(%rbx),%rax
   2907e:	48 c1 f8 06          	sar    $0x6,%rax
   29082:	89 c1                	mov    %eax,%ecx
   29084:	48 8d 0c 8f          	lea    (%rdi,%rcx,4),%rcx
   29088:	89 04 31             	mov    %eax,(%rcx,%rsi,1)
   2908b:	8b 83 d8 01 00 00    	mov    0x1d8(%rbx),%eax
   29091:	48 03 83 b0 01 00 00 	add    0x1b0(%rbx),%rax
   29098:	8b 08                	mov    (%rax),%ecx
   2909a:	48 03 93 e0 00 00 00 	add    0xe0(%rbx),%rdx
   290a1:	83 c1 01             	add    $0x1,%ecx
   290a4:	89 08                	mov    %ecx,(%rax)
   290a6:	83 83 a4 01 00 00 01 	addl   $0x1,0x1a4(%rbx)
   290ad:	83 42 0c 01          	addl   $0x1,0xc(%rdx)
   290b1:	45 85 e4             	test   %r12d,%r12d
   290b4:	0f 84 73 ff ff ff    	je     2902d <iouring_modify+0x1d>
   290ba:	48 89 df             	mov    %rbx,%rdi
   290bd:	e8 5e fe ff ff       	callq  28f20 <iouring_sqe_get>
   290c2:	48 63 d5             	movslq %ebp,%rdx
   290c5:	43 8d 0c 24          	lea    (%r12,%r12,1),%ecx
   290c9:	41 83 e4 01          	and    $0x1,%r12d
   290cd:	c6 00 06             	movb   $0x6,(%rax)
   290d0:	48 c1 e2 04          	shl    $0x4,%rdx
   290d4:	48 03 93 e0 00 00 00 	add    0xe0(%rbx),%rdx
   290db:	83 e1 04             	and    $0x4,%ecx
   290de:	8b 72 0c             	mov    0xc(%rdx),%esi
   290e1:	89 68 04             	mov    %ebp,0x4(%rax)
   290e4:	89 ed                	mov    %ebp,%ebp
   290e6:	41 09 cc             	or     %ecx,%r12d
   290e9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   290f0:	00 
   290f1:	8b 8b ec 01 00 00    	mov    0x1ec(%rbx),%ecx
   290f7:	48 c1 e6 20          	shl    $0x20,%rsi
   290fb:	66 44 89 60 1c       	mov    %r12w,0x1c(%rax)
   29100:	48 09 f5             	or     %rsi,%rbp
   29103:	48 8b b3 b0 01 00 00 	mov    0x1b0(%rbx),%rsi
   2910a:	48 89 68 20          	mov    %rbp,0x20(%rax)
   2910e:	48 2b 83 c0 01 00 00 	sub    0x1c0(%rbx),%rax
   29115:	48 c1 f8 06          	sar    $0x6,%rax
   29119:	89 c2                	mov    %eax,%edx
   2911b:	48 8d 14 96          	lea    (%rsi,%rdx,4),%rdx
   2911f:	89 04 0a             	mov    %eax,(%rdx,%rcx,1)
   29122:	8b 83 d8 01 00 00    	mov    0x1d8(%rbx),%eax
   29128:	48 03 83 b0 01 00 00 	add    0x1b0(%rbx),%rax
   2912f:	8b 10                	mov    (%rax),%edx
   29131:	83 c2 01             	add    $0x1,%edx
   29134:	89 10                	mov    %edx,(%rax)
   29136:	83 83 a4 01 00 00 01 	addl   $0x1,0x1a4(%rbx)
   2913d:	5b                   	pop    %rbx
   2913e:	5d                   	pop    %rbp
   2913f:	41 5c                	pop    %r12
   29141:	c3                   	retq   

0000000000029142 <.annobin_epoll_modify.start>:
   29142:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   29149:	00 00 00 00 
   2914d:	0f 1f 00             	nopl   (%rax)

0000000000029150 <epoll_modify>:
   29150:	f3 0f 1e fa          	endbr64 
   29154:	41 57                	push   %r15
   29156:	41 56                	push   %r14
   29158:	41 55                	push   %r13
   2915a:	41 54                	push   %r12
   2915c:	55                   	push   %rbp
   2915d:	53                   	push   %rbx
   2915e:	48 83 ec 28          	sub    $0x28,%rsp
   29162:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   29169:	00 00 
   2916b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29170:	31 c0                	xor    %eax,%eax
   29172:	85 c9                	test   %ecx,%ecx
   29174:	74 6d                	je     291e3 <epoll_modify+0x93>
   29176:	89 cb                	mov    %ecx,%ebx
   29178:	48 63 ee             	movslq %esi,%rbp
   2917b:	48 8b 8f e0 00 00 00 	mov    0xe0(%rdi),%rcx
   29182:	41 89 f5             	mov    %esi,%r13d
   29185:	48 c1 e5 04          	shl    $0x4,%rbp
   29189:	49 89 fe             	mov    %rdi,%r14
   2918c:	48 01 e9             	add    %rbp,%rcx
   2918f:	8b 41 0c             	mov    0xc(%rcx),%eax
   29192:	44 0f b6 61 0a       	movzbl 0xa(%rcx),%r12d
   29197:	88 59 0a             	mov    %bl,0xa(%rcx)
   2919a:	83 c0 01             	add    $0x1,%eax
   2919d:	89 41 0c             	mov    %eax,0xc(%rcx)
   291a0:	89 f1                	mov    %esi,%ecx
   291a2:	48 c1 e0 20          	shl    $0x20,%rax
   291a6:	be 01 00 00 00       	mov    $0x1,%esi
   291ab:	48 09 c8             	or     %rcx,%rax
   291ae:	89 d9                	mov    %ebx,%ecx
   291b0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   291b5:	8d 04 1b             	lea    (%rbx,%rbx,1),%eax
   291b8:	83 e1 01             	and    $0x1,%ecx
   291bb:	83 e0 04             	and    $0x4,%eax
   291be:	09 c8                	or     %ecx,%eax
   291c0:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   291c4:	85 d2                	test   %edx,%edx
   291c6:	75 48                	jne    29210 <epoll_modify+0xc0>
   291c8:	4c 8d 7c 24 0c       	lea    0xc(%rsp),%r15
   291cd:	41 8b be c4 00 00 00 	mov    0xc4(%r14),%edi
   291d4:	44 89 ea             	mov    %r13d,%edx
   291d7:	4c 89 f9             	mov    %r15,%rcx
   291da:	e8 61 6f fe ff       	callq  10140 <epoll_ctl@plt>
   291df:	85 c0                	test   %eax,%eax
   291e1:	75 45                	jne    29228 <epoll_modify+0xd8>
   291e3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   291e8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   291ef:	00 00 
   291f1:	0f 85 f7 00 00 00    	jne    292ee <epoll_modify+0x19e>
   291f7:	48 83 c4 28          	add    $0x28,%rsp
   291fb:	5b                   	pop    %rbx
   291fc:	5d                   	pop    %rbp
   291fd:	41 5c                	pop    %r12
   291ff:	41 5d                	pop    %r13
   29201:	41 5e                	pop    %r14
   29203:	41 5f                	pop    %r15
   29205:	c3                   	retq   
   29206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2920d:	00 00 00 
   29210:	41 0f b6 c4          	movzbl %r12b,%eax
   29214:	31 f6                	xor    %esi,%esi
   29216:	39 d8                	cmp    %ebx,%eax
   29218:	40 0f 95 c6          	setne  %sil
   2921c:	8d 74 36 01          	lea    0x1(%rsi,%rsi,1),%esi
   29220:	eb a6                	jmp    291c8 <epoll_modify+0x78>
   29222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29228:	e8 e3 68 fe ff       	callq  fb10 <__errno_location@plt>
   2922d:	8b 00                	mov    (%rax),%eax
   2922f:	83 f8 02             	cmp    $0x2,%eax
   29232:	75 24                	jne    29258 <epoll_modify+0x108>
   29234:	41 8b be c4 00 00 00 	mov    0xc4(%r14),%edi
   2923b:	4c 89 f9             	mov    %r15,%rcx
   2923e:	44 89 ea             	mov    %r13d,%edx
   29241:	be 01 00 00 00       	mov    $0x1,%esi
   29246:	e8 f5 6e fe ff       	callq  10140 <epoll_ctl@plt>
   2924b:	85 c0                	test   %eax,%eax
   2924d:	74 94                	je     291e3 <epoll_modify+0x93>
   2924f:	eb 37                	jmp    29288 <epoll_modify+0x138>
   29251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29258:	83 f8 11             	cmp    $0x11,%eax
   2925b:	75 46                	jne    292a3 <epoll_modify+0x153>
   2925d:	41 39 dc             	cmp    %ebx,%r12d
   29260:	74 31                	je     29293 <epoll_modify+0x143>
   29262:	41 8b be c4 00 00 00 	mov    0xc4(%r14),%edi
   29269:	4c 89 f9             	mov    %r15,%rcx
   2926c:	44 89 ea             	mov    %r13d,%edx
   2926f:	be 03 00 00 00       	mov    $0x3,%esi
   29274:	e8 c7 6e fe ff       	callq  10140 <epoll_ctl@plt>
   29279:	85 c0                	test   %eax,%eax
   2927b:	0f 84 62 ff ff ff    	je     291e3 <epoll_modify+0x93>
   29281:	eb 05                	jmp    29288 <epoll_modify+0x138>
   29283:	83 f8 28             	cmp    $0x28,%eax
   29286:	76 6b                	jbe    292f3 <epoll_modify+0x1a3>
   29288:	44 89 ee             	mov    %r13d,%esi
   2928b:	4c 89 f7             	mov    %r14,%rdi
   2928e:	e8 d8 8c fe ff       	callq  11f6b <fd_kill>
   29293:	49 03 ae e0 00 00 00 	add    0xe0(%r14),%rbp
   2929a:	83 6d 0c 01          	subl   $0x1,0xc(%rbp)
   2929e:	e9 40 ff ff ff       	jmpq   291e3 <epoll_modify+0x93>
   292a3:	83 f8 01             	cmp    $0x1,%eax
   292a6:	75 db                	jne    29283 <epoll_modify+0x133>
   292a8:	49 8b 86 e0 00 00 00 	mov    0xe0(%r14),%rax
   292af:	c6 44 28 0a 80       	movb   $0x80,0xa(%rax,%rbp,1)
   292b4:	45 84 e4             	test   %r12b,%r12b
   292b7:	0f 88 26 ff ff ff    	js     291e3 <epoll_modify+0x93>
   292bd:	49 63 96 98 01 00 00 	movslq 0x198(%r14),%rdx
   292c4:	49 8b b6 90 01 00 00 	mov    0x190(%r14),%rsi
   292cb:	8d 4a 01             	lea    0x1(%rdx),%ecx
   292ce:	41 3b 96 9c 01 00 00 	cmp    0x19c(%r14),%edx
   292d5:	0f 8d da 8c fe ff    	jge    11fb5 <epoll_modify.cold.29>
   292db:	8d 42 01             	lea    0x1(%rdx),%eax
   292de:	41 89 86 98 01 00 00 	mov    %eax,0x198(%r14)
   292e5:	44 89 2c 96          	mov    %r13d,(%rsi,%rdx,4)
   292e9:	e9 f5 fe ff ff       	jmpq   291e3 <epoll_modify+0x93>
   292ee:	e8 5d 6b fe ff       	callq  fe50 <__stack_chk_fail@plt>
   292f3:	ba 01 20 00 80       	mov    $0x80002001,%edx
   292f8:	48 c1 e2 09          	shl    $0x9,%rdx
   292fc:	48 0f a3 c2          	bt     %rax,%rdx
   29300:	73 86                	jae    29288 <epoll_modify+0x138>
   29302:	48 8d 0d ef 9d 01 00 	lea    0x19def(%rip),%rcx        # 430f8 <__PRETTY_FUNCTION__.10658>
   29309:	ba 86 00 00 00       	mov    $0x86,%edx
   2930e:	48 8d 35 e3 90 01 00 	lea    0x190e3(%rip),%rsi        # 423f8 <__FUNCTION__.3752+0x1b8>
   29315:	48 8d 3d 3c 97 01 00 	lea    0x1973c(%rip),%rdi        # 42a58 <__FUNCTION__.3752+0x818>
   2931c:	e8 df 6c fe ff       	callq  10000 <__assert_fail@plt>

0000000000029321 <.annobin_epoll_modify.end>:
   29321:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   29328:	00 00 00 00 
   2932c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000029330 <poll_poll>:
   29330:	f3 0f 1e fa          	endbr64 
   29334:	41 56                	push   %r14
   29336:	49 89 fe             	mov    %rdi,%r14
   29339:	41 55                	push   %r13
   2933b:	41 54                	push   %r12
   2933d:	55                   	push   %rbp
   2933e:	53                   	push   %rbx
   2933f:	48 83 ec 10          	sub    $0x10,%rsp
   29343:	48 8b 87 f0 04 00 00 	mov    0x4f0(%rdi),%rax
   2934a:	48 85 c0             	test   %rax,%rax
   2934d:	0f 85 54 01 00 00    	jne    294a7 <poll_poll+0x177>
   29353:	f2 0f 59 05 75 61 01 	mulsd  0x16175(%rip),%xmm0        # 3f4d0 <f58_prefix+0x6d>
   2935a:	00 
   2935b:	49 63 b6 6c 01 00 00 	movslq 0x16c(%r14),%rsi
   29362:	f2 0f 58 05 2e 9e 01 	addsd  0x19e2e(%rip),%xmm0        # 43198 <__PRETTY_FUNCTION__.11024+0x58>
   29369:	00 
  __warnattr ("poll called with fds buffer too small file nfds entries");

__fortify_function int
poll (struct pollfd *__fds, nfds_t __nfds, int __timeout)
{
  return __glibc_fortify (poll, __nfds, sizeof (*__fds),
   2936a:	49 8b be 60 01 00 00 	mov    0x160(%r14),%rdi
   29371:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   29375:	e8 06 73 fe ff       	callq  10680 <poll@plt>
   2937a:	41 89 c4             	mov    %eax,%r12d
   2937d:	49 8b 86 f8 04 00 00 	mov    0x4f8(%r14),%rax
   29384:	48 85 c0             	test   %rax,%rax
   29387:	0f 85 2d 01 00 00    	jne    294ba <poll_poll+0x18a>
   2938d:	45 85 e4             	test   %r12d,%r12d
   29390:	0f 88 cb 00 00 00    	js     29461 <poll_poll+0x131>
   29396:	49 8b 96 60 01 00 00 	mov    0x160(%r14),%rdx
   2939d:	48 89 d3             	mov    %rdx,%rbx
   293a0:	0f 84 d5 00 00 00    	je     2947b <poll_poll+0x14b>
   293a6:	49 63 86 6c 01 00 00 	movslq 0x16c(%r14),%rax
   293ad:	48 89 c1             	mov    %rax,%rcx
   293b0:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   293b4:	48 39 c2             	cmp    %rax,%rdx
   293b7:	72 1b                	jb     293d4 <poll_poll+0xa4>
   293b9:	e9 32 01 00 00       	jmpq   294f0 <poll_poll+0x1c0>
   293be:	66 90                	xchg   %ax,%ax
   293c0:	48 83 c3 08          	add    $0x8,%rbx
   293c4:	48 63 c1             	movslq %ecx,%rax
   293c7:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   293cb:	48 39 c3             	cmp    %rax,%rbx
   293ce:	0f 83 1c 01 00 00    	jae    294f0 <poll_poll+0x1c0>
   293d4:	0f b7 43 06          	movzwl 0x6(%rbx),%eax
   293d8:	66 85 c0             	test   %ax,%ax
   293db:	74 e3                	je     293c0 <poll_poll+0x90>
   293dd:	41 83 ec 01          	sub    $0x1,%r12d
   293e1:	a8 20                	test   $0x20,%al
   293e3:	0f 85 9f 00 00 00    	jne    29488 <poll_poll+0x158>
   293e9:	31 d2                	xor    %edx,%edx
   293eb:	a8 1c                	test   $0x1c,%al
   293ed:	0f 95 c2             	setne  %dl
   293f0:	45 31 ed             	xor    %r13d,%r13d
   293f3:	01 d2                	add    %edx,%edx
   293f5:	a8 19                	test   $0x19,%al
   293f7:	48 63 03             	movslq (%rbx),%rax
   293fa:	41 0f 95 c5          	setne  %r13b
   293fe:	48 c1 e0 04          	shl    $0x4,%rax
   29402:	49 03 86 e0 00 00 00 	add    0xe0(%r14),%rax
   29409:	41 09 d5             	or     %edx,%r13d
   2940c:	80 78 09 00          	cmpb   $0x0,0x9(%rax)
   29410:	75 33                	jne    29445 <poll_poll+0x115>
   29412:	48 8b 28             	mov    (%rax),%rbp
   29415:	48 85 ed             	test   %rbp,%rbp
   29418:	75 0f                	jne    29429 <poll_poll+0xf9>
   2941a:	eb 29                	jmp    29445 <poll_poll+0x115>
   2941c:	0f 1f 40 00          	nopl   0x0(%rax)
   29420:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   29424:	48 85 ed             	test   %rbp,%rbp
   29427:	74 1c                	je     29445 <poll_poll+0x115>
   29429:	44 89 ea             	mov    %r13d,%edx
   2942c:	23 55 2c             	and    0x2c(%rbp),%edx
   2942f:	74 ef                	je     29420 <poll_poll+0xf0>
   29431:	48 89 ee             	mov    %rbp,%rsi
   29434:	4c 89 f7             	mov    %r14,%rdi
   29437:	e8 04 e7 ff ff       	callq  27b40 <ev_feed_event>
   2943c:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
   29440:	48 85 ed             	test   %rbp,%rbp
   29443:	75 e4                	jne    29429 <poll_poll+0xf9>
   29445:	48 83 c3 08          	add    $0x8,%rbx
   29449:	45 85 e4             	test   %r12d,%r12d
   2944c:	74 2d                	je     2947b <poll_poll+0x14b>
   2944e:	41 8b 8e 6c 01 00 00 	mov    0x16c(%r14),%ecx
   29455:	49 8b 96 60 01 00 00 	mov    0x160(%r14),%rdx
   2945c:	e9 63 ff ff ff       	jmpq   293c4 <poll_poll+0x94>
   29461:	e8 aa 66 fe ff       	callq  fb10 <__errno_location@plt>
   29466:	8b 00                	mov    (%rax),%eax
   29468:	83 f8 09             	cmp    $0x9,%eax
   2946b:	0f 84 ff 8b fe ff    	je     12070 <poll_poll.cold.30+0x11>
   29471:	83 f8 0c             	cmp    $0xc,%eax
   29474:	74 4e                	je     294c4 <poll_poll+0x194>
   29476:	83 f8 04             	cmp    $0x4,%eax
   29479:	75 57                	jne    294d2 <poll_poll+0x1a2>
   2947b:	48 83 c4 10          	add    $0x10,%rsp
   2947f:	5b                   	pop    %rbx
   29480:	5d                   	pop    %rbp
   29481:	41 5c                	pop    %r12
   29483:	41 5d                	pop    %r13
   29485:	41 5e                	pop    %r14
   29487:	c3                   	retq   
   29488:	48 8d 0d 59 9c 01 00 	lea    0x19c59(%rip),%rcx        # 430e8 <__PRETTY_FUNCTION__.11082>
   2948f:	ba 79 00 00 00       	mov    $0x79,%edx
   29494:	48 8d 35 cb 8d 01 00 	lea    0x18dcb(%rip),%rsi        # 42266 <__FUNCTION__.3752+0x26>
   2949b:	48 8d 3d 7e 96 01 00 	lea    0x1967e(%rip),%rdi        # 42b20 <__FUNCTION__.3752+0x8e0>
   294a2:	e8 59 6b fe ff       	callq  10000 <__assert_fail@plt>
   294a7:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   294ad:	ff d0                	callq  *%rax
   294af:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   294b5:	e9 99 fe ff ff       	jmpq   29353 <poll_poll+0x23>
   294ba:	4c 89 f7             	mov    %r14,%rdi
   294bd:	ff d0                	callq  *%rax
   294bf:	e9 c9 fe ff ff       	jmpq   2938d <poll_poll+0x5d>
   294c4:	48 83 3d 3c ec 22 00 	cmpq   $0x0,0x22ec3c(%rip)        # 258108 <syserr_cb>
   294cb:	00 
   294cc:	0f 84 8d 8b fe ff    	je     1205f <poll_poll.cold.30>
   294d2:	48 83 c4 10          	add    $0x10,%rsp
   294d6:	48 8d 3d 26 8f 01 00 	lea    0x18f26(%rip),%rdi        # 42403 <__FUNCTION__.3752+0x1c3>
   294dd:	5b                   	pop    %rbx
   294de:	5d                   	pop    %rbp
   294df:	41 5c                	pop    %r12
   294e1:	41 5d                	pop    %r13
   294e3:	41 5e                	pop    %r14
   294e5:	e9 da 78 fe ff       	jmpq   10dc4 <ev_syserr>
   294ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   294f0:	48 8d 0d f1 9b 01 00 	lea    0x19bf1(%rip),%rcx        # 430e8 <__PRETTY_FUNCTION__.11082>
   294f7:	ba 71 00 00 00       	mov    $0x71,%edx
   294fc:	48 8d 35 63 8d 01 00 	lea    0x18d63(%rip),%rsi        # 42266 <__FUNCTION__.3752+0x26>
   29503:	48 8d 3d be 95 01 00 	lea    0x195be(%rip),%rdi        # 42ac8 <__FUNCTION__.3752+0x888>
   2950a:	e8 f1 6a fe ff       	callq  10000 <__assert_fail@plt>

000000000002950f <.annobin_poll_poll.end>:
   2950f:	90                   	nop

0000000000029510 <select_poll>:
   29510:	f3 0f 1e fa          	endbr64 
   29514:	41 57                	push   %r15
   29516:	49 89 ff             	mov    %rdi,%r15
   29519:	41 56                	push   %r14
   2951b:	41 55                	push   %r13
   2951d:	41 54                	push   %r12
   2951f:	55                   	push   %rbp
   29520:	53                   	push   %rbx
   29521:	48 83 ec 48          	sub    $0x48,%rsp
   29525:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2952c:	00 00 
   2952e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   29533:	31 c0                	xor    %eax,%eax
   29535:	48 8b 87 f0 04 00 00 	mov    0x4f0(%rdi),%rax
   2953c:	48 85 c0             	test   %rax,%rax
   2953f:	0f 85 d9 01 00 00    	jne    2971e <select_poll+0x20e>
   29545:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   2954a:	66 0f ef c9          	pxor   %xmm1,%xmm1
  return __builtin___memcpy_chk (__dest, __src, __len,
   2954e:	49 8b bf 40 01 00 00 	mov    0x140(%r15),%rdi
   29555:	49 8b b7 38 01 00 00 	mov    0x138(%r15),%rsi
   2955c:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
   29561:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   29566:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2956a:	f2 0f 59 05 46 8a 01 	mulsd  0x18a46(%rip),%xmm0        # 41fb8 <f58_prefix+0x2b55>
   29571:	00 
   29572:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
   29577:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2957c:	41 8b 87 58 01 00 00 	mov    0x158(%r15),%eax
   29583:	8d 1c c5 00 00 00 00 	lea    0x0(,%rax,8),%ebx
   2958a:	48 63 db             	movslq %ebx,%rbx
   2958d:	48 89 da             	mov    %rbx,%rdx
   29590:	e8 7b 6d fe ff       	callq  10310 <memcpy@plt>
   29595:	49 8b bf 50 01 00 00 	mov    0x150(%r15),%rdi
   2959c:	49 8b b7 48 01 00 00 	mov    0x148(%r15),%rsi
   295a3:	48 89 da             	mov    %rbx,%rdx
   295a6:	e8 65 6d fe ff       	callq  10310 <memcpy@plt>
   295ab:	41 8b bf 58 01 00 00 	mov    0x158(%r15),%edi
   295b2:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
   295b7:	31 c9                	xor    %ecx,%ecx
   295b9:	49 8b 97 50 01 00 00 	mov    0x150(%r15),%rdx
   295c0:	49 8b b7 40 01 00 00 	mov    0x140(%r15),%rsi
   295c7:	c1 e7 06             	shl    $0x6,%edi
   295ca:	e8 d1 6d fe ff       	callq  103a0 <select@plt>
   295cf:	49 8b 97 f8 04 00 00 	mov    0x4f8(%r15),%rdx
   295d6:	48 85 d2             	test   %rdx,%rdx
   295d9:	0f 85 52 01 00 00    	jne    29731 <select_poll+0x221>
   295df:	85 c0                	test   %eax,%eax
   295e1:	0f 88 5f 01 00 00    	js     29746 <select_poll+0x236>
   295e7:	49 63 87 58 01 00 00 	movslq 0x158(%r15),%rax
   295ee:	89 44 24 14          	mov    %eax,0x14(%rsp)
   295f2:	48 8d 04 c5 f8 ff ff 	lea    -0x8(,%rax,8),%rax
   295f9:	ff 
   295fa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   295ff:	eb 0d                	jmp    2960e <select_poll+0xfe>
   29601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29608:	48 83 6c 24 18 08    	subq   $0x8,0x18(%rsp)
   2960e:	83 6c 24 14 01       	subl   $0x1,0x14(%rsp)
   29613:	8b 44 24 14          	mov    0x14(%rsp),%eax
   29617:	83 f8 ff             	cmp    $0xffffffff,%eax
   2961a:	0f 84 df 00 00 00    	je     296ff <select_poll+0x1ef>
   29620:	49 8b 87 40 01 00 00 	mov    0x140(%r15),%rax
   29627:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   2962c:	48 8b 2c 30          	mov    (%rax,%rsi,1),%rbp
   29630:	49 8b 87 50 01 00 00 	mov    0x150(%r15),%rax
   29637:	4c 8b 24 30          	mov    (%rax,%rsi,1),%r12
   2963b:	48 89 e8             	mov    %rbp,%rax
   2963e:	4c 09 e0             	or     %r12,%rax
   29641:	74 c5                	je     29608 <select_poll+0xf8>
   29643:	8b 44 24 14          	mov    0x14(%rsp),%eax
   29647:	41 bd 3f 00 00 00    	mov    $0x3f,%r13d
   2964d:	c1 e0 06             	shl    $0x6,%eax
   29650:	89 44 24 08          	mov    %eax,0x8(%rsp)
   29654:	0f 1f 40 00          	nopl   0x0(%rax)
   29658:	b8 01 00 00 00       	mov    $0x1,%eax
   2965d:	44 89 e9             	mov    %r13d,%ecx
   29660:	48 89 ea             	mov    %rbp,%rdx
   29663:	31 db                	xor    %ebx,%ebx
   29665:	48 d3 e0             	shl    %cl,%rax
   29668:	48 21 c2             	and    %rax,%rdx
   2966b:	0f 95 c3             	setne  %bl
   2966e:	49 85 c4             	test   %rax,%r12
   29671:	75 6d                	jne    296e0 <select_poll+0x1d0>
   29673:	48 85 d2             	test   %rdx,%rdx
   29676:	74 55                	je     296cd <select_poll+0x1bd>
   29678:	bb 01 00 00 00       	mov    $0x1,%ebx
   2967d:	8b 44 24 08          	mov    0x8(%rsp),%eax
   29681:	44 01 e8             	add    %r13d,%eax
   29684:	48 98                	cltq   
   29686:	48 c1 e0 04          	shl    $0x4,%rax
   2968a:	49 03 87 e0 00 00 00 	add    0xe0(%r15),%rax
   29691:	80 78 09 00          	cmpb   $0x0,0x9(%rax)
   29695:	75 36                	jne    296cd <select_poll+0x1bd>
   29697:	4c 8b 30             	mov    (%rax),%r14
   2969a:	4d 85 f6             	test   %r14,%r14
   2969d:	75 12                	jne    296b1 <select_poll+0x1a1>
   2969f:	eb 2c                	jmp    296cd <select_poll+0x1bd>
   296a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   296a8:	4d 8b 76 20          	mov    0x20(%r14),%r14
   296ac:	4d 85 f6             	test   %r14,%r14
   296af:	74 1c                	je     296cd <select_poll+0x1bd>
   296b1:	89 da                	mov    %ebx,%edx
   296b3:	41 23 56 2c          	and    0x2c(%r14),%edx
   296b7:	74 ef                	je     296a8 <select_poll+0x198>
   296b9:	4c 89 f6             	mov    %r14,%rsi
   296bc:	4c 89 ff             	mov    %r15,%rdi
   296bf:	e8 7c e4 ff ff       	callq  27b40 <ev_feed_event>
   296c4:	4d 8b 76 20          	mov    0x20(%r14),%r14
   296c8:	4d 85 f6             	test   %r14,%r14
   296cb:	75 e4                	jne    296b1 <select_poll+0x1a1>
   296cd:	41 83 ed 01          	sub    $0x1,%r13d
   296d1:	41 83 fd ff          	cmp    $0xffffffff,%r13d
   296d5:	75 81                	jne    29658 <select_poll+0x148>
   296d7:	e9 2c ff ff ff       	jmpq   29608 <select_poll+0xf8>
   296dc:	0f 1f 40 00          	nopl   0x0(%rax)
   296e0:	83 cb 02             	or     $0x2,%ebx
   296e3:	eb 98                	jmp    2967d <select_poll+0x16d>
   296e5:	48 83 3d 1b ea 22 00 	cmpq   $0x0,0x22ea1b(%rip)        # 258108 <syserr_cb>
   296ec:	00 
   296ed:	0f 84 91 89 fe ff    	je     12084 <select_poll.cold.31>
   296f3:	48 8d 3d 16 8d 01 00 	lea    0x18d16(%rip),%rdi        # 42410 <__FUNCTION__.3752+0x1d0>
   296fa:	e8 c5 76 fe ff       	callq  10dc4 <ev_syserr>
   296ff:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   29704:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2970b:	00 00 
   2970d:	75 53                	jne    29762 <select_poll+0x252>
   2970f:	48 83 c4 48          	add    $0x48,%rsp
   29713:	5b                   	pop    %rbx
   29714:	5d                   	pop    %rbp
   29715:	41 5c                	pop    %r12
   29717:	41 5d                	pop    %r13
   29719:	41 5e                	pop    %r14
   2971b:	41 5f                	pop    %r15
   2971d:	c3                   	retq   
   2971e:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   29724:	ff d0                	callq  *%rax
   29726:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   2972c:	e9 14 fe ff ff       	jmpq   29545 <select_poll+0x35>
   29731:	89 44 24 08          	mov    %eax,0x8(%rsp)
   29735:	4c 89 ff             	mov    %r15,%rdi
   29738:	ff d2                	callq  *%rdx
   2973a:	8b 44 24 08          	mov    0x8(%rsp),%eax
   2973e:	85 c0                	test   %eax,%eax
   29740:	0f 89 a1 fe ff ff    	jns    295e7 <select_poll+0xd7>
   29746:	e8 c5 63 fe ff       	callq  fb10 <__errno_location@plt>
   2974b:	8b 00                	mov    (%rax),%eax
   2974d:	83 f8 09             	cmp    $0x9,%eax
   29750:	0f 84 3b 89 fe ff    	je     12091 <select_poll.cold.31+0xd>
   29756:	83 f8 0c             	cmp    $0xc,%eax
   29759:	74 8a                	je     296e5 <select_poll+0x1d5>
   2975b:	83 f8 04             	cmp    $0x4,%eax
   2975e:	74 9f                	je     296ff <select_poll+0x1ef>
   29760:	eb 91                	jmp    296f3 <select_poll+0x1e3>
   29762:	e8 e9 66 fe ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000029767 <.annobin_ev_timer_start.start>:
   29767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2976e:	00 00 

0000000000029770 <ev_timer_start>:
   29770:	f3 0f 1e fa          	endbr64 
   29774:	8b 06                	mov    (%rsi),%eax
   29776:	85 c0                	test   %eax,%eax
   29778:	0f 85 32 01 00 00    	jne    298b0 <ev_timer_start+0x140>
   2977e:	55                   	push   %rbp
   2977f:	48 89 fd             	mov    %rdi,%rbp
   29782:	53                   	push   %rbx
   29783:	48 89 f3             	mov    %rsi,%rbx
   29786:	48 83 ec 08          	sub    $0x8,%rsp
   2978a:	f2 0f 10 46 20       	movsd  0x20(%rsi),%xmm0
   2978f:	f2 0f 58 47 10       	addsd  0x10(%rdi),%xmm0
   29794:	f2 0f 11 46 20       	movsd  %xmm0,0x20(%rsi)
   29799:	f2 0f 10 46 28       	movsd  0x28(%rsi),%xmm0
   2979e:	66 0f 2f 05 d2 99 01 	comisd 0x199d2(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   297a5:	00 
   297a6:	0f 82 13 01 00 00    	jb     298bf <ev_timer_start+0x14f>
   297ac:	8b 97 64 02 00 00    	mov    0x264(%rdi),%edx
   297b2:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   297b7:	8d 42 01             	lea    0x1(%rdx),%eax
   297ba:	89 87 64 02 00 00    	mov    %eax,0x264(%rdi)
   297c0:	8b 46 08             	mov    0x8(%rsi),%eax
   297c3:	83 f8 fe             	cmp    $0xfffffffe,%eax
   297c6:	0f 4c c1             	cmovl  %ecx,%eax
   297c9:	b9 02 00 00 00       	mov    $0x2,%ecx
   297ce:	83 f8 02             	cmp    $0x2,%eax
   297d1:	0f 4f c1             	cmovg  %ecx,%eax
   297d4:	83 c2 03             	add    $0x3,%edx
   297d7:	89 16                	mov    %edx,(%rsi)
   297d9:	89 46 08             	mov    %eax,0x8(%rsi)
   297dc:	e8 bf ed ff ff       	callq  285a0 <ev_ref>
   297e1:	8b 3b                	mov    (%rbx),%edi
   297e3:	3b bd 60 02 00 00    	cmp    0x260(%rbp),%edi
   297e9:	0f 8d af 88 fe ff    	jge    1209e <ev_timer_start.cold.32>
   297ef:	48 63 cf             	movslq %edi,%rcx
   297f2:	48 8b b5 58 02 00 00 	mov    0x258(%rbp),%rsi
   297f9:	8d 47 fc             	lea    -0x4(%rdi),%eax
   297fc:	f2 0f 10 43 20       	movsd  0x20(%rbx),%xmm0
   29801:	49 89 c8             	mov    %rcx,%r8
   29804:	8d 50 03             	lea    0x3(%rax),%edx
   29807:	49 c1 e0 04          	shl    $0x4,%r8
   2980b:	49 01 f0             	add    %rsi,%r8
   2980e:	85 c0                	test   %eax,%eax
   29810:	0f 49 d0             	cmovns %eax,%edx
   29813:	49 89 58 08          	mov    %rbx,0x8(%r8)
   29817:	f2 41 0f 11 00       	movsd  %xmm0,(%r8)
   2981c:	c1 fa 02             	sar    $0x2,%edx
   2981f:	83 c2 03             	add    $0x3,%edx
   29822:	39 fa                	cmp    %edi,%edx
   29824:	0f 84 8e 00 00 00    	je     298b8 <ev_timer_start+0x148>
   2982a:	48 63 c2             	movslq %edx,%rax
   2982d:	48 c1 e0 04          	shl    $0x4,%rax
   29831:	48 01 f0             	add    %rsi,%rax
   29834:	66 0f 2f 00          	comisd (%rax),%xmm0
   29838:	72 13                	jb     2984d <ev_timer_start+0xdd>
   2983a:	eb 7c                	jmp    298b8 <ev_timer_start+0x148>
   2983c:	0f 1f 40 00          	nopl   0x0(%rax)
   29840:	66 0f 2f 00          	comisd (%rax),%xmm0
   29844:	89 d7                	mov    %edx,%edi
   29846:	73 50                	jae    29898 <ev_timer_start+0x128>
   29848:	89 ca                	mov    %ecx,%edx
   2984a:	48 63 cf             	movslq %edi,%rcx
   2984d:	f3 0f 6f 08          	movdqu (%rax),%xmm1
   29851:	48 c1 e1 04          	shl    $0x4,%rcx
   29855:	48 01 f1             	add    %rsi,%rcx
   29858:	0f 11 09             	movups %xmm1,(%rcx)
   2985b:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2985f:	89 38                	mov    %edi,(%rax)
   29861:	8d 42 fc             	lea    -0x4(%rdx),%eax
   29864:	85 c0                	test   %eax,%eax
   29866:	8d 48 03             	lea    0x3(%rax),%ecx
   29869:	0f 49 c8             	cmovns %eax,%ecx
   2986c:	c1 f9 02             	sar    $0x2,%ecx
   2986f:	83 c1 03             	add    $0x3,%ecx
   29872:	48 63 c1             	movslq %ecx,%rax
   29875:	48 c1 e0 04          	shl    $0x4,%rax
   29879:	48 01 f0             	add    %rsi,%rax
   2987c:	39 ca                	cmp    %ecx,%edx
   2987e:	75 c0                	jne    29840 <ev_timer_start+0xd0>
   29880:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   29884:	48 89 58 08          	mov    %rbx,0x8(%rax)
   29888:	89 0b                	mov    %ecx,(%rbx)
   2988a:	48 83 c4 08          	add    $0x8,%rsp
   2988e:	5b                   	pop    %rbx
   2988f:	5d                   	pop    %rbp
   29890:	c3                   	retq   
   29891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29898:	48 63 c2             	movslq %edx,%rax
   2989b:	89 d1                	mov    %edx,%ecx
   2989d:	48 c1 e0 04          	shl    $0x4,%rax
   298a1:	48 01 f0             	add    %rsi,%rax
   298a4:	eb da                	jmp    29880 <ev_timer_start+0x110>
   298a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   298ad:	00 00 00 
   298b0:	c3                   	retq   
   298b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   298b8:	4c 89 c0             	mov    %r8,%rax
   298bb:	89 f9                	mov    %edi,%ecx
   298bd:	eb c1                	jmp    29880 <ev_timer_start+0x110>
   298bf:	48 8d 0d 72 97 01 00 	lea    0x19772(%rip),%rcx        # 43038 <__PRETTY_FUNCTION__.11426>
   298c6:	ba 28 11 00 00       	mov    $0x1128,%edx
   298cb:	48 8d 35 8f 89 01 00 	lea    0x1898f(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   298d2:	48 8d 3d 77 92 01 00 	lea    0x19277(%rip),%rdi        # 42b50 <__FUNCTION__.3752+0x910>
   298d9:	e8 22 67 fe ff       	callq  10000 <__assert_fail@plt>

00000000000298de <.annobin_ev_timer_start.end>:
   298de:	66 90                	xchg   %ax,%ax

00000000000298e0 <ev_timer_stop>:
   298e0:	f3 0f 1e fa          	endbr64 
   298e4:	55                   	push   %rbp
   298e5:	53                   	push   %rbx
   298e6:	48 83 ec 08          	sub    $0x8,%rsp
   298ea:	48 63 46 04          	movslq 0x4(%rsi),%rax
   298ee:	85 c0                	test   %eax,%eax
   298f0:	74 24                	je     29916 <ev_timer_stop+0x36>
   298f2:	8b 5e 08             	mov    0x8(%rsi),%ebx
   298f5:	48 c1 e0 04          	shl    $0x4,%rax
   298f9:	8d 53 02             	lea    0x2(%rbx),%edx
   298fc:	48 63 d2             	movslq %edx,%rdx
   298ff:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   29904:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2990b:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2990f:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   29916:	44 8b 16             	mov    (%rsi),%r10d
   29919:	45 85 d2             	test   %r10d,%r10d
   2991c:	0f 84 28 01 00 00    	je     29a4a <ev_timer_stop+0x16a>
   29922:	49 63 d2             	movslq %r10d,%rdx
   29925:	48 89 f3             	mov    %rsi,%rbx
   29928:	48 8b b7 58 02 00 00 	mov    0x258(%rdi),%rsi
   2992f:	48 89 d1             	mov    %rdx,%rcx
   29932:	48 c1 e1 04          	shl    $0x4,%rcx
   29936:	48 01 f1             	add    %rsi,%rcx
   29939:	48 39 59 08          	cmp    %rbx,0x8(%rcx)
   2993d:	0f 85 4e 02 00 00    	jne    29b91 <ev_timer_stop+0x2b1>
   29943:	8b 87 64 02 00 00    	mov    0x264(%rdi),%eax
   29949:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
   2994d:	83 c0 01             	add    $0x1,%eax
   29950:	44 89 87 64 02 00 00 	mov    %r8d,0x264(%rdi)
   29957:	41 39 c2             	cmp    %eax,%r10d
   2995a:	0f 8f d0 00 00 00    	jg     29a30 <ev_timer_stop+0x150>
   29960:	4d 63 c0             	movslq %r8d,%r8
   29963:	49 83 c0 03          	add    $0x3,%r8
   29967:	49 c1 e0 04          	shl    $0x4,%r8
   2996b:	49 01 f0             	add    %rsi,%r8
   2996e:	f3 41 0f 6f 28       	movdqu (%r8),%xmm5
   29973:	0f 11 29             	movups %xmm5,(%rcx)
   29976:	f2 0f 10 09          	movsd  (%rcx),%xmm1
   2997a:	41 83 fa 03          	cmp    $0x3,%r10d
   2997e:	0f 8e e4 01 00 00    	jle    29b68 <ev_timer_stop+0x288>
   29984:	45 8d 5a fc          	lea    -0x4(%r10),%r11d
   29988:	4c 8b 49 08          	mov    0x8(%rcx),%r9
   2998c:	41 c1 fb 02          	sar    $0x2,%r11d
   29990:	49 63 c3             	movslq %r11d,%rax
   29993:	48 83 c0 03          	add    $0x3,%rax
   29997:	48 c1 e0 04          	shl    $0x4,%rax
   2999b:	f2 0f 10 04 06       	movsd  (%rsi,%rax,1),%xmm0
   299a0:	66 0f 2f c1          	comisd %xmm1,%xmm0
   299a4:	0f 82 1c 01 00 00    	jb     29ac6 <ev_timer_stop+0x1e6>
   299aa:	41 83 c3 03          	add    $0x3,%r11d
   299ae:	4d 63 c3             	movslq %r11d,%r8
   299b1:	4c 89 c5             	mov    %r8,%rbp
   299b4:	48 c1 e5 04          	shl    $0x4,%rbp
   299b8:	48 01 f5             	add    %rsi,%rbp
   299bb:	45 39 da             	cmp    %r11d,%r10d
   299be:	0f 84 bd 01 00 00    	je     29b81 <ev_timer_stop+0x2a1>
   299c4:	66 0f 2f 4d 00       	comisd 0x0(%rbp),%xmm1
   299c9:	72 22                	jb     299ed <ev_timer_stop+0x10d>
   299cb:	e9 b9 01 00 00       	jmpq   29b89 <ev_timer_stop+0x2a9>
   299d0:	4c 63 c0             	movslq %eax,%r8
   299d3:	45 89 da             	mov    %r11d,%r10d
   299d6:	4c 89 c5             	mov    %r8,%rbp
   299d9:	48 c1 e5 04          	shl    $0x4,%rbp
   299dd:	48 01 f5             	add    %rsi,%rbp
   299e0:	66 0f 2f 4d 00       	comisd 0x0(%rbp),%xmm1
   299e5:	73 3b                	jae    29a22 <ev_timer_stop+0x142>
   299e7:	41 89 c3             	mov    %eax,%r11d
   299ea:	49 63 d2             	movslq %r10d,%rdx
   299ed:	48 c1 e2 04          	shl    $0x4,%rdx
   299f1:	f3 0f 6f 5d 00       	movdqu 0x0(%rbp),%xmm3
   299f6:	48 01 f2             	add    %rsi,%rdx
   299f9:	0f 11 1a             	movups %xmm3,(%rdx)
   299fc:	48 8b 42 08          	mov    0x8(%rdx),%rax
   29a00:	41 8d 53 fc          	lea    -0x4(%r11),%edx
   29a04:	85 d2                	test   %edx,%edx
   29a06:	44 89 10             	mov    %r10d,(%rax)
   29a09:	8d 42 03             	lea    0x3(%rdx),%eax
   29a0c:	0f 49 c2             	cmovns %edx,%eax
   29a0f:	49 c1 e0 04          	shl    $0x4,%r8
   29a13:	4a 8d 0c 06          	lea    (%rsi,%r8,1),%rcx
   29a17:	c1 f8 02             	sar    $0x2,%eax
   29a1a:	83 c0 03             	add    $0x3,%eax
   29a1d:	44 39 d8             	cmp    %r11d,%eax
   29a20:	75 ae                	jne    299d0 <ev_timer_stop+0xf0>
   29a22:	f2 0f 11 09          	movsd  %xmm1,(%rcx)
   29a26:	4c 89 49 08          	mov    %r9,0x8(%rcx)
   29a2a:	45 89 19             	mov    %r11d,(%r9)
   29a2d:	0f 1f 00             	nopl   (%rax)
   29a30:	f2 0f 10 43 20       	movsd  0x20(%rbx),%xmm0
   29a35:	f2 0f 5c 47 10       	subsd  0x10(%rdi),%xmm0
   29a3a:	f2 0f 11 43 20       	movsd  %xmm0,0x20(%rbx)
   29a3f:	e8 6c eb ff ff       	callq  285b0 <ev_unref>
   29a44:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   29a4a:	48 83 c4 08          	add    $0x8,%rsp
   29a4e:	5b                   	pop    %rbx
   29a4f:	5d                   	pop    %rbp
   29a50:	c3                   	retq   
   29a51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29a58:	f2 0f 10 00          	movsd  (%rax),%xmm0
   29a5c:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   29a61:	48 89 c1             	mov    %rax,%rcx
   29a64:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29a68:	76 08                	jbe    29a72 <ev_timer_stop+0x192>
   29a6a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   29a6e:	66 0f 28 c2          	movapd %xmm2,%xmm0
   29a72:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   29a77:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29a7b:	76 08                	jbe    29a85 <ev_timer_stop+0x1a5>
   29a7d:	48 8d 48 20          	lea    0x20(%rax),%rcx
   29a81:	66 0f 28 c2          	movapd %xmm2,%xmm0
   29a85:	f2 0f 10 50 30       	movsd  0x30(%rax),%xmm2
   29a8a:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29a8e:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   29a92:	49 0f 47 cb          	cmova  %r11,%rcx
   29a96:	66 0f 28 c2          	movapd %xmm2,%xmm0
   29a9a:	48 c1 e2 04          	shl    $0x4,%rdx
   29a9e:	48 01 f2             	add    %rsi,%rdx
   29aa1:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29aa5:	0f 83 95 00 00 00    	jae    29b40 <ev_timer_stop+0x260>
   29aab:	f3 0f 6f 21          	movdqu (%rcx),%xmm4
   29aaf:	0f 11 22             	movups %xmm4,(%rdx)
   29ab2:	48 8b 41 08          	mov    0x8(%rcx),%rax
   29ab6:	48 29 f1             	sub    %rsi,%rcx
   29ab9:	48 c1 f9 04          	sar    $0x4,%rcx
   29abd:	48 63 d1             	movslq %ecx,%rdx
   29ac0:	44 89 10             	mov    %r10d,(%rax)
   29ac3:	49 89 d2             	mov    %rdx,%r10
   29ac6:	42 8d 04 95 f4 ff ff 	lea    -0xc(,%r10,4),%eax
   29acd:	ff 
   29ace:	48 98                	cltq   
   29ad0:	48 83 c0 04          	add    $0x4,%rax
   29ad4:	48 c1 e0 04          	shl    $0x4,%rax
   29ad8:	48 01 f0             	add    %rsi,%rax
   29adb:	4c 8d 58 30          	lea    0x30(%rax),%r11
   29adf:	4d 39 d8             	cmp    %r11,%r8
   29ae2:	0f 87 70 ff ff ff    	ja     29a58 <ev_timer_stop+0x178>
   29ae8:	49 39 c0             	cmp    %rax,%r8
   29aeb:	0f 86 87 00 00 00    	jbe    29b78 <ev_timer_stop+0x298>
   29af1:	48 8d 48 10          	lea    0x10(%rax),%rcx
   29af5:	f2 0f 10 00          	movsd  (%rax),%xmm0
   29af9:	49 39 c8             	cmp    %rcx,%r8
   29afc:	76 52                	jbe    29b50 <ev_timer_stop+0x270>
   29afe:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   29b03:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29b07:	76 47                	jbe    29b50 <ev_timer_stop+0x270>
   29b09:	4c 8d 58 20          	lea    0x20(%rax),%r11
   29b0d:	66 0f 28 c2          	movapd %xmm2,%xmm0
   29b11:	4d 39 d8             	cmp    %r11,%r8
   29b14:	76 84                	jbe    29a9a <ev_timer_stop+0x1ba>
   29b16:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   29b1b:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29b1f:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   29b23:	49 0f 47 cb          	cmova  %r11,%rcx
   29b27:	66 0f 28 c2          	movapd %xmm2,%xmm0
   29b2b:	48 c1 e2 04          	shl    $0x4,%rdx
   29b2f:	48 01 f2             	add    %rsi,%rdx
   29b32:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29b36:	0f 82 6f ff ff ff    	jb     29aab <ev_timer_stop+0x1cb>
   29b3c:	0f 1f 40 00          	nopl   0x0(%rax)
   29b40:	f2 0f 11 0a          	movsd  %xmm1,(%rdx)
   29b44:	4c 89 4a 08          	mov    %r9,0x8(%rdx)
   29b48:	45 89 11             	mov    %r10d,(%r9)
   29b4b:	e9 e0 fe ff ff       	jmpq   29a30 <ev_timer_stop+0x150>
   29b50:	4c 8d 58 20          	lea    0x20(%rax),%r11
   29b54:	48 89 c1             	mov    %rax,%rcx
   29b57:	4d 39 d8             	cmp    %r11,%r8
   29b5a:	0f 86 3a ff ff ff    	jbe    29a9a <ev_timer_stop+0x1ba>
   29b60:	eb b4                	jmp    29b16 <ev_timer_stop+0x236>
   29b62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29b68:	4c 8b 49 08          	mov    0x8(%rcx),%r9
   29b6c:	e9 55 ff ff ff       	jmpq   29ac6 <ev_timer_stop+0x1e6>
   29b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29b78:	48 c1 e2 04          	shl    $0x4,%rdx
   29b7c:	48 01 f2             	add    %rsi,%rdx
   29b7f:	eb bf                	jmp    29b40 <ev_timer_stop+0x260>
   29b81:	48 89 e9             	mov    %rbp,%rcx
   29b84:	e9 99 fe ff ff       	jmpq   29a22 <ev_timer_stop+0x142>
   29b89:	45 89 d3             	mov    %r10d,%r11d
   29b8c:	e9 91 fe ff ff       	jmpq   29a22 <ev_timer_stop+0x142>
   29b91:	48 8d 0d 90 94 01 00 	lea    0x19490(%rip),%rcx        # 43028 <__PRETTY_FUNCTION__.11433>
   29b98:	ba 45 11 00 00       	mov    $0x1145,%edx
   29b9d:	48 8d 35 bd 86 01 00 	lea    0x186bd(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   29ba4:	48 8d 3d fd 8f 01 00 	lea    0x18ffd(%rip),%rdi        # 42ba8 <__FUNCTION__.3752+0x968>
   29bab:	e8 50 64 fe ff       	callq  10000 <__assert_fail@plt>

0000000000029bb0 <once_cb>:
   29bb0:	41 56                	push   %r14
   29bb2:	41 55                	push   %r13
   29bb4:	41 89 d5             	mov    %edx,%r13d
   29bb7:	41 54                	push   %r12
   29bb9:	55                   	push   %rbp
   29bba:	48 89 fd             	mov    %rdi,%rbp
   29bbd:	53                   	push   %rbx
   29bbe:	48 89 f3             	mov    %rsi,%rbx
   29bc1:	4c 8b 66 60          	mov    0x60(%rsi),%r12
   29bc5:	4c 8b 76 68          	mov    0x68(%rsi),%r14
   29bc9:	e8 e2 ed ff ff       	callq  289b0 <ev_io_stop>
   29bce:	48 8d 73 30          	lea    0x30(%rbx),%rsi
   29bd2:	48 89 ef             	mov    %rbp,%rdi
   29bd5:	e8 06 fd ff ff       	callq  298e0 <ev_timer_stop>
   29bda:	48 89 df             	mov    %rbx,%rdi
   29bdd:	31 f6                	xor    %esi,%esi
   29bdf:	ff 15 b3 c7 22 00    	callq  *0x22c7b3(%rip)        # 256398 <alloc>
   29be5:	5b                   	pop    %rbx
   29be6:	4c 89 f6             	mov    %r14,%rsi
   29be9:	5d                   	pop    %rbp
   29bea:	44 89 ef             	mov    %r13d,%edi
   29bed:	4c 89 e0             	mov    %r12,%rax
   29bf0:	41 5c                	pop    %r12
   29bf2:	41 5d                	pop    %r13
   29bf4:	41 5e                	pop    %r14
   29bf6:	ff e0                	jmpq   *%rax

0000000000029bf8 <.annobin_once_cb.end>:
   29bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   29bff:	00 

0000000000029c00 <once_cb_to>:
   29c00:	f3 0f 1e fa          	endbr64 
   29c04:	41 54                	push   %r12
   29c06:	41 89 d4             	mov    %edx,%r12d
   29c09:	55                   	push   %rbp
   29c0a:	48 89 fd             	mov    %rdi,%rbp
   29c0d:	53                   	push   %rbx
   29c0e:	48 8d 5e d0          	lea    -0x30(%rsi),%rbx
   29c12:	48 89 de             	mov    %rbx,%rsi
   29c15:	e8 06 ec ff ff       	callq  28820 <ev_clear_pending>
   29c1a:	48 89 de             	mov    %rbx,%rsi
   29c1d:	48 89 ef             	mov    %rbp,%rdi
   29c20:	5b                   	pop    %rbx
   29c21:	44 09 e0             	or     %r12d,%eax
   29c24:	5d                   	pop    %rbp
   29c25:	41 5c                	pop    %r12
   29c27:	89 c2                	mov    %eax,%edx
   29c29:	eb 85                	jmp    29bb0 <once_cb>

0000000000029c2b <.annobin_once_cb_io.start>:
   29c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000029c30 <once_cb_io>:
   29c30:	f3 0f 1e fa          	endbr64 
   29c34:	41 54                	push   %r12
   29c36:	41 89 d4             	mov    %edx,%r12d
   29c39:	55                   	push   %rbp
   29c3a:	48 89 f5             	mov    %rsi,%rbp
   29c3d:	48 8d 76 30          	lea    0x30(%rsi),%rsi
   29c41:	53                   	push   %rbx
   29c42:	48 89 fb             	mov    %rdi,%rbx
   29c45:	e8 d6 eb ff ff       	callq  28820 <ev_clear_pending>
   29c4a:	48 89 ee             	mov    %rbp,%rsi
   29c4d:	48 89 df             	mov    %rbx,%rdi
   29c50:	5b                   	pop    %rbx
   29c51:	44 09 e0             	or     %r12d,%eax
   29c54:	5d                   	pop    %rbp
   29c55:	41 5c                	pop    %r12
   29c57:	89 c2                	mov    %eax,%edx
   29c59:	e9 52 ff ff ff       	jmpq   29bb0 <once_cb>

0000000000029c5e <.annobin_ev_timer_again.start>:
   29c5e:	66 90                	xchg   %ax,%ax

0000000000029c60 <ev_timer_again>:
   29c60:	f3 0f 1e fa          	endbr64 
   29c64:	48 63 46 04          	movslq 0x4(%rsi),%rax
   29c68:	85 c0                	test   %eax,%eax
   29c6a:	74 24                	je     29c90 <ev_timer_again+0x30>
   29c6c:	8b 4e 08             	mov    0x8(%rsi),%ecx
   29c6f:	48 c1 e0 04          	shl    $0x4,%rax
   29c73:	8d 51 02             	lea    0x2(%rcx),%edx
   29c76:	48 63 d2             	movslq %edx,%rdx
   29c79:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   29c7e:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   29c85:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   29c89:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   29c90:	44 8b 06             	mov    (%rsi),%r8d
   29c93:	f2 0f 10 46 28       	movsd  0x28(%rsi),%xmm0
   29c98:	45 85 c0             	test   %r8d,%r8d
   29c9b:	0f 84 6f 01 00 00    	je     29e10 <ev_timer_again+0x1b0>
   29ca1:	66 0f 2e 05 cf 94 01 	ucomisd 0x194cf(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   29ca8:	00 
   29ca9:	7a 06                	jp     29cb1 <ev_timer_again+0x51>
   29cab:	0f 84 6f 01 00 00    	je     29e20 <ev_timer_again+0x1c0>
   29cb1:	f2 0f 58 47 10       	addsd  0x10(%rdi),%xmm0
   29cb6:	49 63 c8             	movslq %r8d,%rcx
   29cb9:	48 89 ca             	mov    %rcx,%rdx
   29cbc:	48 c1 e2 04          	shl    $0x4,%rdx
   29cc0:	f2 0f 11 46 20       	movsd  %xmm0,0x20(%rsi)
   29cc5:	48 8b b7 58 02 00 00 	mov    0x258(%rdi),%rsi
   29ccc:	48 01 f2             	add    %rsi,%rdx
   29ccf:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
   29cd3:	f2 41 0f 10 51 20    	movsd  0x20(%r9),%xmm2
   29cd9:	f2 0f 11 12          	movsd  %xmm2,(%rdx)
   29cdd:	41 83 f8 03          	cmp    $0x3,%r8d
   29ce1:	7e 22                	jle    29d05 <ev_timer_again+0xa5>
   29ce3:	45 8d 50 fc          	lea    -0x4(%r8),%r10d
   29ce7:	41 c1 fa 02          	sar    $0x2,%r10d
   29ceb:	49 63 c2             	movslq %r10d,%rax
   29cee:	48 83 c0 03          	add    $0x3,%rax
   29cf2:	48 c1 e0 04          	shl    $0x4,%rax
   29cf6:	f2 0f 10 04 06       	movsd  (%rsi,%rax,1),%xmm0
   29cfb:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29cff:	0f 83 3b 01 00 00    	jae    29e40 <ev_timer_again+0x1e0>
   29d05:	48 63 bf 64 02 00 00 	movslq 0x264(%rdi),%rdi
   29d0c:	48 83 c7 03          	add    $0x3,%rdi
   29d10:	48 c1 e7 04          	shl    $0x4,%rdi
   29d14:	48 01 f7             	add    %rsi,%rdi
   29d17:	eb 75                	jmp    29d8e <ev_timer_again+0x12e>
   29d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29d20:	f2 0f 10 00          	movsd  (%rax),%xmm0
   29d24:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
   29d29:	48 89 c2             	mov    %rax,%rdx
   29d2c:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29d30:	76 08                	jbe    29d3a <ev_timer_again+0xda>
   29d32:	48 8d 50 10          	lea    0x10(%rax),%rdx
   29d36:	66 0f 28 c1          	movapd %xmm1,%xmm0
   29d3a:	f2 0f 10 48 20       	movsd  0x20(%rax),%xmm1
   29d3f:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29d43:	76 08                	jbe    29d4d <ev_timer_again+0xed>
   29d45:	48 8d 50 20          	lea    0x20(%rax),%rdx
   29d49:	66 0f 28 c1          	movapd %xmm1,%xmm0
   29d4d:	f2 0f 10 48 30       	movsd  0x30(%rax),%xmm1
   29d52:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29d56:	f2 0f 5d c8          	minsd  %xmm0,%xmm1
   29d5a:	49 0f 47 d2          	cmova  %r10,%rdx
   29d5e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   29d62:	48 c1 e1 04          	shl    $0x4,%rcx
   29d66:	48 01 f1             	add    %rsi,%rcx
   29d69:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29d6d:	0f 83 91 00 00 00    	jae    29e04 <ev_timer_again+0x1a4>
   29d73:	f3 0f 6f 1a          	movdqu (%rdx),%xmm3
   29d77:	0f 11 19             	movups %xmm3,(%rcx)
   29d7a:	48 8b 42 08          	mov    0x8(%rdx),%rax
   29d7e:	48 29 f2             	sub    %rsi,%rdx
   29d81:	48 c1 fa 04          	sar    $0x4,%rdx
   29d85:	48 63 ca             	movslq %edx,%rcx
   29d88:	44 89 00             	mov    %r8d,(%rax)
   29d8b:	49 89 c8             	mov    %rcx,%r8
   29d8e:	42 8d 04 85 f4 ff ff 	lea    -0xc(,%r8,4),%eax
   29d95:	ff 
   29d96:	48 98                	cltq   
   29d98:	48 83 c0 04          	add    $0x4,%rax
   29d9c:	48 c1 e0 04          	shl    $0x4,%rax
   29da0:	48 01 f0             	add    %rsi,%rax
   29da3:	4c 8d 50 30          	lea    0x30(%rax),%r10
   29da7:	4c 39 d7             	cmp    %r10,%rdi
   29daa:	0f 87 70 ff ff ff    	ja     29d20 <ev_timer_again+0xc0>
   29db0:	48 39 c7             	cmp    %rax,%rdi
   29db3:	0f 86 0f 01 00 00    	jbe    29ec8 <ev_timer_again+0x268>
   29db9:	48 8d 50 10          	lea    0x10(%rax),%rdx
   29dbd:	f2 0f 10 00          	movsd  (%rax),%xmm0
   29dc1:	48 39 d7             	cmp    %rdx,%rdi
   29dc4:	76 72                	jbe    29e38 <ev_timer_again+0x1d8>
   29dc6:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
   29dcb:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29dcf:	76 67                	jbe    29e38 <ev_timer_again+0x1d8>
   29dd1:	66 0f 28 c1          	movapd %xmm1,%xmm0
   29dd5:	4c 8d 50 20          	lea    0x20(%rax),%r10
   29dd9:	4c 39 d7             	cmp    %r10,%rdi
   29ddc:	76 84                	jbe    29d62 <ev_timer_again+0x102>
   29dde:	f2 0f 10 48 20       	movsd  0x20(%rax),%xmm1
   29de3:	66 0f 2f c1          	comisd %xmm1,%xmm0
   29de7:	f2 0f 5d c8          	minsd  %xmm0,%xmm1
   29deb:	49 0f 47 d2          	cmova  %r10,%rdx
   29def:	66 0f 28 c1          	movapd %xmm1,%xmm0
   29df3:	48 c1 e1 04          	shl    $0x4,%rcx
   29df7:	48 01 f1             	add    %rsi,%rcx
   29dfa:	66 0f 2f c2          	comisd %xmm2,%xmm0
   29dfe:	0f 82 6f ff ff ff    	jb     29d73 <ev_timer_again+0x113>
   29e04:	f2 0f 11 11          	movsd  %xmm2,(%rcx)
   29e08:	4c 89 49 08          	mov    %r9,0x8(%rcx)
   29e0c:	45 89 01             	mov    %r8d,(%r9)
   29e0f:	c3                   	retq   
   29e10:	66 0f 2e 05 60 93 01 	ucomisd 0x19360(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   29e17:	00 
   29e18:	7a 0e                	jp     29e28 <ev_timer_again+0x1c8>
   29e1a:	75 0c                	jne    29e28 <ev_timer_again+0x1c8>
   29e1c:	c3                   	retq   
   29e1d:	0f 1f 00             	nopl   (%rax)
   29e20:	e9 bb fa ff ff       	jmpq   298e0 <ev_timer_stop>
   29e25:	0f 1f 00             	nopl   (%rax)
   29e28:	f2 0f 11 46 20       	movsd  %xmm0,0x20(%rsi)
   29e2d:	e9 3e f9 ff ff       	jmpq   29770 <ev_timer_start>
   29e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29e38:	48 89 c2             	mov    %rax,%rdx
   29e3b:	eb 98                	jmp    29dd5 <ev_timer_again+0x175>
   29e3d:	0f 1f 00             	nopl   (%rax)
   29e40:	41 8d 7a 03          	lea    0x3(%r10),%edi
   29e44:	41 39 f8             	cmp    %edi,%r8d
   29e47:	74 17                	je     29e60 <ev_timer_again+0x200>
   29e49:	4c 63 df             	movslq %edi,%r11
   29e4c:	4d 89 da             	mov    %r11,%r10
   29e4f:	49 c1 e2 04          	shl    $0x4,%r10
   29e53:	49 01 f2             	add    %rsi,%r10
   29e56:	66 41 0f 2f 12       	comisd (%r10),%xmm2
   29e5b:	72 2f                	jb     29e8c <ev_timer_again+0x22c>
   29e5d:	44 89 c7             	mov    %r8d,%edi
   29e60:	f2 0f 11 12          	movsd  %xmm2,(%rdx)
   29e64:	4c 89 4a 08          	mov    %r9,0x8(%rdx)
   29e68:	41 89 39             	mov    %edi,(%r9)
   29e6b:	c3                   	retq   
   29e6c:	0f 1f 40 00          	nopl   0x0(%rax)
   29e70:	4c 63 d8             	movslq %eax,%r11
   29e73:	41 89 f8             	mov    %edi,%r8d
   29e76:	4d 89 da             	mov    %r11,%r10
   29e79:	49 c1 e2 04          	shl    $0x4,%r10
   29e7d:	49 01 f2             	add    %rsi,%r10
   29e80:	66 41 0f 2f 12       	comisd (%r10),%xmm2
   29e85:	73 d9                	jae    29e60 <ev_timer_again+0x200>
   29e87:	89 c7                	mov    %eax,%edi
   29e89:	49 63 c8             	movslq %r8d,%rcx
   29e8c:	48 c1 e1 04          	shl    $0x4,%rcx
   29e90:	f3 41 0f 6f 22       	movdqu (%r10),%xmm4
   29e95:	8d 57 fc             	lea    -0x4(%rdi),%edx
   29e98:	48 01 f1             	add    %rsi,%rcx
   29e9b:	85 d2                	test   %edx,%edx
   29e9d:	0f 11 21             	movups %xmm4,(%rcx)
   29ea0:	48 8b 41 08          	mov    0x8(%rcx),%rax
   29ea4:	44 89 00             	mov    %r8d,(%rax)
   29ea7:	8d 42 03             	lea    0x3(%rdx),%eax
   29eaa:	0f 49 c2             	cmovns %edx,%eax
   29ead:	49 c1 e3 04          	shl    $0x4,%r11
   29eb1:	4a 8d 14 1e          	lea    (%rsi,%r11,1),%rdx
   29eb5:	c1 f8 02             	sar    $0x2,%eax
   29eb8:	83 c0 03             	add    $0x3,%eax
   29ebb:	39 f8                	cmp    %edi,%eax
   29ebd:	75 b1                	jne    29e70 <ev_timer_again+0x210>
   29ebf:	eb 9f                	jmp    29e60 <ev_timer_again+0x200>
   29ec1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29ec8:	48 c1 e1 04          	shl    $0x4,%rcx
   29ecc:	48 01 f1             	add    %rsi,%rcx
   29ecf:	e9 30 ff ff ff       	jmpq   29e04 <ev_timer_again+0x1a4>

0000000000029ed4 <.annobin_ev_timer_again.end>:
   29ed4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   29edb:	00 00 00 00 
   29edf:	90                   	nop

0000000000029ee0 <infy_add>:
   29ee0:	41 57                	push   %r15
   29ee2:	41 56                	push   %r14
   29ee4:	41 55                	push   %r13
   29ee6:	41 54                	push   %r12
   29ee8:	55                   	push   %rbp
   29ee9:	53                   	push   %rbx
   29eea:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   29ef1:	48 83 0c 24 00       	orq    $0x0,(%rsp)
   29ef6:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   29efd:	ba c6 0f 00 22       	mov    $0x22000fc6,%edx
   29f02:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   29f09:	00 00 
   29f0b:	48 89 84 24 98 10 00 	mov    %rax,0x1098(%rsp)
   29f12:	00 
   29f13:	31 c0                	xor    %eax,%eax
   29f15:	48 89 f3             	mov    %rsi,%rbx
   29f18:	48 89 fd             	mov    %rdi,%rbp
   29f1b:	48 8b 76 60          	mov    0x60(%rsi),%rsi
   29f1f:	8b bf 28 03 00 00    	mov    0x328(%rdi),%edi
   29f25:	e8 36 65 fe ff       	callq  10460 <inotify_add_watch@plt>
   29f2a:	89 83 88 01 00 00    	mov    %eax,0x188(%rbx)
   29f30:	85 c0                	test   %eax,%eax
   29f32:	0f 88 a0 00 00 00    	js     29fd8 <infy_add+0xf8>
   29f38:	80 bd 60 03 00 00 00 	cmpb   $0x0,0x360(%rbp)
   29f3f:	0f 85 9b 01 00 00    	jne    2a0e0 <infy_add+0x200>
   29f45:	48 8b 53 58          	mov    0x58(%rbx),%rdx
   29f49:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   29f4e:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   29f54:	66 0f 2e 0d 1c 92 01 	ucomisd 0x1921c(%rip),%xmm1        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   29f5b:	00 
   29f5c:	7a 08                	jp     29f66 <infy_add+0x86>
   29f5e:	48 0f 44 15 4a 92 01 	cmove  0x1924a(%rip),%rdx        # 431b0 <__PRETTY_FUNCTION__.11024+0x70>
   29f65:	00 
   29f66:	48 89 53 50          	mov    %rdx,0x50(%rbx)
   29f6a:	85 c0                	test   %eax,%eax
   29f6c:	78 1a                	js     29f88 <infy_add+0xa8>
   29f6e:	83 e0 0f             	and    $0xf,%eax
   29f71:	48 8d 44 c5 00       	lea    0x0(%rbp,%rax,8),%rax
   29f76:	48 8b 90 68 03 00 00 	mov    0x368(%rax),%rdx
   29f7d:	48 89 53 20          	mov    %rdx,0x20(%rbx)
   29f81:	48 89 98 68 03 00 00 	mov    %rbx,0x368(%rax)
   29f88:	8b 53 28             	mov    0x28(%rbx),%edx
   29f8b:	85 d2                	test   %edx,%edx
   29f8d:	0f 85 3d 01 00 00    	jne    2a0d0 <infy_add+0x1f0>
   29f93:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   29f97:	48 89 ef             	mov    %rbp,%rdi
   29f9a:	e8 c1 fc ff ff       	callq  29c60 <ev_timer_again>
   29f9f:	8b 43 28             	mov    0x28(%rbx),%eax
   29fa2:	85 c0                	test   %eax,%eax
   29fa4:	0f 85 16 01 00 00    	jne    2a0c0 <infy_add+0x1e0>
   29faa:	48 8b 84 24 98 10 00 	mov    0x1098(%rsp),%rax
   29fb1:	00 
   29fb2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   29fb9:	00 00 
   29fbb:	0f 85 2a 02 00 00    	jne    2a1eb <infy_add+0x30b>
   29fc1:	48 81 c4 a8 10 00 00 	add    $0x10a8,%rsp
   29fc8:	5b                   	pop    %rbx
   29fc9:	5d                   	pop    %rbp
   29fca:	41 5c                	pop    %r12
   29fcc:	41 5d                	pop    %r13
   29fce:	41 5e                	pop    %r14
   29fd0:	41 5f                	pop    %r15
   29fd2:	c3                   	retq   
   29fd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   29fd8:	48 8b 43 58          	mov    0x58(%rbx),%rax
   29fdc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   29fe1:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   29fe7:	66 0f 2e 05 89 91 01 	ucomisd 0x19189(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   29fee:	00 
   29fef:	7a 08                	jp     29ff9 <infy_add+0x119>
   29ff1:	48 0f 44 05 b7 91 01 	cmove  0x191b7(%rip),%rax        # 431b0 <__PRETTY_FUNCTION__.11024+0x70>
   29ff8:	00 
   29ff9:	48 89 43 50          	mov    %rax,0x50(%rbx)
   29ffd:	e8 0e 5b fe ff       	callq  fb10 <__errno_location@plt>
   2a002:	44 8b 38             	mov    (%rax),%r15d
   2a005:	49 89 c5             	mov    %rax,%r13
   2a008:	41 83 ff 02          	cmp    $0x2,%r15d
   2a00c:	74 0a                	je     2a018 <infy_add+0x138>
   2a00e:	41 83 ff 0d          	cmp    $0xd,%r15d
   2a012:	0f 85 70 ff ff ff    	jne    29f88 <infy_add+0xa8>
   2a018:	4c 8b 73 60          	mov    0x60(%rbx),%r14
   2a01c:	4c 89 f7             	mov    %r14,%rdi
   2a01f:	e8 fc 5d fe ff       	callq  fe20 <strlen@plt>
   2a024:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
   2a02a:	0f 87 58 ff ff ff    	ja     29f88 <infy_add+0xa8>
  return __builtin___strcpy_chk (__dest, __src, __glibc_objsize (__dest));
   2a030:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   2a037:	00 
   2a038:	4c 89 f6             	mov    %r14,%rsi
   2a03b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2a03f:	b9 00 10 00 00       	mov    $0x1000,%ecx
   2a044:	4c 89 e7             	mov    %r12,%rdi
   2a047:	41 be 04 0c 00 20    	mov    $0x20000c04,%r14d
   2a04d:	e8 2e 62 fe ff       	callq  10280 <__memcpy_chk@plt>
   2a052:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2a058:	41 83 ff 0d          	cmp    $0xd,%r15d
   2a05c:	ba 80 0d 00 20       	mov    $0x20000d80,%edx
   2a061:	be 2f 00 00 00       	mov    $0x2f,%esi
   2a066:	4c 89 e7             	mov    %r12,%rdi
   2a069:	41 0f 44 d6          	cmove  %r14d,%edx
   2a06d:	41 89 d7             	mov    %edx,%r15d
   2a070:	e8 db 5e fe ff       	callq  ff50 <strrchr@plt>
   2a075:	48 85 c0             	test   %rax,%rax
   2a078:	0f 84 62 01 00 00    	je     2a1e0 <infy_add+0x300>
   2a07e:	4c 39 e0             	cmp    %r12,%rax
   2a081:	0f 84 59 01 00 00    	je     2a1e0 <infy_add+0x300>
   2a087:	c6 00 00             	movb   $0x0,(%rax)
   2a08a:	8b bd 28 03 00 00    	mov    0x328(%rbp),%edi
   2a090:	44 89 fa             	mov    %r15d,%edx
   2a093:	4c 89 e6             	mov    %r12,%rsi
   2a096:	e8 c5 63 fe ff       	callq  10460 <inotify_add_watch@plt>
   2a09b:	89 83 88 01 00 00    	mov    %eax,0x188(%rbx)
   2a0a1:	85 c0                	test   %eax,%eax
   2a0a3:	0f 89 c5 fe ff ff    	jns    29f6e <infy_add+0x8e>
   2a0a9:	45 8b 7d 00          	mov    0x0(%r13),%r15d
   2a0ad:	41 83 ff 02          	cmp    $0x2,%r15d
   2a0b1:	74 a5                	je     2a058 <infy_add+0x178>
   2a0b3:	41 83 ff 0d          	cmp    $0xd,%r15d
   2a0b7:	74 9f                	je     2a058 <infy_add+0x178>
   2a0b9:	e9 ac fe ff ff       	jmpq   29f6a <infy_add+0x8a>
   2a0be:	66 90                	xchg   %ax,%ax
   2a0c0:	48 89 ef             	mov    %rbp,%rdi
   2a0c3:	e8 e8 e4 ff ff       	callq  285b0 <ev_unref>
   2a0c8:	e9 dd fe ff ff       	jmpq   29faa <infy_add+0xca>
   2a0cd:	0f 1f 00             	nopl   (%rax)
   2a0d0:	48 89 ef             	mov    %rbp,%rdi
   2a0d3:	e8 c8 e4 ff ff       	callq  285a0 <ev_ref>
   2a0d8:	e9 b6 fe ff ff       	jmpq   29f93 <infy_add+0xb3>
   2a0dd:	0f 1f 00             	nopl   (%rax)
   2a0e0:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
   2a0e4:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2a0e9:	e8 a2 62 fe ff       	callq  10390 <statfs@plt>
   2a0ee:	85 c0                	test   %eax,%eax
   2a0f0:	74 36                	je     2a128 <infy_add+0x248>
   2a0f2:	8b b3 88 01 00 00    	mov    0x188(%rbx),%esi
   2a0f8:	48 8b 43 58          	mov    0x58(%rbx),%rax
   2a0fc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2a101:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
   2a107:	66 0f 2e 15 69 90 01 	ucomisd 0x19069(%rip),%xmm2        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   2a10e:	00 
   2a10f:	7a 08                	jp     2a119 <infy_add+0x239>
   2a111:	48 0f 44 05 9f 90 01 	cmove  0x1909f(%rip),%rax        # 431b8 <__PRETTY_FUNCTION__.11024+0x78>
   2a118:	00 
   2a119:	48 89 43 50          	mov    %rax,0x50(%rbx)
   2a11d:	89 f0                	mov    %esi,%eax
   2a11f:	e9 46 fe ff ff       	jmpq   29f6a <infy_add+0x8a>
   2a124:	0f 1f 40 00          	nopl   0x0(%rax)
   2a128:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2a12d:	8b b3 88 01 00 00    	mov    0x188(%rbx),%esi
   2a133:	48 81 f9 73 13 00 00 	cmp    $0x1373,%rcx
   2a13a:	89 f0                	mov    %esi,%eax
   2a13c:	0f 94 c2             	sete   %dl
   2a13f:	48 81 f9 06 40 00 00 	cmp    $0x4006,%rcx
   2a146:	40 0f 94 c7          	sete   %dil
   2a14a:	09 fa                	or     %edi,%edx
   2a14c:	48 81 f9 44 4d 00 00 	cmp    $0x4d44,%rcx
   2a153:	40 0f 94 c7          	sete   %dil
   2a157:	09 fa                	or     %edi,%edx
   2a159:	48 81 f9 53 ef 00 00 	cmp    $0xef53,%rcx
   2a160:	40 0f 94 c7          	sete   %dil
   2a164:	09 fa                	or     %edi,%edx
   2a166:	48 81 f9 b6 72 00 00 	cmp    $0x72b6,%rcx
   2a16d:	40 0f 94 c7          	sete   %dil
   2a171:	09 fa                	or     %edi,%edx
   2a173:	bf f6 58 84 85       	mov    $0x858458f6,%edi
   2a178:	48 39 f9             	cmp    %rdi,%rcx
   2a17b:	40 0f 94 c7          	sete   %dil
   2a17f:	09 fa                	or     %edi,%edx
   2a181:	48 81 f9 4e 54 46 53 	cmp    $0x5346544e,%rcx
   2a188:	40 0f 94 c7          	sete   %dil
   2a18c:	09 fa                	or     %edi,%edx
   2a18e:	48 81 f9 4a 46 53 31 	cmp    $0x3153464a,%rcx
   2a195:	40 0f 94 c7          	sete   %dil
   2a199:	09 fa                	or     %edi,%edx
   2a19b:	bf 3e 68 23 91       	mov    $0x9123683e,%edi
   2a1a0:	48 39 f9             	cmp    %rdi,%rcx
   2a1a3:	40 0f 94 c7          	sete   %dil
   2a1a7:	09 fa                	or     %edi,%edx
   2a1a9:	48 81 f9 73 49 65 52 	cmp    $0x52654973,%rcx
   2a1b0:	40 0f 94 c7          	sete   %dil
   2a1b4:	09 fa                	or     %edi,%edx
   2a1b6:	48 81 f9 94 19 02 01 	cmp    $0x1021994,%rcx
   2a1bd:	40 0f 94 c7          	sete   %dil
   2a1c1:	40 08 fa             	or     %dil,%dl
   2a1c4:	75 0d                	jne    2a1d3 <infy_add+0x2f3>
   2a1c6:	48 81 f9 42 53 46 58 	cmp    $0x58465342,%rcx
   2a1cd:	0f 85 25 ff ff ff    	jne    2a0f8 <infy_add+0x218>
   2a1d3:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
   2a1da:	00 
   2a1db:	e9 8a fd ff ff       	jmpq   29f6a <infy_add+0x8a>
   2a1e0:	8b 83 88 01 00 00    	mov    0x188(%rbx),%eax
   2a1e6:	e9 7f fd ff ff       	jmpq   29f6a <infy_add+0x8a>
   2a1eb:	e8 60 5c fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002a1f0 <ev_timer_remaining>:
   2a1f0:	f3 0f 1e fa          	endbr64 
   2a1f4:	8b 06                	mov    (%rsi),%eax
   2a1f6:	f2 0f 10 46 20       	movsd  0x20(%rsi),%xmm0
   2a1fb:	85 c0                	test   %eax,%eax
   2a1fd:	74 05                	je     2a204 <ev_timer_remaining+0x14>
   2a1ff:	f2 0f 5c 47 10       	subsd  0x10(%rdi),%xmm0
   2a204:	c3                   	retq   

000000000002a205 <.annobin_ev_periodic_start.start>:
   2a205:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2a20c:	00 00 00 00 

000000000002a210 <ev_periodic_start>:
   2a210:	f3 0f 1e fa          	endbr64 
   2a214:	8b 06                	mov    (%rsi),%eax
   2a216:	85 c0                	test   %eax,%eax
   2a218:	0f 85 82 01 00 00    	jne    2a3a0 <ev_periodic_start+0x190>
   2a21e:	55                   	push   %rbp
   2a21f:	48 89 fd             	mov    %rdi,%rbp
   2a222:	53                   	push   %rbx
   2a223:	48 89 f3             	mov    %rsi,%rbx
   2a226:	48 83 ec 08          	sub    $0x8,%rsp
   2a22a:	83 bf a0 04 00 00 fe 	cmpl   $0xfffffffe,0x4a0(%rdi)
   2a231:	0f 84 90 7e fe ff    	je     120c7 <ev_periodic_start.cold.33>
   2a237:	48 8b 43 38          	mov    0x38(%rbx),%rax
   2a23b:	48 85 c0             	test   %rax,%rax
   2a23e:	0f 84 1c 01 00 00    	je     2a360 <ev_periodic_start+0x150>
   2a244:	f2 0f 10 45 00       	movsd  0x0(%rbp),%xmm0
   2a249:	48 89 df             	mov    %rbx,%rdi
   2a24c:	ff d0                	callq  *%rax
   2a24e:	f2 0f 11 43 20       	movsd  %xmm0,0x20(%rbx)
   2a253:	8b 95 74 02 00 00    	mov    0x274(%rbp),%edx
   2a259:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   2a25e:	48 89 ef             	mov    %rbp,%rdi
   2a261:	8d 42 01             	lea    0x1(%rdx),%eax
   2a264:	89 85 74 02 00 00    	mov    %eax,0x274(%rbp)
   2a26a:	8b 43 08             	mov    0x8(%rbx),%eax
   2a26d:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2a270:	0f 4c c1             	cmovl  %ecx,%eax
   2a273:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a278:	83 f8 02             	cmp    $0x2,%eax
   2a27b:	0f 4f c1             	cmovg  %ecx,%eax
   2a27e:	83 c2 03             	add    $0x3,%edx
   2a281:	89 13                	mov    %edx,(%rbx)
   2a283:	89 43 08             	mov    %eax,0x8(%rbx)
   2a286:	e8 15 e3 ff ff       	callq  285a0 <ev_ref>
   2a28b:	8b 3b                	mov    (%rbx),%edi
   2a28d:	3b bd 70 02 00 00    	cmp    0x270(%rbp),%edi
   2a293:	0f 8d 38 7e fe ff    	jge    120d1 <ev_periodic_start.cold.33+0xa>
   2a299:	48 63 cf             	movslq %edi,%rcx
   2a29c:	48 8b b5 68 02 00 00 	mov    0x268(%rbp),%rsi
   2a2a3:	8d 47 fc             	lea    -0x4(%rdi),%eax
   2a2a6:	f2 0f 10 43 20       	movsd  0x20(%rbx),%xmm0
   2a2ab:	49 89 c8             	mov    %rcx,%r8
   2a2ae:	8d 50 03             	lea    0x3(%rax),%edx
   2a2b1:	49 c1 e0 04          	shl    $0x4,%r8
   2a2b5:	49 01 f0             	add    %rsi,%r8
   2a2b8:	85 c0                	test   %eax,%eax
   2a2ba:	0f 49 d0             	cmovns %eax,%edx
   2a2bd:	49 89 58 08          	mov    %rbx,0x8(%r8)
   2a2c1:	f2 41 0f 11 00       	movsd  %xmm0,(%r8)
   2a2c6:	c1 fa 02             	sar    $0x2,%edx
   2a2c9:	83 c2 03             	add    $0x3,%edx
   2a2cc:	39 fa                	cmp    %edi,%edx
   2a2ce:	0f 84 d4 00 00 00    	je     2a3a8 <ev_periodic_start+0x198>
   2a2d4:	48 63 c2             	movslq %edx,%rax
   2a2d7:	48 c1 e0 04          	shl    $0x4,%rax
   2a2db:	48 01 f0             	add    %rsi,%rax
   2a2de:	66 0f 2f 00          	comisd (%rax),%xmm0
   2a2e2:	72 19                	jb     2a2fd <ev_periodic_start+0xed>
   2a2e4:	e9 bf 00 00 00       	jmpq   2a3a8 <ev_periodic_start+0x198>
   2a2e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2a2f0:	66 0f 2f 00          	comisd (%rax),%xmm0
   2a2f4:	89 d7                	mov    %edx,%edi
   2a2f6:	73 50                	jae    2a348 <ev_periodic_start+0x138>
   2a2f8:	89 ca                	mov    %ecx,%edx
   2a2fa:	48 63 cf             	movslq %edi,%rcx
   2a2fd:	f3 0f 6f 10          	movdqu (%rax),%xmm2
   2a301:	48 c1 e1 04          	shl    $0x4,%rcx
   2a305:	48 01 f1             	add    %rsi,%rcx
   2a308:	0f 11 11             	movups %xmm2,(%rcx)
   2a30b:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2a30f:	89 38                	mov    %edi,(%rax)
   2a311:	8d 42 fc             	lea    -0x4(%rdx),%eax
   2a314:	85 c0                	test   %eax,%eax
   2a316:	8d 48 03             	lea    0x3(%rax),%ecx
   2a319:	0f 49 c8             	cmovns %eax,%ecx
   2a31c:	c1 f9 02             	sar    $0x2,%ecx
   2a31f:	83 c1 03             	add    $0x3,%ecx
   2a322:	48 63 c1             	movslq %ecx,%rax
   2a325:	48 c1 e0 04          	shl    $0x4,%rax
   2a329:	48 01 f0             	add    %rsi,%rax
   2a32c:	39 ca                	cmp    %ecx,%edx
   2a32e:	75 c0                	jne    2a2f0 <ev_periodic_start+0xe0>
   2a330:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   2a334:	48 89 58 08          	mov    %rbx,0x8(%rax)
   2a338:	89 0b                	mov    %ecx,(%rbx)
   2a33a:	48 83 c4 08          	add    $0x8,%rsp
   2a33e:	5b                   	pop    %rbx
   2a33f:	5d                   	pop    %rbp
   2a340:	c3                   	retq   
   2a341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2a348:	48 63 c2             	movslq %edx,%rax
   2a34b:	89 d1                	mov    %edx,%ecx
   2a34d:	48 c1 e0 04          	shl    $0x4,%rax
   2a351:	48 01 f0             	add    %rsi,%rax
   2a354:	eb da                	jmp    2a330 <ev_periodic_start+0x120>
   2a356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a35d:	00 00 00 
   2a360:	f2 0f 10 4b 30       	movsd  0x30(%rbx),%xmm1
   2a365:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2a369:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   2a36d:	7a 11                	jp     2a380 <ev_periodic_start+0x170>
   2a36f:	75 0f                	jne    2a380 <ev_periodic_start+0x170>
   2a371:	f2 0f 10 43 28       	movsd  0x28(%rbx),%xmm0
   2a376:	f2 0f 11 43 20       	movsd  %xmm0,0x20(%rbx)
   2a37b:	e9 d3 fe ff ff       	jmpq   2a253 <ev_periodic_start+0x43>
   2a380:	66 0f 2f c8          	comisd %xmm0,%xmm1
   2a384:	72 29                	jb     2a3af <ev_periodic_start+0x19f>
   2a386:	48 89 de             	mov    %rbx,%rsi
   2a389:	48 89 ef             	mov    %rbp,%rdi
   2a38c:	e8 7f d1 ff ff       	callq  27510 <periodic_recalc>
   2a391:	e9 bd fe ff ff       	jmpq   2a253 <ev_periodic_start+0x43>
   2a396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a39d:	00 00 00 
   2a3a0:	c3                   	retq   
   2a3a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2a3a8:	4c 89 c0             	mov    %r8,%rax
   2a3ab:	89 f9                	mov    %edi,%ecx
   2a3ad:	eb 81                	jmp    2a330 <ev_periodic_start+0x120>
   2a3af:	48 8d 0d 5a 8c 01 00 	lea    0x18c5a(%rip),%rcx        # 43010 <__PRETTY_FUNCTION__.11446>
   2a3b6:	ba 8a 11 00 00       	mov    $0x118a,%edx
   2a3bb:	48 8d 35 9f 7e 01 00 	lea    0x17e9f(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2a3c2:	48 8d 3d 2f 88 01 00 	lea    0x1882f(%rip),%rdi        # 42bf8 <__FUNCTION__.3752+0x9b8>
   2a3c9:	e8 32 5c fe ff       	callq  10000 <__assert_fail@plt>

000000000002a3ce <.annobin_ev_periodic_start.end>:
   2a3ce:	66 90                	xchg   %ax,%ax

000000000002a3d0 <ev_periodic_stop>:
   2a3d0:	f3 0f 1e fa          	endbr64 
   2a3d4:	55                   	push   %rbp
   2a3d5:	53                   	push   %rbx
   2a3d6:	48 83 ec 08          	sub    $0x8,%rsp
   2a3da:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2a3de:	85 c0                	test   %eax,%eax
   2a3e0:	74 24                	je     2a406 <ev_periodic_stop+0x36>
   2a3e2:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2a3e5:	48 c1 e0 04          	shl    $0x4,%rax
   2a3e9:	8d 53 02             	lea    0x2(%rbx),%edx
   2a3ec:	48 63 d2             	movslq %edx,%rdx
   2a3ef:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2a3f4:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2a3fb:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2a3ff:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2a406:	44 8b 16             	mov    (%rsi),%r10d
   2a409:	45 85 d2             	test   %r10d,%r10d
   2a40c:	0f 84 1e 01 00 00    	je     2a530 <ev_periodic_stop+0x160>
   2a412:	49 63 d2             	movslq %r10d,%rdx
   2a415:	4c 8b 8f 68 02 00 00 	mov    0x268(%rdi),%r9
   2a41c:	48 89 f3             	mov    %rsi,%rbx
   2a41f:	48 89 d1             	mov    %rdx,%rcx
   2a422:	48 c1 e1 04          	shl    $0x4,%rcx
   2a426:	4c 01 c9             	add    %r9,%rcx
   2a429:	48 39 71 08          	cmp    %rsi,0x8(%rcx)
   2a42d:	0f 85 56 02 00 00    	jne    2a689 <ev_periodic_stop+0x2b9>
   2a433:	8b 87 74 02 00 00    	mov    0x274(%rdi),%eax
   2a439:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
   2a43d:	83 c0 01             	add    $0x1,%eax
   2a440:	44 89 87 74 02 00 00 	mov    %r8d,0x274(%rdi)
   2a447:	41 39 c2             	cmp    %eax,%r10d
   2a44a:	0f 8f d5 00 00 00    	jg     2a525 <ev_periodic_stop+0x155>
   2a450:	4d 63 c0             	movslq %r8d,%r8
   2a453:	49 83 c0 03          	add    $0x3,%r8
   2a457:	49 c1 e0 04          	shl    $0x4,%r8
   2a45b:	4d 01 c8             	add    %r9,%r8
   2a45e:	f3 41 0f 6f 28       	movdqu (%r8),%xmm5
   2a463:	0f 11 29             	movups %xmm5,(%rcx)
   2a466:	f2 0f 10 09          	movsd  (%rcx),%xmm1
   2a46a:	41 83 fa 03          	cmp    $0x3,%r10d
   2a46e:	0f 8e ec 01 00 00    	jle    2a660 <ev_periodic_stop+0x290>
   2a474:	45 8d 5a fc          	lea    -0x4(%r10),%r11d
   2a478:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2a47c:	41 c1 fb 02          	sar    $0x2,%r11d
   2a480:	49 63 c3             	movslq %r11d,%rax
   2a483:	48 83 c0 03          	add    $0x3,%rax
   2a487:	48 c1 e0 04          	shl    $0x4,%rax
   2a48b:	f2 41 0f 10 04 01    	movsd  (%r9,%rax,1),%xmm0
   2a491:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2a495:	0f 82 13 01 00 00    	jb     2a5ae <ev_periodic_stop+0x1de>
   2a49b:	41 83 c3 03          	add    $0x3,%r11d
   2a49f:	4d 63 c3             	movslq %r11d,%r8
   2a4a2:	4c 89 c5             	mov    %r8,%rbp
   2a4a5:	48 c1 e5 04          	shl    $0x4,%rbp
   2a4a9:	4c 01 cd             	add    %r9,%rbp
   2a4ac:	45 39 da             	cmp    %r11d,%r10d
   2a4af:	0f 84 c4 01 00 00    	je     2a679 <ev_periodic_stop+0x2a9>
   2a4b5:	66 0f 2f 4d 00       	comisd 0x0(%rbp),%xmm1
   2a4ba:	72 29                	jb     2a4e5 <ev_periodic_stop+0x115>
   2a4bc:	e9 c0 01 00 00       	jmpq   2a681 <ev_periodic_stop+0x2b1>
   2a4c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2a4c8:	4c 63 c0             	movslq %eax,%r8
   2a4cb:	45 89 da             	mov    %r11d,%r10d
   2a4ce:	4c 89 c5             	mov    %r8,%rbp
   2a4d1:	48 c1 e5 04          	shl    $0x4,%rbp
   2a4d5:	4c 01 cd             	add    %r9,%rbp
   2a4d8:	66 0f 2f 4d 00       	comisd 0x0(%rbp),%xmm1
   2a4dd:	73 3b                	jae    2a51a <ev_periodic_stop+0x14a>
   2a4df:	41 89 c3             	mov    %eax,%r11d
   2a4e2:	49 63 d2             	movslq %r10d,%rdx
   2a4e5:	48 c1 e2 04          	shl    $0x4,%rdx
   2a4e9:	f3 0f 6f 5d 00       	movdqu 0x0(%rbp),%xmm3
   2a4ee:	4c 01 ca             	add    %r9,%rdx
   2a4f1:	0f 11 1a             	movups %xmm3,(%rdx)
   2a4f4:	48 8b 42 08          	mov    0x8(%rdx),%rax
   2a4f8:	41 8d 53 fc          	lea    -0x4(%r11),%edx
   2a4fc:	85 d2                	test   %edx,%edx
   2a4fe:	44 89 10             	mov    %r10d,(%rax)
   2a501:	8d 42 03             	lea    0x3(%rdx),%eax
   2a504:	0f 49 c2             	cmovns %edx,%eax
   2a507:	49 c1 e0 04          	shl    $0x4,%r8
   2a50b:	4b 8d 0c 01          	lea    (%r9,%r8,1),%rcx
   2a50f:	c1 f8 02             	sar    $0x2,%eax
   2a512:	83 c0 03             	add    $0x3,%eax
   2a515:	44 39 d8             	cmp    %r11d,%eax
   2a518:	75 ae                	jne    2a4c8 <ev_periodic_stop+0xf8>
   2a51a:	f2 0f 11 09          	movsd  %xmm1,(%rcx)
   2a51e:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   2a522:	44 89 1e             	mov    %r11d,(%rsi)
   2a525:	e8 86 e0 ff ff       	callq  285b0 <ev_unref>
   2a52a:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2a530:	48 83 c4 08          	add    $0x8,%rsp
   2a534:	5b                   	pop    %rbx
   2a535:	5d                   	pop    %rbp
   2a536:	c3                   	retq   
   2a537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2a53e:	00 00 
   2a540:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2a544:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2a549:	48 89 c1             	mov    %rax,%rcx
   2a54c:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2a550:	76 08                	jbe    2a55a <ev_periodic_stop+0x18a>
   2a552:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2a556:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2a55a:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2a55f:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2a563:	76 08                	jbe    2a56d <ev_periodic_stop+0x19d>
   2a565:	48 8d 48 20          	lea    0x20(%rax),%rcx
   2a569:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2a56d:	f2 0f 10 50 30       	movsd  0x30(%rax),%xmm2
   2a572:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2a576:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2a57a:	49 0f 47 cb          	cmova  %r11,%rcx
   2a57e:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2a582:	48 c1 e2 04          	shl    $0x4,%rdx
   2a586:	4c 01 ca             	add    %r9,%rdx
   2a589:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2a58d:	0f 83 95 00 00 00    	jae    2a628 <ev_periodic_stop+0x258>
   2a593:	f3 0f 6f 21          	movdqu (%rcx),%xmm4
   2a597:	0f 11 22             	movups %xmm4,(%rdx)
   2a59a:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2a59e:	4c 29 c9             	sub    %r9,%rcx
   2a5a1:	48 c1 f9 04          	sar    $0x4,%rcx
   2a5a5:	48 63 d1             	movslq %ecx,%rdx
   2a5a8:	44 89 10             	mov    %r10d,(%rax)
   2a5ab:	49 89 d2             	mov    %rdx,%r10
   2a5ae:	42 8d 04 95 f4 ff ff 	lea    -0xc(,%r10,4),%eax
   2a5b5:	ff 
   2a5b6:	48 98                	cltq   
   2a5b8:	48 83 c0 04          	add    $0x4,%rax
   2a5bc:	48 c1 e0 04          	shl    $0x4,%rax
   2a5c0:	4c 01 c8             	add    %r9,%rax
   2a5c3:	4c 8d 58 30          	lea    0x30(%rax),%r11
   2a5c7:	4d 39 d8             	cmp    %r11,%r8
   2a5ca:	0f 87 70 ff ff ff    	ja     2a540 <ev_periodic_stop+0x170>
   2a5d0:	49 39 c0             	cmp    %rax,%r8
   2a5d3:	0f 86 97 00 00 00    	jbe    2a670 <ev_periodic_stop+0x2a0>
   2a5d9:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2a5dd:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2a5e1:	49 39 c8             	cmp    %rcx,%r8
   2a5e4:	76 62                	jbe    2a648 <ev_periodic_stop+0x278>
   2a5e6:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2a5eb:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2a5ef:	76 57                	jbe    2a648 <ev_periodic_stop+0x278>
   2a5f1:	4c 8d 58 20          	lea    0x20(%rax),%r11
   2a5f5:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2a5f9:	4d 39 d8             	cmp    %r11,%r8
   2a5fc:	76 84                	jbe    2a582 <ev_periodic_stop+0x1b2>
   2a5fe:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2a603:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2a607:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2a60b:	49 0f 47 cb          	cmova  %r11,%rcx
   2a60f:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2a613:	48 c1 e2 04          	shl    $0x4,%rdx
   2a617:	4c 01 ca             	add    %r9,%rdx
   2a61a:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2a61e:	0f 82 6f ff ff ff    	jb     2a593 <ev_periodic_stop+0x1c3>
   2a624:	0f 1f 40 00          	nopl   0x0(%rax)
   2a628:	f2 0f 11 0a          	movsd  %xmm1,(%rdx)
   2a62c:	48 89 72 08          	mov    %rsi,0x8(%rdx)
   2a630:	44 89 16             	mov    %r10d,(%rsi)
   2a633:	e8 78 df ff ff       	callq  285b0 <ev_unref>
   2a638:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2a63e:	e9 ed fe ff ff       	jmpq   2a530 <ev_periodic_stop+0x160>
   2a643:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2a648:	4c 8d 58 20          	lea    0x20(%rax),%r11
   2a64c:	48 89 c1             	mov    %rax,%rcx
   2a64f:	4d 39 d8             	cmp    %r11,%r8
   2a652:	0f 86 2a ff ff ff    	jbe    2a582 <ev_periodic_stop+0x1b2>
   2a658:	eb a4                	jmp    2a5fe <ev_periodic_stop+0x22e>
   2a65a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2a660:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2a664:	e9 45 ff ff ff       	jmpq   2a5ae <ev_periodic_stop+0x1de>
   2a669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2a670:	48 c1 e2 04          	shl    $0x4,%rdx
   2a674:	4c 01 ca             	add    %r9,%rdx
   2a677:	eb af                	jmp    2a628 <ev_periodic_stop+0x258>
   2a679:	48 89 e9             	mov    %rbp,%rcx
   2a67c:	e9 99 fe ff ff       	jmpq   2a51a <ev_periodic_stop+0x14a>
   2a681:	45 89 d3             	mov    %r10d,%r11d
   2a684:	e9 91 fe ff ff       	jmpq   2a51a <ev_periodic_stop+0x14a>
   2a689:	48 8d 0d 60 89 01 00 	lea    0x18960(%rip),%rcx        # 42ff0 <__PRETTY_FUNCTION__.11453>
   2a690:	ba ab 11 00 00       	mov    $0x11ab,%edx
   2a695:	48 8d 35 c5 7b 01 00 	lea    0x17bc5(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2a69c:	48 8d 3d ad 85 01 00 	lea    0x185ad(%rip),%rdi        # 42c50 <__FUNCTION__.3752+0xa10>
   2a6a3:	e8 58 59 fe ff       	callq  10000 <__assert_fail@plt>

000000000002a6a8 <.annobin_ev_periodic_stop.end>:
   2a6a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2a6af:	00 

000000000002a6b0 <ev_run>:
   2a6b0:	f3 0f 1e fa          	endbr64 
   2a6b4:	41 57                	push   %r15
   2a6b6:	41 56                	push   %r14
   2a6b8:	41 55                	push   %r13
   2a6ba:	41 54                	push   %r12
   2a6bc:	55                   	push   %rbp
   2a6bd:	53                   	push   %rbx
   2a6be:	48 83 ec 48          	sub    $0x48,%rsp
   2a6c2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2a6c9:	00 00 
   2a6cb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2a6d0:	31 c0                	xor    %eax,%eax
   2a6d2:	83 87 e0 04 00 00 01 	addl   $0x1,0x4e0(%rdi)
   2a6d9:	8b 87 c0 00 00 00    	mov    0xc0(%rdi),%eax
   2a6df:	3d 80 00 00 00       	cmp    $0x80,%eax
   2a6e4:	0f 84 52 11 00 00    	je     2b83c <ev_run+0x118c>
   2a6ea:	c7 87 c0 00 00 00 00 	movl   $0x0,0xc0(%rdi)
   2a6f1:	00 00 00 
   2a6f4:	49 89 ff             	mov    %rdi,%r15
   2a6f7:	41 89 f6             	mov    %esi,%r14d
   2a6fa:	ff 97 00 05 00 00    	callq  *0x500(%rdi)
   2a700:	41 8b 9f 30 01 00 00 	mov    0x130(%r15),%ebx
   2a707:	85 db                	test   %ebx,%ebx
   2a709:	0f 85 59 09 00 00    	jne    2b068 <ev_run+0x9b8>
   2a70f:	41 80 bf 34 01 00 00 	cmpb   $0x0,0x134(%r15)
   2a716:	00 
   2a717:	0f 85 73 09 00 00    	jne    2b090 <ev_run+0x9e0>
   2a71d:	41 8b 87 dc 02 00 00 	mov    0x2dc(%r15),%eax
   2a724:	85 c0                	test   %eax,%eax
   2a726:	0f 85 b4 09 00 00    	jne    2b0e0 <ev_run+0xa30>
   2a72c:	41 8b af c0 00 00 00 	mov    0xc0(%r15),%ebp
   2a733:	85 ed                	test   %ebp,%ebp
   2a735:	0f 85 f5 09 00 00    	jne    2b130 <ev_run+0xa80>
   2a73b:	41 80 bf 34 01 00 00 	cmpb   $0x0,0x134(%r15)
   2a742:	00 
   2a743:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2a74a:	00 00 
   2a74c:	0f 85 2e 0a 00 00    	jne    2b180 <ev_run+0xad0>
   2a752:	41 8b 9f 54 02 00 00 	mov    0x254(%r15),%ebx
   2a759:	85 db                	test   %ebx,%ebx
   2a75b:	0f 8e 87 00 00 00    	jle    2a7e8 <ev_run+0x138>
   2a761:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2a764:	45 31 e4             	xor    %r12d,%r12d
   2a767:	48 8d 2c 85 04 00 00 	lea    0x4(,%rax,4),%rbp
   2a76e:	00 
   2a76f:	90                   	nop
   2a770:	49 8b 87 48 02 00 00 	mov    0x248(%r15),%rax
   2a777:	31 c9                	xor    %ecx,%ecx
   2a779:	4a 63 04 20          	movslq (%rax,%r12,1),%rax
   2a77d:	48 89 c6             	mov    %rax,%rsi
   2a780:	48 c1 e0 04          	shl    $0x4,%rax
   2a784:	49 03 87 e0 00 00 00 	add    0xe0(%r15),%rax
   2a78b:	48 8b 38             	mov    (%rax),%rdi
   2a78e:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   2a792:	44 0f b6 48 09       	movzbl 0x9(%rax),%r9d
   2a797:	66 89 48 08          	mov    %cx,0x8(%rax)
   2a79b:	31 c9                	xor    %ecx,%ecx
   2a79d:	48 85 ff             	test   %rdi,%rdi
   2a7a0:	74 15                	je     2a7b7 <ev_run+0x107>
   2a7a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2a7a8:	0a 4f 2c             	or     0x2c(%rdi),%cl
   2a7ab:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   2a7af:	48 85 ff             	test   %rdi,%rdi
   2a7b2:	75 f4                	jne    2a7a8 <ev_run+0xf8>
   2a7b4:	88 48 08             	mov    %cl,0x8(%rax)
   2a7b7:	38 ca                	cmp    %cl,%dl
   2a7b9:	0f 84 c1 06 00 00    	je     2ae80 <ev_run+0x7d0>
   2a7bf:	0f b6 c9             	movzbl %cl,%ecx
   2a7c2:	4c 89 ff             	mov    %r15,%rdi
   2a7c5:	41 ff 97 d0 00 00 00 	callq  *0xd0(%r15)
   2a7cc:	49 83 c4 04          	add    $0x4,%r12
   2a7d0:	4c 39 e5             	cmp    %r12,%rbp
   2a7d3:	75 9b                	jne    2a770 <ev_run+0xc0>
   2a7d5:	41 8b 87 54 02 00 00 	mov    0x254(%r15),%eax
   2a7dc:	89 c5                	mov    %eax,%ebp
   2a7de:	29 dd                	sub    %ebx,%ebp
   2a7e0:	39 c3                	cmp    %eax,%ebx
   2a7e2:	0f 85 68 0b 00 00    	jne    2b350 <ev_run+0xca0>
   2a7e8:	f2 41 0f 10 77 10    	movsd  0x10(%r15),%xmm6
   2a7ee:	8b 05 1c d9 22 00    	mov    0x22d91c(%rip),%eax        # 258110 <have_monotonic>
   2a7f4:	41 89 af 54 02 00 00 	mov    %ebp,0x254(%r15)
   2a7fb:	f2 0f 11 74 24 10    	movsd  %xmm6,0x10(%rsp)
   2a801:	85 c0                	test   %eax,%eax
   2a803:	0f 84 77 0b 00 00    	je     2b380 <ev_run+0xcd0>
   2a809:	f2 41 0f 10 5f 18    	movsd  0x18(%r15),%xmm3
   2a80f:	8b 05 fb d8 22 00    	mov    0x22d8fb(%rip),%eax        # 258110 <have_monotonic>
   2a815:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
   2a81b:	85 c0                	test   %eax,%eax
   2a81d:	0f 84 dd 0c 00 00    	je     2b500 <ev_run+0xe50>
   2a823:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2a828:	bf 01 00 00 00       	mov    $0x1,%edi
   2a82d:	e8 ae 54 fe ff       	callq  fce0 <clock_gettime@plt>
   2a832:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2a836:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2a83a:	f2 48 0f 2a 44 24 28 	cvtsi2sdq 0x28(%rsp),%xmm0
   2a841:	f2 0f 59 05 57 89 01 	mulsd  0x18957(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2a848:	00 
   2a849:	f2 48 0f 2a 4c 24 20 	cvtsi2sdq 0x20(%rsp),%xmm1
   2a850:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2a854:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2a858:	f2 41 0f 5c 4f 08    	subsd  0x8(%r15),%xmm1
   2a85e:	f2 0f 10 15 42 89 01 	movsd  0x18942(%rip),%xmm2        # 431a8 <__PRETTY_FUNCTION__.11024+0x68>
   2a865:	00 
   2a866:	f2 41 0f 11 47 10    	movsd  %xmm0,0x10(%r15)
   2a86c:	66 0f 2f d1          	comisd %xmm1,%xmm2
   2a870:	0f 86 ba 0b 00 00    	jbe    2b430 <ev_run+0xd80>
   2a876:	f2 41 0f 58 47 18    	addsd  0x18(%r15),%xmm0
   2a87c:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2a881:	41 c7 87 28 01 00 00 	movl   $0x1,0x128(%r15)
   2a888:	01 00 00 00 
   2a88c:	0f ae f0             	mfence 
   2a88f:	41 f6 c6 01          	test   $0x1,%r14b
   2a893:	0f 85 b7 07 00 00    	jne    2b050 <ev_run+0x9a0>
   2a899:	45 8b af c8 02 00 00 	mov    0x2c8(%r15),%r13d
   2a8a0:	45 85 ed             	test   %r13d,%r13d
   2a8a3:	0f 85 a7 07 00 00    	jne    2b050 <ev_run+0x9a0>
   2a8a9:	45 8b a7 bc 00 00 00 	mov    0xbc(%r15),%r12d
   2a8b0:	45 85 e4             	test   %r12d,%r12d
   2a8b3:	0f 84 97 07 00 00    	je     2b050 <ev_run+0x9a0>
   2a8b9:	41 8b 87 2c 01 00 00 	mov    0x12c(%r15),%eax
   2a8c0:	85 c0                	test   %eax,%eax
   2a8c2:	0f 85 88 07 00 00    	jne    2b050 <ev_run+0x9a0>
   2a8c8:	41 8b af a0 04 00 00 	mov    0x4a0(%r15),%ebp
   2a8cf:	85 ed                	test   %ebp,%ebp
   2a8d1:	0f 88 99 0d 00 00    	js     2b670 <ev_run+0xfc0>
   2a8d7:	f2 0f 10 0d e9 88 01 	movsd  0x188e9(%rip),%xmm1        # 431c8 <__PRETTY_FUNCTION__.11024+0x88>
   2a8de:	00 
   2a8df:	41 8b 9f 64 02 00 00 	mov    0x264(%r15),%ebx
   2a8e6:	85 db                	test   %ebx,%ebx
   2a8e8:	74 1a                	je     2a904 <ev_run+0x254>
   2a8ea:	49 8b 87 58 02 00 00 	mov    0x258(%r15),%rax
   2a8f1:	f2 0f 10 40 30       	movsd  0x30(%rax),%xmm0
   2a8f6:	f2 41 0f 5c 47 10    	subsd  0x10(%r15),%xmm0
   2a8fc:	f2 0f 5d c1          	minsd  %xmm1,%xmm0
   2a900:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2a904:	45 8b 9f 74 02 00 00 	mov    0x274(%r15),%r11d
   2a90b:	45 85 db             	test   %r11d,%r11d
   2a90e:	0f 85 ec 06 00 00    	jne    2b000 <ev_run+0x950>
   2a914:	f2 41 0f 10 87 b0 00 	movsd  0xb0(%r15),%xmm0
   2a91b:	00 00 
   2a91d:	f2 0f 5f c1          	maxsd  %xmm1,%xmm0
   2a921:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2a925:	f2 41 0f 10 87 c8 00 	movsd  0xc8(%r15),%xmm0
   2a92c:	00 00 
   2a92e:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2a932:	0f 87 18 0d 00 00    	ja     2b650 <ev_run+0xfa0>
   2a938:	f2 41 0f 10 97 a8 00 	movsd  0xa8(%r15),%xmm2
   2a93f:	00 00 
   2a941:	66 0f 2e 54 24 08    	ucomisd 0x8(%rsp),%xmm2
   2a947:	0f 8a 33 0d 00 00    	jp     2b680 <ev_run+0xfd0>
   2a94d:	0f 85 2d 0d 00 00    	jne    2b680 <ev_run+0xfd0>
   2a953:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
   2a959:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
   2a95f:	41 83 87 dc 04 00 00 	addl   $0x1,0x4dc(%r15)
   2a966:	01 
   2a967:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2a96b:	4c 89 ff             	mov    %r15,%rdi
   2a96e:	41 c7 87 c0 00 00 00 	movl   $0x80,0xc0(%r15)
   2a975:	80 00 00 00 
   2a979:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   2a97f:	41 ff 97 d8 00 00 00 	callq  *0xd8(%r15)
   2a986:	41 c7 87 c0 00 00 00 	movl   $0x0,0xc0(%r15)
   2a98d:	00 00 00 00 
   2a991:	41 c7 87 28 01 00 00 	movl   $0x0,0x128(%r15)
   2a998:	00 00 00 00 
   2a99c:	41 8b 87 2c 01 00 00 	mov    0x12c(%r15),%eax
   2a9a3:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   2a9a9:	85 c0                	test   %eax,%eax
   2a9ab:	74 30                	je     2a9dd <ev_run+0x32d>
   2a9ad:	45 8b 97 f8 00 00 00 	mov    0xf8(%r15),%r10d
   2a9b4:	45 85 d2             	test   %r10d,%r10d
   2a9b7:	0f 84 9e 0e 00 00    	je     2b85b <ev_run+0x11ab>
   2a9bd:	49 8d b7 f8 00 00 00 	lea    0xf8(%r15),%rsi
   2a9c4:	ba 00 00 00 01       	mov    $0x1000000,%edx
   2a9c9:	4c 89 ff             	mov    %r15,%rdi
   2a9cc:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   2a9d2:	e8 69 d1 ff ff       	callq  27b40 <ev_feed_event>
   2a9d7:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   2a9dd:	8b 05 2d d7 22 00    	mov    0x22d72d(%rip),%eax        # 258110 <have_monotonic>
   2a9e3:	85 c0                	test   %eax,%eax
   2a9e5:	0f 84 dd 09 00 00    	je     2b3c8 <ev_run+0xd18>
   2a9eb:	f2 41 0f 10 7f 18    	movsd  0x18(%r15),%xmm7
   2a9f1:	8b 05 19 d7 22 00    	mov    0x22d719(%rip),%eax        # 258110 <have_monotonic>
   2a9f7:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
   2a9fd:	85 c0                	test   %eax,%eax
   2a9ff:	0f 84 2b 0c 00 00    	je     2b630 <ev_run+0xf80>
   2aa05:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2aa0a:	bf 01 00 00 00       	mov    $0x1,%edi
   2aa0f:	e8 cc 52 fe ff       	callq  fce0 <clock_gettime@plt>
   2aa14:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2aa18:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2aa1c:	f2 48 0f 2a 44 24 28 	cvtsi2sdq 0x28(%rsp),%xmm0
   2aa23:	f2 0f 59 05 75 87 01 	mulsd  0x18775(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2aa2a:	00 
   2aa2b:	f2 48 0f 2a 4c 24 20 	cvtsi2sdq 0x20(%rsp),%xmm1
   2aa32:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   2aa36:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2aa3a:	f2 41 0f 5c 4f 08    	subsd  0x8(%r15),%xmm1
   2aa40:	f2 0f 10 15 60 87 01 	movsd  0x18760(%rip),%xmm2        # 431a8 <__PRETTY_FUNCTION__.11024+0x68>
   2aa47:	00 
   2aa48:	f2 41 0f 11 47 10    	movsd  %xmm0,0x10(%r15)
   2aa4e:	66 0f 2f d1          	comisd %xmm1,%xmm2
   2aa52:	0f 86 10 0b 00 00    	jbe    2b568 <ev_run+0xeb8>
   2aa58:	f2 41 0f 58 47 18    	addsd  0x18(%r15),%xmm0
   2aa5e:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2aa63:	45 8b 8f 64 02 00 00 	mov    0x264(%r15),%r9d
   2aa6a:	45 85 c9             	test   %r9d,%r9d
   2aa6d:	0f 84 ed 01 00 00    	je     2ac60 <ev_run+0x5b0>
   2aa73:	49 8b b7 58 02 00 00 	mov    0x258(%r15),%rsi
   2aa7a:	f2 41 0f 10 4f 10    	movsd  0x10(%r15),%xmm1
   2aa80:	66 0f 2f 4e 30       	comisd 0x30(%rsi),%xmm1
   2aa85:	0f 86 d5 01 00 00    	jbe    2ac60 <ev_run+0x5b0>
   2aa8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2aa90:	48 8b 5e 38          	mov    0x38(%rsi),%rbx
   2aa94:	f2 0f 10 43 28       	movsd  0x28(%rbx),%xmm0
   2aa99:	66 0f 2e 44 24 08    	ucomisd 0x8(%rsp),%xmm0
   2aa9f:	7a 06                	jp     2aaa7 <ev_run+0x3f7>
   2aaa1:	0f 84 89 05 00 00    	je     2b030 <ev_run+0x980>
   2aaa7:	f2 0f 10 53 20       	movsd  0x20(%rbx),%xmm2
   2aaac:	66 0f 2f 44 24 08    	comisd 0x8(%rsp),%xmm0
   2aab2:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
   2aab6:	f2 0f 5f ca          	maxsd  %xmm2,%xmm1
   2aaba:	f2 0f 11 4b 20       	movsd  %xmm1,0x20(%rbx)
   2aabf:	0f 86 58 0d 00 00    	jbe    2b81d <ev_run+0x116d>
   2aac5:	49 63 8f 64 02 00 00 	movslq 0x264(%r15),%rcx
   2aacc:	f2 0f 11 4e 30       	movsd  %xmm1,0x30(%rsi)
   2aad1:	bf 03 00 00 00       	mov    $0x3,%edi
   2aad6:	48 83 c1 03          	add    $0x3,%rcx
   2aada:	48 c1 e1 04          	shl    $0x4,%rcx
   2aade:	48 01 f1             	add    %rsi,%rcx
   2aae1:	eb 71                	jmp    2ab54 <ev_run+0x4a4>
   2aae3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2aae8:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2aaec:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2aaf1:	48 89 c2             	mov    %rax,%rdx
   2aaf4:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2aaf8:	76 08                	jbe    2ab02 <ev_run+0x452>
   2aafa:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2aafe:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ab02:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2ab07:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ab0b:	76 08                	jbe    2ab15 <ev_run+0x465>
   2ab0d:	48 8d 50 20          	lea    0x20(%rax),%rdx
   2ab11:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ab15:	f2 0f 10 50 30       	movsd  0x30(%rax),%xmm2
   2ab1a:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ab1e:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2ab22:	49 0f 47 d1          	cmova  %r9,%rdx
   2ab26:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ab2a:	48 63 c7             	movslq %edi,%rax
   2ab2d:	48 c1 e0 04          	shl    $0x4,%rax
   2ab31:	48 01 f0             	add    %rsi,%rax
   2ab34:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2ab38:	0f 83 a2 00 00 00    	jae    2abe0 <ev_run+0x530>
   2ab3e:	f3 0f 6f 32          	movdqu (%rdx),%xmm6
   2ab42:	0f 11 30             	movups %xmm6,(%rax)
   2ab45:	48 8b 42 08          	mov    0x8(%rdx),%rax
   2ab49:	48 29 f2             	sub    %rsi,%rdx
   2ab4c:	48 c1 fa 04          	sar    $0x4,%rdx
   2ab50:	89 38                	mov    %edi,(%rax)
   2ab52:	89 d7                	mov    %edx,%edi
   2ab54:	8d 04 bd f4 ff ff ff 	lea    -0xc(,%rdi,4),%eax
   2ab5b:	48 98                	cltq   
   2ab5d:	48 83 c0 04          	add    $0x4,%rax
   2ab61:	48 c1 e0 04          	shl    $0x4,%rax
   2ab65:	48 01 f0             	add    %rsi,%rax
   2ab68:	4c 8d 48 30          	lea    0x30(%rax),%r9
   2ab6c:	4c 39 c9             	cmp    %r9,%rcx
   2ab6f:	0f 87 73 ff ff ff    	ja     2aae8 <ev_run+0x438>
   2ab75:	48 39 c1             	cmp    %rax,%rcx
   2ab78:	0f 86 c2 0a 00 00    	jbe    2b640 <ev_run+0xf90>
   2ab7e:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2ab82:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2ab86:	48 39 d1             	cmp    %rdx,%rcx
   2ab89:	0f 86 91 04 00 00    	jbe    2b020 <ev_run+0x970>
   2ab8f:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2ab94:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ab98:	0f 86 82 04 00 00    	jbe    2b020 <ev_run+0x970>
   2ab9e:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2aba2:	4c 8d 48 20          	lea    0x20(%rax),%r9
   2aba6:	4c 39 c9             	cmp    %r9,%rcx
   2aba9:	0f 86 7b ff ff ff    	jbe    2ab2a <ev_run+0x47a>
   2abaf:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2abb4:	48 63 c7             	movslq %edi,%rax
   2abb7:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2abbb:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2abbf:	49 0f 47 d1          	cmova  %r9,%rdx
   2abc3:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2abc7:	48 c1 e0 04          	shl    $0x4,%rax
   2abcb:	48 01 f0             	add    %rsi,%rax
   2abce:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2abd2:	0f 82 66 ff ff ff    	jb     2ab3e <ev_run+0x48e>
   2abd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2abdf:	00 
   2abe0:	f2 0f 11 08          	movsd  %xmm1,(%rax)
   2abe4:	48 89 58 08          	mov    %rbx,0x8(%rax)
   2abe8:	89 3b                	mov    %edi,(%rbx)
   2abea:	49 63 57 2c          	movslq 0x2c(%r15),%rdx
   2abee:	49 8b 47 20          	mov    0x20(%r15),%rax
   2abf2:	8d 4a 01             	lea    0x1(%rdx),%ecx
   2abf5:	41 3b 57 28          	cmp    0x28(%r15),%edx
   2abf9:	0f 8d 7a 75 fe ff    	jge    12179 <ev_run.cold.34+0x7f>
   2abff:	45 8b 87 64 02 00 00 	mov    0x264(%r15),%r8d
   2ac06:	41 89 4f 2c          	mov    %ecx,0x2c(%r15)
   2ac0a:	48 89 1c d0          	mov    %rbx,(%rax,%rdx,8)
   2ac0e:	45 85 c0             	test   %r8d,%r8d
   2ac11:	74 18                	je     2ac2b <ev_run+0x57b>
   2ac13:	49 8b b7 58 02 00 00 	mov    0x258(%r15),%rsi
   2ac1a:	f2 41 0f 10 4f 10    	movsd  0x10(%r15),%xmm1
   2ac20:	66 0f 2f 4e 30       	comisd 0x30(%rsi),%xmm1
   2ac25:	0f 87 65 fe ff ff    	ja     2aa90 <ev_run+0x3e0>
   2ac2b:	83 e9 01             	sub    $0x1,%ecx
   2ac2e:	eb 0e                	jmp    2ac3e <ev_run+0x58e>
   2ac30:	83 e9 01             	sub    $0x1,%ecx
   2ac33:	49 8b 47 20          	mov    0x20(%r15),%rax
   2ac37:	48 63 d1             	movslq %ecx,%rdx
   2ac3a:	48 8b 1c d0          	mov    (%rax,%rdx,8),%rbx
   2ac3e:	41 89 4f 2c          	mov    %ecx,0x2c(%r15)
   2ac42:	ba 00 01 00 00       	mov    $0x100,%edx
   2ac47:	48 89 de             	mov    %rbx,%rsi
   2ac4a:	4c 89 ff             	mov    %r15,%rdi
   2ac4d:	e8 ee ce ff ff       	callq  27b40 <ev_feed_event>
   2ac52:	41 8b 4f 2c          	mov    0x2c(%r15),%ecx
   2ac56:	85 c9                	test   %ecx,%ecx
   2ac58:	75 d6                	jne    2ac30 <ev_run+0x580>
   2ac5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2ac60:	41 8b b7 74 02 00 00 	mov    0x274(%r15),%esi
   2ac67:	85 f6                	test   %esi,%esi
   2ac69:	0f 84 a1 08 00 00    	je     2b510 <ev_run+0xe60>
   2ac6f:	49 8b 87 68 02 00 00 	mov    0x268(%r15),%rax
   2ac76:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2ac7b:	66 0f 2f 40 30       	comisd 0x30(%rax),%xmm0
   2ac80:	0f 86 8a 08 00 00    	jbe    2b510 <ev_run+0xe60>
   2ac86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ac8d:	00 00 00 
   2ac90:	48 8b 58 38          	mov    0x38(%rax),%rbx
   2ac94:	48 8b 43 38          	mov    0x38(%rbx),%rax
   2ac98:	48 85 c0             	test   %rax,%rax
   2ac9b:	0f 84 ef 01 00 00    	je     2ae90 <ev_run+0x7e0>
   2aca1:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2aca6:	48 89 df             	mov    %rbx,%rdi
   2aca9:	ff d0                	callq  *%rax
   2acab:	66 41 0f 2f 07       	comisd (%r15),%xmm0
   2acb0:	f2 0f 11 43 20       	movsd  %xmm0,0x20(%rbx)
   2acb5:	0f 82 f3 0a 00 00    	jb     2b7ae <ev_run+0x10fe>
   2acbb:	49 8b b7 68 02 00 00 	mov    0x268(%r15),%rsi
   2acc2:	49 63 8f 74 02 00 00 	movslq 0x274(%r15),%rcx
   2acc9:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   2accf:	48 8b 7e 38          	mov    0x38(%rsi),%rdi
   2acd3:	48 83 c1 03          	add    $0x3,%rcx
   2acd7:	48 c1 e1 04          	shl    $0x4,%rcx
   2acdb:	f2 0f 10 4f 20       	movsd  0x20(%rdi),%xmm1
   2ace0:	48 01 f1             	add    %rsi,%rcx
   2ace3:	f2 0f 11 4e 30       	movsd  %xmm1,0x30(%rsi)
   2ace8:	eb 74                	jmp    2ad5e <ev_run+0x6ae>
   2acea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2acf0:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2acf4:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2acf9:	48 89 c2             	mov    %rax,%rdx
   2acfc:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ad00:	76 08                	jbe    2ad0a <ev_run+0x65a>
   2ad02:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2ad06:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ad0a:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2ad0f:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ad13:	76 08                	jbe    2ad1d <ev_run+0x66d>
   2ad15:	48 8d 50 20          	lea    0x20(%rax),%rdx
   2ad19:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ad1d:	f2 0f 10 50 30       	movsd  0x30(%rax),%xmm2
   2ad22:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ad26:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2ad2a:	49 0f 47 d2          	cmova  %r10,%rdx
   2ad2e:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2ad32:	49 63 c1             	movslq %r9d,%rax
   2ad35:	48 c1 e0 04          	shl    $0x4,%rax
   2ad39:	48 01 f0             	add    %rsi,%rax
   2ad3c:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2ad40:	0f 83 a2 00 00 00    	jae    2ade8 <ev_run+0x738>
   2ad46:	f3 0f 6f 3a          	movdqu (%rdx),%xmm7
   2ad4a:	0f 11 38             	movups %xmm7,(%rax)
   2ad4d:	48 8b 42 08          	mov    0x8(%rdx),%rax
   2ad51:	48 29 f2             	sub    %rsi,%rdx
   2ad54:	48 c1 fa 04          	sar    $0x4,%rdx
   2ad58:	44 89 08             	mov    %r9d,(%rax)
   2ad5b:	41 89 d1             	mov    %edx,%r9d
   2ad5e:	42 8d 04 8d f4 ff ff 	lea    -0xc(,%r9,4),%eax
   2ad65:	ff 
   2ad66:	48 98                	cltq   
   2ad68:	48 83 c0 04          	add    $0x4,%rax
   2ad6c:	48 c1 e0 04          	shl    $0x4,%rax
   2ad70:	48 01 f0             	add    %rsi,%rax
   2ad73:	4c 8d 50 30          	lea    0x30(%rax),%r10
   2ad77:	4c 39 d1             	cmp    %r10,%rcx
   2ad7a:	0f 87 70 ff ff ff    	ja     2acf0 <ev_run+0x640>
   2ad80:	48 39 c1             	cmp    %rax,%rcx
   2ad83:	0f 86 b7 02 00 00    	jbe    2b040 <ev_run+0x990>
   2ad89:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2ad8d:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2ad91:	48 39 d1             	cmp    %rdx,%rcx
   2ad94:	0f 86 d6 00 00 00    	jbe    2ae70 <ev_run+0x7c0>
   2ad9a:	f2 0f 10 50 10       	movsd  0x10(%rax),%xmm2
   2ad9f:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2ada3:	0f 86 c7 00 00 00    	jbe    2ae70 <ev_run+0x7c0>
   2ada9:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2adad:	4c 8d 50 20          	lea    0x20(%rax),%r10
   2adb1:	4c 39 d1             	cmp    %r10,%rcx
   2adb4:	0f 86 78 ff ff ff    	jbe    2ad32 <ev_run+0x682>
   2adba:	f2 0f 10 50 20       	movsd  0x20(%rax),%xmm2
   2adbf:	49 63 c1             	movslq %r9d,%rax
   2adc2:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2adc6:	f2 0f 5d d0          	minsd  %xmm0,%xmm2
   2adca:	49 0f 47 d2          	cmova  %r10,%rdx
   2adce:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2add2:	48 c1 e0 04          	shl    $0x4,%rax
   2add6:	48 01 f0             	add    %rsi,%rax
   2add9:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2addd:	0f 82 63 ff ff ff    	jb     2ad46 <ev_run+0x696>
   2ade3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2ade8:	f2 0f 11 08          	movsd  %xmm1,(%rax)
   2adec:	48 89 78 08          	mov    %rdi,0x8(%rax)
   2adf0:	44 89 0f             	mov    %r9d,(%rdi)
   2adf3:	49 63 57 2c          	movslq 0x2c(%r15),%rdx
   2adf7:	49 8b 47 20          	mov    0x20(%r15),%rax
   2adfb:	8d 4a 01             	lea    0x1(%rdx),%ecx
   2adfe:	41 3b 57 28          	cmp    0x28(%r15),%edx
   2ae02:	0f 8d 50 73 fe ff    	jge    12158 <ev_run.cold.34+0x5e>
   2ae08:	41 8b bf 74 02 00 00 	mov    0x274(%r15),%edi
   2ae0f:	41 89 4f 2c          	mov    %ecx,0x2c(%r15)
   2ae13:	48 89 1c d0          	mov    %rbx,(%rax,%rdx,8)
   2ae17:	85 ff                	test   %edi,%edi
   2ae19:	74 17                	je     2ae32 <ev_run+0x782>
   2ae1b:	49 8b 87 68 02 00 00 	mov    0x268(%r15),%rax
   2ae22:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2ae27:	66 0f 2f 40 30       	comisd 0x30(%rax),%xmm0
   2ae2c:	0f 87 5e fe ff ff    	ja     2ac90 <ev_run+0x5e0>
   2ae32:	83 e9 01             	sub    $0x1,%ecx
   2ae35:	eb 17                	jmp    2ae4e <ev_run+0x79e>
   2ae37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2ae3e:	00 00 
   2ae40:	83 e9 01             	sub    $0x1,%ecx
   2ae43:	49 8b 47 20          	mov    0x20(%r15),%rax
   2ae47:	48 63 d1             	movslq %ecx,%rdx
   2ae4a:	48 8b 1c d0          	mov    (%rax,%rdx,8),%rbx
   2ae4e:	41 89 4f 2c          	mov    %ecx,0x2c(%r15)
   2ae52:	ba 00 02 00 00       	mov    $0x200,%edx
   2ae57:	48 89 de             	mov    %rbx,%rsi
   2ae5a:	4c 89 ff             	mov    %r15,%rdi
   2ae5d:	e8 de cc ff ff       	callq  27b40 <ev_feed_event>
   2ae62:	41 8b 4f 2c          	mov    0x2c(%r15),%ecx
   2ae66:	85 c9                	test   %ecx,%ecx
   2ae68:	75 d6                	jne    2ae40 <ev_run+0x790>
   2ae6a:	e9 f1 fd ff ff       	jmpq   2ac60 <ev_run+0x5b0>
   2ae6f:	90                   	nop
   2ae70:	48 89 c2             	mov    %rax,%rdx
   2ae73:	e9 35 ff ff ff       	jmpq   2adad <ev_run+0x6fd>
   2ae78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2ae7f:	00 
   2ae80:	45 84 c9             	test   %r9b,%r9b
   2ae83:	0f 89 43 f9 ff ff    	jns    2a7cc <ev_run+0x11c>
   2ae89:	e9 31 f9 ff ff       	jmpq   2a7bf <ev_run+0x10f>
   2ae8e:	66 90                	xchg   %ax,%ax
   2ae90:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
   2ae96:	66 0f 2e 63 30       	ucomisd 0x30(%rbx),%xmm4
   2ae9b:	48 89 de             	mov    %rbx,%rsi
   2ae9e:	4c 89 ff             	mov    %r15,%rdi
   2aea1:	7a 06                	jp     2aea9 <ev_run+0x7f9>
   2aea3:	0f 84 37 01 00 00    	je     2afe0 <ev_run+0x930>
   2aea9:	e8 62 c6 ff ff       	callq  27510 <periodic_recalc>
   2aeae:	49 8b b7 68 02 00 00 	mov    0x268(%r15),%rsi
   2aeb5:	49 63 8f 74 02 00 00 	movslq 0x274(%r15),%rcx
   2aebc:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   2aec2:	48 8b 7e 38          	mov    0x38(%rsi),%rdi
   2aec6:	48 83 c1 03          	add    $0x3,%rcx
   2aeca:	48 c1 e1 04          	shl    $0x4,%rcx
   2aece:	f2 0f 10 57 20       	movsd  0x20(%rdi),%xmm2
   2aed3:	48 01 f1             	add    %rsi,%rcx
   2aed6:	f2 0f 11 56 30       	movsd  %xmm2,0x30(%rsi)
   2aedb:	eb 71                	jmp    2af4e <ev_run+0x89e>
   2aedd:	0f 1f 00             	nopl   (%rax)
   2aee0:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2aee4:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
   2aee9:	48 89 c2             	mov    %rax,%rdx
   2aeec:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2aef0:	76 08                	jbe    2aefa <ev_run+0x84a>
   2aef2:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2aef6:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2aefa:	f2 0f 10 48 20       	movsd  0x20(%rax),%xmm1
   2aeff:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2af03:	76 08                	jbe    2af0d <ev_run+0x85d>
   2af05:	48 8d 50 20          	lea    0x20(%rax),%rdx
   2af09:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2af0d:	f2 0f 10 48 30       	movsd  0x30(%rax),%xmm1
   2af12:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2af16:	f2 0f 5d c8          	minsd  %xmm0,%xmm1
   2af1a:	49 0f 47 d2          	cmova  %r10,%rdx
   2af1e:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2af22:	49 63 c1             	movslq %r9d,%rax
   2af25:	48 c1 e0 04          	shl    $0x4,%rax
   2af29:	48 01 f0             	add    %rsi,%rax
   2af2c:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2af30:	0f 83 9a 00 00 00    	jae    2afd0 <ev_run+0x920>
   2af36:	f3 0f 6f 1a          	movdqu (%rdx),%xmm3
   2af3a:	0f 11 18             	movups %xmm3,(%rax)
   2af3d:	48 8b 42 08          	mov    0x8(%rdx),%rax
   2af41:	48 29 f2             	sub    %rsi,%rdx
   2af44:	48 c1 fa 04          	sar    $0x4,%rdx
   2af48:	44 89 08             	mov    %r9d,(%rax)
   2af4b:	41 89 d1             	mov    %edx,%r9d
   2af4e:	42 8d 04 8d f4 ff ff 	lea    -0xc(,%r9,4),%eax
   2af55:	ff 
   2af56:	48 98                	cltq   
   2af58:	48 83 c0 04          	add    $0x4,%rax
   2af5c:	48 c1 e0 04          	shl    $0x4,%rax
   2af60:	48 01 f0             	add    %rsi,%rax
   2af63:	4c 8d 50 30          	lea    0x30(%rax),%r10
   2af67:	4c 39 d1             	cmp    %r10,%rcx
   2af6a:	0f 87 70 ff ff ff    	ja     2aee0 <ev_run+0x830>
   2af70:	48 39 c1             	cmp    %rax,%rcx
   2af73:	0f 86 9f 04 00 00    	jbe    2b418 <ev_run+0xd68>
   2af79:	48 8d 50 10          	lea    0x10(%rax),%rdx
   2af7d:	f2 0f 10 00          	movsd  (%rax),%xmm0
   2af81:	48 39 d1             	cmp    %rdx,%rcx
   2af84:	76 0b                	jbe    2af91 <ev_run+0x8e1>
   2af86:	f2 0f 10 48 10       	movsd  0x10(%rax),%xmm1
   2af8b:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2af8f:	77 5f                	ja     2aff0 <ev_run+0x940>
   2af91:	48 89 c2             	mov    %rax,%rdx
   2af94:	4c 8d 50 20          	lea    0x20(%rax),%r10
   2af98:	4c 39 d1             	cmp    %r10,%rcx
   2af9b:	76 85                	jbe    2af22 <ev_run+0x872>
   2af9d:	f2 0f 10 48 20       	movsd  0x20(%rax),%xmm1
   2afa2:	49 63 c1             	movslq %r9d,%rax
   2afa5:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2afa9:	f2 0f 5d c8          	minsd  %xmm0,%xmm1
   2afad:	49 0f 47 d2          	cmova  %r10,%rdx
   2afb1:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2afb5:	48 c1 e0 04          	shl    $0x4,%rax
   2afb9:	48 01 f0             	add    %rsi,%rax
   2afbc:	66 0f 2f c2          	comisd %xmm2,%xmm0
   2afc0:	0f 82 70 ff ff ff    	jb     2af36 <ev_run+0x886>
   2afc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2afcd:	00 00 00 
   2afd0:	f2 0f 11 10          	movsd  %xmm2,(%rax)
   2afd4:	48 89 78 08          	mov    %rdi,0x8(%rax)
   2afd8:	44 89 0f             	mov    %r9d,(%rdi)
   2afdb:	e9 13 fe ff ff       	jmpq   2adf3 <ev_run+0x743>
   2afe0:	e8 eb f3 ff ff       	callq  2a3d0 <ev_periodic_stop>
   2afe5:	e9 09 fe ff ff       	jmpq   2adf3 <ev_run+0x743>
   2afea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2aff0:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2aff4:	eb 9e                	jmp    2af94 <ev_run+0x8e4>
   2aff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2affd:	00 00 00 
   2b000:	49 8b 87 68 02 00 00 	mov    0x268(%r15),%rax
   2b007:	f2 0f 10 40 30       	movsd  0x30(%rax),%xmm0
   2b00c:	f2 41 0f 5c 07       	subsd  (%r15),%xmm0
   2b011:	f2 0f 5d c1          	minsd  %xmm1,%xmm0
   2b015:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2b019:	e9 f6 f8 ff ff       	jmpq   2a914 <ev_run+0x264>
   2b01e:	66 90                	xchg   %ax,%ax
   2b020:	48 89 c2             	mov    %rax,%rdx
   2b023:	e9 7a fb ff ff       	jmpq   2aba2 <ev_run+0x4f2>
   2b028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b02f:	00 
   2b030:	48 89 de             	mov    %rbx,%rsi
   2b033:	4c 89 ff             	mov    %r15,%rdi
   2b036:	e8 a5 e8 ff ff       	callq  298e0 <ev_timer_stop>
   2b03b:	e9 aa fb ff ff       	jmpq   2abea <ev_run+0x53a>
   2b040:	49 63 c1             	movslq %r9d,%rax
   2b043:	48 c1 e0 04          	shl    $0x4,%rax
   2b047:	48 01 f0             	add    %rsi,%rax
   2b04a:	e9 99 fd ff ff       	jmpq   2ade8 <ev_run+0x738>
   2b04f:	90                   	nop
   2b050:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   2b056:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
   2b05c:	e9 fe f8 ff ff       	jmpq   2a95f <ev_run+0x2af>
   2b061:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2b068:	e8 a3 4c fe ff       	callq  fd10 <getpid@plt>
   2b06d:	41 3b 87 30 01 00 00 	cmp    0x130(%r15),%eax
   2b074:	0f 84 95 f6 ff ff    	je     2a70f <ev_run+0x5f>
   2b07a:	e8 91 4c fe ff       	callq  fd10 <getpid@plt>
   2b07f:	41 c6 87 34 01 00 00 	movb   $0x1,0x134(%r15)
   2b086:	01 
   2b087:	41 89 87 30 01 00 00 	mov    %eax,0x130(%r15)
   2b08e:	66 90                	xchg   %ax,%ax
   2b090:	41 8b 87 fc 02 00 00 	mov    0x2fc(%r15),%eax
   2b097:	85 c0                	test   %eax,%eax
   2b099:	0f 84 7e f6 ff ff    	je     2a71d <ev_run+0x6d>
   2b09f:	49 8b 9f f0 02 00 00 	mov    0x2f0(%r15),%rbx
   2b0a6:	7e 21                	jle    2b0c9 <ev_run+0xa19>
   2b0a8:	83 e8 01             	sub    $0x1,%eax
   2b0ab:	48 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%rbp
   2b0b0:	48 8b 33             	mov    (%rbx),%rsi
   2b0b3:	ba 00 00 02 00       	mov    $0x20000,%edx
   2b0b8:	4c 89 ff             	mov    %r15,%rdi
   2b0bb:	48 83 c3 08          	add    $0x8,%rbx
   2b0bf:	e8 7c ca ff ff       	callq  27b40 <ev_feed_event>
   2b0c4:	48 39 dd             	cmp    %rbx,%rbp
   2b0c7:	75 e7                	jne    2b0b0 <ev_run+0xa00>
   2b0c9:	4c 89 ff             	mov    %r15,%rdi
   2b0cc:	41 ff 97 00 05 00 00 	callq  *0x500(%r15)
   2b0d3:	e9 45 f6 ff ff       	jmpq   2a71d <ev_run+0x6d>
   2b0d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b0df:	00 
   2b0e0:	49 8b 9f d0 02 00 00 	mov    0x2d0(%r15),%rbx
   2b0e7:	7e 28                	jle    2b111 <ev_run+0xa61>
   2b0e9:	83 e8 01             	sub    $0x1,%eax
   2b0ec:	48 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%rbp
   2b0f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2b0f8:	48 8b 33             	mov    (%rbx),%rsi
   2b0fb:	ba 00 40 00 00       	mov    $0x4000,%edx
   2b100:	4c 89 ff             	mov    %r15,%rdi
   2b103:	48 83 c3 08          	add    $0x8,%rbx
   2b107:	e8 34 ca ff ff       	callq  27b40 <ev_feed_event>
   2b10c:	48 39 dd             	cmp    %rbx,%rbp
   2b10f:	75 e7                	jne    2b0f8 <ev_run+0xa48>
   2b111:	4c 89 ff             	mov    %r15,%rdi
   2b114:	41 ff 97 00 05 00 00 	callq  *0x500(%r15)
   2b11b:	41 8b af c0 00 00 00 	mov    0xc0(%r15),%ebp
   2b122:	85 ed                	test   %ebp,%ebp
   2b124:	0f 84 11 f6 ff ff    	je     2a73b <ev_run+0x8b>
   2b12a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b130:	41 8b 87 bc 00 00 00 	mov    0xbc(%r15),%eax
   2b137:	41 8b 97 c0 00 00 00 	mov    0xc0(%r15),%edx
   2b13e:	83 fa 01             	cmp    $0x1,%edx
   2b141:	75 0b                	jne    2b14e <ev_run+0xa9e>
   2b143:	41 c7 87 c0 00 00 00 	movl   $0x0,0xc0(%r15)
   2b14a:	00 00 00 00 
   2b14e:	41 83 af e0 04 00 00 	subl   $0x1,0x4e0(%r15)
   2b155:	01 
   2b156:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   2b15b:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   2b162:	00 00 
   2b164:	0f 85 10 07 00 00    	jne    2b87a <ev_run+0x11ca>
   2b16a:	48 83 c4 48          	add    $0x48,%rsp
   2b16e:	5b                   	pop    %rbx
   2b16f:	5d                   	pop    %rbp
   2b170:	41 5c                	pop    %r12
   2b172:	41 5d                	pop    %r13
   2b174:	41 5e                	pop    %r14
   2b176:	41 5f                	pop    %r15
   2b178:	c3                   	retq   
   2b179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2b180:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   2b187:	3d 80 00 00 00       	cmp    $0x80,%eax
   2b18c:	0f 84 b2 6f fe ff    	je     12144 <ev_run.cold.34+0x4a>
   2b192:	83 f8 04             	cmp    $0x4,%eax
   2b195:	0f 84 7c 6f fe ff    	je     12117 <ev_run.cold.34+0x1d>
   2b19b:	45 8b 9f 28 03 00 00 	mov    0x328(%r15),%r11d
   2b1a2:	45 85 db             	test   %r11d,%r11d
   2b1a5:	0f 88 8d 05 00 00    	js     2b738 <ev_run+0x1088>
   2b1ab:	4c 89 ff             	mov    %r15,%rdi
   2b1ae:	4d 8d a7 30 03 00 00 	lea    0x330(%r15),%r12
   2b1b5:	e8 e6 d3 ff ff       	callq  285a0 <ev_ref>
   2b1ba:	4c 89 e6             	mov    %r12,%rsi
   2b1bd:	4c 89 ff             	mov    %r15,%rdi
   2b1c0:	e8 eb d7 ff ff       	callq  289b0 <ev_io_stop>
   2b1c5:	41 8b bf 28 03 00 00 	mov    0x328(%r15),%edi
   2b1cc:	e8 df 4e fe ff       	callq  100b0 <close@plt>
   2b1d1:	bf 00 08 08 00       	mov    $0x80800,%edi
   2b1d6:	e8 b5 58 fe ff       	callq  10a90 <inotify_init1@plt>
   2b1db:	89 c3                	mov    %eax,%ebx
   2b1dd:	85 c0                	test   %eax,%eax
   2b1df:	0f 88 11 05 00 00    	js     2b6f6 <ev_run+0x1046>
   2b1e5:	41 89 87 28 03 00 00 	mov    %eax,0x328(%r15)
   2b1ec:	ba 01 00 00 00       	mov    $0x1,%edx
   2b1f1:	be 02 00 00 00       	mov    $0x2,%esi
   2b1f6:	89 df                	mov    %ebx,%edi
   2b1f8:	31 c0                	xor    %eax,%eax
   2b1fa:	e8 c1 4a fe ff       	callq  fcc0 <fcntl@plt>
   2b1ff:	ba 00 08 00 00       	mov    $0x800,%edx
   2b204:	89 df                	mov    %ebx,%edi
   2b206:	31 c0                	xor    %eax,%eax
   2b208:	be 04 00 00 00       	mov    $0x4,%esi
   2b20d:	e8 ae 4a fe ff       	callq  fcc0 <fcntl@plt>
   2b212:	41 8b 87 28 03 00 00 	mov    0x328(%r15),%eax
   2b219:	4c 89 ff             	mov    %r15,%rdi
   2b21c:	4c 89 e6             	mov    %r12,%rsi
   2b21f:	41 c7 87 5c 03 00 00 	movl   $0x81,0x35c(%r15)
   2b226:	81 00 00 00 
   2b22a:	41 89 87 58 03 00 00 	mov    %eax,0x358(%r15)
   2b231:	e8 2a d6 ff ff       	callq  28860 <ev_io_start>
   2b236:	4c 89 ff             	mov    %r15,%rdi
   2b239:	e8 72 d3 ff ff       	callq  285b0 <ev_unref>
   2b23e:	49 8d 87 e8 03 00 00 	lea    0x3e8(%r15),%rax
   2b245:	4d 8d a7 68 03 00 00 	lea    0x368(%r15),%r12
   2b24c:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2b253:	00 00 
   2b255:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2b25a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b260:	4d 8b 2c 24          	mov    (%r12),%r13
   2b264:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   2b26b:	00 
   2b26c:	4d 85 ed             	test   %r13,%r13
   2b26f:	75 68                	jne    2b2d9 <ev_run+0xc29>
   2b271:	e9 91 00 00 00       	jmpq   2b307 <ev_run+0xc57>
   2b276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b27d:	00 00 00 
   2b280:	49 8b 55 58          	mov    0x58(%r13),%rdx
   2b284:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2b288:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   2b28d:	f2 0f 10 64 24 10    	movsd  0x10(%rsp),%xmm4
   2b293:	66 0f 2e e5          	ucomisd %xmm5,%xmm4
   2b297:	7a 0e                	jp     2b2a7 <ev_run+0xbf7>
   2b299:	48 8b 05 10 7f 01 00 	mov    0x17f10(%rip),%rax        # 431b0 <__PRETTY_FUNCTION__.11024+0x70>
   2b2a0:	48 0f 45 c2          	cmovne %rdx,%rax
   2b2a4:	48 89 c2             	mov    %rax,%rdx
   2b2a7:	45 8b 4d 28          	mov    0x28(%r13),%r9d
   2b2ab:	49 89 55 50          	mov    %rdx,0x50(%r13)
   2b2af:	45 85 c9             	test   %r9d,%r9d
   2b2b2:	0f 85 70 04 00 00    	jne    2b728 <ev_run+0x1078>
   2b2b8:	49 8d 75 28          	lea    0x28(%r13),%rsi
   2b2bc:	4c 89 ff             	mov    %r15,%rdi
   2b2bf:	e8 9c e9 ff ff       	callq  29c60 <ev_timer_again>
   2b2c4:	45 8b 45 28          	mov    0x28(%r13),%r8d
   2b2c8:	45 85 c0             	test   %r8d,%r8d
   2b2cb:	0f 85 47 04 00 00    	jne    2b718 <ev_run+0x1068>
   2b2d1:	49 89 dd             	mov    %rbx,%r13
   2b2d4:	48 85 db             	test   %rbx,%rbx
   2b2d7:	74 2e                	je     2b307 <ev_run+0xc57>
   2b2d9:	45 8b 97 28 03 00 00 	mov    0x328(%r15),%r10d
   2b2e0:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   2b2e4:	41 c7 85 88 01 00 00 	movl   $0xffffffff,0x188(%r13)
   2b2eb:	ff ff ff ff 
   2b2ef:	45 85 d2             	test   %r10d,%r10d
   2b2f2:	78 8c                	js     2b280 <ev_run+0xbd0>
   2b2f4:	4c 89 ee             	mov    %r13,%rsi
   2b2f7:	4c 89 ff             	mov    %r15,%rdi
   2b2fa:	49 89 dd             	mov    %rbx,%r13
   2b2fd:	e8 de eb ff ff       	callq  29ee0 <infy_add>
   2b302:	48 85 db             	test   %rbx,%rbx
   2b305:	75 d2                	jne    2b2d9 <ev_run+0xc29>
   2b307:	49 83 c4 08          	add    $0x8,%r12
   2b30b:	4c 39 64 24 18       	cmp    %r12,0x18(%rsp)
   2b310:	0f 85 4a ff ff ff    	jne    2b260 <ev_run+0xbb0>
   2b316:	41 80 bf 34 01 00 00 	cmpb   $0x2,0x134(%r15)
   2b31d:	02 
   2b31e:	74 1e                	je     2b33e <ev_run+0xc8e>
   2b320:	41 8b bf a8 04 00 00 	mov    0x4a8(%r15),%edi
   2b327:	85 ff                	test   %edi,%edi
   2b329:	0f 85 83 05 00 00    	jne    2b8b2 <ev_run+0x1202>
   2b32f:	41 8b b7 f8 00 00 00 	mov    0xf8(%r15),%esi
   2b336:	85 f6                	test   %esi,%esi
   2b338:	0f 85 41 05 00 00    	jne    2b87f <ev_run+0x11cf>
   2b33e:	41 c6 87 34 01 00 00 	movb   $0x0,0x134(%r15)
   2b345:	00 
   2b346:	e9 07 f4 ff ff       	jmpq   2a752 <ev_run+0xa2>
   2b34b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b350:	49 8b bf 48 02 00 00 	mov    0x248(%r15),%rdi
   2b357:	48 63 d5             	movslq %ebp,%rdx
   2b35a:	48 63 c3             	movslq %ebx,%rax
   2b35d:	48 c1 e2 02          	shl    $0x2,%rdx
   2b361:	48 8d 34 87          	lea    (%rdi,%rax,4),%rsi
  return __builtin___memmove_chk (__dest, __src, __len,
   2b365:	e8 66 53 fe ff       	callq  106d0 <memmove@plt>
   2b36a:	41 8b af 54 02 00 00 	mov    0x254(%r15),%ebp
   2b371:	29 dd                	sub    %ebx,%ebp
   2b373:	e9 70 f4 ff ff       	jmpq   2a7e8 <ev_run+0x138>
   2b378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b37f:	00 
   2b380:	e8 5b c6 ff ff       	callq  279e0 <ev_time>
   2b385:	f2 41 0f 10 57 10    	movsd  0x10(%r15),%xmm2
   2b38b:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b390:	66 0f 2f d0          	comisd %xmm0,%xmm2
   2b394:	0f 87 81 05 00 00    	ja     2b91b <ev_run+0x126b>
   2b39a:	f2 0f 10 0d b6 7d 01 	movsd  0x17db6(%rip),%xmm1        # 43158 <__PRETTY_FUNCTION__.11024+0x18>
   2b3a1:	00 
   2b3a2:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   2b3a6:	f2 0f 58 0d c2 7d 01 	addsd  0x17dc2(%rip),%xmm1        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   2b3ad:	00 
   2b3ae:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b3b2:	0f 87 63 05 00 00    	ja     2b91b <ev_run+0x126b>
   2b3b8:	f2 41 0f 11 47 10    	movsd  %xmm0,0x10(%r15)
   2b3be:	e9 be f4 ff ff       	jmpq   2a881 <ev_run+0x1d1>
   2b3c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b3c8:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   2b3ce:	e8 0d c6 ff ff       	callq  279e0 <ev_time>
   2b3d3:	f2 41 0f 10 57 10    	movsd  0x10(%r15),%xmm2
   2b3d9:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b3de:	66 0f 2f d0          	comisd %xmm0,%xmm2
   2b3e2:	0f 87 18 05 00 00    	ja     2b900 <ev_run+0x1250>
   2b3e8:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   2b3ee:	f2 0f 58 4c 24 18    	addsd  0x18(%rsp),%xmm1
   2b3f4:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   2b3f8:	f2 0f 58 0d 70 7d 01 	addsd  0x17d70(%rip),%xmm1        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   2b3ff:	00 
   2b400:	66 0f 2f c1          	comisd %xmm1,%xmm0
   2b404:	0f 87 f6 04 00 00    	ja     2b900 <ev_run+0x1250>
   2b40a:	f2 41 0f 11 47 10    	movsd  %xmm0,0x10(%r15)
   2b410:	e9 4e f6 ff ff       	jmpq   2aa63 <ev_run+0x3b3>
   2b415:	0f 1f 00             	nopl   (%rax)
   2b418:	49 63 c1             	movslq %r9d,%rax
   2b41b:	48 c1 e0 04          	shl    $0x4,%rax
   2b41f:	48 01 f0             	add    %rsi,%rax
   2b422:	e9 a9 fb ff ff       	jmpq   2afd0 <ev_run+0x920>
   2b427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2b42e:	00 00 
   2b430:	f2 41 0f 11 47 08    	movsd  %xmm0,0x8(%r15)
   2b436:	bb 03 00 00 00       	mov    $0x3,%ebx
   2b43b:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   2b440:	e8 9b c5 ff ff       	callq  279e0 <ev_time>
   2b445:	f2 41 0f 10 4f 10    	movsd  0x10(%r15),%xmm1
   2b44b:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b450:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b454:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
   2b45a:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
   2b45e:	f2 41 0f 11 47 18    	movsd  %xmm0,0x18(%r15)
   2b464:	66 0f 28 c3          	movapd %xmm3,%xmm0
   2b468:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
   2b46e:	66 0f 2f d8          	comisd %xmm0,%xmm3
   2b472:	0f 87 5a 02 00 00    	ja     2b6d2 <ev_run+0x1022>
   2b478:	f2 0f 10 3d f0 7c 01 	movsd  0x17cf0(%rip),%xmm7        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   2b47f:	00 
   2b480:	31 c0                	xor    %eax,%eax
   2b482:	66 0f 2f f8          	comisd %xmm0,%xmm7
   2b486:	0f 97 c0             	seta   %al
   2b489:	48 85 c0             	test   %rax,%rax
   2b48c:	0f 85 ef f3 ff ff    	jne    2a881 <ev_run+0x1d1>
   2b492:	e8 49 c5 ff ff       	callq  279e0 <ev_time>
   2b497:	8b 05 73 cc 22 00    	mov    0x22cc73(%rip),%eax        # 258110 <have_monotonic>
   2b49d:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b4a2:	85 c0                	test   %eax,%eax
   2b4a4:	0f 84 57 03 00 00    	je     2b801 <ev_run+0x1151>
   2b4aa:	48 89 ee             	mov    %rbp,%rsi
   2b4ad:	bf 01 00 00 00       	mov    $0x1,%edi
   2b4b2:	e8 29 48 fe ff       	callq  fce0 <clock_gettime@plt>
   2b4b7:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b4bb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2b4bf:	f2 48 0f 2a 4c 24 28 	cvtsi2sdq 0x28(%rsp),%xmm1
   2b4c6:	f2 0f 59 0d d2 7c 01 	mulsd  0x17cd2(%rip),%xmm1        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2b4cd:	00 
   2b4ce:	f2 48 0f 2a 44 24 20 	cvtsi2sdq 0x20(%rsp),%xmm0
   2b4d5:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2b4d9:	f2 41 0f 11 4f 10    	movsd  %xmm1,0x10(%r15)
   2b4df:	f2 41 0f 11 4f 08    	movsd  %xmm1,0x8(%r15)
   2b4e5:	83 eb 01             	sub    $0x1,%ebx
   2b4e8:	0f 84 b9 6c fe ff    	je     121a7 <ev_run.cold.34+0xad>
   2b4ee:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2b4f3:	e9 58 ff ff ff       	jmpq   2b450 <ev_run+0xda0>
   2b4f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2b4ff:	00 
   2b500:	e8 db c4 ff ff       	callq  279e0 <ev_time>
   2b505:	e9 4a f3 ff ff       	jmpq   2a854 <ev_run+0x1a4>
   2b50a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b510:	41 8b 8f c8 02 00 00 	mov    0x2c8(%r15),%ecx
   2b517:	85 c9                	test   %ecx,%ecx
   2b519:	0f 85 5f 02 00 00    	jne    2b77e <ev_run+0x10ce>
   2b51f:	41 8b 87 ec 02 00 00 	mov    0x2ec(%r15),%eax
   2b526:	85 c0                	test   %eax,%eax
   2b528:	0f 85 19 02 00 00    	jne    2b747 <ev_run+0x1097>
   2b52e:	4c 89 ff             	mov    %r15,%rdi
   2b531:	41 ff 97 00 05 00 00 	callq  *0x500(%r15)
   2b538:	41 8b 87 bc 00 00 00 	mov    0xbc(%r15),%eax
   2b53f:	85 c0                	test   %eax,%eax
   2b541:	0f 84 f0 fb ff ff    	je     2b137 <ev_run+0xa87>
   2b547:	41 8b 97 c0 00 00 00 	mov    0xc0(%r15),%edx
   2b54e:	44 89 f1             	mov    %r14d,%ecx
   2b551:	83 e1 03             	and    $0x3,%ecx
   2b554:	09 d1                	or     %edx,%ecx
   2b556:	0f 84 a4 f1 ff ff    	je     2a700 <ev_run+0x50>
   2b55c:	e9 d6 fb ff ff       	jmpq   2b137 <ev_run+0xa87>
   2b561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2b568:	f2 41 0f 11 47 08    	movsd  %xmm0,0x8(%r15)
   2b56e:	bb 03 00 00 00       	mov    $0x3,%ebx
   2b573:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   2b578:	e8 63 c4 ff ff       	callq  279e0 <ev_time>
   2b57d:	f2 41 0f 10 4f 10    	movsd  0x10(%r15),%xmm1
   2b583:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b588:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   2b58c:	f2 0f 10 74 24 10    	movsd  0x10(%rsp),%xmm6
   2b592:	f2 0f 10 7c 24 08    	movsd  0x8(%rsp),%xmm7
   2b598:	f2 0f 5c f0          	subsd  %xmm0,%xmm6
   2b59c:	f2 41 0f 11 47 18    	movsd  %xmm0,0x18(%r15)
   2b5a2:	66 0f 2f fe          	comisd %xmm6,%xmm7
   2b5a6:	66 0f 28 c6          	movapd %xmm6,%xmm0
   2b5aa:	0f 87 34 01 00 00    	ja     2b6e4 <ev_run+0x1034>
   2b5b0:	f2 0f 10 35 b8 7b 01 	movsd  0x17bb8(%rip),%xmm6        # 43170 <__PRETTY_FUNCTION__.11024+0x30>
   2b5b7:	00 
   2b5b8:	31 c0                	xor    %eax,%eax
   2b5ba:	66 0f 2f f0          	comisd %xmm0,%xmm6
   2b5be:	0f 97 c0             	seta   %al
   2b5c1:	48 85 c0             	test   %rax,%rax
   2b5c4:	0f 85 99 f4 ff ff    	jne    2aa63 <ev_run+0x3b3>
   2b5ca:	e8 11 c4 ff ff       	callq  279e0 <ev_time>
   2b5cf:	8b 05 3b cb 22 00    	mov    0x22cb3b(%rip),%eax        # 258110 <have_monotonic>
   2b5d5:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2b5da:	85 c0                	test   %eax,%eax
   2b5dc:	0f 84 2d 02 00 00    	je     2b80f <ev_run+0x115f>
   2b5e2:	48 89 ee             	mov    %rbp,%rsi
   2b5e5:	bf 01 00 00 00       	mov    $0x1,%edi
   2b5ea:	e8 f1 46 fe ff       	callq  fce0 <clock_gettime@plt>
   2b5ef:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2b5f3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2b5f7:	f2 48 0f 2a 4c 24 28 	cvtsi2sdq 0x28(%rsp),%xmm1
   2b5fe:	f2 0f 59 0d 9a 7b 01 	mulsd  0x17b9a(%rip),%xmm1        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   2b605:	00 
   2b606:	f2 48 0f 2a 44 24 20 	cvtsi2sdq 0x20(%rsp),%xmm0
   2b60d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   2b611:	f2 41 0f 11 4f 10    	movsd  %xmm1,0x10(%r15)
   2b617:	f2 41 0f 11 4f 08    	movsd  %xmm1,0x8(%r15)
   2b61d:	83 eb 01             	sub    $0x1,%ebx
   2b620:	0f 84 8e 6b fe ff    	je     121b4 <ev_run.cold.34+0xba>
   2b626:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2b62b:	e9 58 ff ff ff       	jmpq   2b588 <ev_run+0xed8>
   2b630:	e8 ab c3 ff ff       	callq  279e0 <ev_time>
   2b635:	e9 fc f3 ff ff       	jmpq   2aa36 <ev_run+0x386>
   2b63a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b640:	48 63 c7             	movslq %edi,%rax
   2b643:	48 c1 e0 04          	shl    $0x4,%rax
   2b647:	48 01 f0             	add    %rsi,%rax
   2b64a:	e9 91 f5 ff ff       	jmpq   2abe0 <ev_run+0x530>
   2b64f:	90                   	nop
   2b650:	f2 0f 10 6c 24 08    	movsd  0x8(%rsp),%xmm5
   2b656:	f2 0f c2 cd 02       	cmplesd %xmm5,%xmm1
   2b65b:	66 0f 54 e9          	andpd  %xmm1,%xmm5
   2b65f:	66 0f 55 c8          	andnpd %xmm0,%xmm1
   2b663:	66 0f 56 cd          	orpd   %xmm5,%xmm1
   2b667:	e9 cc f2 ff ff       	jmpq   2a938 <ev_run+0x288>
   2b66c:	0f 1f 40 00          	nopl   0x0(%rax)
   2b670:	f2 0f 10 0d 48 7b 01 	movsd  0x17b48(%rip),%xmm1        # 431c0 <__PRETTY_FUNCTION__.11024+0x80>
   2b677:	00 
   2b678:	e9 62 f2 ff ff       	jmpq   2a8df <ev_run+0x22f>
   2b67d:	0f 1f 00             	nopl   (%rax)
   2b680:	f2 41 0f 10 5f 10    	movsd  0x10(%r15),%xmm3
   2b686:	f2 0f 5c 5c 24 10    	subsd  0x10(%rsp),%xmm3
   2b68c:	66 0f 28 ea          	movapd %xmm2,%xmm5
   2b690:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
   2b694:	66 0f 28 d9          	movapd %xmm1,%xmm3
   2b698:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
   2b69c:	66 0f 28 c3          	movapd %xmm3,%xmm0
   2b6a0:	f2 0f 5d c5          	minsd  %xmm5,%xmm0
   2b6a4:	66 0f 2f 44 24 08    	comisd 0x8(%rsp),%xmm0
   2b6aa:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
   2b6b0:	0f 86 a9 f2 ff ff    	jbe    2a95f <ev_run+0x2af>
   2b6b6:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   2b6bc:	e8 0f c4 ff ff       	callq  27ad0 <ev_sleep>
   2b6c1:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   2b6c7:	f2 0f 5c 4c 24 18    	subsd  0x18(%rsp),%xmm1
   2b6cd:	e9 8d f2 ff ff       	jmpq   2a95f <ev_run+0x2af>
   2b6d2:	31 c0                	xor    %eax,%eax
   2b6d4:	66 0f 2f 05 24 39 01 	comisd 0x13924(%rip),%xmm0        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   2b6db:	00 
   2b6dc:	0f 97 c0             	seta   %al
   2b6df:	e9 a5 fd ff ff       	jmpq   2b489 <ev_run+0xdd9>
   2b6e4:	31 c0                	xor    %eax,%eax
   2b6e6:	66 0f 2f 35 12 39 01 	comisd 0x13912(%rip),%xmm6        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   2b6ed:	00 
   2b6ee:	0f 97 c0             	seta   %al
   2b6f1:	e9 cb fe ff ff       	jmpq   2b5c1 <ev_run+0xf11>
   2b6f6:	e8 45 4c fe ff       	callq  10340 <inotify_init@plt>
   2b6fb:	89 c3                	mov    %eax,%ebx
   2b6fd:	41 89 87 28 03 00 00 	mov    %eax,0x328(%r15)
   2b704:	85 c0                	test   %eax,%eax
   2b706:	0f 88 32 fb ff ff    	js     2b23e <ev_run+0xb8e>
   2b70c:	e9 db fa ff ff       	jmpq   2b1ec <ev_run+0xb3c>
   2b711:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2b718:	4c 89 ff             	mov    %r15,%rdi
   2b71b:	e8 90 ce ff ff       	callq  285b0 <ev_unref>
   2b720:	e9 ac fb ff ff       	jmpq   2b2d1 <ev_run+0xc21>
   2b725:	0f 1f 00             	nopl   (%rax)
   2b728:	4c 89 ff             	mov    %r15,%rdi
   2b72b:	e8 70 ce ff ff       	callq  285a0 <ev_ref>
   2b730:	e9 83 fb ff ff       	jmpq   2b2b8 <ev_run+0xc08>
   2b735:	0f 1f 00             	nopl   (%rax)
   2b738:	66 0f ef db          	pxor   %xmm3,%xmm3
   2b73c:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
   2b742:	e9 cf fb ff ff       	jmpq   2b316 <ev_run+0xc66>
   2b747:	49 8b 9f e0 02 00 00 	mov    0x2e0(%r15),%rbx
   2b74e:	0f 8e da fd ff ff    	jle    2b52e <ev_run+0xe7e>
   2b754:	83 e8 01             	sub    $0x1,%eax
   2b757:	48 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%rbp
   2b75c:	0f 1f 40 00          	nopl   0x0(%rax)
   2b760:	48 8b 33             	mov    (%rbx),%rsi
   2b763:	ba 00 80 00 00       	mov    $0x8000,%edx
   2b768:	4c 89 ff             	mov    %r15,%rdi
   2b76b:	48 83 c3 08          	add    $0x8,%rbx
   2b76f:	e8 cc c3 ff ff       	callq  27b40 <ev_feed_event>
   2b774:	48 39 dd             	cmp    %rbx,%rbp
   2b777:	75 e7                	jne    2b760 <ev_run+0x10b0>
   2b779:	e9 b0 fd ff ff       	jmpq   2b52e <ev_run+0xe7e>
   2b77e:	b8 04 00 00 00       	mov    $0x4,%eax
   2b783:	41 8b 54 87 6c       	mov    0x6c(%r15,%rax,4),%edx
   2b788:	48 63 c8             	movslq %eax,%rcx
   2b78b:	85 d2                	test   %edx,%edx
   2b78d:	0f 85 8c fd ff ff    	jne    2b51f <ev_run+0xe6f>
   2b793:	41 8b 94 87 b4 02 00 	mov    0x2b4(%r15,%rax,4),%edx
   2b79a:	00 
   2b79b:	85 d2                	test   %edx,%edx
   2b79d:	75 2e                	jne    2b7cd <ev_run+0x111d>
   2b79f:	48 83 e8 01          	sub    $0x1,%rax
   2b7a3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b7a7:	75 da                	jne    2b783 <ev_run+0x10d3>
   2b7a9:	e9 71 fd ff ff       	jmpq   2b51f <ev_run+0xe6f>
   2b7ae:	48 8d 0d bb 78 01 00 	lea    0x178bb(%rip),%rcx        # 43070 <__PRETTY_FUNCTION__.11309>
   2b7b5:	ba 2e 0f 00 00       	mov    $0xf2e,%edx
   2b7ba:	48 8d 35 a0 6a 01 00 	lea    0x16aa0(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2b7c1:	48 8d 3d f0 75 01 00 	lea    0x175f0(%rip),%rdi        # 42db8 <__FUNCTION__.3752+0xb78>
   2b7c8:	e8 33 48 fe ff       	callq  10000 <__assert_fail@plt>
   2b7cd:	49 8b 9c cf 78 02 00 	mov    0x278(%r15,%rcx,8),%rbx
   2b7d4:	00 
   2b7d5:	0f 8e 44 fd ff ff    	jle    2b51f <ev_run+0xe6f>
   2b7db:	8d 42 ff             	lea    -0x1(%rdx),%eax
   2b7de:	48 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%rbp
   2b7e3:	48 8b 33             	mov    (%rbx),%rsi
   2b7e6:	ba 00 20 00 00       	mov    $0x2000,%edx
   2b7eb:	4c 89 ff             	mov    %r15,%rdi
   2b7ee:	48 83 c3 08          	add    $0x8,%rbx
   2b7f2:	e8 49 c3 ff ff       	callq  27b40 <ev_feed_event>
   2b7f7:	48 39 dd             	cmp    %rbx,%rbp
   2b7fa:	75 e7                	jne    2b7e3 <ev_run+0x1133>
   2b7fc:	e9 1e fd ff ff       	jmpq   2b51f <ev_run+0xe6f>
   2b801:	e8 da c1 ff ff       	callq  279e0 <ev_time>
   2b806:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2b80a:	e9 ca fc ff ff       	jmpq   2b4d9 <ev_run+0xe29>
   2b80f:	e8 cc c1 ff ff       	callq  279e0 <ev_time>
   2b814:	66 0f 28 c8          	movapd %xmm0,%xmm1
   2b818:	e9 f4 fd ff ff       	jmpq   2b611 <ev_run+0xf61>
   2b81d:	48 8d 0d 5c 78 01 00 	lea    0x1785c(%rip),%rcx        # 43080 <__PRETTY_FUNCTION__.11292>
   2b824:	ba ef 0e 00 00       	mov    $0xeef,%edx
   2b829:	48 8d 35 31 6a 01 00 	lea    0x16a31(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2b830:	48 8d 3d 19 75 01 00 	lea    0x17519(%rip),%rdi        # 42d50 <__FUNCTION__.3752+0xb10>
   2b837:	e8 c4 47 fe ff       	callq  10000 <__assert_fail@plt>
   2b83c:	48 8d 0d 4a 78 01 00 	lea    0x1784a(%rip),%rcx        # 4308d <__PRETTY_FUNCTION__.11346>
   2b843:	ba bb 0f 00 00       	mov    $0xfbb,%edx
   2b848:	48 8d 35 12 6a 01 00 	lea    0x16a12(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2b84f:	48 8d 3d 52 74 01 00 	lea    0x17452(%rip),%rdi        # 42ca8 <__FUNCTION__.3752+0xa68>
   2b856:	e8 a5 47 fe ff       	callq  10000 <__assert_fail@plt>
   2b85b:	48 8d 0d 2b 78 01 00 	lea    0x1782b(%rip),%rcx        # 4308d <__PRETTY_FUNCTION__.11346>
   2b862:	ba 45 10 00 00       	mov    $0x1045,%edx
   2b867:	48 8d 35 f3 69 01 00 	lea    0x169f3(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2b86e:	48 8d 3d 8b 74 01 00 	lea    0x1748b(%rip),%rdi        # 42d00 <__FUNCTION__.3752+0xac0>
   2b875:	e8 86 47 fe ff       	callq  10000 <__assert_fail@plt>
   2b87a:	e8 d1 45 fe ff       	callq  fe50 <__stack_chk_fail@plt>
   2b87f:	4c 89 ff             	mov    %r15,%rdi
   2b882:	49 8d 9f f8 00 00 00 	lea    0xf8(%r15),%rbx
   2b889:	e8 12 cd ff ff       	callq  285a0 <ev_ref>
   2b88e:	4c 89 ff             	mov    %r15,%rdi
   2b891:	48 89 de             	mov    %rbx,%rsi
   2b894:	e8 17 d1 ff ff       	callq  289b0 <ev_io_stop>
   2b899:	41 8b bf ec 00 00 00 	mov    0xec(%r15),%edi
   2b8a0:	85 ff                	test   %edi,%edi
   2b8a2:	0f 88 52 68 fe ff    	js     120fa <ev_run.cold.34>
   2b8a8:	e8 03 48 fe ff       	callq  100b0 <close@plt>
   2b8ad:	e9 48 68 fe ff       	jmpq   120fa <ev_run.cold.34>
   2b8b2:	4c 89 ff             	mov    %r15,%rdi
   2b8b5:	49 8d 9f a8 04 00 00 	lea    0x4a8(%r15),%rbx
   2b8bc:	e8 df cc ff ff       	callq  285a0 <ev_ref>
   2b8c1:	48 89 de             	mov    %rbx,%rsi
   2b8c4:	4c 89 ff             	mov    %r15,%rdi
   2b8c7:	e8 e4 d0 ff ff       	callq  289b0 <ev_io_stop>
   2b8cc:	41 8b bf a0 04 00 00 	mov    0x4a0(%r15),%edi
   2b8d3:	e8 d8 47 fe ff       	callq  100b0 <close@plt>
   2b8d8:	4c 89 ff             	mov    %r15,%rdi
   2b8db:	41 c7 87 a0 04 00 00 	movl   $0xfffffffe,0x4a0(%r15)
   2b8e2:	fe ff ff ff 
   2b8e6:	e8 f4 5e fe ff       	callq  117df <evtimerfd_init>
   2b8eb:	ba 00 00 00 01       	mov    $0x1000000,%edx
   2b8f0:	48 89 de             	mov    %rbx,%rsi
   2b8f3:	4c 89 ff             	mov    %r15,%rdi
   2b8f6:	e8 45 c2 ff ff       	callq  27b40 <ev_feed_event>
   2b8fb:	e9 2f fa ff ff       	jmpq   2b32f <ev_run+0xc7f>
   2b900:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   2b904:	4c 89 ff             	mov    %r15,%rdi
   2b907:	e8 69 52 fe ff       	callq  10b75 <timers_reschedule>
   2b90c:	e8 d7 56 fe ff       	callq  10fe8 <periodics_reschedule>
   2b911:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2b916:	e9 ef fa ff ff       	jmpq   2b40a <ev_run+0xd5a>
   2b91b:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   2b91f:	4c 89 ff             	mov    %r15,%rdi
   2b922:	e8 4e 52 fe ff       	callq  10b75 <timers_reschedule>
   2b927:	e8 bc 56 fe ff       	callq  10fe8 <periodics_reschedule>
   2b92c:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
   2b931:	e9 82 fa ff ff       	jmpq   2b3b8 <ev_run+0xd08>

000000000002b936 <.annobin_embed_prepare_cb.start>:
   2b936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b93d:	00 00 00 

000000000002b940 <embed_prepare_cb>:
   2b940:	f3 0f 1e fa          	endbr64 
   2b944:	41 55                	push   %r13
   2b946:	41 54                	push   %r12
   2b948:	55                   	push   %rbp
   2b949:	53                   	push   %rbx
   2b94a:	48 83 ec 08          	sub    $0x8,%rsp
   2b94e:	48 8b 6e c8          	mov    -0x38(%rsi),%rbp
   2b952:	8b 85 54 02 00 00    	mov    0x254(%rbp),%eax
   2b958:	41 89 c4             	mov    %eax,%r12d
   2b95b:	85 c0                	test   %eax,%eax
   2b95d:	0f 84 b1 00 00 00    	je     2ba14 <embed_prepare_cb+0xd4>
   2b963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b968:	85 c0                	test   %eax,%eax
   2b96a:	7e 7a                	jle    2b9e6 <embed_prepare_cb+0xa6>
   2b96c:	83 e8 01             	sub    $0x1,%eax
   2b96f:	45 31 ed             	xor    %r13d,%r13d
   2b972:	48 8d 1c 85 04 00 00 	lea    0x4(,%rax,4),%rbx
   2b979:	00 
   2b97a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b980:	48 8b 85 48 02 00 00 	mov    0x248(%rbp),%rax
   2b987:	31 c9                	xor    %ecx,%ecx
   2b989:	4a 63 04 28          	movslq (%rax,%r13,1),%rax
   2b98d:	48 89 c6             	mov    %rax,%rsi
   2b990:	48 c1 e0 04          	shl    $0x4,%rax
   2b994:	48 03 85 e0 00 00 00 	add    0xe0(%rbp),%rax
   2b99b:	48 8b 38             	mov    (%rax),%rdi
   2b99e:	0f b6 50 08          	movzbl 0x8(%rax),%edx
   2b9a2:	44 0f b6 40 09       	movzbl 0x9(%rax),%r8d
   2b9a7:	66 89 48 08          	mov    %cx,0x8(%rax)
   2b9ab:	31 c9                	xor    %ecx,%ecx
   2b9ad:	48 85 ff             	test   %rdi,%rdi
   2b9b0:	74 15                	je     2b9c7 <embed_prepare_cb+0x87>
   2b9b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2b9b8:	0a 4f 2c             	or     0x2c(%rdi),%cl
   2b9bb:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   2b9bf:	48 85 ff             	test   %rdi,%rdi
   2b9c2:	75 f4                	jne    2b9b8 <embed_prepare_cb+0x78>
   2b9c4:	88 48 08             	mov    %cl,0x8(%rax)
   2b9c7:	38 ca                	cmp    %cl,%dl
   2b9c9:	74 55                	je     2ba20 <embed_prepare_cb+0xe0>
   2b9cb:	0f b6 c9             	movzbl %cl,%ecx
   2b9ce:	48 89 ef             	mov    %rbp,%rdi
   2b9d1:	ff 95 d0 00 00 00    	callq  *0xd0(%rbp)
   2b9d7:	49 83 c5 04          	add    $0x4,%r13
   2b9db:	4c 39 eb             	cmp    %r13,%rbx
   2b9de:	75 a0                	jne    2b980 <embed_prepare_cb+0x40>
   2b9e0:	8b 85 54 02 00 00    	mov    0x254(%rbp),%eax
   2b9e6:	89 c2                	mov    %eax,%edx
   2b9e8:	44 29 e2             	sub    %r12d,%edx
   2b9eb:	44 39 e0             	cmp    %r12d,%eax
   2b9ee:	75 40                	jne    2ba30 <embed_prepare_cb+0xf0>
   2b9f0:	89 95 54 02 00 00    	mov    %edx,0x254(%rbp)
   2b9f6:	be 01 00 00 00       	mov    $0x1,%esi
   2b9fb:	48 89 ef             	mov    %rbp,%rdi
   2b9fe:	e8 ad ec ff ff       	callq  2a6b0 <ev_run>
   2ba03:	8b 85 54 02 00 00    	mov    0x254(%rbp),%eax
   2ba09:	41 89 c4             	mov    %eax,%r12d
   2ba0c:	85 c0                	test   %eax,%eax
   2ba0e:	0f 85 54 ff ff ff    	jne    2b968 <embed_prepare_cb+0x28>
   2ba14:	48 83 c4 08          	add    $0x8,%rsp
   2ba18:	5b                   	pop    %rbx
   2ba19:	5d                   	pop    %rbp
   2ba1a:	41 5c                	pop    %r12
   2ba1c:	41 5d                	pop    %r13
   2ba1e:	c3                   	retq   
   2ba1f:	90                   	nop
   2ba20:	45 84 c0             	test   %r8b,%r8b
   2ba23:	79 b2                	jns    2b9d7 <embed_prepare_cb+0x97>
   2ba25:	eb a4                	jmp    2b9cb <embed_prepare_cb+0x8b>
   2ba27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2ba2e:	00 00 
   2ba30:	48 8b bd 48 02 00 00 	mov    0x248(%rbp),%rdi
   2ba37:	49 63 c4             	movslq %r12d,%rax
   2ba3a:	48 63 d2             	movslq %edx,%rdx
   2ba3d:	48 c1 e2 02          	shl    $0x2,%rdx
   2ba41:	48 8d 34 87          	lea    (%rdi,%rax,4),%rsi
   2ba45:	e8 86 4c fe ff       	callq  106d0 <memmove@plt>
   2ba4a:	8b 95 54 02 00 00    	mov    0x254(%rbp),%edx
   2ba50:	44 29 e2             	sub    %r12d,%edx
   2ba53:	eb 9b                	jmp    2b9f0 <embed_prepare_cb+0xb0>

000000000002ba55 <.annobin_embed_io_cb.start>:
   2ba55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2ba5c:	00 00 00 00 

000000000002ba60 <embed_io_cb>:
   2ba60:	f3 0f 1e fa          	endbr64 
   2ba64:	48 83 7e f0 00       	cmpq   $0x0,-0x10(%rsi)
   2ba69:	74 15                	je     2ba80 <embed_io_cb+0x20>
   2ba6b:	48 83 ee 28          	sub    $0x28,%rsi
   2ba6f:	ba 00 00 01 00       	mov    $0x10000,%edx
   2ba74:	e9 c7 c0 ff ff       	jmpq   27b40 <ev_feed_event>
   2ba79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2ba80:	48 8b 7e f8          	mov    -0x8(%rsi),%rdi
   2ba84:	be 01 00 00 00       	mov    $0x1,%esi
   2ba89:	e9 22 ec ff ff       	jmpq   2a6b0 <ev_run>

000000000002ba8e <.annobin_embed_io_cb.end>:
   2ba8e:	66 90                	xchg   %ax,%ax

000000000002ba90 <ev_periodic_again>:
   2ba90:	f3 0f 1e fa          	endbr64 
   2ba94:	55                   	push   %rbp
   2ba95:	48 89 f5             	mov    %rsi,%rbp
   2ba98:	53                   	push   %rbx
   2ba99:	48 89 fb             	mov    %rdi,%rbx
   2ba9c:	48 83 ec 08          	sub    $0x8,%rsp
   2baa0:	e8 2b e9 ff ff       	callq  2a3d0 <ev_periodic_stop>
   2baa5:	48 83 c4 08          	add    $0x8,%rsp
   2baa9:	48 89 ee             	mov    %rbp,%rsi
   2baac:	48 89 df             	mov    %rbx,%rdi
   2baaf:	5b                   	pop    %rbx
   2bab0:	5d                   	pop    %rbp
   2bab1:	e9 5a e7 ff ff       	jmpq   2a210 <ev_periodic_start>

000000000002bab6 <.annobin_ev_periodic_again.end>:
   2bab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2babd:	00 00 00 

000000000002bac0 <ev_signal_start>:
   2bac0:	f3 0f 1e fa          	endbr64 
   2bac4:	41 56                	push   %r14
   2bac6:	41 55                	push   %r13
   2bac8:	41 54                	push   %r12
   2baca:	55                   	push   %rbp
   2bacb:	53                   	push   %rbx
   2bacc:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   2bad3:	8b 16                	mov    (%rsi),%edx
   2bad5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2badc:	00 00 
   2bade:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2bae5:	00 
   2bae6:	31 c0                	xor    %eax,%eax
   2bae8:	85 d2                	test   %edx,%edx
   2baea:	0f 85 9c 00 00 00    	jne    2bb8c <ev_signal_start+0xcc>
   2baf0:	8b 46 28             	mov    0x28(%rsi),%eax
   2baf3:	48 89 f3             	mov    %rsi,%rbx
   2baf6:	83 e8 01             	sub    $0x1,%eax
   2baf9:	83 f8 3f             	cmp    $0x3f,%eax
   2bafc:	0f 87 0d 02 00 00    	ja     2bd0f <ev_signal_start+0x24f>
   2bb02:	48 98                	cltq   
   2bb04:	4c 8d 25 f5 ba 22 00 	lea    0x22baf5(%rip),%r12        # 257600 <signals>
   2bb0b:	48 89 fd             	mov    %rdi,%rbp
   2bb0e:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   2bb12:	49 8b 54 d4 08       	mov    0x8(%r12,%rdx,8),%rdx
   2bb17:	48 39 fa             	cmp    %rdi,%rdx
   2bb1a:	74 09                	je     2bb25 <ev_signal_start+0x65>
   2bb1c:	48 85 d2             	test   %rdx,%rdx
   2bb1f:	0f 85 c6 01 00 00    	jne    2bceb <ev_signal_start+0x22b>
   2bb25:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   2bb29:	49 89 6c c4 08       	mov    %rbp,0x8(%r12,%rax,8)
   2bb2e:	8b 85 ec 03 00 00    	mov    0x3ec(%rbp),%eax
   2bb34:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2bb37:	0f 84 c3 00 00 00    	je     2bc00 <ev_signal_start+0x140>
   2bb3d:	85 c0                	test   %eax,%eax
   2bb3f:	79 77                	jns    2bbb8 <ev_signal_start+0xf8>
   2bb41:	8b 43 08             	mov    0x8(%rbx),%eax
   2bb44:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   2bb49:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   2bb4f:	48 89 ef             	mov    %rbp,%rdi
   2bb52:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2bb55:	0f 4c c2             	cmovl  %edx,%eax
   2bb58:	ba 02 00 00 00       	mov    $0x2,%edx
   2bb5d:	83 f8 02             	cmp    $0x2,%eax
   2bb60:	0f 4f c2             	cmovg  %edx,%eax
   2bb63:	89 43 08             	mov    %eax,0x8(%rbx)
   2bb66:	e8 35 ca ff ff       	callq  285a0 <ev_ref>
   2bb6b:	8b 43 28             	mov    0x28(%rbx),%eax
   2bb6e:	83 e8 01             	sub    $0x1,%eax
   2bb71:	48 98                	cltq   
   2bb73:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   2bb77:	49 8d 14 c4          	lea    (%r12,%rax,8),%rdx
   2bb7b:	48 8b 42 10          	mov    0x10(%rdx),%rax
   2bb7f:	48 89 43 20          	mov    %rax,0x20(%rbx)
   2bb83:	48 89 5a 10          	mov    %rbx,0x10(%rdx)
   2bb87:	48 85 c0             	test   %rax,%rax
   2bb8a:	74 64                	je     2bbf0 <ev_signal_start+0x130>
   2bb8c:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   2bb93:	00 
   2bb94:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2bb9b:	00 00 
   2bb9d:	0f 85 67 01 00 00    	jne    2bd0a <ev_signal_start+0x24a>
   2bba3:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   2bbaa:	5b                   	pop    %rbx
   2bbab:	5d                   	pop    %rbp
   2bbac:	41 5c                	pop    %r12
   2bbae:	41 5d                	pop    %r13
   2bbb0:	41 5e                	pop    %r14
   2bbb2:	c3                   	retq   
   2bbb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2bbb8:	4c 8d ad 20 04 00 00 	lea    0x420(%rbp),%r13
   2bbbf:	8b 73 28             	mov    0x28(%rbx),%esi
   2bbc2:	4c 89 ef             	mov    %r13,%rdi
   2bbc5:	e8 b6 4e fe ff       	callq  10a80 <sigaddset@plt>
   2bbca:	31 d2                	xor    %edx,%edx
   2bbcc:	4c 89 ee             	mov    %r13,%rsi
   2bbcf:	31 ff                	xor    %edi,%edi
   2bbd1:	e8 ba 3e fe ff       	callq  fa90 <sigprocmask@plt>
   2bbd6:	8b bd ec 03 00 00    	mov    0x3ec(%rbp),%edi
   2bbdc:	31 d2                	xor    %edx,%edx
   2bbde:	4c 89 ee             	mov    %r13,%rsi
   2bbe1:	e8 7a 44 fe ff       	callq  10060 <signalfd@plt>
   2bbe6:	e9 56 ff ff ff       	jmpq   2bb41 <ev_signal_start+0x81>
   2bbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2bbf0:	8b 85 ec 03 00 00    	mov    0x3ec(%rbp),%eax
   2bbf6:	85 c0                	test   %eax,%eax
   2bbf8:	79 92                	jns    2bb8c <ev_signal_start+0xcc>
   2bbfa:	e9 c2 65 fe ff       	jmpq   121c1 <ev_signal_start.cold.35>
   2bbff:	90                   	nop
   2bc00:	4c 8d b5 20 04 00 00 	lea    0x420(%rbp),%r14
   2bc07:	ba 00 08 08 00       	mov    $0x80800,%edx
   2bc0c:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   2bc11:	4c 89 f6             	mov    %r14,%rsi
   2bc14:	e8 47 44 fe ff       	callq  10060 <signalfd@plt>
   2bc19:	41 89 c5             	mov    %eax,%r13d
   2bc1c:	89 85 ec 03 00 00    	mov    %eax,0x3ec(%rbp)
   2bc22:	85 c0                	test   %eax,%eax
   2bc24:	0f 88 8e 00 00 00    	js     2bcb8 <ev_signal_start+0x1f8>
   2bc2a:	ba 01 00 00 00       	mov    $0x1,%edx
   2bc2f:	be 02 00 00 00       	mov    $0x2,%esi
   2bc34:	44 89 ef             	mov    %r13d,%edi
   2bc37:	31 c0                	xor    %eax,%eax
   2bc39:	e8 82 40 fe ff       	callq  fcc0 <fcntl@plt>
   2bc3e:	ba 00 08 00 00       	mov    $0x800,%edx
   2bc43:	44 89 ef             	mov    %r13d,%edi
   2bc46:	31 c0                	xor    %eax,%eax
   2bc48:	be 04 00 00 00       	mov    $0x4,%esi
   2bc4d:	e8 6e 40 fe ff       	callq  fcc0 <fcntl@plt>
   2bc52:	4c 89 f7             	mov    %r14,%rdi
   2bc55:	e8 46 46 fe ff       	callq  102a0 <sigemptyset@plt>
   2bc5a:	48 8d 05 af c7 ff ff 	lea    -0x3851(%rip),%rax        # 28410 <sigfdcb>
   2bc61:	48 8d b5 f0 03 00 00 	lea    0x3f0(%rbp),%rsi
   2bc68:	48 89 ef             	mov    %rbp,%rdi
   2bc6b:	48 89 85 08 04 00 00 	mov    %rax,0x408(%rbp)
   2bc72:	8b 85 ec 03 00 00    	mov    0x3ec(%rbp),%eax
   2bc78:	c7 85 1c 04 00 00 81 	movl   $0x81,0x41c(%rbp)
   2bc7f:	00 00 00 
   2bc82:	89 85 18 04 00 00    	mov    %eax,0x418(%rbp)
   2bc88:	48 c7 85 f0 03 00 00 	movq   $0x0,0x3f0(%rbp)
   2bc8f:	00 00 00 00 
   2bc93:	c7 85 f8 03 00 00 02 	movl   $0x2,0x3f8(%rbp)
   2bc9a:	00 00 00 
   2bc9d:	e8 be cb ff ff       	callq  28860 <ev_io_start>
   2bca2:	48 89 ef             	mov    %rbp,%rdi
   2bca5:	e8 06 c9 ff ff       	callq  285b0 <ev_unref>
   2bcaa:	8b 85 ec 03 00 00    	mov    0x3ec(%rbp),%eax
   2bcb0:	e9 88 fe ff ff       	jmpq   2bb3d <ev_signal_start+0x7d>
   2bcb5:	0f 1f 00             	nopl   (%rax)
   2bcb8:	e8 53 3e fe ff       	callq  fb10 <__errno_location@plt>
   2bcbd:	83 38 16             	cmpl   $0x16,(%rax)
   2bcc0:	0f 85 7b fe ff ff    	jne    2bb41 <ev_signal_start+0x81>
   2bcc6:	31 d2                	xor    %edx,%edx
   2bcc8:	4c 89 f6             	mov    %r14,%rsi
   2bccb:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   2bcd0:	e8 8b 43 fe ff       	callq  10060 <signalfd@plt>
   2bcd5:	41 89 c5             	mov    %eax,%r13d
   2bcd8:	89 85 ec 03 00 00    	mov    %eax,0x3ec(%rbp)
   2bcde:	85 c0                	test   %eax,%eax
   2bce0:	0f 88 5b fe ff ff    	js     2bb41 <ev_signal_start+0x81>
   2bce6:	e9 3f ff ff ff       	jmpq   2bc2a <ev_signal_start+0x16a>
   2bceb:	48 8d 0d ee 72 01 00 	lea    0x172ee(%rip),%rcx        # 42fe0 <__PRETTY_FUNCTION__.11462>
   2bcf2:	ba d6 11 00 00       	mov    $0x11d6,%edx
   2bcf7:	48 8d 35 63 65 01 00 	lea    0x16563(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2bcfe:	48 8d 3d 7b 71 01 00 	lea    0x1717b(%rip),%rdi        # 42e80 <__FUNCTION__.3752+0xc40>
   2bd05:	e8 f6 42 fe ff       	callq  10000 <__assert_fail@plt>
   2bd0a:	e8 41 41 fe ff       	callq  fe50 <__stack_chk_fail@plt>
   2bd0f:	48 8d 0d ca 72 01 00 	lea    0x172ca(%rip),%rcx        # 42fe0 <__PRETTY_FUNCTION__.11462>
   2bd16:	ba d2 11 00 00       	mov    $0x11d2,%edx
   2bd1b:	48 8d 35 3f 65 01 00 	lea    0x1653f(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2bd22:	48 8d 3d ef 70 01 00 	lea    0x170ef(%rip),%rdi        # 42e18 <__FUNCTION__.3752+0xbd8>
   2bd29:	e8 d2 42 fe ff       	callq  10000 <__assert_fail@plt>

000000000002bd2e <.annobin_ev_signal_start.end>:
   2bd2e:	66 90                	xchg   %ax,%ax

000000000002bd30 <ev_signal_stop>:
   2bd30:	f3 0f 1e fa          	endbr64 
   2bd34:	41 55                	push   %r13
   2bd36:	41 54                	push   %r12
   2bd38:	55                   	push   %rbp
   2bd39:	48 89 fd             	mov    %rdi,%rbp
   2bd3c:	53                   	push   %rbx
   2bd3d:	48 89 f3             	mov    %rsi,%rbx
   2bd40:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   2bd47:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2bd4e:	00 00 
   2bd50:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2bd57:	00 
   2bd58:	31 c0                	xor    %eax,%eax
   2bd5a:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2bd5e:	85 c0                	test   %eax,%eax
   2bd60:	74 24                	je     2bd86 <ev_signal_stop+0x56>
   2bd62:	8b 4e 08             	mov    0x8(%rsi),%ecx
   2bd65:	48 c1 e0 04          	shl    $0x4,%rax
   2bd69:	8d 51 02             	lea    0x2(%rcx),%edx
   2bd6c:	48 63 d2             	movslq %edx,%rdx
   2bd6f:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2bd74:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2bd7b:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2bd7f:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2bd86:	8b 13                	mov    (%rbx),%edx
   2bd88:	85 d2                	test   %edx,%edx
   2bd8a:	74 5b                	je     2bde7 <ev_signal_stop+0xb7>
   2bd8c:	8b 43 28             	mov    0x28(%rbx),%eax
   2bd8f:	4c 8d 25 6a b8 22 00 	lea    0x22b86a(%rip),%r12        # 257600 <signals>
   2bd96:	83 e8 01             	sub    $0x1,%eax
   2bd99:	48 98                	cltq   
   2bd9b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   2bd9f:	48 c1 e0 03          	shl    $0x3,%rax
   2bda3:	49 8d 54 04 10       	lea    0x10(%r12,%rax,1),%rdx
   2bda8:	49 8b 44 04 10       	mov    0x10(%r12,%rax,1),%rax
   2bdad:	48 85 c0             	test   %rax,%rax
   2bdb0:	74 10                	je     2bdc2 <ev_signal_stop+0x92>
   2bdb2:	48 39 c3             	cmp    %rax,%rbx
   2bdb5:	0f 85 c5 00 00 00    	jne    2be80 <ev_signal_stop+0x150>
   2bdbb:	48 8b 43 20          	mov    0x20(%rbx),%rax
   2bdbf:	48 89 02             	mov    %rax,(%rdx)
   2bdc2:	48 89 ef             	mov    %rbp,%rdi
   2bdc5:	e8 e6 c7 ff ff       	callq  285b0 <ev_unref>
   2bdca:	8b 7b 28             	mov    0x28(%rbx),%edi
   2bdcd:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2bdd3:	8d 47 ff             	lea    -0x1(%rdi),%eax
   2bdd6:	48 98                	cltq   
   2bdd8:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   2bddc:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
   2bde0:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   2bde5:	74 29                	je     2be10 <ev_signal_stop+0xe0>
   2bde7:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
   2bdee:	00 
   2bdef:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2bdf6:	00 00 
   2bdf8:	0f 85 9d 00 00 00    	jne    2be9b <ev_signal_stop+0x16b>
   2bdfe:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   2be05:	5b                   	pop    %rbx
   2be06:	5d                   	pop    %rbp
   2be07:	41 5c                	pop    %r12
   2be09:	41 5d                	pop    %r13
   2be0b:	c3                   	retq   
   2be0c:	0f 1f 40 00          	nopl   0x0(%rax)
   2be10:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   2be17:	00 
   2be18:	8b 85 ec 03 00 00    	mov    0x3ec(%rbp),%eax
   2be1e:	85 c0                	test   %eax,%eax
   2be20:	78 4e                	js     2be70 <ev_signal_stop+0x140>
   2be22:	49 89 e4             	mov    %rsp,%r12
   2be25:	4c 8d ad 20 04 00 00 	lea    0x420(%rbp),%r13
   2be2c:	4c 89 e7             	mov    %r12,%rdi
   2be2f:	e8 6c 44 fe ff       	callq  102a0 <sigemptyset@plt>
   2be34:	8b 73 28             	mov    0x28(%rbx),%esi
   2be37:	4c 89 e7             	mov    %r12,%rdi
   2be3a:	e8 41 4c fe ff       	callq  10a80 <sigaddset@plt>
   2be3f:	8b 73 28             	mov    0x28(%rbx),%esi
   2be42:	4c 89 ef             	mov    %r13,%rdi
   2be45:	e8 66 49 fe ff       	callq  107b0 <sigdelset@plt>
   2be4a:	8b bd ec 03 00 00    	mov    0x3ec(%rbp),%edi
   2be50:	31 d2                	xor    %edx,%edx
   2be52:	4c 89 ee             	mov    %r13,%rsi
   2be55:	e8 06 42 fe ff       	callq  10060 <signalfd@plt>
   2be5a:	31 d2                	xor    %edx,%edx
   2be5c:	4c 89 e6             	mov    %r12,%rsi
   2be5f:	bf 01 00 00 00       	mov    $0x1,%edi
   2be64:	e8 27 3c fe ff       	callq  fa90 <sigprocmask@plt>
   2be69:	e9 79 ff ff ff       	jmpq   2bde7 <ev_signal_stop+0xb7>
   2be6e:	66 90                	xchg   %ax,%ax
   2be70:	31 f6                	xor    %esi,%esi
   2be72:	e8 c9 43 fe ff       	callq  10240 <signal@plt>
   2be77:	e9 6b ff ff ff       	jmpq   2bde7 <ev_signal_stop+0xb7>
   2be7c:	48 89 d0             	mov    %rdx,%rax
   2be7f:	90                   	nop
   2be80:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2be84:	48 85 d2             	test   %rdx,%rdx
   2be87:	0f 84 35 ff ff ff    	je     2bdc2 <ev_signal_stop+0x92>
   2be8d:	48 39 d3             	cmp    %rdx,%rbx
   2be90:	75 ea                	jne    2be7c <ev_signal_stop+0x14c>
   2be92:	48 8d 50 20          	lea    0x20(%rax),%rdx
   2be96:	e9 20 ff ff ff       	jmpq   2bdbb <ev_signal_stop+0x8b>
   2be9b:	e8 b0 3f fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002bea0 <ev_child_start>:
   2bea0:	f3 0f 1e fa          	endbr64 
   2bea4:	48 8d 05 75 b6 22 00 	lea    0x22b675(%rip),%rax        # 257520 <ev_default_loop_ptr>
   2beab:	53                   	push   %rbx
   2beac:	48 39 38             	cmp    %rdi,(%rax)
   2beaf:	75 4b                	jne    2befc <ev_child_start+0x5c>
   2beb1:	8b 06                	mov    (%rsi),%eax
   2beb3:	48 89 f3             	mov    %rsi,%rbx
   2beb6:	85 c0                	test   %eax,%eax
   2beb8:	75 40                	jne    2befa <ev_child_start+0x5a>
   2beba:	8b 46 08             	mov    0x8(%rsi),%eax
   2bebd:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   2bec2:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
   2bec8:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2becb:	0f 4c c2             	cmovl  %edx,%eax
   2bece:	ba 02 00 00 00       	mov    $0x2,%edx
   2bed3:	83 f8 02             	cmp    $0x2,%eax
   2bed6:	0f 4f c2             	cmovg  %edx,%eax
   2bed9:	89 46 08             	mov    %eax,0x8(%rsi)
   2bedc:	e8 bf c6 ff ff       	callq  285a0 <ev_ref>
   2bee1:	8b 43 2c             	mov    0x2c(%rbx),%eax
   2bee4:	48 8d 15 95 b6 22 00 	lea    0x22b695(%rip),%rdx        # 257580 <childs>
   2beeb:	83 e0 0f             	and    $0xf,%eax
   2beee:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
   2bef2:	48 89 4b 20          	mov    %rcx,0x20(%rbx)
   2bef6:	48 89 1c c2          	mov    %rbx,(%rdx,%rax,8)
   2befa:	5b                   	pop    %rbx
   2befb:	c3                   	retq   
   2befc:	48 8d 0d cd 70 01 00 	lea    0x170cd(%rip),%rcx        # 42fd0 <__PRETTY_FUNCTION__.11473>
   2bf03:	ba 4c 12 00 00       	mov    $0x124c,%edx
   2bf08:	48 8d 35 52 63 01 00 	lea    0x16352(%rip),%rsi        # 42261 <__FUNCTION__.3752+0x21>
   2bf0f:	48 8d 3d f2 6f 01 00 	lea    0x16ff2(%rip),%rdi        # 42f08 <__FUNCTION__.3752+0xcc8>
   2bf16:	e8 e5 40 fe ff       	callq  10000 <__assert_fail@plt>

000000000002bf1b <.annobin_ev_child_start.end>:
   2bf1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002bf20 <ev_child_stop>:
   2bf20:	f3 0f 1e fa          	endbr64 
   2bf24:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2bf28:	53                   	push   %rbx
   2bf29:	85 c0                	test   %eax,%eax
   2bf2b:	74 24                	je     2bf51 <ev_child_stop+0x31>
   2bf2d:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2bf30:	48 c1 e0 04          	shl    $0x4,%rax
   2bf34:	8d 53 02             	lea    0x2(%rbx),%edx
   2bf37:	48 63 d2             	movslq %edx,%rdx
   2bf3a:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2bf3f:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2bf46:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2bf4a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2bf51:	8b 06                	mov    (%rsi),%eax
   2bf53:	85 c0                	test   %eax,%eax
   2bf55:	74 34                	je     2bf8b <ev_child_stop+0x6b>
   2bf57:	8b 46 2c             	mov    0x2c(%rsi),%eax
   2bf5a:	48 8d 15 1f b6 22 00 	lea    0x22b61f(%rip),%rdx        # 257580 <childs>
   2bf61:	83 e0 0f             	and    $0xf,%eax
   2bf64:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
   2bf68:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   2bf6c:	48 85 c0             	test   %rax,%rax
   2bf6f:	74 0c                	je     2bf7d <ev_child_stop+0x5d>
   2bf71:	48 39 c6             	cmp    %rax,%rsi
   2bf74:	75 1a                	jne    2bf90 <ev_child_stop+0x70>
   2bf76:	48 8b 46 20          	mov    0x20(%rsi),%rax
   2bf7a:	48 89 01             	mov    %rax,(%rcx)
   2bf7d:	48 89 f3             	mov    %rsi,%rbx
   2bf80:	e8 2b c6 ff ff       	callq  285b0 <ev_unref>
   2bf85:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2bf8b:	5b                   	pop    %rbx
   2bf8c:	c3                   	retq   
   2bf8d:	48 89 d0             	mov    %rdx,%rax
   2bf90:	48 8b 50 20          	mov    0x20(%rax),%rdx
   2bf94:	48 85 d2             	test   %rdx,%rdx
   2bf97:	74 e4                	je     2bf7d <ev_child_stop+0x5d>
   2bf99:	48 39 d6             	cmp    %rdx,%rsi
   2bf9c:	75 ef                	jne    2bf8d <ev_child_stop+0x6d>
   2bf9e:	48 8d 48 20          	lea    0x20(%rax),%rcx
   2bfa2:	eb d2                	jmp    2bf76 <ev_child_stop+0x56>

000000000002bfa4 <.annobin_ev_child_stop.end>:
   2bfa4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2bfab:	00 00 00 00 
   2bfaf:	90                   	nop

000000000002bfb0 <ev_stat_stat>:
   2bfb0:	f3 0f 1e fa          	endbr64 
   2bfb4:	53                   	push   %rbx
   2bfb5:	48 8d 96 f8 00 00 00 	lea    0xf8(%rsi),%rdx
   2bfbc:	48 89 f3             	mov    %rsi,%rbx
   2bfbf:	48 8b 76 60          	mov    0x60(%rsi),%rsi
   2bfc3:	bf 01 00 00 00       	mov    $0x1,%edi
   2bfc8:	e8 73 3e fe ff       	callq  fe40 <__lxstat@plt>
   2bfcd:	85 c0                	test   %eax,%eax
   2bfcf:	78 1f                	js     2bff0 <ev_stat_stat+0x40>
   2bfd1:	48 83 bb 08 01 00 00 	cmpq   $0x0,0x108(%rbx)
   2bfd8:	00 
   2bfd9:	75 0b                	jne    2bfe6 <ev_stat_stat+0x36>
   2bfdb:	48 c7 83 08 01 00 00 	movq   $0x1,0x108(%rbx)
   2bfe2:	01 00 00 00 
   2bfe6:	5b                   	pop    %rbx
   2bfe7:	c3                   	retq   
   2bfe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2bfef:	00 
   2bff0:	48 c7 83 08 01 00 00 	movq   $0x0,0x108(%rbx)
   2bff7:	00 00 00 00 
   2bffb:	5b                   	pop    %rbx
   2bffc:	c3                   	retq   

000000000002bffd <.annobin_ev_stat_stat.end>:
   2bffd:	0f 1f 00             	nopl   (%rax)

000000000002c000 <stat_timer_cb>:
   2c000:	f3 0f 1e fa          	endbr64 
   2c004:	41 57                	push   %r15
   2c006:	41 56                	push   %r14
   2c008:	41 55                	push   %r13
   2c00a:	41 54                	push   %r12
   2c00c:	4c 8d 66 d8          	lea    -0x28(%rsi),%r12
   2c010:	55                   	push   %rbp
   2c011:	48 89 fd             	mov    %rdi,%rbp
   2c014:	53                   	push   %rbx
   2c015:	48 89 f3             	mov    %rsi,%rbx
   2c018:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   2c01f:	f3 0f 6f 86 d0 00 00 	movdqu 0xd0(%rsi),%xmm0
   2c026:	00 
   2c027:	f3 0f 6f 8e e0 00 00 	movdqu 0xe0(%rsi),%xmm1
   2c02e:	00 
   2c02f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2c036:	00 00 
   2c038:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   2c03f:	00 
   2c040:	31 c0                	xor    %eax,%eax
   2c042:	f3 0f 6f 96 f0 00 00 	movdqu 0xf0(%rsi),%xmm2
   2c049:	00 
   2c04a:	f3 0f 6f 9e 00 01 00 	movdqu 0x100(%rsi),%xmm3
   2c051:	00 
   2c052:	f3 0f 6f a6 10 01 00 	movdqu 0x110(%rsi),%xmm4
   2c059:	00 
   2c05a:	f3 0f 6f ae 20 01 00 	movdqu 0x120(%rsi),%xmm5
   2c061:	00 
   2c062:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2c067:	f3 0f 6f b6 30 01 00 	movdqu 0x130(%rsi),%xmm6
   2c06e:	00 
   2c06f:	f3 0f 6f be 40 01 00 	movdqu 0x140(%rsi),%xmm7
   2c076:	00 
   2c077:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   2c07c:	f3 0f 6f 86 50 01 00 	movdqu 0x150(%rsi),%xmm0
   2c083:	00 
   2c084:	48 8b 86 e0 00 00 00 	mov    0xe0(%rsi),%rax
   2c08b:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   2c090:	4c 8b ae d0 00 00 00 	mov    0xd0(%rsi),%r13
   2c097:	0f 29 5c 24 70       	movaps %xmm3,0x70(%rsp)
   2c09c:	4c 8b b6 d8 00 00 00 	mov    0xd8(%rsi),%r14
   2c0a3:	0f 29 a4 24 80 00 00 	movaps %xmm4,0x80(%rsp)
   2c0aa:	00 
   2c0ab:	44 8b be e8 00 00 00 	mov    0xe8(%rsi),%r15d
   2c0b2:	0f 29 ac 24 90 00 00 	movaps %xmm5,0x90(%rsp)
   2c0b9:	00 
   2c0ba:	0f 29 b4 24 a0 00 00 	movaps %xmm6,0xa0(%rsp)
   2c0c1:	00 
   2c0c2:	0f 29 bc 24 b0 00 00 	movaps %xmm7,0xb0(%rsp)
   2c0c9:	00 
   2c0ca:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   2c0d1:	00 
   2c0d2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2c0d7:	8b 96 ec 00 00 00    	mov    0xec(%rsi),%edx
   2c0dd:	8b 8e f0 00 00 00    	mov    0xf0(%rsi),%ecx
   2c0e3:	4c 8b 9e f8 00 00 00 	mov    0xf8(%rsi),%r11
   2c0ea:	4c 8b 96 00 01 00 00 	mov    0x100(%rsi),%r10
   2c0f1:	4c 8b 8e 18 01 00 00 	mov    0x118(%rsi),%r9
   2c0f8:	89 54 24 34          	mov    %edx,0x34(%rsp)
   2c0fc:	4c 8b 86 28 01 00 00 	mov    0x128(%rsi),%r8
   2c103:	48 8b 86 38 01 00 00 	mov    0x138(%rsi),%rax
   2c10a:	4c 89 e6             	mov    %r12,%rsi
   2c10d:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   2c111:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   2c116:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   2c11b:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   2c120:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   2c125:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2c12a:	e8 81 fe ff ff       	callq  2bfb0 <ev_stat_stat>
   2c12f:	4c 39 ab d0 00 00 00 	cmp    %r13,0xd0(%rbx)
   2c136:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   2c13b:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   2c140:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   2c145:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   2c14a:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   2c14e:	8b 54 24 34          	mov    0x34(%rsp),%edx
   2c152:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2c157:	0f 84 23 01 00 00    	je     2c280 <stat_timer_cb+0x280>
   2c15d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2c162:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2c167:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
   2c16c:	66 0f 6f 84 24 b0 00 	movdqa 0xb0(%rsp),%xmm0
   2c173:	00 00 
   2c175:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   2c17a:	66 0f 6f 4c 24 40    	movdqa 0x40(%rsp),%xmm1
   2c180:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   2c187:	00 
   2c188:	8b 85 28 03 00 00    	mov    0x328(%rbp),%eax
   2c18e:	44 89 7c 24 58       	mov    %r15d,0x58(%rsp)
   2c193:	66 0f 6f bc 24 a0 00 	movdqa 0xa0(%rsp),%xmm7
   2c19a:	00 00 
   2c19c:	89 54 24 5c          	mov    %edx,0x5c(%rsp)
   2c1a0:	66 0f 6f 54 24 50    	movdqa 0x50(%rsp),%xmm2
   2c1a6:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
   2c1aa:	4c 89 5c 24 68       	mov    %r11,0x68(%rsp)
   2c1af:	66 0f 6f 5c 24 60    	movdqa 0x60(%rsp),%xmm3
   2c1b5:	4c 89 54 24 70       	mov    %r10,0x70(%rsp)
   2c1ba:	66 0f 6f 64 24 70    	movdqa 0x70(%rsp),%xmm4
   2c1c0:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
   2c1c7:	00 
   2c1c8:	66 0f 6f ac 24 80 00 	movdqa 0x80(%rsp),%xmm5
   2c1cf:	00 00 
   2c1d1:	4c 89 84 24 98 00 00 	mov    %r8,0x98(%rsp)
   2c1d8:	00 
   2c1d9:	66 0f 6f b4 24 90 00 	movdqa 0x90(%rsp),%xmm6
   2c1e0:	00 00 
   2c1e2:	0f 11 4b 40          	movups %xmm1,0x40(%rbx)
   2c1e6:	66 0f 6f 8c 24 c0 00 	movdqa 0xc0(%rsp),%xmm1
   2c1ed:	00 00 
   2c1ef:	0f 11 53 50          	movups %xmm2,0x50(%rbx)
   2c1f3:	0f 11 5b 60          	movups %xmm3,0x60(%rbx)
   2c1f7:	0f 11 63 70          	movups %xmm4,0x70(%rbx)
   2c1fb:	0f 11 ab 80 00 00 00 	movups %xmm5,0x80(%rbx)
   2c202:	0f 11 b3 90 00 00 00 	movups %xmm6,0x90(%rbx)
   2c209:	0f 11 bb a0 00 00 00 	movups %xmm7,0xa0(%rbx)
   2c210:	0f 11 83 b0 00 00 00 	movups %xmm0,0xb0(%rbx)
   2c217:	0f 11 8b c0 00 00 00 	movups %xmm1,0xc0(%rbx)
   2c21e:	85 c0                	test   %eax,%eax
   2c220:	78 21                	js     2c243 <stat_timer_cb+0x243>
   2c222:	4c 89 e6             	mov    %r12,%rsi
   2c225:	48 89 ef             	mov    %rbp,%rdi
   2c228:	e8 53 b5 ff ff       	callq  27780 <infy_del>
   2c22d:	4c 89 e6             	mov    %r12,%rsi
   2c230:	48 89 ef             	mov    %rbp,%rdi
   2c233:	e8 a8 dc ff ff       	callq  29ee0 <infy_add>
   2c238:	4c 89 e6             	mov    %r12,%rsi
   2c23b:	48 89 ef             	mov    %rbp,%rdi
   2c23e:	e8 6d fd ff ff       	callq  2bfb0 <ev_stat_stat>
   2c243:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   2c24a:	00 
   2c24b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2c252:	00 00 
   2c254:	0f 85 d0 00 00 00    	jne    2c32a <stat_timer_cb+0x32a>
   2c25a:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   2c261:	4c 89 e6             	mov    %r12,%rsi
   2c264:	48 89 ef             	mov    %rbp,%rdi
   2c267:	ba 00 10 00 00       	mov    $0x1000,%edx
   2c26c:	5b                   	pop    %rbx
   2c26d:	5d                   	pop    %rbp
   2c26e:	41 5c                	pop    %r12
   2c270:	41 5d                	pop    %r13
   2c272:	41 5e                	pop    %r14
   2c274:	41 5f                	pop    %r15
   2c276:	e9 c5 b8 ff ff       	jmpq   27b40 <ev_feed_event>
   2c27b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2c280:	4c 39 b3 d8 00 00 00 	cmp    %r14,0xd8(%rbx)
   2c287:	0f 85 d0 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c28d:	44 39 bb e8 00 00 00 	cmp    %r15d,0xe8(%rbx)
   2c294:	0f 85 c3 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c29a:	48 39 83 e0 00 00 00 	cmp    %rax,0xe0(%rbx)
   2c2a1:	0f 85 b6 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2a7:	39 93 ec 00 00 00    	cmp    %edx,0xec(%rbx)
   2c2ad:	0f 85 aa fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2b3:	39 8b f0 00 00 00    	cmp    %ecx,0xf0(%rbx)
   2c2b9:	0f 85 9e fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2bf:	4c 39 9b f8 00 00 00 	cmp    %r11,0xf8(%rbx)
   2c2c6:	0f 85 91 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2cc:	4c 39 93 00 01 00 00 	cmp    %r10,0x100(%rbx)
   2c2d3:	0f 85 84 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2d9:	4c 39 8b 18 01 00 00 	cmp    %r9,0x118(%rbx)
   2c2e0:	0f 85 77 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2e6:	4c 39 83 28 01 00 00 	cmp    %r8,0x128(%rbx)
   2c2ed:	0f 85 6a fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c2f3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2c2f8:	48 39 b3 38 01 00 00 	cmp    %rsi,0x138(%rbx)
   2c2ff:	0f 85 58 fe ff ff    	jne    2c15d <stat_timer_cb+0x15d>
   2c305:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   2c30c:	00 
   2c30d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2c314:	00 00 
   2c316:	75 12                	jne    2c32a <stat_timer_cb+0x32a>
   2c318:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   2c31f:	5b                   	pop    %rbx
   2c320:	5d                   	pop    %rbp
   2c321:	41 5c                	pop    %r12
   2c323:	41 5d                	pop    %r13
   2c325:	41 5e                	pop    %r14
   2c327:	41 5f                	pop    %r15
   2c329:	c3                   	retq   
   2c32a:	e8 21 3b fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002c32f <.annobin_infy_wd.start>:
   2c32f:	90                   	nop

000000000002c330 <infy_wd>:
   2c330:	41 57                	push   %r15
   2c332:	41 56                	push   %r14
   2c334:	41 55                	push   %r13
   2c336:	41 54                	push   %r12
   2c338:	49 89 cc             	mov    %rcx,%r12
   2c33b:	55                   	push   %rbp
   2c33c:	48 89 fd             	mov    %rdi,%rbp
   2c33f:	53                   	push   %rbx
   2c340:	89 d3                	mov    %edx,%ebx
   2c342:	48 83 ec 18          	sub    $0x18,%rsp
   2c346:	85 f6                	test   %esi,%esi
   2c348:	0f 88 ba 00 00 00    	js     2c408 <infy_wd+0xd8>
   2c34e:	83 e6 0f             	and    $0xf,%esi
   2c351:	48 8d 04 f7          	lea    (%rdi,%rsi,8),%rax
   2c355:	4c 8b b8 68 03 00 00 	mov    0x368(%rax),%r15
   2c35c:	48 89 04 24          	mov    %rax,(%rsp)
   2c360:	4d 85 ff             	test   %r15,%r15
   2c363:	74 56                	je     2c3bb <infy_wd+0x8b>
   2c365:	48 8d 84 f7 68 03 00 	lea    0x368(%rdi,%rsi,8),%rax
   2c36c:	00 
   2c36d:	83 fa ff             	cmp    $0xffffffff,%edx
   2c370:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2c375:	41 0f 94 c5          	sete   %r13b
   2c379:	eb 12                	jmp    2c38d <infy_wd+0x5d>
   2c37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2c380:	45 84 ed             	test   %r13b,%r13b
   2c383:	75 15                	jne    2c39a <infy_wd+0x6a>
   2c385:	4d 89 f7             	mov    %r14,%r15
   2c388:	4d 85 f6             	test   %r14,%r14
   2c38b:	74 2e                	je     2c3bb <infy_wd+0x8b>
   2c38d:	4d 8b 77 20          	mov    0x20(%r15),%r14
   2c391:	41 39 9f 88 01 00 00 	cmp    %ebx,0x188(%r15)
   2c398:	75 e6                	jne    2c380 <infy_wd+0x50>
   2c39a:	41 f7 44 24 04 00 a4 	testl  $0xa400,0x4(%r12)
   2c3a1:	00 00 
   2c3a3:	75 2b                	jne    2c3d0 <infy_wd+0xa0>
   2c3a5:	49 8d 77 28          	lea    0x28(%r15),%rsi
   2c3a9:	31 d2                	xor    %edx,%edx
   2c3ab:	48 89 ef             	mov    %rbp,%rdi
   2c3ae:	4d 89 f7             	mov    %r14,%r15
   2c3b1:	e8 4a fc ff ff       	callq  2c000 <stat_timer_cb>
   2c3b6:	4d 85 f6             	test   %r14,%r14
   2c3b9:	75 d2                	jne    2c38d <infy_wd+0x5d>
   2c3bb:	48 83 c4 18          	add    $0x18,%rsp
   2c3bf:	5b                   	pop    %rbx
   2c3c0:	5d                   	pop    %rbp
   2c3c1:	41 5c                	pop    %r12
   2c3c3:	41 5d                	pop    %r13
   2c3c5:	41 5e                	pop    %r14
   2c3c7:	41 5f                	pop    %r15
   2c3c9:	c3                   	retq   
   2c3ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2c3d0:	48 8b 04 24          	mov    (%rsp),%rax
   2c3d4:	48 8b 90 68 03 00 00 	mov    0x368(%rax),%rdx
   2c3db:	48 85 d2             	test   %rdx,%rdx
   2c3de:	74 0d                	je     2c3ed <infy_wd+0xbd>
   2c3e0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2c3e5:	4c 39 fa             	cmp    %r15,%rdx
   2c3e8:	75 56                	jne    2c440 <infy_wd+0x110>
   2c3ea:	4c 89 36             	mov    %r14,(%rsi)
   2c3ed:	41 c7 87 88 01 00 00 	movl   $0xffffffff,0x188(%r15)
   2c3f4:	ff ff ff ff 
   2c3f8:	4c 89 fe             	mov    %r15,%rsi
   2c3fb:	48 89 ef             	mov    %rbp,%rdi
   2c3fe:	e8 dd da ff ff       	callq  29ee0 <infy_add>
   2c403:	eb a0                	jmp    2c3a5 <infy_wd+0x75>
   2c405:	0f 1f 00             	nopl   (%rax)
   2c408:	45 31 ed             	xor    %r13d,%r13d
   2c40b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2c410:	44 89 ee             	mov    %r13d,%esi
   2c413:	4c 89 e1             	mov    %r12,%rcx
   2c416:	89 da                	mov    %ebx,%edx
   2c418:	48 89 ef             	mov    %rbp,%rdi
   2c41b:	e8 10 ff ff ff       	callq  2c330 <infy_wd>
   2c420:	41 83 c5 01          	add    $0x1,%r13d
   2c424:	41 83 fd 10          	cmp    $0x10,%r13d
   2c428:	75 e6                	jne    2c410 <infy_wd+0xe0>
   2c42a:	48 83 c4 18          	add    $0x18,%rsp
   2c42e:	5b                   	pop    %rbx
   2c42f:	5d                   	pop    %rbp
   2c430:	41 5c                	pop    %r12
   2c432:	41 5d                	pop    %r13
   2c434:	41 5e                	pop    %r14
   2c436:	41 5f                	pop    %r15
   2c438:	c3                   	retq   
   2c439:	48 89 f2             	mov    %rsi,%rdx
   2c43c:	0f 1f 40 00          	nopl   0x0(%rax)
   2c440:	48 8b 72 20          	mov    0x20(%rdx),%rsi
   2c444:	48 85 f6             	test   %rsi,%rsi
   2c447:	74 a4                	je     2c3ed <infy_wd+0xbd>
   2c449:	4c 39 fe             	cmp    %r15,%rsi
   2c44c:	75 eb                	jne    2c439 <infy_wd+0x109>
   2c44e:	48 8d 72 20          	lea    0x20(%rdx),%rsi
   2c452:	eb 96                	jmp    2c3ea <infy_wd+0xba>

000000000002c454 <.annobin_infy_cb.start>:
   2c454:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c45b:	00 00 00 00 
   2c45f:	90                   	nop

000000000002c460 <infy_cb>:
   2c460:	f3 0f 1e fa          	endbr64 
   2c464:	41 56                	push   %r14
   2c466:	ba 1f 01 00 00       	mov    $0x11f,%edx
   2c46b:	41 55                	push   %r13
   2c46d:	41 54                	push   %r12
   2c46f:	49 89 fc             	mov    %rdi,%r12
   2c472:	55                   	push   %rbp
   2c473:	53                   	push   %rbx
   2c474:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
   2c47b:	8b bf 28 03 00 00    	mov    0x328(%rdi),%edi
   2c481:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2c488:	00 00 
   2c48a:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   2c491:	00 
   2c492:	31 c0                	xor    %eax,%eax
   2c494:	49 89 e5             	mov    %rsp,%r13
   2c497:	4c 89 ee             	mov    %r13,%rsi
   2c49a:	e8 e1 3c fe ff       	callq  10180 <read@plt>
   2c49f:	85 c0                	test   %eax,%eax
   2c4a1:	7e 2e                	jle    2c4d1 <infy_cb+0x71>
   2c4a3:	41 89 c6             	mov    %eax,%r14d
   2c4a6:	31 ed                	xor    %ebp,%ebp
   2c4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2c4af:	00 
   2c4b0:	48 63 dd             	movslq %ebp,%rbx
   2c4b3:	4c 89 e7             	mov    %r12,%rdi
   2c4b6:	4c 01 eb             	add    %r13,%rbx
   2c4b9:	8b 33                	mov    (%rbx),%esi
   2c4bb:	48 89 d9             	mov    %rbx,%rcx
   2c4be:	89 f2                	mov    %esi,%edx
   2c4c0:	e8 6b fe ff ff       	callq  2c330 <infy_wd>
   2c4c5:	8b 43 0c             	mov    0xc(%rbx),%eax
   2c4c8:	8d 6c 05 10          	lea    0x10(%rbp,%rax,1),%ebp
   2c4cc:	41 39 ee             	cmp    %ebp,%r14d
   2c4cf:	7f df                	jg     2c4b0 <infy_cb+0x50>
   2c4d1:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   2c4d8:	00 
   2c4d9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2c4e0:	00 00 
   2c4e2:	75 10                	jne    2c4f4 <infy_cb+0x94>
   2c4e4:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
   2c4eb:	5b                   	pop    %rbx
   2c4ec:	5d                   	pop    %rbp
   2c4ed:	41 5c                	pop    %r12
   2c4ef:	41 5d                	pop    %r13
   2c4f1:	41 5e                	pop    %r14
   2c4f3:	c3                   	retq   
   2c4f4:	e8 57 39 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002c4f9 <.annobin_ev_stat_start.start>:
   2c4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002c500 <ev_stat_start>:
   2c500:	f3 0f 1e fa          	endbr64 
   2c504:	8b 06                	mov    (%rsi),%eax
   2c506:	85 c0                	test   %eax,%eax
   2c508:	0f 85 22 01 00 00    	jne    2c630 <ev_stat_start+0x130>
   2c50e:	55                   	push   %rbp
   2c50f:	48 89 fd             	mov    %rdi,%rbp
   2c512:	53                   	push   %rbx
   2c513:	48 89 f3             	mov    %rsi,%rbx
   2c516:	48 83 ec 18          	sub    $0x18,%rsp
   2c51a:	e8 91 fa ff ff       	callq  2bfb0 <ev_stat_stat>
   2c51f:	f2 0f 10 43 58       	movsd  0x58(%rbx),%xmm0
   2c524:	66 0f ef c9          	pxor   %xmm1,%xmm1
   2c528:	ba 01 00 00 00       	mov    $0x1,%edx
   2c52d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2c531:	0f 9a c0             	setp   %al
   2c534:	0f 45 c2             	cmovne %edx,%eax
   2c537:	84 c0                	test   %al,%al
   2c539:	74 12                	je     2c54d <ev_stat_start+0x4d>
   2c53b:	f2 0f 10 15 8d 6c 01 	movsd  0x16c8d(%rip),%xmm2        # 431d0 <__PRETTY_FUNCTION__.11024+0x90>
   2c542:	00 
   2c543:	66 0f 2f d0          	comisd %xmm0,%xmm2
   2c547:	0f 87 93 00 00 00    	ja     2c5e0 <ev_stat_start+0xe0>
   2c54d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   2c551:	48 8d 05 a8 fa ff ff 	lea    -0x558(%rip),%rax        # 2c000 <stat_timer_cb>
   2c558:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
   2c55f:	00 
   2c560:	48 89 43 40          	mov    %rax,0x40(%rbx)
   2c564:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   2c56b:	00 
   2c56c:	7a 18                	jp     2c586 <ev_stat_start+0x86>
   2c56e:	66 48 0f 7e c0       	movq   %xmm0,%rax
   2c573:	48 0f 44 05 35 6c 01 	cmove  0x16c35(%rip),%rax        # 431b0 <__PRETTY_FUNCTION__.11024+0x70>
   2c57a:	00 
   2c57b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2c580:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   2c586:	8b 43 08             	mov    0x8(%rbx),%eax
   2c589:	f2 0f 11 43 50       	movsd  %xmm0,0x50(%rbx)
   2c58e:	89 43 30             	mov    %eax,0x30(%rbx)
   2c591:	8b 85 28 03 00 00    	mov    0x328(%rbp),%eax
   2c597:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2c59a:	0f 84 b2 60 fe ff    	je     12652 <ev_stat_start.cold.36>
   2c5a0:	85 c0                	test   %eax,%eax
   2c5a2:	78 6c                	js     2c610 <ev_stat_start+0x110>
   2c5a4:	48 89 de             	mov    %rbx,%rsi
   2c5a7:	48 89 ef             	mov    %rbp,%rdi
   2c5aa:	e8 31 d9 ff ff       	callq  29ee0 <infy_add>
   2c5af:	8b 43 08             	mov    0x8(%rbx),%eax
   2c5b2:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   2c5b7:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   2c5bd:	48 89 ef             	mov    %rbp,%rdi
   2c5c0:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2c5c3:	0f 4c c2             	cmovl  %edx,%eax
   2c5c6:	ba 02 00 00 00       	mov    $0x2,%edx
   2c5cb:	83 f8 02             	cmp    $0x2,%eax
   2c5ce:	0f 4f c2             	cmovg  %edx,%eax
   2c5d1:	89 43 08             	mov    %eax,0x8(%rbx)
   2c5d4:	48 83 c4 18          	add    $0x18,%rsp
   2c5d8:	5b                   	pop    %rbx
   2c5d9:	5d                   	pop    %rbp
   2c5da:	e9 c1 bf ff ff       	jmpq   285a0 <ev_ref>
   2c5df:	90                   	nop
   2c5e0:	48 8d 05 19 fa ff ff 	lea    -0x5e7(%rip),%rax        # 2c000 <stat_timer_cb>
   2c5e7:	f2 0f 11 53 58       	movsd  %xmm2,0x58(%rbx)
   2c5ec:	66 0f 28 c2          	movapd %xmm2,%xmm0
   2c5f0:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
   2c5f7:	00 
   2c5f8:	48 89 43 40          	mov    %rax,0x40(%rbx)
   2c5fc:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   2c603:	00 
   2c604:	e9 7d ff ff ff       	jmpq   2c586 <ev_stat_start+0x86>
   2c609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2c610:	48 89 ef             	mov    %rbp,%rdi
   2c613:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   2c617:	e8 44 d6 ff ff       	callq  29c60 <ev_timer_again>
   2c61c:	48 89 ef             	mov    %rbp,%rdi
   2c61f:	e8 8c bf ff ff       	callq  285b0 <ev_unref>
   2c624:	eb 89                	jmp    2c5af <ev_stat_start+0xaf>
   2c626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2c62d:	00 00 00 
   2c630:	c3                   	retq   

000000000002c631 <.annobin_ev_stat_start.end>:
   2c631:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c638:	00 00 00 00 
   2c63c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c640 <ev_stat_stop>:
   2c640:	f3 0f 1e fa          	endbr64 
   2c644:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2c648:	85 c0                	test   %eax,%eax
   2c64a:	74 24                	je     2c670 <ev_stat_stop+0x30>
   2c64c:	8b 4e 08             	mov    0x8(%rsi),%ecx
   2c64f:	48 c1 e0 04          	shl    $0x4,%rax
   2c653:	8d 51 02             	lea    0x2(%rcx),%edx
   2c656:	48 63 d2             	movslq %edx,%rdx
   2c659:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2c65e:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2c665:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2c669:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2c670:	8b 16                	mov    (%rsi),%edx
   2c672:	85 d2                	test   %edx,%edx
   2c674:	74 4a                	je     2c6c0 <ev_stat_stop+0x80>
   2c676:	55                   	push   %rbp
   2c677:	48 89 fd             	mov    %rdi,%rbp
   2c67a:	53                   	push   %rbx
   2c67b:	48 89 f3             	mov    %rsi,%rbx
   2c67e:	48 83 ec 08          	sub    $0x8,%rsp
   2c682:	e8 f9 b0 ff ff       	callq  27780 <infy_del>
   2c687:	8b 43 28             	mov    0x28(%rbx),%eax
   2c68a:	85 c0                	test   %eax,%eax
   2c68c:	75 1a                	jne    2c6a8 <ev_stat_stop+0x68>
   2c68e:	48 89 ef             	mov    %rbp,%rdi
   2c691:	e8 1a bf ff ff       	callq  285b0 <ev_unref>
   2c696:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2c69c:	48 83 c4 08          	add    $0x8,%rsp
   2c6a0:	5b                   	pop    %rbx
   2c6a1:	5d                   	pop    %rbp
   2c6a2:	c3                   	retq   
   2c6a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2c6a8:	48 89 ef             	mov    %rbp,%rdi
   2c6ab:	e8 f0 be ff ff       	callq  285a0 <ev_ref>
   2c6b0:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   2c6b4:	48 89 ef             	mov    %rbp,%rdi
   2c6b7:	e8 24 d2 ff ff       	callq  298e0 <ev_timer_stop>
   2c6bc:	eb d0                	jmp    2c68e <ev_stat_stop+0x4e>
   2c6be:	66 90                	xchg   %ax,%ax
   2c6c0:	c3                   	retq   

000000000002c6c1 <.annobin_ev_idle_start.start>:
   2c6c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c6c8:	00 00 00 00 
   2c6cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c6d0 <ev_idle_start>:
   2c6d0:	f3 0f 1e fa          	endbr64 
   2c6d4:	8b 06                	mov    (%rsi),%eax
   2c6d6:	85 c0                	test   %eax,%eax
   2c6d8:	0f 85 a2 00 00 00    	jne    2c780 <ev_idle_start+0xb0>
   2c6de:	41 55                	push   %r13
   2c6e0:	48 c7 c1 fe ff ff ff 	mov    $0xfffffffffffffffe,%rcx
   2c6e7:	ba 02 00 00 00       	mov    $0x2,%edx
   2c6ec:	41 54                	push   %r12
   2c6ee:	55                   	push   %rbp
   2c6ef:	48 89 fd             	mov    %rdi,%rbp
   2c6f2:	53                   	push   %rbx
   2c6f3:	48 89 f3             	mov    %rsi,%rbx
   2c6f6:	48 83 ec 08          	sub    $0x8,%rsp
   2c6fa:	48 63 46 08          	movslq 0x8(%rsi),%rax
   2c6fe:	39 c8                	cmp    %ecx,%eax
   2c700:	48 0f 4c c1          	cmovl  %rcx,%rax
   2c704:	83 f8 02             	cmp    $0x2,%eax
   2c707:	48 0f 4f c2          	cmovg  %rdx,%rax
   2c70b:	89 46 08             	mov    %eax,0x8(%rsi)
   2c70e:	48 8d 04 87          	lea    (%rdi,%rax,4),%rax
   2c712:	8b b8 bc 02 00 00    	mov    0x2bc(%rax),%edi
   2c718:	44 8d 67 01          	lea    0x1(%rdi),%r12d
   2c71c:	48 89 ef             	mov    %rbp,%rdi
   2c71f:	44 89 a0 bc 02 00 00 	mov    %r12d,0x2bc(%rax)
   2c726:	83 85 c8 02 00 00 01 	addl   $0x1,0x2c8(%rbp)
   2c72d:	8b 46 08             	mov    0x8(%rsi),%eax
   2c730:	44 89 26             	mov    %r12d,(%rsi)
   2c733:	39 c8                	cmp    %ecx,%eax
   2c735:	0f 4c c1             	cmovl  %ecx,%eax
   2c738:	83 f8 02             	cmp    $0x2,%eax
   2c73b:	0f 4f c2             	cmovg  %edx,%eax
   2c73e:	89 46 08             	mov    %eax,0x8(%rsi)
   2c741:	e8 5a be ff ff       	callq  285a0 <ev_ref>
   2c746:	48 63 53 08          	movslq 0x8(%rbx),%rdx
   2c74a:	8d 42 02             	lea    0x2(%rdx),%eax
   2c74d:	48 98                	cltq   
   2c74f:	48 8d 88 a8 00 00 00 	lea    0xa8(%rax),%rcx
   2c756:	44 3b 64 8d 00       	cmp    0x0(%rbp,%rcx,4),%r12d
   2c75b:	0f 8f 9a 5f fe ff    	jg     126fb <ev_idle_start.cold.37>
   2c761:	48 8b 84 c5 78 02 00 	mov    0x278(%rbp,%rax,8),%rax
   2c768:	00 
   2c769:	4d 63 e4             	movslq %r12d,%r12
   2c76c:	4a 89 5c e0 f8       	mov    %rbx,-0x8(%rax,%r12,8)
   2c771:	48 83 c4 08          	add    $0x8,%rsp
   2c775:	5b                   	pop    %rbx
   2c776:	5d                   	pop    %rbp
   2c777:	41 5c                	pop    %r12
   2c779:	41 5d                	pop    %r13
   2c77b:	c3                   	retq   
   2c77c:	0f 1f 40 00          	nopl   0x0(%rax)
   2c780:	c3                   	retq   

000000000002c781 <.annobin_ev_idle_start.end>:
   2c781:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c788:	00 00 00 00 
   2c78c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c790 <ev_idle_stop>:
   2c790:	f3 0f 1e fa          	endbr64 
   2c794:	55                   	push   %rbp
   2c795:	53                   	push   %rbx
   2c796:	48 83 ec 08          	sub    $0x8,%rsp
   2c79a:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2c79e:	85 c0                	test   %eax,%eax
   2c7a0:	74 24                	je     2c7c6 <ev_idle_stop+0x36>
   2c7a2:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2c7a5:	48 c1 e0 04          	shl    $0x4,%rax
   2c7a9:	8d 53 02             	lea    0x2(%rbx),%edx
   2c7ac:	48 63 d2             	movslq %edx,%rdx
   2c7af:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2c7b4:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2c7bb:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2c7bf:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2c7c6:	8b 16                	mov    (%rsi),%edx
   2c7c8:	85 d2                	test   %edx,%edx
   2c7ca:	74 4e                	je     2c81a <ev_idle_stop+0x8a>
   2c7cc:	48 63 46 08          	movslq 0x8(%rsi),%rax
   2c7d0:	48 89 f5             	mov    %rsi,%rbp
   2c7d3:	48 89 fb             	mov    %rdi,%rbx
   2c7d6:	48 8d 34 87          	lea    (%rdi,%rax,4),%rsi
   2c7da:	8d 48 02             	lea    0x2(%rax),%ecx
   2c7dd:	8b 86 bc 02 00 00    	mov    0x2bc(%rsi),%eax
   2c7e3:	48 63 c9             	movslq %ecx,%rcx
   2c7e6:	48 8b 8c cf 78 02 00 	mov    0x278(%rdi,%rcx,8),%rcx
   2c7ed:	00 
   2c7ee:	83 e8 01             	sub    $0x1,%eax
   2c7f1:	89 86 bc 02 00 00    	mov    %eax,0x2bc(%rsi)
   2c7f7:	48 98                	cltq   
   2c7f9:	48 63 f2             	movslq %edx,%rsi
   2c7fc:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2c800:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2c805:	89 10                	mov    %edx,(%rax)
   2c807:	e8 a4 bd ff ff       	callq  285b0 <ev_unref>
   2c80c:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   2c813:	83 ab c8 02 00 00 01 	subl   $0x1,0x2c8(%rbx)
   2c81a:	48 83 c4 08          	add    $0x8,%rsp
   2c81e:	5b                   	pop    %rbx
   2c81f:	5d                   	pop    %rbp
   2c820:	c3                   	retq   

000000000002c821 <.annobin_ev_idle_stop.end>:
   2c821:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c828:	00 00 00 00 
   2c82c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c830 <ev_prepare_start>:
   2c830:	f3 0f 1e fa          	endbr64 
   2c834:	8b 06                	mov    (%rsi),%eax
   2c836:	85 c0                	test   %eax,%eax
   2c838:	75 66                	jne    2c8a0 <ev_prepare_start+0x70>
   2c83a:	55                   	push   %rbp
   2c83b:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   2c840:	48 89 f5             	mov    %rsi,%rbp
   2c843:	53                   	push   %rbx
   2c844:	48 89 fb             	mov    %rdi,%rbx
   2c847:	48 83 ec 08          	sub    $0x8,%rsp
   2c84b:	8b 87 dc 02 00 00    	mov    0x2dc(%rdi),%eax
   2c851:	8d 50 01             	lea    0x1(%rax),%edx
   2c854:	89 97 dc 02 00 00    	mov    %edx,0x2dc(%rdi)
   2c85a:	8b 46 08             	mov    0x8(%rsi),%eax
   2c85d:	89 16                	mov    %edx,(%rsi)
   2c85f:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2c862:	0f 4c c1             	cmovl  %ecx,%eax
   2c865:	b9 02 00 00 00       	mov    $0x2,%ecx
   2c86a:	83 f8 02             	cmp    $0x2,%eax
   2c86d:	0f 4f c1             	cmovg  %ecx,%eax
   2c870:	89 46 08             	mov    %eax,0x8(%rsi)
   2c873:	e8 28 bd ff ff       	callq  285a0 <ev_ref>
   2c878:	48 63 8b dc 02 00 00 	movslq 0x2dc(%rbx),%rcx
   2c87f:	3b 8b d8 02 00 00    	cmp    0x2d8(%rbx),%ecx
   2c885:	0f 8f a2 5e fe ff    	jg     1272d <ev_prepare_start.cold.38>
   2c88b:	48 8b 83 d0 02 00 00 	mov    0x2d0(%rbx),%rax
   2c892:	48 89 6c c8 f8       	mov    %rbp,-0x8(%rax,%rcx,8)
   2c897:	48 83 c4 08          	add    $0x8,%rsp
   2c89b:	5b                   	pop    %rbx
   2c89c:	5d                   	pop    %rbp
   2c89d:	c3                   	retq   
   2c89e:	66 90                	xchg   %ax,%ax
   2c8a0:	c3                   	retq   

000000000002c8a1 <.annobin_ev_prepare_start.end>:
   2c8a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c8a8:	00 00 00 00 
   2c8ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c8b0 <ev_prepare_stop>:
   2c8b0:	f3 0f 1e fa          	endbr64 
   2c8b4:	53                   	push   %rbx
   2c8b5:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2c8b9:	85 c0                	test   %eax,%eax
   2c8bb:	74 24                	je     2c8e1 <ev_prepare_stop+0x31>
   2c8bd:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2c8c0:	48 c1 e0 04          	shl    $0x4,%rax
   2c8c4:	8d 53 02             	lea    0x2(%rbx),%edx
   2c8c7:	48 63 d2             	movslq %edx,%rdx
   2c8ca:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2c8cf:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2c8d6:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2c8da:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2c8e1:	8b 16                	mov    (%rsi),%edx
   2c8e3:	85 d2                	test   %edx,%edx
   2c8e5:	74 34                	je     2c91b <ev_prepare_stop+0x6b>
   2c8e7:	8b 87 dc 02 00 00    	mov    0x2dc(%rdi),%eax
   2c8ed:	48 8b 8f d0 02 00 00 	mov    0x2d0(%rdi),%rcx
   2c8f4:	48 89 f3             	mov    %rsi,%rbx
   2c8f7:	48 63 f2             	movslq %edx,%rsi
   2c8fa:	83 e8 01             	sub    $0x1,%eax
   2c8fd:	89 87 dc 02 00 00    	mov    %eax,0x2dc(%rdi)
   2c903:	48 98                	cltq   
   2c905:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2c909:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2c90e:	89 10                	mov    %edx,(%rax)
   2c910:	e8 9b bc ff ff       	callq  285b0 <ev_unref>
   2c915:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2c91b:	5b                   	pop    %rbx
   2c91c:	c3                   	retq   

000000000002c91d <.annobin_ev_check_start.start>:
   2c91d:	0f 1f 00             	nopl   (%rax)

000000000002c920 <ev_check_start>:
   2c920:	f3 0f 1e fa          	endbr64 
   2c924:	8b 06                	mov    (%rsi),%eax
   2c926:	85 c0                	test   %eax,%eax
   2c928:	75 66                	jne    2c990 <ev_check_start+0x70>
   2c92a:	55                   	push   %rbp
   2c92b:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   2c930:	48 89 f5             	mov    %rsi,%rbp
   2c933:	53                   	push   %rbx
   2c934:	48 89 fb             	mov    %rdi,%rbx
   2c937:	48 83 ec 08          	sub    $0x8,%rsp
   2c93b:	8b 87 ec 02 00 00    	mov    0x2ec(%rdi),%eax
   2c941:	8d 50 01             	lea    0x1(%rax),%edx
   2c944:	89 97 ec 02 00 00    	mov    %edx,0x2ec(%rdi)
   2c94a:	8b 46 08             	mov    0x8(%rsi),%eax
   2c94d:	89 16                	mov    %edx,(%rsi)
   2c94f:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2c952:	0f 4c c1             	cmovl  %ecx,%eax
   2c955:	b9 02 00 00 00       	mov    $0x2,%ecx
   2c95a:	83 f8 02             	cmp    $0x2,%eax
   2c95d:	0f 4f c1             	cmovg  %ecx,%eax
   2c960:	89 46 08             	mov    %eax,0x8(%rsi)
   2c963:	e8 38 bc ff ff       	callq  285a0 <ev_ref>
   2c968:	48 63 8b ec 02 00 00 	movslq 0x2ec(%rbx),%rcx
   2c96f:	3b 8b e8 02 00 00    	cmp    0x2e8(%rbx),%ecx
   2c975:	0f 8f dd 5d fe ff    	jg     12758 <ev_check_start.cold.39>
   2c97b:	48 8b 83 e0 02 00 00 	mov    0x2e0(%rbx),%rax
   2c982:	48 89 6c c8 f8       	mov    %rbp,-0x8(%rax,%rcx,8)
   2c987:	48 83 c4 08          	add    $0x8,%rsp
   2c98b:	5b                   	pop    %rbx
   2c98c:	5d                   	pop    %rbp
   2c98d:	c3                   	retq   
   2c98e:	66 90                	xchg   %ax,%ax
   2c990:	c3                   	retq   

000000000002c991 <.annobin_ev_check_start.end>:
   2c991:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2c998:	00 00 00 00 
   2c99c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c9a0 <ev_check_stop>:
   2c9a0:	f3 0f 1e fa          	endbr64 
   2c9a4:	53                   	push   %rbx
   2c9a5:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2c9a9:	85 c0                	test   %eax,%eax
   2c9ab:	74 24                	je     2c9d1 <ev_check_stop+0x31>
   2c9ad:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2c9b0:	48 c1 e0 04          	shl    $0x4,%rax
   2c9b4:	8d 53 02             	lea    0x2(%rbx),%edx
   2c9b7:	48 63 d2             	movslq %edx,%rdx
   2c9ba:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2c9bf:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2c9c6:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2c9ca:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2c9d1:	8b 16                	mov    (%rsi),%edx
   2c9d3:	85 d2                	test   %edx,%edx
   2c9d5:	74 34                	je     2ca0b <ev_check_stop+0x6b>
   2c9d7:	8b 87 ec 02 00 00    	mov    0x2ec(%rdi),%eax
   2c9dd:	48 8b 8f e0 02 00 00 	mov    0x2e0(%rdi),%rcx
   2c9e4:	48 89 f3             	mov    %rsi,%rbx
   2c9e7:	48 63 f2             	movslq %edx,%rsi
   2c9ea:	83 e8 01             	sub    $0x1,%eax
   2c9ed:	89 87 ec 02 00 00    	mov    %eax,0x2ec(%rdi)
   2c9f3:	48 98                	cltq   
   2c9f5:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2c9f9:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2c9fe:	89 10                	mov    %edx,(%rax)
   2ca00:	e8 ab bb ff ff       	callq  285b0 <ev_unref>
   2ca05:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2ca0b:	5b                   	pop    %rbx
   2ca0c:	c3                   	retq   

000000000002ca0d <.annobin_ev_check_stop.end>:
   2ca0d:	0f 1f 00             	nopl   (%rax)

000000000002ca10 <ev_embed_sweep>:
   2ca10:	f3 0f 1e fa          	endbr64 
   2ca14:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2ca18:	be 01 00 00 00       	mov    $0x1,%esi
   2ca1d:	e9 8e dc ff ff       	jmpq   2a6b0 <ev_run>

000000000002ca22 <.annobin_ev_embed_sweep.end>:
   2ca22:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2ca29:	00 00 00 00 
   2ca2d:	0f 1f 00             	nopl   (%rax)

000000000002ca30 <ev_fork_start>:
   2ca30:	f3 0f 1e fa          	endbr64 
   2ca34:	8b 06                	mov    (%rsi),%eax
   2ca36:	85 c0                	test   %eax,%eax
   2ca38:	75 66                	jne    2caa0 <ev_fork_start+0x70>
   2ca3a:	55                   	push   %rbp
   2ca3b:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   2ca40:	48 89 f5             	mov    %rsi,%rbp
   2ca43:	53                   	push   %rbx
   2ca44:	48 89 fb             	mov    %rdi,%rbx
   2ca47:	48 83 ec 08          	sub    $0x8,%rsp
   2ca4b:	8b 87 fc 02 00 00    	mov    0x2fc(%rdi),%eax
   2ca51:	8d 50 01             	lea    0x1(%rax),%edx
   2ca54:	89 97 fc 02 00 00    	mov    %edx,0x2fc(%rdi)
   2ca5a:	8b 46 08             	mov    0x8(%rsi),%eax
   2ca5d:	89 16                	mov    %edx,(%rsi)
   2ca5f:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2ca62:	0f 4c c1             	cmovl  %ecx,%eax
   2ca65:	b9 02 00 00 00       	mov    $0x2,%ecx
   2ca6a:	83 f8 02             	cmp    $0x2,%eax
   2ca6d:	0f 4f c1             	cmovg  %ecx,%eax
   2ca70:	89 46 08             	mov    %eax,0x8(%rsi)
   2ca73:	e8 28 bb ff ff       	callq  285a0 <ev_ref>
   2ca78:	48 63 8b fc 02 00 00 	movslq 0x2fc(%rbx),%rcx
   2ca7f:	3b 8b f8 02 00 00    	cmp    0x2f8(%rbx),%ecx
   2ca85:	0f 8f f8 5c fe ff    	jg     12783 <ev_fork_start.cold.40>
   2ca8b:	48 8b 83 f0 02 00 00 	mov    0x2f0(%rbx),%rax
   2ca92:	48 89 6c c8 f8       	mov    %rbp,-0x8(%rax,%rcx,8)
   2ca97:	48 83 c4 08          	add    $0x8,%rsp
   2ca9b:	5b                   	pop    %rbx
   2ca9c:	5d                   	pop    %rbp
   2ca9d:	c3                   	retq   
   2ca9e:	66 90                	xchg   %ax,%ax
   2caa0:	c3                   	retq   

000000000002caa1 <.annobin_ev_embed_start.start>:
   2caa1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2caa8:	00 00 00 00 
   2caac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002cab0 <ev_embed_start>:
   2cab0:	f3 0f 1e fa          	endbr64 
   2cab4:	41 55                	push   %r13
   2cab6:	41 54                	push   %r12
   2cab8:	55                   	push   %rbp
   2cab9:	53                   	push   %rbx
   2caba:	48 83 ec 08          	sub    $0x8,%rsp
   2cabe:	8b 16                	mov    (%rsi),%edx
   2cac0:	85 d2                	test   %edx,%edx
   2cac2:	0f 84 e6 5c fe ff    	je     127ae <ev_embed_start.cold.41>
   2cac8:	48 83 c4 08          	add    $0x8,%rsp
   2cacc:	5b                   	pop    %rbx
   2cacd:	5d                   	pop    %rbp
   2cace:	41 5c                	pop    %r12
   2cad0:	41 5d                	pop    %r13
   2cad2:	c3                   	retq   

000000000002cad3 <.annobin_ev_embed_start.end>:
   2cad3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2cada:	00 00 00 00 
   2cade:	66 90                	xchg   %ax,%ax

000000000002cae0 <ev_fork_stop>:
   2cae0:	f3 0f 1e fa          	endbr64 
   2cae4:	53                   	push   %rbx
   2cae5:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2cae9:	85 c0                	test   %eax,%eax
   2caeb:	74 24                	je     2cb11 <ev_fork_stop+0x31>
   2caed:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2caf0:	48 c1 e0 04          	shl    $0x4,%rax
   2caf4:	8d 53 02             	lea    0x2(%rbx),%edx
   2caf7:	48 63 d2             	movslq %edx,%rdx
   2cafa:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2caff:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2cb06:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2cb0a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2cb11:	8b 16                	mov    (%rsi),%edx
   2cb13:	85 d2                	test   %edx,%edx
   2cb15:	74 34                	je     2cb4b <ev_fork_stop+0x6b>
   2cb17:	8b 87 fc 02 00 00    	mov    0x2fc(%rdi),%eax
   2cb1d:	48 8b 8f f0 02 00 00 	mov    0x2f0(%rdi),%rcx
   2cb24:	48 89 f3             	mov    %rsi,%rbx
   2cb27:	48 63 f2             	movslq %edx,%rsi
   2cb2a:	83 e8 01             	sub    $0x1,%eax
   2cb2d:	89 87 fc 02 00 00    	mov    %eax,0x2fc(%rdi)
   2cb33:	48 98                	cltq   
   2cb35:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2cb39:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2cb3e:	89 10                	mov    %edx,(%rax)
   2cb40:	e8 6b ba ff ff       	callq  285b0 <ev_unref>
   2cb45:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2cb4b:	5b                   	pop    %rbx
   2cb4c:	c3                   	retq   

000000000002cb4d <.annobin_ev_embed_stop.start>:
   2cb4d:	0f 1f 00             	nopl   (%rax)

000000000002cb50 <ev_embed_stop>:
   2cb50:	f3 0f 1e fa          	endbr64 
   2cb54:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2cb58:	85 c0                	test   %eax,%eax
   2cb5a:	74 24                	je     2cb80 <ev_embed_stop+0x30>
   2cb5c:	8b 4e 08             	mov    0x8(%rsi),%ecx
   2cb5f:	48 c1 e0 04          	shl    $0x4,%rax
   2cb63:	8d 51 02             	lea    0x2(%rcx),%edx
   2cb66:	48 63 d2             	movslq %edx,%rdx
   2cb69:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2cb6e:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2cb75:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2cb79:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2cb80:	8b 06                	mov    (%rsi),%eax
   2cb82:	85 c0                	test   %eax,%eax
   2cb84:	74 4a                	je     2cbd0 <ev_embed_stop+0x80>
   2cb86:	55                   	push   %rbp
   2cb87:	48 89 fd             	mov    %rdi,%rbp
   2cb8a:	53                   	push   %rbx
   2cb8b:	48 89 f3             	mov    %rsi,%rbx
   2cb8e:	48 8d 76 28          	lea    0x28(%rsi),%rsi
   2cb92:	48 83 ec 08          	sub    $0x8,%rsp
   2cb96:	e8 15 be ff ff       	callq  289b0 <ev_io_stop>
   2cb9b:	48 8d 73 58          	lea    0x58(%rbx),%rsi
   2cb9f:	48 89 ef             	mov    %rbp,%rdi
   2cba2:	e8 09 fd ff ff       	callq  2c8b0 <ev_prepare_stop>
   2cba7:	48 8d b3 28 01 00 00 	lea    0x128(%rbx),%rsi
   2cbae:	48 89 ef             	mov    %rbp,%rdi
   2cbb1:	e8 2a ff ff ff       	callq  2cae0 <ev_fork_stop>
   2cbb6:	48 89 ef             	mov    %rbp,%rdi
   2cbb9:	e8 f2 b9 ff ff       	callq  285b0 <ev_unref>
   2cbbe:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2cbc4:	48 83 c4 08          	add    $0x8,%rsp
   2cbc8:	5b                   	pop    %rbx
   2cbc9:	5d                   	pop    %rbp
   2cbca:	c3                   	retq   
   2cbcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2cbd0:	c3                   	retq   

000000000002cbd1 <.annobin_embed_fork_cb.start>:
   2cbd1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2cbd8:	00 00 00 00 
   2cbdc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002cbe0 <embed_fork_cb>:
   2cbe0:	f3 0f 1e fa          	endbr64 
   2cbe4:	41 54                	push   %r12
   2cbe6:	49 89 f4             	mov    %rsi,%r12
   2cbe9:	55                   	push   %rbp
   2cbea:	48 8d ae d8 fe ff ff 	lea    -0x128(%rsi),%rbp
   2cbf1:	53                   	push   %rbx
   2cbf2:	48 89 ee             	mov    %rbp,%rsi
   2cbf5:	48 89 fb             	mov    %rdi,%rbx
   2cbf8:	e8 53 ff ff ff       	callq  2cb50 <ev_embed_stop>
   2cbfd:	4d 8b a4 24 f8 fe ff 	mov    -0x108(%r12),%r12
   2cc04:	ff 
   2cc05:	4c 89 e7             	mov    %r12,%rdi
   2cc08:	e8 43 b9 ff ff       	callq  28550 <ev_loop_fork>
   2cc0d:	4c 89 e7             	mov    %r12,%rdi
   2cc10:	be 01 00 00 00       	mov    $0x1,%esi
   2cc15:	e8 96 da ff ff       	callq  2a6b0 <ev_run>
   2cc1a:	48 89 ee             	mov    %rbp,%rsi
   2cc1d:	48 89 df             	mov    %rbx,%rdi
   2cc20:	5b                   	pop    %rbx
   2cc21:	5d                   	pop    %rbp
   2cc22:	41 5c                	pop    %r12
   2cc24:	e9 87 fe ff ff       	jmpq   2cab0 <ev_embed_start>

000000000002cc29 <.annobin_embed_fork_cb.end>:
   2cc29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002cc30 <ev_cleanup_start>:
   2cc30:	f3 0f 1e fa          	endbr64 
   2cc34:	8b 06                	mov    (%rsi),%eax
   2cc36:	85 c0                	test   %eax,%eax
   2cc38:	75 6e                	jne    2cca8 <ev_cleanup_start+0x78>
   2cc3a:	55                   	push   %rbp
   2cc3b:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
   2cc40:	48 89 f5             	mov    %rsi,%rbp
   2cc43:	53                   	push   %rbx
   2cc44:	48 89 fb             	mov    %rdi,%rbx
   2cc47:	48 83 ec 08          	sub    $0x8,%rsp
   2cc4b:	8b 87 0c 03 00 00    	mov    0x30c(%rdi),%eax
   2cc51:	8d 50 01             	lea    0x1(%rax),%edx
   2cc54:	89 97 0c 03 00 00    	mov    %edx,0x30c(%rdi)
   2cc5a:	8b 46 08             	mov    0x8(%rsi),%eax
   2cc5d:	89 16                	mov    %edx,(%rsi)
   2cc5f:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2cc62:	0f 4c c1             	cmovl  %ecx,%eax
   2cc65:	b9 02 00 00 00       	mov    $0x2,%ecx
   2cc6a:	83 f8 02             	cmp    $0x2,%eax
   2cc6d:	0f 4f c1             	cmovg  %ecx,%eax
   2cc70:	89 46 08             	mov    %eax,0x8(%rsi)
   2cc73:	e8 28 b9 ff ff       	callq  285a0 <ev_ref>
   2cc78:	48 63 8b 0c 03 00 00 	movslq 0x30c(%rbx),%rcx
   2cc7f:	3b 8b 08 03 00 00    	cmp    0x308(%rbx),%ecx
   2cc85:	0f 8f 22 5c fe ff    	jg     128ad <ev_cleanup_start.cold.42>
   2cc8b:	48 8b 83 00 03 00 00 	mov    0x300(%rbx),%rax
   2cc92:	48 89 df             	mov    %rbx,%rdi
   2cc95:	48 89 6c c8 f8       	mov    %rbp,-0x8(%rax,%rcx,8)
   2cc9a:	48 83 c4 08          	add    $0x8,%rsp
   2cc9e:	5b                   	pop    %rbx
   2cc9f:	5d                   	pop    %rbp
   2cca0:	e9 0b b9 ff ff       	jmpq   285b0 <ev_unref>
   2cca5:	0f 1f 00             	nopl   (%rax)
   2cca8:	c3                   	retq   

000000000002cca9 <.annobin_ev_cleanup_start.end>:
   2cca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002ccb0 <ev_cleanup_stop>:
   2ccb0:	f3 0f 1e fa          	endbr64 
   2ccb4:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2ccb8:	85 c0                	test   %eax,%eax
   2ccba:	74 24                	je     2cce0 <ev_cleanup_stop+0x30>
   2ccbc:	8b 4e 08             	mov    0x8(%rsi),%ecx
   2ccbf:	48 c1 e0 04          	shl    $0x4,%rax
   2ccc3:	8d 51 02             	lea    0x2(%rcx),%edx
   2ccc6:	48 63 d2             	movslq %edx,%rdx
   2ccc9:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2ccce:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2ccd5:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2ccd9:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2cce0:	8b 06                	mov    (%rsi),%eax
   2cce2:	85 c0                	test   %eax,%eax
   2cce4:	74 52                	je     2cd38 <ev_cleanup_stop+0x88>
   2cce6:	55                   	push   %rbp
   2cce7:	48 89 f5             	mov    %rsi,%rbp
   2ccea:	53                   	push   %rbx
   2cceb:	48 89 fb             	mov    %rdi,%rbx
   2ccee:	48 83 ec 08          	sub    $0x8,%rsp
   2ccf2:	e8 a9 b8 ff ff       	callq  285a0 <ev_ref>
   2ccf7:	8b 83 0c 03 00 00    	mov    0x30c(%rbx),%eax
   2ccfd:	48 63 75 00          	movslq 0x0(%rbp),%rsi
   2cd01:	48 89 df             	mov    %rbx,%rdi
   2cd04:	48 8b 8b 00 03 00 00 	mov    0x300(%rbx),%rcx
   2cd0b:	83 e8 01             	sub    $0x1,%eax
   2cd0e:	89 83 0c 03 00 00    	mov    %eax,0x30c(%rbx)
   2cd14:	48 98                	cltq   
   2cd16:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2cd1a:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2cd1f:	89 30                	mov    %esi,(%rax)
   2cd21:	e8 8a b8 ff ff       	callq  285b0 <ev_unref>
   2cd26:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   2cd2d:	48 83 c4 08          	add    $0x8,%rsp
   2cd31:	5b                   	pop    %rbx
   2cd32:	5d                   	pop    %rbp
   2cd33:	c3                   	retq   
   2cd34:	0f 1f 40 00          	nopl   0x0(%rax)
   2cd38:	c3                   	retq   

000000000002cd39 <.annobin_ev_async_start.start>:
   2cd39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002cd40 <ev_async_start>:
   2cd40:	f3 0f 1e fa          	endbr64 
   2cd44:	55                   	push   %rbp
   2cd45:	53                   	push   %rbx
   2cd46:	48 83 ec 08          	sub    $0x8,%rsp
   2cd4a:	8b 06                	mov    (%rsi),%eax
   2cd4c:	85 c0                	test   %eax,%eax
   2cd4e:	0f 84 84 5b fe ff    	je     128d8 <ev_async_start.cold.43>
   2cd54:	48 83 c4 08          	add    $0x8,%rsp
   2cd58:	5b                   	pop    %rbx
   2cd59:	5d                   	pop    %rbp
   2cd5a:	c3                   	retq   

000000000002cd5b <.annobin_ev_async_start.end>:
   2cd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002cd60 <ev_async_stop>:
   2cd60:	f3 0f 1e fa          	endbr64 
   2cd64:	53                   	push   %rbx
   2cd65:	48 63 46 04          	movslq 0x4(%rsi),%rax
   2cd69:	85 c0                	test   %eax,%eax
   2cd6b:	74 24                	je     2cd91 <ev_async_stop+0x31>
   2cd6d:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2cd70:	48 c1 e0 04          	shl    $0x4,%rax
   2cd74:	8d 53 02             	lea    0x2(%rbx),%edx
   2cd77:	48 63 d2             	movslq %edx,%rdx
   2cd7a:	48 03 44 d7 30       	add    0x30(%rdi,%rdx,8),%rax
   2cd7f:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   2cd86:	48 89 50 f0          	mov    %rdx,-0x10(%rax)
   2cd8a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
   2cd91:	8b 16                	mov    (%rsi),%edx
   2cd93:	85 d2                	test   %edx,%edx
   2cd95:	74 34                	je     2cdcb <ev_async_stop+0x6b>
   2cd97:	8b 87 24 03 00 00    	mov    0x324(%rdi),%eax
   2cd9d:	48 8b 8f 18 03 00 00 	mov    0x318(%rdi),%rcx
   2cda4:	48 89 f3             	mov    %rsi,%rbx
   2cda7:	48 63 f2             	movslq %edx,%rsi
   2cdaa:	83 e8 01             	sub    $0x1,%eax
   2cdad:	89 87 24 03 00 00    	mov    %eax,0x324(%rdi)
   2cdb3:	48 98                	cltq   
   2cdb5:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
   2cdb9:	48 89 44 f1 f8       	mov    %rax,-0x8(%rcx,%rsi,8)
   2cdbe:	89 10                	mov    %edx,(%rax)
   2cdc0:	e8 eb b7 ff ff       	callq  285b0 <ev_unref>
   2cdc5:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   2cdcb:	5b                   	pop    %rbx
   2cdcc:	c3                   	retq   

000000000002cdcd <.annobin_ev_async_send.start>:
   2cdcd:	0f 1f 00             	nopl   (%rax)

000000000002cdd0 <ev_async_send>:
   2cdd0:	f3 0f 1e fa          	endbr64 
   2cdd4:	55                   	push   %rbp
   2cdd5:	53                   	push   %rbx
   2cdd6:	48 83 ec 28          	sub    $0x28,%rsp
   2cdda:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2cde1:	00 00 
   2cde3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2cde8:	31 c0                	xor    %eax,%eax
   2cdea:	c7 46 20 01 00 00 00 	movl   $0x1,0x20(%rsi)
   2cdf1:	0f ae f0             	mfence 
   2cdf4:	8b 87 10 03 00 00    	mov    0x310(%rdi),%eax
   2cdfa:	85 c0                	test   %eax,%eax
   2cdfc:	74 22                	je     2ce20 <ev_async_send+0x50>
   2cdfe:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2ce03:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   2ce0a:	00 00 
   2ce0c:	0f 85 a3 00 00 00    	jne    2ceb5 <ev_async_send+0xe5>
   2ce12:	48 83 c4 28          	add    $0x28,%rsp
   2ce16:	5b                   	pop    %rbx
   2ce17:	5d                   	pop    %rbp
   2ce18:	c3                   	retq   
   2ce19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2ce20:	c7 87 10 03 00 00 01 	movl   $0x1,0x310(%rdi)
   2ce27:	00 00 00 
   2ce2a:	c7 87 2c 01 00 00 01 	movl   $0x1,0x12c(%rdi)
   2ce31:	00 00 00 
   2ce34:	0f ae f0             	mfence 
   2ce37:	8b 87 28 01 00 00    	mov    0x128(%rdi),%eax
   2ce3d:	85 c0                	test   %eax,%eax
   2ce3f:	74 bd                	je     2cdfe <ev_async_send+0x2e>
   2ce41:	c7 87 2c 01 00 00 00 	movl   $0x0,0x12c(%rdi)
   2ce48:	00 00 00 
   2ce4b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2ce50:	e8 bb 2c fe ff       	callq  fb10 <__errno_location@plt>
   2ce55:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2ce5a:	48 89 c3             	mov    %rax,%rbx
   2ce5d:	8b 28                	mov    (%rax),%ebp
   2ce5f:	8b 87 ec 00 00 00    	mov    0xec(%rdi),%eax
   2ce65:	85 c0                	test   %eax,%eax
   2ce67:	78 27                	js     2ce90 <ev_async_send+0xc0>
   2ce69:	48 8d b7 f0 00 00 00 	lea    0xf0(%rdi),%rsi
   2ce70:	8b bf f0 00 00 00    	mov    0xf0(%rdi),%edi
   2ce76:	ba 01 00 00 00       	mov    $0x1,%edx
   2ce7b:	e8 80 2e fe ff       	callq  fd00 <write@plt>
   2ce80:	89 2b                	mov    %ebp,(%rbx)
   2ce82:	e9 77 ff ff ff       	jmpq   2cdfe <ev_async_send+0x2e>
   2ce87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2ce8e:	00 00 
   2ce90:	8b bf f0 00 00 00    	mov    0xf0(%rdi),%edi
   2ce96:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2ce9b:	ba 08 00 00 00       	mov    $0x8,%edx
   2cea0:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   2cea7:	00 00 
   2cea9:	e8 52 2e fe ff       	callq  fd00 <write@plt>
   2ceae:	89 2b                	mov    %ebp,(%rbx)
   2ceb0:	e9 49 ff ff ff       	jmpq   2cdfe <ev_async_send+0x2e>
   2ceb5:	e8 96 2f fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002ceba <.annobin_ev_async_send.end>:
   2ceba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002cec0 <ev_once>:
   2cec0:	f3 0f 1e fa          	endbr64 
   2cec4:	41 57                	push   %r15
   2cec6:	49 89 cf             	mov    %rcx,%r15
   2cec9:	41 56                	push   %r14
   2cecb:	4d 89 c6             	mov    %r8,%r14
   2cece:	41 55                	push   %r13
   2ced0:	49 89 fd             	mov    %rdi,%r13
   2ced3:	31 ff                	xor    %edi,%edi
   2ced5:	41 54                	push   %r12
   2ced7:	41 89 d4             	mov    %edx,%r12d
   2ceda:	55                   	push   %rbp
   2cedb:	89 f5                	mov    %esi,%ebp
   2cedd:	be 70 00 00 00       	mov    $0x70,%esi
   2cee2:	53                   	push   %rbx
   2cee3:	48 83 ec 18          	sub    $0x18,%rsp
   2cee7:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   2ceed:	ff 15 a5 94 22 00    	callq  *0x2294a5(%rip)        # 256398 <alloc>
   2cef3:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   2cef9:	48 85 c0             	test   %rax,%rax
   2cefc:	0f 84 a5 00 00 00    	je     2cfa7 <ev_once+0xe7>
   2cf02:	48 89 c3             	mov    %rax,%rbx
   2cf05:	4c 89 78 60          	mov    %r15,0x60(%rax)
   2cf09:	4c 89 70 68          	mov    %r14,0x68(%rax)
   2cf0d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2cf14:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   2cf1b:	48 8d 05 0e cd ff ff 	lea    -0x32f2(%rip),%rax        # 29c30 <once_cb_io>
   2cf22:	48 89 43 18          	mov    %rax,0x18(%rbx)
   2cf26:	85 ed                	test   %ebp,%ebp
   2cf28:	78 22                	js     2cf4c <ev_once+0x8c>
   2cf2a:	41 80 cc 80          	or     $0x80,%r12b
   2cf2e:	89 6b 28             	mov    %ebp,0x28(%rbx)
   2cf31:	48 89 de             	mov    %rbx,%rsi
   2cf34:	4c 89 ef             	mov    %r13,%rdi
   2cf37:	44 89 63 2c          	mov    %r12d,0x2c(%rbx)
   2cf3b:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   2cf41:	e8 1a b9 ff ff       	callq  28860 <ev_io_start>
   2cf46:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   2cf4c:	66 0f 2f 05 24 62 01 	comisd 0x16224(%rip),%xmm0        # 43178 <__PRETTY_FUNCTION__.11024+0x38>
   2cf53:	00 
   2cf54:	48 8d 05 a5 cc ff ff 	lea    -0x335b(%rip),%rax        # 29c00 <once_cb_to>
   2cf5b:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
   2cf62:	00 
   2cf63:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   2cf6a:	48 89 43 48          	mov    %rax,0x48(%rbx)
   2cf6e:	73 10                	jae    2cf80 <ev_once+0xc0>
   2cf70:	48 83 c4 18          	add    $0x18,%rsp
   2cf74:	5b                   	pop    %rbx
   2cf75:	5d                   	pop    %rbp
   2cf76:	41 5c                	pop    %r12
   2cf78:	41 5d                	pop    %r13
   2cf7a:	41 5e                	pop    %r14
   2cf7c:	41 5f                	pop    %r15
   2cf7e:	c3                   	retq   
   2cf7f:	90                   	nop
   2cf80:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
   2cf87:	00 
   2cf88:	48 8d 73 30          	lea    0x30(%rbx),%rsi
   2cf8c:	4c 89 ef             	mov    %r13,%rdi
   2cf8f:	f2 0f 11 43 50       	movsd  %xmm0,0x50(%rbx)
   2cf94:	48 83 c4 18          	add    $0x18,%rsp
   2cf98:	5b                   	pop    %rbx
   2cf99:	5d                   	pop    %rbp
   2cf9a:	41 5c                	pop    %r12
   2cf9c:	41 5d                	pop    %r13
   2cf9e:	41 5e                	pop    %r14
   2cfa0:	41 5f                	pop    %r15
   2cfa2:	e9 c9 c7 ff ff       	jmpq   29770 <ev_timer_start>
   2cfa7:	bf 70 00 00 00       	mov    $0x70,%edi
   2cfac:	e8 3f a6 ff ff       	callq  275f0 <ev_realloc.part.5>

000000000002cfb1 <.annobin_ev.c_end>:
   2cfb1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2cfb8:	00 00 00 
   2cfbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002cfc0 <yuarel_parse>:
   2cfc0:	f3 0f 1e fa          	endbr64 
   2cfc4:	48 85 ff             	test   %rdi,%rdi
   2cfc7:	0f 84 1b 02 00 00    	je     2d1e8 <yuarel_parse+0x228>
   2cfcd:	48 85 f6             	test   %rsi,%rsi
   2cfd0:	0f 84 12 02 00 00    	je     2d1e8 <yuarel_parse+0x228>
   2cfd6:	41 54                	push   %r12
  return __builtin___memset_chk (__dest, __ch, __len,
   2cfd8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2cfdc:	55                   	push   %rbp
   2cfdd:	48 89 f5             	mov    %rsi,%rbp
   2cfe0:	be 23 00 00 00       	mov    $0x23,%esi
   2cfe5:	53                   	push   %rbx
   2cfe6:	48 89 fb             	mov    %rdi,%rbx
   2cfe9:	0f 11 07             	movups %xmm0,(%rdi)
   2cfec:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
   2cff0:	0f 11 47 20          	movups %xmm0,0x20(%rdi)
   2cff4:	0f 11 47 30          	movups %xmm0,0x30(%rdi)
   2cff8:	48 89 ef             	mov    %rbp,%rdi
   2cffb:	e8 b0 2e fe ff       	callq  feb0 <strchr@plt>
   2d000:	48 85 c0             	test   %rax,%rax
   2d003:	74 07                	je     2d00c <yuarel_parse+0x4c>
   2d005:	c6 00 00             	movb   $0x0,(%rax)
   2d008:	48 83 c0 01          	add    $0x1,%rax
   2d00c:	48 89 43 38          	mov    %rax,0x38(%rbx)
   2d010:	be 3f 00 00 00       	mov    $0x3f,%esi
   2d015:	48 89 ef             	mov    %rbp,%rdi
   2d018:	e8 93 2e fe ff       	callq  feb0 <strchr@plt>
   2d01d:	48 85 c0             	test   %rax,%rax
   2d020:	74 07                	je     2d029 <yuarel_parse+0x69>
   2d022:	c6 00 00             	movb   $0x0,(%rax)
   2d025:	48 83 c0 01          	add    $0x1,%rax
   2d029:	48 89 43 30          	mov    %rax,0x30(%rbx)
   2d02d:	80 7d 00 2f          	cmpb   $0x2f,0x0(%rbp)
   2d031:	75 2d                	jne    2d060 <yuarel_parse+0xa0>
   2d033:	be 2f 00 00 00       	mov    $0x2f,%esi
   2d038:	48 89 ef             	mov    %rbp,%rdi
   2d03b:	e8 70 2e fe ff       	callq  feb0 <strchr@plt>
   2d040:	48 85 c0             	test   %rax,%rax
   2d043:	74 07                	je     2d04c <yuarel_parse+0x8c>
   2d045:	c6 00 00             	movb   $0x0,(%rax)
   2d048:	48 83 c0 01          	add    $0x1,%rax
   2d04c:	48 89 43 28          	mov    %rax,0x28(%rbx)
   2d050:	31 c0                	xor    %eax,%eax
   2d052:	5b                   	pop    %rbx
   2d053:	5d                   	pop    %rbp
   2d054:	41 5c                	pop    %r12
   2d056:	c3                   	retq   
   2d057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d05e:	00 00 
   2d060:	48 89 2b             	mov    %rbp,(%rbx)
   2d063:	be 3a 00 00 00       	mov    $0x3a,%esi
   2d068:	48 89 ef             	mov    %rbp,%rdi
   2d06b:	e8 40 2e fe ff       	callq  feb0 <strchr@plt>
   2d070:	48 85 c0             	test   %rax,%rax
   2d073:	0f 84 37 01 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d079:	48 39 c5             	cmp    %rax,%rbp
   2d07c:	0f 84 2e 01 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d082:	80 78 01 2f          	cmpb   $0x2f,0x1(%rax)
   2d086:	0f 85 24 01 00 00    	jne    2d1b0 <yuarel_parse+0x1f0>
   2d08c:	80 78 02 2f          	cmpb   $0x2f,0x2(%rax)
   2d090:	0f 85 1a 01 00 00    	jne    2d1b0 <yuarel_parse+0x1f0>
   2d096:	48 89 c5             	mov    %rax,%rbp
   2d099:	c6 00 00             	movb   $0x0,(%rax)
   2d09c:	48 83 c5 03          	add    $0x3,%rbp
   2d0a0:	0f 84 0a 01 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d0a6:	80 78 03 00          	cmpb   $0x0,0x3(%rax)
   2d0aa:	0f 84 00 01 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d0b0:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   2d0b4:	be 2f 00 00 00       	mov    $0x2f,%esi
   2d0b9:	48 89 ef             	mov    %rbp,%rdi
   2d0bc:	e8 ef 2d fe ff       	callq  feb0 <strchr@plt>
   2d0c1:	48 85 c0             	test   %rax,%rax
   2d0c4:	74 0b                	je     2d0d1 <yuarel_parse+0x111>
   2d0c6:	c6 00 00             	movb   $0x0,(%rax)
   2d0c9:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   2d0cd:	48 83 c0 01          	add    $0x1,%rax
   2d0d1:	48 89 43 28          	mov    %rax,0x28(%rbx)
   2d0d5:	be 40 00 00 00       	mov    $0x40,%esi
   2d0da:	48 89 ef             	mov    %rbp,%rdi
   2d0dd:	e8 ce 2d fe ff       	callq  feb0 <strchr@plt>
   2d0e2:	48 85 c0             	test   %rax,%rax
   2d0e5:	74 3a                	je     2d121 <yuarel_parse+0x161>
   2d0e7:	48 39 c5             	cmp    %rax,%rbp
   2d0ea:	0f 84 c0 00 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d0f0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d0f4:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
   2d0f8:	be 3a 00 00 00       	mov    $0x3a,%esi
   2d0fd:	48 89 53 18          	mov    %rdx,0x18(%rbx)
   2d101:	c6 00 00             	movb   $0x0,(%rax)
   2d104:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   2d108:	e8 a3 2d fe ff       	callq  feb0 <strchr@plt>
   2d10d:	48 85 c0             	test   %rax,%rax
   2d110:	74 0b                	je     2d11d <yuarel_parse+0x15d>
   2d112:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d116:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   2d11a:	c6 00 00             	movb   $0x0,(%rax)
   2d11d:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   2d121:	44 0f b6 65 00       	movzbl 0x0(%rbp),%r12d
   2d126:	45 84 e4             	test   %r12b,%r12b
   2d129:	0f 84 81 00 00 00    	je     2d1b0 <yuarel_parse+0x1f0>
   2d12f:	be 3a 00 00 00       	mov    $0x3a,%esi
   2d134:	48 89 ef             	mov    %rbp,%rdi
   2d137:	e8 74 2d fe ff       	callq  feb0 <strchr@plt>
   2d13c:	48 85 c0             	test   %rax,%rax
   2d13f:	74 5d                	je     2d19e <yuarel_parse+0x1de>
   2d141:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   2d145:	48 85 d2             	test   %rdx,%rdx
   2d148:	74 05                	je     2d14f <yuarel_parse+0x18f>
   2d14a:	48 39 c2             	cmp    %rax,%rdx
   2d14d:	76 4f                	jbe    2d19e <yuarel_parse+0x1de>
   2d14f:	0f be 50 01          	movsbl 0x1(%rax),%edx
   2d153:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2d157:	c6 00 00             	movb   $0x0,(%rax)
   2d15a:	84 d2                	test   %dl,%dl
   2d15c:	74 52                	je     2d1b0 <yuarel_parse+0x1f0>
   2d15e:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
   2d162:	48 85 c9             	test   %rcx,%rcx
   2d165:	74 59                	je     2d1c0 <yuarel_parse+0x200>
   2d167:	48 29 f9             	sub    %rdi,%rcx
   2d16a:	48 89 ce             	mov    %rcx,%rsi
   2d16d:	48 83 f9 01          	cmp    $0x1,%rcx
   2d171:	74 6d                	je     2d1e0 <yuarel_parse+0x220>
   2d173:	48 8d 48 02          	lea    0x2(%rax),%rcx
   2d177:	48 01 f0             	add    %rsi,%rax
   2d17a:	31 f6                	xor    %esi,%esi
   2d17c:	eb 09                	jmp    2d187 <yuarel_parse+0x1c7>
   2d17e:	66 90                	xchg   %ax,%ax
   2d180:	0f be 11             	movsbl (%rcx),%edx
   2d183:	48 83 c1 01          	add    $0x1,%rcx
   2d187:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
   2d18a:	8d 74 72 d0          	lea    -0x30(%rdx,%rsi,2),%esi
   2d18e:	48 39 c1             	cmp    %rax,%rcx
   2d191:	75 ed                	jne    2d180 <yuarel_parse+0x1c0>
   2d193:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2d197:	89 73 20             	mov    %esi,0x20(%rbx)
   2d19a:	44 0f b6 20          	movzbl (%rax),%r12d
   2d19e:	31 c0                	xor    %eax,%eax
   2d1a0:	45 84 e4             	test   %r12b,%r12b
   2d1a3:	5b                   	pop    %rbx
   2d1a4:	5d                   	pop    %rbp
   2d1a5:	0f 94 c0             	sete   %al
   2d1a8:	41 5c                	pop    %r12
   2d1aa:	f7 d8                	neg    %eax
   2d1ac:	c3                   	retq   
   2d1ad:	0f 1f 00             	nopl   (%rax)
   2d1b0:	5b                   	pop    %rbx
   2d1b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d1b6:	5d                   	pop    %rbp
   2d1b7:	41 5c                	pop    %r12
   2d1b9:	c3                   	retq   
   2d1ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2d1c0:	ba 0a 00 00 00       	mov    $0xa,%edx
   2d1c5:	31 f6                	xor    %esi,%esi
   2d1c7:	e8 14 31 fe ff       	callq  102e0 <strtol@plt>
   2d1cc:	89 43 20             	mov    %eax,0x20(%rbx)
   2d1cf:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2d1d3:	44 0f b6 20          	movzbl (%rax),%r12d
   2d1d7:	eb c5                	jmp    2d19e <yuarel_parse+0x1de>
   2d1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2d1e0:	31 f6                	xor    %esi,%esi
   2d1e2:	eb af                	jmp    2d193 <yuarel_parse+0x1d3>
   2d1e4:	0f 1f 40 00          	nopl   0x0(%rax)
   2d1e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d1ed:	c3                   	retq   

000000000002d1ee <.annobin_yuarel_parse.end>:
   2d1ee:	66 90                	xchg   %ax,%ax

000000000002d1f0 <yuarel_split_path>:
   2d1f0:	f3 0f 1e fa          	endbr64 
   2d1f4:	41 54                	push   %r12
   2d1f6:	55                   	push   %rbp
   2d1f7:	53                   	push   %rbx
   2d1f8:	48 85 ff             	test   %rdi,%rdi
   2d1fb:	74 5e                	je     2d25b <yuarel_split_path+0x6b>
   2d1fd:	89 d5                	mov    %edx,%ebp
   2d1ff:	0f b6 17             	movzbl (%rdi),%edx
   2d202:	84 d2                	test   %dl,%dl
   2d204:	74 55                	je     2d25b <yuarel_split_path+0x6b>
   2d206:	48 89 f3             	mov    %rsi,%rbx
   2d209:	31 c0                	xor    %eax,%eax
   2d20b:	eb 30                	jmp    2d23d <yuarel_split_path+0x4d>
   2d20d:	0f 1f 00             	nopl   (%rax)
   2d210:	84 d2                	test   %dl,%dl
   2d212:	74 3c                	je     2d250 <yuarel_split_path+0x60>
   2d214:	48 89 3c c3          	mov    %rdi,(%rbx,%rax,8)
   2d218:	be 2f 00 00 00       	mov    $0x2f,%esi
   2d21d:	44 8d 60 01          	lea    0x1(%rax),%r12d
   2d221:	e8 8a 2c fe ff       	callq  feb0 <strchr@plt>
   2d226:	48 85 c0             	test   %rax,%rax
   2d229:	74 28                	je     2d253 <yuarel_split_path+0x63>
   2d22b:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2d22f:	c6 00 00             	movb   $0x0,(%rax)
   2d232:	41 39 ec             	cmp    %ebp,%r12d
   2d235:	7d 1c                	jge    2d253 <yuarel_split_path+0x63>
   2d237:	49 63 c4             	movslq %r12d,%rax
   2d23a:	0f b6 17             	movzbl (%rdi),%edx
   2d23d:	80 fa 2f             	cmp    $0x2f,%dl
   2d240:	75 ce                	jne    2d210 <yuarel_split_path+0x20>
   2d242:	48 83 c7 01          	add    $0x1,%rdi
   2d246:	eb f2                	jmp    2d23a <yuarel_split_path+0x4a>
   2d248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2d24f:	00 
   2d250:	41 89 c4             	mov    %eax,%r12d
   2d253:	44 89 e0             	mov    %r12d,%eax
   2d256:	5b                   	pop    %rbx
   2d257:	5d                   	pop    %rbp
   2d258:	41 5c                	pop    %r12
   2d25a:	c3                   	retq   
   2d25b:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   2d261:	eb f0                	jmp    2d253 <yuarel_split_path+0x63>

000000000002d263 <.annobin_yuarel_parse_query.start>:
   2d263:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2d26a:	00 00 00 00 
   2d26e:	66 90                	xchg   %ax,%ax

000000000002d270 <yuarel_parse_query>:
   2d270:	f3 0f 1e fa          	endbr64 
   2d274:	41 57                	push   %r15
   2d276:	41 56                	push   %r14
   2d278:	41 55                	push   %r13
   2d27a:	41 54                	push   %r12
   2d27c:	55                   	push   %rbp
   2d27d:	53                   	push   %rbx
   2d27e:	48 83 ec 18          	sub    $0x18,%rsp
   2d282:	48 85 ff             	test   %rdi,%rdi
   2d285:	0f 84 fe 00 00 00    	je     2d389 <yuarel_parse_query+0x119>
   2d28b:	80 3f 00             	cmpb   $0x0,(%rdi)
   2d28e:	48 89 fb             	mov    %rdi,%rbx
   2d291:	0f 84 f2 00 00 00    	je     2d389 <yuarel_parse_query+0x119>
   2d297:	49 89 d6             	mov    %rdx,%r14
   2d29a:	41 89 cd             	mov    %ecx,%r13d
   2d29d:	49 89 3e             	mov    %rdi,(%r14)
   2d2a0:	83 f9 01             	cmp    $0x1,%ecx
   2d2a3:	0f 8e d9 00 00 00    	jle    2d382 <yuarel_parse_query+0x112>
   2d2a9:	44 0f be e6          	movsbl %sil,%r12d
   2d2ad:	49 89 d7             	mov    %rdx,%r15
   2d2b0:	bd 01 00 00 00       	mov    $0x1,%ebp
   2d2b5:	eb 20                	jmp    2d2d7 <yuarel_parse_query+0x67>
   2d2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d2be:	00 00 
   2d2c0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2d2c4:	83 c5 01             	add    $0x1,%ebp
   2d2c7:	49 83 c7 10          	add    $0x10,%r15
   2d2cb:	49 89 57 f8          	mov    %rdx,-0x8(%r15)
   2d2cf:	c6 00 00             	movb   $0x0,(%rax)
   2d2d2:	41 39 ed             	cmp    %ebp,%r13d
   2d2d5:	74 4c                	je     2d323 <yuarel_parse_query+0xb3>
   2d2d7:	44 89 e6             	mov    %r12d,%esi
   2d2da:	48 89 df             	mov    %rbx,%rdi
   2d2dd:	e8 ce 2b fe ff       	callq  feb0 <strchr@plt>
   2d2e2:	4c 89 fa             	mov    %r15,%rdx
   2d2e5:	48 85 c0             	test   %rax,%rax
   2d2e8:	74 4e                	je     2d338 <yuarel_parse_query+0xc8>
   2d2ea:	48 8d 58 01          	lea    0x1(%rax),%rbx
   2d2ee:	c6 00 00             	movb   $0x0,(%rax)
   2d2f1:	49 8b 3f             	mov    (%r15),%rdi
   2d2f4:	be 3d 00 00 00       	mov    $0x3d,%esi
   2d2f9:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   2d2fd:	49 c7 47 18 00 00 00 	movq   $0x0,0x18(%r15)
   2d304:	00 
   2d305:	e8 a6 2b fe ff       	callq  feb0 <strchr@plt>
   2d30a:	48 85 c0             	test   %rax,%rax
   2d30d:	75 b1                	jne    2d2c0 <yuarel_parse_query+0x50>
   2d30f:	83 c5 01             	add    $0x1,%ebp
   2d312:	49 c7 47 08 00 00 00 	movq   $0x0,0x8(%r15)
   2d319:	00 
   2d31a:	49 83 c7 10          	add    $0x10,%r15
   2d31e:	41 39 ed             	cmp    %ebp,%r13d
   2d321:	75 b4                	jne    2d2d7 <yuarel_parse_query+0x67>
   2d323:	48 63 c5             	movslq %ebp,%rax
   2d326:	48 c1 e0 04          	shl    $0x4,%rax
   2d32a:	49 8d 54 06 f0       	lea    -0x10(%r14,%rax,1),%rdx
   2d32f:	48 8b 1a             	mov    (%rdx),%rbx
   2d332:	eb 07                	jmp    2d33b <yuarel_parse_query+0xcb>
   2d334:	0f 1f 40 00          	nopl   0x0(%rax)
   2d338:	49 8b 1f             	mov    (%r15),%rbx
   2d33b:	be 3d 00 00 00       	mov    $0x3d,%esi
   2d340:	48 89 df             	mov    %rbx,%rdi
   2d343:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   2d348:	e8 63 2b fe ff       	callq  feb0 <strchr@plt>
   2d34d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2d352:	48 85 c0             	test   %rax,%rax
   2d355:	74 21                	je     2d378 <yuarel_parse_query+0x108>
   2d357:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2d35b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2d35f:	c6 00 00             	movb   $0x0,(%rax)
   2d362:	48 83 c4 18          	add    $0x18,%rsp
   2d366:	89 e8                	mov    %ebp,%eax
   2d368:	5b                   	pop    %rbx
   2d369:	5d                   	pop    %rbp
   2d36a:	41 5c                	pop    %r12
   2d36c:	41 5d                	pop    %r13
   2d36e:	41 5e                	pop    %r14
   2d370:	41 5f                	pop    %r15
   2d372:	c3                   	retq   
   2d373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2d378:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
   2d37f:	00 
   2d380:	eb e0                	jmp    2d362 <yuarel_parse_query+0xf2>
   2d382:	bd 01 00 00 00       	mov    $0x1,%ebp
   2d387:	eb b2                	jmp    2d33b <yuarel_parse_query+0xcb>
   2d389:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   2d38e:	eb d2                	jmp    2d362 <yuarel_parse_query+0xf2>

000000000002d390 <xfree_tab>:
   2d390:	48 85 ff             	test   %rdi,%rdi
   2d393:	0f 84 f7 00 00 00    	je     2d490 <xfree_tab+0x100>
   2d399:	41 54                	push   %r12
   2d39b:	55                   	push   %rbp
   2d39c:	53                   	push   %rbx
   2d39d:	48 89 fb             	mov    %rdi,%rbx
   2d3a0:	48 8b 3f             	mov    (%rdi),%rdi
   2d3a3:	48 85 ff             	test   %rdi,%rdi
   2d3a6:	74 06                	je     2d3ae <xfree_tab+0x1e>
   2d3a8:	ff 15 02 90 22 00    	callq  *0x229002(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2d3ae:	8b 4b 0c             	mov    0xc(%rbx),%ecx
   2d3b1:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2d3b5:	85 c9                	test   %ecx,%ecx
   2d3b7:	7e 4e                	jle    2d407 <xfree_tab+0x77>
   2d3b9:	45 31 e4             	xor    %r12d,%r12d
   2d3bc:	0f 1f 40 00          	nopl   0x0(%rax)
   2d3c0:	4a 8b 2c e7          	mov    (%rdi,%r12,8),%rbp
   2d3c4:	48 85 ed             	test   %rbp,%rbp
   2d3c7:	74 34                	je     2d3fd <xfree_tab+0x6d>
   2d3c9:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   2d3cd:	48 8b 05 dc 8f 22 00 	mov    0x228fdc(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d3d4:	48 85 ff             	test   %rdi,%rdi
   2d3d7:	74 09                	je     2d3e2 <xfree_tab+0x52>
   2d3d9:	ff d0                	callq  *%rax
   2d3db:	48 8b 05 ce 8f 22 00 	mov    0x228fce(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d3e2:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   2d3e6:	48 85 ff             	test   %rdi,%rdi
   2d3e9:	74 09                	je     2d3f4 <xfree_tab+0x64>
   2d3eb:	ff d0                	callq  *%rax
   2d3ed:	48 8b 05 bc 8f 22 00 	mov    0x228fbc(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d3f4:	48 89 ef             	mov    %rbp,%rdi
   2d3f7:	ff d0                	callq  *%rax
   2d3f9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2d3fd:	49 83 c4 01          	add    $0x1,%r12
   2d401:	44 39 63 0c          	cmp    %r12d,0xc(%rbx)
   2d405:	7f b9                	jg     2d3c0 <xfree_tab+0x30>
   2d407:	48 85 ff             	test   %rdi,%rdi
   2d40a:	74 06                	je     2d412 <xfree_tab+0x82>
   2d40c:	ff 15 9e 8f 22 00    	callq  *0x228f9e(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2d412:	8b 53 18             	mov    0x18(%rbx),%edx
   2d415:	31 ed                	xor    %ebp,%ebp
   2d417:	85 d2                	test   %edx,%edx
   2d419:	7e 1b                	jle    2d436 <xfree_tab+0xa6>
   2d41b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2d420:	48 8b 43 20          	mov    0x20(%rbx),%rax
   2d424:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
   2d428:	48 83 c5 01          	add    $0x1,%rbp
   2d42c:	e8 6f 00 00 00       	callq  2d4a0 <xfree_arr>
   2d431:	39 6b 18             	cmp    %ebp,0x18(%rbx)
   2d434:	7f ea                	jg     2d420 <xfree_tab+0x90>
   2d436:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   2d43a:	48 85 ff             	test   %rdi,%rdi
   2d43d:	74 06                	je     2d445 <xfree_tab+0xb5>
   2d43f:	ff 15 6b 8f 22 00    	callq  *0x228f6b(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2d445:	8b 43 28             	mov    0x28(%rbx),%eax
   2d448:	31 ed                	xor    %ebp,%ebp
   2d44a:	85 c0                	test   %eax,%eax
   2d44c:	7e 16                	jle    2d464 <xfree_tab+0xd4>
   2d44e:	48 8b 43 30          	mov    0x30(%rbx),%rax
   2d452:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
   2d456:	48 83 c5 01          	add    $0x1,%rbp
   2d45a:	e8 31 ff ff ff       	callq  2d390 <xfree_tab>
   2d45f:	39 6b 28             	cmp    %ebp,0x28(%rbx)
   2d462:	7f ea                	jg     2d44e <xfree_tab+0xbe>
   2d464:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   2d468:	48 8b 05 41 8f 22 00 	mov    0x228f41(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d46f:	48 85 ff             	test   %rdi,%rdi
   2d472:	74 09                	je     2d47d <xfree_tab+0xed>
   2d474:	ff d0                	callq  *%rax
   2d476:	48 8b 05 33 8f 22 00 	mov    0x228f33(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d47d:	48 89 df             	mov    %rbx,%rdi
   2d480:	5b                   	pop    %rbx
   2d481:	5d                   	pop    %rbp
   2d482:	41 5c                	pop    %r12
   2d484:	ff e0                	jmpq   *%rax
   2d486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2d48d:	00 00 00 
   2d490:	c3                   	retq   

000000000002d491 <.annobin_xfree_arr.start>:
   2d491:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2d498:	00 00 00 00 
   2d49c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002d4a0 <xfree_arr>:
   2d4a0:	48 85 ff             	test   %rdi,%rdi
   2d4a3:	0f 84 07 01 00 00    	je     2d5b0 <xfree_arr+0x110>
   2d4a9:	55                   	push   %rbp
   2d4aa:	53                   	push   %rbx
   2d4ab:	48 89 fb             	mov    %rdi,%rbx
   2d4ae:	48 83 ec 08          	sub    $0x8,%rsp
   2d4b2:	48 8b 3f             	mov    (%rdi),%rdi
   2d4b5:	48 85 ff             	test   %rdi,%rdi
   2d4b8:	74 06                	je     2d4c0 <xfree_arr+0x20>
   2d4ba:	ff 15 f0 8e 22 00    	callq  *0x228ef0(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2d4c0:	8b 43 08             	mov    0x8(%rbx),%eax
   2d4c3:	83 f8 74             	cmp    $0x74,%eax
   2d4c6:	74 28                	je     2d4f0 <xfree_arr+0x50>
   2d4c8:	83 f8 76             	cmp    $0x76,%eax
   2d4cb:	0f 84 87 00 00 00    	je     2d558 <xfree_arr+0xb8>
   2d4d1:	83 f8 61             	cmp    $0x61,%eax
   2d4d4:	74 5a                	je     2d530 <xfree_arr+0x90>
   2d4d6:	48 8b 05 d3 8e 22 00 	mov    0x228ed3(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d4dd:	48 83 c4 08          	add    $0x8,%rsp
   2d4e1:	48 89 df             	mov    %rbx,%rdi
   2d4e4:	5b                   	pop    %rbx
   2d4e5:	5d                   	pop    %rbp
   2d4e6:	ff e0                	jmpq   *%rax
   2d4e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2d4ef:	00 
   2d4f0:	8b 53 10             	mov    0x10(%rbx),%edx
   2d4f3:	31 ed                	xor    %ebp,%ebp
   2d4f5:	85 d2                	test   %edx,%edx
   2d4f7:	7e 1d                	jle    2d516 <xfree_arr+0x76>
   2d4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2d500:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2d504:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
   2d508:	48 83 c5 01          	add    $0x1,%rbp
   2d50c:	e8 7f fe ff ff       	callq  2d390 <xfree_tab>
   2d511:	39 6b 10             	cmp    %ebp,0x10(%rbx)
   2d514:	7f ea                	jg     2d500 <xfree_arr+0x60>
   2d516:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d51a:	48 8b 05 8f 8e 22 00 	mov    0x228e8f(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d521:	48 85 ff             	test   %rdi,%rdi
   2d524:	74 b7                	je     2d4dd <xfree_arr+0x3d>
   2d526:	ff d0                	callq  *%rax
   2d528:	eb ac                	jmp    2d4d6 <xfree_arr+0x36>
   2d52a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2d530:	8b 43 10             	mov    0x10(%rbx),%eax
   2d533:	31 ed                	xor    %ebp,%ebp
   2d535:	85 c0                	test   %eax,%eax
   2d537:	7e dd                	jle    2d516 <xfree_arr+0x76>
   2d539:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2d53d:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
   2d541:	48 83 c5 01          	add    $0x1,%rbp
   2d545:	e8 56 ff ff ff       	callq  2d4a0 <xfree_arr>
   2d54a:	39 6b 10             	cmp    %ebp,0x10(%rbx)
   2d54d:	7f ea                	jg     2d539 <xfree_arr+0x99>
   2d54f:	eb c5                	jmp    2d516 <xfree_arr+0x76>
   2d551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2d558:	8b 4b 10             	mov    0x10(%rbx),%ecx
   2d55b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   2d55f:	31 ed                	xor    %ebp,%ebp
   2d561:	48 8b 05 48 8e 22 00 	mov    0x228e48(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d568:	85 c9                	test   %ecx,%ecx
   2d56a:	7e 23                	jle    2d58f <xfree_arr+0xef>
   2d56c:	0f 1f 40 00          	nopl   0x0(%rax)
   2d570:	48 8b 3c ea          	mov    (%rdx,%rbp,8),%rdi
   2d574:	48 85 ff             	test   %rdi,%rdi
   2d577:	74 0d                	je     2d586 <xfree_arr+0xe6>
   2d579:	ff d0                	callq  *%rax
   2d57b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   2d57f:	48 8b 05 2a 8e 22 00 	mov    0x228e2a(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d586:	48 83 c5 01          	add    $0x1,%rbp
   2d58a:	39 6b 10             	cmp    %ebp,0x10(%rbx)
   2d58d:	7f e1                	jg     2d570 <xfree_arr+0xd0>
   2d58f:	48 85 d2             	test   %rdx,%rdx
   2d592:	0f 84 45 ff ff ff    	je     2d4dd <xfree_arr+0x3d>
   2d598:	48 89 d7             	mov    %rdx,%rdi
   2d59b:	ff d0                	callq  *%rax
   2d59d:	48 8b 05 0c 8e 22 00 	mov    0x228e0c(%rip),%rax        # 2563b0 <free@GLIBC_2.2.5>
   2d5a4:	48 83 c4 08          	add    $0x8,%rsp
   2d5a8:	48 89 df             	mov    %rbx,%rdi
   2d5ab:	5b                   	pop    %rbx
   2d5ac:	5d                   	pop    %rbp
   2d5ad:	ff e0                	jmpq   *%rax
   2d5af:	90                   	nop
   2d5b0:	c3                   	retq   

000000000002d5b1 <.annobin_scan_digits.start>:
   2d5b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2d5b8:	00 00 00 00 
   2d5bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002d5c0 <scan_digits>:
   2d5c0:	55                   	push   %rbp
   2d5c1:	89 f5                	mov    %esi,%ebp
   2d5c3:	53                   	push   %rbx
   2d5c4:	48 89 fb             	mov    %rdi,%rbx
   2d5c7:	48 83 ec 08          	sub    $0x8,%rsp
   2d5cb:	e8 30 35 fe ff       	callq  10b00 <__ctype_b_loc@plt>
   2d5d0:	48 8b 38             	mov    (%rax),%rdi
   2d5d3:	8d 45 ff             	lea    -0x1(%rbp),%eax
   2d5d6:	48 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%rsi
   2d5db:	31 c0                	xor    %eax,%eax
   2d5dd:	0f 1f 00             	nopl   (%rax)
   2d5e0:	0f be 13             	movsbl (%rbx),%edx
   2d5e3:	48 0f be ca          	movsbq %dl,%rcx
   2d5e7:	f6 44 4f 01 08       	testb  $0x8,0x1(%rdi,%rcx,2)
   2d5ec:	74 1a                	je     2d608 <scan_digits+0x48>
   2d5ee:	8d 04 80             	lea    (%rax,%rax,4),%eax
   2d5f1:	48 83 c3 01          	add    $0x1,%rbx
   2d5f5:	8d 44 42 d0          	lea    -0x30(%rdx,%rax,2),%eax
   2d5f9:	48 39 f3             	cmp    %rsi,%rbx
   2d5fc:	75 e2                	jne    2d5e0 <scan_digits+0x20>
   2d5fe:	48 83 c4 08          	add    $0x8,%rsp
   2d602:	5b                   	pop    %rbx
   2d603:	5d                   	pop    %rbp
   2d604:	c3                   	retq   
   2d605:	0f 1f 00             	nopl   (%rax)
   2d608:	48 83 c4 08          	add    $0x8,%rsp
   2d60c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d611:	5b                   	pop    %rbx
   2d612:	5d                   	pop    %rbp
   2d613:	c3                   	retq   

000000000002d614 <.annobin_scan_date.start>:
   2d614:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2d61b:	00 00 00 00 
   2d61f:	90                   	nop

000000000002d620 <scan_date>:
   2d620:	41 57                	push   %r15
   2d622:	41 56                	push   %r14
   2d624:	41 55                	push   %r13
   2d626:	49 89 f5             	mov    %rsi,%r13
   2d629:	be 04 00 00 00       	mov    $0x4,%esi
   2d62e:	41 54                	push   %r12
   2d630:	49 89 d4             	mov    %rdx,%r12
   2d633:	55                   	push   %rbp
   2d634:	48 89 cd             	mov    %rcx,%rbp
   2d637:	53                   	push   %rbx
   2d638:	48 89 fb             	mov    %rdi,%rbx
   2d63b:	48 83 ec 08          	sub    $0x8,%rsp
   2d63f:	e8 7c ff ff ff       	callq  2d5c0 <scan_digits>
   2d644:	41 89 c6             	mov    %eax,%r14d
   2d647:	85 c0                	test   %eax,%eax
   2d649:	78 06                	js     2d651 <scan_date+0x31>
   2d64b:	80 7b 04 2d          	cmpb   $0x2d,0x4(%rbx)
   2d64f:	74 37                	je     2d688 <scan_date+0x68>
   2d651:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d656:	41 89 c7             	mov    %eax,%r15d
   2d659:	89 c2                	mov    %eax,%edx
   2d65b:	4d 85 ed             	test   %r13,%r13
   2d65e:	74 04                	je     2d664 <scan_date+0x44>
   2d660:	45 89 75 00          	mov    %r14d,0x0(%r13)
   2d664:	4d 85 e4             	test   %r12,%r12
   2d667:	74 04                	je     2d66d <scan_date+0x4d>
   2d669:	45 89 3c 24          	mov    %r15d,(%r12)
   2d66d:	48 85 ed             	test   %rbp,%rbp
   2d670:	74 03                	je     2d675 <scan_date+0x55>
   2d672:	89 55 00             	mov    %edx,0x0(%rbp)
   2d675:	48 83 c4 08          	add    $0x8,%rsp
   2d679:	5b                   	pop    %rbx
   2d67a:	5d                   	pop    %rbp
   2d67b:	41 5c                	pop    %r12
   2d67d:	41 5d                	pop    %r13
   2d67f:	41 5e                	pop    %r14
   2d681:	41 5f                	pop    %r15
   2d683:	c3                   	retq   
   2d684:	0f 1f 40 00          	nopl   0x0(%rax)
   2d688:	48 8d 7b 05          	lea    0x5(%rbx),%rdi
   2d68c:	be 02 00 00 00       	mov    $0x2,%esi
   2d691:	e8 2a ff ff ff       	callq  2d5c0 <scan_digits>
   2d696:	41 89 c7             	mov    %eax,%r15d
   2d699:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d69e:	89 c2                	mov    %eax,%edx
   2d6a0:	45 85 ff             	test   %r15d,%r15d
   2d6a3:	78 b6                	js     2d65b <scan_date+0x3b>
   2d6a5:	80 7b 07 2d          	cmpb   $0x2d,0x7(%rbx)
   2d6a9:	75 b0                	jne    2d65b <scan_date+0x3b>
   2d6ab:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   2d6af:	be 02 00 00 00       	mov    $0x2,%esi
   2d6b4:	e8 07 ff ff ff       	callq  2d5c0 <scan_digits>
   2d6b9:	89 c2                	mov    %eax,%edx
   2d6bb:	c1 f8 1f             	sar    $0x1f,%eax
   2d6be:	eb 9b                	jmp    2d65b <scan_date+0x3b>

000000000002d6c0 <scan_time>:
   2d6c0:	41 57                	push   %r15
   2d6c2:	41 56                	push   %r14
   2d6c4:	41 55                	push   %r13
   2d6c6:	49 89 f5             	mov    %rsi,%r13
   2d6c9:	be 02 00 00 00       	mov    $0x2,%esi
   2d6ce:	41 54                	push   %r12
   2d6d0:	49 89 d4             	mov    %rdx,%r12
   2d6d3:	55                   	push   %rbp
   2d6d4:	48 89 cd             	mov    %rcx,%rbp
   2d6d7:	53                   	push   %rbx
   2d6d8:	48 89 fb             	mov    %rdi,%rbx
   2d6db:	48 83 ec 08          	sub    $0x8,%rsp
   2d6df:	e8 dc fe ff ff       	callq  2d5c0 <scan_digits>
   2d6e4:	41 89 c6             	mov    %eax,%r14d
   2d6e7:	85 c0                	test   %eax,%eax
   2d6e9:	78 06                	js     2d6f1 <scan_time+0x31>
   2d6eb:	80 7b 02 3a          	cmpb   $0x3a,0x2(%rbx)
   2d6ef:	74 37                	je     2d728 <scan_time+0x68>
   2d6f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d6f6:	41 89 c7             	mov    %eax,%r15d
   2d6f9:	89 c2                	mov    %eax,%edx
   2d6fb:	4d 85 ed             	test   %r13,%r13
   2d6fe:	74 04                	je     2d704 <scan_time+0x44>
   2d700:	45 89 75 00          	mov    %r14d,0x0(%r13)
   2d704:	4d 85 e4             	test   %r12,%r12
   2d707:	74 04                	je     2d70d <scan_time+0x4d>
   2d709:	45 89 3c 24          	mov    %r15d,(%r12)
   2d70d:	48 85 ed             	test   %rbp,%rbp
   2d710:	74 03                	je     2d715 <scan_time+0x55>
   2d712:	89 55 00             	mov    %edx,0x0(%rbp)
   2d715:	48 83 c4 08          	add    $0x8,%rsp
   2d719:	5b                   	pop    %rbx
   2d71a:	5d                   	pop    %rbp
   2d71b:	41 5c                	pop    %r12
   2d71d:	41 5d                	pop    %r13
   2d71f:	41 5e                	pop    %r14
   2d721:	41 5f                	pop    %r15
   2d723:	c3                   	retq   
   2d724:	0f 1f 40 00          	nopl   0x0(%rax)
   2d728:	48 8d 7b 03          	lea    0x3(%rbx),%rdi
   2d72c:	be 02 00 00 00       	mov    $0x2,%esi
   2d731:	e8 8a fe ff ff       	callq  2d5c0 <scan_digits>
   2d736:	41 89 c7             	mov    %eax,%r15d
   2d739:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2d73e:	89 c2                	mov    %eax,%edx
   2d740:	45 85 ff             	test   %r15d,%r15d
   2d743:	78 b6                	js     2d6fb <scan_time+0x3b>
   2d745:	80 7b 05 3a          	cmpb   $0x3a,0x5(%rbx)
   2d749:	75 b0                	jne    2d6fb <scan_time+0x3b>
   2d74b:	48 8d 7b 06          	lea    0x6(%rbx),%rdi
   2d74f:	be 02 00 00 00       	mov    $0x2,%esi
   2d754:	e8 67 fe ff ff       	callq  2d5c0 <scan_digits>
   2d759:	89 c2                	mov    %eax,%edx
   2d75b:	c1 f8 1f             	sar    $0x1f,%eax
   2d75e:	eb 9b                	jmp    2d6fb <scan_time+0x3b>

000000000002d760 <check_key>:
   2d760:	41 57                	push   %r15
   2d762:	41 56                	push   %r14
   2d764:	41 55                	push   %r13
   2d766:	49 89 cd             	mov    %rcx,%r13
   2d769:	41 54                	push   %r12
   2d76b:	49 89 d4             	mov    %rdx,%r12
   2d76e:	55                   	push   %rbp
   2d76f:	53                   	push   %rbx
   2d770:	48 89 f3             	mov    %rsi,%rbx
   2d773:	48 83 ec 28          	sub    $0x28,%rsp
   2d777:	48 89 3c 24          	mov    %rdi,(%rsp)
   2d77b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2d782:	00 00 
   2d784:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2d789:	31 c0                	xor    %eax,%eax
   2d78b:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2d790:	4d 85 c0             	test   %r8,%r8
   2d793:	4c 0f 44 c0          	cmove  %rax,%r8
   2d797:	48 85 c9             	test   %rcx,%rcx
   2d79a:	4c 0f 44 e8          	cmove  %rax,%r13
   2d79e:	48 85 d2             	test   %rdx,%rdx
   2d7a1:	4c 0f 44 e0          	cmove  %rax,%r12
   2d7a5:	8b 47 0c             	mov    0xc(%rdi),%eax
   2d7a8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2d7ad:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   2d7b4:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   2d7bb:	00 
   2d7bc:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   2d7c3:	00 
   2d7c4:	85 c0                	test   %eax,%eax
   2d7c6:	7e 68                	jle    2d830 <check_key+0xd0>
   2d7c8:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   2d7cc:	83 e8 01             	sub    $0x1,%eax
   2d7cf:	49 8d 6c c6 08       	lea    0x8(%r14,%rax,8),%rbp
   2d7d4:	eb 13                	jmp    2d7e9 <check_key+0x89>
   2d7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2d7dd:	00 00 00 
   2d7e0:	49 83 c6 08          	add    $0x8,%r14
   2d7e4:	49 39 ee             	cmp    %rbp,%r14
   2d7e7:	74 47                	je     2d830 <check_key+0xd0>
   2d7e9:	4d 8b 3e             	mov    (%r14),%r15
   2d7ec:	48 89 df             	mov    %rbx,%rdi
   2d7ef:	49 8b 37             	mov    (%r15),%rsi
   2d7f2:	e8 29 2a fe ff       	callq  10220 <strcmp@plt>
   2d7f7:	85 c0                	test   %eax,%eax
   2d7f9:	75 e5                	jne    2d7e0 <check_key+0x80>
   2d7fb:	4d 89 3c 24          	mov    %r15,(%r12)
   2d7ff:	b8 76 00 00 00       	mov    $0x76,%eax
   2d804:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   2d809:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2d810:	00 00 
   2d812:	0f 85 bf 00 00 00    	jne    2d8d7 <check_key+0x177>
   2d818:	48 83 c4 28          	add    $0x28,%rsp
   2d81c:	5b                   	pop    %rbx
   2d81d:	5d                   	pop    %rbp
   2d81e:	41 5c                	pop    %r12
   2d820:	41 5d                	pop    %r13
   2d822:	41 5e                	pop    %r14
   2d824:	41 5f                	pop    %r15
   2d826:	c3                   	retq   
   2d827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d82e:	00 00 
   2d830:	48 8b 14 24          	mov    (%rsp),%rdx
   2d834:	8b 42 18             	mov    0x18(%rdx),%eax
   2d837:	85 c0                	test   %eax,%eax
   2d839:	7e 45                	jle    2d880 <check_key+0x120>
   2d83b:	48 8b 6a 20          	mov    0x20(%rdx),%rbp
   2d83f:	83 e8 01             	sub    $0x1,%eax
   2d842:	4c 8d 74 c5 08       	lea    0x8(%rbp,%rax,8),%r14
   2d847:	eb 10                	jmp    2d859 <check_key+0xf9>
   2d849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2d850:	48 83 c5 08          	add    $0x8,%rbp
   2d854:	4c 39 f5             	cmp    %r14,%rbp
   2d857:	74 27                	je     2d880 <check_key+0x120>
   2d859:	4c 8b 65 00          	mov    0x0(%rbp),%r12
   2d85d:	48 89 df             	mov    %rbx,%rdi
   2d860:	49 8b 34 24          	mov    (%r12),%rsi
   2d864:	e8 b7 29 fe ff       	callq  10220 <strcmp@plt>
   2d869:	85 c0                	test   %eax,%eax
   2d86b:	75 e3                	jne    2d850 <check_key+0xf0>
   2d86d:	4d 89 65 00          	mov    %r12,0x0(%r13)
   2d871:	b8 61 00 00 00       	mov    $0x61,%eax
   2d876:	eb 8c                	jmp    2d804 <check_key+0xa4>
   2d878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2d87f:	00 
   2d880:	48 8b 0c 24          	mov    (%rsp),%rcx
   2d884:	8b 41 28             	mov    0x28(%rcx),%eax
   2d887:	85 c0                	test   %eax,%eax
   2d889:	7e 45                	jle    2d8d0 <check_key+0x170>
   2d88b:	48 8b 69 30          	mov    0x30(%rcx),%rbp
   2d88f:	83 e8 01             	sub    $0x1,%eax
   2d892:	4c 8d 6c c5 08       	lea    0x8(%rbp,%rax,8),%r13
   2d897:	eb 10                	jmp    2d8a9 <check_key+0x149>
   2d899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2d8a0:	48 83 c5 08          	add    $0x8,%rbp
   2d8a4:	49 39 ed             	cmp    %rbp,%r13
   2d8a7:	74 27                	je     2d8d0 <check_key+0x170>
   2d8a9:	4c 8b 65 00          	mov    0x0(%rbp),%r12
   2d8ad:	48 89 df             	mov    %rbx,%rdi
   2d8b0:	49 8b 34 24          	mov    (%r12),%rsi
   2d8b4:	e8 67 29 fe ff       	callq  10220 <strcmp@plt>
   2d8b9:	85 c0                	test   %eax,%eax
   2d8bb:	75 e3                	jne    2d8a0 <check_key+0x140>
   2d8bd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2d8c2:	4c 89 20             	mov    %r12,(%rax)
   2d8c5:	b8 74 00 00 00       	mov    $0x74,%eax
   2d8ca:	e9 35 ff ff ff       	jmpq   2d804 <check_key+0xa4>
   2d8cf:	90                   	nop
   2d8d0:	31 c0                	xor    %eax,%eax
   2d8d2:	e9 2d ff ff ff       	jmpq   2d804 <check_key+0xa4>
   2d8d7:	e8 74 25 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002d8dc <.annobin_check_key.end>:
   2d8dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002d8e0 <e_bad_key_error>:
   2d8e0:	53                   	push   %rbx
   2d8e1:	41 89 f1             	mov    %esi,%r9d
   2d8e4:	48 89 fb             	mov    %rdi,%rbx
   2d8e7:	48 63 77 18          	movslq 0x18(%rdi),%rsi
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   2d8eb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2d8ef:	4c 8d 05 e2 58 01 00 	lea    0x158e2(%rip),%r8        # 431d8 <__PRETTY_FUNCTION__.11024+0x98>
   2d8f6:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2d8fd:	31 c0                	xor    %eax,%eax
   2d8ff:	ba 01 00 00 00       	mov    $0x1,%edx
   2d904:	e8 97 21 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2d909:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   2d90d:	be 01 00 00 00       	mov    $0x1,%esi
   2d912:	e8 99 2d fe ff       	callq  106b0 <__longjmp_chk@plt>

000000000002d917 <.annobin_e_bad_key_error.end>:
   2d917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d91e:	00 00 

000000000002d920 <e_outofmemory>:
   2d920:	53                   	push   %rbx
   2d921:	49 89 f1             	mov    %rsi,%r9
   2d924:	48 89 fb             	mov    %rdi,%rbx
   2d927:	48 63 77 18          	movslq 0x18(%rdi),%rsi
   2d92b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2d92f:	4c 8d 05 b3 58 01 00 	lea    0x158b3(%rip),%r8        # 431e9 <__PRETTY_FUNCTION__.11024+0xa9>
   2d936:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2d93d:	31 c0                	xor    %eax,%eax
   2d93f:	ba 01 00 00 00       	mov    $0x1,%edx
   2d944:	e8 57 21 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2d949:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   2d94d:	be 01 00 00 00       	mov    $0x1,%esi
   2d952:	e8 59 2d fe ff       	callq  106b0 <__longjmp_chk@plt>

000000000002d957 <.annobin_e_outofmemory.end>:
   2d957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d95e:	00 00 

000000000002d960 <e_syntax_error>:
   2d960:	53                   	push   %rbx
   2d961:	41 89 f1             	mov    %esi,%r9d
   2d964:	48 89 fb             	mov    %rdi,%rbx
   2d967:	48 63 77 18          	movslq 0x18(%rdi),%rsi
   2d96b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2d96f:	4c 8d 05 8d 58 01 00 	lea    0x1588d(%rip),%r8        # 43203 <__PRETTY_FUNCTION__.11024+0xc3>
   2d976:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2d97d:	31 c0                	xor    %eax,%eax
   2d97f:	48 83 ec 08          	sub    $0x8,%rsp
   2d983:	52                   	push   %rdx
   2d984:	ba 01 00 00 00       	mov    $0x1,%edx
   2d989:	e8 12 21 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2d98e:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   2d992:	be 01 00 00 00       	mov    $0x1,%esi
   2d997:	e8 14 2d fe ff       	callq  106b0 <__longjmp_chk@plt>

000000000002d99c <.annobin_e_syntax_error.end>:
   2d99c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002d9a0 <next_token>:
   2d9a0:	41 57                	push   %r15
   2d9a2:	41 56                	push   %r14
   2d9a4:	41 55                	push   %r13
   2d9a6:	41 54                	push   %r12
   2d9a8:	55                   	push   %rbp
   2d9a9:	53                   	push   %rbx
   2d9aa:	48 83 ec 18          	sub    $0x18,%rsp
   2d9ae:	8b 97 f8 00 00 00    	mov    0xf8(%rdi),%edx
   2d9b4:	44 8b af ec 00 00 00 	mov    0xec(%rdi),%r13d
   2d9bb:	48 8b 87 f0 00 00 00 	mov    0xf0(%rdi),%rax
   2d9c2:	85 d2                	test   %edx,%edx
   2d9c4:	0f 8e d6 02 00 00    	jle    2dca0 <next_token+0x300>
   2d9ca:	83 ea 01             	sub    $0x1,%edx
   2d9cd:	4c 8d 7c 10 01       	lea    0x1(%rax,%rdx,1),%r15
   2d9d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2d9d8:	48 83 c0 01          	add    $0x1,%rax
   2d9dc:	80 78 ff 0a          	cmpb   $0xa,-0x1(%rax)
   2d9e0:	75 04                	jne    2d9e6 <next_token+0x46>
   2d9e2:	41 83 c5 01          	add    $0x1,%r13d
   2d9e6:	4c 39 f8             	cmp    %r15,%rax
   2d9e9:	75 ed                	jne    2d9d8 <next_token+0x38>
   2d9eb:	89 f1                	mov    %esi,%ecx
   2d9ed:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2d9f1:	83 e1 01             	and    $0x1,%ecx
   2d9f4:	4c 39 fa             	cmp    %r15,%rdx
   2d9f7:	0f 86 a0 05 00 00    	jbe    2df9d <next_token+0x5fd>
   2d9fd:	41 0f b6 07          	movzbl (%r15),%eax
   2da01:	3c 23                	cmp    $0x23,%al
   2da03:	0f 84 a7 02 00 00    	je     2dcb0 <next_token+0x310>
   2da09:	3c 2e                	cmp    $0x2e,%al
   2da0b:	75 08                	jne    2da15 <next_token+0x75>
   2da0d:	84 c9                	test   %cl,%cl
   2da0f:	0f 85 03 06 00 00    	jne    2e018 <next_token+0x678>
   2da15:	3c 2c                	cmp    $0x2c,%al
   2da17:	0f 84 43 01 00 00    	je     2db60 <next_token+0x1c0>
   2da1d:	0f 8e 9d 00 00 00    	jle    2dac0 <next_token+0x120>
   2da23:	3c 5d                	cmp    $0x5d,%al
   2da25:	0f 84 75 01 00 00    	je     2dba0 <next_token+0x200>
   2da2b:	7f 4b                	jg     2da78 <next_token+0xd8>
   2da2d:	3c 3d                	cmp    $0x3d,%al
   2da2f:	0f 84 2b 02 00 00    	je     2dc60 <next_token+0x2c0>
   2da35:	3c 5b                	cmp    $0x5b,%al
   2da37:	0f 85 a7 00 00 00    	jne    2dae4 <next_token+0x144>
   2da3d:	c7 87 e8 00 00 00 07 	movl   $0x7,0xe8(%rdi)
   2da44:	00 00 00 
   2da47:	b8 07 00 00 00       	mov    $0x7,%eax
   2da4c:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2da53:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2da5a:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2da61:	01 00 00 00 
   2da65:	48 83 c4 18          	add    $0x18,%rsp
   2da69:	5b                   	pop    %rbx
   2da6a:	5d                   	pop    %rbp
   2da6b:	41 5c                	pop    %r12
   2da6d:	41 5d                	pop    %r13
   2da6f:	41 5e                	pop    %r14
   2da71:	41 5f                	pop    %r15
   2da73:	c3                   	retq   
   2da74:	0f 1f 40 00          	nopl   0x0(%rax)
   2da78:	3c 7b                	cmp    $0x7b,%al
   2da7a:	0f 84 60 01 00 00    	je     2dbe0 <next_token+0x240>
   2da80:	3c 7d                	cmp    $0x7d,%al
   2da82:	75 60                	jne    2dae4 <next_token+0x144>
   2da84:	c7 87 e8 00 00 00 05 	movl   $0x5,0xe8(%rdi)
   2da8b:	00 00 00 
   2da8e:	b8 05 00 00 00       	mov    $0x5,%eax
   2da93:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2da9a:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2daa1:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2daa8:	01 00 00 00 
   2daac:	48 83 c4 18          	add    $0x18,%rsp
   2dab0:	5b                   	pop    %rbx
   2dab1:	5d                   	pop    %rbp
   2dab2:	41 5c                	pop    %r12
   2dab4:	41 5d                	pop    %r13
   2dab6:	41 5e                	pop    %r14
   2dab8:	41 5f                	pop    %r15
   2daba:	c3                   	retq   
   2dabb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2dac0:	3c 0a                	cmp    $0xa,%al
   2dac2:	0f 84 58 01 00 00    	je     2dc20 <next_token+0x280>
   2dac8:	7e 16                	jle    2dae0 <next_token+0x140>
   2daca:	3c 0d                	cmp    $0xd,%al
   2dacc:	74 04                	je     2dad2 <next_token+0x132>
   2dace:	3c 20                	cmp    $0x20,%al
   2dad0:	75 12                	jne    2dae4 <next_token+0x144>
   2dad2:	49 83 c7 01          	add    $0x1,%r15
   2dad6:	e9 19 ff ff ff       	jmpq   2d9f4 <next_token+0x54>
   2dadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2dae0:	3c 09                	cmp    $0x9,%al
   2dae2:	74 ee                	je     2dad2 <next_token+0x132>
   2dae4:	4c 8d 15 24 57 01 00 	lea    0x15724(%rip),%r10        # 4320f <__PRETTY_FUNCTION__.11024+0xcf>
   2daeb:	89 f5                	mov    %esi,%ebp
   2daed:	48 89 fb             	mov    %rdi,%rbx
   2daf0:	b9 03 00 00 00       	mov    $0x3,%ecx
   2daf5:	4c 89 fe             	mov    %r15,%rsi
   2daf8:	4c 89 d7             	mov    %r10,%rdi
   2dafb:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   2dafd:	0f 97 c2             	seta   %dl
   2db00:	80 da 00             	sbb    $0x0,%dl
   2db03:	84 d2                	test   %dl,%dl
   2db05:	0f 85 df 01 00 00    	jne    2dcea <next_token+0x34a>
   2db0b:	49 8d 7f 03          	lea    0x3(%r15),%rdi
   2db0f:	4c 89 d6             	mov    %r10,%rsi
   2db12:	e8 99 2f fe ff       	callq  10ab0 <strstr@plt>
   2db17:	48 85 c0             	test   %rax,%rax
   2db1a:	0f 84 58 07 00 00    	je     2e278 <next_token+0x8d8>
   2db20:	48 83 c0 03          	add    $0x3,%rax
   2db24:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2db2b:	4c 29 f8             	sub    %r15,%rax
   2db2e:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2db35:	00 00 00 
   2db38:	89 83 f8 00 00 00    	mov    %eax,0xf8(%rbx)
   2db3e:	b8 09 00 00 00       	mov    $0x9,%eax
   2db43:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2db4a:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2db51:	00 00 00 
   2db54:	e9 0c ff ff ff       	jmpq   2da65 <next_token+0xc5>
   2db59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2db60:	c7 87 e8 00 00 00 02 	movl   $0x2,0xe8(%rdi)
   2db67:	00 00 00 
   2db6a:	b8 02 00 00 00       	mov    $0x2,%eax
   2db6f:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2db76:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2db7d:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2db84:	01 00 00 00 
   2db88:	48 83 c4 18          	add    $0x18,%rsp
   2db8c:	5b                   	pop    %rbx
   2db8d:	5d                   	pop    %rbp
   2db8e:	41 5c                	pop    %r12
   2db90:	41 5d                	pop    %r13
   2db92:	41 5e                	pop    %r14
   2db94:	41 5f                	pop    %r15
   2db96:	c3                   	retq   
   2db97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2db9e:	00 00 
   2dba0:	c7 87 e8 00 00 00 08 	movl   $0x8,0xe8(%rdi)
   2dba7:	00 00 00 
   2dbaa:	b8 08 00 00 00       	mov    $0x8,%eax
   2dbaf:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2dbb6:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2dbbd:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2dbc4:	01 00 00 00 
   2dbc8:	48 83 c4 18          	add    $0x18,%rsp
   2dbcc:	5b                   	pop    %rbx
   2dbcd:	5d                   	pop    %rbp
   2dbce:	41 5c                	pop    %r12
   2dbd0:	41 5d                	pop    %r13
   2dbd2:	41 5e                	pop    %r14
   2dbd4:	41 5f                	pop    %r15
   2dbd6:	c3                   	retq   
   2dbd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2dbde:	00 00 
   2dbe0:	c7 87 e8 00 00 00 04 	movl   $0x4,0xe8(%rdi)
   2dbe7:	00 00 00 
   2dbea:	b8 04 00 00 00       	mov    $0x4,%eax
   2dbef:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2dbf6:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2dbfd:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2dc04:	01 00 00 00 
   2dc08:	48 83 c4 18          	add    $0x18,%rsp
   2dc0c:	5b                   	pop    %rbx
   2dc0d:	5d                   	pop    %rbp
   2dc0e:	41 5c                	pop    %r12
   2dc10:	41 5d                	pop    %r13
   2dc12:	41 5e                	pop    %r14
   2dc14:	41 5f                	pop    %r15
   2dc16:	c3                   	retq   
   2dc17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2dc1e:	00 00 
   2dc20:	c7 87 e8 00 00 00 06 	movl   $0x6,0xe8(%rdi)
   2dc27:	00 00 00 
   2dc2a:	b8 06 00 00 00       	mov    $0x6,%eax
   2dc2f:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2dc36:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2dc3d:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2dc44:	01 00 00 00 
   2dc48:	48 83 c4 18          	add    $0x18,%rsp
   2dc4c:	5b                   	pop    %rbx
   2dc4d:	5d                   	pop    %rbp
   2dc4e:	41 5c                	pop    %r12
   2dc50:	41 5d                	pop    %r13
   2dc52:	41 5e                	pop    %r14
   2dc54:	41 5f                	pop    %r15
   2dc56:	c3                   	retq   
   2dc57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2dc5e:	00 00 
   2dc60:	c7 87 e8 00 00 00 03 	movl   $0x3,0xe8(%rdi)
   2dc67:	00 00 00 
   2dc6a:	b8 03 00 00 00       	mov    $0x3,%eax
   2dc6f:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2dc76:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2dc7d:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2dc84:	01 00 00 00 
   2dc88:	48 83 c4 18          	add    $0x18,%rsp
   2dc8c:	5b                   	pop    %rbx
   2dc8d:	5d                   	pop    %rbp
   2dc8e:	41 5c                	pop    %r12
   2dc90:	41 5d                	pop    %r13
   2dc92:	41 5e                	pop    %r14
   2dc94:	41 5f                	pop    %r15
   2dc96:	c3                   	retq   
   2dc97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2dc9e:	00 00 
   2dca0:	49 89 c7             	mov    %rax,%r15
   2dca3:	e9 43 fd ff ff       	jmpq   2d9eb <next_token+0x4b>
   2dca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2dcaf:	00 
   2dcb0:	49 8d 47 01          	lea    0x1(%r15),%rax
   2dcb4:	48 39 c2             	cmp    %rax,%rdx
   2dcb7:	0f 86 f3 00 00 00    	jbe    2ddb0 <next_token+0x410>
   2dcbd:	41 80 7f 01 0a       	cmpb   $0xa,0x1(%r15)
   2dcc2:	75 15                	jne    2dcd9 <next_token+0x339>
   2dcc4:	e9 e7 00 00 00       	jmpq   2ddb0 <next_token+0x410>
   2dcc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2dcd0:	80 38 0a             	cmpb   $0xa,(%rax)
   2dcd3:	0f 84 d7 00 00 00    	je     2ddb0 <next_token+0x410>
   2dcd9:	48 83 c0 01          	add    $0x1,%rax
   2dcdd:	48 39 c2             	cmp    %rax,%rdx
   2dce0:	75 ee                	jne    2dcd0 <next_token+0x330>
   2dce2:	49 89 d7             	mov    %rdx,%r15
   2dce5:	e9 0a fd ff ff       	jmpq   2d9f4 <next_token+0x54>
   2dcea:	b9 03 00 00 00       	mov    $0x3,%ecx
   2dcef:	48 8d 3d 39 55 01 00 	lea    0x15539(%rip),%rdi        # 4322f <__PRETTY_FUNCTION__.11024+0xef>
   2dcf6:	4c 89 fe             	mov    %r15,%rsi
   2dcf9:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   2dcfb:	0f 97 c2             	seta   %dl
   2dcfe:	80 da 00             	sbb    $0x0,%dl
   2dd01:	84 d2                	test   %dl,%dl
   2dd03:	0f 84 af 00 00 00    	je     2ddb8 <next_token+0x418>
   2dd09:	3c 27                	cmp    $0x27,%al
   2dd0b:	0f 84 2d 04 00 00    	je     2e13e <next_token+0x79e>
   2dd11:	3c 22                	cmp    $0x22,%al
   2dd13:	0f 85 61 03 00 00    	jne    2e07a <next_token+0x6da>
   2dd19:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
   2dd1e:	4d 8d 77 01          	lea    0x1(%r15),%r14
   2dd22:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   2dd29:	00 
   2dd2a:	48 8d 2d 02 55 01 00 	lea    0x15502(%rip),%rbp        # 43233 <__PRETTY_FUNCTION__.11024+0xf3>
   2dd31:	84 c0                	test   %al,%al
   2dd33:	74 5f                	je     2dd94 <next_token+0x3f4>
   2dd35:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2dd39:	85 c9                	test   %ecx,%ecx
   2dd3b:	74 27                	je     2dd64 <next_token+0x3c4>
   2dd3d:	e9 15 05 00 00       	jmpq   2e257 <next_token+0x8b7>
   2dd42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2dd48:	3c 0a                	cmp    $0xa,%al
   2dd4a:	74 48                	je     2dd94 <next_token+0x3f4>
   2dd4c:	49 8d 56 01          	lea    0x1(%r14),%rdx
   2dd50:	3c 22                	cmp    $0x22,%al
   2dd52:	0f 84 ed 02 00 00    	je     2e045 <next_token+0x6a5>
   2dd58:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
   2dd5d:	84 c0                	test   %al,%al
   2dd5f:	74 33                	je     2dd94 <next_token+0x3f4>
   2dd61:	49 89 d6             	mov    %rdx,%r14
   2dd64:	3c 5c                	cmp    $0x5c,%al
   2dd66:	75 e0                	jne    2dd48 <next_token+0x3a8>
   2dd68:	45 0f b6 66 01       	movzbl 0x1(%r14),%r12d
   2dd6d:	45 84 e4             	test   %r12b,%r12b
   2dd70:	74 22                	je     2dd94 <next_token+0x3f4>
   2dd72:	41 0f be f4          	movsbl %r12b,%esi
   2dd76:	48 89 ef             	mov    %rbp,%rdi
   2dd79:	e8 32 21 fe ff       	callq  feb0 <strchr@plt>
   2dd7e:	48 85 c0             	test   %rax,%rax
   2dd81:	0f 84 49 01 00 00    	je     2ded0 <next_token+0x530>
   2dd87:	41 0f b6 46 02       	movzbl 0x2(%r14),%eax
   2dd8c:	49 8d 56 02          	lea    0x2(%r14),%rdx
   2dd90:	84 c0                	test   %al,%al
   2dd92:	75 cd                	jne    2dd61 <next_token+0x3c1>
   2dd94:	48 8d 15 25 55 01 00 	lea    0x15525(%rip),%rdx        # 432c0 <__PRETTY_FUNCTION__.11024+0x180>
   2dd9b:	44 89 ee             	mov    %r13d,%esi
   2dd9e:	48 89 df             	mov    %rbx,%rdi
   2dda1:	e8 ba fb ff ff       	callq  2d960 <e_syntax_error>
   2dda6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ddad:	00 00 00 
   2ddb0:	49 89 c7             	mov    %rax,%r15
   2ddb3:	e9 3c fc ff ff       	jmpq   2d9f4 <next_token+0x54>
   2ddb8:	45 0f b6 67 03       	movzbl 0x3(%r15),%r12d
   2ddbd:	4d 8d 77 03          	lea    0x3(%r15),%r14
   2ddc1:	45 84 e4             	test   %r12b,%r12b
   2ddc4:	0f 84 9c 04 00 00    	je     2e266 <next_token+0x8c6>
   2ddca:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   2ddd1:	00 
   2ddd2:	31 ed                	xor    %ebp,%ebp
   2ddd4:	45 31 d2             	xor    %r10d,%r10d
   2ddd7:	eb 44                	jmp    2de1d <next_token+0x47d>
   2ddd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2dde0:	41 0f be f4          	movsbl %r12b,%esi
   2dde4:	48 8d 3d 48 54 01 00 	lea    0x15448(%rip),%rdi        # 43233 <__PRETTY_FUNCTION__.11024+0xf3>
   2ddeb:	e8 c0 20 fe ff       	callq  feb0 <strchr@plt>
   2ddf0:	48 85 c0             	test   %rax,%rax
   2ddf3:	0f 84 97 00 00 00    	je     2de90 <next_token+0x4f0>
   2ddf9:	83 7c 24 08 02       	cmpl   $0x2,0x8(%rsp)
   2ddfe:	0f 9e c0             	setle  %al
   2de01:	45 31 d2             	xor    %r10d,%r10d
   2de04:	49 83 c6 01          	add    $0x1,%r14
   2de08:	45 0f b6 26          	movzbl (%r14),%r12d
   2de0c:	45 84 e4             	test   %r12b,%r12b
   2de0f:	0f 84 32 01 00 00    	je     2df47 <next_token+0x5a7>
   2de15:	84 c0                	test   %al,%al
   2de17:	0f 84 2a 01 00 00    	je     2df47 <next_token+0x5a7>
   2de1d:	45 85 d2             	test   %r10d,%r10d
   2de20:	75 be                	jne    2dde0 <next_token+0x440>
   2de22:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
   2de27:	85 ed                	test   %ebp,%ebp
   2de29:	74 35                	je     2de60 <next_token+0x4c0>
   2de2b:	41 0f be f4          	movsbl %r12b,%esi
   2de2f:	48 8d 3d 19 54 01 00 	lea    0x15419(%rip),%rdi        # 4324f <__PRETTY_FUNCTION__.11024+0x10f>
   2de36:	83 ed 01             	sub    $0x1,%ebp
   2de39:	e8 72 20 fe ff       	callq  feb0 <strchr@plt>
   2de3e:	48 85 c0             	test   %rax,%rax
   2de41:	0f 84 f6 03 00 00    	je     2e23d <next_token+0x89d>
   2de47:	83 7c 24 08 02       	cmpl   $0x2,0x8(%rsp)
   2de4c:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
   2de51:	0f 9e c0             	setle  %al
   2de54:	eb ae                	jmp    2de04 <next_token+0x464>
   2de56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2de5d:	00 00 00 
   2de60:	41 80 fc 5c          	cmp    $0x5c,%r12b
   2de64:	0f 84 20 01 00 00    	je     2df8a <next_token+0x5ea>
   2de6a:	41 80 fc 22          	cmp    $0x22,%r12b
   2de6e:	0f 84 bc 00 00 00    	je     2df30 <next_token+0x590>
   2de74:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   2de7b:	00 
   2de7c:	41 89 ea             	mov    %ebp,%r10d
   2de7f:	b8 01 00 00 00       	mov    $0x1,%eax
   2de84:	e9 7b ff ff ff       	jmpq   2de04 <next_token+0x464>
   2de89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2de90:	41 80 fc 75          	cmp    $0x75,%r12b
   2de94:	0f 84 36 01 00 00    	je     2dfd0 <next_token+0x630>
   2de9a:	41 80 fc 55          	cmp    $0x55,%r12b
   2de9e:	0f 84 41 01 00 00    	je     2dfe5 <next_token+0x645>
   2dea4:	48 8d 35 90 53 01 00 	lea    0x15390(%rip),%rsi        # 4323b <__PRETTY_FUNCTION__.11024+0xfb>
   2deab:	4c 89 f7             	mov    %r14,%rdi
   2deae:	e8 4d 22 fe ff       	callq  10100 <strspn@plt>
   2deb3:	41 80 3c 06 0a       	cmpb   $0xa,(%r14,%rax,1)
   2deb8:	0f 84 3b ff ff ff    	je     2ddf9 <next_token+0x459>
   2debe:	48 8d 15 7a 53 01 00 	lea    0x1537a(%rip),%rdx        # 4323f <__PRETTY_FUNCTION__.11024+0xff>
   2dec5:	44 89 ee             	mov    %r13d,%esi
   2dec8:	48 89 df             	mov    %rbx,%rdi
   2decb:	e8 90 fa ff ff       	callq  2d960 <e_syntax_error>
   2ded0:	41 80 fc 75          	cmp    $0x75,%r12b
   2ded4:	0f 84 20 01 00 00    	je     2dffa <next_token+0x65a>
   2deda:	41 80 fc 55          	cmp    $0x55,%r12b
   2dede:	75 de                	jne    2debe <next_token+0x51e>
   2dee0:	41 0f b6 46 02       	movzbl 0x2(%r14),%eax
   2dee5:	4d 8d 66 02          	lea    0x2(%r14),%r12
   2dee9:	84 c0                	test   %al,%al
   2deeb:	0f 84 a3 fe ff ff    	je     2dd94 <next_token+0x3f4>
   2def1:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%rsp)
   2def8:	00 
   2def9:	0f be f0             	movsbl %al,%esi
   2defc:	48 8d 3d 4c 53 01 00 	lea    0x1534c(%rip),%rdi        # 4324f <__PRETTY_FUNCTION__.11024+0x10f>
   2df03:	e8 a8 1f fe ff       	callq  feb0 <strchr@plt>
   2df08:	48 85 c0             	test   %rax,%rax
   2df0b:	0f 84 2c 03 00 00    	je     2e23d <next_token+0x89d>
   2df11:	41 0f b6 44 24 01    	movzbl 0x1(%r12),%eax
   2df17:	4d 8d 74 24 01       	lea    0x1(%r12),%r14
   2df1c:	84 c0                	test   %al,%al
   2df1e:	0f 85 11 fe ff ff    	jne    2dd35 <next_token+0x395>
   2df24:	e9 6b fe ff ff       	jmpq   2dd94 <next_token+0x3f4>
   2df29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2df30:	83 44 24 08 01       	addl   $0x1,0x8(%rsp)
   2df35:	8b 44 24 08          	mov    0x8(%rsp),%eax
   2df39:	41 89 ea             	mov    %ebp,%r10d
   2df3c:	83 f8 02             	cmp    $0x2,%eax
   2df3f:	0f 9e c0             	setle  %al
   2df42:	e9 bd fe ff ff       	jmpq   2de04 <next_token+0x464>
   2df47:	83 7c 24 08 03       	cmpl   $0x3,0x8(%rsp)
   2df4c:	0f 85 14 03 00 00    	jne    2e266 <next_token+0x8c6>
   2df52:	4c 89 f1             	mov    %r14,%rcx
   2df55:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2df5c:	b8 09 00 00 00       	mov    $0x9,%eax
   2df61:	4c 29 f9             	sub    %r15,%rcx
   2df64:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2df6b:	00 00 00 
   2df6e:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2df75:	89 8b f8 00 00 00    	mov    %ecx,0xf8(%rbx)
   2df7b:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2df82:	00 00 00 
   2df85:	e9 db fa ff ff       	jmpq   2da65 <next_token+0xc5>
   2df8a:	83 7c 24 08 02       	cmpl   $0x2,0x8(%rsp)
   2df8f:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   2df95:	0f 9e c0             	setle  %al
   2df98:	e9 67 fe ff ff       	jmpq   2de04 <next_token+0x464>
   2df9d:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   2dfa4:	00 00 00 
   2dfa7:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2dfae:	48 89 87 f8 00 00 00 	mov    %rax,0xf8(%rdi)
   2dfb5:	b8 06 00 00 00       	mov    $0x6,%eax
   2dfba:	c7 87 e8 00 00 00 06 	movl   $0x6,0xe8(%rdi)
   2dfc1:	00 00 00 
   2dfc4:	48 89 97 f0 00 00 00 	mov    %rdx,0xf0(%rdi)
   2dfcb:	e9 95 fa ff ff       	jmpq   2da65 <next_token+0xc5>
   2dfd0:	83 7c 24 08 02       	cmpl   $0x2,0x8(%rsp)
   2dfd5:	bd 04 00 00 00       	mov    $0x4,%ebp
   2dfda:	0f 9e c0             	setle  %al
   2dfdd:	45 31 d2             	xor    %r10d,%r10d
   2dfe0:	e9 1f fe ff ff       	jmpq   2de04 <next_token+0x464>
   2dfe5:	83 7c 24 08 02       	cmpl   $0x2,0x8(%rsp)
   2dfea:	bd 08 00 00 00       	mov    $0x8,%ebp
   2dfef:	0f 9e c0             	setle  %al
   2dff2:	45 31 d2             	xor    %r10d,%r10d
   2dff5:	e9 0a fe ff ff       	jmpq   2de04 <next_token+0x464>
   2dffa:	41 0f b6 46 02       	movzbl 0x2(%r14),%eax
   2dfff:	4d 8d 66 02          	lea    0x2(%r14),%r12
   2e003:	84 c0                	test   %al,%al
   2e005:	0f 84 89 fd ff ff    	je     2dd94 <next_token+0x3f4>
   2e00b:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%rsp)
   2e012:	00 
   2e013:	e9 e1 fe ff ff       	jmpq   2def9 <next_token+0x559>
   2e018:	c7 87 e8 00 00 00 01 	movl   $0x1,0xe8(%rdi)
   2e01f:	00 00 00 
   2e022:	b8 01 00 00 00       	mov    $0x1,%eax
   2e027:	44 89 af ec 00 00 00 	mov    %r13d,0xec(%rdi)
   2e02e:	4c 89 bf f0 00 00 00 	mov    %r15,0xf0(%rdi)
   2e035:	48 c7 87 f8 00 00 00 	movq   $0x1,0xf8(%rdi)
   2e03c:	01 00 00 00 
   2e040:	e9 20 fa ff ff       	jmpq   2da65 <next_token+0xc5>
   2e045:	4c 29 fa             	sub    %r15,%rdx
   2e048:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2e04f:	b8 09 00 00 00       	mov    $0x9,%eax
   2e054:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2e05b:	00 00 00 
   2e05e:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2e065:	89 93 f8 00 00 00    	mov    %edx,0xf8(%rbx)
   2e06b:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2e072:	00 00 00 
   2e075:	e9 eb f9 ff ff       	jmpq   2da65 <next_token+0xc5>
   2e07a:	31 c9                	xor    %ecx,%ecx
   2e07c:	31 d2                	xor    %edx,%edx
   2e07e:	31 f6                	xor    %esi,%esi
   2e080:	4c 89 ff             	mov    %r15,%rdi
   2e083:	e8 98 f5 ff ff       	callq  2d620 <scan_date>
   2e088:	85 c0                	test   %eax,%eax
   2e08a:	0f 84 24 01 00 00    	je     2e1b4 <next_token+0x814>
   2e090:	31 c9                	xor    %ecx,%ecx
   2e092:	31 d2                	xor    %edx,%edx
   2e094:	31 f6                	xor    %esi,%esi
   2e096:	4c 89 ff             	mov    %r15,%rdi
   2e099:	e8 22 f6 ff ff       	callq  2d6c0 <scan_time>
   2e09e:	85 c0                	test   %eax,%eax
   2e0a0:	0f 84 0e 01 00 00    	je     2e1b4 <next_token+0x814>
   2e0a6:	41 0f b6 07          	movzbl (%r15),%eax
   2e0aa:	3c 0a                	cmp    $0xa,%al
   2e0ac:	0f 84 9d 01 00 00    	je     2e24f <next_token+0x8af>
   2e0b2:	84 c0                	test   %al,%al
   2e0b4:	0f 84 95 01 00 00    	je     2e24f <next_token+0x8af>
   2e0ba:	0f be f0             	movsbl %al,%esi
   2e0bd:	83 e5 01             	and    $0x1,%ebp
   2e0c0:	4d 89 fe             	mov    %r15,%r14
   2e0c3:	83 fe 2e             	cmp    $0x2e,%esi
   2e0c6:	75 05                	jne    2e0cd <next_token+0x72d>
   2e0c8:	40 84 ed             	test   %bpl,%bpl
   2e0cb:	75 3b                	jne    2e108 <next_token+0x768>
   2e0cd:	4c 8d 25 dd 51 01 00 	lea    0x151dd(%rip),%r12        # 432b1 <__PRETTY_FUNCTION__.11024+0x171>
   2e0d4:	83 e0 df             	and    $0xffffffdf,%eax
   2e0d7:	83 e8 41             	sub    $0x41,%eax
   2e0da:	3c 19                	cmp    $0x19,%al
   2e0dc:	76 0d                	jbe    2e0eb <next_token+0x74b>
   2e0de:	4c 89 e7             	mov    %r12,%rdi
   2e0e1:	e8 ca 1d fe ff       	callq  feb0 <strchr@plt>
   2e0e6:	48 85 c0             	test   %rax,%rax
   2e0e9:	74 1d                	je     2e108 <next_token+0x768>
   2e0eb:	49 83 c6 01          	add    $0x1,%r14
   2e0ef:	41 0f b6 06          	movzbl (%r14),%eax
   2e0f3:	84 c0                	test   %al,%al
   2e0f5:	74 11                	je     2e108 <next_token+0x768>
   2e0f7:	3c 0a                	cmp    $0xa,%al
   2e0f9:	74 0d                	je     2e108 <next_token+0x768>
   2e0fb:	0f be f0             	movsbl %al,%esi
   2e0fe:	83 fe 2e             	cmp    $0x2e,%esi
   2e101:	75 d1                	jne    2e0d4 <next_token+0x734>
   2e103:	40 84 ed             	test   %bpl,%bpl
   2e106:	74 cc                	je     2e0d4 <next_token+0x734>
   2e108:	4d 29 fe             	sub    %r15,%r14
   2e10b:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2e112:	b8 09 00 00 00       	mov    $0x9,%eax
   2e117:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2e11e:	00 00 00 
   2e121:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2e128:	44 89 b3 f8 00 00 00 	mov    %r14d,0xf8(%rbx)
   2e12f:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2e136:	00 00 00 
   2e139:	e9 27 f9 ff ff       	jmpq   2da65 <next_token+0xc5>
   2e13e:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
   2e143:	49 8d 57 01          	lea    0x1(%r15),%rdx
   2e147:	3c 0a                	cmp    $0xa,%al
   2e149:	0f 84 d4 00 00 00    	je     2e223 <next_token+0x883>
   2e14f:	84 c0                	test   %al,%al
   2e151:	75 24                	jne    2e177 <next_token+0x7d7>
   2e153:	e9 cb 00 00 00       	jmpq   2e223 <next_token+0x883>
   2e158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e15f:	00 
   2e160:	48 83 c2 01          	add    $0x1,%rdx
   2e164:	0f b6 02             	movzbl (%rdx),%eax
   2e167:	84 c0                	test   %al,%al
   2e169:	0f 84 b4 00 00 00    	je     2e223 <next_token+0x883>
   2e16f:	3c 0a                	cmp    $0xa,%al
   2e171:	0f 84 ac 00 00 00    	je     2e223 <next_token+0x883>
   2e177:	3c 27                	cmp    $0x27,%al
   2e179:	75 e5                	jne    2e160 <next_token+0x7c0>
   2e17b:	48 8d 42 01          	lea    0x1(%rdx),%rax
   2e17f:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2e186:	4c 29 f8             	sub    %r15,%rax
   2e189:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2e190:	00 00 00 
   2e193:	89 83 f8 00 00 00    	mov    %eax,0xf8(%rbx)
   2e199:	b8 09 00 00 00       	mov    $0x9,%eax
   2e19e:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2e1a5:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2e1ac:	00 00 00 
   2e1af:	e9 b1 f8 ff ff       	jmpq   2da65 <next_token+0xc5>
   2e1b4:	e8 87 18 fe ff       	callq  fa40 <__ctype_toupper_loc@plt>
   2e1b9:	4c 89 fd             	mov    %r15,%rbp
   2e1bc:	4c 8d 25 dc 50 01 00 	lea    0x150dc(%rip),%r12        # 4329f <__PRETTY_FUNCTION__.11024+0x15f>
   2e1c3:	4c 8b 30             	mov    (%rax),%r14
   2e1c6:	eb 04                	jmp    2e1cc <next_token+0x82c>
   2e1c8:	48 83 c5 01          	add    $0x1,%rbp
   2e1cc:	48 0f be 45 00       	movsbq 0x0(%rbp),%rax
   2e1d1:	4c 89 e7             	mov    %r12,%rdi
   2e1d4:	41 8b 34 86          	mov    (%r14,%rax,4),%esi
   2e1d8:	e8 d3 1c fe ff       	callq  feb0 <strchr@plt>
   2e1dd:	48 85 c0             	test   %rax,%rax
   2e1e0:	75 e6                	jne    2e1c8 <next_token+0x828>
   2e1e2:	eb 04                	jmp    2e1e8 <next_token+0x848>
   2e1e4:	48 83 ed 01          	sub    $0x1,%rbp
   2e1e8:	80 7d ff 20          	cmpb   $0x20,-0x1(%rbp)
   2e1ec:	74 f6                	je     2e1e4 <next_token+0x844>
   2e1ee:	4c 29 fd             	sub    %r15,%rbp
   2e1f1:	44 89 ab ec 00 00 00 	mov    %r13d,0xec(%rbx)
   2e1f8:	b8 09 00 00 00       	mov    $0x9,%eax
   2e1fd:	c7 83 e8 00 00 00 09 	movl   $0x9,0xe8(%rbx)
   2e204:	00 00 00 
   2e207:	4c 89 bb f0 00 00 00 	mov    %r15,0xf0(%rbx)
   2e20e:	89 ab f8 00 00 00    	mov    %ebp,0xf8(%rbx)
   2e214:	c7 83 fc 00 00 00 00 	movl   $0x0,0xfc(%rbx)
   2e21b:	00 00 00 
   2e21e:	e9 42 f8 ff ff       	jmpq   2da65 <next_token+0xc5>
   2e223:	3c 27                	cmp    $0x27,%al
   2e225:	0f 84 50 ff ff ff    	je     2e17b <next_token+0x7db>
   2e22b:	48 8d 15 58 50 01 00 	lea    0x15058(%rip),%rdx        # 4328a <__PRETTY_FUNCTION__.11024+0x14a>
   2e232:	44 89 ee             	mov    %r13d,%esi
   2e235:	48 89 df             	mov    %rbx,%rdi
   2e238:	e8 23 f7 ff ff       	callq  2d960 <e_syntax_error>
   2e23d:	48 8d 15 1c 50 01 00 	lea    0x1501c(%rip),%rdx        # 43260 <__PRETTY_FUNCTION__.11024+0x120>
   2e244:	44 89 ee             	mov    %r13d,%esi
   2e247:	48 89 df             	mov    %rbx,%rdi
   2e24a:	e8 11 f7 ff ff       	callq  2d960 <e_syntax_error>
   2e24f:	4d 89 fe             	mov    %r15,%r14
   2e252:	e9 b1 fe ff ff       	jmpq   2e108 <next_token+0x768>
   2e257:	83 e9 01             	sub    $0x1,%ecx
   2e25a:	4d 89 f4             	mov    %r14,%r12
   2e25d:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2e261:	e9 93 fc ff ff       	jmpq   2def9 <next_token+0x559>
   2e266:	48 8d 15 03 50 01 00 	lea    0x15003(%rip),%rdx        # 43270 <__PRETTY_FUNCTION__.11024+0x130>
   2e26d:	44 89 ee             	mov    %r13d,%esi
   2e270:	48 89 df             	mov    %rbx,%rdi
   2e273:	e8 e8 f6 ff ff       	callq  2d960 <e_syntax_error>
   2e278:	48 8d 15 94 4f 01 00 	lea    0x14f94(%rip),%rdx        # 43213 <__PRETTY_FUNCTION__.11024+0xd3>
   2e27f:	44 89 ee             	mov    %r13d,%esi
   2e282:	48 89 df             	mov    %rbx,%rdi
   2e285:	e8 d6 f6 ff ff       	callq  2d960 <e_syntax_error>

000000000002e28a <.annobin_e_internal_error.start>:
   2e28a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002e290 <e_internal_error>:
   2e290:	53                   	push   %rbx
   2e291:	49 89 f1             	mov    %rsi,%r9
   2e294:	48 89 fb             	mov    %rdi,%rbx
   2e297:	48 63 77 18          	movslq 0x18(%rdi),%rsi
   2e29b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2e29f:	4c 8d 05 2d 50 01 00 	lea    0x1502d(%rip),%r8        # 432d3 <__PRETTY_FUNCTION__.11024+0x193>
   2e2a6:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2e2ad:	31 c0                	xor    %eax,%eax
   2e2af:	ba 01 00 00 00       	mov    $0x1,%edx
   2e2b4:	e8 e7 17 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2e2b9:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   2e2bd:	be 01 00 00 00       	mov    $0x1,%esi
   2e2c2:	e8 e9 23 fe ff       	callq  106b0 <__longjmp_chk@plt>

000000000002e2c7 <.annobin_e_internal_error.end>:
   2e2c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2e2ce:	00 00 

000000000002e2d0 <toml_set_memutil>:
   2e2d0:	f3 0f 1e fa          	endbr64 
   2e2d4:	48 89 3d dd 80 22 00 	mov    %rdi,0x2280dd(%rip)        # 2563b8 <malloc@GLIBC_2.2.5>
   2e2db:	48 89 35 ce 80 22 00 	mov    %rsi,0x2280ce(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2e2e2:	48 89 15 bf 80 22 00 	mov    %rdx,0x2280bf(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2e2e9:	48 89 0d b0 80 22 00 	mov    %rcx,0x2280b0(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2e2f0:	c3                   	retq   

000000000002e2f1 <.annobin_STRDUP.start>:
   2e2f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2e2f8:	00 00 00 00 
   2e2fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002e300 <STRDUP>:
   2e300:	f3 0f 1e fa          	endbr64 
   2e304:	55                   	push   %rbp
   2e305:	48 89 fd             	mov    %rdi,%rbp
   2e308:	53                   	push   %rbx
   2e309:	48 83 ec 08          	sub    $0x8,%rsp
   2e30d:	e8 0e 1b fe ff       	callq  fe20 <strlen@plt>
   2e312:	8d 78 01             	lea    0x1(%rax),%edi
   2e315:	48 89 c3             	mov    %rax,%rbx
   2e318:	48 63 ff             	movslq %edi,%rdi
   2e31b:	ff 15 97 80 22 00    	callq  *0x228097(%rip)        # 2563b8 <malloc@GLIBC_2.2.5>
   2e321:	48 89 c1             	mov    %rax,%rcx
   2e324:	48 85 c0             	test   %rax,%rax
   2e327:	74 18                	je     2e341 <STRDUP+0x41>
   2e329:	48 63 db             	movslq %ebx,%rbx
  return __builtin___memcpy_chk (__dest, __src, __len,
   2e32c:	48 89 ee             	mov    %rbp,%rsi
   2e32f:	48 89 c7             	mov    %rax,%rdi
   2e332:	48 89 da             	mov    %rbx,%rdx
   2e335:	e8 d6 1f fe ff       	callq  10310 <memcpy@plt>
   2e33a:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
   2e33e:	48 89 c1             	mov    %rax,%rcx
   2e341:	48 83 c4 08          	add    $0x8,%rsp
   2e345:	48 89 c8             	mov    %rcx,%rax
   2e348:	5b                   	pop    %rbx
   2e349:	5d                   	pop    %rbp
   2e34a:	c3                   	retq   

000000000002e34b <.annobin_STRDUP.end>:
   2e34b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002e350 <STRNDUP>:
   2e350:	f3 0f 1e fa          	endbr64 
   2e354:	55                   	push   %rbp
   2e355:	48 89 fd             	mov    %rdi,%rbp
   2e358:	53                   	push   %rbx
   2e359:	48 83 ec 08          	sub    $0x8,%rsp
   2e35d:	e8 0e 1d fe ff       	callq  10070 <strnlen@plt>
   2e362:	48 89 c3             	mov    %rax,%rbx
   2e365:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2e369:	ff 15 49 80 22 00    	callq  *0x228049(%rip)        # 2563b8 <malloc@GLIBC_2.2.5>
   2e36f:	48 89 c1             	mov    %rax,%rcx
   2e372:	48 85 c0             	test   %rax,%rax
   2e375:	74 15                	je     2e38c <STRNDUP+0x3c>
   2e377:	48 89 da             	mov    %rbx,%rdx
   2e37a:	48 89 ee             	mov    %rbp,%rsi
   2e37d:	48 89 c7             	mov    %rax,%rdi
   2e380:	e8 8b 1f fe ff       	callq  10310 <memcpy@plt>
   2e385:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
   2e389:	48 89 c1             	mov    %rax,%rcx
   2e38c:	48 83 c4 08          	add    $0x8,%rsp
   2e390:	48 89 c8             	mov    %rcx,%rax
   2e393:	5b                   	pop    %rbx
   2e394:	5d                   	pop    %rbp
   2e395:	c3                   	retq   

000000000002e396 <.annobin_STRNDUP.end>:
   2e396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e39d:	00 00 00 

000000000002e3a0 <toml_utf8_to_ucs>:
   2e3a0:	f3 0f 1e fa          	endbr64 
   2e3a4:	0f b6 07             	movzbl (%rdi),%eax
   2e3a7:	41 89 c2             	mov    %eax,%r10d
   2e3aa:	48 89 c1             	mov    %rax,%rcx
   2e3ad:	41 c1 ea 07          	shr    $0x7,%r10d
   2e3b1:	75 15                	jne    2e3c8 <toml_utf8_to_ucs+0x28>
   2e3b3:	85 f6                	test   %esi,%esi
   2e3b5:	0f 8e d5 00 00 00    	jle    2e490 <toml_utf8_to_ucs+0xf0>
   2e3bb:	48 89 02             	mov    %rax,(%rdx)
   2e3be:	b8 01 00 00 00       	mov    $0x1,%eax
   2e3c3:	c3                   	retq   
   2e3c4:	0f 1f 40 00          	nopl   0x0(%rax)
   2e3c8:	41 89 c0             	mov    %eax,%r8d
   2e3cb:	41 c1 e8 05          	shr    $0x5,%r8d
   2e3cf:	41 83 f8 06          	cmp    $0x6,%r8d
   2e3d3:	0f 84 c7 00 00 00    	je     2e4a0 <toml_utf8_to_ucs+0x100>
   2e3d9:	41 89 c0             	mov    %eax,%r8d
   2e3dc:	41 c1 e8 04          	shr    $0x4,%r8d
   2e3e0:	41 83 f8 0e          	cmp    $0xe,%r8d
   2e3e4:	0f 84 e6 00 00 00    	je     2e4d0 <toml_utf8_to_ucs+0x130>
   2e3ea:	41 89 c1             	mov    %eax,%r9d
   2e3ed:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   2e3f1:	41 c1 e9 03          	shr    $0x3,%r9d
   2e3f5:	41 83 f9 1e          	cmp    $0x1e,%r9d
   2e3f9:	74 55                	je     2e450 <toml_utf8_to_ucs+0xb0>
   2e3fb:	41 89 c1             	mov    %eax,%r9d
   2e3fe:	41 c1 e9 02          	shr    $0x2,%r9d
   2e402:	41 83 f9 3e          	cmp    $0x3e,%r9d
   2e406:	0f 84 14 01 00 00    	je     2e520 <toml_utf8_to_ucs+0x180>
   2e40c:	d1 e8                	shr    %eax
   2e40e:	83 f8 7e             	cmp    $0x7e,%eax
   2e411:	75 7d                	jne    2e490 <toml_utf8_to_ucs+0xf0>
   2e413:	83 fe 05             	cmp    $0x5,%esi
   2e416:	7e 78                	jle    2e490 <toml_utf8_to_ucs+0xf0>
   2e418:	83 e1 01             	and    $0x1,%ecx
   2e41b:	48 83 c7 06          	add    $0x6,%rdi
   2e41f:	49 83 c0 01          	add    $0x1,%r8
   2e423:	41 0f b6 70 ff       	movzbl -0x1(%r8),%esi
   2e428:	89 f0                	mov    %esi,%eax
   2e42a:	c1 ee 06             	shr    $0x6,%esi
   2e42d:	83 fe 02             	cmp    $0x2,%esi
   2e430:	75 5e                	jne    2e490 <toml_utf8_to_ucs+0xf0>
   2e432:	48 c1 e1 06          	shl    $0x6,%rcx
   2e436:	83 e0 3f             	and    $0x3f,%eax
   2e439:	48 09 c1             	or     %rax,%rcx
   2e43c:	4c 39 c7             	cmp    %r8,%rdi
   2e43f:	75 de                	jne    2e41f <toml_utf8_to_ucs+0x7f>
   2e441:	48 89 0a             	mov    %rcx,(%rdx)
   2e444:	b8 06 00 00 00       	mov    $0x6,%eax
   2e449:	c3                   	retq   
   2e44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2e450:	83 fe 03             	cmp    $0x3,%esi
   2e453:	7e 3b                	jle    2e490 <toml_utf8_to_ucs+0xf0>
   2e455:	83 e1 07             	and    $0x7,%ecx
   2e458:	48 83 c7 04          	add    $0x4,%rdi
   2e45c:	49 83 c0 01          	add    $0x1,%r8
   2e460:	41 0f b6 70 ff       	movzbl -0x1(%r8),%esi
   2e465:	89 f0                	mov    %esi,%eax
   2e467:	c1 ee 06             	shr    $0x6,%esi
   2e46a:	83 fe 02             	cmp    $0x2,%esi
   2e46d:	75 21                	jne    2e490 <toml_utf8_to_ucs+0xf0>
   2e46f:	48 c1 e1 06          	shl    $0x6,%rcx
   2e473:	83 e0 3f             	and    $0x3f,%eax
   2e476:	48 09 c1             	or     %rax,%rcx
   2e479:	4c 39 c7             	cmp    %r8,%rdi
   2e47c:	75 de                	jne    2e45c <toml_utf8_to_ucs+0xbc>
   2e47e:	48 89 0a             	mov    %rcx,(%rdx)
   2e481:	b8 04 00 00 00       	mov    $0x4,%eax
   2e486:	c3                   	retq   
   2e487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2e48e:	00 00 
   2e490:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e495:	c3                   	retq   
   2e496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e49d:	00 00 00 
   2e4a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e4a5:	83 fe 01             	cmp    $0x1,%esi
   2e4a8:	7e eb                	jle    2e495 <toml_utf8_to_ucs+0xf5>
   2e4aa:	0f b6 7f 01          	movzbl 0x1(%rdi),%edi
   2e4ae:	83 e1 1f             	and    $0x1f,%ecx
   2e4b1:	89 fe                	mov    %edi,%esi
   2e4b3:	c1 ef 06             	shr    $0x6,%edi
   2e4b6:	83 ff 02             	cmp    $0x2,%edi
   2e4b9:	75 da                	jne    2e495 <toml_utf8_to_ucs+0xf5>
   2e4bb:	48 c1 e1 06          	shl    $0x6,%rcx
   2e4bf:	83 e6 3f             	and    $0x3f,%esi
   2e4c2:	b8 02 00 00 00       	mov    $0x2,%eax
   2e4c7:	48 09 f1             	or     %rsi,%rcx
   2e4ca:	48 89 0a             	mov    %rcx,(%rdx)
   2e4cd:	c3                   	retq   
   2e4ce:	66 90                	xchg   %ax,%ax
   2e4d0:	83 fe 02             	cmp    $0x2,%esi
   2e4d3:	7e bb                	jle    2e490 <toml_utf8_to_ucs+0xf0>
   2e4d5:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   2e4da:	83 e1 0f             	and    $0xf,%ecx
   2e4dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e4e2:	44 89 c6             	mov    %r8d,%esi
   2e4e5:	41 c1 e8 06          	shr    $0x6,%r8d
   2e4e9:	41 83 f8 02          	cmp    $0x2,%r8d
   2e4ed:	75 a6                	jne    2e495 <toml_utf8_to_ucs+0xf5>
   2e4ef:	0f b6 7f 02          	movzbl 0x2(%rdi),%edi
   2e4f3:	83 e6 3f             	and    $0x3f,%esi
   2e4f6:	48 c1 e1 06          	shl    $0x6,%rcx
   2e4fa:	48 09 f1             	or     %rsi,%rcx
   2e4fd:	89 fe                	mov    %edi,%esi
   2e4ff:	c1 ef 06             	shr    $0x6,%edi
   2e502:	83 ff 02             	cmp    $0x2,%edi
   2e505:	75 8e                	jne    2e495 <toml_utf8_to_ucs+0xf5>
   2e507:	48 c1 e1 06          	shl    $0x6,%rcx
   2e50b:	83 e6 3f             	and    $0x3f,%esi
   2e50e:	b8 03 00 00 00       	mov    $0x3,%eax
   2e513:	48 09 f1             	or     %rsi,%rcx
   2e516:	48 89 0a             	mov    %rcx,(%rdx)
   2e519:	c3                   	retq   
   2e51a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2e520:	83 fe 04             	cmp    $0x4,%esi
   2e523:	0f 8e 67 ff ff ff    	jle    2e490 <toml_utf8_to_ucs+0xf0>
   2e529:	83 e1 03             	and    $0x3,%ecx
   2e52c:	48 83 c7 05          	add    $0x5,%rdi
   2e530:	49 83 c0 01          	add    $0x1,%r8
   2e534:	41 0f b6 70 ff       	movzbl -0x1(%r8),%esi
   2e539:	89 f0                	mov    %esi,%eax
   2e53b:	c1 ee 06             	shr    $0x6,%esi
   2e53e:	83 fe 02             	cmp    $0x2,%esi
   2e541:	0f 85 49 ff ff ff    	jne    2e490 <toml_utf8_to_ucs+0xf0>
   2e547:	48 c1 e1 06          	shl    $0x6,%rcx
   2e54b:	83 e0 3f             	and    $0x3f,%eax
   2e54e:	48 09 c1             	or     %rax,%rcx
   2e551:	4c 39 c7             	cmp    %r8,%rdi
   2e554:	75 da                	jne    2e530 <toml_utf8_to_ucs+0x190>
   2e556:	48 89 0a             	mov    %rcx,(%rdx)
   2e559:	b8 05 00 00 00       	mov    $0x5,%eax
   2e55e:	c3                   	retq   

000000000002e55f <.annobin_toml_ucs_to_utf8.start>:
   2e55f:	90                   	nop

000000000002e560 <toml_ucs_to_utf8>:
   2e560:	f3 0f 1e fa          	endbr64 
   2e564:	48 8d 87 00 28 ff ff 	lea    -0xd800(%rdi),%rax
   2e56b:	48 3d ff 07 00 00    	cmp    $0x7ff,%rax
   2e571:	0f 86 c9 00 00 00    	jbe    2e640 <toml_ucs_to_utf8+0xe0>
   2e577:	48 8d 87 02 00 ff ff 	lea    -0xfffe(%rdi),%rax
   2e57e:	48 83 f8 01          	cmp    $0x1,%rax
   2e582:	0f 86 b8 00 00 00    	jbe    2e640 <toml_ucs_to_utf8+0xe0>
   2e588:	48 85 ff             	test   %rdi,%rdi
   2e58b:	0f 88 af 00 00 00    	js     2e640 <toml_ucs_to_utf8+0xe0>
   2e591:	48 83 ff 7f          	cmp    $0x7f,%rdi
   2e595:	0f 8e b5 00 00 00    	jle    2e650 <toml_ucs_to_utf8+0xf0>
   2e59b:	48 81 ff ff 07 00 00 	cmp    $0x7ff,%rdi
   2e5a2:	0f 8e e8 00 00 00    	jle    2e690 <toml_ucs_to_utf8+0x130>
   2e5a8:	48 81 ff ff ff 00 00 	cmp    $0xffff,%rdi
   2e5af:	0f 8e ab 00 00 00    	jle    2e660 <toml_ucs_to_utf8+0x100>
   2e5b5:	48 81 ff ff ff 1f 00 	cmp    $0x1fffff,%rdi
   2e5bc:	0f 8e ee 00 00 00    	jle    2e6b0 <toml_ucs_to_utf8+0x150>
   2e5c2:	48 81 ff ff ff ff 03 	cmp    $0x3ffffff,%rdi
   2e5c9:	0f 8e 21 01 00 00    	jle    2e6f0 <toml_ucs_to_utf8+0x190>
   2e5cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e5d4:	48 81 ff ff ff ff 7f 	cmp    $0x7fffffff,%rdi
   2e5db:	7f 68                	jg     2e645 <toml_ucs_to_utf8+0xe5>
   2e5dd:	48 89 f8             	mov    %rdi,%rax
   2e5e0:	48 c1 f8 1e          	sar    $0x1e,%rax
   2e5e4:	83 c8 fc             	or     $0xfffffffc,%eax
   2e5e7:	88 06                	mov    %al,(%rsi)
   2e5e9:	48 89 f8             	mov    %rdi,%rax
   2e5ec:	48 c1 f8 18          	sar    $0x18,%rax
   2e5f0:	83 e0 3f             	and    $0x3f,%eax
   2e5f3:	83 c8 80             	or     $0xffffff80,%eax
   2e5f6:	88 46 01             	mov    %al,0x1(%rsi)
   2e5f9:	48 89 f8             	mov    %rdi,%rax
   2e5fc:	48 c1 f8 12          	sar    $0x12,%rax
   2e600:	83 e0 3f             	and    $0x3f,%eax
   2e603:	83 c8 80             	or     $0xffffff80,%eax
   2e606:	88 46 02             	mov    %al,0x2(%rsi)
   2e609:	48 89 f8             	mov    %rdi,%rax
   2e60c:	48 c1 f8 0c          	sar    $0xc,%rax
   2e610:	83 e0 3f             	and    $0x3f,%eax
   2e613:	83 c8 80             	or     $0xffffff80,%eax
   2e616:	88 46 03             	mov    %al,0x3(%rsi)
   2e619:	48 89 f8             	mov    %rdi,%rax
   2e61c:	83 e7 3f             	and    $0x3f,%edi
   2e61f:	48 c1 f8 06          	sar    $0x6,%rax
   2e623:	83 cf 80             	or     $0xffffff80,%edi
   2e626:	83 e0 3f             	and    $0x3f,%eax
   2e629:	40 88 7e 05          	mov    %dil,0x5(%rsi)
   2e62d:	83 c8 80             	or     $0xffffff80,%eax
   2e630:	88 46 04             	mov    %al,0x4(%rsi)
   2e633:	b8 06 00 00 00       	mov    $0x6,%eax
   2e638:	c3                   	retq   
   2e639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e640:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2e645:	c3                   	retq   
   2e646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e64d:	00 00 00 
   2e650:	40 88 3e             	mov    %dil,(%rsi)
   2e653:	b8 01 00 00 00       	mov    $0x1,%eax
   2e658:	c3                   	retq   
   2e659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e660:	48 89 f8             	mov    %rdi,%rax
   2e663:	48 c1 f8 0c          	sar    $0xc,%rax
   2e667:	83 c8 e0             	or     $0xffffffe0,%eax
   2e66a:	88 06                	mov    %al,(%rsi)
   2e66c:	48 89 f8             	mov    %rdi,%rax
   2e66f:	83 e7 3f             	and    $0x3f,%edi
   2e672:	48 c1 f8 06          	sar    $0x6,%rax
   2e676:	83 cf 80             	or     $0xffffff80,%edi
   2e679:	83 e0 3f             	and    $0x3f,%eax
   2e67c:	40 88 7e 02          	mov    %dil,0x2(%rsi)
   2e680:	83 c8 80             	or     $0xffffff80,%eax
   2e683:	88 46 01             	mov    %al,0x1(%rsi)
   2e686:	b8 03 00 00 00       	mov    $0x3,%eax
   2e68b:	c3                   	retq   
   2e68c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e690:	48 89 f8             	mov    %rdi,%rax
   2e693:	83 e7 3f             	and    $0x3f,%edi
   2e696:	48 c1 f8 06          	sar    $0x6,%rax
   2e69a:	83 cf 80             	or     $0xffffff80,%edi
   2e69d:	83 c8 c0             	or     $0xffffffc0,%eax
   2e6a0:	40 88 7e 01          	mov    %dil,0x1(%rsi)
   2e6a4:	88 06                	mov    %al,(%rsi)
   2e6a6:	b8 02 00 00 00       	mov    $0x2,%eax
   2e6ab:	c3                   	retq   
   2e6ac:	0f 1f 40 00          	nopl   0x0(%rax)
   2e6b0:	48 89 f8             	mov    %rdi,%rax
   2e6b3:	48 c1 f8 12          	sar    $0x12,%rax
   2e6b7:	83 c8 f0             	or     $0xfffffff0,%eax
   2e6ba:	88 06                	mov    %al,(%rsi)
   2e6bc:	48 89 f8             	mov    %rdi,%rax
   2e6bf:	48 c1 f8 0c          	sar    $0xc,%rax
   2e6c3:	83 e0 3f             	and    $0x3f,%eax
   2e6c6:	83 c8 80             	or     $0xffffff80,%eax
   2e6c9:	88 46 01             	mov    %al,0x1(%rsi)
   2e6cc:	48 89 f8             	mov    %rdi,%rax
   2e6cf:	83 e7 3f             	and    $0x3f,%edi
   2e6d2:	48 c1 f8 06          	sar    $0x6,%rax
   2e6d6:	83 cf 80             	or     $0xffffff80,%edi
   2e6d9:	83 e0 3f             	and    $0x3f,%eax
   2e6dc:	40 88 7e 03          	mov    %dil,0x3(%rsi)
   2e6e0:	83 c8 80             	or     $0xffffff80,%eax
   2e6e3:	88 46 02             	mov    %al,0x2(%rsi)
   2e6e6:	b8 04 00 00 00       	mov    $0x4,%eax
   2e6eb:	c3                   	retq   
   2e6ec:	0f 1f 40 00          	nopl   0x0(%rax)
   2e6f0:	48 89 f8             	mov    %rdi,%rax
   2e6f3:	48 c1 f8 18          	sar    $0x18,%rax
   2e6f7:	83 c8 f8             	or     $0xfffffff8,%eax
   2e6fa:	88 06                	mov    %al,(%rsi)
   2e6fc:	48 89 f8             	mov    %rdi,%rax
   2e6ff:	48 c1 f8 12          	sar    $0x12,%rax
   2e703:	83 e0 3f             	and    $0x3f,%eax
   2e706:	83 c8 80             	or     $0xffffff80,%eax
   2e709:	88 46 01             	mov    %al,0x1(%rsi)
   2e70c:	48 89 f8             	mov    %rdi,%rax
   2e70f:	48 c1 f8 0c          	sar    $0xc,%rax
   2e713:	83 e0 3f             	and    $0x3f,%eax
   2e716:	83 c8 80             	or     $0xffffff80,%eax
   2e719:	88 46 02             	mov    %al,0x2(%rsi)
   2e71c:	48 89 f8             	mov    %rdi,%rax
   2e71f:	83 e7 3f             	and    $0x3f,%edi
   2e722:	48 c1 f8 06          	sar    $0x6,%rax
   2e726:	83 cf 80             	or     $0xffffff80,%edi
   2e729:	83 e0 3f             	and    $0x3f,%eax
   2e72c:	40 88 7e 04          	mov    %dil,0x4(%rsi)
   2e730:	83 c8 80             	or     $0xffffff80,%eax
   2e733:	88 46 03             	mov    %al,0x3(%rsi)
   2e736:	b8 05 00 00 00       	mov    $0x5,%eax
   2e73b:	c3                   	retq   

000000000002e73c <.annobin_norm_basic_str.start>:
   2e73c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002e740 <norm_basic_str>:
   2e740:	41 57                	push   %r15
   2e742:	48 63 f6             	movslq %esi,%rsi
   2e745:	45 31 ff             	xor    %r15d,%r15d
   2e748:	41 56                	push   %r14
   2e74a:	45 31 f6             	xor    %r14d,%r14d
   2e74d:	41 55                	push   %r13
   2e74f:	45 31 ed             	xor    %r13d,%r13d
   2e752:	41 54                	push   %r12
   2e754:	4c 8d 24 37          	lea    (%rdi,%rsi,1),%r12
   2e758:	55                   	push   %rbp
   2e759:	53                   	push   %rbx
   2e75a:	48 89 fb             	mov    %rdi,%rbx
   2e75d:	48 83 ec 28          	sub    $0x28,%rsp
   2e761:	89 54 24 10          	mov    %edx,0x10(%rsp)
   2e765:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   2e76a:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
   2e76f:	41 8d 46 f6          	lea    -0xa(%r14),%eax
   2e773:	44 39 f8             	cmp    %r15d,%eax
   2e776:	7f 1c                	jg     2e794 <norm_basic_str+0x54>
   2e778:	41 83 c6 32          	add    $0x32,%r14d
   2e77c:	4c 89 ef             	mov    %r13,%rdi
   2e77f:	49 63 f6             	movslq %r14d,%rsi
   2e782:	ff 15 18 7c 22 00    	callq  *0x227c18(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2e788:	48 85 c0             	test   %rax,%rax
   2e78b:	0f 84 ef 02 00 00    	je     2ea80 <norm_basic_str+0x340>
   2e791:	49 89 c5             	mov    %rax,%r13
   2e794:	4c 39 e3             	cmp    %r12,%rbx
   2e797:	0f 83 b3 02 00 00    	jae    2ea50 <norm_basic_str+0x310>
   2e79d:	0f be 2b             	movsbl (%rbx),%ebp
   2e7a0:	4c 8d 4b 01          	lea    0x1(%rbx),%r9
   2e7a4:	89 e8                	mov    %ebp,%eax
   2e7a6:	83 fd 5c             	cmp    $0x5c,%ebp
   2e7a9:	74 55                	je     2e800 <norm_basic_str+0xc0>
   2e7ab:	83 fd 08             	cmp    $0x8,%ebp
   2e7ae:	40 0f 96 c7          	setbe  %dil
   2e7b2:	83 fd 7f             	cmp    $0x7f,%ebp
   2e7b5:	40 0f 94 c6          	sete   %sil
   2e7b9:	40 08 f7             	or     %sil,%dil
   2e7bc:	75 08                	jne    2e7c6 <norm_basic_str+0x86>
   2e7be:	8d 75 f6             	lea    -0xa(%rbp),%esi
   2e7c1:	83 fe 15             	cmp    $0x15,%esi
   2e7c4:	77 1a                	ja     2e7e0 <norm_basic_str+0xa0>
   2e7c6:	8b 74 24 10          	mov    0x10(%rsp),%esi
   2e7ca:	85 f6                	test   %esi,%esi
   2e7cc:	0f 84 b6 00 00 00    	je     2e888 <norm_basic_str+0x148>
   2e7d2:	83 fd 0d             	cmp    $0xd,%ebp
   2e7d5:	74 09                	je     2e7e0 <norm_basic_str+0xa0>
   2e7d7:	83 fd 0a             	cmp    $0xa,%ebp
   2e7da:	0f 85 a8 00 00 00    	jne    2e888 <norm_basic_str+0x148>
   2e7e0:	49 63 f7             	movslq %r15d,%rsi
   2e7e3:	41 83 c7 01          	add    $0x1,%r15d
   2e7e7:	4c 89 cb             	mov    %r9,%rbx
   2e7ea:	41 88 44 35 00       	mov    %al,0x0(%r13,%rsi,1)
   2e7ef:	41 8d 46 f6          	lea    -0xa(%r14),%eax
   2e7f3:	44 39 f8             	cmp    %r15d,%eax
   2e7f6:	7f 9c                	jg     2e794 <norm_basic_str+0x54>
   2e7f8:	e9 7b ff ff ff       	jmpq   2e778 <norm_basic_str+0x38>
   2e7fd:	0f 1f 00             	nopl   (%rax)
   2e800:	4d 39 cc             	cmp    %r9,%r12
   2e803:	0f 86 df 02 00 00    	jbe    2eae8 <norm_basic_str+0x3a8>
   2e809:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   2e80d:	85 c9                	test   %ecx,%ecx
   2e80f:	74 24                	je     2e835 <norm_basic_str+0xf5>
   2e811:	4c 89 cf             	mov    %r9,%rdi
   2e814:	48 8d 35 20 4a 01 00 	lea    0x14a20(%rip),%rsi        # 4323b <__PRETTY_FUNCTION__.11024+0xfb>
   2e81b:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   2e820:	e8 db 18 fe ff       	callq  10100 <strspn@plt>
   2e825:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   2e82a:	41 80 3c 01 0a       	cmpb   $0xa,(%r9,%rax,1)
   2e82f:	0f 84 fb 01 00 00    	je     2ea30 <norm_basic_str+0x2f0>
   2e835:	44 0f be 4b 01       	movsbl 0x1(%rbx),%r9d
   2e83a:	48 8d 73 02          	lea    0x2(%rbx),%rsi
   2e83e:	41 8d 41 de          	lea    -0x22(%r9),%eax
   2e842:	44 89 cf             	mov    %r9d,%edi
   2e845:	3c 53                	cmp    $0x53,%al
   2e847:	0f 87 a3 01 00 00    	ja     2e9f0 <norm_basic_str+0x2b0>
   2e84d:	48 8d 15 d4 4e 01 00 	lea    0x14ed4(%rip),%rdx        # 43728 <__PRETTY_FUNCTION__.11024+0x5e8>
   2e854:	0f b6 c0             	movzbl %al,%eax
   2e857:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   2e85b:	48 01 d0             	add    %rdx,%rax
   2e85e:	3e ff e0             	notrack jmpq *%rax
   2e861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e868:	bf 0d 00 00 00       	mov    $0xd,%edi
   2e86d:	49 63 c7             	movslq %r15d,%rax
   2e870:	48 89 f3             	mov    %rsi,%rbx
   2e873:	41 83 c7 01          	add    $0x1,%r15d
   2e877:	41 88 7c 05 00       	mov    %dil,0x0(%r13,%rax,1)
   2e87c:	e9 ee fe ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e888:	4d 85 ed             	test   %r13,%r13
   2e88b:	74 09                	je     2e896 <norm_basic_str+0x156>
   2e88d:	4c 89 ef             	mov    %r13,%rdi
   2e890:	ff 15 1a 7b 22 00    	callq  *0x227b1a(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2e896:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2e89b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2e8a0:	41 89 e9             	mov    %ebp,%r9d
   2e8a3:	31 c0                	xor    %eax,%eax
   2e8a5:	4c 8d 05 3b 4a 01 00 	lea    0x14a3b(%rip),%r8        # 432e7 <__PRETTY_FUNCTION__.11024+0x1a7>
   2e8ac:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2e8b3:	ba 01 00 00 00       	mov    $0x1,%edx
   2e8b8:	45 31 ed             	xor    %r13d,%r13d
   2e8bb:	e8 e0 11 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2e8c0:	48 83 c4 28          	add    $0x28,%rsp
   2e8c4:	4c 89 e8             	mov    %r13,%rax
   2e8c7:	5b                   	pop    %rbx
   2e8c8:	5d                   	pop    %rbp
   2e8c9:	41 5c                	pop    %r12
   2e8cb:	41 5d                	pop    %r13
   2e8cd:	41 5e                	pop    %r14
   2e8cf:	41 5f                	pop    %r15
   2e8d1:	c3                   	retq   
   2e8d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2e8d8:	49 63 c7             	movslq %r15d,%rax
   2e8db:	bf 0a 00 00 00       	mov    $0xa,%edi
   2e8e0:	48 89 f3             	mov    %rsi,%rbx
   2e8e3:	41 83 c7 01          	add    $0x1,%r15d
   2e8e7:	41 88 7c 05 00       	mov    %dil,0x0(%r13,%rax,1)
   2e8ec:	e9 7e fe ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e8f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e8f8:	45 31 db             	xor    %r11d,%r11d
   2e8fb:	41 83 f9 75          	cmp    $0x75,%r9d
   2e8ff:	41 0f 95 c3          	setne  %r11b
   2e903:	46 8d 1c 9d 04 00 00 	lea    0x4(,%r11,4),%r11d
   2e90a:	00 
   2e90b:	49 39 f4             	cmp    %rsi,%r12
   2e90e:	0f 86 9a 01 00 00    	jbe    2eaae <norm_basic_str+0x36e>
   2e914:	41 8d 43 ff          	lea    -0x1(%r11),%eax
   2e918:	31 ff                	xor    %edi,%edi
   2e91a:	48 8d 5c 03 03       	lea    0x3(%rbx,%rax,1),%rbx
   2e91f:	eb 10                	jmp    2e931 <norm_basic_str+0x1f1>
   2e921:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e928:	49 39 f4             	cmp    %rsi,%r12
   2e92b:	0f 84 7d 01 00 00    	je     2eaae <norm_basic_str+0x36e>
   2e931:	48 83 c6 01          	add    $0x1,%rsi
   2e935:	44 0f be 4e ff       	movsbl -0x1(%rsi),%r9d
   2e93a:	41 8d 41 d0          	lea    -0x30(%r9),%eax
   2e93e:	83 f8 09             	cmp    $0x9,%eax
   2e941:	76 11                	jbe    2e954 <norm_basic_str+0x214>
   2e943:	41 8d 41 bf          	lea    -0x41(%r9),%eax
   2e947:	83 f8 05             	cmp    $0x5,%eax
   2e94a:	0f 87 10 01 00 00    	ja     2ea60 <norm_basic_str+0x320>
   2e950:	41 8d 41 c9          	lea    -0x37(%r9),%eax
   2e954:	83 f8 ff             	cmp    $0xffffffff,%eax
   2e957:	0f 84 03 01 00 00    	je     2ea60 <norm_basic_str+0x320>
   2e95d:	48 c1 e7 04          	shl    $0x4,%rdi
   2e961:	48 63 e8             	movslq %eax,%rbp
   2e964:	48 01 ef             	add    %rbp,%rdi
   2e967:	48 39 de             	cmp    %rbx,%rsi
   2e96a:	75 bc                	jne    2e928 <norm_basic_str+0x1e8>
   2e96c:	49 63 f7             	movslq %r15d,%rsi
   2e96f:	4c 01 ee             	add    %r13,%rsi
   2e972:	e8 e9 fb ff ff       	callq  2e560 <toml_ucs_to_utf8>
   2e977:	83 f8 ff             	cmp    $0xffffffff,%eax
   2e97a:	0f 84 79 01 00 00    	je     2eaf9 <norm_basic_str+0x3b9>
   2e980:	41 01 c7             	add    %eax,%r15d
   2e983:	e9 e7 fd ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e98f:	00 
   2e990:	49 63 c7             	movslq %r15d,%rax
   2e993:	bf 09 00 00 00       	mov    $0x9,%edi
   2e998:	48 89 f3             	mov    %rsi,%rbx
   2e99b:	41 83 c7 01          	add    $0x1,%r15d
   2e99f:	41 88 7c 05 00       	mov    %dil,0x0(%r13,%rax,1)
   2e9a4:	e9 c6 fd ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e9a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e9b0:	49 63 c7             	movslq %r15d,%rax
   2e9b3:	bf 08 00 00 00       	mov    $0x8,%edi
   2e9b8:	48 89 f3             	mov    %rsi,%rbx
   2e9bb:	41 83 c7 01          	add    $0x1,%r15d
   2e9bf:	41 88 7c 05 00       	mov    %dil,0x0(%r13,%rax,1)
   2e9c4:	e9 a6 fd ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e9c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e9d0:	49 63 c7             	movslq %r15d,%rax
   2e9d3:	bf 0c 00 00 00       	mov    $0xc,%edi
   2e9d8:	48 89 f3             	mov    %rsi,%rbx
   2e9db:	41 83 c7 01          	add    $0x1,%r15d
   2e9df:	41 88 7c 05 00       	mov    %dil,0x0(%r13,%rax,1)
   2e9e4:	e9 86 fd ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2e9e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2e9f0:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2e9f5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2e9fa:	31 c0                	xor    %eax,%eax
   2e9fc:	4c 8d 05 4d 49 01 00 	lea    0x1494d(%rip),%r8        # 43350 <__PRETTY_FUNCTION__.11024+0x210>
   2ea03:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2ea0a:	ba 01 00 00 00       	mov    $0x1,%edx
   2ea0f:	e8 8c 10 fe ff       	callq  faa0 <__snprintf_chk@plt>
   2ea14:	4d 85 ed             	test   %r13,%r13
   2ea17:	74 09                	je     2ea22 <norm_basic_str+0x2e2>
   2ea19:	4c 89 ef             	mov    %r13,%rdi
   2ea1c:	ff 15 8e 79 22 00    	callq  *0x22798e(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ea22:	45 31 ed             	xor    %r13d,%r13d
   2ea25:	e9 96 fe ff ff       	jmpq   2e8c0 <norm_basic_str+0x180>
   2ea2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2ea30:	4c 89 cf             	mov    %r9,%rdi
   2ea33:	48 8d 35 db 48 01 00 	lea    0x148db(%rip),%rsi        # 43315 <__PRETTY_FUNCTION__.11024+0x1d5>
   2ea3a:	e8 c1 16 fe ff       	callq  10100 <strspn@plt>
   2ea3f:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   2ea44:	49 8d 1c 01          	lea    (%r9,%rax,1),%rbx
   2ea48:	e9 22 fd ff ff       	jmpq   2e76f <norm_basic_str+0x2f>
   2ea4d:	0f 1f 00             	nopl   (%rax)
   2ea50:	49 63 d7             	movslq %r15d,%rdx
   2ea53:	41 c6 44 15 00 00    	movb   $0x0,0x0(%r13,%rdx,1)
   2ea59:	e9 62 fe ff ff       	jmpq   2e8c0 <norm_basic_str+0x180>
   2ea5e:	66 90                	xchg   %ax,%ax
   2ea60:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2ea65:	48 8d 15 74 4b 01 00 	lea    0x14b74(%rip),%rdx        # 435e0 <__PRETTY_FUNCTION__.11024+0x4a0>
   2ea6c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2ea71:	31 c0                	xor    %eax,%eax
   2ea73:	e8 a8 14 fe ff       	callq  ff20 <snprintf@plt>
   2ea78:	4d 85 ed             	test   %r13,%r13
   2ea7b:	75 9c                	jne    2ea19 <norm_basic_str+0x2d9>
   2ea7d:	eb a3                	jmp    2ea22 <norm_basic_str+0x2e2>
   2ea7f:	90                   	nop
   2ea80:	4d 85 ed             	test   %r13,%r13
   2ea83:	74 09                	je     2ea8e <norm_basic_str+0x34e>
   2ea85:	4c 89 ef             	mov    %r13,%rdi
   2ea88:	ff 15 22 79 22 00    	callq  *0x227922(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ea8e:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2ea93:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2ea98:	31 c0                	xor    %eax,%eax
   2ea9a:	45 31 ed             	xor    %r13d,%r13d
   2ea9d:	48 8d 15 cf 36 01 00 	lea    0x136cf(%rip),%rdx        # 42173 <k+0x173>
   2eaa4:	e8 77 14 fe ff       	callq  ff20 <snprintf@plt>
   2eaa9:	e9 12 fe ff ff       	jmpq   2e8c0 <norm_basic_str+0x180>
   2eaae:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2eab3:	48 83 ec 08          	sub    $0x8,%rsp
   2eab7:	ba 01 00 00 00       	mov    $0x1,%edx
   2eabc:	31 c0                	xor    %eax,%eax
   2eabe:	41 53                	push   %r11
   2eac0:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2eac5:	4c 8d 05 4e 48 01 00 	lea    0x1484e(%rip),%r8        # 4331a <__PRETTY_FUNCTION__.11024+0x1da>
   2eacc:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   2ead3:	e8 c8 0f fe ff       	callq  faa0 <__snprintf_chk@plt>
   2ead8:	58                   	pop    %rax
   2ead9:	5a                   	pop    %rdx
   2eada:	4d 85 ed             	test   %r13,%r13
   2eadd:	0f 85 36 ff ff ff    	jne    2ea19 <norm_basic_str+0x2d9>
   2eae3:	e9 3a ff ff ff       	jmpq   2ea22 <norm_basic_str+0x2e2>
   2eae8:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2eaed:	48 8d 15 07 48 01 00 	lea    0x14807(%rip),%rdx        # 432fb <__PRETTY_FUNCTION__.11024+0x1bb>
   2eaf4:	e9 73 ff ff ff       	jmpq   2ea6c <norm_basic_str+0x32c>
   2eaf9:	48 63 74 24 14       	movslq 0x14(%rsp),%rsi
   2eafe:	48 8d 15 2e 48 01 00 	lea    0x1482e(%rip),%rdx        # 43333 <__PRETTY_FUNCTION__.11024+0x1f3>
   2eb05:	e9 62 ff ff ff       	jmpq   2ea6c <norm_basic_str+0x32c>

000000000002eb0a <.annobin_norm_basic_str.end>:
   2eb0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002eb10 <normalize_key.isra.4>:
   2eb10:	41 57                	push   %r15
   2eb12:	4c 63 f9             	movslq %ecx,%r15
   2eb15:	41 56                	push   %r14
   2eb17:	49 89 d6             	mov    %rdx,%r14
   2eb1a:	41 55                	push   %r13
   2eb1c:	4e 8d 2c 3a          	lea    (%rdx,%r15,1),%r13
   2eb20:	41 54                	push   %r12
   2eb22:	41 89 f4             	mov    %esi,%r12d
   2eb25:	55                   	push   %rbp
   2eb26:	48 89 fd             	mov    %rdi,%rbp
   2eb29:	53                   	push   %rbx
   2eb2a:	48 83 ec 68          	sub    $0x68,%rsp
   2eb2e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2eb35:	00 00 
   2eb37:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2eb3c:	31 c0                	xor    %eax,%eax
   2eb3e:	0f be 02             	movsbl (%rdx),%eax
   2eb41:	89 c3                	mov    %eax,%ebx
   2eb43:	83 f8 27             	cmp    $0x27,%eax
   2eb46:	0f 84 84 00 00 00    	je     2ebd0 <normalize_key.isra.4+0xc0>
   2eb4c:	83 f8 22             	cmp    $0x22,%eax
   2eb4f:	74 7f                	je     2ebd0 <normalize_key.isra.4+0xc0>
   2eb51:	49 39 d5             	cmp    %rdx,%r13
   2eb54:	74 37                	je     2eb8d <normalize_key.isra.4+0x7d>
   2eb56:	e8 a5 1f fe ff       	callq  10b00 <__ctype_b_loc@plt>
   2eb5b:	4c 8b 08             	mov    (%rax),%r9
   2eb5e:	4c 89 f0             	mov    %r14,%rax
   2eb61:	eb 08                	jmp    2eb6b <normalize_key.isra.4+0x5b>
   2eb63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2eb68:	0f be 18             	movsbl (%rax),%ebx
   2eb6b:	4c 0f be c3          	movsbq %bl,%r8
   2eb6f:	43 f6 04 41 08       	testb  $0x8,(%r9,%r8,2)
   2eb74:	75 0e                	jne    2eb84 <normalize_key.isra.4+0x74>
   2eb76:	83 fb 5f             	cmp    $0x5f,%ebx
   2eb79:	74 09                	je     2eb84 <normalize_key.isra.4+0x74>
   2eb7b:	83 fb 2d             	cmp    $0x2d,%ebx
   2eb7e:	0f 85 e4 00 00 00    	jne    2ec68 <normalize_key.isra.4+0x158>
   2eb84:	48 83 c0 01          	add    $0x1,%rax
   2eb88:	49 39 c5             	cmp    %rax,%r13
   2eb8b:	75 db                	jne    2eb68 <normalize_key.isra.4+0x58>
   2eb8d:	4c 89 fe             	mov    %r15,%rsi
   2eb90:	4c 89 f7             	mov    %r14,%rdi
   2eb93:	e8 b8 f7 ff ff       	callq  2e350 <STRNDUP>
   2eb98:	48 89 c3             	mov    %rax,%rbx
   2eb9b:	48 85 c0             	test   %rax,%rax
   2eb9e:	0f 84 02 01 00 00    	je     2eca6 <normalize_key.isra.4+0x196>
   2eba4:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   2eba9:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   2ebb0:	00 00 
   2ebb2:	48 89 d8             	mov    %rbx,%rax
   2ebb5:	0f 85 fa 00 00 00    	jne    2ecb5 <normalize_key.isra.4+0x1a5>
   2ebbb:	48 83 c4 68          	add    $0x68,%rsp
   2ebbf:	5b                   	pop    %rbx
   2ebc0:	5d                   	pop    %rbp
   2ebc1:	41 5c                	pop    %r12
   2ebc3:	41 5d                	pop    %r13
   2ebc5:	41 5e                	pop    %r14
   2ebc7:	41 5f                	pop    %r15
   2ebc9:	c3                   	retq   
   2ebca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2ebd0:	41 3a 5e 01          	cmp    0x1(%r14),%bl
   2ebd4:	74 5a                	je     2ec30 <normalize_key.isra.4+0x120>
   2ebd6:	49 8d 7e 01          	lea    0x1(%r14),%rdi
   2ebda:	49 8d 75 ff          	lea    -0x1(%r13),%rsi
   2ebde:	31 d2                	xor    %edx,%edx
   2ebe0:	48 29 fe             	sub    %rdi,%rsi
   2ebe3:	83 f8 27             	cmp    $0x27,%eax
   2ebe6:	74 60                	je     2ec48 <normalize_key.isra.4+0x138>
   2ebe8:	49 89 e5             	mov    %rsp,%r13
   2ebeb:	41 b8 50 00 00 00    	mov    $0x50,%r8d
   2ebf1:	4c 89 e9             	mov    %r13,%rcx
   2ebf4:	e8 47 fb ff ff       	callq  2e740 <norm_basic_str>
   2ebf9:	48 89 c3             	mov    %rax,%rbx
   2ebfc:	48 85 c0             	test   %rax,%rax
   2ebff:	74 72                	je     2ec73 <normalize_key.isra.4+0x163>
   2ec01:	be 0a 00 00 00       	mov    $0xa,%esi
   2ec06:	48 89 df             	mov    %rbx,%rdi
   2ec09:	e8 a2 12 fe ff       	callq  feb0 <strchr@plt>
   2ec0e:	48 85 c0             	test   %rax,%rax
   2ec11:	74 91                	je     2eba4 <normalize_key.isra.4+0x94>
   2ec13:	48 89 df             	mov    %rbx,%rdi
   2ec16:	ff 15 94 77 22 00    	callq  *0x227794(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ec1c:	44 89 e6             	mov    %r12d,%esi
   2ec1f:	48 89 ef             	mov    %rbp,%rdi
   2ec22:	e8 b9 ec ff ff       	callq  2d8e0 <e_bad_key_error>
   2ec27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2ec2e:	00 00 
   2ec30:	41 3a 5e 02          	cmp    0x2(%r14),%bl
   2ec34:	75 a0                	jne    2ebd6 <normalize_key.isra.4+0xc6>
   2ec36:	49 8d 7e 03          	lea    0x3(%r14),%rdi
   2ec3a:	49 8d 75 fd          	lea    -0x3(%r13),%rsi
   2ec3e:	ba 01 00 00 00       	mov    $0x1,%edx
   2ec43:	eb 9b                	jmp    2ebe0 <normalize_key.isra.4+0xd0>
   2ec45:	0f 1f 00             	nopl   (%rax)
   2ec48:	e8 03 f7 ff ff       	callq  2e350 <STRNDUP>
   2ec4d:	48 89 c3             	mov    %rax,%rbx
   2ec50:	48 85 c0             	test   %rax,%rax
   2ec53:	75 ac                	jne    2ec01 <normalize_key.isra.4+0xf1>
   2ec55:	48 8d 35 0c 47 01 00 	lea    0x1470c(%rip),%rsi        # 43368 <__PRETTY_FUNCTION__.11024+0x228>
   2ec5c:	48 89 ef             	mov    %rbp,%rdi
   2ec5f:	e8 bc ec ff ff       	callq  2d920 <e_outofmemory>
   2ec64:	0f 1f 40 00          	nopl   0x0(%rax)
   2ec68:	44 89 e6             	mov    %r12d,%esi
   2ec6b:	48 89 ef             	mov    %rbp,%rdi
   2ec6e:	e8 6d ec ff ff       	callq  2d8e0 <e_bad_key_error>
   2ec73:	50                   	push   %rax
   2ec74:	48 63 75 18          	movslq 0x18(%rbp),%rsi
   2ec78:	45 89 e1             	mov    %r12d,%r9d
   2ec7b:	4c 8d 05 81 45 01 00 	lea    0x14581(%rip),%r8        # 43203 <__PRETTY_FUNCTION__.11024+0xc3>
   2ec82:	41 55                	push   %r13
   2ec84:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2ec88:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   2ec8c:	ba 01 00 00 00       	mov    $0x1,%edx
   2ec91:	31 c0                	xor    %eax,%eax
   2ec93:	e8 08 0e fe ff       	callq  faa0 <__snprintf_chk@plt>
   2ec98:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   2ec9c:	be 01 00 00 00       	mov    $0x1,%esi
   2eca1:	e8 0a 1a fe ff       	callq  106b0 <__longjmp_chk@plt>
   2eca6:	48 8d 35 c6 46 01 00 	lea    0x146c6(%rip),%rsi        # 43373 <__PRETTY_FUNCTION__.11024+0x233>
   2ecad:	48 89 ef             	mov    %rbp,%rdi
   2ecb0:	e8 6b ec ff ff       	callq  2d920 <e_outofmemory>
   2ecb5:	e8 96 11 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002ecba <.annobin_create_keyarray_in_table.start>:
   2ecba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002ecc0 <create_keyarray_in_table>:
   2ecc0:	41 56                	push   %r14
   2ecc2:	49 89 f6             	mov    %rsi,%r14
   2ecc5:	41 55                	push   %r13
   2ecc7:	49 89 fd             	mov    %rdi,%r13
   2ecca:	41 54                	push   %r12
   2eccc:	55                   	push   %rbp
   2eccd:	89 d5                	mov    %edx,%ebp
   2eccf:	53                   	push   %rbx
   2ecd0:	8b 5c 24 34          	mov    0x34(%rsp),%ebx
   2ecd4:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   2ecd8:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2ecdd:	89 de                	mov    %ebx,%esi
   2ecdf:	e8 2c fe ff ff       	callq  2eb10 <normalize_key.isra.4>
   2ece4:	45 31 c0             	xor    %r8d,%r8d
   2ece7:	31 c9                	xor    %ecx,%ecx
   2ece9:	31 d2                	xor    %edx,%edx
   2eceb:	48 89 c6             	mov    %rax,%rsi
   2ecee:	4c 89 f7             	mov    %r14,%rdi
   2ecf1:	49 89 c4             	mov    %rax,%r12
   2ecf4:	e8 67 ea ff ff       	callq  2d760 <check_key>
   2ecf9:	85 c0                	test   %eax,%eax
   2ecfb:	75 6b                	jne    2ed68 <create_keyarray_in_table+0xa8>
   2ecfd:	41 8b 46 18          	mov    0x18(%r14),%eax
   2ed01:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   2ed05:	8d 58 01             	lea    0x1(%rax),%ebx
   2ed08:	48 63 db             	movslq %ebx,%rbx
   2ed0b:	48 c1 e3 03          	shl    $0x3,%rbx
   2ed0f:	48 89 de             	mov    %rbx,%rsi
   2ed12:	ff 15 88 76 22 00    	callq  *0x227688(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2ed18:	48 85 c0             	test   %rax,%rax
   2ed1b:	0f 84 a7 00 00 00    	je     2edc8 <create_keyarray_in_table+0x108>
   2ed21:	48 8d 5c 18 f8       	lea    -0x8(%rax,%rbx,1),%rbx
   2ed26:	49 89 46 20          	mov    %rax,0x20(%r14)
   2ed2a:	be 20 00 00 00       	mov    $0x20,%esi
   2ed2f:	bf 01 00 00 00       	mov    $0x1,%edi
   2ed34:	ff 15 6e 76 22 00    	callq  *0x22766e(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2ed3a:	48 89 03             	mov    %rax,(%rbx)
   2ed3d:	48 85 c0             	test   %rax,%rax
   2ed40:	74 69                	je     2edab <create_keyarray_in_table+0xeb>
   2ed42:	49 63 46 18          	movslq 0x18(%r14),%rax
   2ed46:	49 8b 56 20          	mov    0x20(%r14),%rdx
   2ed4a:	40 0f be ed          	movsbl %bpl,%ebp
   2ed4e:	8d 48 01             	lea    0x1(%rax),%ecx
   2ed51:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   2ed55:	41 89 4e 18          	mov    %ecx,0x18(%r14)
   2ed59:	4c 89 20             	mov    %r12,(%rax)
   2ed5c:	89 68 08             	mov    %ebp,0x8(%rax)
   2ed5f:	5b                   	pop    %rbx
   2ed60:	5d                   	pop    %rbp
   2ed61:	41 5c                	pop    %r12
   2ed63:	41 5d                	pop    %r13
   2ed65:	41 5e                	pop    %r14
   2ed67:	c3                   	retq   
   2ed68:	50                   	push   %rax
   2ed69:	49 63 75 18          	movslq 0x18(%r13),%rsi
   2ed6d:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   2ed71:	ba 01 00 00 00       	mov    $0x1,%edx
   2ed76:	41 54                	push   %r12
   2ed78:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   2ed7c:	41 89 d9             	mov    %ebx,%r9d
   2ed7f:	4c 8d 05 f8 45 01 00 	lea    0x145f8(%rip),%r8        # 4337e <__PRETTY_FUNCTION__.11024+0x23e>
   2ed86:	31 c0                	xor    %eax,%eax
   2ed88:	e8 13 0d fe ff       	callq  faa0 <__snprintf_chk@plt>
   2ed8d:	5a                   	pop    %rdx
   2ed8e:	59                   	pop    %rcx
   2ed8f:	4d 85 e4             	test   %r12,%r12
   2ed92:	74 09                	je     2ed9d <create_keyarray_in_table+0xdd>
   2ed94:	4c 89 e7             	mov    %r12,%rdi
   2ed97:	ff 15 13 76 22 00    	callq  *0x227613(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ed9d:	49 8d 7d 20          	lea    0x20(%r13),%rdi
   2eda1:	be 01 00 00 00       	mov    $0x1,%esi
   2eda6:	e8 05 19 fe ff       	callq  106b0 <__longjmp_chk@plt>
   2edab:	4d 85 e4             	test   %r12,%r12
   2edae:	74 09                	je     2edb9 <create_keyarray_in_table+0xf9>
   2edb0:	4c 89 e7             	mov    %r12,%rdi
   2edb3:	ff 15 f7 75 22 00    	callq  *0x2275f7(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2edb9:	48 8d 35 e0 45 01 00 	lea    0x145e0(%rip),%rsi        # 433a0 <__PRETTY_FUNCTION__.11024+0x260>
   2edc0:	4c 89 ef             	mov    %r13,%rdi
   2edc3:	e8 58 eb ff ff       	callq  2d920 <e_outofmemory>
   2edc8:	4d 85 e4             	test   %r12,%r12
   2edcb:	74 09                	je     2edd6 <create_keyarray_in_table+0x116>
   2edcd:	4c 89 e7             	mov    %r12,%rdi
   2edd0:	ff 15 da 75 22 00    	callq  *0x2275da(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2edd6:	48 8d 35 b8 45 01 00 	lea    0x145b8(%rip),%rsi        # 43395 <__PRETTY_FUNCTION__.11024+0x255>
   2eddd:	4c 89 ef             	mov    %r13,%rdi
   2ede0:	e8 3b eb ff ff       	callq  2d920 <e_outofmemory>

000000000002ede5 <.annobin_create_keyarray_in_table.end>:
   2ede5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2edec:	00 00 00 00 

000000000002edf0 <create_keytable_in_table.isra.6>:
   2edf0:	41 55                	push   %r13
   2edf2:	49 89 fd             	mov    %rdi,%r13
   2edf5:	41 54                	push   %r12
   2edf7:	55                   	push   %rbp
   2edf8:	89 d5                	mov    %edx,%ebp
   2edfa:	48 89 ca             	mov    %rcx,%rdx
   2edfd:	44 89 c1             	mov    %r8d,%ecx
   2ee00:	53                   	push   %rbx
   2ee01:	48 89 f3             	mov    %rsi,%rbx
   2ee04:	89 ee                	mov    %ebp,%esi
   2ee06:	48 83 ec 18          	sub    $0x18,%rsp
   2ee0a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2ee11:	00 00 
   2ee13:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2ee18:	31 c0                	xor    %eax,%eax
   2ee1a:	e8 f1 fc ff ff       	callq  2eb10 <normalize_key.isra.4>
   2ee1f:	31 c9                	xor    %ecx,%ecx
   2ee21:	31 d2                	xor    %edx,%edx
   2ee23:	49 89 e0             	mov    %rsp,%r8
   2ee26:	48 89 c6             	mov    %rax,%rsi
   2ee29:	48 89 df             	mov    %rbx,%rdi
   2ee2c:	49 89 c4             	mov    %rax,%r12
   2ee2f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2ee36:	00 
   2ee37:	e8 24 e9 ff ff       	callq  2d760 <check_key>
   2ee3c:	85 c0                	test   %eax,%eax
   2ee3e:	74 50                	je     2ee90 <create_keytable_in_table.isra.6+0xa0>
   2ee40:	48 8b 04 24          	mov    (%rsp),%rax
   2ee44:	48 85 c0             	test   %rax,%rax
   2ee47:	0f 84 9f 00 00 00    	je     2eeec <create_keytable_in_table.isra.6+0xfc>
   2ee4d:	8b 70 08             	mov    0x8(%rax),%esi
   2ee50:	85 f6                	test   %esi,%esi
   2ee52:	0f 84 94 00 00 00    	je     2eeec <create_keytable_in_table.isra.6+0xfc>
   2ee58:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   2ee5f:	4d 85 e4             	test   %r12,%r12
   2ee62:	74 0d                	je     2ee71 <create_keytable_in_table.isra.6+0x81>
   2ee64:	4c 89 e7             	mov    %r12,%rdi
   2ee67:	ff 15 43 75 22 00    	callq  *0x227543(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ee6d:	48 8b 04 24          	mov    (%rsp),%rax
   2ee71:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2ee76:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2ee7d:	00 00 
   2ee7f:	0f 85 aa 00 00 00    	jne    2ef2f <create_keytable_in_table.isra.6+0x13f>
   2ee85:	48 83 c4 18          	add    $0x18,%rsp
   2ee89:	5b                   	pop    %rbx
   2ee8a:	5d                   	pop    %rbp
   2ee8b:	41 5c                	pop    %r12
   2ee8d:	41 5d                	pop    %r13
   2ee8f:	c3                   	retq   
   2ee90:	8b 43 28             	mov    0x28(%rbx),%eax
   2ee93:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   2ee97:	8d 68 01             	lea    0x1(%rax),%ebp
   2ee9a:	48 63 ed             	movslq %ebp,%rbp
   2ee9d:	48 c1 e5 03          	shl    $0x3,%rbp
   2eea1:	48 89 ee             	mov    %rbp,%rsi
   2eea4:	ff 15 f6 74 22 00    	callq  *0x2274f6(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2eeaa:	48 85 c0             	test   %rax,%rax
   2eead:	0f 84 81 00 00 00    	je     2ef34 <create_keytable_in_table.isra.6+0x144>
   2eeb3:	48 8d 6c 28 f8       	lea    -0x8(%rax,%rbp,1),%rbp
   2eeb8:	48 89 43 30          	mov    %rax,0x30(%rbx)
   2eebc:	be 38 00 00 00       	mov    $0x38,%esi
   2eec1:	bf 01 00 00 00       	mov    $0x1,%edi
   2eec6:	ff 15 dc 74 22 00    	callq  *0x2274dc(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2eecc:	48 89 45 00          	mov    %rax,0x0(%rbp)
   2eed0:	48 85 c0             	test   %rax,%rax
   2eed3:	74 7c                	je     2ef51 <create_keytable_in_table.isra.6+0x161>
   2eed5:	48 63 43 28          	movslq 0x28(%rbx),%rax
   2eed9:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   2eedd:	8d 48 01             	lea    0x1(%rax),%ecx
   2eee0:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   2eee4:	89 4b 28             	mov    %ecx,0x28(%rbx)
   2eee7:	4c 89 20             	mov    %r12,(%rax)
   2eeea:	eb 85                	jmp    2ee71 <create_keytable_in_table.isra.6+0x81>
   2eeec:	50                   	push   %rax
   2eeed:	49 63 75 18          	movslq 0x18(%r13),%rsi
   2eef1:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   2eef5:	ba 01 00 00 00       	mov    $0x1,%edx
   2eefa:	41 54                	push   %r12
   2eefc:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   2ef00:	41 89 e9             	mov    %ebp,%r9d
   2ef03:	4c 8d 05 74 44 01 00 	lea    0x14474(%rip),%r8        # 4337e <__PRETTY_FUNCTION__.11024+0x23e>
   2ef0a:	31 c0                	xor    %eax,%eax
   2ef0c:	e8 8f 0b fe ff       	callq  faa0 <__snprintf_chk@plt>
   2ef11:	5a                   	pop    %rdx
   2ef12:	59                   	pop    %rcx
   2ef13:	4d 85 e4             	test   %r12,%r12
   2ef16:	74 09                	je     2ef21 <create_keytable_in_table.isra.6+0x131>
   2ef18:	4c 89 e7             	mov    %r12,%rdi
   2ef1b:	ff 15 8f 74 22 00    	callq  *0x22748f(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ef21:	49 8d 7d 20          	lea    0x20(%r13),%rdi
   2ef25:	be 01 00 00 00       	mov    $0x1,%esi
   2ef2a:	e8 81 17 fe ff       	callq  106b0 <__longjmp_chk@plt>
   2ef2f:	e8 1c 0f fe ff       	callq  fe50 <__stack_chk_fail@plt>
   2ef34:	4d 85 e4             	test   %r12,%r12
   2ef37:	74 09                	je     2ef42 <create_keytable_in_table.isra.6+0x152>
   2ef39:	4c 89 e7             	mov    %r12,%rdi
   2ef3c:	ff 15 6e 74 22 00    	callq  *0x22746e(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ef42:	48 8d 35 62 44 01 00 	lea    0x14462(%rip),%rsi        # 433ab <__PRETTY_FUNCTION__.11024+0x26b>
   2ef49:	4c 89 ef             	mov    %r13,%rdi
   2ef4c:	e8 cf e9 ff ff       	callq  2d920 <e_outofmemory>
   2ef51:	4d 85 e4             	test   %r12,%r12
   2ef54:	74 09                	je     2ef5f <create_keytable_in_table.isra.6+0x16f>
   2ef56:	4c 89 e7             	mov    %r12,%rdi
   2ef59:	ff 15 51 74 22 00    	callq  *0x227451(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ef5f:	48 8d 35 50 44 01 00 	lea    0x14450(%rip),%rsi        # 433b6 <__PRETTY_FUNCTION__.11024+0x276>
   2ef66:	4c 89 ef             	mov    %r13,%rdi
   2ef69:	e8 b2 e9 ff ff       	callq  2d920 <e_outofmemory>

000000000002ef6e <.annobin_create_keytable_in_table.isra.6.end>:
   2ef6e:	66 90                	xchg   %ax,%ax

000000000002ef70 <toml_free>:
   2ef70:	f3 0f 1e fa          	endbr64 
   2ef74:	e9 17 e4 ff ff       	jmpq   2d390 <xfree_tab>

000000000002ef79 <.annobin_toml_free.end>:
   2ef79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002ef80 <toml_key_in>:
   2ef80:	f3 0f 1e fa          	endbr64 
   2ef84:	8b 47 0c             	mov    0xc(%rdi),%eax
   2ef87:	39 f0                	cmp    %esi,%eax
   2ef89:	7f 35                	jg     2efc0 <toml_key_in+0x40>
   2ef8b:	29 c6                	sub    %eax,%esi
   2ef8d:	8b 47 18             	mov    0x18(%rdi),%eax
   2ef90:	39 f0                	cmp    %esi,%eax
   2ef92:	7f 1c                	jg     2efb0 <toml_key_in+0x30>
   2ef94:	29 c6                	sub    %eax,%esi
   2ef96:	31 c0                	xor    %eax,%eax
   2ef98:	39 77 28             	cmp    %esi,0x28(%rdi)
   2ef9b:	7e 0e                	jle    2efab <toml_key_in+0x2b>
   2ef9d:	48 8b 47 30          	mov    0x30(%rdi),%rax
   2efa1:	48 63 f6             	movslq %esi,%rsi
   2efa4:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2efa8:	48 8b 00             	mov    (%rax),%rax
   2efab:	c3                   	retq   
   2efac:	0f 1f 40 00          	nopl   0x0(%rax)
   2efb0:	48 8b 47 20          	mov    0x20(%rdi),%rax
   2efb4:	48 63 f6             	movslq %esi,%rsi
   2efb7:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2efbb:	48 8b 00             	mov    (%rax),%rax
   2efbe:	c3                   	retq   
   2efbf:	90                   	nop
   2efc0:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2efc4:	48 63 f6             	movslq %esi,%rsi
   2efc7:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2efcb:	48 8b 00             	mov    (%rax),%rax
   2efce:	c3                   	retq   

000000000002efcf <.annobin_toml_key_in.end>:
   2efcf:	90                   	nop

000000000002efd0 <toml_raw_in>:
   2efd0:	f3 0f 1e fa          	endbr64 
   2efd4:	8b 47 0c             	mov    0xc(%rdi),%eax
   2efd7:	85 c0                	test   %eax,%eax
   2efd9:	7e 62                	jle    2f03d <toml_raw_in+0x6d>
   2efdb:	41 55                	push   %r13
   2efdd:	83 e8 01             	sub    $0x1,%eax
   2efe0:	41 54                	push   %r12
   2efe2:	49 89 f4             	mov    %rsi,%r12
   2efe5:	55                   	push   %rbp
   2efe6:	53                   	push   %rbx
   2efe7:	48 83 ec 08          	sub    $0x8,%rsp
   2efeb:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   2efef:	4c 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%r13
   2eff4:	eb 13                	jmp    2f009 <toml_raw_in+0x39>
   2eff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2effd:	00 00 00 
   2f000:	48 83 c3 08          	add    $0x8,%rbx
   2f004:	4c 39 eb             	cmp    %r13,%rbx
   2f007:	74 27                	je     2f030 <toml_raw_in+0x60>
   2f009:	48 8b 2b             	mov    (%rbx),%rbp
   2f00c:	4c 89 e7             	mov    %r12,%rdi
   2f00f:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   2f013:	e8 08 12 fe ff       	callq  10220 <strcmp@plt>
   2f018:	85 c0                	test   %eax,%eax
   2f01a:	75 e4                	jne    2f000 <toml_raw_in+0x30>
   2f01c:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2f020:	48 83 c4 08          	add    $0x8,%rsp
   2f024:	5b                   	pop    %rbx
   2f025:	5d                   	pop    %rbp
   2f026:	41 5c                	pop    %r12
   2f028:	41 5d                	pop    %r13
   2f02a:	c3                   	retq   
   2f02b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f030:	48 83 c4 08          	add    $0x8,%rsp
   2f034:	31 c0                	xor    %eax,%eax
   2f036:	5b                   	pop    %rbx
   2f037:	5d                   	pop    %rbp
   2f038:	41 5c                	pop    %r12
   2f03a:	41 5d                	pop    %r13
   2f03c:	c3                   	retq   
   2f03d:	31 c0                	xor    %eax,%eax
   2f03f:	c3                   	retq   

000000000002f040 <toml_array_in>:
   2f040:	f3 0f 1e fa          	endbr64 
   2f044:	41 55                	push   %r13
   2f046:	41 54                	push   %r12
   2f048:	55                   	push   %rbp
   2f049:	53                   	push   %rbx
   2f04a:	48 83 ec 08          	sub    $0x8,%rsp
   2f04e:	8b 47 18             	mov    0x18(%rdi),%eax
   2f051:	85 c0                	test   %eax,%eax
   2f053:	7e 4b                	jle    2f0a0 <toml_array_in+0x60>
   2f055:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
   2f059:	83 e8 01             	sub    $0x1,%eax
   2f05c:	49 89 f4             	mov    %rsi,%r12
   2f05f:	4c 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%r13
   2f064:	eb 13                	jmp    2f079 <toml_array_in+0x39>
   2f066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f06d:	00 00 00 
   2f070:	48 83 c3 08          	add    $0x8,%rbx
   2f074:	4c 39 eb             	cmp    %r13,%rbx
   2f077:	74 27                	je     2f0a0 <toml_array_in+0x60>
   2f079:	48 8b 2b             	mov    (%rbx),%rbp
   2f07c:	4c 89 e7             	mov    %r12,%rdi
   2f07f:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   2f083:	e8 98 11 fe ff       	callq  10220 <strcmp@plt>
   2f088:	85 c0                	test   %eax,%eax
   2f08a:	75 e4                	jne    2f070 <toml_array_in+0x30>
   2f08c:	48 83 c4 08          	add    $0x8,%rsp
   2f090:	48 89 e8             	mov    %rbp,%rax
   2f093:	5b                   	pop    %rbx
   2f094:	5d                   	pop    %rbp
   2f095:	41 5c                	pop    %r12
   2f097:	41 5d                	pop    %r13
   2f099:	c3                   	retq   
   2f09a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2f0a0:	48 83 c4 08          	add    $0x8,%rsp
   2f0a4:	31 ed                	xor    %ebp,%ebp
   2f0a6:	5b                   	pop    %rbx
   2f0a7:	48 89 e8             	mov    %rbp,%rax
   2f0aa:	5d                   	pop    %rbp
   2f0ab:	41 5c                	pop    %r12
   2f0ad:	41 5d                	pop    %r13
   2f0af:	c3                   	retq   

000000000002f0b0 <toml_table_in>:
   2f0b0:	f3 0f 1e fa          	endbr64 
   2f0b4:	41 55                	push   %r13
   2f0b6:	41 54                	push   %r12
   2f0b8:	55                   	push   %rbp
   2f0b9:	53                   	push   %rbx
   2f0ba:	48 83 ec 08          	sub    $0x8,%rsp
   2f0be:	8b 47 28             	mov    0x28(%rdi),%eax
   2f0c1:	85 c0                	test   %eax,%eax
   2f0c3:	7e 4b                	jle    2f110 <toml_table_in+0x60>
   2f0c5:	48 8b 5f 30          	mov    0x30(%rdi),%rbx
   2f0c9:	83 e8 01             	sub    $0x1,%eax
   2f0cc:	49 89 f4             	mov    %rsi,%r12
   2f0cf:	4c 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%r13
   2f0d4:	eb 13                	jmp    2f0e9 <toml_table_in+0x39>
   2f0d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f0dd:	00 00 00 
   2f0e0:	48 83 c3 08          	add    $0x8,%rbx
   2f0e4:	4c 39 eb             	cmp    %r13,%rbx
   2f0e7:	74 27                	je     2f110 <toml_table_in+0x60>
   2f0e9:	48 8b 2b             	mov    (%rbx),%rbp
   2f0ec:	4c 89 e7             	mov    %r12,%rdi
   2f0ef:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   2f0f3:	e8 28 11 fe ff       	callq  10220 <strcmp@plt>
   2f0f8:	85 c0                	test   %eax,%eax
   2f0fa:	75 e4                	jne    2f0e0 <toml_table_in+0x30>
   2f0fc:	48 83 c4 08          	add    $0x8,%rsp
   2f100:	48 89 e8             	mov    %rbp,%rax
   2f103:	5b                   	pop    %rbx
   2f104:	5d                   	pop    %rbp
   2f105:	41 5c                	pop    %r12
   2f107:	41 5d                	pop    %r13
   2f109:	c3                   	retq   
   2f10a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2f110:	48 83 c4 08          	add    $0x8,%rsp
   2f114:	31 ed                	xor    %ebp,%ebp
   2f116:	5b                   	pop    %rbx
   2f117:	48 89 e8             	mov    %rbp,%rax
   2f11a:	5d                   	pop    %rbp
   2f11b:	41 5c                	pop    %r12
   2f11d:	41 5d                	pop    %r13
   2f11f:	c3                   	retq   

000000000002f120 <toml_raw_at>:
   2f120:	f3 0f 1e fa          	endbr64 
   2f124:	83 7f 08 76          	cmpl   $0x76,0x8(%rdi)
   2f128:	75 16                	jne    2f140 <toml_raw_at+0x20>
   2f12a:	85 f6                	test   %esi,%esi
   2f12c:	78 12                	js     2f140 <toml_raw_at+0x20>
   2f12e:	39 77 10             	cmp    %esi,0x10(%rdi)
   2f131:	7e 0d                	jle    2f140 <toml_raw_at+0x20>
   2f133:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2f137:	48 63 f6             	movslq %esi,%rsi
   2f13a:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2f13e:	c3                   	retq   
   2f13f:	90                   	nop
   2f140:	31 c0                	xor    %eax,%eax
   2f142:	c3                   	retq   

000000000002f143 <.annobin_toml_array_kind.start>:
   2f143:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f14a:	00 00 00 00 
   2f14e:	66 90                	xchg   %ax,%ax

000000000002f150 <toml_array_kind>:
   2f150:	f3 0f 1e fa          	endbr64 
   2f154:	8b 47 08             	mov    0x8(%rdi),%eax
   2f157:	c3                   	retq   

000000000002f158 <.annobin_toml_array_kind.end>:
   2f158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f15f:	00 

000000000002f160 <toml_array_type>:
   2f160:	f3 0f 1e fa          	endbr64 
   2f164:	31 c0                	xor    %eax,%eax
   2f166:	83 7f 08 76          	cmpl   $0x76,0x8(%rdi)
   2f16a:	75 0b                	jne    2f177 <toml_array_type+0x17>
   2f16c:	8b 57 10             	mov    0x10(%rdi),%edx
   2f16f:	85 d2                	test   %edx,%edx
   2f171:	74 04                	je     2f177 <toml_array_type+0x17>
   2f173:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
   2f177:	c3                   	retq   

000000000002f178 <.annobin_toml_array_nelem.start>:
   2f178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f17f:	00 

000000000002f180 <toml_array_nelem>:
   2f180:	f3 0f 1e fa          	endbr64 
   2f184:	8b 47 10             	mov    0x10(%rdi),%eax
   2f187:	c3                   	retq   

000000000002f188 <.annobin_toml_array_key.start>:
   2f188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f18f:	00 

000000000002f190 <toml_array_key>:
   2f190:	f3 0f 1e fa          	endbr64 
   2f194:	48 85 ff             	test   %rdi,%rdi
   2f197:	74 07                	je     2f1a0 <toml_array_key+0x10>
   2f199:	48 8b 07             	mov    (%rdi),%rax
   2f19c:	c3                   	retq   
   2f19d:	0f 1f 00             	nopl   (%rax)
   2f1a0:	31 c0                	xor    %eax,%eax
   2f1a2:	c3                   	retq   

000000000002f1a3 <.annobin_toml_array_key.end>:
   2f1a3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f1aa:	00 00 00 00 
   2f1ae:	66 90                	xchg   %ax,%ax

000000000002f1b0 <toml_table_nkval>:
   2f1b0:	f3 0f 1e fa          	endbr64 
   2f1b4:	8b 47 0c             	mov    0xc(%rdi),%eax
   2f1b7:	c3                   	retq   

000000000002f1b8 <.annobin_toml_table_narr.start>:
   2f1b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f1bf:	00 

000000000002f1c0 <toml_table_narr>:
   2f1c0:	f3 0f 1e fa          	endbr64 
   2f1c4:	8b 47 18             	mov    0x18(%rdi),%eax
   2f1c7:	c3                   	retq   

000000000002f1c8 <.annobin_toml_table_narr.end>:
   2f1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f1cf:	00 

000000000002f1d0 <toml_table_ntab>:
   2f1d0:	f3 0f 1e fa          	endbr64 
   2f1d4:	8b 47 28             	mov    0x28(%rdi),%eax
   2f1d7:	c3                   	retq   

000000000002f1d8 <.annobin_toml_table_key.start>:
   2f1d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f1df:	00 

000000000002f1e0 <toml_table_key>:
   2f1e0:	f3 0f 1e fa          	endbr64 
   2f1e4:	48 85 ff             	test   %rdi,%rdi
   2f1e7:	74 07                	je     2f1f0 <toml_table_key+0x10>
   2f1e9:	48 8b 07             	mov    (%rdi),%rax
   2f1ec:	c3                   	retq   
   2f1ed:	0f 1f 00             	nopl   (%rax)
   2f1f0:	31 c0                	xor    %eax,%eax
   2f1f2:	c3                   	retq   

000000000002f1f3 <.annobin_toml_array_at.start>:
   2f1f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f1fa:	00 00 00 00 
   2f1fe:	66 90                	xchg   %ax,%ax

000000000002f200 <toml_array_at>:
   2f200:	f3 0f 1e fa          	endbr64 
   2f204:	83 7f 08 61          	cmpl   $0x61,0x8(%rdi)
   2f208:	75 16                	jne    2f220 <toml_array_at+0x20>
   2f20a:	85 f6                	test   %esi,%esi
   2f20c:	78 12                	js     2f220 <toml_array_at+0x20>
   2f20e:	39 77 10             	cmp    %esi,0x10(%rdi)
   2f211:	7e 0d                	jle    2f220 <toml_array_at+0x20>
   2f213:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2f217:	48 63 f6             	movslq %esi,%rsi
   2f21a:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2f21e:	c3                   	retq   
   2f21f:	90                   	nop
   2f220:	31 c0                	xor    %eax,%eax
   2f222:	c3                   	retq   

000000000002f223 <.annobin_toml_array_at.end>:
   2f223:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f22a:	00 00 00 00 
   2f22e:	66 90                	xchg   %ax,%ax

000000000002f230 <toml_table_at>:
   2f230:	f3 0f 1e fa          	endbr64 
   2f234:	83 7f 08 74          	cmpl   $0x74,0x8(%rdi)
   2f238:	75 16                	jne    2f250 <toml_table_at+0x20>
   2f23a:	85 f6                	test   %esi,%esi
   2f23c:	78 12                	js     2f250 <toml_table_at+0x20>
   2f23e:	39 77 10             	cmp    %esi,0x10(%rdi)
   2f241:	7e 0d                	jle    2f250 <toml_table_at+0x20>
   2f243:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2f247:	48 63 f6             	movslq %esi,%rsi
   2f24a:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
   2f24e:	c3                   	retq   
   2f24f:	90                   	nop
   2f250:	31 c0                	xor    %eax,%eax
   2f252:	c3                   	retq   

000000000002f253 <.annobin_toml_rtots.start>:
   2f253:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f25a:	00 00 00 00 
   2f25e:	66 90                	xchg   %ax,%ax

000000000002f260 <toml_rtots>:
   2f260:	f3 0f 1e fa          	endbr64 
   2f264:	41 57                	push   %r15
   2f266:	41 56                	push   %r14
   2f268:	41 55                	push   %r13
   2f26a:	41 54                	push   %r12
   2f26c:	55                   	push   %rbp
   2f26d:	53                   	push   %rbx
   2f26e:	48 83 ec 28          	sub    $0x28,%rsp
   2f272:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f279:	00 00 
   2f27b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f280:	31 c0                	xor    %eax,%eax
   2f282:	48 85 ff             	test   %rdi,%rdi
   2f285:	0f 84 7d 02 00 00    	je     2f508 <toml_rtots+0x2a8>
   2f28b:	48 89 fd             	mov    %rdi,%rbp
  return __builtin___memset_chk (__dest, __ch, __len,
   2f28e:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   2f292:	48 89 f1             	mov    %rsi,%rcx
   2f295:	31 c0                	xor    %eax,%eax
   2f297:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   2f29b:	4c 8d 4e 04          	lea    0x4(%rsi),%r9
   2f29f:	4c 8d 46 08          	lea    0x8(%rsi),%r8
   2f2a3:	48 89 f3             	mov    %rsi,%rbx
   2f2a6:	48 29 f9             	sub    %rdi,%rcx
   2f2a9:	4c 8d 7e 0c          	lea    0xc(%rsi),%r15
   2f2ad:	4c 8d 76 10          	lea    0x10(%rsi),%r14
   2f2b1:	4c 89 ca             	mov    %r9,%rdx
   2f2b4:	83 c1 68             	add    $0x68,%ecx
   2f2b7:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   2f2be:	4c 8d 6e 14          	lea    0x14(%rsi),%r13
   2f2c2:	c1 e9 03             	shr    $0x3,%ecx
   2f2c5:	48 c7 46 60 00 00 00 	movq   $0x0,0x60(%rsi)
   2f2cc:	00 
   2f2cd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   2f2d0:	4c 89 c1             	mov    %r8,%rcx
   2f2d3:	48 89 ef             	mov    %rbp,%rdi
   2f2d6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2f2db:	4c 89 0c 24          	mov    %r9,(%rsp)
   2f2df:	e8 3c e3 ff ff       	callq  2d620 <scan_date>
   2f2e4:	41 89 c4             	mov    %eax,%r12d
   2f2e7:	85 c0                	test   %eax,%eax
   2f2e9:	0f 85 41 01 00 00    	jne    2f430 <toml_rtots+0x1d0>
   2f2ef:	4c 8b 0c 24          	mov    (%rsp),%r9
   2f2f3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   2f2f8:	48 89 5b 28          	mov    %rbx,0x28(%rbx)
   2f2fc:	4c 89 4b 30          	mov    %r9,0x30(%rbx)
   2f300:	4c 89 43 38          	mov    %r8,0x38(%rbx)
   2f304:	0f b6 45 0a          	movzbl 0xa(%rbp),%eax
   2f308:	84 c0                	test   %al,%al
   2f30a:	75 64                	jne    2f370 <toml_rtots+0x110>
   2f30c:	48 83 c5 0a          	add    $0xa,%rbp
   2f310:	4c 89 e9             	mov    %r13,%rcx
   2f313:	4c 89 f2             	mov    %r14,%rdx
   2f316:	4c 89 fe             	mov    %r15,%rsi
   2f319:	48 89 ef             	mov    %rbp,%rdi
   2f31c:	e8 9f e3 ff ff       	callq  2d6c0 <scan_time>
   2f321:	85 c0                	test   %eax,%eax
   2f323:	74 6b                	je     2f390 <toml_rtots+0x130>
   2f325:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   2f329:	84 c0                	test   %al,%al
   2f32b:	0f 85 d7 01 00 00    	jne    2f508 <toml_rtots+0x2a8>
   2f331:	45 85 e4             	test   %r12d,%r12d
   2f334:	74 0f                	je     2f345 <toml_rtots+0xe5>
   2f336:	45 31 e4             	xor    %r12d,%r12d
   2f339:	48 83 7b 40 00       	cmpq   $0x0,0x40(%rbx)
   2f33e:	41 0f 94 c4          	sete   %r12b
   2f342:	41 f7 dc             	neg    %r12d
   2f345:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   2f34a:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   2f351:	00 00 
   2f353:	44 89 e0             	mov    %r12d,%eax
   2f356:	0f 85 b7 01 00 00    	jne    2f513 <toml_rtots+0x2b3>
   2f35c:	48 83 c4 28          	add    $0x28,%rsp
   2f360:	5b                   	pop    %rbx
   2f361:	5d                   	pop    %rbp
   2f362:	41 5c                	pop    %r12
   2f364:	41 5d                	pop    %r13
   2f366:	41 5e                	pop    %r14
   2f368:	41 5f                	pop    %r15
   2f36a:	c3                   	retq   
   2f36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f370:	3c 54                	cmp    $0x54,%al
   2f372:	74 08                	je     2f37c <toml_rtots+0x11c>
   2f374:	3c 20                	cmp    $0x20,%al
   2f376:	0f 85 8c 01 00 00    	jne    2f508 <toml_rtots+0x2a8>
   2f37c:	48 83 c5 0b          	add    $0xb,%rbp
   2f380:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   2f386:	eb 88                	jmp    2f310 <toml_rtots+0xb0>
   2f388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f38f:	00 
   2f390:	4c 89 6b 50          	mov    %r13,0x50(%rbx)
   2f394:	4c 8d 6d 08          	lea    0x8(%rbp),%r13
   2f398:	4c 89 7b 40          	mov    %r15,0x40(%rbx)
   2f39c:	4c 89 73 48          	mov    %r14,0x48(%rbx)
   2f3a0:	0f b6 45 08          	movzbl 0x8(%rbp),%eax
   2f3a4:	3c 2e                	cmp    $0x2e,%al
   2f3a6:	0f 84 ac 00 00 00    	je     2f458 <toml_rtots+0x1f8>
   2f3ac:	84 c0                	test   %al,%al
   2f3ae:	74 81                	je     2f331 <toml_rtots+0xd1>
   2f3b0:	48 8d 43 1c          	lea    0x1c(%rbx),%rax
   2f3b4:	48 89 43 60          	mov    %rax,0x60(%rbx)
   2f3b8:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
   2f3bd:	89 c2                	mov    %eax,%edx
   2f3bf:	83 e2 df             	and    $0xffffffdf,%edx
   2f3c2:	80 fa 5a             	cmp    $0x5a,%dl
   2f3c5:	74 79                	je     2f440 <toml_rtots+0x1e0>
   2f3c7:	8d 50 d5             	lea    -0x2b(%rax),%edx
   2f3ca:	81 e2 fd 00 00 00    	and    $0xfd,%edx
   2f3d0:	0f 85 53 ff ff ff    	jne    2f329 <toml_rtots+0xc9>
   2f3d6:	88 43 1c             	mov    %al,0x1c(%rbx)
   2f3d9:	e8 22 17 fe ff       	callq  10b00 <__ctype_b_loc@plt>
   2f3de:	49 0f be 75 01       	movsbq 0x1(%r13),%rsi
   2f3e3:	48 8b 08             	mov    (%rax),%rcx
   2f3e6:	48 89 f2             	mov    %rsi,%rdx
   2f3e9:	f6 44 71 01 08       	testb  $0x8,0x1(%rcx,%rsi,2)
   2f3ee:	0f 84 14 01 00 00    	je     2f508 <toml_rtots+0x2a8>
   2f3f4:	49 0f be 75 02       	movsbq 0x2(%r13),%rsi
   2f3f9:	f6 44 71 01 08       	testb  $0x8,0x1(%rcx,%rsi,2)
   2f3fe:	0f 84 04 01 00 00    	je     2f508 <toml_rtots+0x2a8>
   2f404:	88 53 1d             	mov    %dl,0x1d(%rbx)
   2f407:	41 0f b6 55 02       	movzbl 0x2(%r13),%edx
   2f40c:	88 53 1e             	mov    %dl,0x1e(%rbx)
   2f40f:	41 80 7d 03 3a       	cmpb   $0x3a,0x3(%r13)
   2f414:	0f 84 ae 00 00 00    	je     2f4c8 <toml_rtots+0x268>
   2f41a:	49 8d 45 03          	lea    0x3(%r13),%rax
   2f41e:	48 8d 53 1f          	lea    0x1f(%rbx),%rdx
   2f422:	c6 02 00             	movb   $0x0,(%rdx)
   2f425:	0f b6 00             	movzbl (%rax),%eax
   2f428:	e9 fc fe ff ff       	jmpq   2f329 <toml_rtots+0xc9>
   2f42d:	0f 1f 00             	nopl   (%rax)
   2f430:	45 31 e4             	xor    %r12d,%r12d
   2f433:	e9 d8 fe ff ff       	jmpq   2f310 <toml_rtots+0xb0>
   2f438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f43f:	00 
   2f440:	b8 5a 00 00 00       	mov    $0x5a,%eax
   2f445:	66 89 43 1c          	mov    %ax,0x1c(%rbx)
   2f449:	41 0f b6 45 01       	movzbl 0x1(%r13),%eax
   2f44e:	e9 d6 fe ff ff       	jmpq   2f329 <toml_rtots+0xc9>
   2f453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f458:	e8 b3 06 fe ff       	callq  fb10 <__errno_location@plt>
   2f45d:	31 d2                	xor    %edx,%edx
   2f45f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2f464:	48 8d 7d 09          	lea    0x9(%rbp),%rdi
   2f468:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2f46e:	49 89 c5             	mov    %rax,%r13
   2f471:	e8 6a 0e fe ff       	callq  102e0 <strtol@plt>
   2f476:	89 43 18             	mov    %eax,0x18(%rbx)
   2f479:	41 8b 55 00          	mov    0x0(%r13),%edx
   2f47d:	89 c1                	mov    %eax,%ecx
   2f47f:	85 d2                	test   %edx,%edx
   2f481:	0f 85 81 00 00 00    	jne    2f508 <toml_rtots+0x2a8>
   2f487:	be cd cc cc cc       	mov    $0xcccccccd,%esi
   2f48c:	3d e7 03 00 00       	cmp    $0x3e7,%eax
   2f491:	7f 07                	jg     2f49a <toml_rtots+0x23a>
   2f493:	eb 17                	jmp    2f4ac <toml_rtots+0x24c>
   2f495:	0f 1f 00             	nopl   (%rax)
   2f498:	89 d1                	mov    %edx,%ecx
   2f49a:	89 c8                	mov    %ecx,%eax
   2f49c:	f7 e6                	mul    %esi
   2f49e:	c1 ea 03             	shr    $0x3,%edx
   2f4a1:	81 f9 0f 27 00 00    	cmp    $0x270f,%ecx
   2f4a7:	7f ef                	jg     2f498 <toml_rtots+0x238>
   2f4a9:	89 53 18             	mov    %edx,0x18(%rbx)
   2f4ac:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   2f4b1:	48 8d 43 18          	lea    0x18(%rbx),%rax
   2f4b5:	48 89 43 58          	mov    %rax,0x58(%rbx)
   2f4b9:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
   2f4be:	e9 e9 fe ff ff       	jmpq   2f3ac <toml_rtots+0x14c>
   2f4c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f4c8:	c6 43 1f 3a          	movb   $0x3a,0x1f(%rbx)
   2f4cc:	48 8b 10             	mov    (%rax),%rdx
   2f4cf:	49 0f be 4d 04       	movsbq 0x4(%r13),%rcx
   2f4d4:	48 89 c8             	mov    %rcx,%rax
   2f4d7:	f6 44 4a 01 08       	testb  $0x8,0x1(%rdx,%rcx,2)
   2f4dc:	74 2a                	je     2f508 <toml_rtots+0x2a8>
   2f4de:	49 0f be 4d 05       	movsbq 0x5(%r13),%rcx
   2f4e3:	f6 44 4a 01 08       	testb  $0x8,0x1(%rdx,%rcx,2)
   2f4e8:	74 1e                	je     2f508 <toml_rtots+0x2a8>
   2f4ea:	88 43 20             	mov    %al,0x20(%rbx)
   2f4ed:	41 0f b6 4d 05       	movzbl 0x5(%r13),%ecx
   2f4f2:	49 8d 45 06          	lea    0x6(%r13),%rax
   2f4f6:	48 8d 53 22          	lea    0x22(%rbx),%rdx
   2f4fa:	88 4b 21             	mov    %cl,0x21(%rbx)
   2f4fd:	e9 20 ff ff ff       	jmpq   2f422 <toml_rtots+0x1c2>
   2f502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2f508:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   2f50e:	e9 32 fe ff ff       	jmpq   2f345 <toml_rtots+0xe5>
   2f513:	e8 38 09 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f518 <.annobin_toml_rtob.start>:
   2f518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f51f:	00 

000000000002f520 <toml_rtob>:
   2f520:	f3 0f 1e fa          	endbr64 
   2f524:	48 83 ec 18          	sub    $0x18,%rsp
   2f528:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f52f:	00 00 
   2f531:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f536:	31 c0                	xor    %eax,%eax
   2f538:	48 85 ff             	test   %rdi,%rdi
   2f53b:	74 73                	je     2f5b0 <toml_rtob+0x90>
   2f53d:	49 89 f8             	mov    %rdi,%r8
   2f540:	48 85 f6             	test   %rsi,%rsi
   2f543:	48 89 f2             	mov    %rsi,%rdx
   2f546:	b9 05 00 00 00       	mov    $0x5,%ecx
   2f54b:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   2f550:	48 8d 3d 6a 3e 01 00 	lea    0x13e6a(%rip),%rdi        # 433c1 <__PRETTY_FUNCTION__.11024+0x281>
   2f557:	4c 89 c6             	mov    %r8,%rsi
   2f55a:	48 0f 44 d0          	cmove  %rax,%rdx
   2f55e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   2f560:	0f 97 c0             	seta   %al
   2f563:	1c 00                	sbb    $0x0,%al
   2f565:	0f be c0             	movsbl %al,%eax
   2f568:	85 c0                	test   %eax,%eax
   2f56a:	74 3c                	je     2f5a8 <toml_rtob+0x88>
   2f56c:	b9 06 00 00 00       	mov    $0x6,%ecx
   2f571:	48 8d 3d 4e 3e 01 00 	lea    0x13e4e(%rip),%rdi        # 433c6 <__PRETTY_FUNCTION__.11024+0x286>
   2f578:	4c 89 c6             	mov    %r8,%rsi
   2f57b:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   2f57d:	0f 97 c0             	seta   %al
   2f580:	1c 00                	sbb    $0x0,%al
   2f582:	0f be c0             	movsbl %al,%eax
   2f585:	85 c0                	test   %eax,%eax
   2f587:	75 27                	jne    2f5b0 <toml_rtob+0x90>
   2f589:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   2f58f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2f594:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2f59b:	00 00 
   2f59d:	75 18                	jne    2f5b7 <toml_rtob+0x97>
   2f59f:	48 83 c4 18          	add    $0x18,%rsp
   2f5a3:	c3                   	retq   
   2f5a4:	0f 1f 40 00          	nopl   0x0(%rax)
   2f5a8:	c7 02 01 00 00 00    	movl   $0x1,(%rdx)
   2f5ae:	eb df                	jmp    2f58f <toml_rtob+0x6f>
   2f5b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f5b5:	eb d8                	jmp    2f58f <toml_rtob+0x6f>
   2f5b7:	e8 94 08 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f5bc <.annobin_toml_rtob.end>:
   2f5bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f5c0 <toml_rtoi>:
   2f5c0:	f3 0f 1e fa          	endbr64 
   2f5c4:	41 55                	push   %r13
   2f5c6:	41 54                	push   %r12
   2f5c8:	55                   	push   %rbp
   2f5c9:	53                   	push   %rbx
   2f5ca:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   2f5d1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f5d8:	00 00 
   2f5da:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   2f5df:	31 c0                	xor    %eax,%eax
   2f5e1:	48 85 ff             	test   %rdi,%rdi
   2f5e4:	74 5a                	je     2f640 <toml_rtoi+0x80>
   2f5e6:	48 89 e0             	mov    %rsp,%rax
   2f5e9:	48 85 f6             	test   %rsi,%rsi
   2f5ec:	48 89 f3             	mov    %rsi,%rbx
   2f5ef:	48 0f 44 d8          	cmove  %rax,%rbx
   2f5f3:	0f b6 07             	movzbl (%rdi),%eax
   2f5f6:	8d 50 d5             	lea    -0x2b(%rax),%edx
   2f5f9:	81 e2 fd 00 00 00    	and    $0xfd,%edx
   2f5ff:	74 6f                	je     2f670 <toml_rtoi+0xb0>
   2f601:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   2f606:	48 89 ee             	mov    %rbp,%rsi
   2f609:	3c 5f                	cmp    $0x5f,%al
   2f60b:	74 33                	je     2f640 <toml_rtoi+0x80>
   2f60d:	45 31 ed             	xor    %r13d,%r13d
   2f610:	3c 30                	cmp    $0x30,%al
   2f612:	0f 84 d0 00 00 00    	je     2f6e8 <toml_rtoi+0x128>
   2f618:	4c 8d 45 64          	lea    0x64(%rbp),%r8
   2f61c:	eb 0b                	jmp    2f629 <toml_rtoi+0x69>
   2f61e:	66 90                	xchg   %ax,%ax
   2f620:	88 06                	mov    %al,(%rsi)
   2f622:	48 83 c6 01          	add    $0x1,%rsi
   2f626:	0f b6 07             	movzbl (%rdi),%eax
   2f629:	84 c0                	test   %al,%al
   2f62b:	74 63                	je     2f690 <toml_rtoi+0xd0>
   2f62d:	4c 39 c6             	cmp    %r8,%rsi
   2f630:	73 0e                	jae    2f640 <toml_rtoi+0x80>
   2f632:	48 83 c7 01          	add    $0x1,%rdi
   2f636:	3c 5f                	cmp    $0x5f,%al
   2f638:	75 e6                	jne    2f620 <toml_rtoi+0x60>
   2f63a:	80 3f 5f             	cmpb   $0x5f,(%rdi)
   2f63d:	75 e7                	jne    2f626 <toml_rtoi+0x66>
   2f63f:	90                   	nop
   2f640:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f645:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   2f64a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2f651:	00 00 
   2f653:	0f 85 0a 01 00 00    	jne    2f763 <toml_rtoi+0x1a3>
   2f659:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   2f660:	5b                   	pop    %rbx
   2f661:	5d                   	pop    %rbp
   2f662:	41 5c                	pop    %r12
   2f664:	41 5d                	pop    %r13
   2f666:	c3                   	retq   
   2f667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f66e:	00 00 
   2f670:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   2f675:	88 44 24 10          	mov    %al,0x10(%rsp)
   2f679:	48 83 c7 01          	add    $0x1,%rdi
   2f67d:	0f b6 07             	movzbl (%rdi),%eax
   2f680:	48 8d 75 01          	lea    0x1(%rbp),%rsi
   2f684:	eb 83                	jmp    2f609 <toml_rtoi+0x49>
   2f686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f68d:	00 00 00 
   2f690:	48 8d 45 64          	lea    0x64(%rbp),%rax
   2f694:	48 39 c6             	cmp    %rax,%rsi
   2f697:	74 a7                	je     2f640 <toml_rtoi+0x80>
   2f699:	80 7f ff 5f          	cmpb   $0x5f,-0x1(%rdi)
   2f69d:	74 a1                	je     2f640 <toml_rtoi+0x80>
   2f69f:	c6 06 00             	movb   $0x0,(%rsi)
   2f6a2:	e8 69 04 fe ff       	callq  fb10 <__errno_location@plt>
   2f6a7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2f6ac:	44 89 ea             	mov    %r13d,%edx
   2f6af:	48 89 ef             	mov    %rbp,%rdi
   2f6b2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2f6b8:	49 89 c4             	mov    %rax,%r12
   2f6bb:	e8 a0 0b fe ff       	callq  10260 <strtoll@plt>
   2f6c0:	48 89 03             	mov    %rax,(%rbx)
   2f6c3:	41 8b 04 24          	mov    (%r12),%eax
   2f6c7:	85 c0                	test   %eax,%eax
   2f6c9:	0f 85 71 ff ff ff    	jne    2f640 <toml_rtoi+0x80>
   2f6cf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f6d4:	80 38 00             	cmpb   $0x0,(%rax)
   2f6d7:	0f 95 c0             	setne  %al
   2f6da:	0f b6 c0             	movzbl %al,%eax
   2f6dd:	f7 d8                	neg    %eax
   2f6df:	e9 61 ff ff ff       	jmpq   2f645 <toml_rtoi+0x85>
   2f6e4:	0f 1f 40 00          	nopl   0x0(%rax)
   2f6e8:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   2f6ec:	80 fa 62             	cmp    $0x62,%dl
   2f6ef:	74 45                	je     2f736 <toml_rtoi+0x176>
   2f6f1:	7e 2d                	jle    2f720 <toml_rtoi+0x160>
   2f6f3:	80 fa 6f             	cmp    $0x6f,%dl
   2f6f6:	74 58                	je     2f750 <toml_rtoi+0x190>
   2f6f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f6fd:	80 fa 78             	cmp    $0x78,%dl
   2f700:	0f 85 3f ff ff ff    	jne    2f645 <toml_rtoi+0x85>
   2f706:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
   2f70a:	41 bd 10 00 00 00    	mov    $0x10,%r13d
   2f710:	48 83 c7 02          	add    $0x2,%rdi
   2f714:	e9 ff fe ff ff       	jmpq   2f618 <toml_rtoi+0x58>
   2f719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2f720:	84 d2                	test   %dl,%dl
   2f722:	0f 85 18 ff ff ff    	jne    2f640 <toml_rtoi+0x80>
   2f728:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2f72f:	31 c0                	xor    %eax,%eax
   2f731:	e9 0f ff ff ff       	jmpq   2f645 <toml_rtoi+0x85>
   2f736:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
   2f73a:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   2f740:	48 83 c7 02          	add    $0x2,%rdi
   2f744:	e9 cf fe ff ff       	jmpq   2f618 <toml_rtoi+0x58>
   2f749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2f750:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
   2f754:	41 bd 08 00 00 00    	mov    $0x8,%r13d
   2f75a:	48 83 c7 02          	add    $0x2,%rdi
   2f75e:	e9 b5 fe ff ff       	jmpq   2f618 <toml_rtoi+0x58>
   2f763:	e8 e8 06 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f768 <.annobin_toml_rtod_ex.start>:
   2f768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f76f:	00 

000000000002f770 <toml_rtod_ex>:
   2f770:	f3 0f 1e fa          	endbr64 
   2f774:	41 57                	push   %r15
   2f776:	41 56                	push   %r14
   2f778:	41 55                	push   %r13
   2f77a:	41 54                	push   %r12
   2f77c:	55                   	push   %rbp
   2f77d:	53                   	push   %rbx
   2f77e:	48 83 ec 28          	sub    $0x28,%rsp
   2f782:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f789:	00 00 
   2f78b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f790:	31 c0                	xor    %eax,%eax
   2f792:	48 85 ff             	test   %rdi,%rdi
   2f795:	0f 84 85 00 00 00    	je     2f820 <toml_rtod_ex+0xb0>
   2f79b:	4c 63 e9             	movslq %ecx,%r13
   2f79e:	0f b6 1f             	movzbl (%rdi),%ebx
   2f7a1:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f7a6:	49 89 f7             	mov    %rsi,%r15
   2f7a9:	49 01 d5             	add    %rdx,%r13
   2f7ac:	48 85 f6             	test   %rsi,%rsi
   2f7af:	48 89 fd             	mov    %rdi,%rbp
   2f7b2:	49 89 d6             	mov    %rdx,%r14
   2f7b5:	4c 0f 44 f8          	cmove  %rax,%r15
   2f7b9:	8d 43 d5             	lea    -0x2b(%rbx),%eax
   2f7bc:	49 89 d4             	mov    %rdx,%r12
   2f7bf:	a8 fd                	test   $0xfd,%al
   2f7c1:	0f 84 e1 00 00 00    	je     2f8a8 <toml_rtod_ex+0x138>
   2f7c7:	80 fb 2e             	cmp    $0x2e,%bl
   2f7ca:	74 54                	je     2f820 <toml_rtod_ex+0xb0>
   2f7cc:	80 fb 5f             	cmp    $0x5f,%bl
   2f7cf:	74 4f                	je     2f820 <toml_rtod_ex+0xb0>
   2f7d1:	80 fb 30             	cmp    $0x30,%bl
   2f7d4:	75 14                	jne    2f7ea <toml_rtod_ex+0x7a>
   2f7d6:	e9 e5 00 00 00       	jmpq   2f8c0 <toml_rtod_ex+0x150>
   2f7db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f7e0:	80 7d 00 5f          	cmpb   $0x5f,0x0(%rbp)
   2f7e4:	74 3a                	je     2f820 <toml_rtod_ex+0xb0>
   2f7e6:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   2f7ea:	84 db                	test   %bl,%bl
   2f7ec:	74 62                	je     2f850 <toml_rtod_ex+0xe0>
   2f7ee:	4d 39 ec             	cmp    %r13,%r12
   2f7f1:	73 2d                	jae    2f820 <toml_rtod_ex+0xb0>
   2f7f3:	48 83 c5 01          	add    $0x1,%rbp
   2f7f7:	80 fb 2e             	cmp    $0x2e,%bl
   2f7fa:	74 14                	je     2f810 <toml_rtod_ex+0xa0>
   2f7fc:	80 fb 5f             	cmp    $0x5f,%bl
   2f7ff:	74 df                	je     2f7e0 <toml_rtod_ex+0x70>
   2f801:	41 88 1c 24          	mov    %bl,(%r12)
   2f805:	49 83 c4 01          	add    $0x1,%r12
   2f809:	eb db                	jmp    2f7e6 <toml_rtod_ex+0x76>
   2f80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f810:	80 7d fe 5f          	cmpb   $0x5f,-0x2(%rbp)
   2f814:	74 0a                	je     2f820 <toml_rtod_ex+0xb0>
   2f816:	80 7d 00 5f          	cmpb   $0x5f,0x0(%rbp)
   2f81a:	75 e5                	jne    2f801 <toml_rtod_ex+0x91>
   2f81c:	0f 1f 40 00          	nopl   0x0(%rax)
   2f820:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2f825:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   2f82a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   2f831:	00 00 
   2f833:	0f 85 b0 00 00 00    	jne    2f8e9 <toml_rtod_ex+0x179>
   2f839:	48 83 c4 28          	add    $0x28,%rsp
   2f83d:	5b                   	pop    %rbx
   2f83e:	5d                   	pop    %rbp
   2f83f:	41 5c                	pop    %r12
   2f841:	41 5d                	pop    %r13
   2f843:	41 5e                	pop    %r14
   2f845:	41 5f                	pop    %r15
   2f847:	c3                   	retq   
   2f848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f84f:	00 
   2f850:	4d 39 ec             	cmp    %r13,%r12
   2f853:	74 cb                	je     2f820 <toml_rtod_ex+0xb0>
   2f855:	80 7d ff 5f          	cmpb   $0x5f,-0x1(%rbp)
   2f859:	74 c5                	je     2f820 <toml_rtod_ex+0xb0>
   2f85b:	4d 39 f4             	cmp    %r14,%r12
   2f85e:	74 08                	je     2f868 <toml_rtod_ex+0xf8>
   2f860:	41 80 7c 24 ff 2e    	cmpb   $0x2e,-0x1(%r12)
   2f866:	74 b8                	je     2f820 <toml_rtod_ex+0xb0>
   2f868:	41 c6 04 24 00       	movb   $0x0,(%r12)
   2f86d:	e8 9e 02 fe ff       	callq  fb10 <__errno_location@plt>
   2f872:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2f877:	4c 89 f7             	mov    %r14,%rdi
   2f87a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2f880:	48 89 c3             	mov    %rax,%rbx
   2f883:	e8 08 04 fe ff       	callq  fc90 <strtod@plt>
   2f888:	8b 03                	mov    (%rbx),%eax
   2f88a:	f2 41 0f 11 07       	movsd  %xmm0,(%r15)
   2f88f:	85 c0                	test   %eax,%eax
   2f891:	75 8d                	jne    2f820 <toml_rtod_ex+0xb0>
   2f893:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2f898:	80 38 00             	cmpb   $0x0,(%rax)
   2f89b:	0f 95 c0             	setne  %al
   2f89e:	0f b6 c0             	movzbl %al,%eax
   2f8a1:	f7 d8                	neg    %eax
   2f8a3:	eb 80                	jmp    2f825 <toml_rtod_ex+0xb5>
   2f8a5:	0f 1f 00             	nopl   (%rax)
   2f8a8:	88 1a                	mov    %bl,(%rdx)
   2f8aa:	4c 8d 62 01          	lea    0x1(%rdx),%r12
   2f8ae:	0f b6 5f 01          	movzbl 0x1(%rdi),%ebx
   2f8b2:	48 83 c5 01          	add    $0x1,%rbp
   2f8b6:	e9 0c ff ff ff       	jmpq   2f7c7 <toml_rtod_ex+0x57>
   2f8bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f8c0:	0f b6 45 01          	movzbl 0x1(%rbp),%eax
   2f8c4:	84 c0                	test   %al,%al
   2f8c6:	0f 84 1e ff ff ff    	je     2f7ea <toml_rtod_ex+0x7a>
   2f8cc:	0f be f0             	movsbl %al,%esi
   2f8cf:	48 8d 3d f6 3a 01 00 	lea    0x13af6(%rip),%rdi        # 433cc <__PRETTY_FUNCTION__.11024+0x28c>
   2f8d6:	e8 d5 05 fe ff       	callq  feb0 <strchr@plt>
   2f8db:	48 85 c0             	test   %rax,%rax
   2f8de:	0f 85 06 ff ff ff    	jne    2f7ea <toml_rtod_ex+0x7a>
   2f8e4:	e9 37 ff ff ff       	jmpq   2f820 <toml_rtod_ex+0xb0>
   2f8e9:	e8 62 05 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f8ee <.annobin_toml_rtod.start>:
   2f8ee:	66 90                	xchg   %ax,%ax

000000000002f8f0 <toml_rtod>:
   2f8f0:	f3 0f 1e fa          	endbr64 
   2f8f4:	48 83 ec 78          	sub    $0x78,%rsp
   2f8f8:	b9 64 00 00 00       	mov    $0x64,%ecx
   2f8fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f904:	00 00 
   2f906:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2f90b:	31 c0                	xor    %eax,%eax
   2f90d:	48 89 e2             	mov    %rsp,%rdx
   2f910:	e8 5b fe ff ff       	callq  2f770 <toml_rtod_ex>
   2f915:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   2f91a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2f921:	00 00 
   2f923:	75 05                	jne    2f92a <toml_rtod+0x3a>
   2f925:	48 83 c4 78          	add    $0x78,%rsp
   2f929:	c3                   	retq   
   2f92a:	e8 21 05 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f92f <.annobin_toml_rtod.end>:
   2f92f:	90                   	nop

000000000002f930 <valtype>:
   2f930:	53                   	push   %rbx
   2f931:	48 83 ec 70          	sub    $0x70,%rsp
   2f935:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2f93c:	00 00 
   2f93e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2f943:	31 c0                	xor    %eax,%eax
   2f945:	0f b6 07             	movzbl (%rdi),%eax
   2f948:	3c 27                	cmp    $0x27,%al
   2f94a:	74 74                	je     2f9c0 <valtype+0x90>
   2f94c:	3c 22                	cmp    $0x22,%al
   2f94e:	74 70                	je     2f9c0 <valtype+0x90>
   2f950:	31 f6                	xor    %esi,%esi
   2f952:	48 89 fb             	mov    %rdi,%rbx
   2f955:	e8 c6 fb ff ff       	callq  2f520 <toml_rtob>
   2f95a:	ba 62 00 00 00       	mov    $0x62,%edx
   2f95f:	85 c0                	test   %eax,%eax
   2f961:	74 62                	je     2f9c5 <valtype+0x95>
   2f963:	31 f6                	xor    %esi,%esi
   2f965:	48 89 df             	mov    %rbx,%rdi
   2f968:	e8 53 fc ff ff       	callq  2f5c0 <toml_rtoi>
   2f96d:	ba 69 00 00 00       	mov    $0x69,%edx
   2f972:	85 c0                	test   %eax,%eax
   2f974:	74 4f                	je     2f9c5 <valtype+0x95>
   2f976:	31 f6                	xor    %esi,%esi
   2f978:	48 89 df             	mov    %rbx,%rdi
   2f97b:	e8 70 ff ff ff       	callq  2f8f0 <toml_rtod>
   2f980:	ba 64 00 00 00       	mov    $0x64,%edx
   2f985:	85 c0                	test   %eax,%eax
   2f987:	74 3c                	je     2f9c5 <valtype+0x95>
   2f989:	48 89 e6             	mov    %rsp,%rsi
   2f98c:	48 89 df             	mov    %rbx,%rdi
   2f98f:	e8 cc f8 ff ff       	callq  2f260 <toml_rtots>
   2f994:	ba 75 00 00 00       	mov    $0x75,%edx
   2f999:	85 c0                	test   %eax,%eax
   2f99b:	75 28                	jne    2f9c5 <valtype+0x95>
   2f99d:	48 83 7c 24 28 00    	cmpq   $0x0,0x28(%rsp)
   2f9a3:	ba 74 00 00 00       	mov    $0x74,%edx
   2f9a8:	74 1b                	je     2f9c5 <valtype+0x95>
   2f9aa:	48 83 7c 24 40 01    	cmpq   $0x1,0x40(%rsp)
   2f9b0:	19 d2                	sbb    %edx,%edx
   2f9b2:	83 e2 f0             	and    $0xfffffff0,%edx
   2f9b5:	83 c2 54             	add    $0x54,%edx
   2f9b8:	eb 0b                	jmp    2f9c5 <valtype+0x95>
   2f9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2f9c0:	ba 73 00 00 00       	mov    $0x73,%edx
   2f9c5:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   2f9ca:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2f9d1:	00 00 
   2f9d3:	89 d0                	mov    %edx,%eax
   2f9d5:	75 06                	jne    2f9dd <valtype+0xad>
   2f9d7:	48 83 c4 70          	add    $0x70,%rsp
   2f9db:	5b                   	pop    %rbx
   2f9dc:	c3                   	retq   
   2f9dd:	e8 6e 04 fe ff       	callq  fe50 <__stack_chk_fail@plt>

000000000002f9e2 <.annobin_parse_array.start>:
   2f9e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2f9e9:	00 00 00 00 
   2f9ed:	0f 1f 00             	nopl   (%rax)

000000000002f9f0 <parse_array>:
   2f9f0:	41 55                	push   %r13
   2f9f2:	41 54                	push   %r12
   2f9f4:	55                   	push   %rbp
   2f9f5:	53                   	push   %rbx
   2f9f6:	48 89 fb             	mov    %rdi,%rbx
   2f9f9:	48 83 ec 08          	sub    $0x8,%rsp
   2f9fd:	83 bf e8 00 00 00 07 	cmpl   $0x7,0xe8(%rdi)
   2fa04:	0f 85 bb 02 00 00    	jne    2fcc5 <parse_array+0x2d5>
   2fa0a:	48 89 f5             	mov    %rsi,%rbp
   2fa0d:	31 f6                	xor    %esi,%esi
   2fa0f:	e8 8c df ff ff       	callq  2d9a0 <next_token>
   2fa14:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   2fa1a:	83 f8 06             	cmp    $0x6,%eax
   2fa1d:	0f 84 ad 01 00 00    	je     2fbd0 <parse_array+0x1e0>
   2fa23:	83 f8 08             	cmp    $0x8,%eax
   2fa26:	0f 84 83 01 00 00    	je     2fbaf <parse_array+0x1bf>
   2fa2c:	83 f8 07             	cmp    $0x7,%eax
   2fa2f:	0f 84 ab 01 00 00    	je     2fbe0 <parse_array+0x1f0>
   2fa35:	83 f8 09             	cmp    $0x9,%eax
   2fa38:	0f 85 aa 00 00 00    	jne    2fae8 <parse_array+0xf8>
   2fa3e:	8b 45 08             	mov    0x8(%rbp),%eax
   2fa41:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
   2fa48:	44 8b a3 f8 00 00 00 	mov    0xf8(%rbx),%r12d
   2fa4f:	85 c0                	test   %eax,%eax
   2fa51:	0f 85 29 02 00 00    	jne    2fc80 <parse_array+0x290>
   2fa57:	c7 45 08 76 00 00 00 	movl   $0x76,0x8(%rbp)
   2fa5e:	8b 45 10             	mov    0x10(%rbp),%eax
   2fa61:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   2fa65:	8d 70 01             	lea    0x1(%rax),%esi
   2fa68:	48 63 f6             	movslq %esi,%rsi
   2fa6b:	48 c1 e6 03          	shl    $0x3,%rsi
   2fa6f:	ff 15 2b 69 22 00    	callq  *0x22692b(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2fa75:	48 85 c0             	test   %rax,%rax
   2fa78:	0f 84 77 02 00 00    	je     2fcf5 <parse_array+0x305>
   2fa7e:	48 89 45 18          	mov    %rax,0x18(%rbp)
   2fa82:	49 63 f4             	movslq %r12d,%rsi
   2fa85:	4c 89 ef             	mov    %r13,%rdi
   2fa88:	e8 c3 e8 ff ff       	callq  2e350 <STRNDUP>
   2fa8d:	48 85 c0             	test   %rax,%rax
   2fa90:	0f 84 50 02 00 00    	je     2fce6 <parse_array+0x2f6>
   2fa96:	48 63 55 10          	movslq 0x10(%rbp),%rdx
   2fa9a:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   2fa9e:	8d 4a 01             	lea    0x1(%rdx),%ecx
   2faa1:	89 4d 10             	mov    %ecx,0x10(%rbp)
   2faa4:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
   2faa8:	83 f9 01             	cmp    $0x1,%ecx
   2faab:	0f 84 ef 01 00 00    	je     2fca0 <parse_array+0x2b0>
   2fab1:	44 8b 65 0c          	mov    0xc(%rbp),%r12d
   2fab5:	48 89 c7             	mov    %rax,%rdi
   2fab8:	e8 73 fe ff ff       	callq  2f930 <valtype>
   2fabd:	41 39 c4             	cmp    %eax,%r12d
   2fac0:	0f 85 0b 02 00 00    	jne    2fcd1 <parse_array+0x2e1>
   2fac6:	83 bb e8 00 00 00 09 	cmpl   $0x9,0xe8(%rbx)
   2facd:	0f 84 b5 00 00 00    	je     2fb88 <parse_array+0x198>
   2fad3:	48 8d 35 17 39 01 00 	lea    0x13917(%rip),%rsi        # 433f1 <__PRETTY_FUNCTION__.11024+0x2b1>
   2fada:	48 89 df             	mov    %rbx,%rdi
   2fadd:	e8 ae e7 ff ff       	callq  2e290 <e_internal_error>
   2fae2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2fae8:	83 f8 04             	cmp    $0x4,%eax
   2faeb:	74 1b                	je     2fb08 <parse_array+0x118>
   2faed:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2faf3:	48 8d 15 bb 3a 01 00 	lea    0x13abb(%rip),%rdx        # 435b5 <__PRETTY_FUNCTION__.11024+0x475>
   2fafa:	48 89 df             	mov    %rbx,%rdi
   2fafd:	e8 5e de ff ff       	callq  2d960 <e_syntax_error>
   2fb02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2fb08:	8b 45 08             	mov    0x8(%rbp),%eax
   2fb0b:	85 c0                	test   %eax,%eax
   2fb0d:	0f 84 4d 01 00 00    	je     2fc60 <parse_array+0x270>
   2fb13:	83 f8 74             	cmp    $0x74,%eax
   2fb16:	0f 85 94 01 00 00    	jne    2fcb0 <parse_array+0x2c0>
   2fb1c:	8b 45 10             	mov    0x10(%rbp),%eax
   2fb1f:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   2fb23:	44 8d 60 01          	lea    0x1(%rax),%r12d
   2fb27:	4d 63 e4             	movslq %r12d,%r12
   2fb2a:	49 c1 e4 03          	shl    $0x3,%r12
   2fb2e:	4c 89 e6             	mov    %r12,%rsi
   2fb31:	ff 15 69 68 22 00    	callq  *0x226869(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2fb37:	48 85 c0             	test   %rax,%rax
   2fb3a:	0f 84 06 02 00 00    	je     2fd46 <parse_array+0x356>
   2fb40:	4e 8d 64 20 f8       	lea    -0x8(%rax,%r12,1),%r12
   2fb45:	48 89 45 18          	mov    %rax,0x18(%rbp)
   2fb49:	be 38 00 00 00       	mov    $0x38,%esi
   2fb4e:	bf 01 00 00 00       	mov    $0x1,%edi
   2fb53:	ff 15 4f 68 22 00    	callq  *0x22684f(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2fb59:	49 89 04 24          	mov    %rax,(%r12)
   2fb5d:	48 85 c0             	test   %rax,%rax
   2fb60:	0f 84 d1 01 00 00    	je     2fd37 <parse_array+0x347>
   2fb66:	48 63 45 10          	movslq 0x10(%rbp),%rax
   2fb6a:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   2fb6e:	48 89 df             	mov    %rbx,%rdi
   2fb71:	8d 48 01             	lea    0x1(%rax),%ecx
   2fb74:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
   2fb78:	89 4d 10             	mov    %ecx,0x10(%rbp)
   2fb7b:	e8 70 10 00 00       	callq  30bf0 <parse_table>
   2fb80:	eb 10                	jmp    2fb92 <parse_array+0x1a2>
   2fb82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2fb88:	31 f6                	xor    %esi,%esi
   2fb8a:	48 89 df             	mov    %rbx,%rdi
   2fb8d:	e8 0e de ff ff       	callq  2d9a0 <next_token>
   2fb92:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   2fb98:	83 f8 06             	cmp    $0x6,%eax
   2fb9b:	74 eb                	je     2fb88 <parse_array+0x198>
   2fb9d:	83 f8 02             	cmp    $0x2,%eax
   2fba0:	74 2e                	je     2fbd0 <parse_array+0x1e0>
   2fba2:	83 bb e8 00 00 00 08 	cmpl   $0x8,0xe8(%rbx)
   2fba9:	0f 85 3e ff ff ff    	jne    2faed <parse_array+0xfd>
   2fbaf:	48 83 c4 08          	add    $0x8,%rsp
   2fbb3:	48 89 df             	mov    %rbx,%rdi
   2fbb6:	be 01 00 00 00       	mov    $0x1,%esi
   2fbbb:	5b                   	pop    %rbx
   2fbbc:	5d                   	pop    %rbp
   2fbbd:	41 5c                	pop    %r12
   2fbbf:	41 5d                	pop    %r13
   2fbc1:	e9 da dd ff ff       	jmpq   2d9a0 <next_token>
   2fbc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fbcd:	00 00 00 
   2fbd0:	31 f6                	xor    %esi,%esi
   2fbd2:	48 89 df             	mov    %rbx,%rdi
   2fbd5:	e8 c6 dd ff ff       	callq  2d9a0 <next_token>
   2fbda:	e9 35 fe ff ff       	jmpq   2fa14 <parse_array+0x24>
   2fbdf:	90                   	nop
   2fbe0:	8b 45 08             	mov    0x8(%rbp),%eax
   2fbe3:	85 c0                	test   %eax,%eax
   2fbe5:	0f 84 85 00 00 00    	je     2fc70 <parse_array+0x280>
   2fbeb:	83 f8 61             	cmp    $0x61,%eax
   2fbee:	0f 85 2e 01 00 00    	jne    2fd22 <parse_array+0x332>
   2fbf4:	8b 45 10             	mov    0x10(%rbp),%eax
   2fbf7:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   2fbfb:	44 8d 60 01          	lea    0x1(%rax),%r12d
   2fbff:	4d 63 e4             	movslq %r12d,%r12
   2fc02:	49 c1 e4 03          	shl    $0x3,%r12
   2fc06:	4c 89 e6             	mov    %r12,%rsi
   2fc09:	ff 15 91 67 22 00    	callq  *0x226791(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2fc0f:	48 85 c0             	test   %rax,%rax
   2fc12:	0f 84 fb 00 00 00    	je     2fd13 <parse_array+0x323>
   2fc18:	4e 8d 64 20 f8       	lea    -0x8(%rax,%r12,1),%r12
   2fc1d:	48 89 45 18          	mov    %rax,0x18(%rbp)
   2fc21:	be 20 00 00 00       	mov    $0x20,%esi
   2fc26:	bf 01 00 00 00       	mov    $0x1,%edi
   2fc2b:	ff 15 77 67 22 00    	callq  *0x226777(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2fc31:	49 89 04 24          	mov    %rax,(%r12)
   2fc35:	48 85 c0             	test   %rax,%rax
   2fc38:	0f 84 c6 00 00 00    	je     2fd04 <parse_array+0x314>
   2fc3e:	48 63 45 10          	movslq 0x10(%rbp),%rax
   2fc42:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   2fc46:	48 89 df             	mov    %rbx,%rdi
   2fc49:	8d 48 01             	lea    0x1(%rax),%ecx
   2fc4c:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
   2fc50:	89 4d 10             	mov    %ecx,0x10(%rbp)
   2fc53:	e8 98 fd ff ff       	callq  2f9f0 <parse_array>
   2fc58:	e9 35 ff ff ff       	jmpq   2fb92 <parse_array+0x1a2>
   2fc5d:	0f 1f 00             	nopl   (%rax)
   2fc60:	c7 45 08 74 00 00 00 	movl   $0x74,0x8(%rbp)
   2fc67:	e9 b0 fe ff ff       	jmpq   2fb1c <parse_array+0x12c>
   2fc6c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fc70:	c7 45 08 61 00 00 00 	movl   $0x61,0x8(%rbp)
   2fc77:	e9 78 ff ff ff       	jmpq   2fbf4 <parse_array+0x204>
   2fc7c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fc80:	83 f8 76             	cmp    $0x76,%eax
   2fc83:	0f 84 d5 fd ff ff    	je     2fa5e <parse_array+0x6e>
   2fc89:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2fc8f:	48 8d 15 6a 39 01 00 	lea    0x1396a(%rip),%rdx        # 43600 <__PRETTY_FUNCTION__.11024+0x4c0>
   2fc96:	48 89 df             	mov    %rbx,%rdi
   2fc99:	e8 c2 dc ff ff       	callq  2d960 <e_syntax_error>
   2fc9e:	66 90                	xchg   %ax,%ax
   2fca0:	48 8b 3e             	mov    (%rsi),%rdi
   2fca3:	e8 88 fc ff ff       	callq  2f930 <valtype>
   2fca8:	89 45 0c             	mov    %eax,0xc(%rbp)
   2fcab:	e9 16 fe ff ff       	jmpq   2fac6 <parse_array+0xd6>
   2fcb0:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2fcb6:	48 8d 15 db 39 01 00 	lea    0x139db(%rip),%rdx        # 43698 <__PRETTY_FUNCTION__.11024+0x558>
   2fcbd:	48 89 df             	mov    %rbx,%rdi
   2fcc0:	e8 9b dc ff ff       	callq  2d960 <e_syntax_error>
   2fcc5:	48 8d 35 04 37 01 00 	lea    0x13704(%rip),%rsi        # 433d0 <__PRETTY_FUNCTION__.11024+0x290>
   2fccc:	e8 bf e5 ff ff       	callq  2e290 <e_internal_error>
   2fcd1:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2fcd7:	48 8d 15 4a 39 01 00 	lea    0x1394a(%rip),%rdx        # 43628 <__PRETTY_FUNCTION__.11024+0x4e8>
   2fcde:	48 89 df             	mov    %rbx,%rdi
   2fce1:	e8 7a dc ff ff       	callq  2d960 <e_syntax_error>
   2fce6:	48 8d 35 f9 36 01 00 	lea    0x136f9(%rip),%rsi        # 433e6 <__PRETTY_FUNCTION__.11024+0x2a6>
   2fced:	48 89 df             	mov    %rbx,%rdi
   2fcf0:	e8 2b dc ff ff       	callq  2d920 <e_outofmemory>
   2fcf5:	48 8d 35 df 36 01 00 	lea    0x136df(%rip),%rsi        # 433db <__PRETTY_FUNCTION__.11024+0x29b>
   2fcfc:	48 89 df             	mov    %rbx,%rdi
   2fcff:	e8 1c dc ff ff       	callq  2d920 <e_outofmemory>
   2fd04:	48 8d 35 fc 36 01 00 	lea    0x136fc(%rip),%rsi        # 43407 <__PRETTY_FUNCTION__.11024+0x2c7>
   2fd0b:	48 89 df             	mov    %rbx,%rdi
   2fd0e:	e8 0d dc ff ff       	callq  2d920 <e_outofmemory>
   2fd13:	48 8d 35 e2 36 01 00 	lea    0x136e2(%rip),%rsi        # 433fc <__PRETTY_FUNCTION__.11024+0x2bc>
   2fd1a:	48 89 df             	mov    %rbx,%rdi
   2fd1d:	e8 fe db ff ff       	callq  2d920 <e_outofmemory>
   2fd22:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2fd28:	48 8d 15 31 39 01 00 	lea    0x13931(%rip),%rdx        # 43660 <__PRETTY_FUNCTION__.11024+0x520>
   2fd2f:	48 89 df             	mov    %rbx,%rdi
   2fd32:	e8 29 dc ff ff       	callq  2d960 <e_syntax_error>
   2fd37:	48 8d 35 df 36 01 00 	lea    0x136df(%rip),%rsi        # 4341d <__PRETTY_FUNCTION__.11024+0x2dd>
   2fd3e:	48 89 df             	mov    %rbx,%rdi
   2fd41:	e8 da db ff ff       	callq  2d920 <e_outofmemory>
   2fd46:	48 8d 35 c5 36 01 00 	lea    0x136c5(%rip),%rsi        # 43412 <__PRETTY_FUNCTION__.11024+0x2d2>
   2fd4d:	48 89 df             	mov    %rbx,%rdi
   2fd50:	e8 cb db ff ff       	callq  2d920 <e_outofmemory>

000000000002fd55 <.annobin_parse_array.end>:
   2fd55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   2fd5c:	00 00 00 00 

000000000002fd60 <parse_keyval>:
   2fd60:	41 57                	push   %r15
   2fd62:	41 56                	push   %r14
   2fd64:	41 55                	push   %r13
   2fd66:	41 54                	push   %r12
   2fd68:	55                   	push   %rbp
   2fd69:	53                   	push   %rbx
   2fd6a:	48 89 fb             	mov    %rdi,%rbx
   2fd6d:	48 83 ec 38          	sub    $0x38,%rsp
   2fd71:	f3 0f 6f 87 e8 00 00 	movdqu 0xe8(%rdi),%xmm0
   2fd78:	00 
   2fd79:	48 8b 87 f8 00 00 00 	mov    0xf8(%rdi),%rax
   2fd80:	83 bf e8 00 00 00 09 	cmpl   $0x9,0xe8(%rdi)
   2fd87:	44 8b a7 ec 00 00 00 	mov    0xec(%rdi),%r12d
   2fd8e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2fd93:	4c 8b af f0 00 00 00 	mov    0xf0(%rdi),%r13
   2fd9a:	44 8b b7 f8 00 00 00 	mov    0xf8(%rdi),%r14d
   2fda1:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2fda6:	0f 85 3b 02 00 00    	jne    2ffe7 <parse_keyval+0x287>
   2fdac:	48 89 f5             	mov    %rsi,%rbp
   2fdaf:	be 01 00 00 00       	mov    $0x1,%esi
   2fdb4:	48 89 df             	mov    %rbx,%rdi
   2fdb7:	e8 e4 db ff ff       	callq  2d9a0 <next_token>
   2fdbc:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   2fdc2:	83 f8 01             	cmp    $0x1,%eax
   2fdc5:	0f 84 95 01 00 00    	je     2ff60 <parse_keyval+0x200>
   2fdcb:	83 f8 03             	cmp    $0x3,%eax
   2fdce:	0f 85 45 02 00 00    	jne    30019 <parse_keyval+0x2b9>
   2fdd4:	31 f6                	xor    %esi,%esi
   2fdd6:	48 89 df             	mov    %rbx,%rdi
   2fdd9:	e8 c2 db ff ff       	callq  2d9a0 <next_token>
   2fdde:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   2fde4:	83 f8 07             	cmp    $0x7,%eax
   2fde7:	0f 84 2b 01 00 00    	je     2ff18 <parse_keyval+0x1b8>
   2fded:	83 f8 09             	cmp    $0x9,%eax
   2fdf0:	74 4e                	je     2fe40 <parse_keyval+0xe0>
   2fdf2:	83 f8 04             	cmp    $0x4,%eax
   2fdf5:	74 19                	je     2fe10 <parse_keyval+0xb0>
   2fdf7:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   2fdfd:	48 8d 15 b1 37 01 00 	lea    0x137b1(%rip),%rdx        # 435b5 <__PRETTY_FUNCTION__.11024+0x475>
   2fe04:	48 89 df             	mov    %rbx,%rdi
   2fe07:	e8 54 db ff ff       	callq  2d960 <e_syntax_error>
   2fe0c:	0f 1f 40 00          	nopl   0x0(%rax)
   2fe10:	48 89 ee             	mov    %rbp,%rsi
   2fe13:	48 89 df             	mov    %rbx,%rdi
   2fe16:	45 89 f0             	mov    %r14d,%r8d
   2fe19:	4c 89 e9             	mov    %r13,%rcx
   2fe1c:	44 89 e2             	mov    %r12d,%edx
   2fe1f:	e8 cc ef ff ff       	callq  2edf0 <create_keytable_in_table.isra.6>
   2fe24:	48 83 c4 38          	add    $0x38,%rsp
   2fe28:	48 89 df             	mov    %rbx,%rdi
   2fe2b:	48 89 c6             	mov    %rax,%rsi
   2fe2e:	5b                   	pop    %rbx
   2fe2f:	5d                   	pop    %rbp
   2fe30:	41 5c                	pop    %r12
   2fe32:	41 5d                	pop    %r13
   2fe34:	41 5e                	pop    %r14
   2fe36:	41 5f                	pop    %r15
   2fe38:	e9 b3 0d 00 00       	jmpq   30bf0 <parse_table>
   2fe3d:	0f 1f 00             	nopl   (%rax)
   2fe40:	4c 89 ea             	mov    %r13,%rdx
   2fe43:	44 89 f1             	mov    %r14d,%ecx
   2fe46:	44 89 e6             	mov    %r12d,%esi
   2fe49:	48 89 df             	mov    %rbx,%rdi
   2fe4c:	e8 bf ec ff ff       	callq  2eb10 <normalize_key.isra.4>
   2fe51:	45 31 c0             	xor    %r8d,%r8d
   2fe54:	31 c9                	xor    %ecx,%ecx
   2fe56:	31 d2                	xor    %edx,%edx
   2fe58:	48 89 c6             	mov    %rax,%rsi
   2fe5b:	48 89 ef             	mov    %rbp,%rdi
   2fe5e:	49 89 c5             	mov    %rax,%r13
   2fe61:	e8 fa d8 ff ff       	callq  2d760 <check_key>
   2fe66:	85 c0                	test   %eax,%eax
   2fe68:	0f 85 c0 01 00 00    	jne    3002e <parse_keyval+0x2ce>
   2fe6e:	8b 45 0c             	mov    0xc(%rbp),%eax
   2fe71:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2fe75:	44 8d 60 01          	lea    0x1(%rax),%r12d
   2fe79:	4d 63 e4             	movslq %r12d,%r12
   2fe7c:	49 c1 e4 03          	shl    $0x3,%r12
   2fe80:	4c 89 e6             	mov    %r12,%rsi
   2fe83:	ff 15 17 65 22 00    	callq  *0x226517(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   2fe89:	48 85 c0             	test   %rax,%rax
   2fe8c:	0f 84 df 01 00 00    	je     30071 <parse_keyval+0x311>
   2fe92:	4e 8d 64 20 f8       	lea    -0x8(%rax,%r12,1),%r12
   2fe97:	48 89 45 10          	mov    %rax,0x10(%rbp)
   2fe9b:	be 10 00 00 00       	mov    $0x10,%esi
   2fea0:	bf 01 00 00 00       	mov    $0x1,%edi
   2fea5:	ff 15 fd 64 22 00    	callq  *0x2264fd(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   2feab:	49 89 04 24          	mov    %rax,(%r12)
   2feaf:	48 85 c0             	test   %rax,%rax
   2feb2:	0f 84 d6 01 00 00    	je     3008e <parse_keyval+0x32e>
   2feb8:	48 63 45 0c          	movslq 0xc(%rbp),%rax
   2febc:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   2fec0:	48 8b bb f0 00 00 00 	mov    0xf0(%rbx),%rdi
   2fec7:	48 63 b3 f8 00 00 00 	movslq 0xf8(%rbx),%rsi
   2fece:	8d 48 01             	lea    0x1(%rax),%ecx
   2fed1:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   2fed4:	48 8b 2c c2          	mov    (%rdx,%rax,8),%rbp
   2fed8:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
   2fedd:	4c 89 6d 00          	mov    %r13,0x0(%rbp)
   2fee1:	0f 85 c4 01 00 00    	jne    300ab <parse_keyval+0x34b>
   2fee7:	e8 64 e4 ff ff       	callq  2e350 <STRNDUP>
   2feec:	48 89 45 08          	mov    %rax,0x8(%rbp)
   2fef0:	48 85 c0             	test   %rax,%rax
   2fef3:	0f 84 d1 01 00 00    	je     300ca <parse_keyval+0x36a>
   2fef9:	48 83 c4 38          	add    $0x38,%rsp
   2fefd:	48 89 df             	mov    %rbx,%rdi
   2ff00:	be 01 00 00 00       	mov    $0x1,%esi
   2ff05:	5b                   	pop    %rbx
   2ff06:	5d                   	pop    %rbp
   2ff07:	41 5c                	pop    %r12
   2ff09:	41 5d                	pop    %r13
   2ff0b:	41 5e                	pop    %r14
   2ff0d:	41 5f                	pop    %r15
   2ff0f:	e9 8c da ff ff       	jmpq   2d9a0 <next_token>
   2ff14:	0f 1f 40 00          	nopl   0x0(%rax)
   2ff18:	44 89 64 24 14       	mov    %r12d,0x14(%rsp)
   2ff1d:	48 83 ec 08          	sub    $0x8,%rsp
   2ff21:	48 89 ee             	mov    %rbp,%rsi
   2ff24:	48 89 df             	mov    %rbx,%rdi
   2ff27:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
   2ff2c:	31 d2                	xor    %edx,%edx
   2ff2e:	44 89 74 24 28       	mov    %r14d,0x28(%rsp)
   2ff33:	ff 74 24 28          	pushq  0x28(%rsp)
   2ff37:	ff 74 24 28          	pushq  0x28(%rsp)
   2ff3b:	ff 74 24 28          	pushq  0x28(%rsp)
   2ff3f:	e8 7c ed ff ff       	callq  2ecc0 <create_keyarray_in_table>
   2ff44:	48 83 c4 58          	add    $0x58,%rsp
   2ff48:	48 89 df             	mov    %rbx,%rdi
   2ff4b:	48 89 c6             	mov    %rax,%rsi
   2ff4e:	5b                   	pop    %rbx
   2ff4f:	5d                   	pop    %rbp
   2ff50:	41 5c                	pop    %r12
   2ff52:	41 5d                	pop    %r13
   2ff54:	41 5e                	pop    %r14
   2ff56:	41 5f                	pop    %r15
   2ff58:	e9 93 fa ff ff       	jmpq   2f9f0 <parse_array>
   2ff5d:	0f 1f 00             	nopl   (%rax)
   2ff60:	4c 89 ea             	mov    %r13,%rdx
   2ff63:	44 89 f1             	mov    %r14d,%ecx
   2ff66:	44 89 e6             	mov    %r12d,%esi
   2ff69:	48 89 df             	mov    %rbx,%rdi
   2ff6c:	e8 9f eb ff ff       	callq  2eb10 <normalize_key.isra.4>
   2ff71:	48 89 ef             	mov    %rbp,%rdi
   2ff74:	48 89 c6             	mov    %rax,%rsi
   2ff77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2ff7c:	e8 2f f1 ff ff       	callq  2f0b0 <toml_table_in>
   2ff81:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2ff86:	49 89 c7             	mov    %rax,%r15
   2ff89:	48 85 d2             	test   %rdx,%rdx
   2ff8c:	74 09                	je     2ff97 <parse_keyval+0x237>
   2ff8e:	48 89 d7             	mov    %rdx,%rdi
   2ff91:	ff 15 19 64 22 00    	callq  *0x226419(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   2ff97:	4d 85 ff             	test   %r15,%r15
   2ff9a:	74 64                	je     30000 <parse_keyval+0x2a0>
   2ff9c:	be 01 00 00 00       	mov    $0x1,%esi
   2ffa1:	48 89 df             	mov    %rbx,%rdi
   2ffa4:	4c 89 fd             	mov    %r15,%rbp
   2ffa7:	e8 f4 d9 ff ff       	callq  2d9a0 <next_token>
   2ffac:	f3 0f 6f 8b e8 00 00 	movdqu 0xe8(%rbx),%xmm1
   2ffb3:	00 
   2ffb4:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
   2ffbb:	83 bb e8 00 00 00 09 	cmpl   $0x9,0xe8(%rbx)
   2ffc2:	44 8b a3 ec 00 00 00 	mov    0xec(%rbx),%r12d
   2ffc9:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   2ffce:	4c 8b ab f0 00 00 00 	mov    0xf0(%rbx),%r13
   2ffd5:	44 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%r14d
   2ffdc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2ffe1:	0f 84 c8 fd ff ff    	je     2fdaf <parse_keyval+0x4f>
   2ffe7:	48 8d 35 3a 34 01 00 	lea    0x1343a(%rip),%rsi        # 43428 <__PRETTY_FUNCTION__.11024+0x2e8>
   2ffee:	48 89 df             	mov    %rbx,%rdi
   2fff1:	e8 9a e2 ff ff       	callq  2e290 <e_internal_error>
   2fff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fffd:	00 00 00 
   30000:	45 89 f0             	mov    %r14d,%r8d
   30003:	4c 89 e9             	mov    %r13,%rcx
   30006:	44 89 e2             	mov    %r12d,%edx
   30009:	48 89 ee             	mov    %rbp,%rsi
   3000c:	48 89 df             	mov    %rbx,%rdi
   3000f:	e8 dc ed ff ff       	callq  2edf0 <create_keytable_in_table.isra.6>
   30014:	49 89 c7             	mov    %rax,%r15
   30017:	eb 83                	jmp    2ff9c <parse_keyval+0x23c>
   30019:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   3001f:	48 8d 15 0e 34 01 00 	lea    0x1340e(%rip),%rdx        # 43434 <__PRETTY_FUNCTION__.11024+0x2f4>
   30026:	48 89 df             	mov    %rbx,%rdi
   30029:	e8 32 d9 ff ff       	callq  2d960 <e_syntax_error>
   3002e:	50                   	push   %rax
   3002f:	48 63 73 18          	movslq 0x18(%rbx),%rsi
   30033:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   30037:	ba 01 00 00 00       	mov    $0x1,%edx
   3003c:	41 55                	push   %r13
   3003e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   30042:	45 89 e1             	mov    %r12d,%r9d
   30045:	4c 8d 05 32 33 01 00 	lea    0x13332(%rip),%r8        # 4337e <__PRETTY_FUNCTION__.11024+0x23e>
   3004c:	31 c0                	xor    %eax,%eax
   3004e:	e8 4d fa fd ff       	callq  faa0 <__snprintf_chk@plt>
   30053:	5a                   	pop    %rdx
   30054:	59                   	pop    %rcx
   30055:	4d 85 ed             	test   %r13,%r13
   30058:	74 09                	je     30063 <parse_keyval+0x303>
   3005a:	4c 89 ef             	mov    %r13,%rdi
   3005d:	ff 15 4d 63 22 00    	callq  *0x22634d(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30063:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   30067:	be 01 00 00 00       	mov    $0x1,%esi
   3006c:	e8 3f 06 fe ff       	callq  106b0 <__longjmp_chk@plt>
   30071:	4d 85 ed             	test   %r13,%r13
   30074:	74 09                	je     3007f <parse_keyval+0x31f>
   30076:	4c 89 ef             	mov    %r13,%rdi
   30079:	ff 15 31 63 22 00    	callq  *0x226331(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   3007f:	48 8d 35 b8 33 01 00 	lea    0x133b8(%rip),%rsi        # 4343e <__PRETTY_FUNCTION__.11024+0x2fe>
   30086:	48 89 df             	mov    %rbx,%rdi
   30089:	e8 92 d8 ff ff       	callq  2d920 <e_outofmemory>
   3008e:	4d 85 ed             	test   %r13,%r13
   30091:	74 09                	je     3009c <parse_keyval+0x33c>
   30093:	4c 89 ef             	mov    %r13,%rdi
   30096:	ff 15 14 63 22 00    	callq  *0x226314(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   3009c:	48 8d 35 a6 33 01 00 	lea    0x133a6(%rip),%rsi        # 43449 <__PRETTY_FUNCTION__.11024+0x309>
   300a3:	48 89 df             	mov    %rbx,%rdi
   300a6:	e8 75 d8 ff ff       	callq  2d920 <e_outofmemory>
   300ab:	48 8d 0d d6 37 01 00 	lea    0x137d6(%rip),%rcx        # 43888 <__PRETTY_FUNCTION__.3519>
   300b2:	ba 2c 04 00 00       	mov    $0x42c,%edx
   300b7:	48 8d 35 96 33 01 00 	lea    0x13396(%rip),%rsi        # 43454 <__PRETTY_FUNCTION__.11024+0x314>
   300be:	48 8d 3d 96 33 01 00 	lea    0x13396(%rip),%rdi        # 4345b <__PRETTY_FUNCTION__.11024+0x31b>
   300c5:	e8 36 ff fd ff       	callq  10000 <__assert_fail@plt>
   300ca:	48 8d 35 9b 33 01 00 	lea    0x1339b(%rip),%rsi        # 4346c <__PRETTY_FUNCTION__.11024+0x32c>
   300d1:	48 89 df             	mov    %rbx,%rdi
   300d4:	e8 47 d8 ff ff       	callq  2d920 <e_outofmemory>

00000000000300d9 <.annobin_parse_keyval.end>:
   300d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000300e0 <toml_parse>:
   300e0:	f3 0f 1e fa          	endbr64 
   300e4:	41 57                	push   %r15
   300e6:	41 56                	push   %r14
   300e8:	41 55                	push   %r13
   300ea:	49 89 f5             	mov    %rsi,%r13
   300ed:	41 54                	push   %r12
   300ef:	45 31 e4             	xor    %r12d,%r12d
   300f2:	55                   	push   %rbp
   300f3:	48 89 fd             	mov    %rdi,%rbp
   300f6:	53                   	push   %rbx
   300f7:	48 81 ec d8 02 00 00 	sub    $0x2d8,%rsp
   300fe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30105:	00 00 
   30107:	48 89 84 24 c8 02 00 	mov    %rax,0x2c8(%rsp)
   3010e:	00 
   3010f:	31 c0                	xor    %eax,%eax
   30111:	85 d2                	test   %edx,%edx
   30113:	7e 06                	jle    3011b <toml_parse+0x3b>
   30115:	c6 06 00             	movb   $0x0,(%rsi)
   30118:	41 89 d4             	mov    %edx,%r12d
   3011b:	48 8d 5c 24 70       	lea    0x70(%rsp),%rbx
   30120:	31 c0                	xor    %eax,%eax
   30122:	b9 4b 00 00 00       	mov    $0x4b,%ecx
   30127:	48 89 df             	mov    %rbx,%rdi
   3012a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   3012d:	48 89 ef             	mov    %rbp,%rdi
   30130:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
   30135:	e8 e6 fc fd ff       	callq  fe20 <strlen@plt>
   3013a:	be 38 00 00 00       	mov    $0x38,%esi
   3013f:	bf 01 00 00 00       	mov    $0x1,%edi
   30144:	48 89 ac 24 60 01 00 	mov    %rbp,0x160(%rsp)
   3014b:	00 
   3014c:	48 01 e8             	add    %rbp,%rax
   3014f:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
   30156:	00 
   30157:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   3015c:	48 b8 06 00 00 00 01 	movabs $0x100000006,%rax
   30163:	00 00 00 
   30166:	44 89 a4 24 88 00 00 	mov    %r12d,0x88(%rsp)
   3016d:	00 
   3016e:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   30175:	00 
   30176:	ff 15 2c 62 22 00    	callq  *0x22622c(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   3017c:	48 89 c5             	mov    %rax,%rbp
   3017f:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   30186:	00 
   30187:	48 85 c0             	test   %rax,%rax
   3018a:	0f 84 51 07 00 00    	je     308e1 <toml_parse+0x801>
   30190:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   30194:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   3019b:	00 
   3019c:	e8 2f 00 fe ff       	callq  101d0 <_setjmp@plt>
   301a1:	f3 0f 1e fa          	endbr64 
   301a5:	85 c0                	test   %eax,%eax
   301a7:	0f 85 53 04 00 00    	jne    30600 <toml_parse+0x520>
   301ad:	8b 8c 24 6c 01 00 00 	mov    0x16c(%rsp),%ecx
   301b4:	8b 84 24 58 01 00 00 	mov    0x158(%rsp),%eax
   301bb:	44 8b 8c 24 5c 01 00 	mov    0x15c(%rsp),%r9d
   301c2:	00 
   301c3:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
   301c7:	85 c9                	test   %ecx,%ecx
   301c9:	0f 85 eb 03 00 00    	jne    305ba <toml_parse+0x4da>
   301cf:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
   301d4:	48 8d 5c 24 70       	lea    0x70(%rsp),%rbx
   301d9:	48 89 0c 24          	mov    %rcx,(%rsp)
   301dd:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   301e2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   301e7:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   301ec:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   301f1:	eb 57                	jmp    3024a <toml_parse+0x16a>
   301f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   301f8:	83 f8 09             	cmp    $0x9,%eax
   301fb:	0f 85 7f 04 00 00    	jne    30680 <toml_parse+0x5a0>
   30201:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   30208:	00 
   30209:	48 89 df             	mov    %rbx,%rdi
   3020c:	e8 4f fb ff ff       	callq  2fd60 <parse_keyval>
   30211:	83 bc 24 58 01 00 00 	cmpl   $0x6,0x158(%rsp)
   30218:	06 
   30219:	0f 85 67 07 00 00    	jne    30986 <toml_parse+0x8a6>
   3021f:	be 01 00 00 00       	mov    $0x1,%esi
   30224:	48 89 df             	mov    %rbx,%rdi
   30227:	e8 74 d7 ff ff       	callq  2d9a0 <next_token>
   3022c:	8b 94 24 6c 01 00 00 	mov    0x16c(%rsp),%edx
   30233:	8b 84 24 58 01 00 00 	mov    0x158(%rsp),%eax
   3023a:	44 8b 8c 24 5c 01 00 	mov    0x15c(%rsp),%r9d
   30241:	00 
   30242:	85 d2                	test   %edx,%edx
   30244:	0f 85 70 03 00 00    	jne    305ba <toml_parse+0x4da>
   3024a:	83 f8 07             	cmp    $0x7,%eax
   3024d:	75 a9                	jne    301f8 <toml_parse+0x118>
   3024f:	83 bc 24 58 01 00 00 	cmpl   $0x7,0x158(%rsp)
   30256:	07 
   30257:	0f 85 3f 07 00 00    	jne    3099c <toml_parse+0x8bc>
   3025d:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   30264:	00 
   30265:	be 01 00 00 00       	mov    $0x1,%esi
   3026a:	48 89 df             	mov    %rbx,%rdi
   3026d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   30271:	48 39 54 24 78       	cmp    %rdx,0x78(%rsp)
   30276:	76 0a                	jbe    30282 <toml_parse+0x1a2>
   30278:	80 78 01 5b          	cmpb   $0x5b,0x1(%rax)
   3027c:	0f 84 6e 05 00 00    	je     307f0 <toml_parse+0x710>
   30282:	e8 19 d7 ff ff       	callq  2d9a0 <next_token>
   30287:	8b 44 24 18          	mov    0x18(%rsp),%eax
   3028b:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   3028f:	44 8b 8c 24 80 01 00 	mov    0x180(%rsp),%r9d
   30296:	00 
   30297:	8b ac 24 5c 01 00 00 	mov    0x15c(%rsp),%ebp
   3029e:	4c 8d a3 18 01 00 00 	lea    0x118(%rbx),%r12
   302a5:	44 8b 7c 24 18       	mov    0x18(%rsp),%r15d
   302aa:	45 85 c9             	test   %r9d,%r9d
   302ad:	7e 2d                	jle    302dc <toml_parse+0x1fc>
   302af:	90                   	nop
   302b0:	49 8b 3c 24          	mov    (%r12),%rdi
   302b4:	4d 89 e5             	mov    %r12,%r13
   302b7:	48 85 ff             	test   %rdi,%rdi
   302ba:	74 06                	je     302c2 <toml_parse+0x1e2>
   302bc:	ff 15 ee 60 22 00    	callq  *0x2260ee(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   302c2:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   302c9:	00 
   302ca:	41 83 c7 01          	add    $0x1,%r15d
   302ce:	49 83 c4 08          	add    $0x8,%r12
   302d2:	44 3b bc 24 80 01 00 	cmp    0x180(%rsp),%r15d
   302d9:	00 
   302da:	7c d4                	jl     302b0 <toml_parse+0x1d0>
   302dc:	c7 84 24 80 01 00 00 	movl   $0x0,0x180(%rsp)
   302e3:	00 00 00 00 
   302e7:	4c 63 64 24 18       	movslq 0x18(%rsp),%r12
   302ec:	eb 2a                	jmp    30318 <toml_parse+0x238>
   302ee:	66 90                	xchg   %ax,%ax
   302f0:	83 f8 01             	cmp    $0x1,%eax
   302f3:	0f 85 31 06 00 00    	jne    3092a <toml_parse+0x84a>
   302f9:	be 01 00 00 00       	mov    $0x1,%esi
   302fe:	48 89 df             	mov    %rbx,%rdi
   30301:	e8 9a d6 ff ff       	callq  2d9a0 <next_token>
   30306:	4c 63 a4 24 80 01 00 	movslq 0x180(%rsp),%r12
   3030d:	00 
   3030e:	41 83 fc 09          	cmp    $0x9,%r12d
   30312:	0f 8f b8 05 00 00    	jg     308d0 <toml_parse+0x7f0>
   30318:	83 bc 24 58 01 00 00 	cmpl   $0x9,0x158(%rsp)
   3031f:	09 
   30320:	0f 85 f1 05 00 00    	jne    30917 <toml_parse+0x837>
   30326:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
   3032d:	00 
   3032e:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
   30332:	48 89 df             	mov    %rbx,%rdi
   30335:	f3 0f 6f 84 24 58 01 	movdqu 0x158(%rsp),%xmm0
   3033c:	00 00 
   3033e:	48 c1 e0 03          	shl    $0x3,%rax
   30342:	8b 8c 24 68 01 00 00 	mov    0x168(%rsp),%ecx
   30349:	8b b4 24 5c 01 00 00 	mov    0x15c(%rsp),%esi
   30350:	48 89 94 04 e8 01 00 	mov    %rdx,0x1e8(%rsp,%rax,1)
   30357:	00 
   30358:	48 8b 94 24 60 01 00 	mov    0x160(%rsp),%rdx
   3035f:	00 
   30360:	0f 11 84 04 d8 01 00 	movups %xmm0,0x1d8(%rsp,%rax,1)
   30367:	00 
   30368:	e8 a3 e7 ff ff       	callq  2eb10 <normalize_key.isra.4>
   3036d:	be 01 00 00 00       	mov    $0x1,%esi
   30372:	48 89 df             	mov    %rbx,%rdi
   30375:	83 84 24 80 01 00 00 	addl   $0x1,0x180(%rsp)
   3037c:	01 
   3037d:	4a 89 84 e4 88 01 00 	mov    %rax,0x188(%rsp,%r12,8)
   30384:	00 
   30385:	e8 16 d6 ff ff       	callq  2d9a0 <next_token>
   3038a:	8b 84 24 58 01 00 00 	mov    0x158(%rsp),%eax
   30391:	83 f8 08             	cmp    $0x8,%eax
   30394:	0f 85 56 ff ff ff    	jne    302f0 <toml_parse+0x210>
   3039a:	8b 84 24 80 01 00 00 	mov    0x180(%rsp),%eax
   303a1:	85 c0                	test   %eax,%eax
   303a3:	0f 8e 12 06 00 00    	jle    309bb <toml_parse+0x8db>
   303a9:	83 e8 01             	sub    $0x1,%eax
   303ac:	48 63 c8             	movslq %eax,%rcx
   303af:	48 8d 14 49          	lea    (%rcx,%rcx,2),%rdx
   303b3:	48 8b bc cc 88 01 00 	mov    0x188(%rsp,%rcx,8),%rdi
   303ba:	00 
   303bb:	48 c1 e2 03          	shl    $0x3,%rdx
   303bf:	48 8b b4 14 e8 01 00 	mov    0x1e8(%rsp,%rdx,1),%rsi
   303c6:	00 
   303c7:	f3 0f 6f 8c 14 d8 01 	movdqu 0x1d8(%rsp,%rdx,1),%xmm1
   303ce:	00 00 
   303d0:	48 8d 94 13 68 01 00 	lea    0x168(%rbx,%rdx,1),%rdx
   303d7:	00 
   303d8:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   303dd:	8b 72 04             	mov    0x4(%rdx),%esi
   303e0:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   303e5:	89 74 24 28          	mov    %esi,0x28(%rsp)
   303e9:	48 8b 72 08          	mov    0x8(%rdx),%rsi
   303ed:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   303f2:	8b 72 10             	mov    0x10(%rdx),%esi
   303f5:	89 74 24 2c          	mov    %esi,0x2c(%rsp)
   303f9:	48 85 ff             	test   %rdi,%rdi
   303fc:	74 10                	je     3040e <toml_parse+0x32e>
   303fe:	ff 15 ac 5f 22 00    	callq  *0x225fac(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30404:	8b 84 24 80 01 00 00 	mov    0x180(%rsp),%eax
   3040b:	83 e8 01             	sub    $0x1,%eax
   3040e:	89 84 24 80 01 00 00 	mov    %eax,0x180(%rsp)
   30415:	4c 8b ac 24 70 01 00 	mov    0x170(%rsp),%r13
   3041c:	00 
   3041d:	85 c0                	test   %eax,%eax
   3041f:	0f 8e 28 01 00 00    	jle    3054d <toml_parse+0x46d>
   30425:	31 ed                	xor    %ebp,%ebp
   30427:	4d 89 ee             	mov    %r13,%r14
   3042a:	e9 8f 00 00 00       	jmpq   304be <toml_parse+0x3de>
   3042f:	90                   	nop
   30430:	41 8b 46 28          	mov    0x28(%r14),%eax
   30434:	49 8b 7e 30          	mov    0x30(%r14),%rdi
   30438:	44 8d 68 01          	lea    0x1(%rax),%r13d
   3043c:	4d 63 ed             	movslq %r13d,%r13
   3043f:	49 c1 e5 03          	shl    $0x3,%r13
   30443:	4c 89 ee             	mov    %r13,%rsi
   30446:	ff 15 54 5f 22 00    	callq  *0x225f54(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   3044c:	48 85 c0             	test   %rax,%rax
   3044f:	0f 84 e6 04 00 00    	je     3093b <toml_parse+0x85b>
   30455:	4e 8d 7c 28 f8       	lea    -0x8(%rax,%r13,1),%r15
   3045a:	49 89 46 30          	mov    %rax,0x30(%r14)
   3045e:	be 38 00 00 00       	mov    $0x38,%esi
   30463:	bf 01 00 00 00       	mov    $0x1,%edi
   30468:	ff 15 3a 5f 22 00    	callq  *0x225f3a(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   3046e:	49 89 c5             	mov    %rax,%r13
   30471:	49 89 07             	mov    %rax,(%r15)
   30474:	48 85 c0             	test   %rax,%rax
   30477:	0f 84 cd 04 00 00    	je     3094a <toml_parse+0x86a>
   3047d:	4c 89 e7             	mov    %r12,%rdi
   30480:	e8 7b de ff ff       	callq  2e300 <STRDUP>
   30485:	49 89 45 00          	mov    %rax,0x0(%r13)
   30489:	48 85 c0             	test   %rax,%rax
   3048c:	0f 84 c7 04 00 00    	je     30959 <toml_parse+0x879>
   30492:	49 63 46 28          	movslq 0x28(%r14),%rax
   30496:	49 8b 56 30          	mov    0x30(%r14),%rdx
   3049a:	8d 48 01             	lea    0x1(%rax),%ecx
   3049d:	41 89 4e 28          	mov    %ecx,0x28(%r14)
   304a1:	4c 8b 34 c2          	mov    (%rdx,%rax,8),%r14
   304a5:	41 c7 46 08 01 00 00 	movl   $0x1,0x8(%r14)
   304ac:	00 
   304ad:	48 83 c5 01          	add    $0x1,%rbp
   304b1:	39 ac 24 80 01 00 00 	cmp    %ebp,0x180(%rsp)
   304b8:	0f 8e 8c 00 00 00    	jle    3054a <toml_parse+0x46a>
   304be:	4c 8b a4 eb 18 01 00 	mov    0x118(%rbx,%rbp,8),%r12
   304c5:	00 
   304c6:	4c 8b 04 24          	mov    (%rsp),%r8
   304ca:	4c 89 f7             	mov    %r14,%rdi
   304cd:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   304d4:	00 00 
   304d6:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   304db:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   304e0:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   304e7:	00 00 
   304e9:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   304f0:	00 00 
   304f2:	4c 89 e6             	mov    %r12,%rsi
   304f5:	e8 66 d2 ff ff       	callq  2d760 <check_key>
   304fa:	83 f8 74             	cmp    $0x74,%eax
   304fd:	0f 84 6d 01 00 00    	je     30670 <toml_parse+0x590>
   30503:	83 f8 76             	cmp    $0x76,%eax
   30506:	0f 84 74 03 00 00    	je     30880 <toml_parse+0x7a0>
   3050c:	83 f8 61             	cmp    $0x61,%eax
   3050f:	0f 85 1b ff ff ff    	jne    30430 <toml_parse+0x350>
   30515:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   3051a:	83 7a 08 74          	cmpl   $0x74,0x8(%rdx)
   3051e:	0f 85 44 04 00 00    	jne    30968 <toml_parse+0x888>
   30524:	48 63 42 10          	movslq 0x10(%rdx),%rax
   30528:	85 c0                	test   %eax,%eax
   3052a:	0f 84 47 04 00 00    	je     30977 <toml_parse+0x897>
   30530:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   30534:	48 83 c5 01          	add    $0x1,%rbp
   30538:	4c 8b 74 c2 f8       	mov    -0x8(%rdx,%rax,8),%r14
   3053d:	39 ac 24 80 01 00 00 	cmp    %ebp,0x180(%rsp)
   30544:	0f 8f 74 ff ff ff    	jg     304be <toml_parse+0x3de>
   3054a:	4d 89 f5             	mov    %r14,%r13
   3054d:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
   30551:	4c 89 ac 24 78 01 00 	mov    %r13,0x178(%rsp)
   30558:	00 
   30559:	85 f6                	test   %esi,%esi
   3055b:	0f 85 67 01 00 00    	jne    306c8 <toml_parse+0x5e8>
   30561:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   30566:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   3056b:	4c 89 ee             	mov    %r13,%rsi
   3056e:	48 89 df             	mov    %rbx,%rdi
   30571:	8b 54 24 28          	mov    0x28(%rsp),%edx
   30575:	e8 76 e8 ff ff       	callq  2edf0 <create_keytable_in_table.isra.6>
   3057a:	83 bc 24 58 01 00 00 	cmpl   $0x8,0x158(%rsp)
   30581:	08 
   30582:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   30589:	00 
   3058a:	0f 85 3c 04 00 00    	jne    309cc <toml_parse+0x8ec>
   30590:	be 01 00 00 00       	mov    $0x1,%esi
   30595:	48 89 df             	mov    %rbx,%rdi
   30598:	e8 03 d4 ff ff       	callq  2d9a0 <next_token>
   3059d:	83 bc 24 58 01 00 00 	cmpl   $0x6,0x158(%rsp)
   305a4:	06 
   305a5:	0f 85 84 04 00 00    	jne    30a2f <toml_parse+0x94f>
   305ab:	8b 8c 24 6c 01 00 00 	mov    0x16c(%rsp),%ecx
   305b2:	85 c9                	test   %ecx,%ecx
   305b4:	0f 84 65 fc ff ff    	je     3021f <toml_parse+0x13f>
   305ba:	44 8b 94 24 80 01 00 	mov    0x180(%rsp),%r10d
   305c1:	00 
   305c2:	31 db                	xor    %ebx,%ebx
   305c4:	45 85 d2             	test   %r10d,%r10d
   305c7:	7e 27                	jle    305f0 <toml_parse+0x510>
   305c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   305d0:	48 8b bc dc 88 01 00 	mov    0x188(%rsp,%rbx,8),%rdi
   305d7:	00 
   305d8:	48 85 ff             	test   %rdi,%rdi
   305db:	74 06                	je     305e3 <toml_parse+0x503>
   305dd:	ff 15 cd 5d 22 00    	callq  *0x225dcd(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   305e3:	48 83 c3 01          	add    $0x1,%rbx
   305e7:	39 9c 24 80 01 00 00 	cmp    %ebx,0x180(%rsp)
   305ee:	7f e0                	jg     305d0 <toml_parse+0x4f0>
   305f0:	48 8b ac 24 70 01 00 	mov    0x170(%rsp),%rbp
   305f7:	00 
   305f8:	eb 45                	jmp    3063f <toml_parse+0x55f>
   305fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30600:	44 8b 9c 24 80 01 00 	mov    0x180(%rsp),%r11d
   30607:	00 
   30608:	31 db                	xor    %ebx,%ebx
   3060a:	45 85 db             	test   %r11d,%r11d
   3060d:	7e 21                	jle    30630 <toml_parse+0x550>
   3060f:	90                   	nop
   30610:	48 8b bc dc 88 01 00 	mov    0x188(%rsp,%rbx,8),%rdi
   30617:	00 
   30618:	48 85 ff             	test   %rdi,%rdi
   3061b:	74 06                	je     30623 <toml_parse+0x543>
   3061d:	ff 15 8d 5d 22 00    	callq  *0x225d8d(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30623:	48 83 c3 01          	add    $0x1,%rbx
   30627:	39 9c 24 80 01 00 00 	cmp    %ebx,0x180(%rsp)
   3062e:	7f e0                	jg     30610 <toml_parse+0x530>
   30630:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
   30637:	00 
   30638:	31 ed                	xor    %ebp,%ebp
   3063a:	e8 31 e9 ff ff       	callq  2ef70 <toml_free>
   3063f:	48 8b 8c 24 c8 02 00 	mov    0x2c8(%rsp),%rcx
   30646:	00 
   30647:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3064e:	00 00 
   30650:	48 89 e8             	mov    %rbp,%rax
   30653:	0f 85 20 04 00 00    	jne    30a79 <toml_parse+0x999>
   30659:	48 81 c4 d8 02 00 00 	add    $0x2d8,%rsp
   30660:	5b                   	pop    %rbx
   30661:	5d                   	pop    %rbp
   30662:	41 5c                	pop    %r12
   30664:	41 5d                	pop    %r13
   30666:	41 5e                	pop    %r14
   30668:	41 5f                	pop    %r15
   3066a:	c3                   	retq   
   3066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30670:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   30675:	e9 33 fe ff ff       	jmpq   304ad <toml_parse+0x3cd>
   3067a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30680:	83 f8 06             	cmp    $0x6,%eax
   30683:	0f 84 96 fb ff ff    	je     3021f <toml_parse+0x13f>
   30689:	48 63 b4 24 88 00 00 	movslq 0x88(%rsp),%rsi
   30690:	00 
   30691:	4c 8d 05 14 2f 01 00 	lea    0x12f14(%rip),%r8        # 435ac <__PRETTY_FUNCTION__.11024+0x46c>
   30698:	31 c0                	xor    %eax,%eax
   3069a:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
   306a1:	00 
   306a2:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   306a9:	ba 01 00 00 00       	mov    $0x1,%edx
   306ae:	e8 ed f3 fd ff       	callq  faa0 <__snprintf_chk@plt>
   306b3:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   306ba:	00 
   306bb:	be 01 00 00 00       	mov    $0x1,%esi
   306c0:	e8 eb ff fd ff       	callq  106b0 <__longjmp_chk@plt>
   306c5:	0f 1f 00             	nopl   (%rax)
   306c8:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   306cc:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   306d1:	48 89 df             	mov    %rbx,%rdi
   306d4:	8b 74 24 28          	mov    0x28(%rsp),%esi
   306d8:	e8 33 e4 ff ff       	callq  2eb10 <normalize_key.isra.4>
   306dd:	48 8b bc 24 78 01 00 	mov    0x178(%rsp),%rdi
   306e4:	00 
   306e5:	48 89 c6             	mov    %rax,%rsi
   306e8:	49 89 c4             	mov    %rax,%r12
   306eb:	e8 50 e9 ff ff       	callq  2f040 <toml_array_in>
   306f0:	48 89 c5             	mov    %rax,%rbp
   306f3:	4d 85 e4             	test   %r12,%r12
   306f6:	74 09                	je     30701 <toml_parse+0x621>
   306f8:	4c 89 e7             	mov    %r12,%rdi
   306fb:	ff 15 af 5c 22 00    	callq  *0x225caf(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30701:	48 85 ed             	test   %rbp,%rbp
   30704:	0f 84 16 01 00 00    	je     30820 <toml_parse+0x740>
   3070a:	83 7d 08 74          	cmpl   $0x74,0x8(%rbp)
   3070e:	0f 85 31 03 00 00    	jne    30a45 <toml_parse+0x965>
   30714:	8b 45 10             	mov    0x10(%rbp),%eax
   30717:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   3071b:	44 8d 60 01          	lea    0x1(%rax),%r12d
   3071f:	4d 63 e4             	movslq %r12d,%r12
   30722:	49 c1 e4 03          	shl    $0x3,%r12
   30726:	4c 89 e6             	mov    %r12,%rsi
   30729:	ff 15 71 5c 22 00    	callq  *0x225c71(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   3072f:	48 85 c0             	test   %rax,%rax
   30732:	0f 84 ac 02 00 00    	je     309e4 <toml_parse+0x904>
   30738:	4e 8d 7c 20 f8       	lea    -0x8(%rax,%r12,1),%r15
   3073d:	48 89 45 18          	mov    %rax,0x18(%rbp)
   30741:	be 38 00 00 00       	mov    $0x38,%esi
   30746:	bf 01 00 00 00       	mov    $0x1,%edi
   3074b:	ff 15 57 5c 22 00    	callq  *0x225c57(%rip)        # 2563a8 <calloc@GLIBC_2.2.5>
   30751:	49 89 c4             	mov    %rax,%r12
   30754:	49 89 07             	mov    %rax,(%r15)
   30757:	48 85 c0             	test   %rax,%rax
   3075a:	0f 84 95 02 00 00    	je     309f5 <toml_parse+0x915>
   30760:	48 8d 3d ff 2d 01 00 	lea    0x12dff(%rip),%rdi        # 43566 <__PRETTY_FUNCTION__.11024+0x426>
   30767:	e8 94 db ff ff       	callq  2e300 <STRDUP>
   3076c:	49 89 04 24          	mov    %rax,(%r12)
   30770:	48 85 c0             	test   %rax,%rax
   30773:	0f 84 8d 02 00 00    	je     30a06 <toml_parse+0x926>
   30779:	48 63 45 10          	movslq 0x10(%rbp),%rax
   3077d:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   30781:	83 bc 24 58 01 00 00 	cmpl   $0x8,0x158(%rsp)
   30788:	08 
   30789:	8d 48 01             	lea    0x1(%rax),%ecx
   3078c:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   30790:	89 4d 10             	mov    %ecx,0x10(%rbp)
   30793:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   3079a:	00 
   3079b:	0f 85 2b 02 00 00    	jne    309cc <toml_parse+0x8ec>
   307a1:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   307a8:	00 
   307a9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   307ad:	48 39 54 24 78       	cmp    %rdx,0x78(%rsp)
   307b2:	0f 86 5f 02 00 00    	jbe    30a17 <toml_parse+0x937>
   307b8:	80 78 01 5d          	cmpb   $0x5d,0x1(%rax)
   307bc:	0f 85 55 02 00 00    	jne    30a17 <toml_parse+0x937>
   307c2:	be 01 00 00 00       	mov    $0x1,%esi
   307c7:	48 89 df             	mov    %rbx,%rdi
   307ca:	e8 d1 d1 ff ff       	callq  2d9a0 <next_token>
   307cf:	83 bc 24 58 01 00 00 	cmpl   $0x8,0x158(%rsp)
   307d6:	08 
   307d7:	0f 84 b3 fd ff ff    	je     30590 <toml_parse+0x4b0>
   307dd:	48 8d 35 a2 2d 01 00 	lea    0x12da2(%rip),%rsi        # 43586 <__PRETTY_FUNCTION__.11024+0x446>
   307e4:	48 89 df             	mov    %rbx,%rdi
   307e7:	e8 a4 da ff ff       	callq  2e290 <e_internal_error>
   307ec:	0f 1f 40 00          	nopl   0x0(%rax)
   307f0:	e8 ab d1 ff ff       	callq  2d9a0 <next_token>
   307f5:	83 bc 24 58 01 00 00 	cmpl   $0x7,0x158(%rsp)
   307fc:	07 
   307fd:	0f 85 57 02 00 00    	jne    30a5a <toml_parse+0x97a>
   30803:	be 01 00 00 00       	mov    $0x1,%esi
   30808:	48 89 df             	mov    %rbx,%rdi
   3080b:	e8 90 d1 ff ff       	callq  2d9a0 <next_token>
   30810:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%rsp)
   30817:	00 
   30818:	e9 72 fa ff ff       	jmpq   3028f <toml_parse+0x1af>
   3081d:	0f 1f 00             	nopl   (%rax)
   30820:	8b 44 24 28          	mov    0x28(%rsp),%eax
   30824:	48 83 ec 08          	sub    $0x8,%rsp
   30828:	ba 74 00 00 00       	mov    $0x74,%edx
   3082d:	48 89 df             	mov    %rbx,%rdi
   30830:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   30834:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   30839:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   3083e:	8b 44 24 34          	mov    0x34(%rsp),%eax
   30842:	89 44 24 68          	mov    %eax,0x68(%rsp)
   30846:	ff 74 24 68          	pushq  0x68(%rsp)
   3084a:	ff 74 24 68          	pushq  0x68(%rsp)
   3084e:	ff 74 24 68          	pushq  0x68(%rsp)
   30852:	48 8b b4 24 98 01 00 	mov    0x198(%rsp),%rsi
   30859:	00 
   3085a:	e8 61 e4 ff ff       	callq  2ecc0 <create_keyarray_in_table>
   3085f:	48 83 c4 20          	add    $0x20,%rsp
   30863:	48 89 c5             	mov    %rax,%rbp
   30866:	48 85 c0             	test   %rax,%rax
   30869:	0f 85 9b fe ff ff    	jne    3070a <toml_parse+0x62a>
   3086f:	48 8d 35 bd 2c 01 00 	lea    0x12cbd(%rip),%rsi        # 43533 <__PRETTY_FUNCTION__.11024+0x3f3>
   30876:	48 89 df             	mov    %rbx,%rdi
   30879:	e8 12 da ff ff       	callq  2e290 <e_internal_error>
   3087e:	66 90                	xchg   %ax,%ax
   30880:	48 63 b4 24 88 00 00 	movslq 0x88(%rsp),%rsi
   30887:	00 
   30888:	48 63 c5             	movslq %ebp,%rax
   3088b:	48 83 ec 08          	sub    $0x8,%rsp
   3088f:	4c 8d 05 e8 2a 01 00 	lea    0x12ae8(%rip),%r8        # 4337e <__PRETTY_FUNCTION__.11024+0x23e>
   30896:	41 54                	push   %r12
   30898:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   3089c:	ba 01 00 00 00       	mov    $0x1,%edx
   308a1:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   308a8:	00 
   308a9:	44 8b 8c c4 ec 01 00 	mov    0x1ec(%rsp,%rax,8),%r9d
   308b0:	00 
   308b1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   308b8:	31 c0                	xor    %eax,%eax
   308ba:	e8 e1 f1 fd ff       	callq  faa0 <__snprintf_chk@plt>
   308bf:	5f                   	pop    %rdi
   308c0:	be 01 00 00 00       	mov    $0x1,%esi
   308c5:	41 58                	pop    %r8
   308c7:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   308cb:	e8 e0 fd fd ff       	callq  106b0 <__longjmp_chk@plt>
   308d0:	48 8d 15 f9 2d 01 00 	lea    0x12df9(%rip),%rdx        # 436d0 <__PRETTY_FUNCTION__.11024+0x590>
   308d7:	89 ee                	mov    %ebp,%esi
   308d9:	48 89 df             	mov    %rbx,%rdi
   308dc:	e8 7f d0 ff ff       	callq  2d960 <e_syntax_error>
   308e1:	4c 8d 0d 90 2b 01 00 	lea    0x12b90(%rip),%r9        # 43478 <__PRETTY_FUNCTION__.11024+0x338>
   308e8:	4c 8d 05 fa 28 01 00 	lea    0x128fa(%rip),%r8        # 431e9 <__PRETTY_FUNCTION__.11024+0xa9>
   308ef:	31 c0                	xor    %eax,%eax
   308f1:	48 63 b4 24 88 00 00 	movslq 0x88(%rsp),%rsi
   308f8:	00 
   308f9:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
   30900:	00 
   30901:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   30908:	ba 01 00 00 00       	mov    $0x1,%edx
   3090d:	e8 8e f1 fd ff       	callq  faa0 <__snprintf_chk@plt>
   30912:	e9 28 fd ff ff       	jmpq   3063f <toml_parse+0x55f>
   30917:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   3091c:	48 8d 15 92 2b 01 00 	lea    0x12b92(%rip),%rdx        # 434b5 <__PRETTY_FUNCTION__.11024+0x375>
   30923:	89 ee                	mov    %ebp,%esi
   30925:	e8 36 d0 ff ff       	callq  2d960 <e_syntax_error>
   3092a:	48 8d 15 9b 2b 01 00 	lea    0x12b9b(%rip),%rdx        # 434cc <__PRETTY_FUNCTION__.11024+0x38c>
   30931:	89 ee                	mov    %ebp,%esi
   30933:	48 89 df             	mov    %rbx,%rdi
   30936:	e8 25 d0 ff ff       	callq  2d960 <e_syntax_error>
   3093b:	48 8d 35 c3 2b 01 00 	lea    0x12bc3(%rip),%rsi        # 43505 <__PRETTY_FUNCTION__.11024+0x3c5>
   30942:	48 89 df             	mov    %rbx,%rdi
   30945:	e8 d6 cf ff ff       	callq  2d920 <e_outofmemory>
   3094a:	48 8d 35 c0 2b 01 00 	lea    0x12bc0(%rip),%rsi        # 43511 <__PRETTY_FUNCTION__.11024+0x3d1>
   30951:	48 89 df             	mov    %rbx,%rdi
   30954:	e8 c7 cf ff ff       	callq  2d920 <e_outofmemory>
   30959:	48 8d 35 bd 2b 01 00 	lea    0x12bbd(%rip),%rsi        # 4351d <__PRETTY_FUNCTION__.11024+0x3dd>
   30960:	48 89 df             	mov    %rbx,%rdi
   30963:	e8 b8 cf ff ff       	callq  2d920 <e_outofmemory>
   30968:	48 8d 35 7e 2b 01 00 	lea    0x12b7e(%rip),%rsi        # 434ed <__PRETTY_FUNCTION__.11024+0x3ad>
   3096f:	48 89 df             	mov    %rbx,%rdi
   30972:	e8 19 d9 ff ff       	callq  2e290 <e_internal_error>
   30977:	48 8d 35 7b 2b 01 00 	lea    0x12b7b(%rip),%rsi        # 434f9 <__PRETTY_FUNCTION__.11024+0x3b9>
   3097e:	48 89 df             	mov    %rbx,%rdi
   30981:	e8 0a d9 ff ff       	callq  2e290 <e_internal_error>
   30986:	8b b4 24 5c 01 00 00 	mov    0x15c(%rsp),%esi
   3098d:	48 8d 15 f0 2a 01 00 	lea    0x12af0(%rip),%rdx        # 43484 <__PRETTY_FUNCTION__.11024+0x344>
   30994:	48 89 df             	mov    %rbx,%rdi
   30997:	e8 c4 cf ff ff       	callq  2d960 <e_syntax_error>
   3099c:	48 8d 0d d5 2e 01 00 	lea    0x12ed5(%rip),%rcx        # 43878 <__PRETTY_FUNCTION__.3562>
   309a3:	ba d3 04 00 00       	mov    $0x4d3,%edx
   309a8:	48 8d 35 a5 2a 01 00 	lea    0x12aa5(%rip),%rsi        # 43454 <__PRETTY_FUNCTION__.11024+0x314>
   309af:	48 8d 3d e6 2a 01 00 	lea    0x12ae6(%rip),%rdi        # 4349c <__PRETTY_FUNCTION__.11024+0x35c>
   309b6:	e8 45 f6 fd ff       	callq  10000 <__assert_fail@plt>
   309bb:	48 8d 15 16 2b 01 00 	lea    0x12b16(%rip),%rdx        # 434d8 <__PRETTY_FUNCTION__.11024+0x398>
   309c2:	89 ee                	mov    %ebp,%esi
   309c4:	48 89 df             	mov    %rbx,%rdi
   309c7:	e8 94 cf ff ff       	callq  2d960 <e_syntax_error>
   309cc:	8b b4 24 5c 01 00 00 	mov    0x15c(%rsp),%esi
   309d3:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   309d8:	48 8d 15 4a 2b 01 00 	lea    0x12b4a(%rip),%rdx        # 43529 <__PRETTY_FUNCTION__.11024+0x3e9>
   309df:	e8 7c cf ff ff       	callq  2d960 <e_syntax_error>
   309e4:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   309e9:	48 8d 35 5e 2b 01 00 	lea    0x12b5e(%rip),%rsi        # 4354e <__PRETTY_FUNCTION__.11024+0x40e>
   309f0:	e8 2b cf ff ff       	callq  2d920 <e_outofmemory>
   309f5:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   309fa:	48 8d 35 59 2b 01 00 	lea    0x12b59(%rip),%rsi        # 4355a <__PRETTY_FUNCTION__.11024+0x41a>
   30a01:	e8 1a cf ff ff       	callq  2d920 <e_outofmemory>
   30a06:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   30a0b:	48 8d 35 5d 2b 01 00 	lea    0x12b5d(%rip),%rsi        # 4356f <__PRETTY_FUNCTION__.11024+0x42f>
   30a12:	e8 09 cf ff ff       	callq  2d920 <e_outofmemory>
   30a17:	8b b4 24 5c 01 00 00 	mov    0x15c(%rsp),%esi
   30a1e:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   30a23:	48 8d 15 51 2b 01 00 	lea    0x12b51(%rip),%rdx        # 4357b <__PRETTY_FUNCTION__.11024+0x43b>
   30a2a:	e8 31 cf ff ff       	callq  2d960 <e_syntax_error>
   30a2f:	8b b4 24 5c 01 00 00 	mov    0x15c(%rsp),%esi
   30a36:	48 8d 15 55 2b 01 00 	lea    0x12b55(%rip),%rdx        # 43592 <__PRETTY_FUNCTION__.11024+0x452>
   30a3d:	48 89 df             	mov    %rbx,%rdi
   30a40:	e8 1b cf ff ff       	callq  2d960 <e_syntax_error>
   30a45:	8b 74 24 28          	mov    0x28(%rsp),%esi
   30a49:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   30a4e:	48 8d 15 ea 2a 01 00 	lea    0x12aea(%rip),%rdx        # 4353f <__PRETTY_FUNCTION__.11024+0x3ff>
   30a55:	e8 06 cf ff ff       	callq  2d960 <e_syntax_error>
   30a5a:	48 8d 0d 17 2e 01 00 	lea    0x12e17(%rip),%rcx        # 43878 <__PRETTY_FUNCTION__.3562>
   30a61:	ba dd 04 00 00       	mov    $0x4dd,%edx
   30a66:	48 8d 35 e7 29 01 00 	lea    0x129e7(%rip),%rsi        # 43454 <__PRETTY_FUNCTION__.11024+0x314>
   30a6d:	48 8d 3d 28 2a 01 00 	lea    0x12a28(%rip),%rdi        # 4349c <__PRETTY_FUNCTION__.11024+0x35c>
   30a74:	e8 87 f5 fd ff       	callq  10000 <__assert_fail@plt>
   30a79:	e8 d2 f3 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000030a7e <.annobin_toml_parse.end>:
   30a7e:	66 90                	xchg   %ax,%ax

0000000000030a80 <toml_parse_file>:
   30a80:	f3 0f 1e fa          	endbr64 
   30a84:	41 57                	push   %r15
   30a86:	41 56                	push   %r14
   30a88:	49 89 fe             	mov    %rdi,%r14
   30a8b:	bf e9 03 00 00       	mov    $0x3e9,%edi
   30a90:	41 55                	push   %r13
   30a92:	45 31 ed             	xor    %r13d,%r13d
   30a95:	41 54                	push   %r12
   30a97:	41 bc d1 07 00 00    	mov    $0x7d1,%r12d
   30a9d:	55                   	push   %rbp
   30a9e:	53                   	push   %rbx
   30a9f:	48 83 ec 18          	sub    $0x18,%rsp
   30aa3:	48 89 34 24          	mov    %rsi,(%rsp)
   30aa7:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   30aab:	ff 15 07 59 22 00    	callq  *0x225907(%rip)        # 2563b8 <malloc@GLIBC_2.2.5>
   30ab1:	49 89 c7             	mov    %rax,%r15
   30ab4:	48 85 c0             	test   %rax,%rax
   30ab7:	75 67                	jne    30b20 <toml_parse_file+0xa0>
   30ab9:	e9 14 01 00 00       	jmpq   30bd2 <toml_parse_file+0x152>
   30abe:	66 90                	xchg   %ax,%ax
   30ac0:	4c 89 e6             	mov    %r12,%rsi
   30ac3:	4c 89 ff             	mov    %r15,%rdi
   30ac6:	41 8d 5c 24 ff       	lea    -0x1(%r12),%ebx
   30acb:	ff 15 cf 58 22 00    	callq  *0x2258cf(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   30ad1:	48 89 c5             	mov    %rax,%rbp
   30ad4:	48 85 c0             	test   %rax,%rax
   30ad7:	0f 84 8b 00 00 00    	je     30b68 <toml_parse_file+0xe8>
   30add:	e8 2e f0 fd ff       	callq  fb10 <__errno_location@plt>
   30ae2:	44 29 eb             	sub    %r13d,%ebx
   30ae5:	49 63 fd             	movslq %r13d,%rdi
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  size_t sz = __glibc_objsize0 (__ptr);
  if (__glibc_safe_or_unknown_len (__n, __size, sz))
    return __fread_alias (__ptr, __size, __n, __stream);
   30ae8:	4c 89 f1             	mov    %r14,%rcx
   30aeb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   30af1:	48 63 d3             	movslq %ebx,%rdx
   30af4:	48 01 ef             	add    %rbp,%rdi
   30af7:	49 89 c7             	mov    %rax,%r15
   30afa:	be 01 00 00 00       	mov    $0x1,%esi
   30aff:	49 81 c4 e8 03 00 00 	add    $0x3e8,%r12
   30b06:	e8 75 f1 fd ff       	callq  fc80 <fread@plt>
   30b0b:	4c 89 f7             	mov    %r14,%rdi
   30b0e:	48 89 c3             	mov    %rax,%rbx
   30b11:	e8 2a f1 fd ff       	callq  fc40 <ferror@plt>
   30b16:	85 c0                	test   %eax,%eax
   30b18:	75 76                	jne    30b90 <toml_parse_file+0x110>
   30b1a:	41 01 dd             	add    %ebx,%r13d
   30b1d:	49 89 ef             	mov    %rbp,%r15
   30b20:	4c 89 f7             	mov    %r14,%rdi
   30b23:	e8 88 f7 fd ff       	callq  102b0 <feof@plt>
   30b28:	85 c0                	test   %eax,%eax
   30b2a:	74 94                	je     30ac0 <toml_parse_file+0x40>
   30b2c:	4d 63 ed             	movslq %r13d,%r13
   30b2f:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   30b33:	48 8b 34 24          	mov    (%rsp),%rsi
   30b37:	4c 89 ff             	mov    %r15,%rdi
   30b3a:	43 c6 04 2f 00       	movb   $0x0,(%r15,%r13,1)
   30b3f:	e8 9c f5 ff ff       	callq  300e0 <toml_parse>
   30b44:	4c 89 ff             	mov    %r15,%rdi
   30b47:	48 89 c5             	mov    %rax,%rbp
   30b4a:	ff 15 60 58 22 00    	callq  *0x225860(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30b50:	48 83 c4 18          	add    $0x18,%rsp
   30b54:	48 89 e8             	mov    %rbp,%rax
   30b57:	5b                   	pop    %rbx
   30b58:	5d                   	pop    %rbp
   30b59:	41 5c                	pop    %r12
   30b5b:	41 5d                	pop    %r13
   30b5d:	41 5e                	pop    %r14
   30b5f:	41 5f                	pop    %r15
   30b61:	c3                   	retq   
   30b62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   30b68:	48 8b 3c 24          	mov    (%rsp),%rdi
   30b6c:	48 63 74 24 0c       	movslq 0xc(%rsp),%rsi
   30b71:	48 8d 15 fb 15 01 00 	lea    0x115fb(%rip),%rdx        # 42173 <k+0x173>
   30b78:	31 c0                	xor    %eax,%eax
   30b7a:	e8 a1 f3 fd ff       	callq  ff20 <snprintf@plt>
   30b7f:	4c 89 ff             	mov    %r15,%rdi
   30b82:	ff 15 28 58 22 00    	callq  *0x225828(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30b88:	eb c6                	jmp    30b50 <toml_parse_file+0xd0>
   30b8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30b90:	41 8b 3f             	mov    (%r15),%edi
   30b93:	48 8d 0d 28 2a 01 00 	lea    0x12a28(%rip),%rcx        # 435c2 <__PRETTY_FUNCTION__.11024+0x482>
   30b9a:	85 ff                	test   %edi,%edi
   30b9c:	75 2a                	jne    30bc8 <toml_parse_file+0x148>
   30b9e:	48 63 74 24 0c       	movslq 0xc(%rsp),%rsi
   30ba3:	48 8b 3c 24          	mov    (%rsp),%rdi
   30ba7:	48 8d 15 5e 26 01 00 	lea    0x1265e(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   30bae:	31 c0                	xor    %eax,%eax
   30bb0:	e8 6b f3 fd ff       	callq  ff20 <snprintf@plt>
   30bb5:	48 89 ef             	mov    %rbp,%rdi
   30bb8:	31 ed                	xor    %ebp,%ebp
   30bba:	ff 15 f0 57 22 00    	callq  *0x2257f0(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30bc0:	eb 8e                	jmp    30b50 <toml_parse_file+0xd0>
   30bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30bc8:	e8 03 fe fd ff       	callq  109d0 <strerror@plt>
   30bcd:	48 89 c1             	mov    %rax,%rcx
   30bd0:	eb cc                	jmp    30b9e <toml_parse_file+0x11e>
   30bd2:	48 63 74 24 0c       	movslq 0xc(%rsp),%rsi
   30bd7:	48 8b 3c 24          	mov    (%rsp),%rdi
   30bdb:	31 c0                	xor    %eax,%eax
   30bdd:	31 ed                	xor    %ebp,%ebp
   30bdf:	48 8d 15 8d 15 01 00 	lea    0x1158d(%rip),%rdx        # 42173 <k+0x173>
   30be6:	e8 35 f3 fd ff       	callq  ff20 <snprintf@plt>
   30beb:	e9 60 ff ff ff       	jmpq   30b50 <toml_parse_file+0xd0>

0000000000030bf0 <parse_table>:
   30bf0:	55                   	push   %rbp
   30bf1:	53                   	push   %rbx
   30bf2:	48 89 fb             	mov    %rdi,%rbx
   30bf5:	48 83 ec 08          	sub    $0x8,%rsp
   30bf9:	83 bf e8 00 00 00 04 	cmpl   $0x4,0xe8(%rdi)
   30c00:	0f 85 82 00 00 00    	jne    30c88 <parse_table+0x98>
   30c06:	48 89 f5             	mov    %rsi,%rbp
   30c09:	be 01 00 00 00       	mov    $0x1,%esi
   30c0e:	48 89 df             	mov    %rbx,%rdi
   30c11:	e8 8a cd ff ff       	callq  2d9a0 <next_token>
   30c16:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   30c1c:	83 f8 06             	cmp    $0x6,%eax
   30c1f:	74 3d                	je     30c5e <parse_table+0x6e>
   30c21:	83 f8 05             	cmp    $0x5,%eax
   30c24:	74 25                	je     30c4b <parse_table+0x5b>
   30c26:	83 f8 09             	cmp    $0x9,%eax
   30c29:	75 48                	jne    30c73 <parse_table+0x83>
   30c2b:	48 89 ee             	mov    %rbp,%rsi
   30c2e:	48 89 df             	mov    %rbx,%rdi
   30c31:	e8 2a f1 ff ff       	callq  2fd60 <parse_keyval>
   30c36:	8b 83 e8 00 00 00    	mov    0xe8(%rbx),%eax
   30c3c:	83 f8 06             	cmp    $0x6,%eax
   30c3f:	74 1d                	je     30c5e <parse_table+0x6e>
   30c41:	83 f8 02             	cmp    $0x2,%eax
   30c44:	74 c3                	je     30c09 <parse_table+0x19>
   30c46:	83 f8 05             	cmp    $0x5,%eax
   30c49:	75 28                	jne    30c73 <parse_table+0x83>
   30c4b:	48 83 c4 08          	add    $0x8,%rsp
   30c4f:	48 89 df             	mov    %rbx,%rdi
   30c52:	be 01 00 00 00       	mov    $0x1,%esi
   30c57:	5b                   	pop    %rbx
   30c58:	5d                   	pop    %rbp
   30c59:	e9 42 cd ff ff       	jmpq   2d9a0 <next_token>
   30c5e:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   30c64:	48 8d 15 95 2a 01 00 	lea    0x12a95(%rip),%rdx        # 43700 <__PRETTY_FUNCTION__.11024+0x5c0>
   30c6b:	48 89 df             	mov    %rbx,%rdi
   30c6e:	e8 ed cc ff ff       	callq  2d960 <e_syntax_error>
   30c73:	8b b3 ec 00 00 00    	mov    0xec(%rbx),%esi
   30c79:	48 8d 15 35 29 01 00 	lea    0x12935(%rip),%rdx        # 435b5 <__PRETTY_FUNCTION__.11024+0x475>
   30c80:	48 89 df             	mov    %rbx,%rdi
   30c83:	e8 d8 cc ff ff       	callq  2d960 <e_syntax_error>
   30c88:	48 8d 35 46 29 01 00 	lea    0x12946(%rip),%rsi        # 435d5 <__PRETTY_FUNCTION__.11024+0x495>
   30c8f:	e8 fc d5 ff ff       	callq  2e290 <e_internal_error>

0000000000030c94 <.annobin_parse_table.end>:
   30c94:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   30c9b:	00 00 00 00 
   30c9f:	90                   	nop

0000000000030ca0 <toml_rtos>:
   30ca0:	f3 0f 1e fa          	endbr64 
   30ca4:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   30cab:	48 85 ff             	test   %rdi,%rdi
   30cae:	0f 84 2b 02 00 00    	je     30edf <toml_rtos+0x23f>
   30cb4:	41 57                	push   %r15
   30cb6:	41 56                	push   %r14
   30cb8:	41 55                	push   %r13
   30cba:	41 54                	push   %r12
   30cbc:	55                   	push   %rbp
   30cbd:	53                   	push   %rbx
   30cbe:	48 89 fb             	mov    %rdi,%rbx
   30cc1:	48 83 ec 18          	sub    $0x18,%rsp
   30cc5:	44 0f be 37          	movsbl (%rdi),%r14d
   30cc9:	48 89 34 24          	mov    %rsi,(%rsp)
   30ccd:	45 89 f5             	mov    %r14d,%r13d
   30cd0:	e8 4b f1 fd ff       	callq  fe20 <strlen@plt>
   30cd5:	41 83 fe 27          	cmp    $0x27,%r14d
   30cd9:	74 0a                	je     30ce5 <toml_rtos+0x45>
   30cdb:	41 83 fe 22          	cmp    $0x22,%r14d
   30cdf:	0f 85 db 01 00 00    	jne    30ec0 <toml_rtos+0x220>
   30ce5:	48 98                	cltq   
   30ce7:	44 3a 6b 01          	cmp    0x1(%rbx),%r13b
   30ceb:	74 63                	je     30d50 <toml_rtos+0xb0>
   30ced:	4c 8d 63 01          	lea    0x1(%rbx),%r12
   30cf1:	48 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%rsi
   30cf6:	49 39 f4             	cmp    %rsi,%r12
   30cf9:	0f 87 c1 01 00 00    	ja     30ec0 <toml_rtos+0x220>
   30cff:	44 3a 2e             	cmp    (%rsi),%r13b
   30d02:	0f 85 b8 01 00 00    	jne    30ec0 <toml_rtos+0x220>
   30d08:	45 31 ff             	xor    %r15d,%r15d
   30d0b:	4c 29 e6             	sub    %r12,%rsi
   30d0e:	41 83 fe 27          	cmp    $0x27,%r14d
   30d12:	0f 84 a0 00 00 00    	je     30db8 <toml_rtos+0x118>
   30d18:	45 31 c0             	xor    %r8d,%r8d
   30d1b:	31 c9                	xor    %ecx,%ecx
   30d1d:	44 89 fa             	mov    %r15d,%edx
   30d20:	4c 89 e7             	mov    %r12,%rdi
   30d23:	e8 18 da ff ff       	callq  2e740 <norm_basic_str>
   30d28:	48 8b 14 24          	mov    (%rsp),%rdx
   30d2c:	48 85 c0             	test   %rax,%rax
   30d2f:	48 89 02             	mov    %rax,(%rdx)
   30d32:	0f 94 c0             	sete   %al
   30d35:	0f b6 c0             	movzbl %al,%eax
   30d38:	f7 d8                	neg    %eax
   30d3a:	48 83 c4 18          	add    $0x18,%rsp
   30d3e:	5b                   	pop    %rbx
   30d3f:	5d                   	pop    %rbp
   30d40:	41 5c                	pop    %r12
   30d42:	41 5d                	pop    %r13
   30d44:	41 5e                	pop    %r14
   30d46:	41 5f                	pop    %r15
   30d48:	c3                   	retq   
   30d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   30d50:	44 3a 6b 02          	cmp    0x2(%rbx),%r13b
   30d54:	75 97                	jne    30ced <toml_rtos+0x4d>
   30d56:	4c 8d 63 03          	lea    0x3(%rbx),%r12
   30d5a:	48 8d 74 03 fd       	lea    -0x3(%rbx,%rax,1),%rsi
   30d5f:	49 39 f4             	cmp    %rsi,%r12
   30d62:	0f 87 58 01 00 00    	ja     30ec0 <toml_rtos+0x220>
   30d68:	44 3a 2e             	cmp    (%rsi),%r13b
   30d6b:	0f 85 4f 01 00 00    	jne    30ec0 <toml_rtos+0x220>
   30d71:	44 3a 6e 01          	cmp    0x1(%rsi),%r13b
   30d75:	0f 85 45 01 00 00    	jne    30ec0 <toml_rtos+0x220>
   30d7b:	44 3a 6e 02          	cmp    0x2(%rsi),%r13b
   30d7f:	0f 85 3b 01 00 00    	jne    30ec0 <toml_rtos+0x220>
   30d85:	0f b6 43 03          	movzbl 0x3(%rbx),%eax
   30d89:	3c 0a                	cmp    $0xa,%al
   30d8b:	0f 84 3f 01 00 00    	je     30ed0 <toml_rtos+0x230>
   30d91:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   30d97:	3c 0d                	cmp    $0xd,%al
   30d99:	0f 85 6c ff ff ff    	jne    30d0b <toml_rtos+0x6b>
   30d9f:	80 7b 04 0a          	cmpb   $0xa,0x4(%rbx)
   30da3:	0f 85 62 ff ff ff    	jne    30d0b <toml_rtos+0x6b>
   30da9:	4c 8d 63 05          	lea    0x5(%rbx),%r12
   30dad:	e9 59 ff ff ff       	jmpq   30d0b <toml_rtos+0x6b>
   30db2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30db8:	48 63 f6             	movslq %esi,%rsi
   30dbb:	45 31 f6             	xor    %r14d,%r14d
   30dbe:	31 ed                	xor    %ebp,%ebp
   30dc0:	31 db                	xor    %ebx,%ebx
   30dc2:	49 8d 04 34          	lea    (%r12,%rsi,1),%rax
   30dc6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30dcb:	eb 47                	jmp    30e14 <toml_rtos+0x174>
   30dcd:	0f 1f 00             	nopl   (%rax)
   30dd0:	49 83 c4 01          	add    $0x1,%r12
   30dd4:	45 0f be 6c 24 ff    	movsbl -0x1(%r12),%r13d
   30dda:	41 83 fd 08          	cmp    $0x8,%r13d
   30dde:	44 89 e8             	mov    %r13d,%eax
   30de1:	40 0f 96 c7          	setbe  %dil
   30de5:	41 83 fd 7f          	cmp    $0x7f,%r13d
   30de9:	40 0f 94 c6          	sete   %sil
   30ded:	40 08 f7             	or     %sil,%dil
   30df0:	75 09                	jne    30dfb <toml_rtos+0x15b>
   30df2:	41 8d 75 f6          	lea    -0xa(%r13),%esi
   30df6:	83 fe 15             	cmp    $0x15,%esi
   30df9:	77 11                	ja     30e0c <toml_rtos+0x16c>
   30dfb:	45 85 ff             	test   %r15d,%r15d
   30dfe:	74 68                	je     30e68 <toml_rtos+0x1c8>
   30e00:	41 83 fd 0d          	cmp    $0xd,%r13d
   30e04:	74 06                	je     30e0c <toml_rtos+0x16c>
   30e06:	41 83 fd 0a          	cmp    $0xa,%r13d
   30e0a:	75 5c                	jne    30e68 <toml_rtos+0x1c8>
   30e0c:	42 88 04 33          	mov    %al,(%rbx,%r14,1)
   30e10:	49 83 c6 01          	add    $0x1,%r14
   30e14:	8d 45 f6             	lea    -0xa(%rbp),%eax
   30e17:	4d 63 ee             	movslq %r14d,%r13
   30e1a:	44 39 f0             	cmp    %r14d,%eax
   30e1d:	7f 17                	jg     30e36 <toml_rtos+0x196>
   30e1f:	83 c5 32             	add    $0x32,%ebp
   30e22:	48 89 df             	mov    %rbx,%rdi
   30e25:	48 63 f5             	movslq %ebp,%rsi
   30e28:	ff 15 72 55 22 00    	callq  *0x225572(%rip)        # 2563a0 <realloc@GLIBC_2.2.5>
   30e2e:	48 85 c0             	test   %rax,%rax
   30e31:	74 6d                	je     30ea0 <toml_rtos+0x200>
   30e33:	48 89 c3             	mov    %rax,%rbx
   30e36:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
   30e3b:	77 93                	ja     30dd0 <toml_rtos+0x130>
   30e3d:	31 c0                	xor    %eax,%eax
   30e3f:	42 c6 04 2b 00       	movb   $0x0,(%rbx,%r13,1)
   30e44:	48 85 db             	test   %rbx,%rbx
   30e47:	0f 94 c0             	sete   %al
   30e4a:	f7 d8                	neg    %eax
   30e4c:	48 8b 0c 24          	mov    (%rsp),%rcx
   30e50:	48 89 19             	mov    %rbx,(%rcx)
   30e53:	48 83 c4 18          	add    $0x18,%rsp
   30e57:	5b                   	pop    %rbx
   30e58:	5d                   	pop    %rbp
   30e59:	41 5c                	pop    %r12
   30e5b:	41 5d                	pop    %r13
   30e5d:	41 5e                	pop    %r14
   30e5f:	41 5f                	pop    %r15
   30e61:	c3                   	retq   
   30e62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30e68:	48 85 db             	test   %rbx,%rbx
   30e6b:	74 09                	je     30e76 <toml_rtos+0x1d6>
   30e6d:	48 89 df             	mov    %rbx,%rdi
   30e70:	ff 15 3a 55 22 00    	callq  *0x22553a(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30e76:	45 89 e9             	mov    %r13d,%r9d
   30e79:	4c 8d 05 67 24 01 00 	lea    0x12467(%rip),%r8        # 432e7 <__PRETTY_FUNCTION__.11024+0x1a7>
   30e80:	31 f6                	xor    %esi,%esi
   30e82:	31 ff                	xor    %edi,%edi
   30e84:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   30e8b:	ba 01 00 00 00       	mov    $0x1,%edx
   30e90:	31 c0                	xor    %eax,%eax
   30e92:	31 db                	xor    %ebx,%ebx
   30e94:	e8 07 ec fd ff       	callq  faa0 <__snprintf_chk@plt>
   30e99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30e9e:	eb ac                	jmp    30e4c <toml_rtos+0x1ac>
   30ea0:	48 85 db             	test   %rbx,%rbx
   30ea3:	74 09                	je     30eae <toml_rtos+0x20e>
   30ea5:	48 89 df             	mov    %rbx,%rdi
   30ea8:	ff 15 02 55 22 00    	callq  *0x225502(%rip)        # 2563b0 <free@GLIBC_2.2.5>
   30eae:	31 db                	xor    %ebx,%ebx
   30eb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30eb5:	eb 95                	jmp    30e4c <toml_rtos+0x1ac>
   30eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   30ebe:	00 00 
   30ec0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30ec5:	e9 70 fe ff ff       	jmpq   30d3a <toml_rtos+0x9a>
   30eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30ed0:	4c 8d 63 04          	lea    0x4(%rbx),%r12
   30ed4:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   30eda:	e9 2c fe ff ff       	jmpq   30d0b <toml_rtos+0x6b>
   30edf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   30ee4:	c3                   	retq   

0000000000030ee5 <.annobin_toml.c_end>:
   30ee5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30eec:	00 00 00 
   30eef:	90                   	nop

0000000000030ef0 <entry_build>:
   30ef0:	53                   	push   %rbx
   30ef1:	66 0f ef c9          	pxor   %xmm1,%xmm1
   30ef5:	48 83 ec 30          	sub    $0x30,%rsp
   30ef9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   30f00:	00 00 
   30f02:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   30f07:	31 c0                	xor    %eax,%eax
   30f09:	66 0f 2f c8          	comisd %xmm0,%xmm1
   30f0d:	0f 87 7d 00 00 00    	ja     30f90 <entry_build+0xa0>
   30f13:	48 89 fb             	mov    %rdi,%rbx
   30f16:	48 85 ff             	test   %rdi,%rdi
   30f19:	74 75                	je     30f90 <entry_build+0xa0>
   30f1b:	80 3f 00             	cmpb   $0x0,(%rdi)
   30f1e:	74 70                	je     30f90 <entry_build+0xa0>
   30f20:	49 89 f1             	mov    %rsi,%r9
   30f23:	48 85 f6             	test   %rsi,%rsi
   30f26:	74 78                	je     30fa0 <entry_build+0xb0>
   30f28:	8b 06                	mov    (%rsi),%eax
   30f2a:	85 c0                	test   %eax,%eax
   30f2c:	75 62                	jne    30f90 <entry_build+0xa0>
   30f2e:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   30f32:	0f 8b 98 00 00 00    	jnp    30fd0 <entry_build+0xe0>
   30f38:	48 89 d9             	mov    %rbx,%rcx
   30f3b:	4c 8d 05 16 eb 00 00 	lea    0xeb16(%rip),%r8        # 3fa58 <f58_prefix+0x5f5>
   30f42:	48 8d 15 4c 29 01 00 	lea    0x1294c(%rip),%rdx        # 43895 <__PRETTY_FUNCTION__.3519+0xd>
   30f49:	b8 01 00 00 00       	mov    $0x1,%eax
   30f4e:	48 8d 35 45 29 01 00 	lea    0x12945(%rip),%rsi        # 4389a <__PRETTY_FUNCTION__.3519+0x12>
   30f55:	48 8d 3d 54 29 01 00 	lea    0x12954(%rip),%rdi        # 438b0 <__PRETTY_FUNCTION__.3519+0x28>
   30f5c:	e8 0f f4 fd ff       	callq  10370 <json_pack@plt>
   30f61:	48 89 c3             	mov    %rax,%rbx
   30f64:	48 85 db             	test   %rbx,%rbx
   30f67:	0f 84 03 01 00 00    	je     31070 <entry_build+0x180>
   30f6d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   30f72:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   30f79:	00 00 
   30f7b:	48 89 d8             	mov    %rbx,%rax
   30f7e:	0f 85 fc 00 00 00    	jne    31080 <entry_build+0x190>
   30f84:	48 83 c4 30          	add    $0x30,%rsp
   30f88:	5b                   	pop    %rbx
   30f89:	c3                   	retq   
   30f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30f90:	e8 7b eb fd ff       	callq  fb10 <__errno_location@plt>
   30f95:	31 db                	xor    %ebx,%ebx
   30f97:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   30f9d:	eb ce                	jmp    30f6d <entry_build+0x7d>
   30f9f:	90                   	nop
   30fa0:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   30fa4:	7b 7a                	jnp    31020 <entry_build+0x130>
   30fa6:	48 89 d9             	mov    %rbx,%rcx
   30fa9:	48 8d 15 e5 28 01 00 	lea    0x128e5(%rip),%rdx        # 43895 <__PRETTY_FUNCTION__.3519+0xd>
   30fb0:	48 8d 35 e3 28 01 00 	lea    0x128e3(%rip),%rsi        # 4389a <__PRETTY_FUNCTION__.3519+0x12>
   30fb7:	b8 01 00 00 00       	mov    $0x1,%eax
   30fbc:	48 8d 3d e1 28 01 00 	lea    0x128e1(%rip),%rdi        # 438a4 <__PRETTY_FUNCTION__.3519+0x1c>
   30fc3:	e8 a8 f3 fd ff       	callq  10370 <json_pack@plt>
   30fc8:	48 89 c3             	mov    %rax,%rbx
   30fcb:	eb 97                	jmp    30f64 <entry_build+0x74>
   30fcd:	0f 1f 00             	nopl   (%rax)
   30fd0:	0f 85 62 ff ff ff    	jne    30f38 <entry_build+0x48>
   30fd6:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   30fdb:	31 ff                	xor    %edi,%edi
   30fdd:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   30fe2:	e8 f9 ec fd ff       	callq  fce0 <clock_gettime@plt>
   30fe7:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   30fec:	85 c0                	test   %eax,%eax
   30fee:	78 70                	js     31060 <entry_build+0x170>
   30ff0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30ff4:	66 0f ef c9          	pxor   %xmm1,%xmm1
   30ff8:	f2 48 0f 2a 44 24 18 	cvtsi2sdq 0x18(%rsp),%xmm0
   30fff:	f2 0f 59 05 99 21 01 	mulsd  0x12199(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   31006:	00 
   31007:	f2 48 0f 2a 4c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm1
   3100e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   31012:	e9 21 ff ff ff       	jmpq   30f38 <entry_build+0x48>
   31017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3101e:	00 00 
   31020:	75 84                	jne    30fa6 <entry_build+0xb6>
   31022:	31 ff                	xor    %edi,%edi
   31024:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   31029:	e8 b2 ec fd ff       	callq  fce0 <clock_gettime@plt>
   3102e:	85 c0                	test   %eax,%eax
   31030:	78 2e                	js     31060 <entry_build+0x170>
   31032:	66 0f ef c0          	pxor   %xmm0,%xmm0
   31036:	66 0f ef c9          	pxor   %xmm1,%xmm1
   3103a:	f2 48 0f 2a 44 24 18 	cvtsi2sdq 0x18(%rsp),%xmm0
   31041:	f2 0f 59 05 57 21 01 	mulsd  0x12157(%rip),%xmm0        # 431a0 <__PRETTY_FUNCTION__.11024+0x60>
   31048:	00 
   31049:	f2 48 0f 2a 4c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm1
   31050:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   31054:	e9 4d ff ff ff       	jmpq   30fa6 <entry_build+0xb6>
   31059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31060:	31 db                	xor    %ebx,%ebx
   31062:	e9 06 ff ff ff       	jmpq   30f6d <entry_build+0x7d>
   31067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3106e:	00 00 
   31070:	e8 9b ea fd ff       	callq  fb10 <__errno_location@plt>
   31075:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3107b:	e9 ed fe ff ff       	jmpq   30f6d <entry_build+0x7d>
   31080:	e8 cb ed fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000031085 <.annobin_append_string_nl.start>:
   31085:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3108c:	00 00 00 00 

0000000000031090 <append_string_nl>:
   31090:	41 57                	push   %r15
   31092:	49 89 f7             	mov    %rsi,%r15
   31095:	41 56                	push   %r14
   31097:	49 89 ce             	mov    %rcx,%r14
   3109a:	41 55                	push   %r13
   3109c:	41 54                	push   %r12
   3109e:	49 89 fc             	mov    %rdi,%r12
   310a1:	48 89 cf             	mov    %rcx,%rdi
   310a4:	55                   	push   %rbp
   310a5:	53                   	push   %rbx
   310a6:	48 63 da             	movslq %edx,%rbx
   310a9:	48 83 ec 18          	sub    $0x18,%rsp
   310ad:	e8 6e ed fd ff       	callq  fe20 <strlen@plt>
   310b2:	49 8b 3c 24          	mov    (%r12),%rdi
   310b6:	48 89 c5             	mov    %rax,%rbp
   310b9:	01 d8                	add    %ebx,%eax
   310bb:	44 8d 68 01          	lea    0x1(%rax),%r13d
   310bf:	45 3b 2f             	cmp    (%r15),%r13d
   310c2:	7c 22                	jl     310e6 <append_string_nl+0x56>
   310c4:	8d 50 02             	lea    0x2(%rax),%edx
   310c7:	48 63 f2             	movslq %edx,%rsi
   310ca:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   310ce:	e8 fd f4 fd ff       	callq  105d0 <realloc@plt>
   310d3:	48 89 c7             	mov    %rax,%rdi
   310d6:	48 85 c0             	test   %rax,%rax
   310d9:	74 38                	je     31113 <append_string_nl+0x83>
   310db:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   310df:	49 89 04 24          	mov    %rax,(%r12)
   310e3:	41 89 17             	mov    %edx,(%r15)
   310e6:	48 01 df             	add    %rbx,%rdi
  return __builtin___strcpy_chk (__dest, __src, __glibc_objsize (__dest));
   310e9:	4c 89 f6             	mov    %r14,%rsi
   310ec:	48 63 ed             	movslq %ebp,%rbp
   310ef:	e8 fc ea fd ff       	callq  fbf0 <strcpy@plt>
   310f4:	49 03 1c 24          	add    (%r12),%rbx
   310f8:	b8 0a 00 00 00       	mov    $0xa,%eax
   310fd:	66 89 04 2b          	mov    %ax,(%rbx,%rbp,1)
   31101:	48 83 c4 18          	add    $0x18,%rsp
   31105:	44 89 e8             	mov    %r13d,%eax
   31108:	5b                   	pop    %rbx
   31109:	5d                   	pop    %rbp
   3110a:	41 5c                	pop    %r12
   3110c:	41 5d                	pop    %r13
   3110e:	41 5e                	pop    %r14
   31110:	41 5f                	pop    %r15
   31112:	c3                   	retq   
   31113:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   31119:	eb e6                	jmp    31101 <append_string_nl+0x71>

000000000003111b <.annobin_append_string_nl.end>:
   3111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031120 <eventlog_entry_parse>:
   31120:	f3 0f 1e fa          	endbr64 
   31124:	41 55                	push   %r13
   31126:	41 54                	push   %r12
   31128:	55                   	push   %rbp
   31129:	53                   	push   %rbx
   3112a:	48 83 ec 28          	sub    $0x28,%rsp
   3112e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31135:	00 00 
   31137:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3113c:	31 c0                	xor    %eax,%eax
   3113e:	48 85 ff             	test   %rdi,%rdi
   31141:	0f 84 c9 00 00 00    	je     31210 <eventlog_entry_parse+0xf0>
   31147:	49 89 f5             	mov    %rsi,%r13
   3114a:	49 89 d4             	mov    %rdx,%r12
   3114d:	48 89 cd             	mov    %rcx,%rbp
   31150:	31 c0                	xor    %eax,%eax
   31152:	48 89 e1             	mov    %rsp,%rcx
   31155:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
   3115a:	4c 8d 05 34 27 01 00 	lea    0x12734(%rip),%r8        # 43895 <__PRETTY_FUNCTION__.3519+0xd>
   31161:	48 89 fb             	mov    %rdi,%rbx
   31164:	48 8d 15 2f 27 01 00 	lea    0x1272f(%rip),%rdx        # 4389a <__PRETTY_FUNCTION__.3519+0x12>
   3116b:	48 8d 35 4e 27 01 00 	lea    0x1274e(%rip),%rsi        # 438c0 <__PRETTY_FUNCTION__.3519+0x38>
   31172:	e8 e9 ef fd ff       	callq  10160 <json_unpack@plt>
   31177:	85 c0                	test   %eax,%eax
   31179:	0f 88 91 00 00 00    	js     31210 <eventlog_entry_parse+0xf0>
   3117f:	31 c0                	xor    %eax,%eax
   31181:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   31186:	48 89 df             	mov    %rbx,%rdi
   31189:	48 8d 15 c8 e8 00 00 	lea    0xe8c8(%rip),%rdx        # 3fa58 <f58_prefix+0x5f5>
   31190:	48 8d 35 35 27 01 00 	lea    0x12735(%rip),%rsi        # 438cc <__PRETTY_FUNCTION__.3519+0x44>
   31197:	e8 c4 ef fd ff       	callq  10160 <json_unpack@plt>
   3119c:	85 c0                	test   %eax,%eax
   3119e:	74 58                	je     311f8 <eventlog_entry_parse+0xd8>
   311a0:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   311a7:	00 00 
   311a9:	4d 85 ed             	test   %r13,%r13
   311ac:	74 0b                	je     311b9 <eventlog_entry_parse+0x99>
   311ae:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   311b3:	f2 41 0f 11 45 00    	movsd  %xmm0,0x0(%r13)
   311b9:	4d 85 e4             	test   %r12,%r12
   311bc:	74 09                	je     311c7 <eventlog_entry_parse+0xa7>
   311be:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   311c3:	49 89 04 24          	mov    %rax,(%r12)
   311c7:	31 c0                	xor    %eax,%eax
   311c9:	48 85 ed             	test   %rbp,%rbp
   311cc:	74 09                	je     311d7 <eventlog_entry_parse+0xb7>
   311ce:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   311d3:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   311d7:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   311dc:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   311e3:	00 00 
   311e5:	75 3b                	jne    31222 <eventlog_entry_parse+0x102>
   311e7:	48 83 c4 28          	add    $0x28,%rsp
   311eb:	5b                   	pop    %rbx
   311ec:	5d                   	pop    %rbp
   311ed:	41 5c                	pop    %r12
   311ef:	41 5d                	pop    %r13
   311f1:	c3                   	retq   
   311f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   311f8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   311fd:	48 85 c0             	test   %rax,%rax
   31200:	74 0e                	je     31210 <eventlog_entry_parse+0xf0>
   31202:	8b 00                	mov    (%rax),%eax
   31204:	85 c0                	test   %eax,%eax
   31206:	74 a1                	je     311a9 <eventlog_entry_parse+0x89>
   31208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3120f:	00 
   31210:	e8 fb e8 fd ff       	callq  fb10 <__errno_location@plt>
   31215:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3121b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31220:	eb b5                	jmp    311d7 <eventlog_entry_parse+0xb7>
   31222:	e8 29 ec fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000031227 <.annobin_eventlog_entry_parse.end>:
   31227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3122e:	00 00 

0000000000031230 <eventlog_entry_validate>:
   31230:	f3 0f 1e fa          	endbr64 
   31234:	48 85 ff             	test   %rdi,%rdi
   31237:	74 06                	je     3123f <eventlog_entry_validate+0xf>
   31239:	8b 17                	mov    (%rdi),%edx
   3123b:	85 d2                	test   %edx,%edx
   3123d:	74 09                	je     31248 <eventlog_entry_validate+0x18>
   3123f:	31 c0                	xor    %eax,%eax
   31241:	c3                   	retq   
   31242:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   31248:	53                   	push   %rbx
   31249:	48 8d 35 45 26 01 00 	lea    0x12645(%rip),%rsi        # 43895 <__PRETTY_FUNCTION__.3519+0xd>
   31250:	48 89 fb             	mov    %rdi,%rbx
   31253:	e8 f8 f3 fd ff       	callq  10650 <json_object_get@plt>
   31258:	48 85 c0             	test   %rax,%rax
   3125b:	74 05                	je     31262 <eventlog_entry_validate+0x32>
   3125d:	83 38 02             	cmpl   $0x2,(%rax)
   31260:	74 0e                	je     31270 <eventlog_entry_validate+0x40>
   31262:	31 c0                	xor    %eax,%eax
   31264:	5b                   	pop    %rbx
   31265:	c3                   	retq   
   31266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3126d:	00 00 00 
   31270:	48 8d 35 23 26 01 00 	lea    0x12623(%rip),%rsi        # 4389a <__PRETTY_FUNCTION__.3519+0x12>
   31277:	48 89 df             	mov    %rbx,%rdi
   3127a:	e8 d1 f3 fd ff       	callq  10650 <json_object_get@plt>
   3127f:	48 85 c0             	test   %rax,%rax
   31282:	74 de                	je     31262 <eventlog_entry_validate+0x32>
   31284:	8b 00                	mov    (%rax),%eax
   31286:	83 e8 03             	sub    $0x3,%eax
   31289:	83 f8 01             	cmp    $0x1,%eax
   3128c:	77 d4                	ja     31262 <eventlog_entry_validate+0x32>
   3128e:	48 8d 35 c3 e7 00 00 	lea    0xe7c3(%rip),%rsi        # 3fa58 <f58_prefix+0x5f5>
   31295:	48 89 df             	mov    %rbx,%rdi
   31298:	e8 b3 f3 fd ff       	callq  10650 <json_object_get@plt>
   3129d:	48 89 c2             	mov    %rax,%rdx
   312a0:	b8 01 00 00 00       	mov    $0x1,%eax
   312a5:	48 85 d2             	test   %rdx,%rdx
   312a8:	74 ba                	je     31264 <eventlog_entry_validate+0x34>
   312aa:	8b 02                	mov    (%rdx),%eax
   312ac:	5b                   	pop    %rbx
   312ad:	85 c0                	test   %eax,%eax
   312af:	0f 94 c0             	sete   %al
   312b2:	c3                   	retq   

00000000000312b3 <.annobin_eventlog_entry_decode_common.start>:
   312b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   312ba:	00 00 00 00 
   312be:	66 90                	xchg   %ax,%ax

00000000000312c0 <eventlog_entry_decode_common>:
   312c0:	55                   	push   %rbp
   312c1:	53                   	push   %rbx
   312c2:	48 83 ec 08          	sub    $0x8,%rsp
   312c6:	48 85 ff             	test   %rdi,%rdi
   312c9:	74 55                	je     31320 <eventlog_entry_decode_common+0x60>
   312cb:	48 89 fb             	mov    %rdi,%rbx
   312ce:	89 f5                	mov    %esi,%ebp
   312d0:	e8 4b eb fd ff       	callq  fe20 <strlen@plt>
   312d5:	85 c0                	test   %eax,%eax
   312d7:	74 47                	je     31320 <eventlog_entry_decode_common+0x60>
   312d9:	40 84 ed             	test   %bpl,%bpl
   312dc:	75 62                	jne    31340 <eventlog_entry_decode_common+0x80>
   312de:	be 0a 00 00 00       	mov    $0xa,%esi
   312e3:	48 89 df             	mov    %rbx,%rdi
   312e6:	e8 c5 eb fd ff       	callq  feb0 <strchr@plt>
   312eb:	48 85 c0             	test   %rax,%rax
   312ee:	75 30                	jne    31320 <eventlog_entry_decode_common+0x60>
   312f0:	48 89 df             	mov    %rbx,%rdi
   312f3:	31 d2                	xor    %edx,%edx
   312f5:	be 10 00 00 00       	mov    $0x10,%esi
   312fa:	e8 11 f2 fd ff       	callq  10510 <json_loads@plt>
   312ff:	48 89 c3             	mov    %rax,%rbx
   31302:	48 85 c0             	test   %rax,%rax
   31305:	74 19                	je     31320 <eventlog_entry_decode_common+0x60>
   31307:	48 89 c7             	mov    %rax,%rdi
   3130a:	e8 21 ff ff ff       	callq  31230 <eventlog_entry_validate>
   3130f:	84 c0                	test   %al,%al
   31311:	75 1a                	jne    3132d <eventlog_entry_decode_common+0x6d>
   31313:	48 8b 43 08          	mov    0x8(%rbx),%rax
   31317:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3131b:	75 4b                	jne    31368 <eventlog_entry_decode_common+0xa8>
   3131d:	0f 1f 00             	nopl   (%rax)
   31320:	e8 eb e7 fd ff       	callq  fb10 <__errno_location@plt>
   31325:	31 db                	xor    %ebx,%ebx
   31327:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3132d:	48 83 c4 08          	add    $0x8,%rsp
   31331:	48 89 d8             	mov    %rbx,%rax
   31334:	5b                   	pop    %rbx
   31335:	5d                   	pop    %rbp
   31336:	c3                   	retq   
   31337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3133e:	00 00 
   31340:	48 98                	cltq   
   31342:	48 8d 6c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbp
   31347:	80 7d 00 0a          	cmpb   $0xa,0x0(%rbp)
   3134b:	75 d3                	jne    31320 <eventlog_entry_decode_common+0x60>
   3134d:	be 0a 00 00 00       	mov    $0xa,%esi
   31352:	48 89 df             	mov    %rbx,%rdi
   31355:	e8 56 eb fd ff       	callq  feb0 <strchr@plt>
   3135a:	48 39 c5             	cmp    %rax,%rbp
   3135d:	74 91                	je     312f0 <eventlog_entry_decode_common+0x30>
   3135f:	eb bf                	jmp    31320 <eventlog_entry_decode_common+0x60>
   31361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31368:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   3136e:	75 b0                	jne    31320 <eventlog_entry_decode_common+0x60>
        json_delete(json);
   31370:	48 89 df             	mov    %rbx,%rdi
   31373:	e8 a8 ec fd ff       	callq  10020 <json_delete@plt>
   31378:	eb a6                	jmp    31320 <eventlog_entry_decode_common+0x60>

000000000003137a <.annobin_eventlog_decode.start>:
   3137a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000031380 <eventlog_decode>:
   31380:	f3 0f 1e fa          	endbr64 
   31384:	41 56                	push   %r14
   31386:	41 55                	push   %r13
   31388:	41 54                	push   %r12
   3138a:	55                   	push   %rbp
   3138b:	53                   	push   %rbx
   3138c:	48 85 ff             	test   %rdi,%rdi
   3138f:	0f 84 ab 00 00 00    	je     31440 <eventlog_decode+0xc0>
   31395:	48 89 fb             	mov    %rdi,%rbx
   31398:	e8 03 f6 fd ff       	callq  109a0 <strdup@plt>
   3139d:	49 89 c6             	mov    %rax,%r14
   313a0:	48 85 c0             	test   %rax,%rax
   313a3:	0f 84 b7 00 00 00    	je     31460 <eventlog_decode+0xe0>
   313a9:	80 3b 00             	cmpb   $0x0,(%rbx)
   313ac:	74 16                	je     313c4 <eventlog_decode+0x44>
   313ae:	be 0a 00 00 00       	mov    $0xa,%esi
   313b3:	48 89 c7             	mov    %rax,%rdi
   313b6:	e8 f5 ea fd ff       	callq  feb0 <strchr@plt>
   313bb:	48 85 c0             	test   %rax,%rax
   313be:	0f 84 fb 00 00 00    	je     314bf <eventlog_decode+0x13f>
   313c4:	e8 57 f6 fd ff       	callq  10a20 <json_array@plt>
   313c9:	4c 89 f3             	mov    %r14,%rbx
   313cc:	49 89 c5             	mov    %rax,%r13
   313cf:	48 85 c0             	test   %rax,%rax
   313d2:	75 3f                	jne    31413 <eventlog_decode+0x93>
   313d4:	e9 8c 00 00 00       	jmpq   31465 <eventlog_decode+0xe5>
   313d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   313e0:	c6 00 00             	movb   $0x0,(%rax)
   313e3:	31 f6                	xor    %esi,%esi
   313e5:	48 89 df             	mov    %rbx,%rdi
   313e8:	4c 8d 60 01          	lea    0x1(%rax),%r12
   313ec:	e8 cf fe ff ff       	callq  312c0 <eventlog_entry_decode_common>
   313f1:	48 89 c5             	mov    %rax,%rbp
   313f4:	48 85 c0             	test   %rax,%rax
   313f7:	0f 84 94 00 00 00    	je     31491 <eventlog_decode+0x111>
   313fd:	48 89 c6             	mov    %rax,%rsi
   31400:	4c 89 ef             	mov    %r13,%rdi
   31403:	4c 89 e3             	mov    %r12,%rbx
   31406:	e8 b5 f6 fd ff       	callq  10ac0 <json_array_append_new@plt>
   3140b:	85 c0                	test   %eax,%eax
   3140d:	0f 88 c9 00 00 00    	js     314dc <eventlog_decode+0x15c>
   31413:	be 0a 00 00 00       	mov    $0xa,%esi
   31418:	48 89 df             	mov    %rbx,%rdi
   3141b:	e8 90 ea fd ff       	callq  feb0 <strchr@plt>
   31420:	48 85 c0             	test   %rax,%rax
   31423:	75 bb                	jne    313e0 <eventlog_decode+0x60>
   31425:	4c 89 f7             	mov    %r14,%rdi
   31428:	e8 83 e6 fd ff       	callq  fab0 <free@plt>
   3142d:	5b                   	pop    %rbx
   3142e:	4c 89 e8             	mov    %r13,%rax
   31431:	5d                   	pop    %rbp
   31432:	41 5c                	pop    %r12
   31434:	41 5d                	pop    %r13
   31436:	41 5e                	pop    %r14
   31438:	c3                   	retq   
   31439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31440:	e8 cb e6 fd ff       	callq  fb10 <__errno_location@plt>
   31445:	45 31 ed             	xor    %r13d,%r13d
   31448:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3144e:	4c 89 e8             	mov    %r13,%rax
   31451:	5b                   	pop    %rbx
   31452:	5d                   	pop    %rbp
   31453:	41 5c                	pop    %r12
   31455:	41 5d                	pop    %r13
   31457:	41 5e                	pop    %r14
   31459:	c3                   	retq   
   3145a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   31460:	45 31 ed             	xor    %r13d,%r13d
   31463:	eb c8                	jmp    3142d <eventlog_decode+0xad>
   31465:	e8 a6 e6 fd ff       	callq  fb10 <__errno_location@plt>
   3146a:	4c 89 f7             	mov    %r14,%rdi
   3146d:	bd 0c 00 00 00       	mov    $0xc,%ebp
   31472:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   31478:	48 89 c3             	mov    %rax,%rbx
   3147b:	e8 30 e6 fd ff       	callq  fab0 <free@plt>
   31480:	45 31 ed             	xor    %r13d,%r13d
   31483:	89 2b                	mov    %ebp,(%rbx)
   31485:	5b                   	pop    %rbx
   31486:	4c 89 e8             	mov    %r13,%rax
   31489:	5d                   	pop    %rbp
   3148a:	41 5c                	pop    %r12
   3148c:	41 5d                	pop    %r13
   3148e:	41 5e                	pop    %r14
   31490:	c3                   	retq   
   31491:	e8 7a e6 fd ff       	callq  fb10 <__errno_location@plt>
   31496:	8b 28                	mov    (%rax),%ebp
   31498:	48 89 c3             	mov    %rax,%rbx
   3149b:	4c 89 f7             	mov    %r14,%rdi
   3149e:	e8 0d e6 fd ff       	callq  fab0 <free@plt>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   314a3:	49 8b 45 08          	mov    0x8(%r13),%rax
   314a7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   314ab:	74 d3                	je     31480 <eventlog_decode+0x100>
   314ad:	f0 49 83 6d 08 01    	lock subq $0x1,0x8(%r13)
   314b3:	75 cb                	jne    31480 <eventlog_decode+0x100>
        json_delete(json);
   314b5:	4c 89 ef             	mov    %r13,%rdi
   314b8:	e8 63 eb fd ff       	callq  10020 <json_delete@plt>
   314bd:	eb c1                	jmp    31480 <eventlog_decode+0x100>
   314bf:	e8 4c e6 fd ff       	callq  fb10 <__errno_location@plt>
   314c4:	4c 89 f7             	mov    %r14,%rdi
   314c7:	bd 16 00 00 00       	mov    $0x16,%ebp
   314cc:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   314d2:	48 89 c3             	mov    %rax,%rbx
   314d5:	e8 d6 e5 fd ff       	callq  fab0 <free@plt>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   314da:	eb a4                	jmp    31480 <eventlog_decode+0x100>
   314dc:	48 8b 45 08          	mov    0x8(%rbp),%rax
   314e0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   314e4:	74 08                	je     314ee <eventlog_decode+0x16e>
   314e6:	f0 48 83 6d 08 01    	lock subq $0x1,0x8(%rbp)
   314ec:	74 15                	je     31503 <eventlog_decode+0x183>
   314ee:	e8 1d e6 fd ff       	callq  fb10 <__errno_location@plt>
   314f3:	bd 0c 00 00 00       	mov    $0xc,%ebp
   314f8:	48 89 c3             	mov    %rax,%rbx
   314fb:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   31501:	eb 98                	jmp    3149b <eventlog_decode+0x11b>
        json_delete(json);
   31503:	48 89 ef             	mov    %rbp,%rdi
   31506:	e8 15 eb fd ff       	callq  10020 <json_delete@plt>
   3150b:	eb e1                	jmp    314ee <eventlog_decode+0x16e>

000000000003150d <.annobin_eventlog_decode.end>:
   3150d:	0f 1f 00             	nopl   (%rax)

0000000000031510 <eventlog_entry_decode>:
   31510:	f3 0f 1e fa          	endbr64 
   31514:	be 01 00 00 00       	mov    $0x1,%esi
   31519:	e9 a2 fd ff ff       	jmpq   312c0 <eventlog_entry_decode_common>

000000000003151e <.annobin_eventlog_entry_create.start>:
   3151e:	66 90                	xchg   %ax,%ax

0000000000031520 <eventlog_entry_create>:
   31520:	f3 0f 1e fa          	endbr64 
   31524:	41 54                	push   %r12
   31526:	49 89 fc             	mov    %rdi,%r12
   31529:	55                   	push   %rbp
   3152a:	53                   	push   %rbx
   3152b:	48 89 f3             	mov    %rsi,%rbx
   3152e:	48 83 ec 10          	sub    $0x10,%rsp
   31532:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   31538:	e8 d3 e5 fd ff       	callq  fb10 <__errno_location@plt>
   3153d:	48 89 c5             	mov    %rax,%rbp
   31540:	48 85 db             	test   %rbx,%rbx
   31543:	74 6b                	je     315b0 <eventlog_entry_create+0x90>
   31545:	48 89 df             	mov    %rbx,%rdi
   31548:	31 d2                	xor    %edx,%edx
   3154a:	31 f6                	xor    %esi,%esi
   3154c:	e8 bf ef fd ff       	callq  10510 <json_loads@plt>
   31551:	48 89 c3             	mov    %rax,%rbx
   31554:	48 85 c0             	test   %rax,%rax
   31557:	74 7f                	je     315d8 <eventlog_entry_create+0xb8>
   31559:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   3155f:	4c 89 e7             	mov    %r12,%rdi
   31562:	48 89 c6             	mov    %rax,%rsi
   31565:	e8 86 f9 ff ff       	callq  30ef0 <entry_build>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3156a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3156e:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   31572:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   31576:	75 10                	jne    31588 <eventlog_entry_create+0x68>
   31578:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3157c:	48 83 c4 10          	add    $0x10,%rsp
   31580:	5b                   	pop    %rbx
   31581:	5d                   	pop    %rbp
   31582:	41 5c                	pop    %r12
   31584:	c3                   	retq   
   31585:	0f 1f 00             	nopl   (%rax)
   31588:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   3158e:	75 e8                	jne    31578 <eventlog_entry_create+0x58>
        json_delete(json);
   31590:	48 89 df             	mov    %rbx,%rdi
   31593:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31598:	e8 83 ea fd ff       	callq  10020 <json_delete@plt>
   3159d:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   315a1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   315a6:	48 83 c4 10          	add    $0x10,%rsp
   315aa:	5b                   	pop    %rbx
   315ab:	5d                   	pop    %rbp
   315ac:	41 5c                	pop    %r12
   315ae:	c3                   	retq   
   315af:	90                   	nop
   315b0:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   315b6:	4c 89 e7             	mov    %r12,%rdi
   315b9:	31 f6                	xor    %esi,%esi
   315bb:	e8 30 f9 ff ff       	callq  30ef0 <entry_build>
   315c0:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   315c4:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   315c8:	48 83 c4 10          	add    $0x10,%rsp
   315cc:	5b                   	pop    %rbx
   315cd:	5d                   	pop    %rbp
   315ce:	41 5c                	pop    %r12
   315d0:	c3                   	retq   
   315d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   315d8:	31 c0                	xor    %eax,%eax
   315da:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   315e0:	eb 96                	jmp    31578 <eventlog_entry_create+0x58>

00000000000315e2 <.annobin_eventlog_entry_create.end>:
   315e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   315e9:	00 00 00 00 
   315ed:	0f 1f 00             	nopl   (%rax)

00000000000315f0 <eventlog_entry_vpack>:
   315f0:	f3 0f 1e fa          	endbr64 
   315f4:	41 55                	push   %r13
   315f6:	49 89 d5             	mov    %rdx,%r13
   315f9:	41 54                	push   %r12
   315fb:	49 89 fc             	mov    %rdi,%r12
   315fe:	55                   	push   %rbp
   315ff:	53                   	push   %rbx
   31600:	48 89 f3             	mov    %rsi,%rbx
   31603:	48 83 ec 18          	sub    $0x18,%rsp
   31607:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   3160d:	e8 fe e4 fd ff       	callq  fb10 <__errno_location@plt>
   31612:	48 89 c5             	mov    %rax,%rbp
   31615:	48 85 db             	test   %rbx,%rbx
   31618:	74 7e                	je     31698 <eventlog_entry_vpack+0xa8>
   3161a:	48 89 da             	mov    %rbx,%rdx
   3161d:	4c 89 e9             	mov    %r13,%rcx
   31620:	31 f6                	xor    %esi,%esi
   31622:	31 ff                	xor    %edi,%edi
   31624:	e8 f7 f4 fd ff       	callq  10b20 <json_vpack_ex@plt>
   31629:	48 89 c3             	mov    %rax,%rbx
   3162c:	48 85 c0             	test   %rax,%rax
   3162f:	0f 84 8b 00 00 00    	je     316c0 <eventlog_entry_vpack+0xd0>
   31635:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   3163b:	4c 89 e7             	mov    %r12,%rdi
   3163e:	48 89 c6             	mov    %rax,%rsi
   31641:	e8 aa f8 ff ff       	callq  30ef0 <entry_build>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   31646:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3164a:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   3164e:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   31652:	75 14                	jne    31668 <eventlog_entry_vpack+0x78>
   31654:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   31658:	48 83 c4 18          	add    $0x18,%rsp
   3165c:	5b                   	pop    %rbx
   3165d:	5d                   	pop    %rbp
   3165e:	41 5c                	pop    %r12
   31660:	41 5d                	pop    %r13
   31662:	c3                   	retq   
   31663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31668:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   3166e:	75 e4                	jne    31654 <eventlog_entry_vpack+0x64>
        json_delete(json);
   31670:	48 89 df             	mov    %rbx,%rdi
   31673:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31678:	e8 a3 e9 fd ff       	callq  10020 <json_delete@plt>
   3167d:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   31681:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   31686:	48 83 c4 18          	add    $0x18,%rsp
   3168a:	5b                   	pop    %rbx
   3168b:	5d                   	pop    %rbp
   3168c:	41 5c                	pop    %r12
   3168e:	41 5d                	pop    %r13
   31690:	c3                   	retq   
   31691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31698:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   3169e:	4c 89 e7             	mov    %r12,%rdi
   316a1:	31 f6                	xor    %esi,%esi
   316a3:	e8 48 f8 ff ff       	callq  30ef0 <entry_build>
   316a8:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   316ac:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   316b0:	48 83 c4 18          	add    $0x18,%rsp
   316b4:	5b                   	pop    %rbx
   316b5:	5d                   	pop    %rbp
   316b6:	41 5c                	pop    %r12
   316b8:	41 5d                	pop    %r13
   316ba:	c3                   	retq   
   316bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   316c0:	31 c0                	xor    %eax,%eax
   316c2:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   316c8:	eb 8a                	jmp    31654 <eventlog_entry_vpack+0x64>

00000000000316ca <.annobin_eventlog_entry_pack.start>:
   316ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000316d0 <eventlog_entry_pack>:
   316d0:	f3 0f 1e fa          	endbr64 
   316d4:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   316db:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   316e0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   316e5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   316ea:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   316ef:	84 c0                	test   %al,%al
   316f1:	74 32                	je     31725 <eventlog_entry_pack+0x55>
   316f3:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   316f8:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   316fd:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   31704:	00 
   31705:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   3170c:	00 
   3170d:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   31714:	00 
   31715:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   3171c:	00 
   3171d:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   31724:	00 
   31725:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3172c:	00 00 
   3172e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31733:	31 c0                	xor    %eax,%eax
   31735:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   3173c:	00 
   3173d:	48 89 e2             	mov    %rsp,%rdx
   31740:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   31747:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3174c:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   31751:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%rsp)
   31758:	00 
   31759:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   3175e:	e8 8d fe ff ff       	callq  315f0 <eventlog_entry_vpack>
   31763:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   31768:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3176f:	00 00 
   31771:	75 08                	jne    3177b <eventlog_entry_pack+0xab>
   31773:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   3177a:	c3                   	retq   
   3177b:	e8 d0 e6 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000031780 <eventlog_entry_encode>:
   31780:	f3 0f 1e fa          	endbr64 
   31784:	53                   	push   %rbx
   31785:	48 83 ec 20          	sub    $0x20,%rsp
   31789:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31790:	00 00 
   31792:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31797:	31 c0                	xor    %eax,%eax
   31799:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   317a0:	00 
   317a1:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   317a8:	00 00 
   317aa:	48 85 ff             	test   %rdi,%rdi
   317ad:	74 61                	je     31810 <eventlog_entry_encode+0x90>
   317af:	48 89 fb             	mov    %rdi,%rbx
   317b2:	e8 79 fa ff ff       	callq  31230 <eventlog_entry_validate>
   317b7:	84 c0                	test   %al,%al
   317b9:	74 55                	je     31810 <eventlog_entry_encode+0x90>
   317bb:	48 89 df             	mov    %rbx,%rdi
   317be:	be 20 00 00 00       	mov    $0x20,%esi
   317c3:	e8 38 ea fd ff       	callq  10200 <json_dumps@plt>
   317c8:	48 89 c3             	mov    %rax,%rbx
   317cb:	48 85 c0             	test   %rax,%rax
   317ce:	74 68                	je     31838 <eventlog_entry_encode+0xb8>
   317d0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   317d5:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   317da:	48 89 c1             	mov    %rax,%rcx
   317dd:	31 d2                	xor    %edx,%edx
   317df:	e8 ac f8 ff ff       	callq  31090 <append_string_nl>
   317e4:	48 89 df             	mov    %rbx,%rdi
   317e7:	85 c0                	test   %eax,%eax
   317e9:	78 35                	js     31820 <eventlog_entry_encode+0xa0>
   317eb:	e8 c0 e2 fd ff       	callq  fab0 <free@plt>
   317f0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   317f5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   317fa:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   31801:	00 00 
   31803:	48 89 d8             	mov    %rbx,%rax
   31806:	75 3d                	jne    31845 <eventlog_entry_encode+0xc5>
   31808:	48 83 c4 20          	add    $0x20,%rsp
   3180c:	5b                   	pop    %rbx
   3180d:	c3                   	retq   
   3180e:	66 90                	xchg   %ax,%ax
   31810:	e8 fb e2 fd ff       	callq  fb10 <__errno_location@plt>
   31815:	31 db                	xor    %ebx,%ebx
   31817:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3181d:	eb d6                	jmp    317f5 <eventlog_entry_encode+0x75>
   3181f:	90                   	nop
   31820:	e8 8b e2 fd ff       	callq  fab0 <free@plt>
   31825:	31 db                	xor    %ebx,%ebx
   31827:	e8 e4 e2 fd ff       	callq  fb10 <__errno_location@plt>
   3182c:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   31832:	eb c1                	jmp    317f5 <eventlog_entry_encode+0x75>
   31834:	0f 1f 40 00          	nopl   0x0(%rax)
   31838:	e8 d3 e2 fd ff       	callq  fb10 <__errno_location@plt>
   3183d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   31843:	eb b0                	jmp    317f5 <eventlog_entry_encode+0x75>
   31845:	e8 06 e6 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003184a <.annobin_eventlog_encode.start>:
   3184a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000031850 <eventlog_encode>:
   31850:	f3 0f 1e fa          	endbr64 
   31854:	41 57                	push   %r15
   31856:	41 56                	push   %r14
   31858:	41 55                	push   %r13
   3185a:	41 54                	push   %r12
   3185c:	55                   	push   %rbp
   3185d:	53                   	push   %rbx
   3185e:	48 83 ec 28          	sub    $0x28,%rsp
   31862:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31869:	00 00 
   3186b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31870:	31 c0                	xor    %eax,%eax
   31872:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   31879:	00 
   3187a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   31881:	00 00 
   31883:	48 85 ff             	test   %rdi,%rdi
   31886:	0f 84 a4 00 00 00    	je     31930 <eventlog_encode+0xe0>
   3188c:	45 31 e4             	xor    %r12d,%r12d
   3188f:	31 db                	xor    %ebx,%ebx
   31891:	83 3f 01             	cmpl   $0x1,(%rdi)
   31894:	49 89 fd             	mov    %rdi,%r13
   31897:	0f 85 93 00 00 00    	jne    31930 <eventlog_encode+0xe0>
   3189d:	4c 8d 7c 24 0c       	lea    0xc(%rsp),%r15
   318a2:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   318a7:	eb 50                	jmp    318f9 <eventlog_encode+0xa9>
   318a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   318b0:	48 89 de             	mov    %rbx,%rsi
   318b3:	4c 89 ef             	mov    %r13,%rdi
   318b6:	e8 25 ec fd ff       	callq  104e0 <json_array_get@plt>
   318bb:	48 85 c0             	test   %rax,%rax
   318be:	74 46                	je     31906 <eventlog_encode+0xb6>
   318c0:	be 20 00 00 00       	mov    $0x20,%esi
   318c5:	48 89 c7             	mov    %rax,%rdi
   318c8:	e8 33 e9 fd ff       	callq  10200 <json_dumps@plt>
   318cd:	48 89 c5             	mov    %rax,%rbp
   318d0:	48 85 c0             	test   %rax,%rax
   318d3:	74 6b                	je     31940 <eventlog_encode+0xf0>
   318d5:	44 89 e2             	mov    %r12d,%edx
   318d8:	48 89 c1             	mov    %rax,%rcx
   318db:	4c 89 fe             	mov    %r15,%rsi
   318de:	4c 89 f7             	mov    %r14,%rdi
   318e1:	e8 aa f7 ff ff       	callq  31090 <append_string_nl>
   318e6:	41 89 c4             	mov    %eax,%r12d
   318e9:	85 c0                	test   %eax,%eax
   318eb:	78 53                	js     31940 <eventlog_encode+0xf0>
   318ed:	48 89 ef             	mov    %rbp,%rdi
   318f0:	48 83 c3 01          	add    $0x1,%rbx
   318f4:	e8 b7 e1 fd ff       	callq  fab0 <free@plt>
   318f9:	4c 89 ef             	mov    %r13,%rdi
   318fc:	e8 1f e4 fd ff       	callq  fd20 <json_array_size@plt>
   31901:	48 39 c3             	cmp    %rax,%rbx
   31904:	72 aa                	jb     318b0 <eventlog_encode+0x60>
   31906:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3190b:	48 85 c0             	test   %rax,%rax
   3190e:	74 51                	je     31961 <eventlog_encode+0x111>
   31910:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   31915:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3191c:	00 00 
   3191e:	75 52                	jne    31972 <eventlog_encode+0x122>
   31920:	48 83 c4 28          	add    $0x28,%rsp
   31924:	5b                   	pop    %rbx
   31925:	5d                   	pop    %rbp
   31926:	41 5c                	pop    %r12
   31928:	41 5d                	pop    %r13
   3192a:	41 5e                	pop    %r14
   3192c:	41 5f                	pop    %r15
   3192e:	c3                   	retq   
   3192f:	90                   	nop
   31930:	e8 db e1 fd ff       	callq  fb10 <__errno_location@plt>
   31935:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3193b:	31 c0                	xor    %eax,%eax
   3193d:	eb d1                	jmp    31910 <eventlog_encode+0xc0>
   3193f:	90                   	nop
   31940:	48 89 ef             	mov    %rbp,%rdi
   31943:	e8 68 e1 fd ff       	callq  fab0 <free@plt>
   31948:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3194d:	e8 5e e1 fd ff       	callq  fab0 <free@plt>
   31952:	e8 b9 e1 fd ff       	callq  fb10 <__errno_location@plt>
   31957:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3195d:	31 c0                	xor    %eax,%eax
   3195f:	eb af                	jmp    31910 <eventlog_encode+0xc0>
   31961:	be 01 00 00 00       	mov    $0x1,%esi
   31966:	bf 01 00 00 00       	mov    $0x1,%edi
   3196b:	e8 a0 e8 fd ff       	callq  10210 <calloc@plt>
   31970:	eb 9e                	jmp    31910 <eventlog_encode+0xc0>
   31972:	e8 d9 e4 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000031977 <.annobin_eventlog_contains_event.start>:
   31977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3197e:	00 00 

0000000000031980 <eventlog_contains_event>:
   31980:	f3 0f 1e fa          	endbr64 
   31984:	41 57                	push   %r15
   31986:	41 56                	push   %r14
   31988:	41 55                	push   %r13
   3198a:	41 54                	push   %r12
   3198c:	55                   	push   %rbp
   3198d:	53                   	push   %rbx
   3198e:	48 83 ec 38          	sub    $0x38,%rsp
   31992:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   31999:	00 00 
   3199b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   319a0:	31 c0                	xor    %eax,%eax
   319a2:	48 85 ff             	test   %rdi,%rdi
   319a5:	0f 84 a5 00 00 00    	je     31a50 <eventlog_contains_event+0xd0>
   319ab:	49 89 f4             	mov    %rsi,%r12
   319ae:	48 85 f6             	test   %rsi,%rsi
   319b1:	0f 84 99 00 00 00    	je     31a50 <eventlog_contains_event+0xd0>
   319b7:	e8 c4 f9 ff ff       	callq  31380 <eventlog_decode>
   319bc:	48 89 c5             	mov    %rax,%rbp
   319bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   319c4:	48 85 ed             	test   %rbp,%rbp
   319c7:	0f 84 93 00 00 00    	je     31a60 <eventlog_contains_event+0xe0>
   319cd:	31 db                	xor    %ebx,%ebx
   319cf:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   319d4:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   319d9:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   319de:	eb 3a                	jmp    31a1a <eventlog_contains_event+0x9a>
   319e0:	48 89 de             	mov    %rbx,%rsi
   319e3:	48 89 ef             	mov    %rbp,%rdi
   319e6:	e8 f5 ea fd ff       	callq  104e0 <json_array_get@plt>
   319eb:	48 85 c0             	test   %rax,%rax
   319ee:	74 37                	je     31a27 <eventlog_contains_event+0xa7>
   319f0:	4c 89 f9             	mov    %r15,%rcx
   319f3:	4c 89 f2             	mov    %r14,%rdx
   319f6:	4c 89 ee             	mov    %r13,%rsi
   319f9:	48 89 c7             	mov    %rax,%rdi
   319fc:	e8 1f f7 ff ff       	callq  31120 <eventlog_entry_parse>
   31a01:	85 c0                	test   %eax,%eax
   31a03:	78 7b                	js     31a80 <eventlog_contains_event+0x100>
   31a05:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   31a0a:	4c 89 e7             	mov    %r12,%rdi
   31a0d:	e8 0e e8 fd ff       	callq  10220 <strcmp@plt>
   31a12:	85 c0                	test   %eax,%eax
   31a14:	74 7a                	je     31a90 <eventlog_contains_event+0x110>
   31a16:	48 83 c3 01          	add    $0x1,%rbx
   31a1a:	48 89 ef             	mov    %rbp,%rdi
   31a1d:	e8 fe e2 fd ff       	callq  fd20 <json_array_size@plt>
   31a22:	48 39 c3             	cmp    %rax,%rbx
   31a25:	72 b9                	jb     319e0 <eventlog_contains_event+0x60>
   31a27:	31 c0                	xor    %eax,%eax
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   31a29:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   31a2d:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   31a31:	74 2d                	je     31a60 <eventlog_contains_event+0xe0>
   31a33:	f0 48 83 6d 08 01    	lock subq $0x1,0x8(%rbp)
   31a39:	75 25                	jne    31a60 <eventlog_contains_event+0xe0>
        json_delete(json);
   31a3b:	48 89 ef             	mov    %rbp,%rdi
   31a3e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   31a42:	e8 d9 e5 fd ff       	callq  10020 <json_delete@plt>
   31a47:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   31a4b:	eb 13                	jmp    31a60 <eventlog_contains_event+0xe0>
   31a4d:	0f 1f 00             	nopl   (%rax)
   31a50:	e8 bb e0 fd ff       	callq  fb10 <__errno_location@plt>
   31a55:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   31a5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31a60:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   31a65:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   31a6c:	00 00 
   31a6e:	75 27                	jne    31a97 <eventlog_contains_event+0x117>
   31a70:	48 83 c4 38          	add    $0x38,%rsp
   31a74:	5b                   	pop    %rbx
   31a75:	5d                   	pop    %rbp
   31a76:	41 5c                	pop    %r12
   31a78:	41 5d                	pop    %r13
   31a7a:	41 5e                	pop    %r14
   31a7c:	41 5f                	pop    %r15
   31a7e:	c3                   	retq   
   31a7f:	90                   	nop
   31a80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31a85:	eb a2                	jmp    31a29 <eventlog_contains_event+0xa9>
   31a87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31a8e:	00 00 
   31a90:	b8 01 00 00 00       	mov    $0x1,%eax
   31a95:	eb 92                	jmp    31a29 <eventlog_contains_event+0xa9>
   31a97:	e8 b4 e3 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000031a9c <.annobin_eventlog.c_end>:
   31a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031aa0 <eventlogger_commit_batch.isra.1>:
   31aa0:	41 54                	push   %r12
   31aa2:	55                   	push   %rbp
   31aa3:	53                   	push   %rbx
   31aa4:	48 83 ec 10          	sub    $0x10,%rsp
   31aa8:	48 85 d2             	test   %rdx,%rdx
   31aab:	74 53                	je     31b00 <eventlogger_commit_batch.isra.1+0x60>
   31aad:	48 89 fd             	mov    %rdi,%rbp
   31ab0:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
   31ab4:	48 89 d3             	mov    %rdx,%rbx
   31ab7:	49 89 f4             	mov    %rsi,%r12
   31aba:	e8 71 ed fd ff       	callq  10830 <flux_watcher_stop@plt>
   31abf:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   31ac3:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   31ac7:	ba 02 00 00 00       	mov    $0x2,%edx
   31acc:	49 8b 34 24          	mov    (%r12),%rsi
   31ad0:	e8 2b ef fd ff       	callq  10a00 <flux_kvs_commit@plt>
   31ad5:	48 89 c5             	mov    %rax,%rbp
   31ad8:	48 85 c0             	test   %rax,%rax
   31adb:	74 53                	je     31b30 <eventlogger_commit_batch.isra.1+0x90>
   31add:	48 89 da             	mov    %rbx,%rdx
   31ae0:	48 8d 35 e9 00 00 00 	lea    0xe9(%rip),%rsi        # 31bd0 <commit_cb>
   31ae7:	48 89 c7             	mov    %rax,%rdi
   31aea:	e8 21 ef fd ff       	callq  10a10 <flux_future_and_then@plt>
   31aef:	48 85 c0             	test   %rax,%rax
   31af2:	74 4c                	je     31b40 <eventlogger_commit_batch.isra.1+0xa0>
   31af4:	48 83 c4 10          	add    $0x10,%rsp
   31af8:	5b                   	pop    %rbx
   31af9:	5d                   	pop    %rbp
   31afa:	41 5c                	pop    %r12
   31afc:	c3                   	retq   
   31afd:	0f 1f 00             	nopl   (%rax)
   31b00:	31 f6                	xor    %esi,%esi
   31b02:	31 ff                	xor    %edi,%edi
   31b04:	e8 97 e0 fd ff       	callq  fba0 <flux_future_create@plt>
   31b09:	48 85 c0             	test   %rax,%rax
   31b0c:	74 e6                	je     31af4 <eventlogger_commit_batch.isra.1+0x54>
   31b0e:	48 89 c7             	mov    %rax,%rdi
   31b11:	31 d2                	xor    %edx,%edx
   31b13:	31 f6                	xor    %esi,%esi
   31b15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31b1a:	e8 e1 e3 fd ff       	callq  ff00 <flux_future_fulfill@plt>
   31b1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   31b24:	48 83 c4 10          	add    $0x10,%rsp
   31b28:	5b                   	pop    %rbx
   31b29:	5d                   	pop    %rbp
   31b2a:	41 5c                	pop    %r12
   31b2c:	c3                   	retq   
   31b2d:	0f 1f 00             	nopl   (%rax)
   31b30:	48 83 c4 10          	add    $0x10,%rsp
   31b34:	31 c0                	xor    %eax,%eax
   31b36:	5b                   	pop    %rbx
   31b37:	5d                   	pop    %rbp
   31b38:	41 5c                	pop    %r12
   31b3a:	c3                   	retq   
   31b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31b40:	48 89 ef             	mov    %rbp,%rdi
   31b43:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   31b48:	e8 03 e2 fd ff       	callq  fd50 <flux_future_destroy@plt>
   31b4d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   31b52:	eb a0                	jmp    31af4 <eventlogger_commit_batch.isra.1+0x54>

0000000000031b54 <.annobin_eventlogger_commit_batch.isra.1.end>:
   31b54:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31b5b:	00 00 00 00 
   31b5f:	90                   	nop

0000000000031b60 <eventlogger_decref>:
   31b60:	48 85 ff             	test   %rdi,%rdi
   31b63:	74 05                	je     31b6a <eventlogger_decref+0xa>
   31b65:	83 2f 01             	subl   $0x1,(%rdi)
   31b68:	74 06                	je     31b70 <eventlogger_decref+0x10>
   31b6a:	c3                   	retq   
   31b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31b70:	53                   	push   %rbx
   31b71:	48 89 fb             	mov    %rdi,%rbx
   31b74:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   31b78:	e8 33 df fd ff       	callq  fab0 <free@plt>
   31b7d:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   31b81:	48 85 ff             	test   %rdi,%rdi
   31b84:	74 13                	je     31b99 <eventlogger_decref+0x39>
   31b86:	e8 a5 98 00 00       	callq  3b430 <fzlist_size>
   31b8b:	48 85 c0             	test   %rax,%rax
   31b8e:	75 12                	jne    31ba2 <eventlogger_decref+0x42>
   31b90:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   31b94:	e8 37 98 00 00       	callq  3b3d0 <fzlist_destroy>
   31b99:	48 89 df             	mov    %rbx,%rdi
   31b9c:	5b                   	pop    %rbx
   31b9d:	e9 0e df fd ff       	jmpq   fab0 <free@plt>
   31ba2:	48 8d 0d 57 1d 01 00 	lea    0x11d57(%rip),%rcx        # 43900 <__PRETTY_FUNCTION__.6731>
   31ba9:	ba 2f 00 00 00       	mov    $0x2f,%edx
   31bae:	48 8d 35 1f 1d 01 00 	lea    0x11d1f(%rip),%rsi        # 438d4 <__PRETTY_FUNCTION__.3519+0x4c>
   31bb5:	48 8d 3d 26 1d 01 00 	lea    0x11d26(%rip),%rdi        # 438e2 <__PRETTY_FUNCTION__.3519+0x5a>
   31bbc:	e8 3f e4 fd ff       	callq  10000 <__assert_fail@plt>

0000000000031bc1 <.annobin_commit_cb.start>:
   31bc1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31bc8:	00 00 00 00 
   31bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031bd0 <commit_cb>:
   31bd0:	f3 0f 1e fa          	endbr64 
   31bd4:	55                   	push   %rbp
   31bd5:	48 89 fd             	mov    %rdi,%rbp
   31bd8:	53                   	push   %rbx
   31bd9:	48 83 ec 08          	sub    $0x8,%rsp
   31bdd:	48 8b 5e 18          	mov    0x18(%rsi),%rbx
   31be1:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   31be5:	e8 66 96 00 00       	callq  3b250 <fzlist_remove>
   31bea:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   31bee:	e8 3d 98 00 00       	callq  3b430 <fzlist_size>
   31bf3:	48 85 c0             	test   %rax,%rax
   31bf6:	75 1a                	jne    31c12 <commit_cb+0x42>
   31bf8:	48 8b 43 40          	mov    0x40(%rbx),%rax
   31bfc:	48 85 c0             	test   %rax,%rax
   31bff:	74 09                	je     31c0a <commit_cb+0x3a>
   31c01:	48 8b 73 50          	mov    0x50(%rbx),%rsi
   31c05:	48 89 df             	mov    %rbx,%rdi
   31c08:	ff d0                	callq  *%rax
   31c0a:	48 89 df             	mov    %rbx,%rdi
   31c0d:	e8 4e ff ff ff       	callq  31b60 <eventlogger_decref>
   31c12:	48 83 c4 08          	add    $0x8,%rsp
   31c16:	48 89 ef             	mov    %rbp,%rdi
   31c19:	5b                   	pop    %rbx
   31c1a:	5d                   	pop    %rbp
   31c1b:	e9 30 e1 fd ff       	jmpq   fd50 <flux_future_destroy@plt>

0000000000031c20 <eventlog_batch_error.isra.4>:
   31c20:	48 83 7e 48 00       	cmpq   $0x0,0x48(%rsi)
   31c25:	74 49                	je     31c70 <eventlog_batch_error.isra.4+0x50>
   31c27:	41 54                	push   %r12
   31c29:	41 89 d4             	mov    %edx,%r12d
   31c2c:	55                   	push   %rbp
   31c2d:	48 89 fd             	mov    %rdi,%rbp
   31c30:	53                   	push   %rbx
   31c31:	48 8b 3f             	mov    (%rdi),%rdi
   31c34:	48 89 f3             	mov    %rsi,%rbx
   31c37:	e8 94 91 00 00       	callq  3add0 <fzlist_first>
   31c3c:	48 85 c0             	test   %rax,%rax
   31c3f:	74 25                	je     31c66 <eventlog_batch_error.isra.4+0x46>
   31c41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31c48:	48 89 df             	mov    %rbx,%rdi
   31c4b:	48 8b 73 50          	mov    0x50(%rbx),%rsi
   31c4f:	48 89 c1             	mov    %rax,%rcx
   31c52:	44 89 e2             	mov    %r12d,%edx
   31c55:	ff 53 48             	callq  *0x48(%rbx)
   31c58:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   31c5c:	e8 af 91 00 00       	callq  3ae10 <fzlist_next>
   31c61:	48 85 c0             	test   %rax,%rax
   31c64:	75 e2                	jne    31c48 <eventlog_batch_error.isra.4+0x28>
   31c66:	5b                   	pop    %rbx
   31c67:	5d                   	pop    %rbp
   31c68:	41 5c                	pop    %r12
   31c6a:	c3                   	retq   
   31c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31c70:	c3                   	retq   

0000000000031c71 <.annobin_eventlog_batch_error.isra.4.end>:
   31c71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31c78:	00 00 00 00 
   31c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031c80 <timer_cb>:
   31c80:	f3 0f 1e fa          	endbr64 
   31c84:	55                   	push   %rbp
   31c85:	48 89 ca             	mov    %rcx,%rdx
   31c88:	53                   	push   %rbx
   31c89:	48 89 cb             	mov    %rcx,%rbx
   31c8c:	48 83 ec 18          	sub    $0x18,%rsp
   31c90:	48 8b 79 18          	mov    0x18(%rcx),%rdi
   31c94:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
   31c9b:	00 
   31c9c:	f2 0f 10 47 20       	movsd  0x20(%rdi),%xmm0
   31ca1:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   31ca5:	48 83 c7 08          	add    $0x8,%rdi
   31ca9:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   31caf:	e8 ec fd ff ff       	callq  31aa0 <eventlogger_commit_batch.isra.1>
   31cb4:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
   31cba:	48 85 c0             	test   %rax,%rax
   31cbd:	48 89 c5             	mov    %rax,%rbp
   31cc0:	74 1e                	je     31ce0 <timer_cb+0x60>
   31cc2:	48 89 da             	mov    %rbx,%rdx
   31cc5:	48 8d 35 44 00 00 00 	lea    0x44(%rip),%rsi        # 31d10 <timer_commit_cb>
   31ccc:	48 89 c7             	mov    %rax,%rdi
   31ccf:	e8 2c e9 fd ff       	callq  10600 <flux_future_then@plt>
   31cd4:	85 c0                	test   %eax,%eax
   31cd6:	78 08                	js     31ce0 <timer_cb+0x60>
   31cd8:	48 83 c4 18          	add    $0x18,%rsp
   31cdc:	5b                   	pop    %rbx
   31cdd:	5d                   	pop    %rbp
   31cde:	c3                   	retq   
   31cdf:	90                   	nop
   31ce0:	e8 2b de fd ff       	callq  fb10 <__errno_location@plt>
   31ce5:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   31ce9:	48 89 df             	mov    %rbx,%rdi
   31cec:	8b 10                	mov    (%rax),%edx
   31cee:	e8 2d ff ff ff       	callq  31c20 <eventlog_batch_error.isra.4>
   31cf3:	48 83 c4 18          	add    $0x18,%rsp
   31cf7:	48 89 ef             	mov    %rbp,%rdi
   31cfa:	5b                   	pop    %rbx
   31cfb:	5d                   	pop    %rbp
   31cfc:	e9 4f e0 fd ff       	jmpq   fd50 <flux_future_destroy@plt>

0000000000031d01 <.annobin_timer_cb.end>:
   31d01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31d08:	00 00 00 00 
   31d0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031d10 <timer_commit_cb>:
   31d10:	f3 0f 1e fa          	endbr64 
   31d14:	55                   	push   %rbp
   31d15:	48 89 f5             	mov    %rsi,%rbp
   31d18:	31 f6                	xor    %esi,%esi
   31d1a:	53                   	push   %rbx
   31d1b:	48 89 fb             	mov    %rdi,%rbx
   31d1e:	48 83 ec 08          	sub    $0x8,%rsp
   31d22:	e8 09 e1 fd ff       	callq  fe30 <flux_future_get@plt>
   31d27:	85 c0                	test   %eax,%eax
   31d29:	78 15                	js     31d40 <timer_commit_cb+0x30>
   31d2b:	48 83 c4 08          	add    $0x8,%rsp
   31d2f:	48 89 df             	mov    %rbx,%rdi
   31d32:	5b                   	pop    %rbx
   31d33:	5d                   	pop    %rbp
   31d34:	e9 17 e0 fd ff       	jmpq   fd50 <flux_future_destroy@plt>
   31d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31d40:	e8 cb dd fd ff       	callq  fb10 <__errno_location@plt>
   31d45:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   31d49:	48 89 ef             	mov    %rbp,%rdi
   31d4c:	8b 10                	mov    (%rax),%edx
   31d4e:	e8 cd fe ff ff       	callq  31c20 <eventlog_batch_error.isra.4>
   31d53:	48 83 c4 08          	add    $0x8,%rsp
   31d57:	48 89 df             	mov    %rbx,%rdi
   31d5a:	5b                   	pop    %rbx
   31d5b:	5d                   	pop    %rbp
   31d5c:	e9 ef df fd ff       	jmpq   fd50 <flux_future_destroy@plt>

0000000000031d61 <.annobin_eventlog_batch_destroy.start>:
   31d61:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31d68:	00 00 00 00 
   31d6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031d70 <eventlog_batch_destroy>:
   31d70:	f3 0f 1e fa          	endbr64 
   31d74:	48 85 ff             	test   %rdi,%rdi
   31d77:	74 2f                	je     31da8 <eventlog_batch_destroy+0x38>
   31d79:	53                   	push   %rbx
   31d7a:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   31d7e:	48 89 fb             	mov    %rdi,%rbx
   31d81:	74 05                	je     31d88 <eventlog_batch_destroy+0x18>
   31d83:	e8 48 96 00 00       	callq  3b3d0 <fzlist_destroy>
   31d88:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   31d8c:	e8 ef e9 fd ff       	callq  10780 <flux_watcher_destroy@plt>
   31d91:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   31d95:	e8 86 ea fd ff       	callq  10820 <flux_kvs_txn_destroy@plt>
   31d9a:	48 89 df             	mov    %rbx,%rdi
   31d9d:	5b                   	pop    %rbx
   31d9e:	e9 0d dd fd ff       	jmpq   fab0 <free@plt>
   31da3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31da8:	c3                   	retq   

0000000000031da9 <.annobin_eventlog_batch_destroy.end>:
   31da9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031db0 <eventlog_batch_get.part.6>:
   31db0:	41 54                	push   %r12
   31db2:	be 20 00 00 00       	mov    $0x20,%esi
   31db7:	55                   	push   %rbp
   31db8:	48 89 fd             	mov    %rdi,%rbp
   31dbb:	bf 01 00 00 00       	mov    $0x1,%edi
   31dc0:	53                   	push   %rbx
   31dc1:	e8 4a e4 fd ff       	callq  10210 <calloc@plt>
   31dc6:	48 89 c3             	mov    %rax,%rbx
   31dc9:	48 85 c0             	test   %rax,%rax
   31dcc:	0f 84 de 00 00 00    	je     31eb0 <eventlog_batch_get.part.6+0x100>
   31dd2:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   31dd6:	e8 05 e9 fd ff       	callq  106e0 <flux_get_reactor@plt>
   31ddb:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   31ddf:	49 89 c4             	mov    %rax,%r12
   31de2:	e8 79 8f 00 00       	callq  3ad60 <fzlist_new>
   31de7:	48 89 03             	mov    %rax,(%rbx)
   31dea:	e8 91 e1 fd ff       	callq  ff80 <flux_kvs_txn_create@plt>
   31def:	f2 0f 10 45 18       	movsd  0x18(%rbp),%xmm0
   31df4:	48 89 da             	mov    %rbx,%rdx
   31df7:	4c 89 e7             	mov    %r12,%rdi
   31dfa:	48 89 43 08          	mov    %rax,0x8(%rbx)
   31dfe:	48 8d 35 7b fe ff ff 	lea    -0x185(%rip),%rsi        # 31c80 <timer_cb>
   31e05:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31e09:	e8 92 e9 fd ff       	callq  107a0 <flux_timer_watcher_create@plt>
   31e0e:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   31e12:	48 89 43 10          	mov    %rax,0x10(%rbx)
   31e16:	74 78                	je     31e90 <eventlog_batch_get.part.6+0xe0>
   31e18:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   31e1d:	74 71                	je     31e90 <eventlog_batch_get.part.6+0xe0>
   31e1f:	48 85 c0             	test   %rax,%rax
   31e22:	74 6c                	je     31e90 <eventlog_batch_get.part.6+0xe0>
   31e24:	48 89 c7             	mov    %rax,%rdi
   31e27:	e8 a4 dc fd ff       	callq  fad0 <flux_watcher_start@plt>
   31e2c:	48 89 5d 30          	mov    %rbx,0x30(%rbp)
   31e30:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   31e34:	48 89 de             	mov    %rbx,%rsi
   31e37:	e8 24 91 00 00       	callq  3af60 <fzlist_append>
   31e3c:	85 c0                	test   %eax,%eax
   31e3e:	78 27                	js     31e67 <eventlog_batch_get.part.6+0xb7>
   31e40:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   31e44:	b9 01 00 00 00       	mov    $0x1,%ecx
   31e49:	48 8d 15 20 ff ff ff 	lea    -0xe0(%rip),%rdx        # 31d70 <eventlog_batch_destroy>
   31e50:	48 89 de             	mov    %rbx,%rsi
   31e53:	e8 78 97 00 00       	callq  3b5d0 <fzlist_freefn>
   31e58:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   31e5c:	e8 cf 95 00 00       	callq  3b430 <fzlist_size>
   31e61:	48 83 f8 01          	cmp    $0x1,%rax
   31e65:	74 09                	je     31e70 <eventlog_batch_get.part.6+0xc0>
   31e67:	48 89 d8             	mov    %rbx,%rax
   31e6a:	5b                   	pop    %rbx
   31e6b:	5d                   	pop    %rbp
   31e6c:	41 5c                	pop    %r12
   31e6e:	c3                   	retq   
   31e6f:	90                   	nop
   31e70:	48 8b 45 38          	mov    0x38(%rbp),%rax
   31e74:	48 85 c0             	test   %rax,%rax
   31e77:	74 09                	je     31e82 <eventlog_batch_get.part.6+0xd2>
   31e79:	48 8b 75 50          	mov    0x50(%rbp),%rsi
   31e7d:	48 89 ef             	mov    %rbp,%rdi
   31e80:	ff d0                	callq  *%rax
   31e82:	48 89 d8             	mov    %rbx,%rax
   31e85:	83 45 00 01          	addl   $0x1,0x0(%rbp)
   31e89:	5b                   	pop    %rbx
   31e8a:	5d                   	pop    %rbp
   31e8b:	41 5c                	pop    %r12
   31e8d:	c3                   	retq   
   31e8e:	66 90                	xchg   %ax,%ax
   31e90:	48 89 df             	mov    %rbx,%rdi
   31e93:	31 db                	xor    %ebx,%ebx
   31e95:	e8 d6 fe ff ff       	callq  31d70 <eventlog_batch_destroy>
   31e9a:	48 89 d8             	mov    %rbx,%rax
   31e9d:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
   31ea4:	00 
   31ea5:	5b                   	pop    %rbx
   31ea6:	5d                   	pop    %rbp
   31ea7:	41 5c                	pop    %r12
   31ea9:	c3                   	retq   
   31eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   31eb0:	48 89 d8             	mov    %rbx,%rax
   31eb3:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
   31eba:	00 
   31ebb:	5b                   	pop    %rbx
   31ebc:	5d                   	pop    %rbp
   31ebd:	41 5c                	pop    %r12
   31ebf:	c3                   	retq   

0000000000031ec0 <json_decref>:
static JSON_INLINE void json_decref(json_t *json) {
   31ec0:	f3 0f 1e fa          	endbr64 
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   31ec4:	48 85 ff             	test   %rdi,%rdi
   31ec7:	74 0a                	je     31ed3 <json_decref+0x13>
   31ec9:	48 8b 47 08          	mov    0x8(%rdi),%rax
   31ecd:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   31ed1:	75 05                	jne    31ed8 <json_decref+0x18>
}
   31ed3:	c3                   	retq   
   31ed4:	0f 1f 40 00          	nopl   0x0(%rax)
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   31ed8:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
   31ede:	75 f3                	jne    31ed3 <json_decref+0x13>
        json_delete(json);
   31ee0:	e9 3b e1 fd ff       	jmpq   10020 <json_delete@plt>

0000000000031ee5 <.annobin_eventlogger_setns.start>:
   31ee5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   31eec:	00 00 00 00 

0000000000031ef0 <eventlogger_setns>:
   31ef0:	f3 0f 1e fa          	endbr64 
   31ef4:	55                   	push   %rbp
   31ef5:	53                   	push   %rbx
   31ef6:	48 83 ec 08          	sub    $0x8,%rsp
   31efa:	48 85 ff             	test   %rdi,%rdi
   31efd:	74 31                	je     31f30 <eventlogger_setns+0x40>
   31eff:	48 85 f6             	test   %rsi,%rsi
   31f02:	74 2c                	je     31f30 <eventlogger_setns+0x40>
   31f04:	48 89 fb             	mov    %rdi,%rbx
   31f07:	48 89 f7             	mov    %rsi,%rdi
   31f0a:	e8 91 ea fd ff       	callq  109a0 <strdup@plt>
   31f0f:	48 89 c5             	mov    %rax,%rbp
   31f12:	48 85 c0             	test   %rax,%rax
   31f15:	74 2b                	je     31f42 <eventlogger_setns+0x52>
   31f17:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   31f1b:	e8 90 db fd ff       	callq  fab0 <free@plt>
   31f20:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   31f24:	31 c0                	xor    %eax,%eax
   31f26:	48 83 c4 08          	add    $0x8,%rsp
   31f2a:	5b                   	pop    %rbx
   31f2b:	5d                   	pop    %rbp
   31f2c:	c3                   	retq   
   31f2d:	0f 1f 00             	nopl   (%rax)
   31f30:	e8 db db fd ff       	callq  fb10 <__errno_location@plt>
   31f35:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   31f3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31f40:	eb e4                	jmp    31f26 <eventlogger_setns+0x36>
   31f42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31f47:	eb dd                	jmp    31f26 <eventlogger_setns+0x36>

0000000000031f49 <.annobin_eventlogger_set_commit_timeout.start>:
   31f49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031f50 <eventlogger_set_commit_timeout>:
   31f50:	f3 0f 1e fa          	endbr64 
   31f54:	48 85 ff             	test   %rdi,%rdi
   31f57:	74 2d                	je     31f86 <eventlogger_set_commit_timeout+0x36>
   31f59:	f2 0f 10 0d 9f d0 00 	movsd  0xd09f(%rip),%xmm1        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   31f60:	00 
   31f61:	ba 01 00 00 00       	mov    $0x1,%edx
   31f66:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
   31f6a:	0f 9a c0             	setp   %al
   31f6d:	0f 45 c2             	cmovne %edx,%eax
   31f70:	84 c0                	test   %al,%al
   31f72:	74 0a                	je     31f7e <eventlogger_set_commit_timeout+0x2e>
   31f74:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31f78:	66 0f 2f c8          	comisd %xmm0,%xmm1
   31f7c:	77 08                	ja     31f86 <eventlogger_set_commit_timeout+0x36>
   31f7e:	f2 0f 11 47 20       	movsd  %xmm0,0x20(%rdi)
   31f83:	31 c0                	xor    %eax,%eax
   31f85:	c3                   	retq   
   31f86:	48 83 ec 08          	sub    $0x8,%rsp
   31f8a:	e8 81 db fd ff       	callq  fb10 <__errno_location@plt>
   31f8f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   31f95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31f9a:	48 83 c4 08          	add    $0x8,%rsp
   31f9e:	c3                   	retq   

0000000000031f9f <.annobin_eventlogger_commit.start>:
   31f9f:	90                   	nop

0000000000031fa0 <eventlogger_commit>:
   31fa0:	f3 0f 1e fa          	endbr64 
   31fa4:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   31fa8:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
   31faf:	00 
   31fb0:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   31fb4:	48 83 c7 08          	add    $0x8,%rdi
   31fb8:	e9 e3 fa ff ff       	jmpq   31aa0 <eventlogger_commit_batch.isra.1>

0000000000031fbd <.annobin_eventlogger_commit.end>:
   31fbd:	0f 1f 00             	nopl   (%rax)

0000000000031fc0 <eventlogger_destroy>:
   31fc0:	f3 0f 1e fa          	endbr64 
   31fc4:	e9 97 fb ff ff       	jmpq   31b60 <eventlogger_decref>

0000000000031fc9 <.annobin_eventlogger_create.start>:
   31fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031fd0 <eventlogger_create>:
   31fd0:	f3 0f 1e fa          	endbr64 
   31fd4:	41 55                	push   %r13
   31fd6:	49 89 fd             	mov    %rdi,%r13
   31fd9:	bf 01 00 00 00       	mov    $0x1,%edi
   31fde:	41 54                	push   %r12
   31fe0:	49 89 d4             	mov    %rdx,%r12
   31fe3:	55                   	push   %rbp
   31fe4:	48 89 f5             	mov    %rsi,%rbp
   31fe7:	be 58 00 00 00       	mov    $0x58,%esi
   31fec:	53                   	push   %rbx
   31fed:	48 83 ec 18          	sub    $0x18,%rsp
   31ff1:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   31ff7:	e8 14 e2 fd ff       	callq  10210 <calloc@plt>
   31ffc:	48 89 c3             	mov    %rax,%rbx
   31fff:	48 85 c0             	test   %rax,%rax
   32002:	74 4b                	je     3204f <eventlogger_create+0x7f>
   32004:	e8 57 8d 00 00       	callq  3ad60 <fzlist_new>
   32009:	48 89 43 28          	mov    %rax,0x28(%rbx)
   3200d:	48 85 c0             	test   %rax,%rax
   32010:	74 4e                	je     32060 <eventlogger_create+0x90>
   32012:	48 8b 05 e7 cf 00 00 	mov    0xcfe7(%rip),%rax        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   32019:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
   3201f:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   32023:	f3 0f 6f 55 00       	movdqu 0x0(%rbp),%xmm2
   32028:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
   3202f:	00 
   32030:	48 89 43 20          	mov    %rax,0x20(%rbx)
   32034:	48 8b 45 10          	mov    0x10(%rbp),%rax
   32038:	4c 89 63 50          	mov    %r12,0x50(%rbx)
   3203c:	48 89 43 48          	mov    %rax,0x48(%rbx)
   32040:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   32046:	f2 0f 11 4b 18       	movsd  %xmm1,0x18(%rbx)
   3204b:	0f 11 53 38          	movups %xmm2,0x38(%rbx)
   3204f:	48 83 c4 18          	add    $0x18,%rsp
   32053:	48 89 d8             	mov    %rbx,%rax
   32056:	5b                   	pop    %rbx
   32057:	5d                   	pop    %rbp
   32058:	41 5c                	pop    %r12
   3205a:	41 5d                	pop    %r13
   3205c:	c3                   	retq   
   3205d:	0f 1f 00             	nopl   (%rax)
   32060:	48 89 df             	mov    %rbx,%rdi
   32063:	31 db                	xor    %ebx,%ebx
   32065:	e8 56 ff ff ff       	callq  31fc0 <eventlogger_destroy>
   3206a:	eb e3                	jmp    3204f <eventlogger_create+0x7f>

000000000003206c <.annobin_eventlogger_create.end>:
   3206c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000032070 <eventlogger_flush>:
   32070:	f3 0f 1e fa          	endbr64 
   32074:	41 54                	push   %r12
   32076:	55                   	push   %rbp
   32077:	48 89 fd             	mov    %rdi,%rbp
   3207a:	53                   	push   %rbx
   3207b:	48 83 ec 10          	sub    $0x10,%rsp
   3207f:	e8 1c ff ff ff       	callq  31fa0 <eventlogger_commit>
   32084:	48 89 c3             	mov    %rax,%rbx
   32087:	48 85 c0             	test   %rax,%rax
   3208a:	74 74                	je     32100 <eventlogger_flush+0x90>
   3208c:	f2 0f 10 45 20       	movsd  0x20(%rbp),%xmm0
   32091:	48 89 c7             	mov    %rax,%rdi
   32094:	e8 67 da fd ff       	callq  fb00 <flux_future_wait_for@plt>
   32099:	85 c0                	test   %eax,%eax
   3209b:	78 63                	js     32100 <eventlogger_flush+0x90>
   3209d:	31 f6                	xor    %esi,%esi
   3209f:	48 89 df             	mov    %rbx,%rdi
   320a2:	e8 89 dd fd ff       	callq  fe30 <flux_future_get@plt>
   320a7:	41 89 c4             	mov    %eax,%r12d
   320aa:	85 c0                	test   %eax,%eax
   320ac:	78 1a                	js     320c8 <eventlogger_flush+0x58>
   320ae:	48 89 df             	mov    %rbx,%rdi
   320b1:	e8 9a dc fd ff       	callq  fd50 <flux_future_destroy@plt>
   320b6:	48 83 c4 10          	add    $0x10,%rsp
   320ba:	44 89 e0             	mov    %r12d,%eax
   320bd:	5b                   	pop    %rbx
   320be:	5d                   	pop    %rbp
   320bf:	41 5c                	pop    %r12
   320c1:	c3                   	retq   
   320c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   320c8:	e8 43 da fd ff       	callq  fb10 <__errno_location@plt>
   320cd:	48 8b 7d 30          	mov    0x30(%rbp),%rdi
   320d1:	8b 10                	mov    (%rax),%edx
   320d3:	48 85 ff             	test   %rdi,%rdi
   320d6:	74 10                	je     320e8 <eventlogger_flush+0x78>
   320d8:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   320dc:	e8 3f fb ff ff       	callq  31c20 <eventlog_batch_error.isra.4>
   320e1:	eb cb                	jmp    320ae <eventlogger_flush+0x3e>
   320e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   320e8:	48 89 ef             	mov    %rbp,%rdi
   320eb:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   320ef:	e8 bc fc ff ff       	callq  31db0 <eventlog_batch_get.part.6>
   320f4:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   320f8:	48 89 c7             	mov    %rax,%rdi
   320fb:	eb db                	jmp    320d8 <eventlogger_flush+0x68>
   320fd:	0f 1f 00             	nopl   (%rax)
   32100:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   32106:	eb a6                	jmp    320ae <eventlogger_flush+0x3e>

0000000000032108 <.annobin_eventlogger_append_entry.start>:
   32108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3210f:	00 

0000000000032110 <eventlogger_append_entry>:
   32110:	f3 0f 1e fa          	endbr64 
   32114:	41 57                	push   %r15
   32116:	49 89 d7             	mov    %rdx,%r15
   32119:	41 56                	push   %r14
   3211b:	49 89 fe             	mov    %rdi,%r14
   3211e:	48 89 cf             	mov    %rcx,%rdi
   32121:	41 55                	push   %r13
   32123:	41 54                	push   %r12
   32125:	55                   	push   %rbp
   32126:	48 89 cd             	mov    %rcx,%rbp
   32129:	53                   	push   %rbx
   3212a:	89 f3                	mov    %esi,%ebx
   3212c:	48 83 ec 08          	sub    $0x8,%rsp
   32130:	e8 4b f6 ff ff       	callq  31780 <eventlog_entry_encode>
   32135:	48 85 c0             	test   %rax,%rax
   32138:	0f 84 0c 01 00 00    	je     3224a <eventlogger_append_entry+0x13a>
   3213e:	49 89 c4             	mov    %rax,%r12
   32141:	49 8b 46 30          	mov    0x30(%r14),%rax
   32145:	49 89 c5             	mov    %rax,%r13
   32148:	83 e3 01             	and    $0x1,%ebx
   3214b:	74 4b                	je     32198 <eventlogger_append_entry+0x88>
   3214d:	48 85 c0             	test   %rax,%rax
   32150:	0f 84 ca 00 00 00    	je     32220 <eventlogger_append_entry+0x110>
   32156:	48 8b 78 08          	mov    0x8(%rax),%rdi
   3215a:	4c 89 e1             	mov    %r12,%rcx
   3215d:	4c 89 fa             	mov    %r15,%rdx
   32160:	be 20 00 00 00       	mov    $0x20,%esi
   32165:	e8 c6 e4 fd ff       	callq  10630 <flux_kvs_txn_put@plt>
   3216a:	85 c0                	test   %eax,%eax
   3216c:	0f 88 ce 00 00 00    	js     32240 <eventlogger_append_entry+0x130>
   32172:	4c 89 f7             	mov    %r14,%rdi
   32175:	e8 f6 fe ff ff       	callq  32070 <eventlogger_flush>
   3217a:	89 c3                	mov    %eax,%ebx
   3217c:	4c 89 e7             	mov    %r12,%rdi
   3217f:	e8 2c d9 fd ff       	callq  fab0 <free@plt>
   32184:	48 83 c4 08          	add    $0x8,%rsp
   32188:	89 d8                	mov    %ebx,%eax
   3218a:	5b                   	pop    %rbx
   3218b:	5d                   	pop    %rbp
   3218c:	41 5c                	pop    %r12
   3218e:	41 5d                	pop    %r13
   32190:	41 5e                	pop    %r14
   32192:	41 5f                	pop    %r15
   32194:	c3                   	retq   
   32195:	0f 1f 00             	nopl   (%rax)
   32198:	48 85 c0             	test   %rax,%rax
   3219b:	74 63                	je     32200 <eventlogger_append_entry+0xf0>
   3219d:	48 8b 78 08          	mov    0x8(%rax),%rdi
   321a1:	4c 89 e1             	mov    %r12,%rcx
   321a4:	4c 89 fa             	mov    %r15,%rdx
   321a7:	be 20 00 00 00       	mov    $0x20,%esi
   321ac:	e8 7f e4 fd ff       	callq  10630 <flux_kvs_txn_put@plt>
   321b1:	85 c0                	test   %eax,%eax
   321b3:	0f 88 87 00 00 00    	js     32240 <eventlogger_append_entry+0x130>
   321b9:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   321bd:	48 89 ee             	mov    %rbp,%rsi
   321c0:	e8 9b 8d 00 00       	callq  3af60 <fzlist_append>
   321c5:	85 c0                	test   %eax,%eax
   321c7:	78 77                	js     32240 <eventlogger_append_entry+0x130>
    if (json && json->refcount != (size_t)-1)
   321c9:	48 85 ed             	test   %rbp,%rbp
   321cc:	74 0a                	je     321d8 <eventlogger_append_entry+0xc8>
   321ce:	48 8b 45 08          	mov    0x8(%rbp),%rax
   321d2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   321d6:	75 20                	jne    321f8 <eventlogger_append_entry+0xe8>
   321d8:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   321dc:	b9 01 00 00 00       	mov    $0x1,%ecx
   321e1:	48 8d 15 d8 fc ff ff 	lea    -0x328(%rip),%rdx        # 31ec0 <json_decref>
   321e8:	48 89 ee             	mov    %rbp,%rsi
   321eb:	e8 e0 93 00 00       	callq  3b5d0 <fzlist_freefn>
   321f0:	eb 8a                	jmp    3217c <eventlogger_append_entry+0x6c>
   321f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        JSON_INTERNAL_INCREF(json);
   321f8:	f0 48 83 45 08 01    	lock addq $0x1,0x8(%rbp)
   321fe:	eb d8                	jmp    321d8 <eventlogger_append_entry+0xc8>
   32200:	4c 89 f7             	mov    %r14,%rdi
   32203:	e8 a8 fb ff ff       	callq  31db0 <eventlog_batch_get.part.6>
   32208:	49 89 c5             	mov    %rax,%r13
   3220b:	48 85 c0             	test   %rax,%rax
   3220e:	74 30                	je     32240 <eventlogger_append_entry+0x130>
   32210:	49 8b 46 30          	mov    0x30(%r14),%rax
   32214:	eb 87                	jmp    3219d <eventlogger_append_entry+0x8d>
   32216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3221d:	00 00 00 
   32220:	4c 89 f7             	mov    %r14,%rdi
   32223:	e8 88 fb ff ff       	callq  31db0 <eventlog_batch_get.part.6>
   32228:	48 85 c0             	test   %rax,%rax
   3222b:	74 13                	je     32240 <eventlogger_append_entry+0x130>
   3222d:	49 8b 46 30          	mov    0x30(%r14),%rax
   32231:	e9 20 ff ff ff       	jmpq   32156 <eventlogger_append_entry+0x46>
   32236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3223d:	00 00 00 
   32240:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   32245:	e9 32 ff ff ff       	jmpq   3217c <eventlogger_append_entry+0x6c>
   3224a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3224f:	e9 30 ff ff ff       	jmpq   32184 <eventlogger_append_entry+0x74>

0000000000032254 <.annobin_eventlogger_append.start>:
   32254:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3225b:	00 00 00 00 
   3225f:	90                   	nop

0000000000032260 <eventlogger_append>:
   32260:	f3 0f 1e fa          	endbr64 
   32264:	41 55                	push   %r13
   32266:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3226a:	49 89 d5             	mov    %rdx,%r13
   3226d:	41 54                	push   %r12
   3226f:	41 89 f4             	mov    %esi,%r12d
   32272:	4c 89 c6             	mov    %r8,%rsi
   32275:	55                   	push   %rbp
   32276:	48 89 fd             	mov    %rdi,%rbp
   32279:	48 89 cf             	mov    %rcx,%rdi
   3227c:	53                   	push   %rbx
   3227d:	48 83 ec 18          	sub    $0x18,%rsp
   32281:	e8 9a f2 ff ff       	callq  31520 <eventlog_entry_create>
   32286:	48 85 c0             	test   %rax,%rax
   32289:	74 50                	je     322db <eventlogger_append+0x7b>
   3228b:	48 89 c3             	mov    %rax,%rbx
   3228e:	4c 89 ea             	mov    %r13,%rdx
   32291:	48 89 c1             	mov    %rax,%rcx
   32294:	44 89 e6             	mov    %r12d,%esi
   32297:	48 89 ef             	mov    %rbp,%rdi
   3229a:	e8 71 fe ff ff       	callq  32110 <eventlogger_append_entry>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3229f:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   322a3:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   322a7:	75 0f                	jne    322b8 <eventlogger_append+0x58>
   322a9:	48 83 c4 18          	add    $0x18,%rsp
   322ad:	5b                   	pop    %rbx
   322ae:	5d                   	pop    %rbp
   322af:	41 5c                	pop    %r12
   322b1:	41 5d                	pop    %r13
   322b3:	c3                   	retq   
   322b4:	0f 1f 40 00          	nopl   0x0(%rax)
   322b8:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   322be:	75 e9                	jne    322a9 <eventlogger_append+0x49>
        json_delete(json);
   322c0:	48 89 df             	mov    %rbx,%rdi
   322c3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   322c7:	e8 54 dd fd ff       	callq  10020 <json_delete@plt>
   322cc:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   322d0:	48 83 c4 18          	add    $0x18,%rsp
   322d4:	5b                   	pop    %rbx
   322d5:	5d                   	pop    %rbp
   322d6:	41 5c                	pop    %r12
   322d8:	41 5d                	pop    %r13
   322da:	c3                   	retq   
   322db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   322e0:	eb c7                	jmp    322a9 <eventlogger_append+0x49>

00000000000322e2 <.annobin_eventlogger_append.end>:
   322e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   322e9:	00 00 00 00 
   322ed:	0f 1f 00             	nopl   (%rax)

00000000000322f0 <eventlogger_append_vpack>:
   322f0:	f3 0f 1e fa          	endbr64 
   322f4:	41 55                	push   %r13
   322f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   322fa:	49 89 d5             	mov    %rdx,%r13
   322fd:	4c 89 ca             	mov    %r9,%rdx
   32300:	41 54                	push   %r12
   32302:	41 89 f4             	mov    %esi,%r12d
   32305:	4c 89 c6             	mov    %r8,%rsi
   32308:	55                   	push   %rbp
   32309:	48 89 fd             	mov    %rdi,%rbp
   3230c:	48 89 cf             	mov    %rcx,%rdi
   3230f:	53                   	push   %rbx
   32310:	48 83 ec 18          	sub    $0x18,%rsp
   32314:	e8 d7 f2 ff ff       	callq  315f0 <eventlog_entry_vpack>
   32319:	48 85 c0             	test   %rax,%rax
   3231c:	74 55                	je     32373 <eventlogger_append_vpack+0x83>
   3231e:	48 89 c3             	mov    %rax,%rbx
   32321:	4c 89 ea             	mov    %r13,%rdx
   32324:	48 89 c1             	mov    %rax,%rcx
   32327:	44 89 e6             	mov    %r12d,%esi
   3232a:	48 89 ef             	mov    %rbp,%rdi
   3232d:	e8 de fd ff ff       	callq  32110 <eventlogger_append_entry>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   32332:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   32336:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   3233a:	75 14                	jne    32350 <eventlogger_append_vpack+0x60>
   3233c:	48 83 c4 18          	add    $0x18,%rsp
   32340:	5b                   	pop    %rbx
   32341:	5d                   	pop    %rbp
   32342:	41 5c                	pop    %r12
   32344:	41 5d                	pop    %r13
   32346:	c3                   	retq   
   32347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3234e:	00 00 
   32350:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   32356:	75 e4                	jne    3233c <eventlogger_append_vpack+0x4c>
        json_delete(json);
   32358:	48 89 df             	mov    %rbx,%rdi
   3235b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   3235f:	e8 bc dc fd ff       	callq  10020 <json_delete@plt>
   32364:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   32368:	48 83 c4 18          	add    $0x18,%rsp
   3236c:	5b                   	pop    %rbx
   3236d:	5d                   	pop    %rbp
   3236e:	41 5c                	pop    %r12
   32370:	41 5d                	pop    %r13
   32372:	c3                   	retq   
   32373:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32378:	eb c2                	jmp    3233c <eventlogger_append_vpack+0x4c>

000000000003237a <.annobin_eventlogger_append_pack.start>:
   3237a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000032380 <eventlogger_append_pack>:
   32380:	f3 0f 1e fa          	endbr64 
   32384:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   3238b:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   32390:	84 c0                	test   %al,%al
   32392:	74 37                	je     323cb <eventlogger_append_pack+0x4b>
   32394:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   32399:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   3239e:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   323a3:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   323aa:	00 
   323ab:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   323b2:	00 
   323b3:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   323ba:	00 
   323bb:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   323c2:	00 
   323c3:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   323ca:	00 
   323cb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   323d2:	00 00 
   323d4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   323d9:	31 c0                	xor    %eax,%eax
   323db:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
   323e2:	00 
   323e3:	49 89 e1             	mov    %rsp,%r9
   323e6:	c7 04 24 28 00 00 00 	movl   $0x28,(%rsp)
   323ed:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   323f2:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   323f7:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
   323fe:	00 
   323ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   32404:	e8 e7 fe ff ff       	callq  322f0 <eventlogger_append_vpack>
   32409:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   3240e:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   32415:	00 00 
   32417:	75 08                	jne    32421 <eventlogger_append_pack+0xa1>
   32419:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   32420:	c3                   	retq   
   32421:	e8 2a da fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032426 <.annobin_eventlogger.c_end>:
   32426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3242d:	00 00 00 

0000000000032430 <ioencode>:
   32430:	f3 0f 1e fa          	endbr64 
   32434:	41 57                	push   %r15
   32436:	41 56                	push   %r14
   32438:	41 55                	push   %r13
   3243a:	41 54                	push   %r12
   3243c:	55                   	push   %rbp
   3243d:	53                   	push   %rbx
   3243e:	48 83 ec 18          	sub    $0x18,%rsp
   32442:	48 85 ff             	test   %rdi,%rdi
   32445:	0f 84 9d 00 00 00    	je     324e8 <ioencode+0xb8>
   3244b:	49 89 f6             	mov    %rsi,%r14
   3244e:	48 85 f6             	test   %rsi,%rsi
   32451:	0f 84 91 00 00 00    	je     324e8 <ioencode+0xb8>
   32457:	48 85 d2             	test   %rdx,%rdx
   3245a:	48 63 d9             	movslq %ecx,%rbx
   3245d:	49 89 d4             	mov    %rdx,%r12
   32460:	49 89 fd             	mov    %rdi,%r13
   32463:	45 89 c7             	mov    %r8d,%r15d
   32466:	0f 95 c2             	setne  %dl
   32469:	85 db                	test   %ebx,%ebx
   3246b:	7f 04                	jg     32471 <ioencode+0x41>
   3246d:	84 d2                	test   %dl,%dl
   3246f:	75 77                	jne    324e8 <ioencode+0xb8>
   32471:	4d 85 e4             	test   %r12,%r12
   32474:	0f 94 c0             	sete   %al
   32477:	85 db                	test   %ebx,%ebx
   32479:	0f 95 c1             	setne  %cl
   3247c:	84 c0                	test   %al,%al
   3247e:	74 04                	je     32484 <ioencode+0x54>
   32480:	84 c9                	test   %cl,%cl
   32482:	75 64                	jne    324e8 <ioencode+0xb8>
   32484:	85 db                	test   %ebx,%ebx
   32486:	0f 85 84 00 00 00    	jne    32510 <ioencode+0xe0>
   3248c:	84 c0                	test   %al,%al
   3248e:	0f 84 7c 00 00 00    	je     32510 <ioencode+0xe0>
   32494:	45 84 ff             	test   %r15b,%r15b
   32497:	74 4f                	je     324e8 <ioencode+0xb8>
   32499:	4d 89 f0             	mov    %r14,%r8
   3249c:	48 8d 0d ef d8 00 00 	lea    0xd8ef(%rip),%rcx        # 3fd92 <f58_prefix+0x92f>
   324a3:	4c 89 ea             	mov    %r13,%rdx
   324a6:	31 c0                	xor    %eax,%eax
   324a8:	48 8d 35 64 14 01 00 	lea    0x11464(%rip),%rsi        # 43913 <__PRETTY_FUNCTION__.6731+0x13>
   324af:	48 8d 3d 86 14 01 00 	lea    0x11486(%rip),%rdi        # 4393c <__PRETTY_FUNCTION__.6731+0x3c>
   324b6:	e8 b5 de fd ff       	callq  10370 <json_pack@plt>
   324bb:	48 89 c5             	mov    %rax,%rbp
   324be:	48 85 c0             	test   %rax,%rax
   324c1:	74 1d                	je     324e0 <ioencode+0xb0>
   324c3:	e8 98 d5 fd ff       	callq  fa60 <json_true@plt>
   324c8:	48 8d 35 77 14 01 00 	lea    0x11477(%rip),%rsi        # 43946 <__PRETTY_FUNCTION__.6731+0x46>
   324cf:	48 89 ef             	mov    %rbp,%rdi
   324d2:	48 89 c2             	mov    %rax,%rdx
   324d5:	e8 76 e2 fd ff       	callq  10750 <json_object_set_new@plt>
   324da:	85 c0                	test   %eax,%eax
   324dc:	79 17                	jns    324f5 <ioencode+0xc5>
   324de:	66 90                	xchg   %ax,%ax
   324e0:	31 ed                	xor    %ebp,%ebp
   324e2:	eb 11                	jmp    324f5 <ioencode+0xc5>
   324e4:	0f 1f 40 00          	nopl   0x0(%rax)
   324e8:	e8 23 d6 fd ff       	callq  fb10 <__errno_location@plt>
   324ed:	31 ed                	xor    %ebp,%ebp
   324ef:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   324f5:	48 83 c4 18          	add    $0x18,%rsp
   324f9:	48 89 e8             	mov    %rbp,%rax
   324fc:	5b                   	pop    %rbx
   324fd:	5d                   	pop    %rbp
   324fe:	41 5c                	pop    %r12
   32500:	41 5d                	pop    %r13
   32502:	41 5e                	pop    %r14
   32504:	41 5f                	pop    %r15
   32506:	c3                   	retq   
   32507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3250e:	00 00 
   32510:	84 d2                	test   %dl,%dl
   32512:	0f 84 00 01 00 00    	je     32618 <ioencode+0x1e8>
   32518:	84 c9                	test   %cl,%cl
   3251a:	0f 84 f8 00 00 00    	je     32618 <ioencode+0x1e8>
   32520:	53                   	push   %rbx
   32521:	4c 89 ea             	mov    %r13,%rdx
   32524:	4c 8d 0d a6 cb 00 00 	lea    0xcba6(%rip),%r9        # 3f0d1 <__FUNCTION__.5439+0x21>
   3252b:	4d 89 f0             	mov    %r14,%r8
   3252e:	41 54                	push   %r12
   32530:	48 8d 0d 5b d8 00 00 	lea    0xd85b(%rip),%rcx        # 3fd92 <f58_prefix+0x92f>
   32537:	48 8d 35 d5 13 01 00 	lea    0x113d5(%rip),%rsi        # 43913 <__PRETTY_FUNCTION__.6731+0x13>
   3253e:	31 c0                	xor    %eax,%eax
   32540:	48 8d 3d d3 13 01 00 	lea    0x113d3(%rip),%rdi        # 4391a <__PRETTY_FUNCTION__.6731+0x1a>
   32547:	e8 24 de fd ff       	callq  10370 <json_pack@plt>
   3254c:	48 89 c5             	mov    %rax,%rbp
   3254f:	58                   	pop    %rax
   32550:	5a                   	pop    %rdx
   32551:	48 85 ed             	test   %rbp,%rbp
   32554:	74 0a                	je     32560 <ioencode+0x130>
   32556:	45 84 ff             	test   %r15b,%r15b
   32559:	74 9a                	je     324f5 <ioencode+0xc5>
   3255b:	e9 63 ff ff ff       	jmpq   324c3 <ioencode+0x93>
   32560:	48 89 df             	mov    %rbx,%rdi
   32563:	e8 a8 60 fe ff       	callq  18610 <base64_encoded_length>
   32568:	48 8d 50 01          	lea    0x1(%rax),%rdx
   3256c:	48 89 d7             	mov    %rdx,%rdi
   3256f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   32574:	e8 a7 de fd ff       	callq  10420 <malloc@plt>
   32579:	48 85 c0             	test   %rax,%rax
   3257c:	0f 84 5e ff ff ff    	je     324e0 <ioencode+0xb0>
   32582:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   32587:	49 89 d8             	mov    %rbx,%r8
   3258a:	4c 89 e1             	mov    %r12,%rcx
   3258d:	48 89 c6             	mov    %rax,%rsi
   32590:	48 8d 3d 89 c6 00 00 	lea    0xc689(%rip),%rdi        # 3ec20 <base64_maps_rfc4648>
   32597:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3259c:	e8 bf 61 fe ff       	callq  18760 <base64_encode_using_maps>
   325a1:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   325a6:	48 85 c0             	test   %rax,%rax
   325a9:	0f 88 a1 00 00 00    	js     32650 <ioencode+0x220>
   325af:	50                   	push   %rax
   325b0:	48 8d 05 1a cb 00 00 	lea    0xcb1a(%rip),%rax        # 3f0d1 <__FUNCTION__.5439+0x21>
   325b7:	4d 89 f0             	mov    %r14,%r8
   325ba:	4c 89 ea             	mov    %r13,%rdx
   325bd:	41 52                	push   %r10
   325bf:	48 8d 3d 63 13 01 00 	lea    0x11363(%rip),%rdi        # 43929 <__PRETTY_FUNCTION__.6731+0x29>
   325c6:	4c 8d 0d 09 cb 00 00 	lea    0xcb09(%rip),%r9        # 3f0d6 <__FUNCTION__.5439+0x26>
   325cd:	48 8d 0d be d7 00 00 	lea    0xd7be(%rip),%rcx        # 3fd92 <f58_prefix+0x92f>
   325d4:	48 8d 35 38 13 01 00 	lea    0x11338(%rip),%rsi        # 43913 <__PRETTY_FUNCTION__.6731+0x13>
   325db:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   325e0:	50                   	push   %rax
   325e1:	48 8d 05 89 cb 00 00 	lea    0xcb89(%rip),%rax        # 3f171 <__FUNCTION__.5439+0xc1>
   325e8:	50                   	push   %rax
   325e9:	31 c0                	xor    %eax,%eax
   325eb:	e8 80 dd fd ff       	callq  10370 <json_pack@plt>
   325f0:	48 83 c4 20          	add    $0x20,%rsp
   325f4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   325f9:	48 89 c5             	mov    %rax,%rbp
   325fc:	4c 89 d7             	mov    %r10,%rdi
   325ff:	e8 ac d4 fd ff       	callq  fab0 <free@plt>
   32604:	48 85 ed             	test   %rbp,%rbp
   32607:	0f 85 49 ff ff ff    	jne    32556 <ioencode+0x126>
   3260d:	31 ed                	xor    %ebp,%ebp
   3260f:	e9 e1 fe ff ff       	jmpq   324f5 <ioencode+0xc5>
   32614:	0f 1f 40 00          	nopl   0x0(%rax)
   32618:	4d 89 f0             	mov    %r14,%r8
   3261b:	48 8d 0d 70 d7 00 00 	lea    0xd770(%rip),%rcx        # 3fd92 <f58_prefix+0x92f>
   32622:	4c 89 ea             	mov    %r13,%rdx
   32625:	31 c0                	xor    %eax,%eax
   32627:	48 8d 35 e5 12 01 00 	lea    0x112e5(%rip),%rsi        # 43913 <__PRETTY_FUNCTION__.6731+0x13>
   3262e:	48 8d 3d 07 13 01 00 	lea    0x11307(%rip),%rdi        # 4393c <__PRETTY_FUNCTION__.6731+0x3c>
   32635:	e8 36 dd fd ff       	callq  10370 <json_pack@plt>
   3263a:	48 89 c5             	mov    %rax,%rbp
   3263d:	48 85 c0             	test   %rax,%rax
   32640:	0f 85 10 ff ff ff    	jne    32556 <ioencode+0x126>
   32646:	31 ed                	xor    %ebp,%ebp
   32648:	e9 a8 fe ff ff       	jmpq   324f5 <ioencode+0xc5>
   3264d:	0f 1f 00             	nopl   (%rax)
   32650:	4c 89 d7             	mov    %r10,%rdi
   32653:	e8 58 d4 fd ff       	callq  fab0 <free@plt>
   32658:	e9 98 fe ff ff       	jmpq   324f5 <ioencode+0xc5>

000000000003265d <.annobin_iodecode.start>:
   3265d:	0f 1f 00             	nopl   (%rax)

0000000000032660 <iodecode>:
   32660:	f3 0f 1e fa          	endbr64 
   32664:	41 57                	push   %r15
   32666:	41 56                	push   %r14
   32668:	41 55                	push   %r13
   3266a:	41 54                	push   %r12
   3266c:	55                   	push   %rbp
   3266d:	53                   	push   %rbx
   3266e:	48 83 ec 48          	sub    $0x48,%rsp
   32672:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32679:	00 00 
   3267b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   32680:	31 c0                	xor    %eax,%eax
   32682:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   32689:	00 
   3268a:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   32691:	00 00 
   32693:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   3269a:	00 00 
   3269c:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   326a3:	00 00 
   326a5:	48 85 ff             	test   %rdi,%rdi
   326a8:	0f 84 e7 01 00 00    	je     32895 <iodecode+0x235>
   326ae:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   326b3:	48 89 cd             	mov    %rcx,%rbp
   326b6:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   326bb:	49 89 f6             	mov    %rsi,%r14
   326be:	50                   	push   %rax
   326bf:	48 8d 05 10 ca 00 00 	lea    0xca10(%rip),%rax        # 3f0d6 <__FUNCTION__.5439+0x26>
   326c6:	49 89 d7             	mov    %rdx,%r15
   326c9:	4d 89 c4             	mov    %r8,%r12
   326cc:	50                   	push   %rax
   326cd:	48 8d 35 76 12 01 00 	lea    0x11276(%rip),%rsi        # 4394a <__PRETTY_FUNCTION__.6731+0x4a>
   326d4:	4d 89 cd             	mov    %r9,%r13
   326d7:	31 c0                	xor    %eax,%eax
   326d9:	4c 8d 05 b2 d6 00 00 	lea    0xd6b2(%rip),%r8        # 3fd92 <f58_prefix+0x92f>
   326e0:	48 8d 15 2c 12 01 00 	lea    0x1122c(%rip),%rdx        # 43913 <__PRETTY_FUNCTION__.6731+0x13>
   326e7:	48 89 fb             	mov    %rdi,%rbx
   326ea:	4c 8d 4c 24 28       	lea    0x28(%rsp),%r9
   326ef:	e8 6c da fd ff       	callq  10160 <json_unpack@plt>
   326f4:	59                   	pop    %rcx
   326f5:	5e                   	pop    %rsi
   326f6:	85 c0                	test   %eax,%eax
   326f8:	0f 88 8d 01 00 00    	js     3288b <iodecode+0x22b>
   326fe:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   32703:	48 89 df             	mov    %rbx,%rdi
   32706:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   3270b:	31 c0                	xor    %eax,%eax
   3270d:	48 8d 15 bd c9 00 00 	lea    0xc9bd(%rip),%rdx        # 3f0d1 <__FUNCTION__.5439+0x21>
   32714:	48 8d 35 3d 12 01 00 	lea    0x1123d(%rip),%rsi        # 43958 <__PRETTY_FUNCTION__.6731+0x58>
   3271b:	e8 40 da fd ff       	callq  10160 <json_unpack@plt>
   32720:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   32725:	48 8d 15 1a 12 01 00 	lea    0x1121a(%rip),%rdx        # 43946 <__PRETTY_FUNCTION__.6731+0x46>
   3272c:	48 89 df             	mov    %rbx,%rdi
   3272f:	48 8d 35 29 12 01 00 	lea    0x11229(%rip),%rsi        # 4395f <__PRETTY_FUNCTION__.6731+0x5f>
   32736:	85 c0                	test   %eax,%eax
   32738:	0f 84 da 00 00 00    	je     32818 <iodecode+0x1b8>
   3273e:	31 c0                	xor    %eax,%eax
   32740:	e8 1b da fd ff       	callq  10160 <json_unpack@plt>
   32745:	85 c0                	test   %eax,%eax
   32747:	0f 85 33 01 00 00    	jne    32880 <iodecode+0x220>
   3274d:	4d 85 f6             	test   %r14,%r14
   32750:	74 08                	je     3275a <iodecode+0xfa>
   32752:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   32757:	49 89 06             	mov    %rax,(%r14)
   3275a:	4d 85 ff             	test   %r15,%r15
   3275d:	74 08                	je     32767 <iodecode+0x107>
   3275f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   32764:	49 89 07             	mov    %rax,(%r15)
   32767:	48 85 ed             	test   %rbp,%rbp
   3276a:	0f 84 b8 00 00 00    	je     32828 <iodecode+0x1c8>
   32770:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   32775:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   3277c:	00 
   3277d:	4d 85 f6             	test   %r14,%r14
   32780:	0f 84 a2 00 00 00    	je     32828 <iodecode+0x1c8>
   32786:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   3278b:	48 85 f6             	test   %rsi,%rsi
   3278e:	74 1b                	je     327ab <iodecode+0x14b>
   32790:	b9 07 00 00 00       	mov    $0x7,%ecx
   32795:	48 8d 3d d5 c9 00 00 	lea    0xc9d5(%rip),%rdi        # 3f171 <__FUNCTION__.5439+0xc1>
   3279c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   3279e:	0f 97 c0             	seta   %al
   327a1:	1c 00                	sbb    $0x0,%al
   327a3:	84 c0                	test   %al,%al
   327a5:	0f 84 85 00 00 00    	je     32830 <iodecode+0x1d0>
   327ab:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   327b0:	48 89 df             	mov    %rbx,%rdi
   327b3:	e8 68 dc fd ff       	callq  10420 <malloc@plt>
   327b8:	48 89 45 00          	mov    %rax,0x0(%rbp)
   327bc:	48 85 c0             	test   %rax,%rax
   327bf:	0f 84 c6 00 00 00    	je     3288b <iodecode+0x22b>
  return __builtin___memcpy_chk (__dest, __src, __len,
   327c5:	48 89 da             	mov    %rbx,%rdx
   327c8:	4c 89 f6             	mov    %r14,%rsi
   327cb:	48 89 c7             	mov    %rax,%rdi
   327ce:	e8 3d db fd ff       	callq  10310 <memcpy@plt>
   327d3:	4d 85 e4             	test   %r12,%r12
   327d6:	74 04                	je     327dc <iodecode+0x17c>
   327d8:	41 89 1c 24          	mov    %ebx,(%r12)
   327dc:	31 c0                	xor    %eax,%eax
   327de:	4d 85 ed             	test   %r13,%r13
   327e1:	74 0b                	je     327ee <iodecode+0x18e>
   327e3:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   327e7:	85 d2                	test   %edx,%edx
   327e9:	41 0f 95 45 00       	setne  0x0(%r13)
   327ee:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   327f3:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   327fa:	00 00 
   327fc:	0f 85 a8 00 00 00    	jne    328aa <iodecode+0x24a>
   32802:	48 83 c4 48          	add    $0x48,%rsp
   32806:	5b                   	pop    %rbx
   32807:	5d                   	pop    %rbp
   32808:	41 5c                	pop    %r12
   3280a:	41 5d                	pop    %r13
   3280c:	41 5e                	pop    %r14
   3280e:	41 5f                	pop    %r15
   32810:	c3                   	retq   
   32811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32818:	e8 43 d9 fd ff       	callq  10160 <json_unpack@plt>
   3281d:	e9 2b ff ff ff       	jmpq   3274d <iodecode+0xed>
   32822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32828:	31 db                	xor    %ebx,%ebx
   3282a:	eb a7                	jmp    327d3 <iodecode+0x173>
   3282c:	0f 1f 40 00          	nopl   0x0(%rax)
   32830:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   32835:	4c 89 ff             	mov    %r15,%rdi
   32838:	e8 f3 5f fe ff       	callq  18830 <base64_decoded_length>
   3283d:	48 89 c7             	mov    %rax,%rdi
   32840:	48 89 c3             	mov    %rax,%rbx
   32843:	e8 d8 db fd ff       	callq  10420 <malloc@plt>
   32848:	48 89 45 00          	mov    %rax,0x0(%rbp)
   3284c:	48 85 c0             	test   %rax,%rax
   3284f:	74 3a                	je     3288b <iodecode+0x22b>
   32851:	48 8d 3d c8 c3 00 00 	lea    0xc3c8(%rip),%rdi        # 3ec20 <base64_maps_rfc4648>
   32858:	4d 89 f8             	mov    %r15,%r8
   3285b:	4c 89 f1             	mov    %r14,%rcx
   3285e:	48 89 da             	mov    %rbx,%rdx
   32861:	48 89 c6             	mov    %rax,%rsi
   32864:	e8 27 62 fe ff       	callq  18a90 <base64_decode_using_maps>
   32869:	48 85 c0             	test   %rax,%rax
   3286c:	78 1d                	js     3288b <iodecode+0x22b>
   3286e:	48 89 c3             	mov    %rax,%rbx
   32871:	e9 5d ff ff ff       	jmpq   327d3 <iodecode+0x173>
   32876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3287d:	00 00 00 
   32880:	e8 8b d2 fd ff       	callq  fb10 <__errno_location@plt>
   32885:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   3288b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32890:	e9 59 ff ff ff       	jmpq   327ee <iodecode+0x18e>
   32895:	e8 76 d2 fd ff       	callq  fb10 <__errno_location@plt>
   3289a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   328a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   328a5:	e9 44 ff ff ff       	jmpq   327ee <iodecode+0x18e>
   328aa:	e8 a1 d5 fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000328af <.annobin_iodecode.end>:
   328af:	90                   	nop

00000000000328b0 <auth_init_message>:
   328b0:	f3 0f 1e fa          	endbr64 
   328b4:	41 54                	push   %r12
   328b6:	55                   	push   %rbp
   328b7:	53                   	push   %rbx
   328b8:	48 83 ec 10          	sub    $0x10,%rsp
   328bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   328c3:	00 00 
   328c5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   328ca:	31 c0                	xor    %eax,%eax
   328cc:	48 85 ff             	test   %rdi,%rdi
   328cf:	0f 84 c3 00 00 00    	je     32998 <auth_init_message+0xe8>
   328d5:	48 89 f5             	mov    %rsi,%rbp
   328d8:	48 85 f6             	test   %rsi,%rsi
   328db:	0f 84 b7 00 00 00    	je     32998 <auth_init_message+0xe8>
   328e1:	48 89 fb             	mov    %rdi,%rbx
   328e4:	f6 46 04 01          	testb  $0x1,0x4(%rsi)
   328e8:	75 36                	jne    32920 <auth_init_message+0x70>
   328ea:	8b 36                	mov    (%rsi),%esi
   328ec:	e8 9f df fd ff       	callq  10890 <flux_msg_set_userid@plt>
   328f1:	85 c0                	test   %eax,%eax
   328f3:	78 7b                	js     32970 <auth_init_message+0xc0>
   328f5:	8b 75 04             	mov    0x4(%rbp),%esi
   328f8:	48 89 df             	mov    %rbx,%rdi
   328fb:	e8 c0 d7 fd ff       	callq  100c0 <flux_msg_set_rolemask@plt>
   32900:	c1 f8 1f             	sar    $0x1f,%eax
   32903:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   32908:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3290f:	00 00 
   32911:	0f 85 96 00 00 00    	jne    329ad <auth_init_message+0xfd>
   32917:	48 83 c4 10          	add    $0x10,%rsp
   3291b:	5b                   	pop    %rbx
   3291c:	5d                   	pop    %rbp
   3291d:	41 5c                	pop    %r12
   3291f:	c3                   	retq   
   32920:	49 89 e4             	mov    %rsp,%r12
   32923:	4c 89 e6             	mov    %r12,%rsi
   32926:	e8 a5 d6 fd ff       	callq  ffd0 <flux_msg_get_userid@plt>
   3292b:	85 c0                	test   %eax,%eax
   3292d:	78 41                	js     32970 <auth_init_message+0xc0>
   3292f:	83 3c 24 ff          	cmpl   $0xffffffff,(%rsp)
   32933:	74 4b                	je     32980 <auth_init_message+0xd0>
   32935:	49 8d 74 24 04       	lea    0x4(%r12),%rsi
   3293a:	48 89 df             	mov    %rbx,%rdi
   3293d:	e8 2e d6 fd ff       	callq  ff70 <flux_msg_get_rolemask@plt>
   32942:	85 c0                	test   %eax,%eax
   32944:	78 2a                	js     32970 <auth_init_message+0xc0>
   32946:	8b 44 24 04          	mov    0x4(%rsp),%eax
   3294a:	85 c0                	test   %eax,%eax
   3294c:	74 0a                	je     32958 <auth_init_message+0xa8>
   3294e:	31 c0                	xor    %eax,%eax
   32950:	eb b1                	jmp    32903 <auth_init_message+0x53>
   32952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32958:	8b 75 04             	mov    0x4(%rbp),%esi
   3295b:	48 89 df             	mov    %rbx,%rdi
   3295e:	e8 5d d7 fd ff       	callq  100c0 <flux_msg_set_rolemask@plt>
   32963:	85 c0                	test   %eax,%eax
   32965:	79 e7                	jns    3294e <auth_init_message+0x9e>
   32967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3296e:	00 00 
   32970:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32975:	eb 8c                	jmp    32903 <auth_init_message+0x53>
   32977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3297e:	00 00 
   32980:	8b 75 00             	mov    0x0(%rbp),%esi
   32983:	48 89 df             	mov    %rbx,%rdi
   32986:	e8 05 df fd ff       	callq  10890 <flux_msg_set_userid@plt>
   3298b:	85 c0                	test   %eax,%eax
   3298d:	79 a6                	jns    32935 <auth_init_message+0x85>
   3298f:	eb df                	jmp    32970 <auth_init_message+0xc0>
   32991:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32998:	e8 73 d1 fd ff       	callq  fb10 <__errno_location@plt>
   3299d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   329a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   329a8:	e9 56 ff ff ff       	jmpq   32903 <auth_init_message+0x53>
   329ad:	e8 9e d4 fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000329b2 <.annobin_auth_check_event_privacy.start>:
   329b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   329b9:	00 00 00 00 
   329bd:	0f 1f 00             	nopl   (%rax)

00000000000329c0 <auth_check_event_privacy>:
   329c0:	f3 0f 1e fa          	endbr64 
   329c4:	55                   	push   %rbp
   329c5:	53                   	push   %rbx
   329c6:	48 83 ec 18          	sub    $0x18,%rsp
   329ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   329d1:	00 00 
   329d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   329d8:	31 c0                	xor    %eax,%eax
   329da:	48 85 ff             	test   %rdi,%rdi
   329dd:	74 71                	je     32a50 <auth_check_event_privacy+0x90>
   329df:	48 89 f3             	mov    %rsi,%rbx
   329e2:	48 85 f6             	test   %rsi,%rsi
   329e5:	74 69                	je     32a50 <auth_check_event_privacy+0x90>
   329e7:	f6 46 04 01          	testb  $0x1,0x4(%rsi)
   329eb:	74 23                	je     32a10 <auth_check_event_privacy+0x50>
   329ed:	31 c0                	xor    %eax,%eax
   329ef:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   329f4:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   329fb:	00 00 
   329fd:	75 63                	jne    32a62 <auth_check_event_privacy+0xa2>
   329ff:	48 83 c4 18          	add    $0x18,%rsp
   32a03:	5b                   	pop    %rbx
   32a04:	5d                   	pop    %rbp
   32a05:	c3                   	retq   
   32a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32a0d:	00 00 00 
   32a10:	48 89 fd             	mov    %rdi,%rbp
   32a13:	e8 18 d3 fd ff       	callq  fd30 <flux_msg_is_private@plt>
   32a18:	84 c0                	test   %al,%al
   32a1a:	74 d1                	je     329ed <auth_check_event_privacy+0x2d>
   32a1c:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   32a21:	48 89 ef             	mov    %rbp,%rdi
   32a24:	e8 a7 d5 fd ff       	callq  ffd0 <flux_msg_get_userid@plt>
   32a29:	85 c0                	test   %eax,%eax
   32a2b:	78 13                	js     32a40 <auth_check_event_privacy+0x80>
   32a2d:	8b 44 24 04          	mov    0x4(%rsp),%eax
   32a31:	39 03                	cmp    %eax,(%rbx)
   32a33:	74 b8                	je     329ed <auth_check_event_privacy+0x2d>
   32a35:	e8 d6 d0 fd ff       	callq  fb10 <__errno_location@plt>
   32a3a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   32a40:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32a45:	eb a8                	jmp    329ef <auth_check_event_privacy+0x2f>
   32a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32a4e:	00 00 
   32a50:	e8 bb d0 fd ff       	callq  fb10 <__errno_location@plt>
   32a55:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   32a5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32a60:	eb 8d                	jmp    329ef <auth_check_event_privacy+0x2f>
   32a62:	e8 e9 d3 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032a67 <.annobin_auth.c_end>:
   32a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32a6e:	00 00 

0000000000032a70 <hash_destructor>:
   32a70:	f3 0f 1e fa          	endbr64 
   32a74:	48 85 ff             	test   %rdi,%rdi
   32a77:	74 17                	je     32a90 <hash_destructor+0x20>
   32a79:	53                   	push   %rbx
   32a7a:	48 89 fb             	mov    %rdi,%rbx
   32a7d:	48 8b 3f             	mov    (%rdi),%rdi
   32a80:	e8 1b da fd ff       	callq  104a0 <flux_msg_destroy@plt>
   32a85:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   32a8c:	5b                   	pop    %rbx
   32a8d:	c3                   	retq   
   32a8e:	66 90                	xchg   %ax,%ax
   32a90:	c3                   	retq   

0000000000032a91 <.annobin_disconnect_topic.start>:
   32a91:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32a98:	00 00 00 00 
   32a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000032aa0 <disconnect_topic>:
   32aa0:	f3 0f 1e fa          	endbr64 
   32aa4:	41 54                	push   %r12
   32aa6:	55                   	push   %rbp
   32aa7:	53                   	push   %rbx
   32aa8:	48 85 ff             	test   %rdi,%rdi
   32aab:	74 73                	je     32b20 <disconnect_topic+0x80>
   32aad:	48 89 f5             	mov    %rsi,%rbp
   32ab0:	48 85 f6             	test   %rsi,%rsi
   32ab3:	74 6b                	je     32b20 <disconnect_topic+0x80>
   32ab5:	be 2e 00 00 00       	mov    $0x2e,%esi
   32aba:	41 89 d4             	mov    %edx,%r12d
   32abd:	48 89 fb             	mov    %rdi,%rbx
   32ac0:	e8 8b d4 fd ff       	callq  ff50 <strrchr@plt>
   32ac5:	49 63 f4             	movslq %r12d,%rsi
   32ac8:	48 85 c0             	test   %rax,%rax
   32acb:	74 3b                	je     32b08 <disconnect_topic+0x68>
   32acd:	48 83 ec 08          	sub    $0x8,%rsp
   32ad1:	41 89 c1             	mov    %eax,%r9d
   32ad4:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   32adb:	31 c0                	xor    %eax,%eax
   32add:	53                   	push   %rbx
   32ade:	ba 01 00 00 00       	mov    $0x1,%edx
   32ae3:	41 29 d9             	sub    %ebx,%r9d
   32ae6:	4c 8d 05 78 0e 01 00 	lea    0x10e78(%rip),%r8        # 43965 <__PRETTY_FUNCTION__.6731+0x65>
   32aed:	48 89 ef             	mov    %rbp,%rdi
   32af0:	e8 ab cf fd ff       	callq  faa0 <__snprintf_chk@plt>
   32af5:	5a                   	pop    %rdx
   32af6:	59                   	pop    %rcx
   32af7:	44 39 e0             	cmp    %r12d,%eax
   32afa:	7d 24                	jge    32b20 <disconnect_topic+0x80>
   32afc:	5b                   	pop    %rbx
   32afd:	5d                   	pop    %rbp
   32afe:	41 5c                	pop    %r12
   32b00:	c3                   	retq   
   32b01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32b08:	48 8d 15 5b 0e 01 00 	lea    0x10e5b(%rip),%rdx        # 4396a <__PRETTY_FUNCTION__.6731+0x6a>
   32b0f:	48 89 ef             	mov    %rbp,%rdi
   32b12:	e8 09 d4 fd ff       	callq  ff20 <snprintf@plt>
   32b17:	b8 0a 00 00 00       	mov    $0xa,%eax
   32b1c:	eb d9                	jmp    32af7 <disconnect_topic+0x57>
   32b1e:	66 90                	xchg   %ax,%ax
   32b20:	e8 eb cf fd ff       	callq  fb10 <__errno_location@plt>
   32b25:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   32b2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32b30:	eb ca                	jmp    32afc <disconnect_topic+0x5c>

0000000000032b32 <.annobin_disconnect_hashkey.start>:
   32b32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32b39:	00 00 00 00 
   32b3d:	0f 1f 00             	nopl   (%rax)

0000000000032b40 <disconnect_hashkey>:
   32b40:	f3 0f 1e fa          	endbr64 
   32b44:	41 54                	push   %r12
   32b46:	55                   	push   %rbp
   32b47:	53                   	push   %rbx
   32b48:	48 83 ec 20          	sub    $0x20,%rsp
   32b4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32b53:	00 00 
   32b55:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   32b5a:	31 c0                	xor    %eax,%eax
   32b5c:	48 85 ff             	test   %rdi,%rdi
   32b5f:	0f 84 cb 00 00 00    	je     32c30 <disconnect_hashkey+0xf0>
   32b65:	48 89 f5             	mov    %rsi,%rbp
   32b68:	48 85 f6             	test   %rsi,%rsi
   32b6b:	0f 84 bf 00 00 00    	je     32c30 <disconnect_hashkey+0xf0>
   32b71:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   32b76:	48 89 fb             	mov    %rdi,%rbx
   32b79:	41 89 d4             	mov    %edx,%r12d
   32b7c:	e8 bf d4 fd ff       	callq  10040 <flux_msg_get_topic@plt>
   32b81:	85 c0                	test   %eax,%eax
   32b83:	0f 88 b2 00 00 00    	js     32c3b <disconnect_hashkey+0xfb>
   32b89:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   32b8e:	48 89 df             	mov    %rbx,%rdi
   32b91:	e8 3a d9 fd ff       	callq  104d0 <flux_msg_get_nodeid@plt>
   32b96:	85 c0                	test   %eax,%eax
   32b98:	0f 88 9d 00 00 00    	js     32c3b <disconnect_hashkey+0xfb>
   32b9e:	48 8d 74 24 0b       	lea    0xb(%rsp),%rsi
   32ba3:	48 89 df             	mov    %rbx,%rdi
   32ba6:	e8 05 d9 fd ff       	callq  104b0 <flux_msg_get_flags@plt>
   32bab:	85 c0                	test   %eax,%eax
   32bad:	0f 88 88 00 00 00    	js     32c3b <disconnect_hashkey+0xfb>
   32bb3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   32bb8:	44 89 e2             	mov    %r12d,%edx
   32bbb:	48 89 ee             	mov    %rbp,%rsi
   32bbe:	e8 dd fe ff ff       	callq  32aa0 <disconnect_topic>
   32bc3:	89 c3                	mov    %eax,%ebx
   32bc5:	85 c0                	test   %eax,%eax
   32bc7:	78 72                	js     32c3b <disconnect_hashkey+0xfb>
   32bc9:	48 83 ec 08          	sub    $0x8,%rsp
   32bcd:	41 29 c4             	sub    %eax,%r12d
   32bd0:	48 63 f8             	movslq %eax,%rdi
   32bd3:	ba 01 00 00 00       	mov    $0x1,%edx
   32bd8:	0f b6 44 24 13       	movzbl 0x13(%rsp),%eax
   32bdd:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   32be4:	49 63 f4             	movslq %r12d,%rsi
   32be7:	48 01 ef             	add    %rbp,%rdi
   32bea:	4c 8d 05 84 0d 01 00 	lea    0x10d84(%rip),%r8        # 43975 <__PRETTY_FUNCTION__.6731+0x75>
   32bf1:	83 e0 10             	and    $0x10,%eax
   32bf4:	0f b6 c0             	movzbl %al,%eax
   32bf7:	50                   	push   %rax
   32bf8:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   32bfd:	31 c0                	xor    %eax,%eax
   32bff:	e8 9c ce fd ff       	callq  faa0 <__snprintf_chk@plt>
   32c04:	5a                   	pop    %rdx
   32c05:	59                   	pop    %rcx
   32c06:	41 39 c4             	cmp    %eax,%r12d
   32c09:	7e 25                	jle    32c30 <disconnect_hashkey+0xf0>
   32c0b:	01 d8                	add    %ebx,%eax
   32c0d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   32c12:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   32c19:	00 00 
   32c1b:	75 25                	jne    32c42 <disconnect_hashkey+0x102>
   32c1d:	48 83 c4 20          	add    $0x20,%rsp
   32c21:	5b                   	pop    %rbx
   32c22:	5d                   	pop    %rbp
   32c23:	41 5c                	pop    %r12
   32c25:	c3                   	retq   
   32c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32c2d:	00 00 00 
   32c30:	e8 db ce fd ff       	callq  fb10 <__errno_location@plt>
   32c35:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   32c3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32c40:	eb cb                	jmp    32c0d <disconnect_hashkey+0xcd>
   32c42:	e8 09 d2 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032c47 <.annobin_disconnect_hashkey.end>:
   32c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32c4e:	00 00 

0000000000032c50 <disconnect_msg>:
   32c50:	f3 0f 1e fa          	endbr64 
   32c54:	55                   	push   %rbp
   32c55:	53                   	push   %rbx
   32c56:	48 89 fb             	mov    %rdi,%rbx
   32c59:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
   32c60:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32c67:	00 00 
   32c69:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   32c70:	00 
   32c71:	31 c0                	xor    %eax,%eax
   32c73:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   32c78:	e8 c3 d3 fd ff       	callq  10040 <flux_msg_get_topic@plt>
   32c7d:	85 c0                	test   %eax,%eax
   32c7f:	78 50                	js     32cd1 <disconnect_msg+0x81>
   32c81:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   32c86:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   32c8b:	ba 00 01 00 00       	mov    $0x100,%edx
   32c90:	48 89 ee             	mov    %rbp,%rsi
   32c93:	e8 08 fe ff ff       	callq  32aa0 <disconnect_topic>
   32c98:	85 c0                	test   %eax,%eax
   32c9a:	78 35                	js     32cd1 <disconnect_msg+0x81>
   32c9c:	48 89 df             	mov    %rbx,%rdi
   32c9f:	31 f6                	xor    %esi,%esi
   32ca1:	e8 4a d4 fd ff       	callq  100f0 <flux_msg_copy@plt>
   32ca6:	48 89 c3             	mov    %rax,%rbx
   32ca9:	48 85 c0             	test   %rax,%rax
   32cac:	74 23                	je     32cd1 <disconnect_msg+0x81>
   32cae:	48 89 ee             	mov    %rbp,%rsi
   32cb1:	48 89 c7             	mov    %rax,%rdi
   32cb4:	e8 d7 d8 fd ff       	callq  10590 <flux_msg_set_topic@plt>
   32cb9:	85 c0                	test   %eax,%eax
   32cbb:	78 0c                	js     32cc9 <disconnect_msg+0x79>
   32cbd:	48 89 df             	mov    %rbx,%rdi
   32cc0:	e8 fb dc fd ff       	callq  109c0 <flux_msg_set_noresponse@plt>
   32cc5:	85 c0                	test   %eax,%eax
   32cc7:	79 0a                	jns    32cd3 <disconnect_msg+0x83>
   32cc9:	48 89 df             	mov    %rbx,%rdi
   32ccc:	e8 cf d7 fd ff       	callq  104a0 <flux_msg_destroy@plt>
   32cd1:	31 db                	xor    %ebx,%ebx
   32cd3:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   32cda:	00 
   32cdb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   32ce2:	00 00 
   32ce4:	48 89 d8             	mov    %rbx,%rax
   32ce7:	75 0a                	jne    32cf3 <disconnect_msg+0xa3>
   32ce9:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
   32cf0:	5b                   	pop    %rbx
   32cf1:	5d                   	pop    %rbp
   32cf2:	c3                   	retq   
   32cf3:	e8 58 d1 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032cf8 <.annobin_disconnect_arm.start>:
   32cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   32cff:	00 

0000000000032d00 <disconnect_arm>:
   32d00:	f3 0f 1e fa          	endbr64 
   32d04:	41 54                	push   %r12
   32d06:	55                   	push   %rbp
   32d07:	48 89 fd             	mov    %rdi,%rbp
   32d0a:	48 89 f7             	mov    %rsi,%rdi
   32d0d:	53                   	push   %rbx
   32d0e:	48 89 f3             	mov    %rsi,%rbx
   32d11:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
   32d18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32d1f:	00 00 
   32d21:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   32d28:	00 
   32d29:	31 c0                	xor    %eax,%eax
   32d2b:	e8 20 cf fd ff       	callq  fc50 <flux_msg_is_noresponse@plt>
   32d30:	84 c0                	test   %al,%al
   32d32:	74 24                	je     32d58 <disconnect_arm+0x58>
   32d34:	31 c0                	xor    %eax,%eax
   32d36:	48 8b 8c 24 48 01 00 	mov    0x148(%rsp),%rcx
   32d3d:	00 
   32d3e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   32d45:	00 00 
   32d47:	75 69                	jne    32db2 <disconnect_arm+0xb2>
   32d49:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
   32d50:	5b                   	pop    %rbx
   32d51:	5d                   	pop    %rbp
   32d52:	41 5c                	pop    %r12
   32d54:	c3                   	retq   
   32d55:	0f 1f 00             	nopl   (%rax)
   32d58:	49 89 e4             	mov    %rsp,%r12
   32d5b:	ba 40 01 00 00       	mov    $0x140,%edx
   32d60:	48 89 df             	mov    %rbx,%rdi
   32d63:	4c 89 e6             	mov    %r12,%rsi
   32d66:	e8 d5 fd ff ff       	callq  32b40 <disconnect_hashkey>
   32d6b:	85 c0                	test   %eax,%eax
   32d6d:	78 3c                	js     32dab <disconnect_arm+0xab>
   32d6f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   32d73:	4c 89 e6             	mov    %r12,%rsi
   32d76:	e8 95 77 00 00       	callq  3a510 <fzhashx_lookup>
   32d7b:	48 85 c0             	test   %rax,%rax
   32d7e:	75 b4                	jne    32d34 <disconnect_arm+0x34>
   32d80:	48 89 df             	mov    %rbx,%rdi
   32d83:	e8 c8 fe ff ff       	callq  32c50 <disconnect_msg>
   32d88:	48 89 c3             	mov    %rax,%rbx
   32d8b:	48 85 c0             	test   %rax,%rax
   32d8e:	74 1b                	je     32dab <disconnect_arm+0xab>
   32d90:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   32d94:	48 89 c2             	mov    %rax,%rdx
   32d97:	4c 89 e6             	mov    %r12,%rsi
   32d9a:	e8 51 73 00 00       	callq  3a0f0 <fzhashx_insert>
   32d9f:	85 c0                	test   %eax,%eax
   32da1:	79 91                	jns    32d34 <disconnect_arm+0x34>
   32da3:	48 89 df             	mov    %rbx,%rdi
   32da6:	e8 f5 d6 fd ff       	callq  104a0 <flux_msg_destroy@plt>
   32dab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   32db0:	eb 84                	jmp    32d36 <disconnect_arm+0x36>
   32db2:	e8 99 d0 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032db7 <.annobin_disconnect_arm.end>:
   32db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32dbe:	00 00 

0000000000032dc0 <disconnect_destroy>:
   32dc0:	f3 0f 1e fa          	endbr64 
   32dc4:	48 85 ff             	test   %rdi,%rdi
   32dc7:	74 6f                	je     32e38 <disconnect_destroy+0x78>
   32dc9:	41 54                	push   %r12
   32dcb:	55                   	push   %rbp
   32dcc:	53                   	push   %rbx
   32dcd:	48 89 fb             	mov    %rdi,%rbx
   32dd0:	e8 3b cd fd ff       	callq  fb10 <__errno_location@plt>
   32dd5:	48 8b 3b             	mov    (%rbx),%rdi
   32dd8:	48 89 c5             	mov    %rax,%rbp
   32ddb:	44 8b 20             	mov    (%rax),%r12d
   32dde:	e8 ad 7b 00 00       	callq  3a990 <fzhashx_first>
   32de3:	48 85 c0             	test   %rax,%rax
   32de6:	74 27                	je     32e0f <disconnect_destroy+0x4f>
   32de8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   32def:	00 
   32df0:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   32df4:	48 85 d2             	test   %rdx,%rdx
   32df7:	74 09                	je     32e02 <disconnect_destroy+0x42>
   32df9:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   32dfd:	48 89 c7             	mov    %rax,%rdi
   32e00:	ff d2                	callq  *%rdx
   32e02:	48 8b 3b             	mov    (%rbx),%rdi
   32e05:	e8 e6 7a 00 00       	callq  3a8f0 <fzhashx_next>
   32e0a:	48 85 c0             	test   %rax,%rax
   32e0d:	75 e1                	jne    32df0 <disconnect_destroy+0x30>
   32e0f:	48 8b 3b             	mov    (%rbx),%rdi
   32e12:	e8 29 76 00 00       	callq  3a440 <fzhashx_purge>
   32e17:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   32e1b:	48 89 df             	mov    %rbx,%rdi
   32e1e:	e8 3d 72 00 00       	callq  3a060 <fzhashx_destroy>
   32e23:	48 89 df             	mov    %rbx,%rdi
   32e26:	e8 85 cc fd ff       	callq  fab0 <free@plt>
   32e2b:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   32e2f:	5b                   	pop    %rbx
   32e30:	5d                   	pop    %rbp
   32e31:	41 5c                	pop    %r12
   32e33:	c3                   	retq   
   32e34:	0f 1f 40 00          	nopl   0x0(%rax)
   32e38:	c3                   	retq   

0000000000032e39 <.annobin_disconnect_create.start>:
   32e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000032e40 <disconnect_create>:
   32e40:	f3 0f 1e fa          	endbr64 
   32e44:	41 54                	push   %r12
   32e46:	49 89 fc             	mov    %rdi,%r12
   32e49:	bf 01 00 00 00       	mov    $0x1,%edi
   32e4e:	55                   	push   %rbp
   32e4f:	48 89 f5             	mov    %rsi,%rbp
   32e52:	be 18 00 00 00       	mov    $0x18,%esi
   32e57:	53                   	push   %rbx
   32e58:	e8 b3 d3 fd ff       	callq  10210 <calloc@plt>
   32e5d:	48 89 c3             	mov    %rax,%rbx
   32e60:	48 85 c0             	test   %rax,%rax
   32e63:	74 24                	je     32e89 <disconnect_create+0x49>
   32e65:	e8 06 71 00 00       	callq  39f70 <fzhashx_new>
   32e6a:	48 89 03             	mov    %rax,(%rbx)
   32e6d:	48 85 c0             	test   %rax,%rax
   32e70:	74 26                	je     32e98 <disconnect_create+0x58>
   32e72:	48 8d 35 f7 fb ff ff 	lea    -0x409(%rip),%rsi        # 32a70 <hash_destructor>
   32e79:	48 89 c7             	mov    %rax,%rdi
   32e7c:	e8 9f 7c 00 00       	callq  3ab20 <fzhashx_set_destructor>
   32e81:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   32e85:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   32e89:	48 89 d8             	mov    %rbx,%rax
   32e8c:	5b                   	pop    %rbx
   32e8d:	5d                   	pop    %rbp
   32e8e:	41 5c                	pop    %r12
   32e90:	c3                   	retq   
   32e91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32e98:	48 89 df             	mov    %rbx,%rdi
   32e9b:	31 db                	xor    %ebx,%ebx
   32e9d:	e8 1e ff ff ff       	callq  32dc0 <disconnect_destroy>
   32ea2:	eb e5                	jmp    32e89 <disconnect_create+0x49>

0000000000032ea4 <.annobin_disconnect.c_end>:
   32ea4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32eab:	00 00 00 
   32eae:	66 90                	xchg   %ax,%ax

0000000000032eb0 <msg_hash_uuid_matchtag_hasher>:
   32eb0:	f3 0f 1e fa          	endbr64 
   32eb4:	55                   	push   %rbp
   32eb5:	48 89 fd             	mov    %rdi,%rbp
   32eb8:	53                   	push   %rbx
   32eb9:	48 83 ec 18          	sub    $0x18,%rsp
   32ebd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32ec4:	00 00 
   32ec6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   32ecb:	31 c0                	xor    %eax,%eax
   32ecd:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
   32ed2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   32ed9:	00 
   32eda:	48 89 de             	mov    %rbx,%rsi
   32edd:	e8 9e ce fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   32ee2:	48 89 ef             	mov    %rbp,%rdi
   32ee5:	e8 86 ce fd ff       	callq  fd70 <flux_msg_route_first@plt>
   32eea:	31 d2                	xor    %edx,%edx
   32eec:	48 85 c0             	test   %rax,%rax
   32eef:	75 18                	jne    32f09 <msg_hash_uuid_matchtag_hasher+0x59>
   32ef1:	eb 1e                	jmp    32f11 <msg_hash_uuid_matchtag_hasher+0x61>
   32ef3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   32ef8:	48 89 d6             	mov    %rdx,%rsi
   32efb:	48 83 c0 01          	add    $0x1,%rax
   32eff:	48 c1 e6 05          	shl    $0x5,%rsi
   32f03:	48 01 f2             	add    %rsi,%rdx
   32f06:	48 31 ca             	xor    %rcx,%rdx
   32f09:	48 0f be 08          	movsbq (%rax),%rcx
   32f0d:	84 c9                	test   %cl,%cl
   32f0f:	75 e7                	jne    32ef8 <msg_hash_uuid_matchtag_hasher+0x48>
   32f11:	48 89 de             	mov    %rbx,%rsi
   32f14:	48 8d 4b 04          	lea    0x4(%rbx),%rcx
   32f18:	48 89 d0             	mov    %rdx,%rax
   32f1b:	48 83 c6 01          	add    $0x1,%rsi
   32f1f:	48 c1 e0 05          	shl    $0x5,%rax
   32f23:	48 01 c2             	add    %rax,%rdx
   32f26:	48 0f be 46 ff       	movsbq -0x1(%rsi),%rax
   32f2b:	48 31 c2             	xor    %rax,%rdx
   32f2e:	48 39 ce             	cmp    %rcx,%rsi
   32f31:	75 e5                	jne    32f18 <msg_hash_uuid_matchtag_hasher+0x68>
   32f33:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   32f38:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   32f3f:	00 00 
   32f41:	48 89 d0             	mov    %rdx,%rax
   32f44:	75 07                	jne    32f4d <msg_hash_uuid_matchtag_hasher+0x9d>
   32f46:	48 83 c4 18          	add    $0x18,%rsp
   32f4a:	5b                   	pop    %rbx
   32f4b:	5d                   	pop    %rbp
   32f4c:	c3                   	retq   
   32f4d:	e8 fe ce fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000032f52 <.annobin_msg_hash_destructor.start>:
   32f52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32f59:	00 00 00 00 
   32f5d:	0f 1f 00             	nopl   (%rax)

0000000000032f60 <msg_hash_destructor>:
   32f60:	f3 0f 1e fa          	endbr64 
   32f64:	48 85 ff             	test   %rdi,%rdi
   32f67:	74 17                	je     32f80 <msg_hash_destructor+0x20>
   32f69:	53                   	push   %rbx
   32f6a:	48 89 fb             	mov    %rdi,%rbx
   32f6d:	48 8b 3f             	mov    (%rdi),%rdi
   32f70:	e8 0b d5 fd ff       	callq  10480 <flux_msg_decref@plt>
   32f75:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   32f7c:	5b                   	pop    %rbx
   32f7d:	c3                   	retq   
   32f7e:	66 90                	xchg   %ax,%ax
   32f80:	c3                   	retq   

0000000000032f81 <.annobin_msg_hash_destructor.end>:
   32f81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   32f88:	00 00 00 00 
   32f8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000032f90 <msg_hash_uuid_matchtag_key_cmp>:
   32f90:	f3 0f 1e fa          	endbr64 
   32f94:	41 55                	push   %r13
   32f96:	41 54                	push   %r12
   32f98:	49 89 f4             	mov    %rsi,%r12
   32f9b:	55                   	push   %rbp
   32f9c:	48 89 fd             	mov    %rdi,%rbp
   32f9f:	48 89 f7             	mov    %rsi,%rdi
   32fa2:	53                   	push   %rbx
   32fa3:	48 83 ec 18          	sub    $0x18,%rsp
   32fa7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   32fae:	00 00 
   32fb0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   32fb5:	31 c0                	xor    %eax,%eax
   32fb7:	e8 b4 cd fd ff       	callq  fd70 <flux_msg_route_first@plt>
   32fbc:	48 85 c0             	test   %rax,%rax
   32fbf:	74 4f                	je     33010 <msg_hash_uuid_matchtag_key_cmp+0x80>
   32fc1:	48 89 ef             	mov    %rbp,%rdi
   32fc4:	48 89 c3             	mov    %rax,%rbx
   32fc7:	e8 a4 cd fd ff       	callq  fd70 <flux_msg_route_first@plt>
   32fcc:	48 8d 15 46 03 01 00 	lea    0x10346(%rip),%rdx        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   32fd3:	48 85 c0             	test   %rax,%rax
   32fd6:	48 0f 44 c2          	cmove  %rdx,%rax
   32fda:	48 89 de             	mov    %rbx,%rsi
   32fdd:	48 89 c7             	mov    %rax,%rdi
   32fe0:	e8 3b d2 fd ff       	callq  10220 <strcmp@plt>
   32fe5:	85 c0                	test   %eax,%eax
   32fe7:	74 3b                	je     33024 <msg_hash_uuid_matchtag_key_cmp+0x94>
   32fe9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   32fee:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   32ff5:	00 00 
   32ff7:	0f 85 98 00 00 00    	jne    33095 <msg_hash_uuid_matchtag_key_cmp+0x105>
   32ffd:	48 83 c4 18          	add    $0x18,%rsp
   33001:	5b                   	pop    %rbx
   33002:	5d                   	pop    %rbp
   33003:	41 5c                	pop    %r12
   33005:	41 5d                	pop    %r13
   33007:	c3                   	retq   
   33008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3300f:	00 
   33010:	48 89 ef             	mov    %rbp,%rdi
   33013:	48 8d 1d ff 02 01 00 	lea    0x102ff(%rip),%rbx        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   3301a:	e8 51 cd fd ff       	callq  fd70 <flux_msg_route_first@plt>
   3301f:	48 85 c0             	test   %rax,%rax
   33022:	75 b6                	jne    32fda <msg_hash_uuid_matchtag_key_cmp+0x4a>
   33024:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
   33029:	48 89 ef             	mov    %rbp,%rdi
   3302c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   33033:	00 
   33034:	48 89 de             	mov    %rbx,%rsi
   33037:	e8 44 cd fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   3303c:	48 89 de             	mov    %rbx,%rsi
   3303f:	4c 89 e7             	mov    %r12,%rdi
   33042:	44 8b 6c 24 04       	mov    0x4(%rsp),%r13d
   33047:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   3304e:	00 
   3304f:	e8 2c cd fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33054:	31 c0                	xor    %eax,%eax
   33056:	44 39 6c 24 04       	cmp    %r13d,0x4(%rsp)
   3305b:	74 8c                	je     32fe9 <msg_hash_uuid_matchtag_key_cmp+0x59>
   3305d:	48 89 ef             	mov    %rbp,%rdi
   33060:	48 89 de             	mov    %rbx,%rsi
   33063:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   3306a:	00 
   3306b:	e8 10 cd fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33070:	48 89 de             	mov    %rbx,%rsi
   33073:	4c 89 e7             	mov    %r12,%rdi
   33076:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   3307a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   33081:	00 
   33082:	e8 f9 cc fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33087:	3b 6c 24 04          	cmp    0x4(%rsp),%ebp
   3308b:	19 c0                	sbb    %eax,%eax
   3308d:	83 c8 01             	or     $0x1,%eax
   33090:	e9 54 ff ff ff       	jmpq   32fe9 <msg_hash_uuid_matchtag_key_cmp+0x59>
   33095:	e8 b6 cd fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003309a <.annobin_msg_hash_create.start>:
   3309a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000330a0 <msg_hash_create>:
   330a0:	f3 0f 1e fa          	endbr64 
   330a4:	55                   	push   %rbp
   330a5:	89 fd                	mov    %edi,%ebp
   330a7:	48 83 ec 20          	sub    $0x20,%rsp
   330ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   330b2:	00 00 
   330b4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   330b9:	31 c0                	xor    %eax,%eax
   330bb:	e8 b0 6e 00 00       	callq  39f70 <fzhashx_new>
   330c0:	48 89 c7             	mov    %rax,%rdi
   330c3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   330c8:	48 85 c0             	test   %rax,%rax
   330cb:	0f 84 9f 00 00 00    	je     33170 <msg_hash_create+0xd0>
   330d1:	83 fd 01             	cmp    $0x1,%ebp
   330d4:	75 7a                	jne    33150 <msg_hash_create+0xb0>
   330d6:	48 8d 35 d3 fd ff ff 	lea    -0x22d(%rip),%rsi        # 32eb0 <msg_hash_uuid_matchtag_hasher>
   330dd:	e8 5e 7b 00 00       	callq  3ac40 <fzhashx_set_key_hasher>
   330e2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   330e7:	48 8d 35 a2 fe ff ff 	lea    -0x15e(%rip),%rsi        # 32f90 <msg_hash_uuid_matchtag_key_cmp>
   330ee:	e8 ed 7a 00 00       	callq  3abe0 <fzhashx_set_key_comparator>
   330f3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   330f8:	31 f6                	xor    %esi,%esi
   330fa:	e8 b1 7a 00 00       	callq  3abb0 <fzhashx_set_key_duplicator>
   330ff:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33104:	31 f6                	xor    %esi,%esi
   33106:	e8 75 7a 00 00       	callq  3ab80 <fzhashx_set_key_destructor>
   3310b:	48 8b 35 b6 fe 21 00 	mov    0x21feb6(%rip),%rsi        # 252fc8 <flux_msg_incref@Base>
   33112:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33117:	e8 34 7a 00 00       	callq  3ab50 <fzhashx_set_duplicator>
   3311c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33121:	48 8d 35 38 fe ff ff 	lea    -0x1c8(%rip),%rsi        # 32f60 <msg_hash_destructor>
   33128:	e8 f3 79 00 00       	callq  3ab20 <fzhashx_set_destructor>
   3312d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33132:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   33137:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3313e:	00 00 
   33140:	48 89 f8             	mov    %rdi,%rax
   33143:	75 42                	jne    33187 <msg_hash_create+0xe7>
   33145:	48 83 c4 20          	add    $0x20,%rsp
   33149:	5d                   	pop    %rbp
   3314a:	c3                   	retq   
   3314b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   33150:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   33155:	e8 06 6f 00 00       	callq  3a060 <fzhashx_destroy>
   3315a:	e8 b1 c9 fd ff       	callq  fb10 <__errno_location@plt>
   3315f:	31 ff                	xor    %edi,%edi
   33161:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   33167:	eb c9                	jmp    33132 <msg_hash_create+0x92>
   33169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   33170:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33175:	e8 96 c9 fd ff       	callq  fb10 <__errno_location@plt>
   3317a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   3317f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   33185:	eb ab                	jmp    33132 <msg_hash_create+0x92>
   33187:	e8 c4 cc fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003318c <.annobin_msg_hash.c_end>:
   3318c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033190 <disconnect_cb>:
   33190:	f3 0f 1e fa          	endbr64 
   33194:	55                   	push   %rbp
   33195:	53                   	push   %rbx
   33196:	48 83 ec 08          	sub    $0x8,%rsp
   3319a:	48 8b 6e 18          	mov    0x18(%rsi),%rbp
   3319e:	48 85 ed             	test   %rbp,%rbp
   331a1:	74 1d                	je     331c0 <disconnect_cb+0x30>
   331a3:	48 8b 45 00          	mov    0x0(%rbp),%rax
   331a7:	48 85 c0             	test   %rax,%rax
   331aa:	74 14                	je     331c0 <disconnect_cb+0x30>
   331ac:	48 89 f3             	mov    %rsi,%rbx
   331af:	31 d2                	xor    %edx,%edx
   331b1:	48 89 fe             	mov    %rdi,%rsi
   331b4:	48 89 c7             	mov    %rax,%rdi
   331b7:	e8 24 c9 fd ff       	callq  fae0 <flux_send@plt>
   331bc:	85 c0                	test   %eax,%eax
   331be:	78 10                	js     331d0 <disconnect_cb+0x40>
   331c0:	48 83 c4 08          	add    $0x8,%rsp
   331c4:	5b                   	pop    %rbx
   331c5:	5d                   	pop    %rbp
   331c6:	c3                   	retq   
   331c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   331ce:	00 00 
   331d0:	48 8b 13             	mov    (%rbx),%rdx
   331d3:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   331d7:	48 83 c4 08          	add    $0x8,%rsp
   331db:	31 c0                	xor    %eax,%eax
   331dd:	5b                   	pop    %rbx
   331de:	48 8d 35 9b 07 01 00 	lea    0x1079b(%rip),%rsi        # 43980 <__PRETTY_FUNCTION__.6731+0x80>
   331e5:	5d                   	pop    %rbp
   331e6:	e9 f5 c9 fd ff       	jmpq   fbe0 <flux_log_error@plt>

00000000000331eb <.annobin_disconnect_cb.end>:
   331eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000331f0 <router_subscribe>:
   331f0:	f3 0f 1e fa          	endbr64 
   331f4:	48 89 f8             	mov    %rdi,%rax
   331f7:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
   331fb:	48 89 c6             	mov    %rax,%rsi
   331fe:	e9 bd 1c 00 00       	jmpq   34ec0 <subhash_subscribe>

0000000000033203 <.annobin_router_entry_respond.start>:
   33203:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3320a:	00 00 00 00 
   3320e:	66 90                	xchg   %ax,%ax

0000000000033210 <router_entry_respond>:
   33210:	41 55                	push   %r13
   33212:	41 54                	push   %r12
   33214:	41 89 d4             	mov    %edx,%r12d
   33217:	55                   	push   %rbp
   33218:	48 89 fd             	mov    %rdi,%rbp
   3321b:	53                   	push   %rbx
   3321c:	48 89 f3             	mov    %rsi,%rbx
   3321f:	48 83 ec 28          	sub    $0x28,%rsp
   33223:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   33227:	48 89 df             	mov    %rbx,%rdi
   3322a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33231:	00 00 
   33233:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33238:	31 c0                	xor    %eax,%eax
   3323a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   3323f:	e8 fc cd fd ff       	callq  10040 <flux_msg_get_topic@plt>
   33244:	85 c0                	test   %eax,%eax
   33246:	78 64                	js     332ac <router_entry_respond+0x9c>
   33248:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   3324d:	48 89 df             	mov    %rbx,%rdi
   33250:	e8 2b cb fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33255:	85 c0                	test   %eax,%eax
   33257:	78 53                	js     332ac <router_entry_respond+0x9c>
   33259:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3325e:	45 85 e4             	test   %r12d,%r12d
   33261:	74 6d                	je     332d0 <router_entry_respond+0xc0>
   33263:	31 d2                	xor    %edx,%edx
   33265:	44 89 e6             	mov    %r12d,%esi
   33268:	e8 a3 d1 fd ff       	callq  10410 <flux_response_encode_error@plt>
   3326d:	48 89 c3             	mov    %rax,%rbx
   33270:	48 85 db             	test   %rbx,%rbx
   33273:	74 2f                	je     332a4 <router_entry_respond+0x94>
   33275:	be 01 00 00 00       	mov    $0x1,%esi
   3327a:	48 89 df             	mov    %rbx,%rdi
   3327d:	e8 3e ce fd ff       	callq  100c0 <flux_msg_set_rolemask@plt>
   33282:	85 c0                	test   %eax,%eax
   33284:	78 1e                	js     332a4 <router_entry_respond+0x94>
   33286:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   3328a:	48 89 df             	mov    %rbx,%rdi
   3328d:	e8 5e cb fd ff       	callq  fdf0 <flux_msg_set_matchtag@plt>
   33292:	85 c0                	test   %eax,%eax
   33294:	78 0e                	js     332a4 <router_entry_respond+0x94>
   33296:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   3329a:	48 89 df             	mov    %rbx,%rdi
   3329d:	ff 55 08             	callq  *0x8(%rbp)
   332a0:	85 c0                	test   %eax,%eax
   332a2:	78 3c                	js     332e0 <router_entry_respond+0xd0>
   332a4:	48 89 df             	mov    %rbx,%rdi
   332a7:	e8 f4 d1 fd ff       	callq  104a0 <flux_msg_destroy@plt>
   332ac:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   332b1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   332b8:	00 00 
   332ba:	75 4c                	jne    33308 <router_entry_respond+0xf8>
   332bc:	48 83 c4 28          	add    $0x28,%rsp
   332c0:	5b                   	pop    %rbx
   332c1:	5d                   	pop    %rbp
   332c2:	41 5c                	pop    %r12
   332c4:	41 5d                	pop    %r13
   332c6:	c3                   	retq   
   332c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   332ce:	00 00 
   332d0:	31 f6                	xor    %esi,%esi
   332d2:	e8 59 cf fd ff       	callq  10230 <flux_response_encode@plt>
   332d7:	48 89 c3             	mov    %rax,%rbx
   332da:	eb 94                	jmp    33270 <router_entry_respond+0x60>
   332dc:	0f 1f 40 00          	nopl   0x0(%rax)
   332e0:	e8 2b c8 fd ff       	callq  fb10 <__errno_location@plt>
   332e5:	83 38 20             	cmpl   $0x20,(%rax)
   332e8:	74 ba                	je     332a4 <router_entry_respond+0x94>
   332ea:	41 83 fc 68          	cmp    $0x68,%r12d
   332ee:	74 b4                	je     332a4 <router_entry_respond+0x94>
   332f0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   332f4:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   332f8:	48 8d 35 a9 06 01 00 	lea    0x106a9(%rip),%rsi        # 439a8 <__PRETTY_FUNCTION__.6731+0xa8>
   332ff:	31 c0                	xor    %eax,%eax
   33301:	e8 da c8 fd ff       	callq  fbe0 <flux_log_error@plt>
   33306:	eb 9c                	jmp    332a4 <router_entry_respond+0x94>
   33308:	e8 43 cb fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003330d <.annobin_router_entry_respond.end>:
   3330d:	0f 1f 00             	nopl   (%rax)

0000000000033310 <router_unsubscribe>:
   33310:	f3 0f 1e fa          	endbr64 
   33314:	48 89 f8             	mov    %rdi,%rax
   33317:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
   3331b:	48 89 c6             	mov    %rax,%rsi
   3331e:	e9 8d 1c 00 00       	jmpq   34fb0 <subhash_unsubscribe>

0000000000033323 <.annobin_router_entry_respond_byuuid.start>:
   33323:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3332a:	00 00 00 00 
   3332e:	66 90                	xchg   %ax,%ax

0000000000033330 <router_entry_respond_byuuid>:
   33330:	f3 0f 1e fa          	endbr64 
   33334:	55                   	push   %rbp
   33335:	89 d5                	mov    %edx,%ebp
   33337:	53                   	push   %rbx
   33338:	48 89 fb             	mov    %rdi,%rbx
   3333b:	48 83 ec 08          	sub    $0x8,%rsp
   3333f:	48 8b 79 08          	mov    0x8(%rcx),%rdi
   33343:	e8 c8 71 00 00       	callq  3a510 <fzhashx_lookup>
   33348:	48 85 c0             	test   %rax,%rax
   3334b:	74 13                	je     33360 <router_entry_respond_byuuid+0x30>
   3334d:	48 83 c4 08          	add    $0x8,%rsp
   33351:	89 ea                	mov    %ebp,%edx
   33353:	48 89 de             	mov    %rbx,%rsi
   33356:	48 89 c7             	mov    %rax,%rdi
   33359:	5b                   	pop    %rbx
   3335a:	5d                   	pop    %rbp
   3335b:	e9 b0 fe ff ff       	jmpq   33210 <router_entry_respond>
   33360:	48 83 c4 08          	add    $0x8,%rsp
   33364:	5b                   	pop    %rbx
   33365:	5d                   	pop    %rbp
   33366:	c3                   	retq   

0000000000033367 <.annobin_request_cb.start>:
   33367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3336e:	00 00 

0000000000033370 <request_cb>:
   33370:	f3 0f 1e fa          	endbr64 
   33374:	41 54                	push   %r12
   33376:	49 89 fc             	mov    %rdi,%r12
   33379:	55                   	push   %rbp
   3337a:	48 89 cd             	mov    %rcx,%rbp
   3337d:	53                   	push   %rbx
   3337e:	48 89 d3             	mov    %rdx,%rbx
   33381:	48 89 de             	mov    %rbx,%rsi
   33384:	48 83 ec 10          	sub    $0x10,%rsp
   33388:	48 8b 79 20          	mov    0x20(%rcx),%rdi
   3338c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33393:	00 00 
   33395:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3339a:	31 c0                	xor    %eax,%eax
   3339c:	48 89 e2             	mov    %rsp,%rdx
   3339f:	e8 8c 17 00 00       	callq  34b30 <servhash_match>
   333a4:	85 c0                	test   %eax,%eax
   333a6:	78 40                	js     333e8 <request_cb+0x78>
   333a8:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   333ac:	48 8b 34 24          	mov    (%rsp),%rsi
   333b0:	e8 5b 71 00 00       	callq  3a510 <fzhashx_lookup>
   333b5:	48 89 c5             	mov    %rax,%rbp
   333b8:	48 85 c0             	test   %rax,%rax
   333bb:	74 2b                	je     333e8 <request_cb+0x78>
   333bd:	48 8b 70 10          	mov    0x10(%rax),%rsi
   333c1:	48 89 df             	mov    %rbx,%rdi
   333c4:	ff 50 08             	callq  *0x8(%rax)
   333c7:	85 c0                	test   %eax,%eax
   333c9:	78 4d                	js     33418 <request_cb+0xa8>
   333cb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   333d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   333d7:	00 00 
   333d9:	75 65                	jne    33440 <request_cb+0xd0>
   333db:	48 83 c4 10          	add    $0x10,%rsp
   333df:	5b                   	pop    %rbx
   333e0:	5d                   	pop    %rbp
   333e1:	41 5c                	pop    %r12
   333e3:	c3                   	retq   
   333e4:	0f 1f 40 00          	nopl   0x0(%rax)
   333e8:	31 c9                	xor    %ecx,%ecx
   333ea:	ba 26 00 00 00       	mov    $0x26,%edx
   333ef:	48 89 de             	mov    %rbx,%rsi
   333f2:	4c 89 e7             	mov    %r12,%rdi
   333f5:	e8 c6 d3 fd ff       	callq  107c0 <flux_respond_error@plt>
   333fa:	85 c0                	test   %eax,%eax
   333fc:	79 cd                	jns    333cb <request_cb+0x5b>
   333fe:	48 8d 35 04 06 01 00 	lea    0x10604(%rip),%rsi        # 43a09 <__PRETTY_FUNCTION__.6731+0x109>
   33405:	4c 89 e7             	mov    %r12,%rdi
   33408:	31 c0                	xor    %eax,%eax
   3340a:	e8 d1 c7 fd ff       	callq  fbe0 <flux_log_error@plt>
   3340f:	eb ba                	jmp    333cb <request_cb+0x5b>
   33411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   33418:	e8 f3 c6 fd ff       	callq  fb10 <__errno_location@plt>
   3341d:	8b 00                	mov    (%rax),%eax
   3341f:	83 f8 20             	cmp    $0x20,%eax
   33422:	74 a7                	je     333cb <request_cb+0x5b>
   33424:	83 f8 0b             	cmp    $0xb,%eax
   33427:	74 a2                	je     333cb <request_cb+0x5b>
   33429:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   3342d:	48 8d 35 b7 05 01 00 	lea    0x105b7(%rip),%rsi        # 439eb <__PRETTY_FUNCTION__.6731+0xeb>
   33434:	4c 89 e7             	mov    %r12,%rdi
   33437:	31 c0                	xor    %eax,%eax
   33439:	e8 a2 c7 fd ff       	callq  fbe0 <flux_log_error@plt>
   3343e:	eb 8b                	jmp    333cb <request_cb+0x5b>
   33440:	e8 0b ca fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000033445 <.annobin_request_cb.end>:
   33445:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3344c:	00 00 00 00 

0000000000033450 <response_cb>:
   33450:	f3 0f 1e fa          	endbr64 
   33454:	41 54                	push   %r12
   33456:	be 01 00 00 00       	mov    $0x1,%esi
   3345b:	49 89 fc             	mov    %rdi,%r12
   3345e:	48 89 d7             	mov    %rdx,%rdi
   33461:	55                   	push   %rbp
   33462:	48 89 cd             	mov    %rcx,%rbp
   33465:	53                   	push   %rbx
   33466:	e8 85 cc fd ff       	callq  100f0 <flux_msg_copy@plt>
   3346b:	48 89 c3             	mov    %rax,%rbx
   3346e:	48 85 c0             	test   %rax,%rax
   33471:	74 3b                	je     334ae <response_cb+0x5e>
   33473:	48 89 c7             	mov    %rax,%rdi
   33476:	e8 55 c8 fd ff       	callq  fcd0 <flux_msg_route_last@plt>
   3347b:	48 85 c0             	test   %rax,%rax
   3347e:	74 40                	je     334c0 <response_cb+0x70>
   33480:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   33484:	48 89 c6             	mov    %rax,%rsi
   33487:	e8 84 70 00 00       	callq  3a510 <fzhashx_lookup>
   3348c:	48 89 c5             	mov    %rax,%rbp
   3348f:	48 85 c0             	test   %rax,%rax
   33492:	74 4c                	je     334e0 <response_cb+0x90>
   33494:	48 89 df             	mov    %rbx,%rdi
   33497:	e8 d4 c5 fd ff       	callq  fa70 <flux_msg_route_delete_last@plt>
   3349c:	85 c0                	test   %eax,%eax
   3349e:	78 0e                	js     334ae <response_cb+0x5e>
   334a0:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   334a4:	48 89 df             	mov    %rbx,%rdi
   334a7:	ff 55 08             	callq  *0x8(%rbp)
   334aa:	85 c0                	test   %eax,%eax
   334ac:	78 52                	js     33500 <response_cb+0xb0>
   334ae:	48 89 df             	mov    %rbx,%rdi
   334b1:	5b                   	pop    %rbx
   334b2:	5d                   	pop    %rbp
   334b3:	41 5c                	pop    %r12
   334b5:	e9 e6 cf fd ff       	jmpq   104a0 <flux_msg_destroy@plt>
   334ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   334c0:	e8 4b c6 fd ff       	callq  fb10 <__errno_location@plt>
   334c5:	48 89 df             	mov    %rbx,%rdi
   334c8:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   334ce:	5b                   	pop    %rbx
   334cf:	5d                   	pop    %rbp
   334d0:	41 5c                	pop    %r12
   334d2:	e9 c9 cf fd ff       	jmpq   104a0 <flux_msg_destroy@plt>
   334d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   334de:	00 00 
   334e0:	e8 2b c6 fd ff       	callq  fb10 <__errno_location@plt>
   334e5:	48 89 df             	mov    %rbx,%rdi
   334e8:	c7 00 71 00 00 00    	movl   $0x71,(%rax)
   334ee:	5b                   	pop    %rbx
   334ef:	5d                   	pop    %rbp
   334f0:	41 5c                	pop    %r12
   334f2:	e9 a9 cf fd ff       	jmpq   104a0 <flux_msg_destroy@plt>
   334f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   334fe:	00 00 
   33500:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   33504:	48 8d 35 9d 04 01 00 	lea    0x1049d(%rip),%rsi        # 439a8 <__PRETTY_FUNCTION__.6731+0xa8>
   3350b:	4c 89 e7             	mov    %r12,%rdi
   3350e:	31 c0                	xor    %eax,%eax
   33510:	e8 cb c6 fd ff       	callq  fbe0 <flux_log_error@plt>
   33515:	eb 97                	jmp    334ae <response_cb+0x5e>

0000000000033517 <.annobin_event_cb.start>:
   33517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3351e:	00 00 

0000000000033520 <event_cb>:
   33520:	f3 0f 1e fa          	endbr64 
   33524:	41 56                	push   %r14
   33526:	41 55                	push   %r13
   33528:	49 89 fd             	mov    %rdi,%r13
   3352b:	48 89 d7             	mov    %rdx,%rdi
   3352e:	41 54                	push   %r12
   33530:	49 89 d4             	mov    %rdx,%r12
   33533:	55                   	push   %rbp
   33534:	48 89 cd             	mov    %rcx,%rbp
   33537:	53                   	push   %rbx
   33538:	48 83 ec 10          	sub    $0x10,%rsp
   3353c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33543:	00 00 
   33545:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3354a:	31 c0                	xor    %eax,%eax
   3354c:	48 89 e6             	mov    %rsp,%rsi
   3354f:	e8 ec ca fd ff       	callq  10040 <flux_msg_get_topic@plt>
   33554:	85 c0                	test   %eax,%eax
   33556:	78 68                	js     335c0 <event_cb+0xa0>
   33558:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   3355c:	e8 2f 74 00 00       	callq  3a990 <fzhashx_first>
   33561:	48 89 c3             	mov    %rax,%rbx
   33564:	48 85 c0             	test   %rax,%rax
   33567:	74 68                	je     335d1 <event_cb+0xb1>
   33569:	4c 8d 35 c9 04 01 00 	lea    0x104c9(%rip),%r14        # 43a39 <__PRETTY_FUNCTION__.6731+0x139>
   33570:	eb 17                	jmp    33589 <event_cb+0x69>
   33572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33578:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   3357c:	e8 6f 73 00 00       	callq  3a8f0 <fzhashx_next>
   33581:	48 89 c3             	mov    %rax,%rbx
   33584:	48 85 c0             	test   %rax,%rax
   33587:	74 48                	je     335d1 <event_cb+0xb1>
   33589:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   3358d:	48 8b 34 24          	mov    (%rsp),%rsi
   33591:	e8 aa 18 00 00       	callq  34e40 <subhash_topic_match>
   33596:	84 c0                	test   %al,%al
   33598:	74 de                	je     33578 <event_cb+0x58>
   3359a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   3359e:	4c 89 e7             	mov    %r12,%rdi
   335a1:	ff 53 08             	callq  *0x8(%rbx)
   335a4:	85 c0                	test   %eax,%eax
   335a6:	79 d0                	jns    33578 <event_cb+0x58>
   335a8:	48 8b 13             	mov    (%rbx),%rdx
   335ab:	4c 89 f6             	mov    %r14,%rsi
   335ae:	4c 89 ef             	mov    %r13,%rdi
   335b1:	31 c0                	xor    %eax,%eax
   335b3:	e8 28 c6 fd ff       	callq  fbe0 <flux_log_error@plt>
   335b8:	eb be                	jmp    33578 <event_cb+0x58>
   335ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   335c0:	48 8d 35 5b 04 01 00 	lea    0x1045b(%rip),%rsi        # 43a22 <__PRETTY_FUNCTION__.6731+0x122>
   335c7:	4c 89 ef             	mov    %r13,%rdi
   335ca:	31 c0                	xor    %eax,%eax
   335cc:	e8 0f c6 fd ff       	callq  fbe0 <flux_log_error@plt>
   335d1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   335d6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   335dd:	00 00 
   335df:	75 0d                	jne    335ee <event_cb+0xce>
   335e1:	48 83 c4 10          	add    $0x10,%rsp
   335e5:	5b                   	pop    %rbx
   335e6:	5d                   	pop    %rbp
   335e7:	41 5c                	pop    %r12
   335e9:	41 5d                	pop    %r13
   335eb:	41 5e                	pop    %r14
   335ed:	c3                   	retq   
   335ee:	e8 5d c8 fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000335f3 <.annobin_broker_subscribe.start>:
   335f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   335fa:	00 00 00 00 
   335fe:	66 90                	xchg   %ax,%ax

0000000000033600 <broker_subscribe>:
   33600:	f3 0f 1e fa          	endbr64 
   33604:	48 89 f0             	mov    %rsi,%rax
   33607:	48 83 ec 08          	sub    $0x8,%rsp
   3360b:	48 89 fe             	mov    %rdi,%rsi
   3360e:	48 8b 38             	mov    (%rax),%rdi
   33611:	e8 9a d3 fd ff       	callq  109b0 <flux_event_subscribe@plt>
   33616:	48 83 c4 08          	add    $0x8,%rsp
   3361a:	c1 f8 1f             	sar    $0x1f,%eax
   3361d:	c3                   	retq   

000000000003361e <.annobin_broker_subscribe.end>:
   3361e:	66 90                	xchg   %ax,%ax

0000000000033620 <router_entry_destroy.part.0>:
   33620:	41 54                	push   %r12
   33622:	55                   	push   %rbp
   33623:	53                   	push   %rbx
   33624:	48 89 fb             	mov    %rdi,%rbx
   33627:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
   3362b:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
   3362f:	e8 8c f7 ff ff       	callq  32dc0 <disconnect_destroy>
   33634:	48 8b 33             	mov    (%rbx),%rsi
   33637:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   3363b:	e8 10 14 00 00       	callq  34a50 <servhash_disconnect>
   33640:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33644:	e8 e7 1a 00 00       	callq  35130 <subhash_destroy>
   33649:	e8 c2 c4 fd ff       	callq  fb10 <__errno_location@plt>
   3364e:	48 8b 3b             	mov    (%rbx),%rdi
   33651:	44 8b 20             	mov    (%rax),%r12d
   33654:	48 89 c5             	mov    %rax,%rbp
   33657:	e8 54 c4 fd ff       	callq  fab0 <free@plt>
   3365c:	48 89 df             	mov    %rbx,%rdi
   3365f:	e8 4c c4 fd ff       	callq  fab0 <free@plt>
   33664:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   33668:	5b                   	pop    %rbx
   33669:	5d                   	pop    %rbp
   3366a:	41 5c                	pop    %r12
   3366c:	c3                   	retq   

000000000003366d <.annobin_router_entry_destroy.part.0.end>:
   3366d:	0f 1f 00             	nopl   (%rax)

0000000000033670 <router_entry_destructor>:
   33670:	f3 0f 1e fa          	endbr64 
   33674:	48 85 ff             	test   %rdi,%rdi
   33677:	74 1f                	je     33698 <router_entry_destructor+0x28>
   33679:	53                   	push   %rbx
   3367a:	48 89 fb             	mov    %rdi,%rbx
   3367d:	48 8b 3f             	mov    (%rdi),%rdi
   33680:	48 85 ff             	test   %rdi,%rdi
   33683:	74 05                	je     3368a <router_entry_destructor+0x1a>
   33685:	e8 96 ff ff ff       	callq  33620 <router_entry_destroy.part.0>
   3368a:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   33691:	5b                   	pop    %rbx
   33692:	c3                   	retq   
   33693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   33698:	c3                   	retq   

0000000000033699 <.annobin_broker_unsubscribe.start>:
   33699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000336a0 <broker_unsubscribe>:
   336a0:	f3 0f 1e fa          	endbr64 
   336a4:	80 7e 30 00          	cmpb   $0x0,0x30(%rsi)
   336a8:	74 06                	je     336b0 <broker_unsubscribe+0x10>
   336aa:	31 c0                	xor    %eax,%eax
   336ac:	c3                   	retq   
   336ad:	0f 1f 00             	nopl   (%rax)
   336b0:	48 89 f0             	mov    %rsi,%rax
   336b3:	48 83 ec 08          	sub    $0x8,%rsp
   336b7:	48 89 fe             	mov    %rdi,%rsi
   336ba:	48 8b 38             	mov    (%rax),%rdi
   336bd:	e8 9e cf fd ff       	callq  10660 <flux_event_unsubscribe@plt>
   336c2:	48 83 c4 08          	add    $0x8,%rsp
   336c6:	c1 f8 1f             	sar    $0x1f,%eax
   336c9:	c3                   	retq   

00000000000336ca <.annobin_broker_unsubscribe.end>:
   336ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000336d0 <router_entry_recv>:
   336d0:	f3 0f 1e fa          	endbr64 
   336d4:	41 54                	push   %r12
   336d6:	55                   	push   %rbp
   336d7:	48 89 fd             	mov    %rdi,%rbp
   336da:	53                   	push   %rbx
   336db:	48 89 f3             	mov    %rsi,%rbx
   336de:	48 83 ec 20          	sub    $0x20,%rsp
   336e2:	4c 8b 67 18          	mov    0x18(%rdi),%r12
   336e6:	48 89 df             	mov    %rbx,%rdi
   336e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   336f0:	00 00 
   336f2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   336f7:	31 c0                	xor    %eax,%eax
   336f9:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   336fe:	e8 dd d2 fd ff       	callq  109e0 <flux_msg_get_type@plt>
   33703:	85 c0                	test   %eax,%eax
   33705:	78 2c                	js     33733 <router_entry_recv+0x63>
   33707:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   3370c:	48 89 df             	mov    %rbx,%rdi
   3370f:	e8 2c c9 fd ff       	callq  10040 <flux_msg_get_topic@plt>
   33714:	85 c0                	test   %eax,%eax
   33716:	78 1b                	js     33733 <router_entry_recv+0x63>
   33718:	8b 44 24 04          	mov    0x4(%rsp),%eax
   3371c:	83 f8 02             	cmp    $0x2,%eax
   3371f:	0f 84 3b 01 00 00    	je     33860 <router_entry_recv+0x190>
   33725:	83 f8 04             	cmp    $0x4,%eax
   33728:	0f 84 32 01 00 00    	je     33860 <router_entry_recv+0x190>
   3372e:	83 f8 01             	cmp    $0x1,%eax
   33731:	74 1d                	je     33750 <router_entry_recv+0x80>
   33733:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   33738:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3373f:	00 00 
   33741:	0f 85 3d 02 00 00    	jne    33984 <router_entry_recv+0x2b4>
   33747:	48 83 c4 20          	add    $0x20,%rsp
   3374b:	5b                   	pop    %rbx
   3374c:	5d                   	pop    %rbp
   3374d:	41 5c                	pop    %r12
   3374f:	c3                   	retq   
   33750:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   33755:	b9 10 00 00 00       	mov    $0x10,%ecx
   3375a:	48 8d 3d f4 02 01 00 	lea    0x102f4(%rip),%rdi        # 43a55 <__PRETTY_FUNCTION__.6731+0x155>
   33761:	48 89 d6             	mov    %rdx,%rsi
   33764:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   33766:	0f 97 c0             	seta   %al
   33769:	1c 00                	sbb    $0x0,%al
   3376b:	84 c0                	test   %al,%al
   3376d:	0f 84 85 01 00 00    	je     338f8 <router_entry_recv+0x228>
   33773:	b9 12 00 00 00       	mov    $0x12,%ecx
   33778:	48 8d 3d e6 02 01 00 	lea    0x102e6(%rip),%rdi        # 43a65 <__PRETTY_FUNCTION__.6731+0x165>
   3377f:	48 89 d6             	mov    %rdx,%rsi
   33782:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   33784:	0f 97 c0             	seta   %al
   33787:	1c 00                	sbb    $0x0,%al
   33789:	84 c0                	test   %al,%al
   3378b:	0f 84 b7 01 00 00    	je     33948 <router_entry_recv+0x278>
   33791:	b9 0c 00 00 00       	mov    $0xc,%ecx
   33796:	48 8d 3d da 02 01 00 	lea    0x102da(%rip),%rdi        # 43a77 <__PRETTY_FUNCTION__.6731+0x177>
   3379d:	48 89 d6             	mov    %rdx,%rsi
   337a0:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   337a2:	0f 97 c0             	seta   %al
   337a5:	1c 00                	sbb    $0x0,%al
   337a7:	84 c0                	test   %al,%al
   337a9:	0f 84 f9 00 00 00    	je     338a8 <router_entry_recv+0x1d8>
   337af:	b9 0f 00 00 00       	mov    $0xf,%ecx
   337b4:	48 8d 3d c8 02 01 00 	lea    0x102c8(%rip),%rdi        # 43a83 <__PRETTY_FUNCTION__.6731+0x183>
   337bb:	48 89 d6             	mov    %rdx,%rsi
   337be:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   337c0:	0f 97 c0             	seta   %al
   337c3:	1c 00                	sbb    $0x0,%al
   337c5:	84 c0                	test   %al,%al
   337c7:	75 67                	jne    33830 <router_entry_recv+0x160>
   337c9:	31 f6                	xor    %esi,%esi
   337cb:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   337d0:	48 89 df             	mov    %rbx,%rdi
   337d3:	4c 8b 65 18          	mov    0x18(%rbp),%r12
   337d7:	48 8d 0d 2c cf 00 00 	lea    0xcf2c(%rip),%rcx        # 4070a <f58_prefix+0x12a7>
   337de:	48 8d 15 77 e9 00 00 	lea    0xe977(%rip),%rdx        # 4215c <k+0x15c>
   337e5:	e8 06 c7 fd ff       	callq  fef0 <flux_request_unpack@plt>
   337ea:	85 c0                	test   %eax,%eax
   337ec:	78 22                	js     33810 <router_entry_recv+0x140>
   337ee:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   337f3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   337f7:	48 89 d9             	mov    %rbx,%rcx
   337fa:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   337ff:	e8 0c 11 00 00       	callq  34910 <servhash_remove>
   33804:	85 c0                	test   %eax,%eax
   33806:	0f 89 27 ff ff ff    	jns    33733 <router_entry_recv+0x63>
   3380c:	0f 1f 40 00          	nopl   0x0(%rax)
   33810:	e8 fb c2 fd ff       	callq  fb10 <__errno_location@plt>
   33815:	48 89 de             	mov    %rbx,%rsi
   33818:	48 89 ef             	mov    %rbp,%rdi
   3381b:	8b 10                	mov    (%rax),%edx
   3381d:	e8 ee f9 ff ff       	callq  33210 <router_entry_respond>
   33822:	e9 0c ff ff ff       	jmpq   33733 <router_entry_recv+0x63>
   33827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3382e:	00 00 
   33830:	48 89 df             	mov    %rbx,%rdi
   33833:	e8 d8 cf fd ff       	callq  10810 <flux_msg_route_enable@plt>
   33838:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   3383c:	48 89 df             	mov    %rbx,%rdi
   3383f:	e8 3c c2 fd ff       	callq  fa80 <flux_msg_route_push@plt>
   33844:	85 c0                	test   %eax,%eax
   33846:	0f 88 e7 fe ff ff    	js     33733 <router_entry_recv+0x63>
   3384c:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
   33850:	48 89 de             	mov    %rbx,%rsi
   33853:	e8 a8 f4 ff ff       	callq  32d00 <disconnect_arm>
   33858:	85 c0                	test   %eax,%eax
   3385a:	0f 88 d3 fe ff ff    	js     33733 <router_entry_recv+0x63>
   33860:	49 8b 3c 24          	mov    (%r12),%rdi
   33864:	31 d2                	xor    %edx,%edx
   33866:	48 89 de             	mov    %rbx,%rsi
   33869:	e8 72 c2 fd ff       	callq  fae0 <flux_send@plt>
   3386e:	85 c0                	test   %eax,%eax
   33870:	0f 89 bd fe ff ff    	jns    33733 <router_entry_recv+0x63>
   33876:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   3387a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   3387f:	e8 fc c5 fd ff       	callq  fe80 <flux_msg_typestr@plt>
   33884:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   33888:	49 8b 3c 24          	mov    (%r12),%rdi
   3388c:	49 89 d8             	mov    %rbx,%r8
   3388f:	48 89 c1             	mov    %rax,%rcx
   33892:	48 8d 35 2f 01 01 00 	lea    0x1012f(%rip),%rsi        # 439c8 <__PRETTY_FUNCTION__.6731+0xc8>
   33899:	31 c0                	xor    %eax,%eax
   3389b:	e8 40 c3 fd ff       	callq  fbe0 <flux_log_error@plt>
   338a0:	e9 8e fe ff ff       	jmpq   33733 <router_entry_recv+0x63>
   338a5:	0f 1f 00             	nopl   (%rax)
   338a8:	31 f6                	xor    %esi,%esi
   338aa:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   338af:	48 89 df             	mov    %rbx,%rdi
   338b2:	4c 8b 65 18          	mov    0x18(%rbp),%r12
   338b6:	48 8d 0d 4d ce 00 00 	lea    0xce4d(%rip),%rcx        # 4070a <f58_prefix+0x12a7>
   338bd:	48 8d 15 98 e8 00 00 	lea    0xe898(%rip),%rdx        # 4215c <k+0x15c>
   338c4:	e8 27 c6 fd ff       	callq  fef0 <flux_request_unpack@plt>
   338c9:	85 c0                	test   %eax,%eax
   338cb:	0f 88 3f ff ff ff    	js     33810 <router_entry_recv+0x140>
   338d1:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   338d6:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   338da:	48 89 d9             	mov    %rbx,%rcx
   338dd:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   338e2:	e8 59 0e 00 00       	callq  34740 <servhash_add>
   338e7:	85 c0                	test   %eax,%eax
   338e9:	0f 89 44 fe ff ff    	jns    33733 <router_entry_recv+0x63>
   338ef:	e9 1c ff ff ff       	jmpq   33810 <router_entry_recv+0x140>
   338f4:	0f 1f 40 00          	nopl   0x0(%rax)
   338f8:	31 f6                	xor    %esi,%esi
   338fa:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   338ff:	48 89 df             	mov    %rbx,%rdi
   33902:	48 8d 0d 9c cf 00 00 	lea    0xcf9c(%rip),%rcx        # 408a5 <f58_prefix+0x1442>
   33909:	48 8d 15 4c e8 00 00 	lea    0xe84c(%rip),%rdx        # 4215c <k+0x15c>
   33910:	e8 db c5 fd ff       	callq  fef0 <flux_request_unpack@plt>
   33915:	85 c0                	test   %eax,%eax
   33917:	0f 88 f3 fe ff ff    	js     33810 <router_entry_recv+0x140>
   3391d:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   33921:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   33926:	e8 95 15 00 00       	callq  34ec0 <subhash_subscribe>
   3392b:	85 c0                	test   %eax,%eax
   3392d:	0f 88 dd fe ff ff    	js     33810 <router_entry_recv+0x140>
   33933:	31 d2                	xor    %edx,%edx
   33935:	48 89 de             	mov    %rbx,%rsi
   33938:	48 89 ef             	mov    %rbp,%rdi
   3393b:	e8 d0 f8 ff ff       	callq  33210 <router_entry_respond>
   33940:	e9 ee fd ff ff       	jmpq   33733 <router_entry_recv+0x63>
   33945:	0f 1f 00             	nopl   (%rax)
   33948:	31 f6                	xor    %esi,%esi
   3394a:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   3394f:	48 89 df             	mov    %rbx,%rdi
   33952:	48 8d 0d 4c cf 00 00 	lea    0xcf4c(%rip),%rcx        # 408a5 <f58_prefix+0x1442>
   33959:	48 8d 15 fc e7 00 00 	lea    0xe7fc(%rip),%rdx        # 4215c <k+0x15c>
   33960:	e8 8b c5 fd ff       	callq  fef0 <flux_request_unpack@plt>
   33965:	85 c0                	test   %eax,%eax
   33967:	0f 88 a3 fe ff ff    	js     33810 <router_entry_recv+0x140>
   3396d:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   33971:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   33976:	e8 35 16 00 00       	callq  34fb0 <subhash_unsubscribe>
   3397b:	85 c0                	test   %eax,%eax
   3397d:	79 b4                	jns    33933 <router_entry_recv+0x263>
   3397f:	e9 8c fe ff ff       	jmpq   33810 <router_entry_recv+0x140>
   33984:	e8 c7 c4 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000033989 <.annobin_router_entry_add.start>:
   33989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000033990 <router_entry_add>:
   33990:	f3 0f 1e fa          	endbr64 
   33994:	41 56                	push   %r14
   33996:	41 55                	push   %r13
   33998:	41 54                	push   %r12
   3399a:	55                   	push   %rbp
   3399b:	53                   	push   %rbx
   3399c:	48 85 f6             	test   %rsi,%rsi
   3399f:	0f 84 db 00 00 00    	je     33a80 <router_entry_add+0xf0>
   339a5:	49 89 d5             	mov    %rdx,%r13
   339a8:	48 85 d2             	test   %rdx,%rdx
   339ab:	0f 84 cf 00 00 00    	je     33a80 <router_entry_add+0xf0>
   339b1:	48 89 fd             	mov    %rdi,%rbp
   339b4:	49 89 f4             	mov    %rsi,%r12
   339b7:	bf 01 00 00 00       	mov    $0x1,%edi
   339bc:	be 30 00 00 00       	mov    $0x30,%esi
   339c1:	49 89 ce             	mov    %rcx,%r14
   339c4:	e8 47 c8 fd ff       	callq  10210 <calloc@plt>
   339c9:	48 89 c3             	mov    %rax,%rbx
   339cc:	48 85 c0             	test   %rax,%rax
   339cf:	74 7b                	je     33a4c <router_entry_add+0xbc>
   339d1:	4c 89 e7             	mov    %r12,%rdi
   339d4:	e8 c7 cf fd ff       	callq  109a0 <strdup@plt>
   339d9:	48 89 03             	mov    %rax,(%rbx)
   339dc:	48 85 c0             	test   %rax,%rax
   339df:	74 7f                	je     33a60 <router_entry_add+0xd0>
   339e1:	e8 8a 17 00 00       	callq  35170 <subhash_create>
   339e6:	48 89 43 20          	mov    %rax,0x20(%rbx)
   339ea:	48 85 c0             	test   %rax,%rax
   339ed:	74 71                	je     33a60 <router_entry_add+0xd0>
   339ef:	48 89 de             	mov    %rbx,%rsi
   339f2:	48 8d 3d 97 f7 ff ff 	lea    -0x869(%rip),%rdi        # 33190 <disconnect_cb>
   339f9:	e8 42 f4 ff ff       	callq  32e40 <disconnect_create>
   339fe:	48 89 43 28          	mov    %rax,0x28(%rbx)
   33a02:	48 85 c0             	test   %rax,%rax
   33a05:	74 59                	je     33a60 <router_entry_add+0xd0>
   33a07:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   33a0b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33a0f:	48 89 ea             	mov    %rbp,%rdx
   33a12:	48 8d 35 d7 f7 ff ff 	lea    -0x829(%rip),%rsi        # 331f0 <router_subscribe>
   33a19:	4c 89 73 10          	mov    %r14,0x10(%rbx)
   33a1d:	e8 6e 16 00 00       	callq  35090 <subhash_set_subscribe>
   33a22:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33a26:	48 89 ea             	mov    %rbp,%rdx
   33a29:	48 8d 35 e0 f8 ff ff 	lea    -0x720(%rip),%rsi        # 33310 <router_unsubscribe>
   33a30:	e8 7b 16 00 00       	callq  350b0 <subhash_set_unsubscribe>
   33a35:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   33a39:	48 89 da             	mov    %rbx,%rdx
   33a3c:	4c 89 e6             	mov    %r12,%rsi
   33a3f:	e8 ac 66 00 00       	callq  3a0f0 <fzhashx_insert>
   33a44:	85 c0                	test   %eax,%eax
   33a46:	78 58                	js     33aa0 <router_entry_add+0x110>
   33a48:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   33a4c:	48 89 d8             	mov    %rbx,%rax
   33a4f:	5b                   	pop    %rbx
   33a50:	5d                   	pop    %rbp
   33a51:	41 5c                	pop    %r12
   33a53:	41 5d                	pop    %r13
   33a55:	41 5e                	pop    %r14
   33a57:	c3                   	retq   
   33a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33a5f:	00 
   33a60:	48 89 df             	mov    %rbx,%rdi
   33a63:	31 db                	xor    %ebx,%ebx
   33a65:	e8 b6 fb ff ff       	callq  33620 <router_entry_destroy.part.0>
   33a6a:	48 89 d8             	mov    %rbx,%rax
   33a6d:	5b                   	pop    %rbx
   33a6e:	5d                   	pop    %rbp
   33a6f:	41 5c                	pop    %r12
   33a71:	41 5d                	pop    %r13
   33a73:	41 5e                	pop    %r14
   33a75:	c3                   	retq   
   33a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33a7d:	00 00 00 
   33a80:	e8 8b c0 fd ff       	callq  fb10 <__errno_location@plt>
   33a85:	31 db                	xor    %ebx,%ebx
   33a87:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   33a8d:	48 89 d8             	mov    %rbx,%rax
   33a90:	5b                   	pop    %rbx
   33a91:	5d                   	pop    %rbp
   33a92:	41 5c                	pop    %r12
   33a94:	41 5d                	pop    %r13
   33a96:	41 5e                	pop    %r14
   33a98:	c3                   	retq   
   33a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   33aa0:	48 89 df             	mov    %rbx,%rdi
   33aa3:	31 db                	xor    %ebx,%ebx
   33aa5:	e8 76 fb ff ff       	callq  33620 <router_entry_destroy.part.0>
   33aaa:	e8 61 c0 fd ff       	callq  fb10 <__errno_location@plt>
   33aaf:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   33ab5:	eb 95                	jmp    33a4c <router_entry_add+0xbc>

0000000000033ab7 <.annobin_router_entry_add.end>:
   33ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   33abe:	00 00 

0000000000033ac0 <router_entry_delete>:
   33ac0:	f3 0f 1e fa          	endbr64 
   33ac4:	48 85 ff             	test   %rdi,%rdi
   33ac7:	74 27                	je     33af0 <router_entry_delete+0x30>
   33ac9:	48 8b 47 18          	mov    0x18(%rdi),%rax
   33acd:	48 85 c0             	test   %rax,%rax
   33ad0:	74 1e                	je     33af0 <router_entry_delete+0x30>
   33ad2:	48 8b 40 08          	mov    0x8(%rax),%rax
   33ad6:	48 85 c0             	test   %rax,%rax
   33ad9:	74 15                	je     33af0 <router_entry_delete+0x30>
   33adb:	48 8b 37             	mov    (%rdi),%rsi
   33ade:	48 89 c7             	mov    %rax,%rdi
   33ae1:	e9 ea 68 00 00       	jmpq   3a3d0 <fzhashx_delete>
   33ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33aed:	00 00 00 
   33af0:	c3                   	retq   

0000000000033af1 <.annobin_router_destroy.start>:
   33af1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33af8:	00 00 00 00 
   33afc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033b00 <router_destroy>:
   33b00:	f3 0f 1e fa          	endbr64 
   33b04:	48 85 ff             	test   %rdi,%rdi
   33b07:	74 47                	je     33b50 <router_destroy+0x50>
   33b09:	41 54                	push   %r12
   33b0b:	55                   	push   %rbp
   33b0c:	53                   	push   %rbx
   33b0d:	48 89 fb             	mov    %rdi,%rbx
   33b10:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
   33b14:	e8 37 c9 fd ff       	callq  10450 <flux_msg_handler_delvec@plt>
   33b19:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   33b1d:	e8 0e 16 00 00       	callq  35130 <subhash_destroy>
   33b22:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33b26:	e8 d5 10 00 00       	callq  34c00 <servhash_destroy>
   33b2b:	e8 e0 bf fd ff       	callq  fb10 <__errno_location@plt>
   33b30:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   33b34:	44 8b 20             	mov    (%rax),%r12d
   33b37:	48 89 c5             	mov    %rax,%rbp
   33b3a:	e8 21 65 00 00       	callq  3a060 <fzhashx_destroy>
   33b3f:	48 89 df             	mov    %rbx,%rdi
   33b42:	e8 69 bf fd ff       	callq  fab0 <free@plt>
   33b47:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   33b4b:	5b                   	pop    %rbx
   33b4c:	5d                   	pop    %rbp
   33b4d:	41 5c                	pop    %r12
   33b4f:	c3                   	retq   
   33b50:	c3                   	retq   

0000000000033b51 <.annobin_router_create.start>:
   33b51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33b58:	00 00 00 00 
   33b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033b60 <router_create>:
   33b60:	f3 0f 1e fa          	endbr64 
   33b64:	55                   	push   %rbp
   33b65:	53                   	push   %rbx
   33b66:	48 83 ec 08          	sub    $0x8,%rsp
   33b6a:	48 85 ff             	test   %rdi,%rdi
   33b6d:	0f 84 d5 00 00 00    	je     33c48 <router_create+0xe8>
   33b73:	48 89 fd             	mov    %rdi,%rbp
   33b76:	be 38 00 00 00       	mov    $0x38,%esi
   33b7b:	bf 01 00 00 00       	mov    $0x1,%edi
   33b80:	e8 8b c6 fd ff       	callq  10210 <calloc@plt>
   33b85:	48 89 c3             	mov    %rax,%rbx
   33b88:	48 85 c0             	test   %rax,%rax
   33b8b:	0f 84 94 00 00 00    	je     33c25 <router_create+0xc5>
   33b91:	48 89 28             	mov    %rbp,(%rax)
   33b94:	e8 d7 63 00 00       	callq  39f70 <fzhashx_new>
   33b99:	48 89 43 08          	mov    %rax,0x8(%rbx)
   33b9d:	48 85 c0             	test   %rax,%rax
   33ba0:	0f 84 8a 00 00 00    	je     33c30 <router_create+0xd0>
   33ba6:	48 8d 35 c3 fa ff ff 	lea    -0x53d(%rip),%rsi        # 33670 <router_entry_destructor>
   33bad:	48 89 c7             	mov    %rax,%rdi
   33bb0:	e8 6b 6f 00 00       	callq  3ab20 <fzhashx_set_destructor>
   33bb5:	e8 b6 15 00 00       	callq  35170 <subhash_create>
   33bba:	48 89 43 18          	mov    %rax,0x18(%rbx)
   33bbe:	48 85 c0             	test   %rax,%rax
   33bc1:	74 6d                	je     33c30 <router_create+0xd0>
   33bc3:	48 89 c7             	mov    %rax,%rdi
   33bc6:	48 89 da             	mov    %rbx,%rdx
   33bc9:	48 8d 35 30 fa ff ff 	lea    -0x5d0(%rip),%rsi        # 33600 <broker_subscribe>
   33bd0:	e8 bb 14 00 00       	callq  35090 <subhash_set_subscribe>
   33bd5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   33bd9:	48 89 da             	mov    %rbx,%rdx
   33bdc:	48 8d 35 bd fa ff ff 	lea    -0x543(%rip),%rsi        # 336a0 <broker_unsubscribe>
   33be3:	e8 c8 14 00 00       	callq  350b0 <subhash_set_unsubscribe>
   33be8:	48 89 ef             	mov    %rbp,%rdi
   33beb:	e8 50 10 00 00       	callq  34c40 <servhash_create>
   33bf0:	48 89 43 20          	mov    %rax,0x20(%rbx)
   33bf4:	48 85 c0             	test   %rax,%rax
   33bf7:	74 37                	je     33c30 <router_create+0xd0>
   33bf9:	48 89 da             	mov    %rbx,%rdx
   33bfc:	48 8d 35 2d f7 ff ff 	lea    -0x8d3(%rip),%rsi        # 33330 <router_entry_respond_byuuid>
   33c03:	48 89 c7             	mov    %rax,%rdi
   33c06:	e8 d5 0f 00 00       	callq  34be0 <servhash_set_respond>
   33c0b:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
   33c0f:	48 89 da             	mov    %rbx,%rdx
   33c12:	48 89 ef             	mov    %rbp,%rdi
   33c15:	48 8d 35 a4 e7 21 00 	lea    0x21e7a4(%rip),%rsi        # 2523c0 <htab>
   33c1c:	e8 8f c5 fd ff       	callq  101b0 <flux_msg_handler_addvec@plt>
   33c21:	85 c0                	test   %eax,%eax
   33c23:	78 0b                	js     33c30 <router_create+0xd0>
   33c25:	48 83 c4 08          	add    $0x8,%rsp
   33c29:	48 89 d8             	mov    %rbx,%rax
   33c2c:	5b                   	pop    %rbx
   33c2d:	5d                   	pop    %rbp
   33c2e:	c3                   	retq   
   33c2f:	90                   	nop
   33c30:	48 89 df             	mov    %rbx,%rdi
   33c33:	31 db                	xor    %ebx,%ebx
   33c35:	e8 c6 fe ff ff       	callq  33b00 <router_destroy>
   33c3a:	48 83 c4 08          	add    $0x8,%rsp
   33c3e:	48 89 d8             	mov    %rbx,%rax
   33c41:	5b                   	pop    %rbx
   33c42:	5d                   	pop    %rbp
   33c43:	c3                   	retq   
   33c44:	0f 1f 40 00          	nopl   0x0(%rax)
   33c48:	e8 c3 be fd ff       	callq  fb10 <__errno_location@plt>
   33c4d:	31 db                	xor    %ebx,%ebx
   33c4f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   33c55:	48 83 c4 08          	add    $0x8,%rsp
   33c59:	48 89 d8             	mov    %rbx,%rax
   33c5c:	5b                   	pop    %rbx
   33c5d:	5d                   	pop    %rbp
   33c5e:	c3                   	retq   

0000000000033c5f <.annobin_router_create.end>:
   33c5f:	90                   	nop

0000000000033c60 <router_mute>:
   33c60:	f3 0f 1e fa          	endbr64 
   33c64:	48 85 ff             	test   %rdi,%rdi
   33c67:	74 04                	je     33c6d <router_mute+0xd>
   33c69:	c6 47 30 01          	movb   $0x1,0x30(%rdi)
   33c6d:	c3                   	retq   

0000000000033c6e <.annobin_router_mute.end>:
   33c6e:	66 90                	xchg   %ax,%ax

0000000000033c70 <router_renew>:
   33c70:	f3 0f 1e fa          	endbr64 
   33c74:	31 c0                	xor    %eax,%eax
   33c76:	48 85 ff             	test   %rdi,%rdi
   33c79:	74 25                	je     33ca0 <router_renew+0x30>
   33c7b:	53                   	push   %rbx
   33c7c:	48 89 fb             	mov    %rdi,%rbx
   33c7f:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   33c83:	e8 48 14 00 00       	callq  350d0 <subhash_renew>
   33c88:	85 c0                	test   %eax,%eax
   33c8a:	78 15                	js     33ca1 <router_renew+0x31>
   33c8c:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33c90:	e8 2b 10 00 00       	callq  34cc0 <servhash_renew>
   33c95:	5b                   	pop    %rbx
   33c96:	c1 f8 1f             	sar    $0x1f,%eax
   33c99:	c3                   	retq   
   33c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33ca0:	c3                   	retq   
   33ca1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   33ca6:	5b                   	pop    %rbx
   33ca7:	c3                   	retq   

0000000000033ca8 <.annobin_router.c_end>:
   33ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33caf:	00 

0000000000033cb0 <rpc_track_destroy>:
   33cb0:	f3 0f 1e fa          	endbr64 
   33cb4:	48 85 ff             	test   %rdi,%rdi
   33cb7:	74 2f                	je     33ce8 <rpc_track_destroy+0x38>
   33cb9:	41 54                	push   %r12
   33cbb:	55                   	push   %rbp
   33cbc:	53                   	push   %rbx
   33cbd:	48 89 fb             	mov    %rdi,%rbx
   33cc0:	e8 4b be fd ff       	callq  fb10 <__errno_location@plt>
   33cc5:	48 89 df             	mov    %rbx,%rdi
   33cc8:	44 8b 20             	mov    (%rax),%r12d
   33ccb:	48 89 c5             	mov    %rax,%rbp
   33cce:	e8 8d 63 00 00       	callq  3a060 <fzhashx_destroy>
   33cd3:	48 89 df             	mov    %rbx,%rdi
   33cd6:	e8 d5 bd fd ff       	callq  fab0 <free@plt>
   33cdb:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   33cdf:	5b                   	pop    %rbx
   33ce0:	5d                   	pop    %rbp
   33ce1:	41 5c                	pop    %r12
   33ce3:	c3                   	retq   
   33ce4:	0f 1f 40 00          	nopl   0x0(%rax)
   33ce8:	c3                   	retq   

0000000000033ce9 <.annobin_rpc_track_create.start>:
   33ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000033cf0 <rpc_track_create>:
   33cf0:	f3 0f 1e fa          	endbr64 
   33cf4:	55                   	push   %rbp
   33cf5:	be 10 00 00 00       	mov    $0x10,%esi
   33cfa:	89 fd                	mov    %edi,%ebp
   33cfc:	bf 01 00 00 00       	mov    $0x1,%edi
   33d01:	53                   	push   %rbx
   33d02:	48 83 ec 08          	sub    $0x8,%rsp
   33d06:	e8 05 c5 fd ff       	callq  10210 <calloc@plt>
   33d0b:	48 89 c3             	mov    %rax,%rbx
   33d0e:	48 85 c0             	test   %rax,%rax
   33d11:	74 12                	je     33d25 <rpc_track_create+0x35>
   33d13:	89 68 08             	mov    %ebp,0x8(%rax)
   33d16:	89 ef                	mov    %ebp,%edi
   33d18:	e8 83 f3 ff ff       	callq  330a0 <msg_hash_create>
   33d1d:	48 89 03             	mov    %rax,(%rbx)
   33d20:	48 85 c0             	test   %rax,%rax
   33d23:	74 0b                	je     33d30 <rpc_track_create+0x40>
   33d25:	48 83 c4 08          	add    $0x8,%rsp
   33d29:	48 89 d8             	mov    %rbx,%rax
   33d2c:	5b                   	pop    %rbx
   33d2d:	5d                   	pop    %rbp
   33d2e:	c3                   	retq   
   33d2f:	90                   	nop
   33d30:	48 89 df             	mov    %rbx,%rdi
   33d33:	31 db                	xor    %ebx,%ebx
   33d35:	e8 76 ff ff ff       	callq  33cb0 <rpc_track_destroy>
   33d3a:	eb e9                	jmp    33d25 <rpc_track_create+0x35>

0000000000033d3c <.annobin_rpc_track_create.end>:
   33d3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033d40 <rpc_track_update>:
   33d40:	f3 0f 1e fa          	endbr64 
   33d44:	41 55                	push   %r13
   33d46:	41 54                	push   %r12
   33d48:	55                   	push   %rbp
   33d49:	53                   	push   %rbx
   33d4a:	48 83 ec 28          	sub    $0x28,%rsp
   33d4e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   33d55:	00 00 
   33d57:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33d5c:	31 c0                	xor    %eax,%eax
   33d5e:	48 85 ff             	test   %rdi,%rdi
   33d61:	74 7d                	je     33de0 <rpc_track_update+0xa0>
   33d63:	48 89 f3             	mov    %rsi,%rbx
   33d66:	48 85 f6             	test   %rsi,%rsi
   33d69:	74 75                	je     33de0 <rpc_track_update+0xa0>
   33d6b:	48 89 fd             	mov    %rdi,%rbp
   33d6e:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   33d73:	48 89 df             	mov    %rbx,%rdi
   33d76:	e8 65 cc fd ff       	callq  109e0 <flux_msg_get_type@plt>
   33d7b:	85 c0                	test   %eax,%eax
   33d7d:	78 61                	js     33de0 <rpc_track_update+0xa0>
   33d7f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   33d83:	83 f8 01             	cmp    $0x1,%eax
   33d86:	74 78                	je     33e00 <rpc_track_update+0xc0>
   33d88:	83 f8 02             	cmp    $0x2,%eax
   33d8b:	75 53                	jne    33de0 <rpc_track_update+0xa0>
   33d8d:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33d92:	48 89 df             	mov    %rbx,%rdi
   33d95:	4c 89 e6             	mov    %r12,%rsi
   33d98:	e8 e3 bf fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33d9d:	85 c0                	test   %eax,%eax
   33d9f:	78 3f                	js     33de0 <rpc_track_update+0xa0>
   33da1:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   33da5:	85 c9                	test   %ecx,%ecx
   33da7:	74 37                	je     33de0 <rpc_track_update+0xa0>
   33da9:	48 89 df             	mov    %rbx,%rdi
   33dac:	e8 bf c7 fd ff       	callq  10570 <flux_msg_is_streaming@plt>
   33db1:	84 c0                	test   %al,%al
   33db3:	74 17                	je     33dcc <rpc_track_update+0x8c>
   33db5:	4c 89 e6             	mov    %r12,%rsi
   33db8:	48 89 df             	mov    %rbx,%rdi
   33dbb:	e8 70 c7 fd ff       	callq  10530 <flux_msg_get_errnum@plt>
   33dc0:	85 c0                	test   %eax,%eax
   33dc2:	78 1c                	js     33de0 <rpc_track_update+0xa0>
   33dc4:	8b 54 24 10          	mov    0x10(%rsp),%edx
   33dc8:	85 d2                	test   %edx,%edx
   33dca:	74 14                	je     33de0 <rpc_track_update+0xa0>
   33dcc:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33dd0:	48 89 de             	mov    %rbx,%rsi
   33dd3:	e8 f8 65 00 00       	callq  3a3d0 <fzhashx_delete>
   33dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33ddf:	00 
   33de0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   33de5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   33dec:	00 00 
   33dee:	0f 85 19 01 00 00    	jne    33f0d <rpc_track_update+0x1cd>
   33df4:	48 83 c4 28          	add    $0x28,%rsp
   33df8:	5b                   	pop    %rbx
   33df9:	5d                   	pop    %rbp
   33dfa:	41 5c                	pop    %r12
   33dfc:	41 5d                	pop    %r13
   33dfe:	c3                   	retq   
   33dff:	90                   	nop
   33e00:	48 89 df             	mov    %rbx,%rdi
   33e03:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   33e08:	e8 43 be fd ff       	callq  fc50 <flux_msg_is_noresponse@plt>
   33e0d:	84 c0                	test   %al,%al
   33e0f:	75 2f                	jne    33e40 <rpc_track_update+0x100>
   33e11:	4c 89 e6             	mov    %r12,%rsi
   33e14:	48 89 df             	mov    %rbx,%rdi
   33e17:	e8 64 bf fd ff       	callq  fd80 <flux_msg_get_matchtag@plt>
   33e1c:	85 c0                	test   %eax,%eax
   33e1e:	78 20                	js     33e40 <rpc_track_update+0x100>
   33e20:	8b 44 24 10          	mov    0x10(%rsp),%eax
   33e24:	85 c0                	test   %eax,%eax
   33e26:	74 18                	je     33e40 <rpc_track_update+0x100>
   33e28:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33e2c:	48 89 da             	mov    %rbx,%rdx
   33e2f:	48 89 de             	mov    %rbx,%rsi
   33e32:	e8 b9 62 00 00       	callq  3a0f0 <fzhashx_insert>
   33e37:	eb a7                	jmp    33de0 <rpc_track_update+0xa0>
   33e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   33e40:	4c 89 e6             	mov    %r12,%rsi
   33e43:	48 89 df             	mov    %rbx,%rdi
   33e46:	e8 f5 c1 fd ff       	callq  10040 <flux_msg_get_topic@plt>
   33e4b:	85 c0                	test   %eax,%eax
   33e4d:	78 91                	js     33de0 <rpc_track_update+0xa0>
   33e4f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33e54:	48 8d 35 0e fb 00 00 	lea    0xfb0e(%rip),%rsi        # 43969 <__PRETTY_FUNCTION__.6731+0x69>
   33e5b:	e8 50 cc fd ff       	callq  10ab0 <strstr@plt>
   33e60:	48 85 c0             	test   %rax,%rax
   33e63:	0f 84 77 ff ff ff    	je     33de0 <rpc_track_update+0xa0>
   33e69:	48 89 c7             	mov    %rax,%rdi
   33e6c:	e8 af bf fd ff       	callq  fe20 <strlen@plt>
   33e71:	48 83 f8 0b          	cmp    $0xb,%rax
   33e75:	0f 87 65 ff ff ff    	ja     33de0 <rpc_track_update+0xa0>
   33e7b:	48 89 df             	mov    %rbx,%rdi
   33e7e:	e8 ed be fd ff       	callq  fd70 <flux_msg_route_first@plt>
   33e83:	49 89 c5             	mov    %rax,%r13
   33e86:	48 85 c0             	test   %rax,%rax
   33e89:	0f 84 51 ff ff ff    	je     33de0 <rpc_track_update+0xa0>
   33e8f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33e93:	e8 48 69 00 00       	callq  3a7e0 <fzhashx_values>
   33e98:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   33e9d:	48 85 c0             	test   %rax,%rax
   33ea0:	0f 84 3a ff ff ff    	je     33de0 <rpc_track_update+0xa0>
   33ea6:	48 89 c7             	mov    %rax,%rdi
   33ea9:	e8 42 7c 00 00       	callq  3baf0 <fzlistx_first>
   33eae:	48 89 c3             	mov    %rax,%rbx
   33eb1:	48 85 c0             	test   %rax,%rax
   33eb4:	75 1c                	jne    33ed2 <rpc_track_update+0x192>
   33eb6:	eb 48                	jmp    33f00 <rpc_track_update+0x1c0>
   33eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33ebf:	00 
   33ec0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33ec5:	e8 76 7c 00 00       	callq  3bb40 <fzlistx_next>
   33eca:	48 89 c3             	mov    %rax,%rbx
   33ecd:	48 85 c0             	test   %rax,%rax
   33ed0:	74 2e                	je     33f00 <rpc_track_update+0x1c0>
   33ed2:	48 89 df             	mov    %rbx,%rdi
   33ed5:	e8 96 be fd ff       	callq  fd70 <flux_msg_route_first@plt>
   33eda:	48 85 c0             	test   %rax,%rax
   33edd:	74 e1                	je     33ec0 <rpc_track_update+0x180>
   33edf:	48 89 c6             	mov    %rax,%rsi
   33ee2:	4c 89 ef             	mov    %r13,%rdi
   33ee5:	e8 36 c3 fd ff       	callq  10220 <strcmp@plt>
   33eea:	85 c0                	test   %eax,%eax
   33eec:	75 d2                	jne    33ec0 <rpc_track_update+0x180>
   33eee:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33ef2:	48 89 de             	mov    %rbx,%rsi
   33ef5:	e8 d6 64 00 00       	callq  3a3d0 <fzhashx_delete>
   33efa:	eb c4                	jmp    33ec0 <rpc_track_update+0x180>
   33efc:	0f 1f 40 00          	nopl   0x0(%rax)
   33f00:	4c 89 e7             	mov    %r12,%rdi
   33f03:	e8 58 82 00 00       	callq  3c160 <fzlistx_destroy>
   33f08:	e9 d3 fe ff ff       	jmpq   33de0 <rpc_track_update+0xa0>
   33f0d:	e8 3e bf fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000033f12 <.annobin_rpc_track_purge.start>:
   33f12:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33f19:	00 00 00 00 
   33f1d:	0f 1f 00             	nopl   (%rax)

0000000000033f20 <rpc_track_purge>:
   33f20:	f3 0f 1e fa          	endbr64 
   33f24:	48 85 ff             	test   %rdi,%rdi
   33f27:	74 47                	je     33f70 <rpc_track_purge+0x50>
   33f29:	41 54                	push   %r12
   33f2b:	49 89 d4             	mov    %rdx,%r12
   33f2e:	55                   	push   %rbp
   33f2f:	48 89 fd             	mov    %rdi,%rbp
   33f32:	53                   	push   %rbx
   33f33:	48 8b 3f             	mov    (%rdi),%rdi
   33f36:	48 89 f3             	mov    %rsi,%rbx
   33f39:	e8 52 6a 00 00       	callq  3a990 <fzhashx_first>
   33f3e:	48 85 c0             	test   %rax,%rax
   33f41:	74 20                	je     33f63 <rpc_track_purge+0x43>
   33f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   33f48:	48 85 db             	test   %rbx,%rbx
   33f4b:	74 08                	je     33f55 <rpc_track_purge+0x35>
   33f4d:	4c 89 e6             	mov    %r12,%rsi
   33f50:	48 89 c7             	mov    %rax,%rdi
   33f53:	ff d3                	callq  *%rbx
   33f55:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33f59:	e8 92 69 00 00       	callq  3a8f0 <fzhashx_next>
   33f5e:	48 85 c0             	test   %rax,%rax
   33f61:	75 e5                	jne    33f48 <rpc_track_purge+0x28>
   33f63:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   33f67:	5b                   	pop    %rbx
   33f68:	5d                   	pop    %rbp
   33f69:	41 5c                	pop    %r12
   33f6b:	e9 d0 64 00 00       	jmpq   3a440 <fzhashx_purge>
   33f70:	c3                   	retq   

0000000000033f71 <.annobin_rpc_track_count.start>:
   33f71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33f78:	00 00 00 00 
   33f7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033f80 <rpc_track_count>:
   33f80:	f3 0f 1e fa          	endbr64 
   33f84:	48 85 ff             	test   %rdi,%rdi
   33f87:	74 17                	je     33fa0 <rpc_track_count+0x20>
   33f89:	48 83 ec 08          	sub    $0x8,%rsp
   33f8d:	48 8b 3f             	mov    (%rdi),%rdi
   33f90:	e8 0b 67 00 00       	callq  3a6a0 <fzhashx_size>
   33f95:	48 83 c4 08          	add    $0x8,%rsp
   33f99:	c3                   	retq   
   33f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   33fa0:	31 c0                	xor    %eax,%eax
   33fa2:	c3                   	retq   

0000000000033fa3 <.annobin_rpc_track.c_end>:
   33fa3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33faa:	00 00 00 
   33fad:	0f 1f 00             	nopl   (%rax)

0000000000033fb0 <iobuf_init>:
   33fb0:	f3 0f 1e fa          	endbr64 
  return __builtin___memset_chk (__dest, __ch, __len,
   33fb4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   33fbb:	48 89 f9             	mov    %rdi,%rcx
   33fbe:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   33fc2:	31 c0                	xor    %eax,%eax
   33fc4:	48 c7 87 08 10 00 00 	movq   $0x0,0x1008(%rdi)
   33fcb:	00 00 00 00 
   33fcf:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   33fd3:	48 29 f9             	sub    %rdi,%rcx
   33fd6:	81 c1 18 10 00 00    	add    $0x1018,%ecx
   33fdc:	c1 e9 03             	shr    $0x3,%ecx
   33fdf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   33fe2:	c3                   	retq   

0000000000033fe3 <.annobin_iobuf_clean.start>:
   33fe3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   33fea:	00 00 00 00 
   33fee:	66 90                	xchg   %ax,%ax

0000000000033ff0 <iobuf_clean>:
   33ff0:	f3 0f 1e fa          	endbr64 
   33ff4:	53                   	push   %rbx
   33ff5:	48 89 fb             	mov    %rdi,%rbx
   33ff8:	48 8b 3f             	mov    (%rdi),%rdi
   33ffb:	48 85 ff             	test   %rdi,%rdi
   33ffe:	74 0e                	je     3400e <iobuf_clean+0x1e>
   34000:	48 8d 43 18          	lea    0x18(%rbx),%rax
   34004:	48 39 c7             	cmp    %rax,%rdi
   34007:	74 05                	je     3400e <iobuf_clean+0x1e>
   34009:	e8 a2 ba fd ff       	callq  fab0 <free@plt>
   3400e:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   34012:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   34019:	31 c0                	xor    %eax,%eax
   3401b:	48 c7 83 10 10 00 00 	movq   $0x0,0x1010(%rbx)
   34022:	00 00 00 00 
   34026:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   3402a:	48 29 fb             	sub    %rdi,%rbx
   3402d:	8d 8b 18 10 00 00    	lea    0x1018(%rbx),%ecx
   34033:	c1 e9 03             	shr    $0x3,%ecx
   34036:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   34039:	5b                   	pop    %rbx
   3403a:	c3                   	retq   

000000000003403b <.annobin_iobuf_clean.end>:
   3403b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000034040 <sendfd>:
   34040:	f3 0f 1e fa          	endbr64 
   34044:	41 57                	push   %r15
   34046:	41 56                	push   %r14
   34048:	41 55                	push   %r13
   3404a:	41 54                	push   %r12
   3404c:	55                   	push   %rbp
   3404d:	53                   	push   %rbx
   3404e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   34055:	48 83 0c 24 00       	orq    $0x0,(%rsp)
   3405a:	48 83 ec 28          	sub    $0x28,%rsp
   3405e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34065:	00 00 
   34067:	48 89 84 24 18 10 00 	mov    %rax,0x1018(%rsp)
   3406e:	00 
   3406f:	31 c0                	xor    %eax,%eax
   34071:	48 89 d5             	mov    %rdx,%rbp
   34074:	48 85 f6             	test   %rsi,%rsi
   34077:	89 fa                	mov    %edi,%edx
   34079:	0f 94 c0             	sete   %al
   3407c:	c1 ea 1f             	shr    $0x1f,%edx
   3407f:	89 fb                	mov    %edi,%ebx
   34081:	49 89 f5             	mov    %rsi,%r13
   34084:	09 d0                	or     %edx,%eax
   34086:	48 85 ed             	test   %rbp,%rbp
   34089:	0f 84 b9 00 00 00    	je     34148 <sendfd+0x108>
   3408f:	84 c0                	test   %al,%al
   34091:	0f 85 81 01 00 00    	jne    34218 <sendfd+0x1d8>
   34097:	49 89 ec             	mov    %rbp,%r12
   3409a:	49 8b 04 24          	mov    (%r12),%rax
   3409e:	48 85 c0             	test   %rax,%rax
   340a1:	0f 84 c9 00 00 00    	je     34170 <sendfd+0x130>
   340a7:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   340ac:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   340b1:	eb 20                	jmp    340d3 <sendfd+0x93>
   340b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   340b8:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   340bd:	48 63 f0             	movslq %eax,%rsi
   340c0:	49 03 74 24 10       	add    0x10(%r12),%rsi
   340c5:	49 89 74 24 10       	mov    %rsi,0x10(%r12)
   340ca:	48 39 d6             	cmp    %rdx,%rsi
   340cd:	73 61                	jae    34130 <sendfd+0xf0>
   340cf:	49 8b 04 24          	mov    (%r12),%rax
   340d3:	48 29 f2             	sub    %rsi,%rdx
   340d6:	89 df                	mov    %ebx,%edi
   340d8:	48 01 c6             	add    %rax,%rsi
   340db:	e8 20 bc fd ff       	callq  fd00 <write@plt>
   340e0:	41 89 c5             	mov    %eax,%r13d
   340e3:	85 c0                	test   %eax,%eax
   340e5:	79 d1                	jns    340b8 <sendfd+0x78>
   340e7:	48 85 ed             	test   %rbp,%rbp
   340ea:	0f 84 f0 00 00 00    	je     341e0 <sendfd+0x1a0>
   340f0:	e8 1b ba fd ff       	callq  fb10 <__errno_location@plt>
   340f5:	83 38 0b             	cmpl   $0xb,(%rax)
   340f8:	74 08                	je     34102 <sendfd+0xc2>
   340fa:	48 89 ef             	mov    %rbp,%rdi
   340fd:	e8 ee fe ff ff       	callq  33ff0 <iobuf_clean>
   34102:	48 8b 8c 24 18 10 00 	mov    0x1018(%rsp),%rcx
   34109:	00 
   3410a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   34111:	00 00 
   34113:	44 89 e8             	mov    %r13d,%eax
   34116:	0f 85 12 01 00 00    	jne    3422e <sendfd+0x1ee>
   3411c:	48 81 c4 28 10 00 00 	add    $0x1028,%rsp
   34123:	5b                   	pop    %rbx
   34124:	5d                   	pop    %rbp
   34125:	41 5c                	pop    %r12
   34127:	41 5d                	pop    %r13
   34129:	41 5e                	pop    %r14
   3412b:	41 5f                	pop    %r15
   3412d:	c3                   	retq   
   3412e:	66 90                	xchg   %ax,%ax
   34130:	45 31 ed             	xor    %r13d,%r13d
   34133:	48 85 ed             	test   %rbp,%rbp
   34136:	75 c2                	jne    340fa <sendfd+0xba>
   34138:	48 89 e7             	mov    %rsp,%rdi
   3413b:	e8 b0 fe ff ff       	callq  33ff0 <iobuf_clean>
   34140:	eb c0                	jmp    34102 <sendfd+0xc2>
   34142:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   34148:	84 c0                	test   %al,%al
   3414a:	0f 85 c8 00 00 00    	jne    34218 <sendfd+0x1d8>
   34150:	49 89 e4             	mov    %rsp,%r12
   34153:	4c 89 e7             	mov    %r12,%rdi
   34156:	e8 55 fe ff ff       	callq  33fb0 <iobuf_init>
   3415b:	49 8b 04 24          	mov    (%r12),%rax
   3415f:	48 85 c0             	test   %rax,%rax
   34162:	0f 85 3f ff ff ff    	jne    340a7 <sendfd+0x67>
   34168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3416f:	00 
   34170:	4c 89 ef             	mov    %r13,%rdi
   34173:	e8 98 bc fd ff       	callq  fe10 <flux_msg_encode_size@plt>
   34178:	49 89 c7             	mov    %rax,%r15
   3417b:	48 85 c0             	test   %rax,%rax
   3417e:	0f 88 86 00 00 00    	js     3420a <sendfd+0x1ca>
   34184:	4c 8d 70 08          	lea    0x8(%rax),%r14
   34188:	4d 89 74 24 08       	mov    %r14,0x8(%r12)
   3418d:	49 81 fe 00 10 00 00 	cmp    $0x1000,%r14
   34194:	7f 63                	jg     341f9 <sendfd+0x1b9>
   34196:	49 8d 44 24 18       	lea    0x18(%r12),%rax
   3419b:	49 89 04 24          	mov    %rax,(%r12)
   3419f:	41 83 ee 08          	sub    $0x8,%r14d
   341a3:	c7 00 12 00 ee ff    	movl   $0xffee0012,(%rax)
   341a9:	4c 89 fa             	mov    %r15,%rdx
   341ac:	4c 89 ef             	mov    %r13,%rdi

static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{
#if __GNUC_PREREQ (4, 3)
  return __builtin_bswap32 (__bsx);
   341af:	41 0f ce             	bswap  %r14d
   341b2:	44 89 70 04          	mov    %r14d,0x4(%rax)
   341b6:	48 8d 70 08          	lea    0x8(%rax),%rsi
   341ba:	e8 21 bc fd ff       	callq  fde0 <flux_msg_encode@plt>
   341bf:	85 c0                	test   %eax,%eax
   341c1:	78 47                	js     3420a <sendfd+0x1ca>
   341c3:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   341ca:	00 00 
   341cc:	49 8b 04 24          	mov    (%r12),%rax
   341d0:	31 f6                	xor    %esi,%esi
   341d2:	e9 d5 fe ff ff       	jmpq   340ac <sendfd+0x6c>
   341d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   341de:	00 00 
   341e0:	e8 2b b9 fd ff       	callq  fb10 <__errno_location@plt>
   341e5:	83 38 0b             	cmpl   $0xb,(%rax)
   341e8:	0f 85 4a ff ff ff    	jne    34138 <sendfd+0xf8>
   341ee:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   341f4:	e9 3f ff ff ff       	jmpq   34138 <sendfd+0xf8>
   341f9:	4c 89 f7             	mov    %r14,%rdi
   341fc:	e8 1f c2 fd ff       	callq  10420 <malloc@plt>
   34201:	49 89 04 24          	mov    %rax,(%r12)
   34205:	48 85 c0             	test   %rax,%rax
   34208:	75 95                	jne    3419f <sendfd+0x15f>
   3420a:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   34210:	e9 d2 fe ff ff       	jmpq   340e7 <sendfd+0xa7>
   34215:	0f 1f 00             	nopl   (%rax)
   34218:	e8 f3 b8 fd ff       	callq  fb10 <__errno_location@plt>
   3421d:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   34223:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   34229:	e9 d4 fe ff ff       	jmpq   34102 <sendfd+0xc2>
   3422e:	e8 1d bc fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000034233 <.annobin_recvfd.start>:
   34233:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3423a:	00 00 00 00 
   3423e:	66 90                	xchg   %ax,%ax

0000000000034240 <recvfd>:
   34240:	f3 0f 1e fa          	endbr64 
   34244:	41 57                	push   %r15
   34246:	41 56                	push   %r14
   34248:	41 55                	push   %r13
   3424a:	41 54                	push   %r12
   3424c:	55                   	push   %rbp
   3424d:	53                   	push   %rbx
   3424e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   34255:	48 83 0c 24 00       	orq    $0x0,(%rsp)
   3425a:	48 83 ec 38          	sub    $0x38,%rsp
   3425e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34265:	00 00 
   34267:	48 89 84 24 28 10 00 	mov    %rax,0x1028(%rsp)
   3426e:	00 
   3426f:	31 c0                	xor    %eax,%eax
   34271:	41 89 fc             	mov    %edi,%r12d
   34274:	49 89 f5             	mov    %rsi,%r13
   34277:	48 85 f6             	test   %rsi,%rsi
   3427a:	0f 84 80 01 00 00    	je     34400 <recvfd+0x1c0>
   34280:	85 ff                	test   %edi,%edi
   34282:	0f 88 d7 01 00 00    	js     3445f <recvfd+0x21f>
   34288:	49 89 f7             	mov    %rsi,%r15
   3428b:	49 8b 07             	mov    (%r15),%rax
   3428e:	48 85 c0             	test   %rax,%rax
   34291:	0f 84 89 01 00 00    	je     34420 <recvfd+0x1e0>
   34297:	49 8b 5f 10          	mov    0x10(%r15),%rbx
   3429b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   342a0:	41 be 08 00 00 00    	mov    $0x8,%r14d
   342a6:	eb 53                	jmp    342fb <recvfd+0xbb>
   342a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   342af:	00 
   342b0:	4c 89 f2             	mov    %r14,%rdx
   342b3:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
   342b7:	44 89 e7             	mov    %r12d,%edi
   342ba:	48 29 da             	sub    %rbx,%rdx
   342bd:	e8 be be fd ff       	callq  10180 <read@plt>
   342c2:	89 c2                	mov    %eax,%edx
   342c4:	85 c0                	test   %eax,%eax
   342c6:	0f 88 b4 01 00 00    	js     34480 <recvfd+0x240>
   342cc:	0f 84 66 01 00 00    	je     34438 <recvfd+0x1f8>
   342d2:	48 98                	cltq   
   342d4:	49 03 47 10          	add    0x10(%r15),%rax
   342d8:	48 89 c3             	mov    %rax,%rbx
   342db:	49 89 47 10          	mov    %rax,0x10(%r15)
   342df:	49 8b 07             	mov    (%r15),%rax
   342e2:	48 83 fb 08          	cmp    $0x8,%rbx
   342e6:	0f 84 c4 00 00 00    	je     343b0 <recvfd+0x170>
   342ec:	49 8b 6f 08          	mov    0x8(%r15),%rbp
   342f0:	48 83 fb 07          	cmp    $0x7,%rbx
   342f4:	77 0f                	ja     34305 <recvfd+0xc5>
   342f6:	48 39 dd             	cmp    %rbx,%rbp
   342f9:	76 0f                	jbe    3430a <recvfd+0xca>
   342fb:	48 83 fb 07          	cmp    $0x7,%rbx
   342ff:	76 af                	jbe    342b0 <recvfd+0x70>
   34301:	49 8b 6f 08          	mov    0x8(%r15),%rbp
   34305:	48 39 eb             	cmp    %rbp,%rbx
   34308:	72 66                	jb     34370 <recvfd+0x130>
   3430a:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi
   3430e:	48 8d 78 08          	lea    0x8(%rax),%rdi
   34312:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   34316:	e8 e5 c4 fd ff       	callq  10800 <flux_msg_decode@plt>
   3431b:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   3431f:	48 85 c0             	test   %rax,%rax
   34322:	48 89 c3             	mov    %rax,%rbx
   34325:	0f 84 46 01 00 00    	je     34471 <recvfd+0x231>
   3432b:	4d 85 ed             	test   %r13,%r13
   3432e:	0f 84 9f 01 00 00    	je     344d3 <recvfd+0x293>
   34334:	4c 89 ef             	mov    %r13,%rdi
   34337:	e8 b4 fc ff ff       	callq  33ff0 <iobuf_clean>
   3433c:	48 8b bc 24 28 10 00 	mov    0x1028(%rsp),%rdi
   34343:	00 
   34344:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   3434b:	00 00 
   3434d:	48 89 d8             	mov    %rbx,%rax
   34350:	0f 85 a8 01 00 00    	jne    344fe <recvfd+0x2be>
   34356:	48 81 c4 38 10 00 00 	add    $0x1038,%rsp
   3435d:	5b                   	pop    %rbx
   3435e:	5d                   	pop    %rbp
   3435f:	41 5c                	pop    %r12
   34361:	41 5d                	pop    %r13
   34363:	41 5e                	pop    %r14
   34365:	41 5f                	pop    %r15
   34367:	c3                   	retq   
   34368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3436f:	00 
   34370:	48 89 ea             	mov    %rbp,%rdx
   34373:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
   34377:	44 89 e7             	mov    %r12d,%edi
   3437a:	48 29 da             	sub    %rbx,%rdx
   3437d:	e8 fe bd fd ff       	callq  10180 <read@plt>
   34382:	89 c2                	mov    %eax,%edx
   34384:	85 c0                	test   %eax,%eax
   34386:	0f 88 10 01 00 00    	js     3449c <recvfd+0x25c>
   3438c:	0f 84 a6 00 00 00    	je     34438 <recvfd+0x1f8>
   34392:	48 98                	cltq   
   34394:	49 03 47 10          	add    0x10(%r15),%rax
   34398:	49 8b 6f 08          	mov    0x8(%r15),%rbp
   3439c:	48 89 c3             	mov    %rax,%rbx
   3439f:	49 89 47 10          	mov    %rax,0x10(%r15)
   343a3:	49 8b 07             	mov    (%r15),%rax
   343a6:	e9 4b ff ff ff       	jmpq   342f6 <recvfd+0xb6>
   343ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   343b0:	81 38 12 00 ee ff    	cmpl   $0xffee0012,(%rax)
   343b6:	0f 85 fc 00 00 00    	jne    344b8 <recvfd+0x278>
   343bc:	8b 48 04             	mov    0x4(%rax),%ecx
   343bf:	0f c9                	bswap  %ecx
   343c1:	8d 69 08             	lea    0x8(%rcx),%ebp
   343c4:	49 89 6f 08          	mov    %rbp,0x8(%r15)
   343c8:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
   343ce:	0f 86 31 ff ff ff    	jbe    34305 <recvfd+0xc5>
   343d4:	48 89 ef             	mov    %rbp,%rdi
   343d7:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   343db:	e8 40 c0 fd ff       	callq  10420 <malloc@plt>
   343e0:	49 89 07             	mov    %rax,(%r15)
   343e3:	48 85 c0             	test   %rax,%rax
   343e6:	0f 84 04 01 00 00    	je     344f0 <recvfd+0x2b0>
  return __builtin___memcpy_chk (__dest, __src, __len,
   343ec:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   343f0:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   343f4:	48 89 08             	mov    %rcx,(%rax)
   343f7:	e9 09 ff ff ff       	jmpq   34305 <recvfd+0xc5>
   343fc:	0f 1f 40 00          	nopl   0x0(%rax)
   34400:	85 ff                	test   %edi,%edi
   34402:	78 5b                	js     3445f <recvfd+0x21f>
   34404:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   34409:	4c 89 ff             	mov    %r15,%rdi
   3440c:	e8 9f fb ff ff       	callq  33fb0 <iobuf_init>
   34411:	49 8b 07             	mov    (%r15),%rax
   34414:	48 85 c0             	test   %rax,%rax
   34417:	0f 85 7a fe ff ff    	jne    34297 <recvfd+0x57>
   3441d:	0f 1f 00             	nopl   (%rax)
   34420:	49 8d 47 18          	lea    0x18(%r15),%rax
   34424:	49 c7 47 08 00 10 00 	movq   $0x1000,0x8(%r15)
   3442b:	00 
   3442c:	49 89 07             	mov    %rax,(%r15)
   3442f:	e9 63 fe ff ff       	jmpq   34297 <recvfd+0x57>
   34434:	0f 1f 40 00          	nopl   0x0(%rax)
   34438:	e8 d3 b6 fd ff       	callq  fb10 <__errno_location@plt>
   3443d:	31 db                	xor    %ebx,%ebx
   3443f:	c7 00 68 00 00 00    	movl   $0x68,(%rax)
   34445:	4d 85 ed             	test   %r13,%r13
   34448:	0f 85 e6 fe ff ff    	jne    34334 <recvfd+0xf4>
   3444e:	31 db                	xor    %ebx,%ebx
   34450:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   34455:	e8 96 fb ff ff       	callq  33ff0 <iobuf_clean>
   3445a:	e9 dd fe ff ff       	jmpq   3433c <recvfd+0xfc>
   3445f:	e8 ac b6 fd ff       	callq  fb10 <__errno_location@plt>
   34464:	31 db                	xor    %ebx,%ebx
   34466:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3446c:	e9 cb fe ff ff       	jmpq   3433c <recvfd+0xfc>
   34471:	4d 85 ed             	test   %r13,%r13
   34474:	74 5d                	je     344d3 <recvfd+0x293>
   34476:	e8 95 b6 fd ff       	callq  fb10 <__errno_location@plt>
   3447b:	8b 10                	mov    (%rax),%edx
   3447d:	eb 29                	jmp    344a8 <recvfd+0x268>
   3447f:	90                   	nop
   34480:	e8 8b b6 fd ff       	callq  fb10 <__errno_location@plt>
   34485:	8b 10                	mov    (%rax),%edx
   34487:	4d 85 ed             	test   %r13,%r13
   3448a:	75 1c                	jne    344a8 <recvfd+0x268>
   3448c:	4c 89 eb             	mov    %r13,%rbx
   3448f:	83 fa 0b             	cmp    $0xb,%edx
   34492:	75 bc                	jne    34450 <recvfd+0x210>
   34494:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   3449a:	eb b4                	jmp    34450 <recvfd+0x210>
   3449c:	e8 6f b6 fd ff       	callq  fb10 <__errno_location@plt>
   344a1:	8b 10                	mov    (%rax),%edx
   344a3:	4d 85 ed             	test   %r13,%r13
   344a6:	74 e4                	je     3448c <recvfd+0x24c>
   344a8:	31 db                	xor    %ebx,%ebx
   344aa:	83 fa 0b             	cmp    $0xb,%edx
   344ad:	0f 84 89 fe ff ff    	je     3433c <recvfd+0xfc>
   344b3:	e9 7c fe ff ff       	jmpq   34334 <recvfd+0xf4>
   344b8:	e8 53 b6 fd ff       	callq  fb10 <__errno_location@plt>
   344bd:	31 db                	xor    %ebx,%ebx
   344bf:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   344c5:	4d 85 ed             	test   %r13,%r13
   344c8:	0f 85 66 fe ff ff    	jne    34334 <recvfd+0xf4>
   344ce:	e9 7b ff ff ff       	jmpq   3444e <recvfd+0x20e>
   344d3:	83 fa ff             	cmp    $0xffffffff,%edx
   344d6:	0f 85 74 ff ff ff    	jne    34450 <recvfd+0x210>
   344dc:	e8 2f b6 fd ff       	callq  fb10 <__errno_location@plt>
   344e1:	49 89 dd             	mov    %rbx,%r13
   344e4:	8b 10                	mov    (%rax),%edx
   344e6:	eb a4                	jmp    3448c <recvfd+0x24c>
   344e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   344ef:	00 
   344f0:	4d 85 ed             	test   %r13,%r13
   344f3:	0f 84 55 ff ff ff    	je     3444e <recvfd+0x20e>
   344f9:	e9 78 ff ff ff       	jmpq   34476 <recvfd+0x236>
   344fe:	e8 4d b9 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000034503 <.annobin_recvfd.end>:
   34503:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3450a:	00 00 00 
   3450d:	0f 1f 00             	nopl   (%rax)

0000000000034510 <add_continuation>:
   34510:	f3 0f 1e fa          	endbr64 
   34514:	41 54                	push   %r12
   34516:	55                   	push   %rbp
   34517:	53                   	push   %rbx
   34518:	48 89 f3             	mov    %rsi,%rbx
   3451b:	48 8b 6e 28          	mov    0x28(%rsi),%rbp
   3451f:	31 f6                	xor    %esi,%esi
   34521:	e8 0a b9 fd ff       	callq  fe30 <flux_future_get@plt>
   34526:	85 c0                	test   %eax,%eax
   34528:	78 46                	js     34570 <add_continuation+0x60>
   3452a:	48 8b 45 10          	mov    0x10(%rbp),%rax
   3452e:	80 4b 50 01          	orb    $0x1,0x50(%rbx)
   34532:	45 31 e4             	xor    %r12d,%r12d
   34535:	48 85 c0             	test   %rax,%rax
   34538:	74 16                	je     34550 <add_continuation+0x40>
   3453a:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   3453e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   34542:	44 89 e2             	mov    %r12d,%edx
   34545:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   34549:	ff d0                	callq  *%rax
   3454b:	45 85 e4             	test   %r12d,%r12d
   3454e:	75 08                	jne    34558 <add_continuation+0x48>
   34550:	5b                   	pop    %rbx
   34551:	5d                   	pop    %rbp
   34552:	41 5c                	pop    %r12
   34554:	c3                   	retq   
   34555:	0f 1f 00             	nopl   (%rax)
   34558:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   3455c:	48 8b 33             	mov    (%rbx),%rsi
   3455f:	5b                   	pop    %rbx
   34560:	5d                   	pop    %rbp
   34561:	41 5c                	pop    %r12
   34563:	e9 68 5e 00 00       	jmpq   3a3d0 <fzhashx_delete>
   34568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3456f:	00 
   34570:	e8 9b b5 fd ff       	callq  fb10 <__errno_location@plt>
   34575:	44 8b 20             	mov    (%rax),%r12d
   34578:	48 8b 45 10          	mov    0x10(%rbp),%rax
   3457c:	48 85 c0             	test   %rax,%rax
   3457f:	75 b9                	jne    3453a <add_continuation+0x2a>
   34581:	eb c8                	jmp    3454b <add_continuation+0x3b>

0000000000034583 <.annobin_add_continuation.end>:
   34583:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3458a:	00 00 00 00 
   3458e:	66 90                	xchg   %ax,%ax

0000000000034590 <remove_continuation>:
   34590:	f3 0f 1e fa          	endbr64 
   34594:	55                   	push   %rbp
   34595:	53                   	push   %rbx
   34596:	48 89 f3             	mov    %rsi,%rbx
   34599:	48 83 ec 08          	sub    $0x8,%rsp
   3459d:	48 8b 6e 28          	mov    0x28(%rsi),%rbp
   345a1:	31 f6                	xor    %esi,%esi
   345a3:	e8 88 b8 fd ff       	callq  fe30 <flux_future_get@plt>
   345a8:	85 c0                	test   %eax,%eax
   345aa:	78 34                	js     345e0 <remove_continuation+0x50>
   345ac:	80 63 50 fe          	andb   $0xfe,0x50(%rbx)
   345b0:	31 d2                	xor    %edx,%edx
   345b2:	48 8b 45 10          	mov    0x10(%rbp),%rax
   345b6:	48 85 c0             	test   %rax,%rax
   345b9:	74 0e                	je     345c9 <remove_continuation+0x39>
   345bb:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   345bf:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   345c3:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
   345c7:	ff d0                	callq  *%rax
   345c9:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   345cd:	48 8b 33             	mov    (%rbx),%rsi
   345d0:	48 83 c4 08          	add    $0x8,%rsp
   345d4:	5b                   	pop    %rbx
   345d5:	5d                   	pop    %rbp
   345d6:	e9 f5 5d 00 00       	jmpq   3a3d0 <fzhashx_delete>
   345db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   345e0:	e8 2b b5 fd ff       	callq  fb10 <__errno_location@plt>
   345e5:	8b 10                	mov    (%rax),%edx
   345e7:	eb c9                	jmp    345b2 <remove_continuation+0x22>

00000000000345e9 <.annobin_remove_continuation.end>:
   345e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000345f0 <request_copy_clear_routes>:
   345f0:	53                   	push   %rbx
   345f1:	be 01 00 00 00       	mov    $0x1,%esi
   345f6:	e8 f5 ba fd ff       	callq  100f0 <flux_msg_copy@plt>
   345fb:	48 89 c3             	mov    %rax,%rbx
   345fe:	48 85 c0             	test   %rax,%rax
   34601:	74 08                	je     3460b <request_copy_clear_routes+0x1b>
   34603:	48 89 c7             	mov    %rax,%rdi
   34606:	e8 35 b7 fd ff       	callq  fd40 <flux_msg_route_clear@plt>
   3460b:	48 89 d8             	mov    %rbx,%rax
   3460e:	5b                   	pop    %rbx
   3460f:	c3                   	retq   

0000000000034610 <servhash_entry_destroy.part.1>:
   34610:	41 55                	push   %r13
   34612:	41 54                	push   %r12
   34614:	55                   	push   %rbp
   34615:	53                   	push   %rbx
   34616:	48 89 fb             	mov    %rdi,%rbx
   34619:	48 83 ec 08          	sub    $0x8,%rsp
   3461d:	e8 ee b4 fd ff       	callq  fb10 <__errno_location@plt>
   34622:	48 89 c5             	mov    %rax,%rbp
   34625:	44 8b 20             	mov    (%rax),%r12d
   34628:	f6 43 50 01          	testb  $0x1,0x50(%rbx)
   3462c:	75 7a                	jne    346a8 <servhash_entry_destroy.part.1+0x98>
   3462e:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   34632:	48 85 ff             	test   %rdi,%rdi
   34635:	74 13                	je     3464a <servhash_entry_destroy.part.1+0x3a>
   34637:	e8 b4 bf fd ff       	callq  105f0 <flux_future_is_ready@plt>
   3463c:	84 c0                	test   %al,%al
   3463e:	74 6f                	je     346af <servhash_entry_destroy.part.1+0x9f>
   34640:	f6 43 50 01          	testb  $0x1,0x50(%rbx)
   34644:	75 62                	jne    346a8 <servhash_entry_destroy.part.1+0x98>
   34646:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   3464a:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3464e:	e8 fd b6 fd ff       	callq  fd50 <flux_future_destroy@plt>
   34653:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   34657:	e8 f4 b6 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3465c:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   34660:	e8 1b be fd ff       	callq  10480 <flux_msg_decref@plt>
   34665:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
   34669:	e8 12 be fd ff       	callq  10480 <flux_msg_decref@plt>
   3466e:	48 8b 3b             	mov    (%rbx),%rdi
   34671:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   34675:	e8 36 b4 fd ff       	callq  fab0 <free@plt>
   3467a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3467e:	e8 2d b4 fd ff       	callq  fab0 <free@plt>
   34683:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   34687:	e8 24 b4 fd ff       	callq  fab0 <free@plt>
   3468c:	48 89 df             	mov    %rbx,%rdi
   3468f:	e8 1c b4 fd ff       	callq  fab0 <free@plt>
   34694:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   34698:	48 83 c4 08          	add    $0x8,%rsp
   3469c:	5b                   	pop    %rbx
   3469d:	5d                   	pop    %rbp
   3469e:	41 5c                	pop    %r12
   346a0:	41 5d                	pop    %r13
   346a2:	c3                   	retq   
   346a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   346a8:	48 83 7b 48 00       	cmpq   $0x0,0x48(%rbx)
   346ad:	75 97                	jne    34646 <servhash_entry_destroy.part.1+0x36>
   346af:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   346b3:	e8 38 ff ff ff       	callq  345f0 <request_copy_clear_routes>
   346b8:	49 89 c5             	mov    %rax,%r13
   346bb:	48 85 c0             	test   %rax,%rax
   346be:	74 86                	je     34646 <servhash_entry_destroy.part.1+0x36>
   346c0:	48 8d 35 bc f3 00 00 	lea    0xf3bc(%rip),%rsi        # 43a83 <__PRETTY_FUNCTION__.6731+0x183>
   346c7:	48 89 c7             	mov    %rax,%rdi
   346ca:	e8 c1 be fd ff       	callq  10590 <flux_msg_set_topic@plt>
   346cf:	85 c0                	test   %eax,%eax
   346d1:	78 23                	js     346f6 <servhash_entry_destroy.part.1+0xe6>
   346d3:	48 8b 43 28          	mov    0x28(%rbx),%rax
   346d7:	31 c9                	xor    %ecx,%ecx
   346d9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   346de:	4c 89 ee             	mov    %r13,%rsi
   346e1:	48 8b 38             	mov    (%rax),%rdi
   346e4:	e8 17 bd fd ff       	callq  10400 <flux_rpc_message@plt>
   346e9:	48 85 c0             	test   %rax,%rax
   346ec:	74 08                	je     346f6 <servhash_entry_destroy.part.1+0xe6>
   346ee:	48 89 c7             	mov    %rax,%rdi
   346f1:	e8 5a b6 fd ff       	callq  fd50 <flux_future_destroy@plt>
   346f6:	4c 89 ef             	mov    %r13,%rdi
   346f9:	e8 a2 bd fd ff       	callq  104a0 <flux_msg_destroy@plt>
   346fe:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   34702:	e9 43 ff ff ff       	jmpq   3464a <servhash_entry_destroy.part.1+0x3a>

0000000000034707 <.annobin_servhash_entry_destroy.part.1.end>:
   34707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3470e:	00 00 

0000000000034710 <servhash_entry_destructor>:
   34710:	f3 0f 1e fa          	endbr64 
   34714:	48 85 ff             	test   %rdi,%rdi
   34717:	74 1f                	je     34738 <servhash_entry_destructor+0x28>
   34719:	53                   	push   %rbx
   3471a:	48 89 fb             	mov    %rdi,%rbx
   3471d:	48 8b 3f             	mov    (%rdi),%rdi
   34720:	48 85 ff             	test   %rdi,%rdi
   34723:	74 05                	je     3472a <servhash_entry_destructor+0x1a>
   34725:	e8 e6 fe ff ff       	callq  34610 <servhash_entry_destroy.part.1>
   3472a:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   34731:	5b                   	pop    %rbx
   34732:	c3                   	retq   
   34733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34738:	c3                   	retq   

0000000000034739 <.annobin_servhash_add.start>:
   34739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000034740 <servhash_add>:
   34740:	f3 0f 1e fa          	endbr64 
   34744:	41 56                	push   %r14
   34746:	41 55                	push   %r13
   34748:	41 54                	push   %r12
   3474a:	55                   	push   %rbp
   3474b:	53                   	push   %rbx
   3474c:	48 85 ff             	test   %rdi,%rdi
   3474f:	0f 84 83 01 00 00    	je     348d8 <servhash_add+0x198>
   34755:	49 89 f4             	mov    %rsi,%r12
   34758:	48 85 f6             	test   %rsi,%rsi
   3475b:	0f 84 77 01 00 00    	je     348d8 <servhash_add+0x198>
   34761:	49 89 d6             	mov    %rdx,%r14
   34764:	48 85 d2             	test   %rdx,%rdx
   34767:	0f 84 6b 01 00 00    	je     348d8 <servhash_add+0x198>
   3476d:	49 89 cd             	mov    %rcx,%r13
   34770:	48 85 c9             	test   %rcx,%rcx
   34773:	0f 84 5f 01 00 00    	je     348d8 <servhash_add+0x198>
   34779:	48 89 fd             	mov    %rdi,%rbp
   3477c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   34780:	e8 8b 5d 00 00       	callq  3a510 <fzhashx_lookup>
   34785:	48 85 c0             	test   %rax,%rax
   34788:	0f 85 32 01 00 00    	jne    348c0 <servhash_add+0x180>
   3478e:	be 58 00 00 00       	mov    $0x58,%esi
   34793:	bf 01 00 00 00       	mov    $0x1,%edi
   34798:	e8 73 ba fd ff       	callq  10210 <calloc@plt>
   3479d:	48 89 c3             	mov    %rax,%rbx
   347a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   347a5:	48 85 db             	test   %rbx,%rbx
   347a8:	0f 84 e0 00 00 00    	je     3488e <servhash_add+0x14e>
   347ae:	4c 89 e7             	mov    %r12,%rdi
   347b1:	e8 ea c1 fd ff       	callq  109a0 <strdup@plt>
   347b6:	48 89 03             	mov    %rax,(%rbx)
   347b9:	48 85 c0             	test   %rax,%rax
   347bc:	0f 84 de 00 00 00    	je     348a0 <servhash_add+0x160>
   347c2:	4c 89 f7             	mov    %r14,%rdi
   347c5:	e8 d6 c1 fd ff       	callq  109a0 <strdup@plt>
   347ca:	48 89 43 08          	mov    %rax,0x8(%rbx)
   347ce:	48 85 c0             	test   %rax,%rax
   347d1:	0f 84 c9 00 00 00    	je     348a0 <servhash_add+0x160>
  return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
   347d7:	31 c0                	xor    %eax,%eax
   347d9:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   347dd:	4c 89 e1             	mov    %r12,%rcx
   347e0:	be 01 00 00 00       	mov    $0x1,%esi
   347e5:	48 8d 15 a6 f2 00 00 	lea    0xf2a6(%rip),%rdx        # 43a92 <__PRETTY_FUNCTION__.6731+0x192>
   347ec:	e8 ff b9 fd ff       	callq  101f0 <__asprintf_chk@plt>
   347f1:	85 c0                	test   %eax,%eax
   347f3:	0f 88 a7 00 00 00    	js     348a0 <servhash_add+0x160>
   347f9:	31 f6                	xor    %esi,%esi
   347fb:	bf 01 00 00 00       	mov    $0x1,%edi
   34800:	31 d2                	xor    %edx,%edx
   34802:	e8 89 b8 fd ff       	callq  10090 <flux_match_init@plt>
   34807:	4c 89 ef             	mov    %r13,%rdi
   3480a:	48 89 6b 28          	mov    %rbp,0x28(%rbx)
   3480e:	48 89 43 10          	mov    %rax,0x10(%rbx)
   34812:	48 8b 43 20          	mov    0x20(%rbx),%rax
   34816:	48 89 43 18          	mov    %rax,0x18(%rbx)
   3481a:	e8 61 bd fd ff       	callq  10580 <flux_msg_incref@plt>
   3481f:	4c 89 ef             	mov    %r13,%rdi
   34822:	48 89 43 30          	mov    %rax,0x30(%rbx)
   34826:	e8 c5 fd ff ff       	callq  345f0 <request_copy_clear_routes>
   3482b:	49 89 c5             	mov    %rax,%r13
   3482e:	48 85 c0             	test   %rax,%rax
   34831:	0f 84 b9 00 00 00    	je     348f0 <servhash_add+0x1b0>
   34837:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3483b:	31 c9                	xor    %ecx,%ecx
   3483d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   34842:	48 89 c6             	mov    %rax,%rsi
   34845:	e8 b6 bb fd ff       	callq  10400 <flux_rpc_message@plt>
   3484a:	48 89 43 40          	mov    %rax,0x40(%rbx)
   3484e:	48 85 c0             	test   %rax,%rax
   34851:	0f 84 99 00 00 00    	je     348f0 <servhash_add+0x1b0>
   34857:	f2 0f 10 05 a1 a7 00 	movsd  0xa7a1(%rip),%xmm0        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   3485e:	00 
   3485f:	48 89 da             	mov    %rbx,%rdx
   34862:	48 8d 35 a7 fc ff ff 	lea    -0x359(%rip),%rsi        # 34510 <add_continuation>
   34869:	48 89 c7             	mov    %rax,%rdi
   3486c:	e8 8f bd fd ff       	callq  10600 <flux_future_then@plt>
   34871:	85 c0                	test   %eax,%eax
   34873:	78 7b                	js     348f0 <servhash_add+0x1b0>
   34875:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   34879:	48 89 da             	mov    %rbx,%rdx
   3487c:	4c 89 e6             	mov    %r12,%rsi
   3487f:	e8 5c 5a 00 00       	callq  3a2e0 <fzhashx_update>
   34884:	4c 89 ef             	mov    %r13,%rdi
   34887:	e8 14 bc fd ff       	callq  104a0 <flux_msg_destroy@plt>
   3488c:	31 c0                	xor    %eax,%eax
   3488e:	5b                   	pop    %rbx
   3488f:	5d                   	pop    %rbp
   34890:	41 5c                	pop    %r12
   34892:	41 5d                	pop    %r13
   34894:	41 5e                	pop    %r14
   34896:	c3                   	retq   
   34897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3489e:	00 00 
   348a0:	48 89 df             	mov    %rbx,%rdi
   348a3:	e8 68 fd ff ff       	callq  34610 <servhash_entry_destroy.part.1>
   348a8:	5b                   	pop    %rbx
   348a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   348ae:	5d                   	pop    %rbp
   348af:	41 5c                	pop    %r12
   348b1:	41 5d                	pop    %r13
   348b3:	41 5e                	pop    %r14
   348b5:	c3                   	retq   
   348b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   348bd:	00 00 00 
   348c0:	e8 4b b2 fd ff       	callq  fb10 <__errno_location@plt>
   348c5:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   348cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   348d0:	eb bc                	jmp    3488e <servhash_add+0x14e>
   348d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   348d8:	e8 33 b2 fd ff       	callq  fb10 <__errno_location@plt>
   348dd:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   348e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   348e8:	eb a4                	jmp    3488e <servhash_add+0x14e>
   348ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   348f0:	48 89 df             	mov    %rbx,%rdi
   348f3:	e8 18 fd ff ff       	callq  34610 <servhash_entry_destroy.part.1>
   348f8:	4c 89 ef             	mov    %r13,%rdi
   348fb:	e8 a0 bb fd ff       	callq  104a0 <flux_msg_destroy@plt>
   34900:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   34905:	eb 87                	jmp    3488e <servhash_add+0x14e>

0000000000034907 <.annobin_servhash_add.end>:
   34907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3490e:	00 00 

0000000000034910 <servhash_remove>:
   34910:	f3 0f 1e fa          	endbr64 
   34914:	41 56                	push   %r14
   34916:	41 55                	push   %r13
   34918:	41 54                	push   %r12
   3491a:	55                   	push   %rbp
   3491b:	53                   	push   %rbx
   3491c:	48 85 ff             	test   %rdi,%rdi
   3491f:	0f 84 e3 00 00 00    	je     34a08 <servhash_remove+0xf8>
   34925:	49 89 f6             	mov    %rsi,%r14
   34928:	48 85 f6             	test   %rsi,%rsi
   3492b:	0f 84 d7 00 00 00    	je     34a08 <servhash_remove+0xf8>
   34931:	49 89 d5             	mov    %rdx,%r13
   34934:	48 85 d2             	test   %rdx,%rdx
   34937:	0f 84 cb 00 00 00    	je     34a08 <servhash_remove+0xf8>
   3493d:	49 89 cc             	mov    %rcx,%r12
   34940:	48 85 c9             	test   %rcx,%rcx
   34943:	0f 84 bf 00 00 00    	je     34a08 <servhash_remove+0xf8>
   34949:	48 89 fd             	mov    %rdi,%rbp
   3494c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   34950:	e8 bb 5b 00 00       	callq  3a510 <fzhashx_lookup>
   34955:	48 89 c3             	mov    %rax,%rbx
   34958:	48 85 c0             	test   %rax,%rax
   3495b:	0f 84 8f 00 00 00    	je     349f0 <servhash_remove+0xe0>
   34961:	48 8b 78 08          	mov    0x8(%rax),%rdi
   34965:	4c 89 ee             	mov    %r13,%rsi
   34968:	e8 b3 b8 fd ff       	callq  10220 <strcmp@plt>
   3496d:	41 89 c5             	mov    %eax,%r13d
   34970:	85 c0                	test   %eax,%eax
   34972:	75 7c                	jne    349f0 <servhash_remove+0xe0>
   34974:	48 83 7b 48 00       	cmpq   $0x0,0x48(%rbx)
   34979:	75 75                	jne    349f0 <servhash_remove+0xe0>
   3497b:	4c 89 e7             	mov    %r12,%rdi
   3497e:	e8 fd bb fd ff       	callq  10580 <flux_msg_incref@plt>
   34983:	4c 89 e7             	mov    %r12,%rdi
   34986:	48 89 43 38          	mov    %rax,0x38(%rbx)
   3498a:	e8 61 fc ff ff       	callq  345f0 <request_copy_clear_routes>
   3498f:	49 89 c4             	mov    %rax,%r12
   34992:	48 85 c0             	test   %rax,%rax
   34995:	0f 84 85 00 00 00    	je     34a20 <servhash_remove+0x110>
   3499b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3499f:	31 c9                	xor    %ecx,%ecx
   349a1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   349a6:	48 89 c6             	mov    %rax,%rsi
   349a9:	e8 52 ba fd ff       	callq  10400 <flux_rpc_message@plt>
   349ae:	48 89 43 48          	mov    %rax,0x48(%rbx)
   349b2:	48 85 c0             	test   %rax,%rax
   349b5:	74 69                	je     34a20 <servhash_remove+0x110>
   349b7:	f2 0f 10 05 41 a6 00 	movsd  0xa641(%rip),%xmm0        # 3f000 <__PRETTY_FUNCTION__.4363+0xe8>
   349be:	00 
   349bf:	48 89 da             	mov    %rbx,%rdx
   349c2:	48 8d 35 c7 fb ff ff 	lea    -0x439(%rip),%rsi        # 34590 <remove_continuation>
   349c9:	48 89 c7             	mov    %rax,%rdi
   349cc:	e8 2f bc fd ff       	callq  10600 <flux_future_then@plt>
   349d1:	85 c0                	test   %eax,%eax
   349d3:	78 4b                	js     34a20 <servhash_remove+0x110>
   349d5:	4c 89 e7             	mov    %r12,%rdi
   349d8:	e8 c3 ba fd ff       	callq  104a0 <flux_msg_destroy@plt>
   349dd:	5b                   	pop    %rbx
   349de:	44 89 e8             	mov    %r13d,%eax
   349e1:	5d                   	pop    %rbp
   349e2:	41 5c                	pop    %r12
   349e4:	41 5d                	pop    %r13
   349e6:	41 5e                	pop    %r14
   349e8:	c3                   	retq   
   349e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   349f0:	e8 1b b1 fd ff       	callq  fb10 <__errno_location@plt>
   349f5:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   349fb:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   34a01:	eb da                	jmp    349dd <servhash_remove+0xcd>
   34a03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34a08:	e8 03 b1 fd ff       	callq  fb10 <__errno_location@plt>
   34a0d:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   34a13:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   34a19:	eb c2                	jmp    349dd <servhash_remove+0xcd>
   34a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34a20:	e8 eb b0 fd ff       	callq  fb10 <__errno_location@plt>
   34a25:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   34a29:	4c 89 f6             	mov    %r14,%rsi
   34a2c:	44 8b 28             	mov    (%rax),%r13d
   34a2f:	48 89 c3             	mov    %rax,%rbx
   34a32:	e8 99 59 00 00       	callq  3a3d0 <fzhashx_delete>
   34a37:	4c 89 e7             	mov    %r12,%rdi
   34a3a:	44 89 2b             	mov    %r13d,(%rbx)
   34a3d:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   34a43:	e8 58 ba fd ff       	callq  104a0 <flux_msg_destroy@plt>
   34a48:	eb 93                	jmp    349dd <servhash_remove+0xcd>

0000000000034a4a <.annobin_servhash_disconnect.start>:
   34a4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000034a50 <servhash_disconnect>:
   34a50:	f3 0f 1e fa          	endbr64 
   34a54:	41 54                	push   %r12
   34a56:	55                   	push   %rbp
   34a57:	53                   	push   %rbx
   34a58:	48 83 ec 10          	sub    $0x10,%rsp
   34a5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   34a63:	00 00 
   34a65:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   34a6a:	31 c0                	xor    %eax,%eax
   34a6c:	48 85 ff             	test   %rdi,%rdi
   34a6f:	74 08                	je     34a79 <servhash_disconnect+0x29>
   34a71:	49 89 f4             	mov    %rsi,%r12
   34a74:	48 85 f6             	test   %rsi,%rsi
   34a77:	75 27                	jne    34aa0 <servhash_disconnect+0x50>
   34a79:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   34a7e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   34a85:	00 00 
   34a87:	0f 85 90 00 00 00    	jne    34b1d <servhash_disconnect+0xcd>
   34a8d:	48 83 c4 10          	add    $0x10,%rsp
   34a91:	5b                   	pop    %rbx
   34a92:	5d                   	pop    %rbp
   34a93:	41 5c                	pop    %r12
   34a95:	c3                   	retq   
   34a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34a9d:	00 00 00 
   34aa0:	48 89 fd             	mov    %rdi,%rbp
   34aa3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   34aa7:	e8 24 5c 00 00       	callq  3a6d0 <fzhashx_keys>
   34aac:	48 89 04 24          	mov    %rax,(%rsp)
   34ab0:	48 85 c0             	test   %rax,%rax
   34ab3:	74 c4                	je     34a79 <servhash_disconnect+0x29>
   34ab5:	48 89 c7             	mov    %rax,%rdi
   34ab8:	e8 33 70 00 00       	callq  3baf0 <fzlistx_first>
   34abd:	48 89 c3             	mov    %rax,%rbx
   34ac0:	48 85 c0             	test   %rax,%rax
   34ac3:	75 1c                	jne    34ae1 <servhash_disconnect+0x91>
   34ac5:	eb 49                	jmp    34b10 <servhash_disconnect+0xc0>
   34ac7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   34ace:	00 00 
   34ad0:	48 8b 3c 24          	mov    (%rsp),%rdi
   34ad4:	e8 67 70 00 00       	callq  3bb40 <fzlistx_next>
   34ad9:	48 89 c3             	mov    %rax,%rbx
   34adc:	48 85 c0             	test   %rax,%rax
   34adf:	74 2f                	je     34b10 <servhash_disconnect+0xc0>
   34ae1:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   34ae5:	48 89 de             	mov    %rbx,%rsi
   34ae8:	e8 23 5a 00 00       	callq  3a510 <fzhashx_lookup>
   34aed:	4c 89 e6             	mov    %r12,%rsi
   34af0:	48 8b 78 08          	mov    0x8(%rax),%rdi
   34af4:	e8 27 b7 fd ff       	callq  10220 <strcmp@plt>
   34af9:	85 c0                	test   %eax,%eax
   34afb:	75 d3                	jne    34ad0 <servhash_disconnect+0x80>
   34afd:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   34b01:	48 89 de             	mov    %rbx,%rsi
   34b04:	e8 c7 58 00 00       	callq  3a3d0 <fzhashx_delete>
   34b09:	eb c5                	jmp    34ad0 <servhash_disconnect+0x80>
   34b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34b10:	48 89 e7             	mov    %rsp,%rdi
   34b13:	e8 48 76 00 00       	callq  3c160 <fzlistx_destroy>
   34b18:	e9 5c ff ff ff       	jmpq   34a79 <servhash_disconnect+0x29>
   34b1d:	e8 2e b3 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000034b22 <.annobin_servhash_disconnect.end>:
   34b22:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34b29:	00 00 00 00 
   34b2d:	0f 1f 00             	nopl   (%rax)

0000000000034b30 <servhash_match>:
   34b30:	f3 0f 1e fa          	endbr64 
   34b34:	41 55                	push   %r13
   34b36:	49 89 d5             	mov    %rdx,%r13
   34b39:	41 54                	push   %r12
   34b3b:	55                   	push   %rbp
   34b3c:	53                   	push   %rbx
   34b3d:	48 83 ec 08          	sub    $0x8,%rsp
   34b41:	48 85 f6             	test   %rsi,%rsi
   34b44:	0f 94 c2             	sete   %dl
   34b47:	4d 85 ed             	test   %r13,%r13
   34b4a:	0f 94 c0             	sete   %al
   34b4d:	08 c2                	or     %al,%dl
   34b4f:	75 7a                	jne    34bcb <servhash_match+0x9b>
   34b51:	48 89 fd             	mov    %rdi,%rbp
   34b54:	48 85 ff             	test   %rdi,%rdi
   34b57:	74 72                	je     34bcb <servhash_match+0x9b>
   34b59:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   34b5d:	49 89 f4             	mov    %rsi,%r12
   34b60:	e8 2b 5e 00 00       	callq  3a990 <fzhashx_first>
   34b65:	48 89 c3             	mov    %rax,%rbx
   34b68:	48 85 c0             	test   %rax,%rax
   34b6b:	75 14                	jne    34b81 <servhash_match+0x51>
   34b6d:	eb 41                	jmp    34bb0 <servhash_match+0x80>
   34b6f:	90                   	nop
   34b70:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   34b74:	e8 77 5d 00 00       	callq  3a8f0 <fzhashx_next>
   34b79:	48 89 c3             	mov    %rax,%rbx
   34b7c:	48 85 c0             	test   %rax,%rax
   34b7f:	74 2f                	je     34bb0 <servhash_match+0x80>
   34b81:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   34b85:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   34b89:	4c 89 e7             	mov    %r12,%rdi
   34b8c:	e8 5f b4 fd ff       	callq  fff0 <flux_msg_cmp@plt>
   34b91:	84 c0                	test   %al,%al
   34b93:	74 db                	je     34b70 <servhash_match+0x40>
   34b95:	48 8b 43 08          	mov    0x8(%rbx),%rax
   34b99:	49 89 45 00          	mov    %rax,0x0(%r13)
   34b9d:	31 c0                	xor    %eax,%eax
   34b9f:	48 83 c4 08          	add    $0x8,%rsp
   34ba3:	5b                   	pop    %rbx
   34ba4:	5d                   	pop    %rbp
   34ba5:	41 5c                	pop    %r12
   34ba7:	41 5d                	pop    %r13
   34ba9:	c3                   	retq   
   34baa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   34bb0:	e8 5b af fd ff       	callq  fb10 <__errno_location@plt>
   34bb5:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   34bbb:	48 83 c4 08          	add    $0x8,%rsp
   34bbf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   34bc4:	5b                   	pop    %rbx
   34bc5:	5d                   	pop    %rbp
   34bc6:	41 5c                	pop    %r12
   34bc8:	41 5d                	pop    %r13
   34bca:	c3                   	retq   
   34bcb:	e8 40 af fd ff       	callq  fb10 <__errno_location@plt>
   34bd0:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   34bd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   34bdb:	eb c2                	jmp    34b9f <servhash_match+0x6f>

0000000000034bdd <.annobin_servhash_match.end>:
   34bdd:	0f 1f 00             	nopl   (%rax)

0000000000034be0 <servhash_set_respond>:
   34be0:	f3 0f 1e fa          	endbr64 
   34be4:	48 85 ff             	test   %rdi,%rdi
   34be7:	74 08                	je     34bf1 <servhash_set_respond+0x11>
   34be9:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   34bed:	48 89 57 18          	mov    %rdx,0x18(%rdi)
   34bf1:	c3                   	retq   

0000000000034bf2 <.annobin_servhash_destroy.start>:
   34bf2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34bf9:	00 00 00 00 
   34bfd:	0f 1f 00             	nopl   (%rax)

0000000000034c00 <servhash_destroy>:
   34c00:	f3 0f 1e fa          	endbr64 
   34c04:	48 85 ff             	test   %rdi,%rdi
   34c07:	74 2f                	je     34c38 <servhash_destroy+0x38>
   34c09:	41 54                	push   %r12
   34c0b:	55                   	push   %rbp
   34c0c:	53                   	push   %rbx
   34c0d:	48 89 fb             	mov    %rdi,%rbx
   34c10:	e8 fb ae fd ff       	callq  fb10 <__errno_location@plt>
   34c15:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   34c19:	44 8b 20             	mov    (%rax),%r12d
   34c1c:	48 89 c5             	mov    %rax,%rbp
   34c1f:	e8 3c 54 00 00       	callq  3a060 <fzhashx_destroy>
   34c24:	48 89 df             	mov    %rbx,%rdi
   34c27:	e8 84 ae fd ff       	callq  fab0 <free@plt>
   34c2c:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   34c30:	5b                   	pop    %rbx
   34c31:	5d                   	pop    %rbp
   34c32:	41 5c                	pop    %r12
   34c34:	c3                   	retq   
   34c35:	0f 1f 00             	nopl   (%rax)
   34c38:	c3                   	retq   

0000000000034c39 <.annobin_servhash_create.start>:
   34c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000034c40 <servhash_create>:
   34c40:	f3 0f 1e fa          	endbr64 
   34c44:	55                   	push   %rbp
   34c45:	53                   	push   %rbx
   34c46:	48 83 ec 08          	sub    $0x8,%rsp
   34c4a:	48 85 ff             	test   %rdi,%rdi
   34c4d:	74 49                	je     34c98 <servhash_create+0x58>
   34c4f:	48 89 fd             	mov    %rdi,%rbp
   34c52:	be 20 00 00 00       	mov    $0x20,%esi
   34c57:	bf 01 00 00 00       	mov    $0x1,%edi
   34c5c:	e8 af b5 fd ff       	callq  10210 <calloc@plt>
   34c61:	48 89 c3             	mov    %rax,%rbx
   34c64:	48 85 c0             	test   %rax,%rax
   34c67:	74 20                	je     34c89 <servhash_create+0x49>
   34c69:	e8 02 53 00 00       	callq  39f70 <fzhashx_new>
   34c6e:	48 89 43 08          	mov    %rax,0x8(%rbx)
   34c72:	48 85 c0             	test   %rax,%rax
   34c75:	74 39                	je     34cb0 <servhash_create+0x70>
   34c77:	48 89 2b             	mov    %rbp,(%rbx)
   34c7a:	48 8d 35 8f fa ff ff 	lea    -0x571(%rip),%rsi        # 34710 <servhash_entry_destructor>
   34c81:	48 89 c7             	mov    %rax,%rdi
   34c84:	e8 97 5e 00 00       	callq  3ab20 <fzhashx_set_destructor>
   34c89:	48 83 c4 08          	add    $0x8,%rsp
   34c8d:	48 89 d8             	mov    %rbx,%rax
   34c90:	5b                   	pop    %rbx
   34c91:	5d                   	pop    %rbp
   34c92:	c3                   	retq   
   34c93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34c98:	e8 73 ae fd ff       	callq  fb10 <__errno_location@plt>
   34c9d:	31 db                	xor    %ebx,%ebx
   34c9f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   34ca5:	48 83 c4 08          	add    $0x8,%rsp
   34ca9:	48 89 d8             	mov    %rbx,%rax
   34cac:	5b                   	pop    %rbx
   34cad:	5d                   	pop    %rbp
   34cae:	c3                   	retq   
   34caf:	90                   	nop
   34cb0:	48 89 df             	mov    %rbx,%rdi
   34cb3:	31 db                	xor    %ebx,%ebx
   34cb5:	e8 46 ff ff ff       	callq  34c00 <servhash_destroy>
   34cba:	eb cd                	jmp    34c89 <servhash_create+0x49>

0000000000034cbc <.annobin_servhash_create.end>:
   34cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034cc0 <servhash_renew>:
   34cc0:	f3 0f 1e fa          	endbr64 
   34cc4:	48 85 ff             	test   %rdi,%rdi
   34cc7:	0f 84 c3 00 00 00    	je     34d90 <servhash_renew+0xd0>
   34ccd:	41 55                	push   %r13
   34ccf:	41 54                	push   %r12
   34cd1:	55                   	push   %rbp
   34cd2:	53                   	push   %rbx
   34cd3:	48 89 fb             	mov    %rdi,%rbx
   34cd6:	48 83 ec 08          	sub    $0x8,%rsp
   34cda:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   34cde:	e8 ad 5c 00 00       	callq  3a990 <fzhashx_first>
   34ce3:	48 85 c0             	test   %rax,%rax
   34ce6:	74 78                	je     34d60 <servhash_renew+0xa0>
   34ce8:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
   34cee:	eb 0e                	jmp    34cfe <servhash_renew+0x3e>
   34cf0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   34cf4:	e8 f7 5b 00 00       	callq  3a8f0 <fzhashx_next>
   34cf9:	48 85 c0             	test   %rax,%rax
   34cfc:	74 62                	je     34d60 <servhash_renew+0xa0>
   34cfe:	f6 40 50 01          	testb  $0x1,0x50(%rax)
   34d02:	74 ec                	je     34cf0 <servhash_renew+0x30>
   34d04:	48 83 78 48 00       	cmpq   $0x0,0x48(%rax)
   34d09:	75 e5                	jne    34cf0 <servhash_renew+0x30>
   34d0b:	48 8b 78 30          	mov    0x30(%rax),%rdi
   34d0f:	e8 dc f8 ff ff       	callq  345f0 <request_copy_clear_routes>
   34d14:	48 89 c5             	mov    %rax,%rbp
   34d17:	48 85 c0             	test   %rax,%rax
   34d1a:	74 77                	je     34d93 <servhash_renew+0xd3>
   34d1c:	48 8b 3b             	mov    (%rbx),%rdi
   34d1f:	31 c9                	xor    %ecx,%ecx
   34d21:	44 89 ea             	mov    %r13d,%edx
   34d24:	48 89 c6             	mov    %rax,%rsi
   34d27:	e8 d4 b6 fd ff       	callq  10400 <flux_rpc_message@plt>
   34d2c:	49 89 c4             	mov    %rax,%r12
   34d2f:	48 85 c0             	test   %rax,%rax
   34d32:	74 3c                	je     34d70 <servhash_renew+0xb0>
   34d34:	48 89 c7             	mov    %rax,%rdi
   34d37:	31 f6                	xor    %esi,%esi
   34d39:	e8 f2 b0 fd ff       	callq  fe30 <flux_future_get@plt>
   34d3e:	4c 89 e7             	mov    %r12,%rdi
   34d41:	85 c0                	test   %eax,%eax
   34d43:	78 2d                	js     34d72 <servhash_renew+0xb2>
   34d45:	e8 06 b0 fd ff       	callq  fd50 <flux_future_destroy@plt>
   34d4a:	48 89 ef             	mov    %rbp,%rdi
   34d4d:	e8 4e b7 fd ff       	callq  104a0 <flux_msg_destroy@plt>
   34d52:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   34d56:	e8 95 5b 00 00       	callq  3a8f0 <fzhashx_next>
   34d5b:	48 85 c0             	test   %rax,%rax
   34d5e:	75 9e                	jne    34cfe <servhash_renew+0x3e>
   34d60:	31 c0                	xor    %eax,%eax
   34d62:	48 83 c4 08          	add    $0x8,%rsp
   34d66:	5b                   	pop    %rbx
   34d67:	5d                   	pop    %rbp
   34d68:	41 5c                	pop    %r12
   34d6a:	41 5d                	pop    %r13
   34d6c:	c3                   	retq   
   34d6d:	0f 1f 00             	nopl   (%rax)
   34d70:	31 ff                	xor    %edi,%edi
   34d72:	e8 d9 af fd ff       	callq  fd50 <flux_future_destroy@plt>
   34d77:	48 89 ef             	mov    %rbp,%rdi
   34d7a:	e8 21 b7 fd ff       	callq  104a0 <flux_msg_destroy@plt>
   34d7f:	48 83 c4 08          	add    $0x8,%rsp
   34d83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   34d88:	5b                   	pop    %rbx
   34d89:	5d                   	pop    %rbp
   34d8a:	41 5c                	pop    %r12
   34d8c:	41 5d                	pop    %r13
   34d8e:	c3                   	retq   
   34d8f:	90                   	nop
   34d90:	31 c0                	xor    %eax,%eax
   34d92:	c3                   	retq   
   34d93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   34d98:	eb c8                	jmp    34d62 <servhash_renew+0xa2>

0000000000034d9a <.annobin_servhash.c_end>:
   34d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000034da0 <subhash_entry_destroy>:
   34da0:	48 85 ff             	test   %rdi,%rdi
   34da3:	74 5b                	je     34e00 <subhash_entry_destroy+0x60>
   34da5:	41 55                	push   %r13
   34da7:	41 54                	push   %r12
   34da9:	55                   	push   %rbp
   34daa:	53                   	push   %rbx
   34dab:	48 89 fb             	mov    %rdi,%rbx
   34dae:	48 83 ec 08          	sub    $0x8,%rsp
   34db2:	48 8b 47 10          	mov    0x10(%rdi),%rax
   34db6:	4c 8b 27             	mov    (%rdi),%r12
   34db9:	48 85 c0             	test   %rax,%rax
   34dbc:	74 15                	je     34dd3 <subhash_entry_destroy+0x33>
   34dbe:	48 8b 50 08          	mov    0x8(%rax),%rdx
   34dc2:	48 85 d2             	test   %rdx,%rdx
   34dc5:	74 0c                	je     34dd3 <subhash_entry_destroy+0x33>
   34dc7:	4c 89 e7             	mov    %r12,%rdi
   34dca:	48 8b 70 10          	mov    0x10(%rax),%rsi
   34dce:	ff d2                	callq  *%rdx
   34dd0:	4c 8b 23             	mov    (%rbx),%r12
   34dd3:	e8 38 ad fd ff       	callq  fb10 <__errno_location@plt>
   34dd8:	4c 89 e7             	mov    %r12,%rdi
   34ddb:	44 8b 28             	mov    (%rax),%r13d
   34dde:	48 89 c5             	mov    %rax,%rbp
   34de1:	e8 ca ac fd ff       	callq  fab0 <free@plt>
   34de6:	48 89 df             	mov    %rbx,%rdi
   34de9:	e8 c2 ac fd ff       	callq  fab0 <free@plt>
   34dee:	44 89 6d 00          	mov    %r13d,0x0(%rbp)
   34df2:	48 83 c4 08          	add    $0x8,%rsp
   34df6:	5b                   	pop    %rbx
   34df7:	5d                   	pop    %rbp
   34df8:	41 5c                	pop    %r12
   34dfa:	41 5d                	pop    %r13
   34dfc:	c3                   	retq   
   34dfd:	0f 1f 00             	nopl   (%rax)
   34e00:	c3                   	retq   

0000000000034e01 <.annobin_subhash_entry_destroy.end>:
   34e01:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34e08:	00 00 00 00 
   34e0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034e10 <subhash_entry_destructor>:
   34e10:	f3 0f 1e fa          	endbr64 
   34e14:	48 85 ff             	test   %rdi,%rdi
   34e17:	74 17                	je     34e30 <subhash_entry_destructor+0x20>
   34e19:	53                   	push   %rbx
   34e1a:	48 89 fb             	mov    %rdi,%rbx
   34e1d:	48 8b 3f             	mov    (%rdi),%rdi
   34e20:	e8 7b ff ff ff       	callq  34da0 <subhash_entry_destroy>
   34e25:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   34e2c:	5b                   	pop    %rbx
   34e2d:	c3                   	retq   
   34e2e:	66 90                	xchg   %ax,%ax
   34e30:	c3                   	retq   

0000000000034e31 <.annobin_subhash_entry_destructor.end>:
   34e31:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34e38:	00 00 00 00 
   34e3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034e40 <subhash_topic_match>:
   34e40:	f3 0f 1e fa          	endbr64 
   34e44:	41 55                	push   %r13
   34e46:	41 54                	push   %r12
   34e48:	55                   	push   %rbp
   34e49:	53                   	push   %rbx
   34e4a:	48 83 ec 08          	sub    $0x8,%rsp
   34e4e:	48 85 ff             	test   %rdi,%rdi
   34e51:	0f 95 c3             	setne  %bl
   34e54:	48 85 f6             	test   %rsi,%rsi
   34e57:	0f 95 c0             	setne  %al
   34e5a:	20 c3                	and    %al,%bl
   34e5c:	75 12                	jne    34e70 <subhash_topic_match+0x30>
   34e5e:	31 db                	xor    %ebx,%ebx
   34e60:	48 83 c4 08          	add    $0x8,%rsp
   34e64:	89 d8                	mov    %ebx,%eax
   34e66:	5b                   	pop    %rbx
   34e67:	5d                   	pop    %rbp
   34e68:	41 5c                	pop    %r12
   34e6a:	41 5d                	pop    %r13
   34e6c:	c3                   	retq   
   34e6d:	0f 1f 00             	nopl   (%rax)
   34e70:	48 89 fd             	mov    %rdi,%rbp
   34e73:	48 8b 3f             	mov    (%rdi),%rdi
   34e76:	49 89 f4             	mov    %rsi,%r12
   34e79:	e8 12 5b 00 00       	callq  3a990 <fzhashx_first>
   34e7e:	48 85 c0             	test   %rax,%rax
   34e81:	74 db                	je     34e5e <subhash_topic_match+0x1e>
   34e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   34e88:	4c 8b 28             	mov    (%rax),%r13
   34e8b:	4c 89 ef             	mov    %r13,%rdi
   34e8e:	e8 8d af fd ff       	callq  fe20 <strlen@plt>
   34e93:	4c 89 e6             	mov    %r12,%rsi
   34e96:	4c 89 ef             	mov    %r13,%rdi
   34e99:	48 63 d0             	movslq %eax,%rdx
   34e9c:	e8 0f ad fd ff       	callq  fbb0 <strncmp@plt>
   34ea1:	85 c0                	test   %eax,%eax
   34ea3:	74 bb                	je     34e60 <subhash_topic_match+0x20>
   34ea5:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   34ea9:	e8 42 5a 00 00       	callq  3a8f0 <fzhashx_next>
   34eae:	48 85 c0             	test   %rax,%rax
   34eb1:	75 d5                	jne    34e88 <subhash_topic_match+0x48>
   34eb3:	eb a9                	jmp    34e5e <subhash_topic_match+0x1e>

0000000000034eb5 <.annobin_subhash_subscribe.start>:
   34eb5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34ebc:	00 00 00 00 

0000000000034ec0 <subhash_subscribe>:
   34ec0:	f3 0f 1e fa          	endbr64 
   34ec4:	41 55                	push   %r13
   34ec6:	41 54                	push   %r12
   34ec8:	55                   	push   %rbp
   34ec9:	53                   	push   %rbx
   34eca:	48 83 ec 08          	sub    $0x8,%rsp
   34ece:	48 85 ff             	test   %rdi,%rdi
   34ed1:	0f 84 a9 00 00 00    	je     34f80 <subhash_subscribe+0xc0>
   34ed7:	48 89 f5             	mov    %rsi,%rbp
   34eda:	48 85 f6             	test   %rsi,%rsi
   34edd:	0f 84 9d 00 00 00    	je     34f80 <subhash_subscribe+0xc0>
   34ee3:	48 89 fb             	mov    %rdi,%rbx
   34ee6:	48 8b 3f             	mov    (%rdi),%rdi
   34ee9:	e8 22 56 00 00       	callq  3a510 <fzhashx_lookup>
   34eee:	48 85 c0             	test   %rax,%rax
   34ef1:	74 1d                	je     34f10 <subhash_subscribe+0x50>
   34ef3:	83 40 08 01          	addl   $0x1,0x8(%rax)
   34ef7:	45 31 e4             	xor    %r12d,%r12d
   34efa:	48 83 c4 08          	add    $0x8,%rsp
   34efe:	44 89 e0             	mov    %r12d,%eax
   34f01:	5b                   	pop    %rbx
   34f02:	5d                   	pop    %rbp
   34f03:	41 5c                	pop    %r12
   34f05:	41 5d                	pop    %r13
   34f07:	c3                   	retq   
   34f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34f0f:	00 
   34f10:	be 18 00 00 00       	mov    $0x18,%esi
   34f15:	bf 01 00 00 00       	mov    $0x1,%edi
   34f1a:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   34f20:	e8 eb b2 fd ff       	callq  10210 <calloc@plt>
   34f25:	49 89 c5             	mov    %rax,%r13
   34f28:	48 85 c0             	test   %rax,%rax
   34f2b:	74 cd                	je     34efa <subhash_subscribe+0x3a>
   34f2d:	48 89 ef             	mov    %rbp,%rdi
   34f30:	e8 6b ba fd ff       	callq  109a0 <strdup@plt>
   34f35:	49 89 45 00          	mov    %rax,0x0(%r13)
   34f39:	48 85 c0             	test   %rax,%rax
   34f3c:	74 58                	je     34f96 <subhash_subscribe+0xd6>
   34f3e:	48 8b 43 18          	mov    0x18(%rbx),%rax
   34f42:	48 85 c0             	test   %rax,%rax
   34f45:	74 11                	je     34f58 <subhash_subscribe+0x98>
   34f47:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   34f4b:	48 89 ef             	mov    %rbp,%rdi
   34f4e:	ff d0                	callq  *%rax
   34f50:	85 c0                	test   %eax,%eax
   34f52:	78 42                	js     34f96 <subhash_subscribe+0xd6>
   34f54:	49 89 5d 10          	mov    %rbx,0x10(%r13)
   34f58:	48 8b 3b             	mov    (%rbx),%rdi
   34f5b:	4c 89 ea             	mov    %r13,%rdx
   34f5e:	48 89 ee             	mov    %rbp,%rsi
   34f61:	45 31 e4             	xor    %r12d,%r12d
   34f64:	41 c7 45 08 01 00 00 	movl   $0x1,0x8(%r13)
   34f6b:	00 
   34f6c:	e8 6f 53 00 00       	callq  3a2e0 <fzhashx_update>
   34f71:	48 83 c4 08          	add    $0x8,%rsp
   34f75:	44 89 e0             	mov    %r12d,%eax
   34f78:	5b                   	pop    %rbx
   34f79:	5d                   	pop    %rbp
   34f7a:	41 5c                	pop    %r12
   34f7c:	41 5d                	pop    %r13
   34f7e:	c3                   	retq   
   34f7f:	90                   	nop
   34f80:	e8 8b ab fd ff       	callq  fb10 <__errno_location@plt>
   34f85:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   34f8b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   34f91:	e9 64 ff ff ff       	jmpq   34efa <subhash_subscribe+0x3a>
   34f96:	4c 89 ef             	mov    %r13,%rdi
   34f99:	e8 02 fe ff ff       	callq  34da0 <subhash_entry_destroy>
   34f9e:	e9 57 ff ff ff       	jmpq   34efa <subhash_subscribe+0x3a>

0000000000034fa3 <.annobin_subhash_subscribe.end>:
   34fa3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   34faa:	00 00 00 00 
   34fae:	66 90                	xchg   %ax,%ax

0000000000034fb0 <subhash_unsubscribe>:
   34fb0:	f3 0f 1e fa          	endbr64 
   34fb4:	41 55                	push   %r13
   34fb6:	41 54                	push   %r12
   34fb8:	55                   	push   %rbp
   34fb9:	53                   	push   %rbx
   34fba:	48 83 ec 08          	sub    $0x8,%rsp
   34fbe:	48 85 ff             	test   %rdi,%rdi
   34fc1:	0f 84 99 00 00 00    	je     35060 <subhash_unsubscribe+0xb0>
   34fc7:	49 89 f5             	mov    %rsi,%r13
   34fca:	48 85 f6             	test   %rsi,%rsi
   34fcd:	0f 84 8d 00 00 00    	je     35060 <subhash_unsubscribe+0xb0>
   34fd3:	48 89 fd             	mov    %rdi,%rbp
   34fd6:	48 8b 3f             	mov    (%rdi),%rdi
   34fd9:	e8 32 55 00 00       	callq  3a510 <fzhashx_lookup>
   34fde:	49 89 c4             	mov    %rax,%r12
   34fe1:	48 85 c0             	test   %rax,%rax
   34fe4:	0f 84 88 00 00 00    	je     35072 <subhash_unsubscribe+0xc2>
   34fea:	48 8b 45 08          	mov    0x8(%rbp),%rax
   34fee:	41 8b 5c 24 08       	mov    0x8(%r12),%ebx
   34ff3:	48 85 c0             	test   %rax,%rax
   34ff6:	74 05                	je     34ffd <subhash_unsubscribe+0x4d>
   34ff8:	83 fb 01             	cmp    $0x1,%ebx
   34ffb:	74 23                	je     35020 <subhash_unsubscribe+0x70>
   34ffd:	83 eb 01             	sub    $0x1,%ebx
   35000:	41 89 5c 24 08       	mov    %ebx,0x8(%r12)
   35005:	74 3e                	je     35045 <subhash_unsubscribe+0x95>
   35007:	31 db                	xor    %ebx,%ebx
   35009:	48 83 c4 08          	add    $0x8,%rsp
   3500d:	89 d8                	mov    %ebx,%eax
   3500f:	5b                   	pop    %rbx
   35010:	5d                   	pop    %rbp
   35011:	41 5c                	pop    %r12
   35013:	41 5d                	pop    %r13
   35015:	c3                   	retq   
   35016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3501d:	00 00 00 
   35020:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   35024:	4c 89 ef             	mov    %r13,%rdi
   35027:	ff d0                	callq  *%rax
   35029:	85 c0                	test   %eax,%eax
   3502b:	78 57                	js     35084 <subhash_unsubscribe+0xd4>
   3502d:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   35034:	00 00 
   35036:	41 8b 5c 24 08       	mov    0x8(%r12),%ebx
   3503b:	83 eb 01             	sub    $0x1,%ebx
   3503e:	41 89 5c 24 08       	mov    %ebx,0x8(%r12)
   35043:	75 c2                	jne    35007 <subhash_unsubscribe+0x57>
   35045:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   35049:	4c 89 ee             	mov    %r13,%rsi
   3504c:	e8 7f 53 00 00       	callq  3a3d0 <fzhashx_delete>
   35051:	48 83 c4 08          	add    $0x8,%rsp
   35055:	89 d8                	mov    %ebx,%eax
   35057:	5b                   	pop    %rbx
   35058:	5d                   	pop    %rbp
   35059:	41 5c                	pop    %r12
   3505b:	41 5d                	pop    %r13
   3505d:	c3                   	retq   
   3505e:	66 90                	xchg   %ax,%ax
   35060:	e8 ab aa fd ff       	callq  fb10 <__errno_location@plt>
   35065:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3506a:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   35070:	eb 97                	jmp    35009 <subhash_unsubscribe+0x59>
   35072:	e8 99 aa fd ff       	callq  fb10 <__errno_location@plt>
   35077:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3507c:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   35082:	eb 85                	jmp    35009 <subhash_unsubscribe+0x59>
   35084:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   35089:	e9 7b ff ff ff       	jmpq   35009 <subhash_unsubscribe+0x59>

000000000003508e <.annobin_subhash_set_subscribe.start>:
   3508e:	66 90                	xchg   %ax,%ax

0000000000035090 <subhash_set_subscribe>:
   35090:	f3 0f 1e fa          	endbr64 
   35094:	48 85 ff             	test   %rdi,%rdi
   35097:	74 08                	je     350a1 <subhash_set_subscribe+0x11>
   35099:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   3509d:	48 89 57 20          	mov    %rdx,0x20(%rdi)
   350a1:	c3                   	retq   

00000000000350a2 <.annobin_subhash_set_subscribe.end>:
   350a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   350a9:	00 00 00 00 
   350ad:	0f 1f 00             	nopl   (%rax)

00000000000350b0 <subhash_set_unsubscribe>:
   350b0:	f3 0f 1e fa          	endbr64 
   350b4:	48 85 ff             	test   %rdi,%rdi
   350b7:	74 08                	je     350c1 <subhash_set_unsubscribe+0x11>
   350b9:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   350bd:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   350c1:	c3                   	retq   

00000000000350c2 <.annobin_subhash_renew.start>:
   350c2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   350c9:	00 00 00 00 
   350cd:	0f 1f 00             	nopl   (%rax)

00000000000350d0 <subhash_renew>:
   350d0:	f3 0f 1e fa          	endbr64 
   350d4:	48 85 ff             	test   %rdi,%rdi
   350d7:	74 47                	je     35120 <subhash_renew+0x50>
   350d9:	53                   	push   %rbx
   350da:	48 89 fb             	mov    %rdi,%rbx
   350dd:	48 8b 3f             	mov    (%rdi),%rdi
   350e0:	e8 ab 58 00 00       	callq  3a990 <fzhashx_first>
   350e5:	48 85 c0             	test   %rax,%rax
   350e8:	75 13                	jne    350fd <subhash_renew+0x2d>
   350ea:	eb 2c                	jmp    35118 <subhash_renew+0x48>
   350ec:	0f 1f 40 00          	nopl   0x0(%rax)
   350f0:	48 8b 3b             	mov    (%rbx),%rdi
   350f3:	e8 f8 57 00 00       	callq  3a8f0 <fzhashx_next>
   350f8:	48 85 c0             	test   %rax,%rax
   350fb:	74 1b                	je     35118 <subhash_renew+0x48>
   350fd:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   35101:	48 8b 38             	mov    (%rax),%rdi
   35104:	ff 53 18             	callq  *0x18(%rbx)
   35107:	85 c0                	test   %eax,%eax
   35109:	79 e5                	jns    350f0 <subhash_renew+0x20>
   3510b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35110:	5b                   	pop    %rbx
   35111:	c3                   	retq   
   35112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35118:	31 c0                	xor    %eax,%eax
   3511a:	5b                   	pop    %rbx
   3511b:	c3                   	retq   
   3511c:	0f 1f 40 00          	nopl   0x0(%rax)
   35120:	31 c0                	xor    %eax,%eax
   35122:	c3                   	retq   

0000000000035123 <.annobin_subhash_destroy.start>:
   35123:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3512a:	00 00 00 00 
   3512e:	66 90                	xchg   %ax,%ax

0000000000035130 <subhash_destroy>:
   35130:	f3 0f 1e fa          	endbr64 
   35134:	48 85 ff             	test   %rdi,%rdi
   35137:	74 2f                	je     35168 <subhash_destroy+0x38>
   35139:	41 54                	push   %r12
   3513b:	55                   	push   %rbp
   3513c:	53                   	push   %rbx
   3513d:	48 89 fb             	mov    %rdi,%rbx
   35140:	e8 cb a9 fd ff       	callq  fb10 <__errno_location@plt>
   35145:	48 89 df             	mov    %rbx,%rdi
   35148:	44 8b 20             	mov    (%rax),%r12d
   3514b:	48 89 c5             	mov    %rax,%rbp
   3514e:	e8 0d 4f 00 00       	callq  3a060 <fzhashx_destroy>
   35153:	48 89 df             	mov    %rbx,%rdi
   35156:	e8 55 a9 fd ff       	callq  fab0 <free@plt>
   3515b:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3515f:	5b                   	pop    %rbx
   35160:	5d                   	pop    %rbp
   35161:	41 5c                	pop    %r12
   35163:	c3                   	retq   
   35164:	0f 1f 40 00          	nopl   0x0(%rax)
   35168:	c3                   	retq   

0000000000035169 <.annobin_subhash_create.start>:
   35169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000035170 <subhash_create>:
   35170:	f3 0f 1e fa          	endbr64 
   35174:	53                   	push   %rbx
   35175:	be 28 00 00 00       	mov    $0x28,%esi
   3517a:	bf 01 00 00 00       	mov    $0x1,%edi
   3517f:	e8 8c b0 fd ff       	callq  10210 <calloc@plt>
   35184:	48 89 c3             	mov    %rax,%rbx
   35187:	48 85 c0             	test   %rax,%rax
   3518a:	74 1c                	je     351a8 <subhash_create+0x38>
   3518c:	e8 df 4d 00 00       	callq  39f70 <fzhashx_new>
   35191:	48 89 03             	mov    %rax,(%rbx)
   35194:	48 85 c0             	test   %rax,%rax
   35197:	74 17                	je     351b0 <subhash_create+0x40>
   35199:	48 8d 35 70 fc ff ff 	lea    -0x390(%rip),%rsi        # 34e10 <subhash_entry_destructor>
   351a0:	48 89 c7             	mov    %rax,%rdi
   351a3:	e8 78 59 00 00       	callq  3ab20 <fzhashx_set_destructor>
   351a8:	48 89 d8             	mov    %rbx,%rax
   351ab:	5b                   	pop    %rbx
   351ac:	c3                   	retq   
   351ad:	0f 1f 00             	nopl   (%rax)
   351b0:	48 89 df             	mov    %rbx,%rdi
   351b3:	31 db                	xor    %ebx,%ebx
   351b5:	e8 76 ff ff ff       	callq  35130 <subhash_destroy>
   351ba:	eb ec                	jmp    351a8 <subhash_create+0x38>

00000000000351bc <.annobin_subhash.c_end>:
   351bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000351c0 <timeout_cb>:
   351c0:	f3 0f 1e fa          	endbr64 
   351c4:	53                   	push   %rbx
   351c5:	48 8b 79 10          	mov    0x10(%rcx),%rdi
   351c9:	48 89 f3             	mov    %rsi,%rbx
   351cc:	e8 ff a8 fd ff       	callq  fad0 <flux_watcher_start@plt>
   351d1:	48 89 df             	mov    %rbx,%rdi
   351d4:	5b                   	pop    %rbx
   351d5:	e9 a6 b5 fd ff       	jmpq   10780 <flux_watcher_destroy@plt>

00000000000351da <.annobin_timeout_cb.end>:
   351da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000351e0 <usock_client_poll>:
   351e0:	48 83 ec 18          	sub    $0x18,%rsp
  return __builtin___memset_chk (__dest, __ch, __len,
   351e4:	31 d2                	xor    %edx,%edx
   351e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   351ed:	00 00 
   351ef:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   351f4:	31 c0                	xor    %eax,%eax
   351f6:	48 89 e0             	mov    %rsp,%rax
   351f9:	66 89 54 24 06       	mov    %dx,0x6(%rsp)
   351fe:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   35203:	89 3c 24             	mov    %edi,(%rsp)
   35206:	48 89 c7             	mov    %rax,%rdi
   35209:	66 89 74 24 04       	mov    %si,0x4(%rsp)
   3520e:	be 01 00 00 00       	mov    $0x1,%esi
   35213:	e8 68 b4 fd ff       	callq  10680 <poll@plt>
   35218:	85 c0                	test   %eax,%eax
   3521a:	78 2e                	js     3524a <usock_client_poll+0x6a>
   3521c:	31 c0                	xor    %eax,%eax
   3521e:	f6 44 24 06 38       	testb  $0x38,0x6(%rsp)
   35223:	74 10                	je     35235 <usock_client_poll+0x55>
   35225:	e8 e6 a8 fd ff       	callq  fb10 <__errno_location@plt>
   3522a:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
   35230:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35235:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   3523a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   35241:	00 00 
   35243:	75 0c                	jne    35251 <usock_client_poll+0x71>
   35245:	48 83 c4 18          	add    $0x18,%rsp
   35249:	c3                   	retq   
   3524a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3524f:	eb e4                	jmp    35235 <usock_client_poll+0x55>
   35251:	e8 fa ab fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000035256 <.annobin_usock_client_poll.end>:
   35256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3525d:	00 00 00 

0000000000035260 <usock_conn_get_cred>:
   35260:	f3 0f 1e fa          	endbr64 
   35264:	48 89 f8             	mov    %rdi,%rax
   35267:	c3                   	retq   

0000000000035268 <.annobin_usock_conn_get_cred.end>:
   35268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3526f:	00 

0000000000035270 <usock_conn_get_uuid>:
   35270:	f3 0f 1e fa          	endbr64 
   35274:	48 8d 87 a0 20 00 00 	lea    0x20a0(%rdi),%rax
   3527b:	48 85 ff             	test   %rdi,%rdi
   3527e:	ba 00 00 00 00       	mov    $0x0,%edx
   35283:	48 0f 44 c2          	cmove  %rdx,%rax
   35287:	c3                   	retq   

0000000000035288 <.annobin_usock_conn_get_uuid.end>:
   35288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3528f:	00 

0000000000035290 <usock_conn_set_error_cb>:
   35290:	f3 0f 1e fa          	endbr64 
   35294:	48 85 ff             	test   %rdi,%rdi
   35297:	74 0e                	je     352a7 <usock_conn_set_error_cb+0x17>
   35299:	48 89 b7 70 20 00 00 	mov    %rsi,0x2070(%rdi)
   352a0:	48 89 97 78 20 00 00 	mov    %rdx,0x2078(%rdi)
   352a7:	c3                   	retq   

00000000000352a8 <.annobin_usock_conn_set_close_cb.start>:
   352a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   352af:	00 

00000000000352b0 <usock_conn_set_close_cb>:
   352b0:	f3 0f 1e fa          	endbr64 
   352b4:	48 85 ff             	test   %rdi,%rdi
   352b7:	74 0e                	je     352c7 <usock_conn_set_close_cb+0x17>
   352b9:	48 89 b7 60 20 00 00 	mov    %rsi,0x2060(%rdi)
   352c0:	48 89 97 68 20 00 00 	mov    %rdx,0x2068(%rdi)
   352c7:	c3                   	retq   

00000000000352c8 <.annobin_usock_conn_set_close_cb.end>:
   352c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   352cf:	00 

00000000000352d0 <usock_conn_set_recv_cb>:
   352d0:	f3 0f 1e fa          	endbr64 
   352d4:	48 85 ff             	test   %rdi,%rdi
   352d7:	74 0e                	je     352e7 <usock_conn_set_recv_cb+0x17>
   352d9:	48 89 b7 80 20 00 00 	mov    %rsi,0x2080(%rdi)
   352e0:	48 89 97 88 20 00 00 	mov    %rdx,0x2088(%rdi)
   352e7:	c3                   	retq   

00000000000352e8 <.annobin_usock_conn_aux_get.start>:
   352e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   352ef:	00 

00000000000352f0 <usock_conn_aux_get>:
   352f0:	f3 0f 1e fa          	endbr64 
   352f4:	48 85 ff             	test   %rdi,%rdi
   352f7:	74 0f                	je     35308 <usock_conn_aux_get+0x18>
   352f9:	48 8b bf c8 20 00 00 	mov    0x20c8(%rdi),%rdi
   35300:	e9 1b 45 fe ff       	jmpq   19820 <aux_get>
   35305:	0f 1f 00             	nopl   (%rax)
   35308:	48 83 ec 08          	sub    $0x8,%rsp
   3530c:	e8 ff a7 fd ff       	callq  fb10 <__errno_location@plt>
   35311:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   35317:	31 c0                	xor    %eax,%eax
   35319:	48 83 c4 08          	add    $0x8,%rsp
   3531d:	c3                   	retq   

000000000003531e <.annobin_usock_conn_aux_get.end>:
   3531e:	66 90                	xchg   %ax,%ax

0000000000035320 <usock_conn_aux_set>:
   35320:	f3 0f 1e fa          	endbr64 
   35324:	48 85 ff             	test   %rdi,%rdi
   35327:	74 0c                	je     35335 <usock_conn_aux_set+0x15>
   35329:	48 81 c7 c8 20 00 00 	add    $0x20c8,%rdi
   35330:	e9 6b 45 fe ff       	jmpq   198a0 <aux_set>
   35335:	48 83 ec 08          	sub    $0x8,%rsp
   35339:	e8 d2 a7 fd ff       	callq  fb10 <__errno_location@plt>
   3533e:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   35344:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35349:	48 83 c4 08          	add    $0x8,%rsp
   3534d:	c3                   	retq   

000000000003534e <.annobin_usock_conn_aux_set.end>:
   3534e:	66 90                	xchg   %ax,%ax

0000000000035350 <usock_conn_send>:
   35350:	f3 0f 1e fa          	endbr64 
   35354:	55                   	push   %rbp
   35355:	53                   	push   %rbx
   35356:	48 83 ec 08          	sub    $0x8,%rsp
   3535a:	48 85 ff             	test   %rdi,%rdi
   3535d:	74 41                	je     353a0 <usock_conn_send+0x50>
   3535f:	48 89 f5             	mov    %rsi,%rbp
   35362:	48 85 f6             	test   %rsi,%rsi
   35365:	74 39                	je     353a0 <usock_conn_send+0x50>
   35367:	48 89 fb             	mov    %rdi,%rbx
   3536a:	48 89 f7             	mov    %rsi,%rdi
   3536d:	e8 0e b2 fd ff       	callq  10580 <flux_msg_incref@plt>
   35372:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   35379:	48 89 c6             	mov    %rax,%rsi
   3537c:	e8 df 5b 00 00       	callq  3af60 <fzlist_append>
   35381:	85 c0                	test   %eax,%eax
   35383:	78 2d                	js     353b2 <usock_conn_send+0x62>
   35385:	48 8b bb 38 10 00 00 	mov    0x1038(%rbx),%rdi
   3538c:	e8 3f a7 fd ff       	callq  fad0 <flux_watcher_start@plt>
   35391:	31 c0                	xor    %eax,%eax
   35393:	48 83 c4 08          	add    $0x8,%rsp
   35397:	5b                   	pop    %rbx
   35398:	5d                   	pop    %rbp
   35399:	c3                   	retq   
   3539a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   353a0:	e8 6b a7 fd ff       	callq  fb10 <__errno_location@plt>
   353a5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   353ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   353b0:	eb e1                	jmp    35393 <usock_conn_send+0x43>
   353b2:	48 89 ef             	mov    %rbp,%rdi
   353b5:	e8 c6 b0 fd ff       	callq  10480 <flux_msg_decref@plt>
   353ba:	e8 51 a7 fd ff       	callq  fb10 <__errno_location@plt>
   353bf:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   353c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   353ca:	eb c7                	jmp    35393 <usock_conn_send+0x43>

00000000000353cc <.annobin_usock_conn_reject.start>:
   353cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000353d0 <usock_conn_reject>:
   353d0:	f3 0f 1e fa          	endbr64 
   353d4:	48 83 ec 18          	sub    $0x18,%rsp
   353d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   353df:	00 00 
   353e1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   353e6:	31 c0                	xor    %eax,%eax
   353e8:	48 85 ff             	test   %rdi,%rdi
   353eb:	74 24                	je     35411 <usock_conn_reject+0x41>
   353ed:	85 f6                	test   %esi,%esi
   353ef:	b8 01 00 00 00       	mov    $0x1,%eax
   353f4:	8b bf 30 10 00 00    	mov    0x1030(%rdi),%edi
   353fa:	ba 01 00 00 00       	mov    $0x1,%edx
   353ff:	0f 44 f0             	cmove  %eax,%esi
   35402:	40 88 74 24 07       	mov    %sil,0x7(%rsp)
   35407:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
   3540c:	e8 ef a8 fd ff       	callq  fd00 <write@plt>
   35411:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   35416:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3541d:	00 00 
   3541f:	75 05                	jne    35426 <usock_conn_reject+0x56>
   35421:	48 83 c4 18          	add    $0x18,%rsp
   35425:	c3                   	retq   
   35426:	e8 25 aa fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003542b <.annobin_usock_conn_destroy.start>:
   3542b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000035430 <usock_conn_destroy>:
   35430:	f3 0f 1e fa          	endbr64 
   35434:	48 85 ff             	test   %rdi,%rdi
   35437:	0f 84 f3 00 00 00    	je     35530 <usock_conn_destroy+0x100>
   3543d:	41 54                	push   %r12
   3543f:	55                   	push   %rbp
   35440:	53                   	push   %rbx
   35441:	48 89 fb             	mov    %rdi,%rbx
   35444:	e8 c7 a6 fd ff       	callq  fb10 <__errno_location@plt>
   35449:	48 89 c5             	mov    %rax,%rbp
   3544c:	44 8b 20             	mov    (%rax),%r12d
   3544f:	48 8b 83 60 20 00 00 	mov    0x2060(%rbx),%rax
   35456:	48 85 c0             	test   %rax,%rax
   35459:	74 0c                	je     35467 <usock_conn_destroy+0x37>
   3545b:	48 8b b3 68 20 00 00 	mov    0x2068(%rbx),%rsi
   35462:	48 89 df             	mov    %rbx,%rdi
   35465:	ff d0                	callq  *%rax
   35467:	48 8d bb c8 20 00 00 	lea    0x20c8(%rbx),%rdi
   3546e:	e8 3d 46 fe ff       	callq  19ab0 <aux_destroy>
   35473:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   35477:	e8 04 b3 fd ff       	callq  10780 <flux_watcher_destroy@plt>
   3547c:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   35480:	e8 6b eb ff ff       	callq  33ff0 <iobuf_clean>
   35485:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   3548c:	48 85 ff             	test   %rdi,%rdi
   3548f:	75 7e                	jne    3550f <usock_conn_destroy+0xdf>
   35491:	48 8b bb 38 10 00 00 	mov    0x1038(%rbx),%rdi
   35498:	e8 e3 b2 fd ff       	callq  10780 <flux_watcher_destroy@plt>
   3549d:	48 8d bb 40 10 00 00 	lea    0x1040(%rbx),%rdi
   354a4:	e8 47 eb ff ff       	callq  33ff0 <iobuf_clean>
   354a9:	48 8b 83 d0 20 00 00 	mov    0x20d0(%rbx),%rax
   354b0:	48 85 c0             	test   %rax,%rax
   354b3:	74 0c                	je     354c1 <usock_conn_destroy+0x91>
   354b5:	48 8b 78 18          	mov    0x18(%rax),%rdi
   354b9:	48 89 de             	mov    %rbx,%rsi
   354bc:	e8 8f 5d 00 00       	callq  3b250 <fzlist_remove>
   354c1:	f6 83 dc 20 00 00 01 	testb  $0x1,0x20dc(%rbx)
   354c8:	74 1f                	je     354e9 <usock_conn_destroy+0xb9>
   354ca:	8b 43 08             	mov    0x8(%rbx),%eax
   354cd:	85 c0                	test   %eax,%eax
   354cf:	78 0a                	js     354db <usock_conn_destroy+0xab>
   354d1:	89 c7                	mov    %eax,%edi
   354d3:	e8 d8 ab fd ff       	callq  100b0 <close@plt>
   354d8:	8b 43 08             	mov    0x8(%rbx),%eax
   354db:	8b bb 30 10 00 00    	mov    0x1030(%rbx),%edi
   354e1:	39 c7                	cmp    %eax,%edi
   354e3:	74 04                	je     354e9 <usock_conn_destroy+0xb9>
   354e5:	85 ff                	test   %edi,%edi
   354e7:	79 4f                	jns    35538 <usock_conn_destroy+0x108>
   354e9:	48 89 df             	mov    %rbx,%rdi
   354ec:	e8 bf a5 fd ff       	callq  fab0 <free@plt>
   354f1:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   354f5:	5b                   	pop    %rbx
   354f6:	5d                   	pop    %rbp
   354f7:	41 5c                	pop    %r12
   354f9:	c3                   	retq   
   354fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35500:	48 89 c7             	mov    %rax,%rdi
   35503:	e8 78 af fd ff       	callq  10480 <flux_msg_decref@plt>
   35508:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   3550f:	e8 3c 5c 00 00       	callq  3b150 <fzlist_pop>
   35514:	48 85 c0             	test   %rax,%rax
   35517:	75 e7                	jne    35500 <usock_conn_destroy+0xd0>
   35519:	48 8d bb 58 20 00 00 	lea    0x2058(%rbx),%rdi
   35520:	e8 ab 5e 00 00       	callq  3b3d0 <fzlist_destroy>
   35525:	e9 67 ff ff ff       	jmpq   35491 <usock_conn_destroy+0x61>
   3552a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35530:	c3                   	retq   
   35531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35538:	e8 73 ab fd ff       	callq  100b0 <close@plt>
   3553d:	eb aa                	jmp    354e9 <usock_conn_destroy+0xb9>

000000000003553f <.annobin_conn_io_error.start>:
   3553f:	90                   	nop

0000000000035540 <conn_io_error>:
   35540:	48 85 ff             	test   %rdi,%rdi
   35543:	74 1b                	je     35560 <conn_io_error+0x20>
   35545:	48 8b 87 70 20 00 00 	mov    0x2070(%rdi),%rax
   3554c:	48 85 c0             	test   %rax,%rax
   3554f:	74 17                	je     35568 <conn_io_error+0x28>
   35551:	48 8b 97 78 20 00 00 	mov    0x2078(%rdi),%rdx
   35558:	ff e0                	jmpq   *%rax
   3555a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35560:	c3                   	retq   
   35561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35568:	e9 c3 fe ff ff       	jmpq   35430 <usock_conn_destroy>

000000000003556d <.annobin_conn_io_error.end>:
   3556d:	0f 1f 00             	nopl   (%rax)

0000000000035570 <usock_conn_accept>:
   35570:	f3 0f 1e fa          	endbr64 
   35574:	53                   	push   %rbx
   35575:	48 83 ec 10          	sub    $0x10,%rsp
   35579:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35580:	00 00 
   35582:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   35587:	31 c0                	xor    %eax,%eax
   35589:	48 85 ff             	test   %rdi,%rdi
   3558c:	74 05                	je     35593 <usock_conn_accept+0x23>
   3558e:	48 85 f6             	test   %rsi,%rsi
   35591:	75 1d                	jne    355b0 <usock_conn_accept+0x40>
   35593:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   35598:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3559f:	00 00 
   355a1:	75 79                	jne    3561c <usock_conn_accept+0xac>
   355a3:	48 83 c4 10          	add    $0x10,%rsp
   355a7:	5b                   	pop    %rbx
   355a8:	c3                   	retq   
   355a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   355b0:	48 8b 06             	mov    (%rsi),%rax
   355b3:	48 89 fb             	mov    %rdi,%rbx
   355b6:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
   355bb:	ba 01 00 00 00       	mov    $0x1,%edx
   355c0:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   355c5:	48 89 07             	mov    %rax,(%rdi)
   355c8:	8b bf 30 10 00 00    	mov    0x1030(%rdi),%edi
   355ce:	e8 2d a7 fd ff       	callq  fd00 <write@plt>
   355d3:	85 c0                	test   %eax,%eax
   355d5:	78 31                	js     35608 <usock_conn_accept+0x98>
   355d7:	8b 7b 08             	mov    0x8(%rbx),%edi
   355da:	e8 01 6c fe ff       	callq  1c1e0 <fd_set_nonblocking>
   355df:	85 c0                	test   %eax,%eax
   355e1:	78 25                	js     35608 <usock_conn_accept+0x98>
   355e3:	8b bb 30 10 00 00    	mov    0x1030(%rbx),%edi
   355e9:	39 7b 08             	cmp    %edi,0x8(%rbx)
   355ec:	74 09                	je     355f7 <usock_conn_accept+0x87>
   355ee:	e8 ed 6b fe ff       	callq  1c1e0 <fd_set_nonblocking>
   355f3:	85 c0                	test   %eax,%eax
   355f5:	78 11                	js     35608 <usock_conn_accept+0x98>
   355f7:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   355fb:	e8 d0 a4 fd ff       	callq  fad0 <flux_watcher_start@plt>
   35600:	eb 91                	jmp    35593 <usock_conn_accept+0x23>
   35602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35608:	e8 03 a5 fd ff       	callq  fb10 <__errno_location@plt>
   3560d:	48 89 df             	mov    %rbx,%rdi
   35610:	8b 30                	mov    (%rax),%esi
   35612:	e8 29 ff ff ff       	callq  35540 <conn_io_error>
   35617:	e9 77 ff ff ff       	jmpq   35593 <usock_conn_accept+0x23>
   3561c:	e8 2f a8 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000035621 <.annobin_conn_write_cb.start>:
   35621:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35628:	00 00 00 00 
   3562c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000035630 <conn_write_cb>:
   35630:	f3 0f 1e fa          	endbr64 
   35634:	53                   	push   %rbx
   35635:	48 89 cb             	mov    %rcx,%rbx
   35638:	f6 c2 04             	test   $0x4,%dl
   3563b:	75 4b                	jne    35688 <conn_write_cb+0x58>
   3563d:	83 e2 02             	and    $0x2,%edx
   35640:	75 06                	jne    35648 <conn_write_cb+0x18>
   35642:	5b                   	pop    %rbx
   35643:	c3                   	retq   
   35644:	0f 1f 40 00          	nopl   0x0(%rax)
   35648:	48 8b b9 58 20 00 00 	mov    0x2058(%rcx),%rdi
   3564f:	e8 4c 58 00 00       	callq  3aea0 <fzlist_head>
   35654:	48 85 c0             	test   %rax,%rax
   35657:	74 e9                	je     35642 <conn_write_cb+0x12>
   35659:	8b bb 30 10 00 00    	mov    0x1030(%rbx),%edi
   3565f:	48 8d 93 40 10 00 00 	lea    0x1040(%rbx),%rdx
   35666:	48 89 c6             	mov    %rax,%rsi
   35669:	e8 d2 e9 ff ff       	callq  34040 <sendfd>
   3566e:	85 c0                	test   %eax,%eax
   35670:	79 56                	jns    356c8 <conn_write_cb+0x98>
   35672:	e8 99 a4 fd ff       	callq  fb10 <__errno_location@plt>
   35677:	8b 30                	mov    (%rax),%esi
   35679:	83 fe 20             	cmp    $0x20,%esi
   3567c:	74 2a                	je     356a8 <conn_write_cb+0x78>
   3567e:	83 fe 0b             	cmp    $0xb,%esi
   35681:	75 15                	jne    35698 <conn_write_cb+0x68>
   35683:	eb bd                	jmp    35642 <conn_write_cb+0x12>
   35685:	0f 1f 00             	nopl   (%rax)
   35688:	e8 83 a4 fd ff       	callq  fb10 <__errno_location@plt>
   3568d:	be 05 00 00 00       	mov    $0x5,%esi
   35692:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
   35698:	48 89 df             	mov    %rbx,%rdi
   3569b:	5b                   	pop    %rbx
   3569c:	e9 9f fe ff ff       	jmpq   35540 <conn_io_error>
   356a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   356a8:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   356af:	e8 9c 5a 00 00       	callq  3b150 <fzlist_pop>
   356b4:	48 85 c0             	test   %rax,%rax
   356b7:	74 3d                	je     356f6 <conn_write_cb+0xc6>
   356b9:	48 89 c7             	mov    %rax,%rdi
   356bc:	e8 bf ad fd ff       	callq  10480 <flux_msg_decref@plt>
   356c1:	eb e5                	jmp    356a8 <conn_write_cb+0x78>
   356c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   356c8:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   356cf:	e8 7c 5a 00 00       	callq  3b150 <fzlist_pop>
   356d4:	48 85 c0             	test   %rax,%rax
   356d7:	74 08                	je     356e1 <conn_write_cb+0xb1>
   356d9:	48 89 c7             	mov    %rax,%rdi
   356dc:	e8 9f ad fd ff       	callq  10480 <flux_msg_decref@plt>
   356e1:	48 8b bb 58 20 00 00 	mov    0x2058(%rbx),%rdi
   356e8:	e8 43 5d 00 00       	callq  3b430 <fzlist_size>
   356ed:	48 85 c0             	test   %rax,%rax
   356f0:	0f 85 4c ff ff ff    	jne    35642 <conn_write_cb+0x12>
   356f6:	48 8b bb 38 10 00 00 	mov    0x1038(%rbx),%rdi
   356fd:	5b                   	pop    %rbx
   356fe:	e9 2d b1 fd ff       	jmpq   10830 <flux_watcher_stop@plt>

0000000000035703 <.annobin_conn_read_cb.start>:
   35703:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3570a:	00 00 00 00 
   3570e:	66 90                	xchg   %ax,%ax

0000000000035710 <conn_read_cb>:
   35710:	f3 0f 1e fa          	endbr64 
   35714:	55                   	push   %rbp
   35715:	53                   	push   %rbx
   35716:	48 89 cb             	mov    %rcx,%rbx
   35719:	48 83 ec 08          	sub    $0x8,%rsp
   3571d:	f6 c2 04             	test   $0x4,%dl
   35720:	75 5e                	jne    35780 <conn_read_cb+0x70>
   35722:	83 e2 01             	and    $0x1,%edx
   35725:	75 09                	jne    35730 <conn_read_cb+0x20>
   35727:	48 83 c4 08          	add    $0x8,%rsp
   3572b:	5b                   	pop    %rbx
   3572c:	5d                   	pop    %rbp
   3572d:	c3                   	retq   
   3572e:	66 90                	xchg   %ax,%ax
   35730:	8b 79 08             	mov    0x8(%rcx),%edi
   35733:	48 8d 71 18          	lea    0x18(%rcx),%rsi
   35737:	e8 04 eb ff ff       	callq  34240 <recvfd>
   3573c:	48 89 c5             	mov    %rax,%rbp
   3573f:	48 85 c0             	test   %rax,%rax
   35742:	74 5c                	je     357a0 <conn_read_cb+0x90>
   35744:	48 89 de             	mov    %rbx,%rsi
   35747:	48 89 c7             	mov    %rax,%rdi
   3574a:	e8 61 d1 ff ff       	callq  328b0 <auth_init_message>
   3574f:	85 c0                	test   %eax,%eax
   35751:	78 65                	js     357b8 <conn_read_cb+0xa8>
   35753:	48 8b 83 80 20 00 00 	mov    0x2080(%rbx),%rax
   3575a:	48 85 c0             	test   %rax,%rax
   3575d:	74 0f                	je     3576e <conn_read_cb+0x5e>
   3575f:	48 8b 93 88 20 00 00 	mov    0x2088(%rbx),%rdx
   35766:	48 89 ee             	mov    %rbp,%rsi
   35769:	48 89 df             	mov    %rbx,%rdi
   3576c:	ff d0                	callq  *%rax
   3576e:	48 83 c4 08          	add    $0x8,%rsp
   35772:	48 89 ef             	mov    %rbp,%rdi
   35775:	5b                   	pop    %rbx
   35776:	5d                   	pop    %rbp
   35777:	e9 24 ad fd ff       	jmpq   104a0 <flux_msg_destroy@plt>
   3577c:	0f 1f 40 00          	nopl   0x0(%rax)
   35780:	e8 8b a3 fd ff       	callq  fb10 <__errno_location@plt>
   35785:	be 05 00 00 00       	mov    $0x5,%esi
   3578a:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
   35790:	48 83 c4 08          	add    $0x8,%rsp
   35794:	48 89 df             	mov    %rbx,%rdi
   35797:	5b                   	pop    %rbx
   35798:	5d                   	pop    %rbp
   35799:	e9 a2 fd ff ff       	jmpq   35540 <conn_io_error>
   3579e:	66 90                	xchg   %ax,%ax
   357a0:	e8 6b a3 fd ff       	callq  fb10 <__errno_location@plt>
   357a5:	8b 30                	mov    (%rax),%esi
   357a7:	83 fe 0b             	cmp    $0xb,%esi
   357aa:	75 e4                	jne    35790 <conn_read_cb+0x80>
   357ac:	e9 76 ff ff ff       	jmpq   35727 <conn_read_cb+0x17>
   357b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   357b8:	e8 53 a3 fd ff       	callq  fb10 <__errno_location@plt>
   357bd:	8b 30                	mov    (%rax),%esi
   357bf:	eb cf                	jmp    35790 <conn_read_cb+0x80>

00000000000357c1 <.annobin_conn_read_cb.end>:
   357c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   357c8:	00 00 00 00 
   357cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000357d0 <usock_server_set_acceptor>:
   357d0:	f3 0f 1e fa          	endbr64 
   357d4:	48 85 ff             	test   %rdi,%rdi
   357d7:	74 08                	je     357e1 <usock_server_set_acceptor+0x11>
   357d9:	48 89 77 20          	mov    %rsi,0x20(%rdi)
   357dd:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   357e1:	c3                   	retq   

00000000000357e2 <.annobin_usock_server_destroy.start>:
   357e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   357e9:	00 00 00 00 
   357ed:	0f 1f 00             	nopl   (%rax)

00000000000357f0 <usock_server_destroy>:
   357f0:	f3 0f 1e fa          	endbr64 
   357f4:	48 85 ff             	test   %rdi,%rdi
   357f7:	0f 84 9b 00 00 00    	je     35898 <usock_server_destroy+0xa8>
   357fd:	41 54                	push   %r12
   357ff:	55                   	push   %rbp
   35800:	53                   	push   %rbx
   35801:	48 89 fb             	mov    %rdi,%rbx
   35804:	e8 07 a3 fd ff       	callq  fb10 <__errno_location@plt>
   35809:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   3580d:	48 89 c5             	mov    %rax,%rbp
   35810:	44 8b 20             	mov    (%rax),%r12d
   35813:	e8 68 af fd ff       	callq  10780 <flux_watcher_destroy@plt>
   35818:	8b 3b                	mov    (%rbx),%edi
   3581a:	85 ff                	test   %edi,%edi
   3581c:	79 5a                	jns    35878 <usock_server_destroy+0x88>
   3581e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   35822:	48 85 ff             	test   %rdi,%rdi
   35825:	75 38                	jne    3585f <usock_server_destroy+0x6f>
   35827:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3582b:	e8 80 a2 fd ff       	callq  fab0 <free@plt>
   35830:	48 89 df             	mov    %rbx,%rdi
   35833:	e8 78 a2 fd ff       	callq  fab0 <free@plt>
   35838:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3583c:	5b                   	pop    %rbx
   3583d:	5d                   	pop    %rbp
   3583e:	41 5c                	pop    %r12
   35840:	c3                   	retq   
   35841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35848:	48 c7 80 d0 20 00 00 	movq   $0x0,0x20d0(%rax)
   3584f:	00 00 00 00 
   35853:	48 89 c7             	mov    %rax,%rdi
   35856:	e8 d5 fb ff ff       	callq  35430 <usock_conn_destroy>
   3585b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   3585f:	e8 ec 58 00 00       	callq  3b150 <fzlist_pop>
   35864:	48 85 c0             	test   %rax,%rax
   35867:	75 df                	jne    35848 <usock_server_destroy+0x58>
   35869:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   3586d:	e8 5e 5b 00 00       	callq  3b3d0 <fzlist_destroy>
   35872:	eb b3                	jmp    35827 <usock_server_destroy+0x37>
   35874:	0f 1f 40 00          	nopl   0x0(%rax)
   35878:	e8 33 a8 fd ff       	callq  100b0 <close@plt>
   3587d:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   35881:	e8 fa a2 fd ff       	callq  fb80 <remove@plt>
   35886:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   3588a:	48 85 ff             	test   %rdi,%rdi
   3588d:	75 d0                	jne    3585f <usock_server_destroy+0x6f>
   3588f:	eb 96                	jmp    35827 <usock_server_destroy+0x37>
   35891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35898:	c3                   	retq   

0000000000035899 <.annobin_usock_get_cred.start>:
   35899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000358a0 <usock_get_cred>:
   358a0:	f3 0f 1e fa          	endbr64 
   358a4:	53                   	push   %rbx
   358a5:	48 83 ec 20          	sub    $0x20,%rsp
   358a9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   358b0:	00 00 
   358b2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   358b7:	31 c0                	xor    %eax,%eax
   358b9:	85 ff                	test   %edi,%edi
   358bb:	78 63                	js     35920 <usock_get_cred+0x80>
   358bd:	48 89 f3             	mov    %rsi,%rbx
   358c0:	48 85 f6             	test   %rsi,%rsi
   358c3:	74 5b                	je     35920 <usock_get_cred+0x80>
   358c5:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   358ca:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   358cf:	ba 11 00 00 00       	mov    $0x11,%edx
   358d4:	be 01 00 00 00       	mov    $0x1,%esi
   358d9:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%rsp)
   358e0:	00 
   358e1:	e8 da a8 fd ff       	callq  101c0 <getsockopt@plt>
   358e6:	85 c0                	test   %eax,%eax
   358e8:	78 60                	js     3594a <usock_get_cred+0xaa>
   358ea:	83 7c 24 08 0c       	cmpl   $0xc,0x8(%rsp)
   358ef:	75 47                	jne    35938 <usock_get_cred+0x98>
   358f1:	8b 44 24 10          	mov    0x10(%rsp),%eax
   358f5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   358fc:	89 03                	mov    %eax,(%rbx)
   358fe:	31 c0                	xor    %eax,%eax
   35900:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   35905:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3590c:	00 00 
   3590e:	75 41                	jne    35951 <usock_get_cred+0xb1>
   35910:	48 83 c4 20          	add    $0x20,%rsp
   35914:	5b                   	pop    %rbx
   35915:	c3                   	retq   
   35916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3591d:	00 00 00 
   35920:	e8 eb a1 fd ff       	callq  fb10 <__errno_location@plt>
   35925:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3592b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35930:	eb ce                	jmp    35900 <usock_get_cred+0x60>
   35932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35938:	e8 d3 a1 fd ff       	callq  fb10 <__errno_location@plt>
   3593d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   35943:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35948:	eb b6                	jmp    35900 <usock_get_cred+0x60>
   3594a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3594f:	eb af                	jmp    35900 <usock_get_cred+0x60>
   35951:	e8 fa a4 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000035956 <.annobin_usock_conn_create.start>:
   35956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3595d:	00 00 00 

0000000000035960 <usock_conn_create>:
   35960:	f3 0f 1e fa          	endbr64 
   35964:	41 55                	push   %r13
   35966:	41 89 d5             	mov    %edx,%r13d
   35969:	89 f2                	mov    %esi,%edx
   3596b:	41 54                	push   %r12
   3596d:	c1 ea 1f             	shr    $0x1f,%edx
   35970:	44 89 e8             	mov    %r13d,%eax
   35973:	55                   	push   %rbp
   35974:	c1 e8 1f             	shr    $0x1f,%eax
   35977:	89 d1                	mov    %edx,%ecx
   35979:	53                   	push   %rbx
   3597a:	48 83 ec 08          	sub    $0x8,%rsp
   3597e:	08 c1                	or     %al,%cl
   35980:	0f 85 e2 00 00 00    	jne    35a68 <usock_conn_create+0x108>
   35986:	49 89 fc             	mov    %rdi,%r12
   35989:	48 85 ff             	test   %rdi,%rdi
   3598c:	0f 84 d6 00 00 00    	je     35a68 <usock_conn_create+0x108>
   35992:	89 f5                	mov    %esi,%ebp
   35994:	bf 01 00 00 00       	mov    $0x1,%edi
   35999:	be e0 20 00 00       	mov    $0x20e0,%esi
   3599e:	e8 6d a8 fd ff       	callq  10210 <calloc@plt>
   359a3:	48 89 c3             	mov    %rax,%rbx
   359a6:	48 85 c0             	test   %rax,%rax
   359a9:	0f 84 a5 00 00 00    	je     35a54 <usock_conn_create+0xf4>
   359af:	89 68 08             	mov    %ebp,0x8(%rax)
   359b2:	49 89 d8             	mov    %rbx,%r8
   359b5:	48 8d 0d 54 fd ff ff 	lea    -0x2ac(%rip),%rcx        # 35710 <conn_read_cb>
   359bc:	89 ee                	mov    %ebp,%esi
   359be:	44 89 a8 30 10 00 00 	mov    %r13d,0x1030(%rax)
   359c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   359ca:	ba 01 00 00 00       	mov    $0x1,%edx
   359cf:	4c 89 e7             	mov    %r12,%rdi
   359d2:	48 89 03             	mov    %rax,(%rbx)
   359d5:	e8 c6 a6 fd ff       	callq  100a0 <flux_fd_watcher_create@plt>
   359da:	48 89 43 10          	mov    %rax,0x10(%rbx)
   359de:	48 85 c0             	test   %rax,%rax
   359e1:	0f 84 ac 00 00 00    	je     35a93 <usock_conn_create+0x133>
   359e7:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   359eb:	e8 c0 e5 ff ff       	callq  33fb0 <iobuf_init>
   359f0:	49 89 d8             	mov    %rbx,%r8
   359f3:	ba 02 00 00 00       	mov    $0x2,%edx
   359f8:	4c 89 e7             	mov    %r12,%rdi
   359fb:	8b b3 30 10 00 00    	mov    0x1030(%rbx),%esi
   35a01:	48 8d 0d 28 fc ff ff 	lea    -0x3d8(%rip),%rcx        # 35630 <conn_write_cb>
   35a08:	e8 93 a6 fd ff       	callq  100a0 <flux_fd_watcher_create@plt>
   35a0d:	48 89 83 38 10 00 00 	mov    %rax,0x1038(%rbx)
   35a14:	48 85 c0             	test   %rax,%rax
   35a17:	74 7a                	je     35a93 <usock_conn_create+0x133>
   35a19:	48 8d bb 40 10 00 00 	lea    0x1040(%rbx),%rdi
   35a20:	48 8d ab 90 20 00 00 	lea    0x2090(%rbx),%rbp
   35a27:	e8 84 e5 ff ff       	callq  33fb0 <iobuf_init>
   35a2c:	48 89 ef             	mov    %rbp,%rdi
   35a2f:	e8 6c ab fd ff       	callq  105a0 <uuid_generate@plt>
   35a34:	48 8d b3 a0 20 00 00 	lea    0x20a0(%rbx),%rsi
   35a3b:	48 89 ef             	mov    %rbp,%rdi
   35a3e:	e8 fd a0 fd ff       	callq  fb40 <uuid_unparse@plt>
   35a43:	e8 18 53 00 00       	callq  3ad60 <fzlist_new>
   35a48:	48 89 83 58 20 00 00 	mov    %rax,0x2058(%rbx)
   35a4f:	48 85 c0             	test   %rax,%rax
   35a52:	74 34                	je     35a88 <usock_conn_create+0x128>
   35a54:	48 83 c4 08          	add    $0x8,%rsp
   35a58:	48 89 d8             	mov    %rbx,%rax
   35a5b:	5b                   	pop    %rbx
   35a5c:	5d                   	pop    %rbp
   35a5d:	41 5c                	pop    %r12
   35a5f:	41 5d                	pop    %r13
   35a61:	c3                   	retq   
   35a62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35a68:	e8 a3 a0 fd ff       	callq  fb10 <__errno_location@plt>
   35a6d:	31 db                	xor    %ebx,%ebx
   35a6f:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   35a75:	48 83 c4 08          	add    $0x8,%rsp
   35a79:	48 89 d8             	mov    %rbx,%rax
   35a7c:	5b                   	pop    %rbx
   35a7d:	5d                   	pop    %rbp
   35a7e:	41 5c                	pop    %r12
   35a80:	41 5d                	pop    %r13
   35a82:	c3                   	retq   
   35a83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   35a88:	e8 83 a0 fd ff       	callq  fb10 <__errno_location@plt>
   35a8d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   35a93:	48 89 df             	mov    %rbx,%rdi
   35a96:	31 db                	xor    %ebx,%ebx
   35a98:	e8 93 f9 ff ff       	callq  35430 <usock_conn_destroy>
   35a9d:	48 83 c4 08          	add    $0x8,%rsp
   35aa1:	48 89 d8             	mov    %rbx,%rax
   35aa4:	5b                   	pop    %rbx
   35aa5:	5d                   	pop    %rbp
   35aa6:	41 5c                	pop    %r12
   35aa8:	41 5d                	pop    %r13
   35aaa:	c3                   	retq   

0000000000035aab <.annobin_server_cb.start>:
   35aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000035ab0 <server_cb>:
   35ab0:	f3 0f 1e fa          	endbr64 
   35ab4:	83 e2 01             	and    $0x1,%edx
   35ab7:	75 07                	jne    35ac0 <server_cb+0x10>
   35ab9:	c3                   	retq   
   35aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35ac0:	41 57                	push   %r15
   35ac2:	31 d2                	xor    %edx,%edx
   35ac4:	41 56                	push   %r14
   35ac6:	49 89 f6             	mov    %rsi,%r14
   35ac9:	31 f6                	xor    %esi,%esi
   35acb:	41 55                	push   %r13
   35acd:	49 89 fd             	mov    %rdi,%r13
   35ad0:	41 54                	push   %r12
   35ad2:	55                   	push   %rbp
   35ad3:	53                   	push   %rbx
   35ad4:	48 89 cb             	mov    %rcx,%rbx
   35ad7:	48 83 ec 08          	sub    $0x8,%rsp
   35adb:	8b 39                	mov    (%rcx),%edi
   35add:	b9 00 00 08 00       	mov    $0x80000,%ecx
   35ae2:	e8 a9 a3 fd ff       	callq  fe90 <accept4@plt>
   35ae7:	41 89 c4             	mov    %eax,%r12d
   35aea:	85 c0                	test   %eax,%eax
   35aec:	78 62                	js     35b50 <server_cb+0xa0>
   35aee:	89 c2                	mov    %eax,%edx
   35af0:	89 c6                	mov    %eax,%esi
   35af2:	4c 89 ef             	mov    %r13,%rdi
   35af5:	e8 66 fe ff ff       	callq  35960 <usock_conn_create>
   35afa:	48 89 c5             	mov    %rax,%rbp
   35afd:	48 85 c0             	test   %rax,%rax
   35b00:	74 6e                	je     35b70 <server_cb+0xc0>
   35b02:	48 89 c6             	mov    %rax,%rsi
   35b05:	44 89 e7             	mov    %r12d,%edi
   35b08:	e8 93 fd ff ff       	callq  358a0 <usock_get_cred>
   35b0d:	85 c0                	test   %eax,%eax
   35b0f:	78 5f                	js     35b70 <server_cb+0xc0>
   35b11:	80 8d dc 20 00 00 01 	orb    $0x1,0x20dc(%rbp)
   35b18:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   35b1c:	48 89 ee             	mov    %rbp,%rsi
   35b1f:	e8 3c 54 00 00       	callq  3af60 <fzlist_append>
   35b24:	85 c0                	test   %eax,%eax
   35b26:	78 68                	js     35b90 <server_cb+0xe0>
   35b28:	48 8b 43 20          	mov    0x20(%rbx),%rax
   35b2c:	48 89 9d d0 20 00 00 	mov    %rbx,0x20d0(%rbp)
   35b33:	48 85 c0             	test   %rax,%rax
   35b36:	74 27                	je     35b5f <server_cb+0xaf>
   35b38:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   35b3c:	48 83 c4 08          	add    $0x8,%rsp
   35b40:	48 89 ef             	mov    %rbp,%rdi
   35b43:	5b                   	pop    %rbx
   35b44:	5d                   	pop    %rbp
   35b45:	41 5c                	pop    %r12
   35b47:	41 5d                	pop    %r13
   35b49:	41 5e                	pop    %r14
   35b4b:	41 5f                	pop    %r15
   35b4d:	ff e0                	jmpq   *%rax
   35b4f:	90                   	nop
   35b50:	e8 bb 9f fd ff       	callq  fb10 <__errno_location@plt>
   35b55:	8b 28                	mov    (%rax),%ebp
   35b57:	83 ed 17             	sub    $0x17,%ebp
   35b5a:	83 fd 01             	cmp    $0x1,%ebp
   35b5d:	76 51                	jbe    35bb0 <server_cb+0x100>
   35b5f:	48 83 c4 08          	add    $0x8,%rsp
   35b63:	5b                   	pop    %rbx
   35b64:	5d                   	pop    %rbp
   35b65:	41 5c                	pop    %r12
   35b67:	41 5d                	pop    %r13
   35b69:	41 5e                	pop    %r14
   35b6b:	41 5f                	pop    %r15
   35b6d:	c3                   	retq   
   35b6e:	66 90                	xchg   %ax,%ax
   35b70:	e8 9b 9f fd ff       	callq  fb10 <__errno_location@plt>
   35b75:	44 89 e7             	mov    %r12d,%edi
   35b78:	8b 28                	mov    (%rax),%ebp
   35b7a:	49 89 c7             	mov    %rax,%r15
   35b7d:	e8 2e a5 fd ff       	callq  100b0 <close@plt>
   35b82:	41 89 2f             	mov    %ebp,(%r15)
   35b85:	eb d0                	jmp    35b57 <server_cb+0xa7>
   35b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   35b8e:	00 00 
   35b90:	48 83 c4 08          	add    $0x8,%rsp
   35b94:	48 89 ef             	mov    %rbp,%rdi
   35b97:	5b                   	pop    %rbx
   35b98:	5d                   	pop    %rbp
   35b99:	41 5c                	pop    %r12
   35b9b:	41 5d                	pop    %r13
   35b9d:	41 5e                	pop    %r14
   35b9f:	41 5f                	pop    %r15
   35ba1:	e9 8a f8 ff ff       	jmpq   35430 <usock_conn_destroy>
   35ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   35bad:	00 00 00 
   35bb0:	f2 0f 10 05 e0 de 00 	movsd  0xdee0(%rip),%xmm0        # 43a98 <__PRETTY_FUNCTION__.6731+0x198>
   35bb7:	00 
   35bb8:	48 89 da             	mov    %rbx,%rdx
   35bbb:	4c 89 ef             	mov    %r13,%rdi
   35bbe:	48 8d 35 fb f5 ff ff 	lea    -0xa05(%rip),%rsi        # 351c0 <timeout_cb>
   35bc5:	66 0f ef c9          	pxor   %xmm1,%xmm1
   35bc9:	e8 d2 ab fd ff       	callq  107a0 <flux_timer_watcher_create@plt>
   35bce:	48 89 c7             	mov    %rax,%rdi
   35bd1:	e8 fa 9e fd ff       	callq  fad0 <flux_watcher_start@plt>
   35bd6:	48 83 c4 08          	add    $0x8,%rsp
   35bda:	4c 89 f7             	mov    %r14,%rdi
   35bdd:	5b                   	pop    %rbx
   35bde:	5d                   	pop    %rbp
   35bdf:	41 5c                	pop    %r12
   35be1:	41 5d                	pop    %r13
   35be3:	41 5e                	pop    %r14
   35be5:	41 5f                	pop    %r15
   35be7:	e9 44 ac fd ff       	jmpq   10830 <flux_watcher_stop@plt>

0000000000035bec <.annobin_server_cb.end>:
   35bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000035bf0 <usock_server_create>:
   35bf0:	f3 0f 1e fa          	endbr64 
   35bf4:	41 56                	push   %r14
   35bf6:	41 55                	push   %r13
   35bf8:	41 54                	push   %r12
   35bfa:	55                   	push   %rbp
   35bfb:	53                   	push   %rbx
   35bfc:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   35c00:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35c07:	00 00 
   35c09:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   35c0e:	31 c0                	xor    %eax,%eax
   35c10:	48 85 ff             	test   %rdi,%rdi
   35c13:	0f 84 57 01 00 00    	je     35d70 <usock_server_create+0x180>
   35c19:	48 89 f5             	mov    %rsi,%rbp
   35c1c:	48 85 f6             	test   %rsi,%rsi
   35c1f:	0f 84 4b 01 00 00    	je     35d70 <usock_server_create+0x180>
   35c25:	49 89 fc             	mov    %rdi,%r12
   35c28:	be 30 00 00 00       	mov    $0x30,%esi
   35c2d:	bf 01 00 00 00       	mov    $0x1,%edi
   35c32:	41 89 d5             	mov    %edx,%r13d
   35c35:	e8 d6 a5 fd ff       	callq  10210 <calloc@plt>
   35c3a:	48 89 c3             	mov    %rax,%rbx
   35c3d:	48 85 c0             	test   %rax,%rax
   35c40:	0f 84 fa 00 00 00    	je     35d40 <usock_server_create+0x150>
   35c46:	31 d2                	xor    %edx,%edx
   35c48:	be 01 00 08 00       	mov    $0x80001,%esi
   35c4d:	bf 01 00 00 00       	mov    $0x1,%edi
   35c52:	e8 09 af fd ff       	callq  10b60 <socket@plt>
   35c57:	89 03                	mov    %eax,(%rbx)
   35c59:	85 c0                	test   %eax,%eax
   35c5b:	0f 88 ff 00 00 00    	js     35d60 <usock_server_create+0x170>
   35c61:	48 89 ef             	mov    %rbp,%rdi
   35c64:	e8 37 ad fd ff       	callq  109a0 <strdup@plt>
   35c69:	48 89 43 08          	mov    %rax,0x8(%rbx)
   35c6d:	48 85 c0             	test   %rax,%rax
   35c70:	0f 84 ea 00 00 00    	je     35d60 <usock_server_create+0x170>
   35c76:	48 89 ef             	mov    %rbp,%rdi
   35c79:	e8 02 9f fd ff       	callq  fb80 <remove@plt>
   35c7e:	85 c0                	test   %eax,%eax
   35c80:	79 0e                	jns    35c90 <usock_server_create+0xa0>
   35c82:	e8 89 9e fd ff       	callq  fb10 <__errno_location@plt>
   35c87:	83 38 02             	cmpl   $0x2,(%rax)
   35c8a:	0f 85 d0 00 00 00    	jne    35d60 <usock_server_create+0x170>
   35c90:	49 89 e6             	mov    %rsp,%r14
   35c93:	31 c0                	xor    %eax,%eax
  return __builtin___strncpy_chk (__dest, __src, __len,
   35c95:	ba 6b 00 00 00       	mov    $0x6b,%edx
   35c9a:	48 89 ee             	mov    %rbp,%rsi
  return __builtin___memset_chk (__dest, __ch, __len,
   35c9d:	4d 8d 46 02          	lea    0x2(%r14),%r8
   35ca1:	49 8d 7e 08          	lea    0x8(%r14),%rdi
   35ca5:	48 c7 44 24 02 00 00 	movq   $0x0,0x2(%rsp)
   35cac:	00 00 
   35cae:	4c 89 c1             	mov    %r8,%rcx
   35cb1:	49 c7 46 66 00 00 00 	movq   $0x0,0x66(%r14)
   35cb8:	00 
   35cb9:	48 29 f9             	sub    %rdi,%rcx
   35cbc:	83 c1 6c             	add    $0x6c,%ecx
   35cbf:	c1 e9 03             	shr    $0x3,%ecx
   35cc2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   35cc5:	b8 01 00 00 00       	mov    $0x1,%eax
  return __builtin___strncpy_chk (__dest, __src, __len,
   35cca:	4c 89 c7             	mov    %r8,%rdi
   35ccd:	66 89 04 24          	mov    %ax,(%rsp)
   35cd1:	e8 8a 9e fd ff       	callq  fb60 <strncpy@plt>
   35cd6:	8b 3b                	mov    (%rbx),%edi
   35cd8:	ba 6e 00 00 00       	mov    $0x6e,%edx
   35cdd:	4c 89 f6             	mov    %r14,%rsi
   35ce0:	e8 bb a9 fd ff       	callq  106a0 <bind@plt>
   35ce5:	85 c0                	test   %eax,%eax
   35ce7:	78 77                	js     35d60 <usock_server_create+0x170>
   35ce9:	44 89 ee             	mov    %r13d,%esi
   35cec:	48 89 ef             	mov    %rbp,%rdi
   35cef:	e8 9c a9 fd ff       	callq  10690 <chmod@plt>
   35cf4:	85 c0                	test   %eax,%eax
   35cf6:	78 68                	js     35d60 <usock_server_create+0x170>
   35cf8:	8b 3b                	mov    (%rbx),%edi
   35cfa:	be 05 00 00 00       	mov    $0x5,%esi
   35cff:	e8 fc a7 fd ff       	callq  10500 <listen@plt>
   35d04:	85 c0                	test   %eax,%eax
   35d06:	78 58                	js     35d60 <usock_server_create+0x170>
   35d08:	8b 33                	mov    (%rbx),%esi
   35d0a:	49 89 d8             	mov    %rbx,%r8
   35d0d:	48 8d 0d 9c fd ff ff 	lea    -0x264(%rip),%rcx        # 35ab0 <server_cb>
   35d14:	4c 89 e7             	mov    %r12,%rdi
   35d17:	ba 05 00 00 00       	mov    $0x5,%edx
   35d1c:	e8 7f a3 fd ff       	callq  100a0 <flux_fd_watcher_create@plt>
   35d21:	48 89 43 10          	mov    %rax,0x10(%rbx)
   35d25:	48 85 c0             	test   %rax,%rax
   35d28:	74 36                	je     35d60 <usock_server_create+0x170>
   35d2a:	48 89 c7             	mov    %rax,%rdi
   35d2d:	e8 9e 9d fd ff       	callq  fad0 <flux_watcher_start@plt>
   35d32:	e8 29 50 00 00       	callq  3ad60 <fzlist_new>
   35d37:	48 89 43 18          	mov    %rax,0x18(%rbx)
   35d3b:	48 85 c0             	test   %rax,%rax
   35d3e:	74 20                	je     35d60 <usock_server_create+0x170>
   35d40:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   35d45:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   35d4c:	00 00 
   35d4e:	48 89 d8             	mov    %rbx,%rax
   35d51:	75 2c                	jne    35d7f <usock_server_create+0x18f>
   35d53:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   35d57:	5b                   	pop    %rbx
   35d58:	5d                   	pop    %rbp
   35d59:	41 5c                	pop    %r12
   35d5b:	41 5d                	pop    %r13
   35d5d:	41 5e                	pop    %r14
   35d5f:	c3                   	retq   
   35d60:	48 89 df             	mov    %rbx,%rdi
   35d63:	31 db                	xor    %ebx,%ebx
   35d65:	e8 86 fa ff ff       	callq  357f0 <usock_server_destroy>
   35d6a:	eb d4                	jmp    35d40 <usock_server_create+0x150>
   35d6c:	0f 1f 40 00          	nopl   0x0(%rax)
   35d70:	e8 9b 9d fd ff       	callq  fb10 <__errno_location@plt>
   35d75:	31 db                	xor    %ebx,%ebx
   35d77:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   35d7d:	eb c1                	jmp    35d40 <usock_server_create+0x150>
   35d7f:	e8 cc a0 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000035d84 <.annobin_usock_client_pollevents.start>:
   35d84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   35d8b:	00 00 00 00 
   35d8f:	90                   	nop

0000000000035d90 <usock_client_pollevents>:
   35d90:	f3 0f 1e fa          	endbr64 
   35d94:	48 83 ec 18          	sub    $0x18,%rsp
   35d98:	31 d2                	xor    %edx,%edx
   35d9a:	be 01 00 00 00       	mov    $0x1,%esi
   35d9f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35da6:	00 00 
   35da8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   35dad:	31 c0                	xor    %eax,%eax
   35daf:	8b 07                	mov    (%rdi),%eax
   35db1:	48 89 e7             	mov    %rsp,%rdi
   35db4:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%rsp)
   35dbb:	00 
   35dbc:	89 04 24             	mov    %eax,(%rsp)
   35dbf:	e8 bc a8 fd ff       	callq  10680 <poll@plt>
   35dc4:	85 c0                	test   %eax,%eax
   35dc6:	78 38                	js     35e00 <usock_client_pollevents+0x70>
   35dc8:	0f b7 54 24 06       	movzwl 0x6(%rsp),%edx
   35dcd:	89 d0                	mov    %edx,%eax
   35dcf:	83 e0 01             	and    $0x1,%eax
   35dd2:	89 c1                	mov    %eax,%ecx
   35dd4:	83 c9 02             	or     $0x2,%ecx
   35dd7:	f6 c2 04             	test   $0x4,%dl
   35dda:	0f 45 c1             	cmovne %ecx,%eax
   35ddd:	89 c1                	mov    %eax,%ecx
   35ddf:	83 c9 04             	or     $0x4,%ecx
   35de2:	83 e2 38             	and    $0x38,%edx
   35de5:	0f 45 c1             	cmovne %ecx,%eax
   35de8:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   35ded:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   35df4:	00 00 
   35df6:	75 0f                	jne    35e07 <usock_client_pollevents+0x77>
   35df8:	48 83 c4 18          	add    $0x18,%rsp
   35dfc:	c3                   	retq   
   35dfd:	0f 1f 00             	nopl   (%rax)
   35e00:	b8 04 00 00 00       	mov    $0x4,%eax
   35e05:	eb e1                	jmp    35de8 <usock_client_pollevents+0x58>
   35e07:	e8 44 a0 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000035e0c <.annobin_usock_client_pollevents.end>:
   35e0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000035e10 <usock_client_pollfd>:
   35e10:	f3 0f 1e fa          	endbr64 
   35e14:	8b 07                	mov    (%rdi),%eax
   35e16:	c3                   	retq   

0000000000035e17 <.annobin_usock_client_pollfd.end>:
   35e17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   35e1e:	00 00 

0000000000035e20 <usock_client_send>:
   35e20:	f3 0f 1e fa          	endbr64 
   35e24:	41 55                	push   %r13
   35e26:	83 e2 04             	and    $0x4,%edx
   35e29:	49 89 f5             	mov    %rsi,%r13
   35e2c:	41 54                	push   %r12
   35e2e:	4c 8d a7 20 10 00 00 	lea    0x1020(%rdi),%r12
   35e35:	55                   	push   %rbp
   35e36:	89 d5                	mov    %edx,%ebp
   35e38:	53                   	push   %rbx
   35e39:	48 89 fb             	mov    %rdi,%rbx
   35e3c:	48 83 ec 08          	sub    $0x8,%rsp
   35e40:	eb 24                	jmp    35e66 <usock_client_send+0x46>
   35e42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   35e48:	e8 c3 9c fd ff       	callq  fb10 <__errno_location@plt>
   35e4d:	83 38 0b             	cmpl   $0xb,(%rax)
   35e50:	75 36                	jne    35e88 <usock_client_send+0x68>
   35e52:	85 ed                	test   %ebp,%ebp
   35e54:	75 32                	jne    35e88 <usock_client_send+0x68>
   35e56:	8b 3b                	mov    (%rbx),%edi
   35e58:	be 04 00 00 00       	mov    $0x4,%esi
   35e5d:	e8 7e f3 ff ff       	callq  351e0 <usock_client_poll>
   35e62:	85 c0                	test   %eax,%eax
   35e64:	78 22                	js     35e88 <usock_client_send+0x68>
   35e66:	8b 3b                	mov    (%rbx),%edi
   35e68:	4c 89 e2             	mov    %r12,%rdx
   35e6b:	4c 89 ee             	mov    %r13,%rsi
   35e6e:	e8 cd e1 ff ff       	callq  34040 <sendfd>
   35e73:	85 c0                	test   %eax,%eax
   35e75:	78 d1                	js     35e48 <usock_client_send+0x28>
   35e77:	48 83 c4 08          	add    $0x8,%rsp
   35e7b:	31 c0                	xor    %eax,%eax
   35e7d:	5b                   	pop    %rbx
   35e7e:	5d                   	pop    %rbp
   35e7f:	41 5c                	pop    %r12
   35e81:	41 5d                	pop    %r13
   35e83:	c3                   	retq   
   35e84:	0f 1f 40 00          	nopl   0x0(%rax)
   35e88:	48 83 c4 08          	add    $0x8,%rsp
   35e8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   35e91:	5b                   	pop    %rbx
   35e92:	5d                   	pop    %rbp
   35e93:	41 5c                	pop    %r12
   35e95:	41 5d                	pop    %r13
   35e97:	c3                   	retq   

0000000000035e98 <.annobin_usock_client_recv.start>:
   35e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   35e9f:	00 

0000000000035ea0 <usock_client_recv>:
   35ea0:	f3 0f 1e fa          	endbr64 
   35ea4:	41 55                	push   %r13
   35ea6:	83 e6 04             	and    $0x4,%esi
   35ea9:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   35ead:	41 54                	push   %r12
   35eaf:	41 89 f4             	mov    %esi,%r12d
   35eb2:	55                   	push   %rbp
   35eb3:	53                   	push   %rbx
   35eb4:	48 89 fb             	mov    %rdi,%rbx
   35eb7:	48 83 ec 08          	sub    $0x8,%rsp
   35ebb:	eb 22                	jmp    35edf <usock_client_recv+0x3f>
   35ebd:	0f 1f 00             	nopl   (%rax)
   35ec0:	e8 4b 9c fd ff       	callq  fb10 <__errno_location@plt>
   35ec5:	83 38 0b             	cmpl   $0xb,(%rax)
   35ec8:	75 27                	jne    35ef1 <usock_client_recv+0x51>
   35eca:	45 85 e4             	test   %r12d,%r12d
   35ecd:	75 22                	jne    35ef1 <usock_client_recv+0x51>
   35ecf:	8b 3b                	mov    (%rbx),%edi
   35ed1:	be 01 00 00 00       	mov    $0x1,%esi
   35ed6:	e8 05 f3 ff ff       	callq  351e0 <usock_client_poll>
   35edb:	85 c0                	test   %eax,%eax
   35edd:	78 12                	js     35ef1 <usock_client_recv+0x51>
   35edf:	8b 3b                	mov    (%rbx),%edi
   35ee1:	4c 89 ee             	mov    %r13,%rsi
   35ee4:	e8 57 e3 ff ff       	callq  34240 <recvfd>
   35ee9:	48 89 c5             	mov    %rax,%rbp
   35eec:	48 85 c0             	test   %rax,%rax
   35eef:	74 cf                	je     35ec0 <usock_client_recv+0x20>
   35ef1:	48 83 c4 08          	add    $0x8,%rsp
   35ef5:	48 89 e8             	mov    %rbp,%rax
   35ef8:	5b                   	pop    %rbx
   35ef9:	5d                   	pop    %rbp
   35efa:	41 5c                	pop    %r12
   35efc:	41 5d                	pop    %r13
   35efe:	c3                   	retq   

0000000000035eff <.annobin_usock_client_connect.start>:
   35eff:	90                   	nop

0000000000035f00 <usock_client_connect>:
   35f00:	f3 0f 1e fa          	endbr64 
   35f04:	41 56                	push   %r14
   35f06:	41 55                	push   %r13
   35f08:	41 54                	push   %r12
   35f0a:	55                   	push   %rbp
   35f0b:	53                   	push   %rbx
   35f0c:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   35f13:	f2 0f 10 0d 9d c0 00 	movsd  0xc09d(%rip),%xmm1        # 41fb8 <f58_prefix+0x2b55>
   35f1a:	00 
   35f1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   35f22:	00 00 
   35f24:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   35f2b:	00 
   35f2c:	31 c0                	xor    %eax,%eax
   35f2e:	44 8b b4 24 c0 00 00 	mov    0xc0(%rsp),%r14d
   35f35:	00 
   35f36:	f2 0f 10 84 24 c8 00 	movsd  0xc8(%rsp),%xmm0
   35f3d:	00 00 
   35f3f:	f2 0f 10 9c 24 d0 00 	movsd  0xd0(%rsp),%xmm3
   35f46:	00 00 
   35f48:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   35f4c:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
   35f52:	48 85 ff             	test   %rdi,%rdi
   35f55:	0f 84 49 01 00 00    	je     360a4 <usock_client_connect+0x1a4>
   35f5b:	80 3f 00             	cmpb   $0x0,(%rdi)
   35f5e:	48 89 fd             	mov    %rdi,%rbp
   35f61:	0f 84 3d 01 00 00    	je     360a4 <usock_client_connect+0x1a4>
   35f67:	45 85 f6             	test   %r14d,%r14d
   35f6a:	0f 88 34 01 00 00    	js     360a4 <usock_client_connect+0x1a4>
   35f70:	f2 48 0f 2c d9       	cvttsd2si %xmm1,%rbx
   35f75:	66 0f ef c9          	pxor   %xmm1,%xmm1
   35f79:	66 0f 2f c8          	comisd %xmm0,%xmm1
   35f7d:	0f 87 21 01 00 00    	ja     360a4 <usock_client_connect+0x1a4>
   35f83:	66 0f 2f cb          	comisd %xmm3,%xmm1
   35f87:	0f 87 17 01 00 00    	ja     360a4 <usock_client_connect+0x1a4>
   35f8d:	31 d2                	xor    %edx,%edx
   35f8f:	be 01 00 08 00       	mov    $0x80001,%esi
   35f94:	bf 01 00 00 00       	mov    $0x1,%edi
   35f99:	e8 c2 ab fd ff       	callq  10b60 <socket@plt>
   35f9e:	41 89 c4             	mov    %eax,%r12d
   35fa1:	85 c0                	test   %eax,%eax
   35fa3:	0f 88 0e 01 00 00    	js     360b7 <usock_client_connect+0x1b7>
  return __builtin___memset_chk (__dest, __ch, __len,
   35fa9:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   35fae:	31 c0                	xor    %eax,%eax
   35fb0:	ba 01 00 00 00       	mov    $0x1,%edx
   35fb5:	48 c7 44 24 12 00 00 	movq   $0x0,0x12(%rsp)
   35fbc:	00 00 
   35fbe:	4d 8d 45 02          	lea    0x2(%r13),%r8
   35fc2:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   35fc6:	be 6c 00 00 00       	mov    $0x6c,%esi
   35fcb:	49 c7 45 66 00 00 00 	movq   $0x0,0x66(%r13)
   35fd2:	00 
   35fd3:	4c 89 c1             	mov    %r8,%rcx
   35fd6:	48 29 f9             	sub    %rdi,%rcx
   35fd9:	83 c1 6c             	add    $0x6c,%ecx
   35fdc:	c1 e9 03             	shr    $0x3,%ecx
   35fdf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   35fe2:	66 89 54 24 10       	mov    %dx,0x10(%rsp)
   35fe7:	48 89 e9             	mov    %rbp,%rcx
   35fea:	4c 89 c7             	mov    %r8,%rdi
   35fed:	48 8d 15 18 d2 00 00 	lea    0xd218(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   35ff4:	e8 27 9f fd ff       	callq  ff20 <snprintf@plt>
   35ff9:	83 f8 6b             	cmp    $0x6b,%eax
   35ffc:	0f 87 a2 00 00 00    	ja     360a4 <usock_client_connect+0x1a4>
   36002:	31 ed                	xor    %ebp,%ebp
   36004:	eb 41                	jmp    36047 <usock_client_connect+0x147>
   36006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3600d:	00 00 00 
   36010:	41 39 ee             	cmp    %ebp,%r14d
   36013:	74 73                	je     36088 <usock_client_connect+0x188>
   36015:	89 df                	mov    %ebx,%edi
   36017:	e8 f4 aa fd ff       	callq  10b10 <usleep@plt>
   3601c:	8d 04 1b             	lea    (%rbx,%rbx,1),%eax
   3601f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   36023:	f2 0f 10 0d 8d bf 00 	movsd  0xbf8d(%rip),%xmm1        # 41fb8 <f58_prefix+0x2b55>
   3602a:	00 
   3602b:	f2 0f 59 4c 24 08    	mulsd  0x8(%rsp),%xmm1
   36031:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   36036:	48 89 c3             	mov    %rax,%rbx
   36039:	66 0f 2f c1          	comisd %xmm1,%xmm0
   3603d:	76 05                	jbe    36044 <usock_client_connect+0x144>
   3603f:	f2 48 0f 2c d9       	cvttsd2si %xmm1,%rbx
   36044:	83 c5 01             	add    $0x1,%ebp
   36047:	ba 6e 00 00 00       	mov    $0x6e,%edx
   3604c:	4c 89 ee             	mov    %r13,%rsi
   3604f:	44 89 e7             	mov    %r12d,%edi
   36052:	e8 c9 a8 fd ff       	callq  10920 <connect@plt>
   36057:	85 c0                	test   %eax,%eax
   36059:	78 b5                	js     36010 <usock_client_connect+0x110>
   3605b:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   36062:	00 
   36063:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3606a:	00 00 
   3606c:	44 89 e0             	mov    %r12d,%eax
   3606f:	75 4e                	jne    360bf <usock_client_connect+0x1bf>
   36071:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   36078:	5b                   	pop    %rbx
   36079:	5d                   	pop    %rbp
   3607a:	41 5c                	pop    %r12
   3607c:	41 5d                	pop    %r13
   3607e:	41 5e                	pop    %r14
   36080:	c3                   	retq   
   36081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   36088:	e8 83 9a fd ff       	callq  fb10 <__errno_location@plt>
   3608d:	44 89 e7             	mov    %r12d,%edi
   36090:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   36096:	8b 28                	mov    (%rax),%ebp
   36098:	48 89 c3             	mov    %rax,%rbx
   3609b:	e8 10 a0 fd ff       	callq  100b0 <close@plt>
   360a0:	89 2b                	mov    %ebp,(%rbx)
   360a2:	eb b7                	jmp    3605b <usock_client_connect+0x15b>
   360a4:	e8 67 9a fd ff       	callq  fb10 <__errno_location@plt>
   360a9:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   360af:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   360b5:	eb a4                	jmp    3605b <usock_client_connect+0x15b>
   360b7:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   360bd:	eb 9c                	jmp    3605b <usock_client_connect+0x15b>
   360bf:	e8 8c 9d fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000360c4 <.annobin_usock_client_connect.end>:
   360c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   360cb:	00 00 00 00 
   360cf:	90                   	nop

00000000000360d0 <usock_client_destroy>:
   360d0:	f3 0f 1e fa          	endbr64 
   360d4:	48 85 ff             	test   %rdi,%rdi
   360d7:	74 3f                	je     36118 <usock_client_destroy+0x48>
   360d9:	41 54                	push   %r12
   360db:	55                   	push   %rbp
   360dc:	53                   	push   %rbx
   360dd:	48 89 fb             	mov    %rdi,%rbx
   360e0:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   360e4:	e8 07 df ff ff       	callq  33ff0 <iobuf_clean>
   360e9:	48 8d bb 20 10 00 00 	lea    0x1020(%rbx),%rdi
   360f0:	e8 fb de ff ff       	callq  33ff0 <iobuf_clean>
   360f5:	e8 16 9a fd ff       	callq  fb10 <__errno_location@plt>
   360fa:	48 89 df             	mov    %rbx,%rdi
   360fd:	44 8b 20             	mov    (%rax),%r12d
   36100:	48 89 c5             	mov    %rax,%rbp
   36103:	e8 a8 99 fd ff       	callq  fab0 <free@plt>
   36108:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3610c:	5b                   	pop    %rbx
   3610d:	5d                   	pop    %rbp
   3610e:	41 5c                	pop    %r12
   36110:	c3                   	retq   
   36111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   36118:	c3                   	retq   

0000000000036119 <.annobin_usock_client_create.start>:
   36119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000036120 <usock_client_create>:
   36120:	f3 0f 1e fa          	endbr64 
   36124:	41 54                	push   %r12
   36126:	55                   	push   %rbp
   36127:	53                   	push   %rbx
   36128:	48 83 ec 10          	sub    $0x10,%rsp
   3612c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   36133:	00 00 
   36135:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3613a:	31 c0                	xor    %eax,%eax
   3613c:	85 ff                	test   %edi,%edi
   3613e:	0f 88 7c 00 00 00    	js     361c0 <usock_client_create+0xa0>
   36144:	89 fd                	mov    %edi,%ebp
   36146:	be 38 20 00 00       	mov    $0x2038,%esi
   3614b:	bf 01 00 00 00       	mov    $0x1,%edi
   36150:	e8 bb a0 fd ff       	callq  10210 <calloc@plt>
   36155:	48 89 c3             	mov    %rax,%rbx
   36158:	48 85 c0             	test   %rax,%rax
   3615b:	74 44                	je     361a1 <usock_client_create+0x81>
   3615d:	89 28                	mov    %ebp,(%rax)
   3615f:	48 8d 78 08          	lea    0x8(%rax),%rdi
   36163:	e8 48 de ff ff       	callq  33fb0 <iobuf_init>
   36168:	48 8d bb 20 10 00 00 	lea    0x1020(%rbx),%rdi
   3616f:	e8 3c de ff ff       	callq  33fb0 <iobuf_init>
   36174:	8b 3b                	mov    (%rbx),%edi
   36176:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
   3617b:	ba 01 00 00 00       	mov    $0x1,%edx
   36180:	e8 fb 9f fd ff       	callq  10180 <read@plt>
   36185:	85 c0                	test   %eax,%eax
   36187:	78 57                	js     361e0 <usock_client_create+0xc0>
   36189:	74 44                	je     361cf <usock_client_create+0xaf>
   3618b:	44 0f b6 64 24 07    	movzbl 0x7(%rsp),%r12d
   36191:	45 84 e4             	test   %r12b,%r12b
   36194:	75 56                	jne    361ec <usock_client_create+0xcc>
   36196:	89 ef                	mov    %ebp,%edi
   36198:	e8 43 60 fe ff       	callq  1c1e0 <fd_set_nonblocking>
   3619d:	85 c0                	test   %eax,%eax
   3619f:	78 3f                	js     361e0 <usock_client_create+0xc0>
   361a1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   361a6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   361ad:	00 00 
   361af:	48 89 d8             	mov    %rbx,%rax
   361b2:	75 42                	jne    361f6 <usock_client_create+0xd6>
   361b4:	48 83 c4 10          	add    $0x10,%rsp
   361b8:	5b                   	pop    %rbx
   361b9:	5d                   	pop    %rbp
   361ba:	41 5c                	pop    %r12
   361bc:	c3                   	retq   
   361bd:	0f 1f 00             	nopl   (%rax)
   361c0:	e8 4b 99 fd ff       	callq  fb10 <__errno_location@plt>
   361c5:	31 db                	xor    %ebx,%ebx
   361c7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   361cd:	eb d2                	jmp    361a1 <usock_client_create+0x81>
   361cf:	e8 3c 99 fd ff       	callq  fb10 <__errno_location@plt>
   361d4:	c7 00 68 00 00 00    	movl   $0x68,(%rax)
   361da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   361e0:	48 89 df             	mov    %rbx,%rdi
   361e3:	31 db                	xor    %ebx,%ebx
   361e5:	e8 e6 fe ff ff       	callq  360d0 <usock_client_destroy>
   361ea:	eb b5                	jmp    361a1 <usock_client_create+0x81>
   361ec:	e8 1f 99 fd ff       	callq  fb10 <__errno_location@plt>
   361f1:	44 89 20             	mov    %r12d,(%rax)
   361f4:	eb ea                	jmp    361e0 <usock_client_create+0xc0>
   361f6:	e8 55 9c fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000361fb <.annobin_usock.c_end>:
   361fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000036200 <service_handle_send>:
   36200:	f3 0f 1e fa          	endbr64 
   36204:	41 54                	push   %r12
   36206:	55                   	push   %rbp
   36207:	48 89 fd             	mov    %rdi,%rbp
   3620a:	53                   	push   %rbx
   3620b:	48 89 f3             	mov    %rsi,%rbx
   3620e:	48 89 df             	mov    %rbx,%rdi
   36211:	48 83 ec 10          	sub    $0x10,%rsp
   36215:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3621c:	00 00 
   3621e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   36223:	31 c0                	xor    %eax,%eax
   36225:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   3622a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   36231:	00 
   36232:	e8 a9 a7 fd ff       	callq  109e0 <flux_msg_get_type@plt>
   36237:	85 c0                	test   %eax,%eax
   36239:	0f 88 a9 00 00 00    	js     362e8 <service_handle_send+0xe8>
   3623f:	83 7c 24 04 02       	cmpl   $0x2,0x4(%rsp)
   36244:	0f 85 a6 00 00 00    	jne    362f0 <service_handle_send+0xf0>
   3624a:	48 89 df             	mov    %rbx,%rdi
   3624d:	be 01 00 00 00       	mov    $0x1,%esi
   36252:	e8 99 9e fd ff       	callq  100f0 <flux_msg_copy@plt>
   36257:	48 89 c3             	mov    %rax,%rbx
   3625a:	48 85 c0             	test   %rax,%rax
   3625d:	0f 84 85 00 00 00    	je     362e8 <service_handle_send+0xe8>
   36263:	48 89 c7             	mov    %rax,%rdi
   36266:	e8 65 9a fd ff       	callq  fcd0 <flux_msg_route_last@plt>
   3626b:	49 89 c4             	mov    %rax,%r12
   3626e:	48 85 c0             	test   %rax,%rax
   36271:	74 62                	je     362d5 <service_handle_send+0xd5>
   36273:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   36277:	48 89 df             	mov    %rbx,%rdi
   3627a:	e8 f1 9f fd ff       	callq  10270 <flux_msg_set_cred@plt>
   3627f:	85 c0                	test   %eax,%eax
   36281:	78 5d                	js     362e0 <service_handle_send+0xe0>
   36283:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   36287:	4c 89 e6             	mov    %r12,%rsi
   3628a:	e8 81 42 00 00       	callq  3a510 <fzhashx_lookup>
   3628f:	48 89 c5             	mov    %rax,%rbp
   36292:	48 85 c0             	test   %rax,%rax
   36295:	74 6b                	je     36302 <service_handle_send+0x102>
   36297:	48 89 df             	mov    %rbx,%rdi
   3629a:	e8 d1 97 fd ff       	callq  fa70 <flux_msg_route_delete_last@plt>
   3629f:	85 c0                	test   %eax,%eax
   362a1:	78 3d                	js     362e0 <service_handle_send+0xe0>
   362a3:	48 89 de             	mov    %rbx,%rsi
   362a6:	48 89 ef             	mov    %rbp,%rdi
   362a9:	e8 a2 f0 ff ff       	callq  35350 <usock_conn_send>
   362ae:	85 c0                	test   %eax,%eax
   362b0:	78 2e                	js     362e0 <service_handle_send+0xe0>
   362b2:	48 89 df             	mov    %rbx,%rdi
   362b5:	e8 c6 a1 fd ff       	callq  10480 <flux_msg_decref@plt>
   362ba:	31 c0                	xor    %eax,%eax
   362bc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   362c1:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   362c8:	00 00 
   362ca:	75 43                	jne    3630f <service_handle_send+0x10f>
   362cc:	48 83 c4 10          	add    $0x10,%rsp
   362d0:	5b                   	pop    %rbx
   362d1:	5d                   	pop    %rbp
   362d2:	41 5c                	pop    %r12
   362d4:	c3                   	retq   
   362d5:	e8 36 98 fd ff       	callq  fb10 <__errno_location@plt>
   362da:	c7 00 47 00 00 00    	movl   $0x47,(%rax)
   362e0:	48 89 df             	mov    %rbx,%rdi
   362e3:	e8 98 a1 fd ff       	callq  10480 <flux_msg_decref@plt>
   362e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   362ed:	eb cd                	jmp    362bc <service_handle_send+0xbc>
   362ef:	90                   	nop
   362f0:	e8 1b 98 fd ff       	callq  fb10 <__errno_location@plt>
   362f5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   362fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   36300:	eb ba                	jmp    362bc <service_handle_send+0xbc>
   36302:	e8 09 98 fd ff       	callq  fb10 <__errno_location@plt>
   36307:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   3630d:	eb d1                	jmp    362e0 <service_handle_send+0xe0>
   3630f:	e8 3c 9b fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000036314 <.annobin_service_acceptor.start>:
   36314:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3631b:	00 00 00 00 
   3631f:	90                   	nop

0000000000036320 <service_acceptor>:
   36320:	f3 0f 1e fa          	endbr64 
   36324:	41 55                	push   %r13
   36326:	41 54                	push   %r12
   36328:	55                   	push   %rbp
   36329:	48 89 f5             	mov    %rsi,%rbp
   3632c:	53                   	push   %rbx
   3632d:	48 89 fb             	mov    %rdi,%rbx
   36330:	48 83 ec 08          	sub    $0x8,%rsp
   36334:	e8 27 ef ff ff       	callq  35260 <usock_conn_get_cred>
   36339:	48 89 df             	mov    %rbx,%rdi
   3633c:	49 89 c4             	mov    %rax,%r12
   3633f:	e8 2c ef ff ff       	callq  35270 <usock_conn_get_uuid>
   36344:	49 89 c5             	mov    %rax,%r13
   36347:	8b 45 10             	mov    0x10(%rbp),%eax
   3634a:	41 39 04 24          	cmp    %eax,(%r12)
   3634e:	74 30                	je     36380 <service_acceptor+0x60>
   36350:	e8 bb 97 fd ff       	callq  fb10 <__errno_location@plt>
   36355:	be 01 00 00 00       	mov    $0x1,%esi
   3635a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   36360:	48 89 df             	mov    %rbx,%rdi
   36363:	e8 68 f0 ff ff       	callq  353d0 <usock_conn_reject>
   36368:	48 83 c4 08          	add    $0x8,%rsp
   3636c:	48 89 df             	mov    %rbx,%rdi
   3636f:	5b                   	pop    %rbx
   36370:	5d                   	pop    %rbp
   36371:	41 5c                	pop    %r12
   36373:	41 5d                	pop    %r13
   36375:	e9 b6 f0 ff ff       	jmpq   35430 <usock_conn_destroy>
   3637a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36380:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   36384:	48 89 da             	mov    %rbx,%rdx
   36387:	4c 89 ee             	mov    %r13,%rsi
   3638a:	e8 61 3d 00 00       	callq  3a0f0 <fzhashx_insert>
   3638f:	85 c0                	test   %eax,%eax
   36391:	78 5d                	js     363f0 <service_acceptor+0xd0>
   36393:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   36397:	75 3f                	jne    363d8 <service_acceptor+0xb8>
   36399:	48 89 ea             	mov    %rbp,%rdx
   3639c:	48 89 df             	mov    %rbx,%rdi
   3639f:	48 8d 35 4a 01 00 00 	lea    0x14a(%rip),%rsi        # 364f0 <service_error>
   363a6:	e8 e5 ee ff ff       	callq  35290 <usock_conn_set_error_cb>
   363ab:	48 89 df             	mov    %rbx,%rdi
   363ae:	48 89 ea             	mov    %rbp,%rdx
   363b1:	48 8d 35 58 00 00 00 	lea    0x58(%rip),%rsi        # 36410 <service_recv>
   363b8:	e8 13 ef ff ff       	callq  352d0 <usock_conn_set_recv_cb>
   363bd:	48 83 c4 08          	add    $0x8,%rsp
   363c1:	4c 89 e6             	mov    %r12,%rsi
   363c4:	48 89 df             	mov    %rbx,%rdi
   363c7:	5b                   	pop    %rbx
   363c8:	5d                   	pop    %rbp
   363c9:	41 5c                	pop    %r12
   363cb:	41 5d                	pop    %r13
   363cd:	e9 9e f1 ff ff       	jmpq   35570 <usock_conn_accept>
   363d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   363d8:	4c 89 ee             	mov    %r13,%rsi
   363db:	48 8d 3d be d6 00 00 	lea    0xd6be(%rip),%rdi        # 43aa0 <__PRETTY_FUNCTION__.6731+0x1a0>
   363e2:	31 c0                	xor    %eax,%eax
   363e4:	e8 47 9d fe ff       	callq  20130 <log_msg>
   363e9:	eb ae                	jmp    36399 <service_acceptor+0x79>
   363eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   363f0:	e8 1b 97 fd ff       	callq  fb10 <__errno_location@plt>
   363f5:	be 11 00 00 00       	mov    $0x11,%esi
   363fa:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   36400:	e9 5b ff ff ff       	jmpq   36360 <service_acceptor+0x40>

0000000000036405 <.annobin_service_acceptor.end>:
   36405:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3640c:	00 00 00 00 

0000000000036410 <service_recv>:
   36410:	f3 0f 1e fa          	endbr64 
   36414:	41 54                	push   %r12
   36416:	55                   	push   %rbp
   36417:	48 89 d5             	mov    %rdx,%rbp
   3641a:	53                   	push   %rbx
   3641b:	48 89 f3             	mov    %rsi,%rbx
   3641e:	48 83 ec 10          	sub    $0x10,%rsp
   36422:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   36429:	00 00 
   3642b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   36430:	31 c0                	xor    %eax,%eax
   36432:	e8 39 ee ff ff       	callq  35270 <usock_conn_get_uuid>
   36437:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   3643c:	48 89 df             	mov    %rbx,%rdi
   3643f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   36446:	00 
   36447:	49 89 c4             	mov    %rax,%r12
   3644a:	e8 91 a5 fd ff       	callq  109e0 <flux_msg_get_type@plt>
   3644f:	85 c0                	test   %eax,%eax
   36451:	78 07                	js     3645a <service_recv+0x4a>
   36453:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
   36458:	74 26                	je     36480 <service_recv+0x70>
   3645a:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
   3645e:	75 60                	jne    364c0 <service_recv+0xb0>
   36460:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   36465:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3646c:	00 00 
   3646e:	75 6f                	jne    364df <service_recv+0xcf>
   36470:	48 83 c4 10          	add    $0x10,%rsp
   36474:	5b                   	pop    %rbx
   36475:	5d                   	pop    %rbp
   36476:	41 5c                	pop    %r12
   36478:	c3                   	retq   
   36479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   36480:	48 89 df             	mov    %rbx,%rdi
   36483:	e8 88 a3 fd ff       	callq  10810 <flux_msg_route_enable@plt>
   36488:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   3648c:	48 89 df             	mov    %rbx,%rdi
   3648f:	e8 dc 9d fd ff       	callq  10270 <flux_msg_set_cred@plt>
   36494:	85 c0                	test   %eax,%eax
   36496:	78 c2                	js     3645a <service_recv+0x4a>
   36498:	4c 89 e6             	mov    %r12,%rsi
   3649b:	48 89 df             	mov    %rbx,%rdi
   3649e:	e8 dd 95 fd ff       	callq  fa80 <flux_msg_route_push@plt>
   364a3:	85 c0                	test   %eax,%eax
   364a5:	78 b3                	js     3645a <service_recv+0x4a>
   364a7:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   364ab:	ba 02 00 00 00       	mov    $0x2,%edx
   364b0:	48 89 de             	mov    %rbx,%rsi
   364b3:	e8 48 9e fd ff       	callq  10300 <flux_requeue@plt>
   364b8:	85 c0                	test   %eax,%eax
   364ba:	79 a4                	jns    36460 <service_recv+0x50>
   364bc:	eb 9c                	jmp    3645a <service_recv+0x4a>
   364be:	66 90                	xchg   %ax,%ax
   364c0:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   364c4:	e8 b7 99 fd ff       	callq  fe80 <flux_msg_typestr@plt>
   364c9:	4c 89 e2             	mov    %r12,%rdx
   364cc:	48 8d 3d d5 d5 00 00 	lea    0xd5d5(%rip),%rdi        # 43aa8 <__PRETTY_FUNCTION__.6731+0x1a8>
   364d3:	48 89 c6             	mov    %rax,%rsi
   364d6:	31 c0                	xor    %eax,%eax
   364d8:	e8 53 9c fe ff       	callq  20130 <log_msg>
   364dd:	eb 81                	jmp    36460 <service_recv+0x50>
   364df:	e8 6c 99 fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000364e4 <.annobin_service_error.start>:
   364e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   364eb:	00 00 00 00 
   364ef:	90                   	nop

00000000000364f0 <service_error>:
   364f0:	f3 0f 1e fa          	endbr64 
   364f4:	41 55                	push   %r13
   364f6:	49 89 fd             	mov    %rdi,%r13
   364f9:	41 54                	push   %r12
   364fb:	55                   	push   %rbp
   364fc:	89 f5                	mov    %esi,%ebp
   364fe:	53                   	push   %rbx
   364ff:	48 89 d3             	mov    %rdx,%rbx
   36502:	48 83 ec 08          	sub    $0x8,%rsp
   36506:	e8 65 ed ff ff       	callq  35270 <usock_conn_get_uuid>
   3650b:	80 3b 00             	cmpb   $0x0,(%rbx)
   3650e:	49 89 c4             	mov    %rax,%r12
   36511:	74 2a                	je     3653d <service_error+0x4d>
   36513:	83 fd 20             	cmp    $0x20,%ebp
   36516:	0f 95 c2             	setne  %dl
   36519:	83 fd 47             	cmp    $0x47,%ebp
   3651c:	0f 95 c0             	setne  %al
   3651f:	84 c2                	test   %al,%dl
   36521:	74 09                	je     3652c <service_error+0x3c>
   36523:	83 fd 68             	cmp    $0x68,%ebp
   36526:	0f 85 bc 00 00 00    	jne    365e8 <service_error+0xf8>
   3652c:	4c 89 e6             	mov    %r12,%rsi
   3652f:	48 8d 3d 9a d5 00 00 	lea    0xd59a(%rip),%rdi        # 43ad0 <__PRETTY_FUNCTION__.6731+0x1d0>
   36536:	31 c0                	xor    %eax,%eax
   36538:	e8 f3 9b fe ff       	callq  20130 <log_msg>
   3653d:	31 f6                	xor    %esi,%esi
   3653f:	48 8d 3d 24 d4 00 00 	lea    0xd424(%rip),%rdi        # 4396a <__PRETTY_FUNCTION__.6731+0x6a>
   36546:	e8 65 9e fd ff       	callq  103b0 <flux_request_encode@plt>
   3654b:	48 89 c5             	mov    %rax,%rbp
   3654e:	48 85 c0             	test   %rax,%rax
   36551:	74 0c                	je     3655f <service_error+0x6f>
   36553:	48 89 c7             	mov    %rax,%rdi
   36556:	e8 65 a4 fd ff       	callq  109c0 <flux_msg_set_noresponse@plt>
   3655b:	85 c0                	test   %eax,%eax
   3655d:	79 29                	jns    36588 <service_error+0x98>
   3655f:	80 3b 00             	cmpb   $0x0,(%rbx)
   36562:	75 6c                	jne    365d0 <service_error+0xe0>
   36564:	48 89 ef             	mov    %rbp,%rdi
   36567:	e8 14 9f fd ff       	callq  10480 <flux_msg_decref@plt>
   3656c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   36570:	48 83 c4 08          	add    $0x8,%rsp
   36574:	4c 89 e6             	mov    %r12,%rsi
   36577:	5b                   	pop    %rbx
   36578:	5d                   	pop    %rbp
   36579:	41 5c                	pop    %r12
   3657b:	41 5d                	pop    %r13
   3657d:	e9 4e 3e 00 00       	jmpq   3a3d0 <fzhashx_delete>
   36582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36588:	48 89 ef             	mov    %rbp,%rdi
   3658b:	e8 80 a2 fd ff       	callq  10810 <flux_msg_route_enable@plt>
   36590:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   36594:	48 89 ef             	mov    %rbp,%rdi
   36597:	e8 d4 9c fd ff       	callq  10270 <flux_msg_set_cred@plt>
   3659c:	85 c0                	test   %eax,%eax
   3659e:	78 bf                	js     3655f <service_error+0x6f>
   365a0:	4c 89 e6             	mov    %r12,%rsi
   365a3:	48 89 ef             	mov    %rbp,%rdi
   365a6:	e8 d5 94 fd ff       	callq  fa80 <flux_msg_route_push@plt>
   365ab:	85 c0                	test   %eax,%eax
   365ad:	78 b0                	js     3655f <service_error+0x6f>
   365af:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   365b3:	ba 02 00 00 00       	mov    $0x2,%edx
   365b8:	48 89 ee             	mov    %rbp,%rsi
   365bb:	e8 40 9d fd ff       	callq  10300 <flux_requeue@plt>
   365c0:	85 c0                	test   %eax,%eax
   365c2:	79 a0                	jns    36564 <service_error+0x74>
   365c4:	eb 99                	jmp    3655f <service_error+0x6f>
   365c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   365cd:	00 00 00 
   365d0:	4c 89 e6             	mov    %r12,%rsi
   365d3:	48 8d 3d 06 d5 00 00 	lea    0xd506(%rip),%rdi        # 43ae0 <__PRETTY_FUNCTION__.6731+0x1e0>
   365da:	31 c0                	xor    %eax,%eax
   365dc:	e8 4f 9b fe ff       	callq  20130 <log_msg>
   365e1:	eb 81                	jmp    36564 <service_error+0x74>
   365e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   365e8:	4c 89 ef             	mov    %r13,%rdi
   365eb:	e8 70 ec ff ff       	callq  35260 <usock_conn_get_cred>
   365f0:	4c 89 e2             	mov    %r12,%rdx
   365f3:	48 8d 35 c0 d4 00 00 	lea    0xd4c0(%rip),%rsi        # 43aba <__PRETTY_FUNCTION__.6731+0x1ba>
   365fa:	89 ef                	mov    %ebp,%edi
   365fc:	8b 08                	mov    (%rax),%ecx
   365fe:	31 c0                	xor    %eax,%eax
   36600:	e8 bb 99 fe ff       	callq  1ffc0 <log_errn>
   36605:	e9 22 ff ff ff       	jmpq   3652c <service_error+0x3c>

000000000003660a <.annobin_connection_destructor.start>:
   3660a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000036610 <connection_destructor>:
   36610:	f3 0f 1e fa          	endbr64 
   36614:	48 85 ff             	test   %rdi,%rdi
   36617:	74 17                	je     36630 <connection_destructor+0x20>
   36619:	53                   	push   %rbx
   3661a:	48 89 fb             	mov    %rdi,%rbx
   3661d:	48 8b 3f             	mov    (%rdi),%rdi
   36620:	e8 0b ee ff ff       	callq  35430 <usock_conn_destroy>
   36625:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   3662c:	5b                   	pop    %rbx
   3662d:	c3                   	retq   
   3662e:	66 90                	xchg   %ax,%ax
   36630:	c3                   	retq   

0000000000036631 <.annobin_connection_destructor.end>:
   36631:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36638:	00 00 00 00 
   3663c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036640 <service_destroy.part.1>:
   36640:	41 54                	push   %r12
   36642:	55                   	push   %rbp
   36643:	53                   	push   %rbx
   36644:	48 89 fb             	mov    %rdi,%rbx
   36647:	e8 c4 94 fd ff       	callq  fb10 <__errno_location@plt>
   3664c:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   36650:	48 89 c5             	mov    %rax,%rbp
   36653:	44 8b 20             	mov    (%rax),%r12d
   36656:	e8 05 3a 00 00       	callq  3a060 <fzhashx_destroy>
   3665b:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3665f:	e8 8c f1 ff ff       	callq  357f0 <usock_server_destroy>
   36664:	48 89 df             	mov    %rbx,%rdi
   36667:	e8 44 94 fd ff       	callq  fab0 <free@plt>
   3666c:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   36670:	5b                   	pop    %rbx
   36671:	5d                   	pop    %rbp
   36672:	41 5c                	pop    %r12
   36674:	c3                   	retq   

0000000000036675 <.annobin_service_destroy.part.1.end>:
   36675:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3667c:	00 00 00 00 

0000000000036680 <service_destroy>:
   36680:	f3 0f 1e fa          	endbr64 
   36684:	48 85 ff             	test   %rdi,%rdi
   36687:	74 07                	je     36690 <service_destroy+0x10>
   36689:	eb b5                	jmp    36640 <service_destroy.part.1>
   3668b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   36690:	c3                   	retq   

0000000000036691 <.annobin_service_destroy.end>:
   36691:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36698:	00 00 00 00 
   3669c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000366a0 <usock_service_create>:
   366a0:	f3 0f 1e fa          	endbr64 
   366a4:	41 55                	push   %r13
   366a6:	41 89 d5             	mov    %edx,%r13d
   366a9:	41 54                	push   %r12
   366ab:	49 89 f4             	mov    %rsi,%r12
   366ae:	be 28 00 00 00       	mov    $0x28,%esi
   366b3:	55                   	push   %rbp
   366b4:	48 89 fd             	mov    %rdi,%rbp
   366b7:	bf 01 00 00 00       	mov    $0x1,%edi
   366bc:	53                   	push   %rbx
   366bd:	48 83 ec 08          	sub    $0x8,%rsp
   366c1:	e8 4a 9b fd ff       	callq  10210 <calloc@plt>
   366c6:	48 89 c3             	mov    %rax,%rbx
   366c9:	48 85 c0             	test   %rax,%rax
   366cc:	0f 84 a1 00 00 00    	je     36773 <usock_service_create+0xd3>
   366d2:	44 88 28             	mov    %r13b,(%rax)
   366d5:	ba ff 01 00 00       	mov    $0x1ff,%edx
   366da:	4c 89 e6             	mov    %r12,%rsi
   366dd:	48 89 ef             	mov    %rbp,%rdi
   366e0:	e8 0b f5 ff ff       	callq  35bf0 <usock_server_create>
   366e5:	48 89 43 08          	mov    %rax,0x8(%rbx)
   366e9:	48 85 c0             	test   %rax,%rax
   366ec:	0f 84 96 00 00 00    	je     36788 <usock_service_create+0xe8>
   366f2:	48 89 c7             	mov    %rax,%rdi
   366f5:	48 89 da             	mov    %rbx,%rdx
   366f8:	48 8d 35 21 fc ff ff 	lea    -0x3df(%rip),%rsi        # 36320 <service_acceptor>
   366ff:	e8 cc f0 ff ff       	callq  357d0 <usock_server_set_acceptor>
   36704:	e8 67 38 00 00       	callq  39f70 <fzhashx_new>
   36709:	48 89 c7             	mov    %rax,%rdi
   3670c:	48 89 43 18          	mov    %rax,0x18(%rbx)
   36710:	48 85 c0             	test   %rax,%rax
   36713:	74 73                	je     36788 <usock_service_create+0xe8>
   36715:	31 f6                	xor    %esi,%esi
   36717:	e8 94 44 00 00       	callq  3abb0 <fzhashx_set_key_duplicator>
   3671c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   36720:	31 f6                	xor    %esi,%esi
   36722:	e8 59 44 00 00       	callq  3ab80 <fzhashx_set_key_destructor>
   36727:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   3672b:	48 8d 35 de fe ff ff 	lea    -0x122(%rip),%rsi        # 36610 <connection_destructor>
   36732:	e8 e9 43 00 00       	callq  3ab20 <fzhashx_set_destructor>
   36737:	e8 24 97 fd ff       	callq  fe60 <getuid@plt>
   3673c:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%rbx)
   36743:	31 d2                	xor    %edx,%edx
   36745:	48 89 df             	mov    %rbx,%rdi
   36748:	89 43 10             	mov    %eax,0x10(%rbx)
   3674b:	48 8d 35 ee bc 21 00 	lea    0x21bcee(%rip),%rsi        # 252440 <service_handle_ops>
   36752:	e8 c9 93 fd ff       	callq  fb20 <flux_handle_create@plt>
   36757:	48 89 43 20          	mov    %rax,0x20(%rbx)
   3675b:	48 85 c0             	test   %rax,%rax
   3675e:	74 28                	je     36788 <usock_service_create+0xe8>
   36760:	48 89 ee             	mov    %rbp,%rsi
   36763:	48 89 c7             	mov    %rax,%rdi
   36766:	e8 05 9d fd ff       	callq  10470 <flux_set_reactor@plt>
   3676b:	85 c0                	test   %eax,%eax
   3676d:	78 19                	js     36788 <usock_service_create+0xe8>
   3676f:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
   36773:	48 83 c4 08          	add    $0x8,%rsp
   36777:	48 89 d8             	mov    %rbx,%rax
   3677a:	5b                   	pop    %rbx
   3677b:	5d                   	pop    %rbp
   3677c:	41 5c                	pop    %r12
   3677e:	41 5d                	pop    %r13
   36780:	c3                   	retq   
   36781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   36788:	48 89 df             	mov    %rbx,%rdi
   3678b:	31 db                	xor    %ebx,%ebx
   3678d:	e8 ae fe ff ff       	callq  36640 <service_destroy.part.1>
   36792:	48 83 c4 08          	add    $0x8,%rsp
   36796:	48 89 d8             	mov    %rbx,%rax
   36799:	5b                   	pop    %rbx
   3679a:	5d                   	pop    %rbp
   3679b:	41 5c                	pop    %r12
   3679d:	41 5d                	pop    %r13
   3679f:	c3                   	retq   

00000000000367a0 <hostlist_delete_range>:
   367a0:	48 83 ec 08          	sub    $0x8,%rsp
   367a4:	48 85 ff             	test   %rdi,%rdi
   367a7:	0f 84 bb 00 00 00    	je     36868 <hostlist_delete_range+0xc8>
   367ad:	49 89 f8             	mov    %rdi,%r8
   367b0:	8b 57 04             	mov    0x4(%rdi),%edx
   367b3:	85 f6                	test   %esi,%esi
   367b5:	0f 88 8e 00 00 00    	js     36849 <hostlist_delete_range+0xa9>
   367bb:	39 f2                	cmp    %esi,%edx
   367bd:	0f 8e 86 00 00 00    	jle    36849 <hostlist_delete_range+0xa9>
   367c3:	4c 8b 57 10          	mov    0x10(%rdi),%r10
   367c7:	48 63 ce             	movslq %esi,%rcx
   367ca:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
   367ce:	49 8d 04 ca          	lea    (%r10,%rcx,8),%rax
   367d2:	48 8b 38             	mov    (%rax),%rdi
   367d5:	44 39 ce             	cmp    %r9d,%esi
   367d8:	7d 27                	jge    36801 <hostlist_delete_range+0x61>
   367da:	29 f2                	sub    %esi,%edx
   367dc:	83 ea 02             	sub    $0x2,%edx
   367df:	48 01 ca             	add    %rcx,%rdx
   367e2:	49 8d 4c d2 08       	lea    0x8(%r10,%rdx,8),%rcx
   367e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   367ee:	00 00 
   367f0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   367f4:	48 83 c0 08          	add    $0x8,%rax
   367f8:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
   367fc:	48 39 c8             	cmp    %rcx,%rax
   367ff:	75 ef                	jne    367f0 <hostlist_delete_range+0x50>
   36801:	41 8b 40 20          	mov    0x20(%r8),%eax
   36805:	45 89 48 04          	mov    %r9d,0x4(%r8)
   36809:	4d 63 c9             	movslq %r9d,%r9
   3680c:	4b c7 04 ca 00 00 00 	movq   $0x0,(%r10,%r9,8)
   36813:	00 
   36814:	39 c6                	cmp    %eax,%esi
   36816:	74 20                	je     36838 <hostlist_delete_range+0x98>
   36818:	7d 0f                	jge    36829 <hostlist_delete_range+0x89>
   3681a:	83 e8 01             	sub    $0x1,%eax
   3681d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   36822:	0f 48 c2             	cmovs  %edx,%eax
   36825:	41 89 40 20          	mov    %eax,0x20(%r8)
   36829:	48 83 c4 08          	add    $0x8,%rsp
   3682d:	e9 ee 1b 00 00       	jmpq   38420 <hostrange_destroy>
   36832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36838:	41 c7 40 24 ff ff ff 	movl   $0xffffffff,0x24(%r8)
   3683f:	ff 
   36840:	48 83 c4 08          	add    $0x8,%rsp
   36844:	e9 d7 1b 00 00       	jmpq   38420 <hostrange_destroy>
   36849:	48 8d 0d 40 d3 00 00 	lea    0xd340(%rip),%rcx        # 43b90 <__PRETTY_FUNCTION__.5390>
   36850:	ba 3a 01 00 00       	mov    $0x13a,%edx
   36855:	48 8d 35 ae d2 00 00 	lea    0xd2ae(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   3685c:	48 8d 3d bd d2 00 00 	lea    0xd2bd(%rip),%rdi        # 43b20 <__PRETTY_FUNCTION__.6731+0x220>
   36863:	e8 98 97 fd ff       	callq  10000 <__assert_fail@plt>
   36868:	48 8d 0d 21 d3 00 00 	lea    0xd321(%rip),%rcx        # 43b90 <__PRETTY_FUNCTION__.5390>
   3686f:	ba 39 01 00 00       	mov    $0x139,%edx
   36874:	48 8d 35 8f d2 00 00 	lea    0xd28f(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   3687b:	48 8d 3d 93 d2 00 00 	lea    0xd293(%rip),%rdi        # 43b15 <__PRETTY_FUNCTION__.6731+0x215>
   36882:	e8 79 97 fd ff       	callq  10000 <__assert_fail@plt>

0000000000036887 <.annobin__cmp.start>:
   36887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3688e:	00 00 

0000000000036890 <_cmp>:
   36890:	f3 0f 1e fa          	endbr64 
   36894:	48 8b 36             	mov    (%rsi),%rsi
   36897:	48 8b 3f             	mov    (%rdi),%rdi
   3689a:	e9 d1 1e 00 00       	jmpq   38770 <hostrange_cmp>

000000000003689f <.annobin__cmp.end>:
   3689f:	90                   	nop

00000000000368a0 <hr_current>:
   368a0:	48 83 ec 08          	sub    $0x8,%rsp
   368a4:	48 85 ff             	test   %rdi,%rdi
   368a7:	74 16                	je     368bf <hr_current+0x1f>
   368a9:	48 63 47 20          	movslq 0x20(%rdi),%rax
   368ad:	3b 47 08             	cmp    0x8(%rdi),%eax
   368b0:	7f 2c                	jg     368de <hr_current+0x3e>
   368b2:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   368b6:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   368ba:	48 83 c4 08          	add    $0x8,%rsp
   368be:	c3                   	retq   
   368bf:	48 8d 0d ba d2 00 00 	lea    0xd2ba(%rip),%rcx        # 43b80 <__PRETTY_FUNCTION__.5646>
   368c6:	ba 1c 04 00 00       	mov    $0x41c,%edx
   368cb:	48 8d 35 38 d2 00 00 	lea    0xd238(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   368d2:	48 8d 3d 3c d2 00 00 	lea    0xd23c(%rip),%rdi        # 43b15 <__PRETTY_FUNCTION__.6731+0x215>
   368d9:	e8 22 97 fd ff       	callq  10000 <__assert_fail@plt>
   368de:	48 8d 0d 9b d2 00 00 	lea    0xd29b(%rip),%rcx        # 43b80 <__PRETTY_FUNCTION__.5646>
   368e5:	ba 1d 04 00 00       	mov    $0x41d,%edx
   368ea:	48 8d 35 19 d2 00 00 	lea    0xd219(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   368f1:	48 8d 3d 68 d2 00 00 	lea    0xd268(%rip),%rdi        # 43b60 <__PRETTY_FUNCTION__.6731+0x260>
   368f8:	e8 03 97 fd ff       	callq  10000 <__assert_fail@plt>

00000000000368fd <.annobin_hostlist_resize.start>:
   368fd:	0f 1f 00             	nopl   (%rax)

0000000000036900 <hostlist_resize>:
   36900:	41 54                	push   %r12
   36902:	55                   	push   %rbp
   36903:	53                   	push   %rbx
   36904:	48 85 ff             	test   %rdi,%rdi
   36907:	74 5e                	je     36967 <hostlist_resize+0x67>
   36909:	48 89 fb             	mov    %rdi,%rbx
   3690c:	44 8b 27             	mov    (%rdi),%r12d
   3690f:	48 89 f5             	mov    %rsi,%rbp
   36912:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   36916:	89 33                	mov    %esi,(%rbx)
   36918:	48 63 f6             	movslq %esi,%rsi
   3691b:	48 c1 e6 03          	shl    $0x3,%rsi
   3691f:	e8 ac 9c fd ff       	callq  105d0 <realloc@plt>
   36924:	48 89 43 10          	mov    %rax,0x10(%rbx)
   36928:	48 85 c0             	test   %rax,%rax
   3692b:	74 33                	je     36960 <hostlist_resize+0x60>
   3692d:	49 63 d4             	movslq %r12d,%rdx
   36930:	48 39 d5             	cmp    %rdx,%rbp
   36933:	76 1b                	jbe    36950 <hostlist_resize+0x50>
   36935:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
   36939:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
   3693d:	0f 1f 00             	nopl   (%rax)
   36940:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   36947:	48 83 c2 08          	add    $0x8,%rdx
   3694b:	48 39 c2             	cmp    %rax,%rdx
   3694e:	75 f0                	jne    36940 <hostlist_resize+0x40>
   36950:	5b                   	pop    %rbx
   36951:	b8 01 00 00 00       	mov    $0x1,%eax
   36956:	5d                   	pop    %rbp
   36957:	41 5c                	pop    %r12
   36959:	c3                   	retq   
   3695a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36960:	5b                   	pop    %rbx
   36961:	31 c0                	xor    %eax,%eax
   36963:	5d                   	pop    %rbp
   36964:	41 5c                	pop    %r12
   36966:	c3                   	retq   
   36967:	48 8d 0d 82 d2 00 00 	lea    0xd282(%rip),%rcx        # 43bf0 <__PRETTY_FUNCTION__.5341>
   3696e:	ba 97 00 00 00       	mov    $0x97,%edx
   36973:	48 8d 35 90 d1 00 00 	lea    0xd190(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   3697a:	48 8d 3d 94 d1 00 00 	lea    0xd194(%rip),%rdi        # 43b15 <__PRETTY_FUNCTION__.6731+0x215>
   36981:	e8 7a 96 fd ff       	callq  10000 <__assert_fail@plt>

0000000000036986 <.annobin_hostlist_append_range.start>:
   36986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3698d:	00 00 00 

0000000000036990 <hostlist_append_range>:
   36990:	41 54                	push   %r12
   36992:	55                   	push   %rbp
   36993:	53                   	push   %rbx
   36994:	48 85 f6             	test   %rsi,%rsi
   36997:	0f 84 d0 00 00 00    	je     36a6d <hostlist_append_range+0xdd>
   3699d:	48 63 47 04          	movslq 0x4(%rdi),%rax
   369a1:	48 89 f5             	mov    %rsi,%rbp
   369a4:	48 89 fb             	mov    %rdi,%rbx
   369a7:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   369ab:	8b 37                	mov    (%rdi),%esi
   369ad:	85 c0                	test   %eax,%eax
   369af:	7e 7f                	jle    36a30 <hostlist_append_range+0xa0>
   369b1:	48 63 c8             	movslq %eax,%rcx
   369b4:	4c 8b 64 ca f8       	mov    -0x8(%rdx,%rcx,8),%r12
   369b9:	39 f0                	cmp    %esi,%eax
   369bb:	74 7a                	je     36a37 <hostlist_append_range+0xa7>
   369bd:	48 89 ee             	mov    %rbp,%rsi
   369c0:	4c 89 e7             	mov    %r12,%rdi
   369c3:	e8 a8 1c 00 00       	callq  38670 <hostrange_prefix_cmp>
   369c8:	85 c0                	test   %eax,%eax
   369ca:	74 34                	je     36a00 <hostlist_append_range+0x70>
   369cc:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   369d0:	48 63 43 04          	movslq 0x4(%rbx),%rax
   369d4:	8d 48 01             	lea    0x1(%rax),%ecx
   369d7:	48 89 ef             	mov    %rbp,%rdi
   369da:	4c 8d 24 c2          	lea    (%rdx,%rax,8),%r12
   369de:	89 4b 04             	mov    %ecx,0x4(%rbx)
   369e1:	e8 7a 1b 00 00       	callq  38560 <hostrange_copy>
   369e6:	49 89 04 24          	mov    %rax,(%r12)
   369ea:	48 85 c0             	test   %rax,%rax
   369ed:	74 5a                	je     36a49 <hostlist_append_range+0xb9>
   369ef:	48 89 ef             	mov    %rbp,%rdi
   369f2:	e8 d9 19 00 00       	callq  383d0 <hostrange_count>
   369f7:	01 43 08             	add    %eax,0x8(%rbx)
   369fa:	5b                   	pop    %rbx
   369fb:	5d                   	pop    %rbp
   369fc:	41 5c                	pop    %r12
   369fe:	c3                   	retq   
   369ff:	90                   	nop
   36a00:	48 8b 45 08          	mov    0x8(%rbp),%rax
   36a04:	48 83 e8 01          	sub    $0x1,%rax
   36a08:	49 39 44 24 10       	cmp    %rax,0x10(%r12)
   36a0d:	75 bd                	jne    369cc <hostlist_append_range+0x3c>
   36a0f:	48 89 ee             	mov    %rbp,%rsi
   36a12:	4c 89 e7             	mov    %r12,%rdi
   36a15:	e8 e6 1c 00 00       	callq  38700 <hostrange_width_combine>
   36a1a:	85 c0                	test   %eax,%eax
   36a1c:	74 ae                	je     369cc <hostlist_append_range+0x3c>
   36a1e:	48 8b 45 10          	mov    0x10(%rbp),%rax
   36a22:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   36a27:	eb c6                	jmp    369ef <hostlist_append_range+0x5f>
   36a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   36a30:	4c 8b 22             	mov    (%rdx),%r12
   36a33:	39 f0                	cmp    %esi,%eax
   36a35:	75 9d                	jne    369d4 <hostlist_append_range+0x44>
   36a37:	83 c6 10             	add    $0x10,%esi
   36a3a:	48 89 df             	mov    %rbx,%rdi
   36a3d:	48 63 f6             	movslq %esi,%rsi
   36a40:	e8 bb fe ff ff       	callq  36900 <hostlist_resize>
   36a45:	85 c0                	test   %eax,%eax
   36a47:	75 0f                	jne    36a58 <hostlist_append_range+0xc8>
   36a49:	5b                   	pop    %rbx
   36a4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   36a4f:	5d                   	pop    %rbp
   36a50:	41 5c                	pop    %r12
   36a52:	c3                   	retq   
   36a53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   36a58:	48 63 43 04          	movslq 0x4(%rbx),%rax
   36a5c:	85 c0                	test   %eax,%eax
   36a5e:	0f 8f 59 ff ff ff    	jg     369bd <hostlist_append_range+0x2d>
   36a64:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   36a68:	e9 67 ff ff ff       	jmpq   369d4 <hostlist_append_range+0x44>
   36a6d:	48 8d 0d 8c d1 00 00 	lea    0xd18c(%rip),%rcx        # 43c00 <__PRETTY_FUNCTION__.5354>
   36a74:	ba b8 00 00 00       	mov    $0xb8,%edx
   36a79:	48 8d 35 8a d0 00 00 	lea    0xd08a(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   36a80:	48 8d 3d b3 d0 00 00 	lea    0xd0b3(%rip),%rdi        # 43b3a <__PRETTY_FUNCTION__.6731+0x23a>
   36a87:	e8 74 95 fd ff       	callq  10000 <__assert_fail@plt>

0000000000036a8c <.annobin_hostlist_append_range.end>:
   36a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036a90 <hostlist_insert_range>:
   36a90:	41 57                	push   %r15
   36a92:	41 56                	push   %r14
   36a94:	41 55                	push   %r13
   36a96:	41 54                	push   %r12
   36a98:	55                   	push   %rbp
   36a99:	53                   	push   %rbx
   36a9a:	48 83 ec 18          	sub    $0x18,%rsp
   36a9e:	48 85 ff             	test   %rdi,%rdi
   36aa1:	0f 84 dd 00 00 00    	je     36b84 <hostlist_insert_range+0xf4>
   36aa7:	49 89 f5             	mov    %rsi,%r13
   36aaa:	48 85 f6             	test   %rsi,%rsi
   36aad:	0f 84 f0 00 00 00    	je     36ba3 <hostlist_insert_range+0x113>
   36ab3:	8b 47 04             	mov    0x4(%rdi),%eax
   36ab6:	48 89 fd             	mov    %rdi,%rbp
   36ab9:	41 89 d4             	mov    %edx,%r12d
   36abc:	39 d0                	cmp    %edx,%eax
   36abe:	0f 8c af 00 00 00    	jl     36b73 <hostlist_insert_range+0xe3>
   36ac4:	3b 07                	cmp    (%rdi),%eax
   36ac6:	0f 84 94 00 00 00    	je     36b60 <hostlist_insert_range+0xd0>
   36acc:	4d 63 fc             	movslq %r12d,%r15
   36acf:	4c 89 ef             	mov    %r13,%rdi
   36ad2:	4a 8d 0c fd 00 00 00 	lea    0x0(,%r15,8),%rcx
   36ad9:	00 
   36ada:	49 89 ce             	mov    %rcx,%r14
   36add:	4c 03 75 10          	add    0x10(%rbp),%r14
   36ae1:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   36ae6:	49 8b 1e             	mov    (%r14),%rbx
   36ae9:	e8 72 1a 00 00       	callq  38560 <hostrange_copy>
   36aee:	8b 55 04             	mov    0x4(%rbp),%edx
   36af1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   36af6:	49 89 06             	mov    %rax,(%r14)
   36af9:	41 39 d4             	cmp    %edx,%r12d
   36afc:	7d 34                	jge    36b32 <hostlist_insert_range+0xa2>
   36afe:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   36b02:	48 8d 44 0e 08       	lea    0x8(%rsi,%rcx,1),%rax
   36b07:	44 89 e1             	mov    %r12d,%ecx
   36b0a:	f7 d1                	not    %ecx
   36b0c:	01 d1                	add    %edx,%ecx
   36b0e:	4c 01 f9             	add    %r15,%rcx
   36b11:	48 8d 74 ce 10       	lea    0x10(%rsi,%rcx,8),%rsi
   36b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   36b1d:	00 00 00 
   36b20:	48 8b 08             	mov    (%rax),%rcx
   36b23:	48 89 18             	mov    %rbx,(%rax)
   36b26:	48 83 c0 08          	add    $0x8,%rax
   36b2a:	48 89 cb             	mov    %rcx,%rbx
   36b2d:	48 39 f0             	cmp    %rsi,%rax
   36b30:	75 ee                	jne    36b20 <hostlist_insert_range+0x90>
   36b32:	83 c2 01             	add    $0x1,%edx
   36b35:	b8 01 00 00 00       	mov    $0x1,%eax
   36b3a:	89 55 04             	mov    %edx,0x4(%rbp)
   36b3d:	8b 55 20             	mov    0x20(%rbp),%edx
   36b40:	41 39 d4             	cmp    %edx,%r12d
   36b43:	7f 06                	jg     36b4b <hostlist_insert_range+0xbb>
   36b45:	83 c2 01             	add    $0x1,%edx
   36b48:	89 55 20             	mov    %edx,0x20(%rbp)
   36b4b:	48 83 c4 18          	add    $0x18,%rsp
   36b4f:	5b                   	pop    %rbx
   36b50:	5d                   	pop    %rbp
   36b51:	41 5c                	pop    %r12
   36b53:	41 5d                	pop    %r13
   36b55:	41 5e                	pop    %r14
   36b57:	41 5f                	pop    %r15
   36b59:	c3                   	retq   
   36b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36b60:	83 c0 10             	add    $0x10,%eax
   36b63:	48 63 f0             	movslq %eax,%rsi
   36b66:	e8 95 fd ff ff       	callq  36900 <hostlist_resize>
   36b6b:	85 c0                	test   %eax,%eax
   36b6d:	0f 85 59 ff ff ff    	jne    36acc <hostlist_insert_range+0x3c>
   36b73:	48 83 c4 18          	add    $0x18,%rsp
   36b77:	31 c0                	xor    %eax,%eax
   36b79:	5b                   	pop    %rbx
   36b7a:	5d                   	pop    %rbp
   36b7b:	41 5c                	pop    %r12
   36b7d:	41 5d                	pop    %r13
   36b7f:	41 5e                	pop    %r14
   36b81:	41 5f                	pop    %r15
   36b83:	c3                   	retq   
   36b84:	48 8d 0d 25 d0 00 00 	lea    0xd025(%rip),%rcx        # 43bb0 <__PRETTY_FUNCTION__.5372>
   36b8b:	ba ed 00 00 00       	mov    $0xed,%edx
   36b90:	48 8d 35 73 cf 00 00 	lea    0xcf73(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   36b97:	48 8d 3d 77 cf 00 00 	lea    0xcf77(%rip),%rdi        # 43b15 <__PRETTY_FUNCTION__.6731+0x215>
   36b9e:	e8 5d 94 fd ff       	callq  10000 <__assert_fail@plt>
   36ba3:	48 8d 0d 06 d0 00 00 	lea    0xd006(%rip),%rcx        # 43bb0 <__PRETTY_FUNCTION__.5372>
   36baa:	ba ee 00 00 00       	mov    $0xee,%edx
   36baf:	48 8d 35 54 cf 00 00 	lea    0xcf54(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   36bb6:	48 8d 3d 7d cf 00 00 	lea    0xcf7d(%rip),%rdi        # 43b3a <__PRETTY_FUNCTION__.6731+0x23a>
   36bbd:	e8 3e 94 fd ff       	callq  10000 <__assert_fail@plt>

0000000000036bc2 <.annobin_hostlist_insert_range.end>:
   36bc2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36bc9:	00 00 00 00 
   36bcd:	0f 1f 00             	nopl   (%rax)

0000000000036bd0 <hostlist_remove_at>:
   36bd0:	48 63 56 08          	movslq 0x8(%rsi),%rdx
   36bd4:	39 57 08             	cmp    %edx,0x8(%rdi)
   36bd7:	7e 77                	jle    36c50 <hostlist_remove_at+0x80>
   36bd9:	41 55                	push   %r13
   36bdb:	41 54                	push   %r12
   36bdd:	55                   	push   %rbp
   36bde:	48 89 f5             	mov    %rsi,%rbp
   36be1:	53                   	push   %rbx
   36be2:	48 89 fb             	mov    %rdi,%rbx
   36be5:	48 83 ec 08          	sub    $0x8,%rsp
   36be9:	48 8b 47 10          	mov    0x10(%rdi),%rax
   36bed:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   36bf1:	48 8b 46 08          	mov    0x8(%rsi),%rax
   36bf5:	48 39 47 20          	cmp    %rax,0x20(%rdi)
   36bf9:	0f 84 a1 00 00 00    	je     36ca0 <hostlist_remove_at+0xd0>
   36bff:	48 63 75 0c          	movslq 0xc(%rbp),%rsi
   36c03:	4c 89 ef             	mov    %r13,%rdi
   36c06:	49 03 75 08          	add    0x8(%r13),%rsi
   36c0a:	e8 a1 19 00 00       	callq  385b0 <hostrange_delete_host>
   36c0f:	49 89 c4             	mov    %rax,%r12
   36c12:	48 85 c0             	test   %rax,%rax
   36c15:	74 41                	je     36c58 <hostlist_remove_at+0x88>
   36c17:	8b 45 08             	mov    0x8(%rbp),%eax
   36c1a:	4c 89 e6             	mov    %r12,%rsi
   36c1d:	48 89 df             	mov    %rbx,%rdi
   36c20:	8d 50 01             	lea    0x1(%rax),%edx
   36c23:	e8 68 fe ff ff       	callq  36a90 <hostlist_insert_range>
   36c28:	4c 89 e7             	mov    %r12,%rdi
   36c2b:	e8 f0 17 00 00       	callq  38420 <hostrange_destroy>
   36c30:	8b 43 20             	mov    0x20(%rbx),%eax
   36c33:	3b 45 08             	cmp    0x8(%rbp),%eax
   36c36:	74 48                	je     36c80 <hostlist_remove_at+0xb0>
   36c38:	83 6b 08 01          	subl   $0x1,0x8(%rbx)
   36c3c:	48 83 c4 08          	add    $0x8,%rsp
   36c40:	b8 01 00 00 00       	mov    $0x1,%eax
   36c45:	5b                   	pop    %rbx
   36c46:	5d                   	pop    %rbp
   36c47:	41 5c                	pop    %r12
   36c49:	41 5d                	pop    %r13
   36c4b:	c3                   	retq   
   36c4c:	0f 1f 40 00          	nopl   0x0(%rax)
   36c50:	31 c0                	xor    %eax,%eax
   36c52:	c3                   	retq   
   36c53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   36c58:	4c 89 ef             	mov    %r13,%rdi
   36c5b:	e8 b0 1b 00 00       	callq  38810 <hostrange_empty>
   36c60:	85 c0                	test   %eax,%eax
   36c62:	75 5c                	jne    36cc0 <hostlist_remove_at+0xf0>
   36c64:	8b 45 08             	mov    0x8(%rbp),%eax
   36c67:	39 43 20             	cmp    %eax,0x20(%rbx)
   36c6a:	75 cc                	jne    36c38 <hostlist_remove_at+0x68>
   36c6c:	8b 43 24             	mov    0x24(%rbx),%eax
   36c6f:	8b 55 0c             	mov    0xc(%rbp),%edx
   36c72:	39 d0                	cmp    %edx,%eax
   36c74:	7c c2                	jl     36c38 <hostlist_remove_at+0x68>
   36c76:	29 d0                	sub    %edx,%eax
   36c78:	83 e8 01             	sub    $0x1,%eax
   36c7b:	89 43 24             	mov    %eax,0x24(%rbx)
   36c7e:	eb b8                	jmp    36c38 <hostlist_remove_at+0x68>
   36c80:	8b 53 24             	mov    0x24(%rbx),%edx
   36c83:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   36c86:	39 ca                	cmp    %ecx,%edx
   36c88:	7c ae                	jl     36c38 <hostlist_remove_at+0x68>
   36c8a:	29 ca                	sub    %ecx,%edx
   36c8c:	83 c0 01             	add    $0x1,%eax
   36c8f:	83 ea 01             	sub    $0x1,%edx
   36c92:	89 43 20             	mov    %eax,0x20(%rbx)
   36c95:	89 53 24             	mov    %edx,0x24(%rbx)
   36c98:	eb 9e                	jmp    36c38 <hostlist_remove_at+0x68>
   36c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36ca0:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   36ca4:	e8 07 8e fd ff       	callq  fab0 <free@plt>
   36ca9:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   36cb0:	00 
   36cb1:	e9 49 ff ff ff       	jmpq   36bff <hostlist_remove_at+0x2f>
   36cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   36cbd:	00 00 00 
   36cc0:	8b 75 08             	mov    0x8(%rbp),%esi
   36cc3:	48 89 df             	mov    %rbx,%rdi
   36cc6:	e8 d5 fa ff ff       	callq  367a0 <hostlist_delete_range>
   36ccb:	e9 68 ff ff ff       	jmpq   36c38 <hostlist_remove_at+0x68>

0000000000036cd0 <hostlist_find_host.isra.4>:
   36cd0:	41 57                	push   %r15
   36cd2:	49 89 ff             	mov    %rdi,%r15
   36cd5:	48 89 d7             	mov    %rdx,%rdi
   36cd8:	41 56                	push   %r14
   36cda:	49 89 ce             	mov    %rcx,%r14
   36cdd:	41 55                	push   %r13
   36cdf:	41 54                	push   %r12
   36ce1:	49 89 f4             	mov    %rsi,%r12
   36ce4:	55                   	push   %rbp
   36ce5:	53                   	push   %rbx
   36ce6:	48 83 ec 18          	sub    $0x18,%rsp
   36cea:	e8 01 16 00 00       	callq  382f0 <hostname_create>
   36cef:	48 85 c0             	test   %rax,%rax
   36cf2:	0f 84 a2 00 00 00    	je     36d9a <hostlist_find_host.isra.4+0xca>
   36cf8:	49 89 c5             	mov    %rax,%r13
   36cfb:	41 8b 07             	mov    (%r15),%eax
   36cfe:	85 c0                	test   %eax,%eax
   36d00:	7e 7e                	jle    36d80 <hostlist_find_host.isra.4+0xb0>
   36d02:	31 db                	xor    %ebx,%ebx
   36d04:	31 ed                	xor    %ebp,%ebp
   36d06:	eb 20                	jmp    36d28 <hostlist_find_host.isra.4+0x58>
   36d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   36d0f:	00 
   36d10:	49 8b 04 24          	mov    (%r12),%rax
   36d14:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   36d18:	48 83 c3 01          	add    $0x1,%rbx
   36d1c:	e8 af 16 00 00       	callq  383d0 <hostrange_count>
   36d21:	01 c5                	add    %eax,%ebp
   36d23:	41 39 1f             	cmp    %ebx,(%r15)
   36d26:	7e 58                	jle    36d80 <hostlist_find_host.isra.4+0xb0>
   36d28:	49 8b 04 24          	mov    (%r12),%rax
   36d2c:	4c 89 ee             	mov    %r13,%rsi
   36d2f:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   36d33:	e8 68 1d 00 00       	callq  38aa0 <hostrange_hn_within>
   36d38:	85 c0                	test   %eax,%eax
   36d3a:	78 d4                	js     36d10 <hostlist_find_host.isra.4+0x40>
   36d3c:	49 8b 3e             	mov    (%r14),%rdi
   36d3f:	01 c5                	add    %eax,%ebp
   36d41:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   36d45:	e8 66 8d fd ff       	callq  fab0 <free@plt>
   36d4a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   36d4e:	41 89 5e 08          	mov    %ebx,0x8(%r14)
   36d52:	4c 89 ef             	mov    %r13,%rdi
   36d55:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   36d5c:	41 89 46 0c          	mov    %eax,0xc(%r14)
   36d60:	e8 8b 13 00 00       	callq  380f0 <hostname_destroy>
   36d65:	85 ed                	test   %ebp,%ebp
   36d67:	78 24                	js     36d8d <hostlist_find_host.isra.4+0xbd>
   36d69:	48 83 c4 18          	add    $0x18,%rsp
   36d6d:	89 e8                	mov    %ebp,%eax
   36d6f:	5b                   	pop    %rbx
   36d70:	5d                   	pop    %rbp
   36d71:	41 5c                	pop    %r12
   36d73:	41 5d                	pop    %r13
   36d75:	41 5e                	pop    %r14
   36d77:	41 5f                	pop    %r15
   36d79:	c3                   	retq   
   36d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36d80:	4c 89 ef             	mov    %r13,%rdi
   36d83:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   36d88:	e8 63 13 00 00       	callq  380f0 <hostname_destroy>
   36d8d:	e8 7e 8d fd ff       	callq  fb10 <__errno_location@plt>
   36d92:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   36d98:	eb cf                	jmp    36d69 <hostlist_find_host.isra.4+0x99>
   36d9a:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   36d9f:	eb c8                	jmp    36d69 <hostlist_find_host.isra.4+0x99>

0000000000036da1 <.annobin_hostlist_create.start>:
   36da1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36da8:	00 00 00 00 
   36dac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036db0 <hostlist_create>:
   36db0:	f3 0f 1e fa          	endbr64 
   36db4:	53                   	push   %rbx
   36db5:	be 28 00 00 00       	mov    $0x28,%esi
   36dba:	bf 01 00 00 00       	mov    $0x1,%edi
   36dbf:	e8 4c 94 fd ff       	callq  10210 <calloc@plt>
   36dc4:	48 89 c3             	mov    %rax,%rbx
   36dc7:	48 85 c0             	test   %rax,%rax
   36dca:	74 1e                	je     36dea <hostlist_create+0x3a>
   36dcc:	be 08 00 00 00       	mov    $0x8,%esi
   36dd1:	bf 10 00 00 00       	mov    $0x10,%edi
   36dd6:	e8 35 94 fd ff       	callq  10210 <calloc@plt>
   36ddb:	48 89 43 10          	mov    %rax,0x10(%rbx)
   36ddf:	48 85 c0             	test   %rax,%rax
   36de2:	74 0c                	je     36df0 <hostlist_create+0x40>
   36de4:	c7 03 10 00 00 00    	movl   $0x10,(%rbx)
   36dea:	48 89 d8             	mov    %rbx,%rax
   36ded:	5b                   	pop    %rbx
   36dee:	c3                   	retq   
   36def:	90                   	nop
   36df0:	48 89 df             	mov    %rbx,%rdi
   36df3:	31 db                	xor    %ebx,%ebx
   36df5:	e8 b6 8c fd ff       	callq  fab0 <free@plt>
   36dfa:	eb ee                	jmp    36dea <hostlist_create+0x3a>

0000000000036dfc <.annobin_hostlist_copy.start>:
   36dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036e00 <hostlist_copy>:
   36e00:	f3 0f 1e fa          	endbr64 
   36e04:	41 55                	push   %r13
   36e06:	41 54                	push   %r12
   36e08:	55                   	push   %rbp
   36e09:	53                   	push   %rbx
   36e0a:	48 83 ec 08          	sub    $0x8,%rsp
   36e0e:	48 85 ff             	test   %rdi,%rdi
   36e11:	74 6d                	je     36e80 <hostlist_copy+0x80>
   36e13:	48 89 fd             	mov    %rdi,%rbp
   36e16:	e8 95 ff ff ff       	callq  36db0 <hostlist_create>
   36e1b:	49 89 c5             	mov    %rax,%r13
   36e1e:	48 85 c0             	test   %rax,%rax
   36e21:	74 5d                	je     36e80 <hostlist_copy+0x80>
   36e23:	48 63 75 04          	movslq 0x4(%rbp),%rsi
   36e27:	89 70 04             	mov    %esi,0x4(%rax)
   36e2a:	8b 45 08             	mov    0x8(%rbp),%eax
   36e2d:	41 89 45 08          	mov    %eax,0x8(%r13)
   36e31:	41 3b 75 00          	cmp    0x0(%r13),%esi
   36e35:	7f 39                	jg     36e70 <hostlist_copy+0x70>
   36e37:	8b 45 04             	mov    0x4(%rbp),%eax
   36e3a:	85 c0                	test   %eax,%eax
   36e3c:	7e 24                	jle    36e62 <hostlist_copy+0x62>
   36e3e:	31 db                	xor    %ebx,%ebx
   36e40:	49 8b 45 10          	mov    0x10(%r13),%rax
   36e44:	4c 8d 24 d8          	lea    (%rax,%rbx,8),%r12
   36e48:	48 8b 45 10          	mov    0x10(%rbp),%rax
   36e4c:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   36e50:	48 83 c3 01          	add    $0x1,%rbx
   36e54:	e8 07 17 00 00       	callq  38560 <hostrange_copy>
   36e59:	49 89 04 24          	mov    %rax,(%r12)
   36e5d:	39 5d 04             	cmp    %ebx,0x4(%rbp)
   36e60:	7f de                	jg     36e40 <hostlist_copy+0x40>
   36e62:	48 83 c4 08          	add    $0x8,%rsp
   36e66:	4c 89 e8             	mov    %r13,%rax
   36e69:	5b                   	pop    %rbx
   36e6a:	5d                   	pop    %rbp
   36e6b:	41 5c                	pop    %r12
   36e6d:	41 5d                	pop    %r13
   36e6f:	c3                   	retq   
   36e70:	4c 89 ef             	mov    %r13,%rdi
   36e73:	e8 88 fa ff ff       	callq  36900 <hostlist_resize>
   36e78:	eb bd                	jmp    36e37 <hostlist_copy+0x37>
   36e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36e80:	48 83 c4 08          	add    $0x8,%rsp
   36e84:	45 31 ed             	xor    %r13d,%r13d
   36e87:	5b                   	pop    %rbx
   36e88:	4c 89 e8             	mov    %r13,%rax
   36e8b:	5d                   	pop    %rbp
   36e8c:	41 5c                	pop    %r12
   36e8e:	41 5d                	pop    %r13
   36e90:	c3                   	retq   

0000000000036e91 <.annobin_hostlist_copy.end>:
   36e91:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36e98:	00 00 00 00 
   36e9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036ea0 <hostlist_destroy>:
   36ea0:	f3 0f 1e fa          	endbr64 
   36ea4:	48 85 ff             	test   %rdi,%rdi
   36ea7:	74 67                	je     36f10 <hostlist_destroy+0x70>
   36ea9:	41 55                	push   %r13
   36eab:	41 54                	push   %r12
   36ead:	55                   	push   %rbp
   36eae:	48 89 fd             	mov    %rdi,%rbp
   36eb1:	53                   	push   %rbx
   36eb2:	48 83 ec 08          	sub    $0x8,%rsp
   36eb6:	e8 55 8c fd ff       	callq  fb10 <__errno_location@plt>
   36ebb:	49 89 c4             	mov    %rax,%r12
   36ebe:	44 8b 28             	mov    (%rax),%r13d
   36ec1:	8b 45 04             	mov    0x4(%rbp),%eax
   36ec4:	85 c0                	test   %eax,%eax
   36ec6:	7e 1e                	jle    36ee6 <hostlist_destroy+0x46>
   36ec8:	31 db                	xor    %ebx,%ebx
   36eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36ed0:	48 8b 45 10          	mov    0x10(%rbp),%rax
   36ed4:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   36ed8:	48 83 c3 01          	add    $0x1,%rbx
   36edc:	e8 3f 15 00 00       	callq  38420 <hostrange_destroy>
   36ee1:	39 5d 04             	cmp    %ebx,0x4(%rbp)
   36ee4:	7f ea                	jg     36ed0 <hostlist_destroy+0x30>
   36ee6:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   36eea:	e8 c1 8b fd ff       	callq  fab0 <free@plt>
   36eef:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   36ef3:	e8 b8 8b fd ff       	callq  fab0 <free@plt>
   36ef8:	48 89 ef             	mov    %rbp,%rdi
   36efb:	e8 b0 8b fd ff       	callq  fab0 <free@plt>
   36f00:	45 89 2c 24          	mov    %r13d,(%r12)
   36f04:	48 83 c4 08          	add    $0x8,%rsp
   36f08:	5b                   	pop    %rbx
   36f09:	5d                   	pop    %rbp
   36f0a:	41 5c                	pop    %r12
   36f0c:	41 5d                	pop    %r13
   36f0e:	c3                   	retq   
   36f0f:	90                   	nop
   36f10:	c3                   	retq   

0000000000036f11 <.annobin_hostlist_create_bracketed.isra.6.constprop.12.start>:
   36f11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   36f18:	00 00 00 00 
   36f1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000036f20 <hostlist_create_bracketed.isra.6.constprop.12>:
   36f20:	55                   	push   %rbp
   36f21:	48 89 e5             	mov    %rsp,%rbp
   36f24:	41 57                	push   %r15
   36f26:	41 56                	push   %r14
   36f28:	41 55                	push   %r13
   36f2a:	41 54                	push   %r12
   36f2c:	53                   	push   %rbx
   36f2d:	4c 8d 9c 24 00 40 fc 	lea    -0x3c000(%rsp),%r11
   36f34:	ff 
   36f35:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   36f3c:	48 83 0c 24 00       	orq    $0x0,(%rsp)
   36f41:	4c 39 dc             	cmp    %r11,%rsp
   36f44:	75 ef                	jne    36f35 <hostlist_create_bracketed.isra.6.constprop.12+0x15>
   36f46:	48 81 ec 88 04 00 00 	sub    $0x488,%rsp
   36f4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   36f54:	00 00 
   36f56:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   36f5a:	31 c0                	xor    %eax,%eax
   36f5c:	48 89 fb             	mov    %rdi,%rbx
   36f5f:	e8 4c fe ff ff       	callq  36db0 <hostlist_create>
   36f64:	48 89 85 90 3b fc ff 	mov    %rax,-0x3c470(%rbp)
   36f6b:	48 85 db             	test   %rbx,%rbx
   36f6e:	74 5a                	je     36fca <hostlist_create_bracketed.isra.6.constprop.12+0xaa>
   36f70:	48 89 df             	mov    %rbx,%rdi
   36f73:	e8 28 9a fd ff       	callq  109a0 <strdup@plt>
   36f78:	48 8d 8d b8 3b fc ff 	lea    -0x3c448(%rbp),%rcx
   36f7f:	48 89 85 50 3b fc ff 	mov    %rax,-0x3c4b0(%rbp)
   36f86:	49 89 c7             	mov    %rax,%r15
   36f89:	48 89 8d 98 3b fc ff 	mov    %rcx,-0x3c468(%rbp)
   36f90:	48 85 c0             	test   %rax,%rax
   36f93:	75 20                	jne    36fb5 <hostlist_create_bracketed.isra.6.constprop.12+0x95>
   36f95:	e9 66 06 00 00       	jmpq   37600 <hostlist_create_bracketed.isra.6.constprop.12+0x6e0>
   36f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   36fa0:	48 8d 3d a8 cb 00 00 	lea    0xcba8(%rip),%rdi        # 43b4f <__PRETTY_FUNCTION__.6731+0x24f>
   36fa7:	e8 04 8f fd ff       	callq  feb0 <strchr@plt>
   36fac:	48 85 c0             	test   %rax,%rax
   36faf:	74 47                	je     36ff8 <hostlist_create_bracketed.isra.6.constprop.12+0xd8>
   36fb1:	49 83 c7 01          	add    $0x1,%r15
   36fb5:	41 0f be 37          	movsbl (%r15),%esi
   36fb9:	40 84 f6             	test   %sil,%sil
   36fbc:	75 e2                	jne    36fa0 <hostlist_create_bracketed.isra.6.constprop.12+0x80>
   36fbe:	48 8b bd 50 3b fc ff 	mov    -0x3c4b0(%rbp),%rdi
   36fc5:	e8 e6 8a fd ff       	callq  fab0 <free@plt>
   36fca:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   36fce:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   36fd5:	00 00 
   36fd7:	48 8b 85 90 3b fc ff 	mov    -0x3c470(%rbp),%rax
   36fde:	0f 85 57 06 00 00    	jne    3763b <hostlist_create_bracketed.isra.6.constprop.12+0x71b>
   36fe4:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   36fe8:	5b                   	pop    %rbx
   36fe9:	41 5c                	pop    %r12
   36feb:	41 5d                	pop    %r13
   36fed:	41 5e                	pop    %r14
   36fef:	41 5f                	pop    %r15
   36ff1:	5d                   	pop    %rbp
   36ff2:	c3                   	retq   
   36ff3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   36ff8:	41 0f b6 1f          	movzbl (%r15),%ebx
   36ffc:	4c 89 bd a8 3b fc ff 	mov    %r15,-0x3c458(%rbp)
   37003:	45 31 e4             	xor    %r12d,%r12d
   37006:	4d 89 fd             	mov    %r15,%r13
   37009:	84 db                	test   %bl,%bl
   3700b:	75 1b                	jne    37028 <hostlist_create_bracketed.isra.6.constprop.12+0x108>
   3700d:	eb 53                	jmp    37062 <hostlist_create_bracketed.isra.6.constprop.12+0x142>
   3700f:	90                   	nop
   37010:	31 c0                	xor    %eax,%eax
   37012:	80 fb 5d             	cmp    $0x5d,%bl
   37015:	0f 94 c0             	sete   %al
   37018:	49 83 c5 01          	add    $0x1,%r13
   3701c:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   37021:	41 29 c4             	sub    %eax,%r12d
   37024:	84 db                	test   %bl,%bl
   37026:	74 33                	je     3705b <hostlist_create_bracketed.isra.6.constprop.12+0x13b>
   37028:	45 85 e4             	test   %r12d,%r12d
   3702b:	75 18                	jne    37045 <hostlist_create_bracketed.isra.6.constprop.12+0x125>
   3702d:	0f be f3             	movsbl %bl,%esi
   37030:	48 8d 3d 18 cb 00 00 	lea    0xcb18(%rip),%rdi        # 43b4f <__PRETTY_FUNCTION__.6731+0x24f>
   37037:	e8 74 8e fd ff       	callq  feb0 <strchr@plt>
   3703c:	48 85 c0             	test   %rax,%rax
   3703f:	0f 85 3b 03 00 00    	jne    37380 <hostlist_create_bracketed.isra.6.constprop.12+0x460>
   37045:	80 fb 5b             	cmp    $0x5b,%bl
   37048:	75 c6                	jne    37010 <hostlist_create_bracketed.isra.6.constprop.12+0xf0>
   3704a:	49 83 c5 01          	add    $0x1,%r13
   3704e:	41 0f b6 5d 00       	movzbl 0x0(%r13),%ebx
   37053:	41 83 c4 01          	add    $0x1,%r12d
   37057:	84 db                	test   %bl,%bl
   37059:	75 cd                	jne    37028 <hostlist_create_bracketed.isra.6.constprop.12+0x108>
   3705b:	4c 89 ad a8 3b fc ff 	mov    %r13,-0x3c458(%rbp)
  return __builtin___strncpy_chk (__dest, __src, __len,
   37062:	48 8d 9d c0 fb ff ff 	lea    -0x440(%rbp),%rbx
   37069:	4c 89 fe             	mov    %r15,%rsi
   3706c:	ba ff 03 00 00       	mov    $0x3ff,%edx
   37071:	48 89 df             	mov    %rbx,%rdi
   37074:	e8 e7 8a fd ff       	callq  fb60 <strncpy@plt>
   37079:	be 5b 00 00 00       	mov    $0x5b,%esi
   3707e:	4c 89 ff             	mov    %r15,%rdi
   37081:	e8 2a 8e fd ff       	callq  feb0 <strchr@plt>
   37086:	48 85 c0             	test   %rax,%rax
   37089:	0f 84 51 02 00 00    	je     372e0 <hostlist_create_bracketed.isra.6.constprop.12+0x3c0>
   3708f:	c6 00 00             	movb   $0x0,(%rax)
   37092:	48 8d 58 01          	lea    0x1(%rax),%rbx
   37096:	be 5d 00 00 00       	mov    $0x5d,%esi
   3709b:	48 89 df             	mov    %rbx,%rdi
   3709e:	e8 0d 8e fd ff       	callq  feb0 <strchr@plt>
   370a3:	48 89 85 68 3b fc ff 	mov    %rax,-0x3c498(%rbp)
   370aa:	48 85 c0             	test   %rax,%rax
   370ad:	0f 84 3d 05 00 00    	je     375f0 <hostlist_create_bracketed.isra.6.constprop.12+0x6d0>
   370b3:	c6 00 00             	movb   $0x0,(%rax)
   370b6:	48 8d 85 c0 3b fc ff 	lea    -0x3c440(%rbp),%rax
   370bd:	48 89 85 60 3b fc ff 	mov    %rax,-0x3c4a0(%rbp)
   370c4:	49 89 c5             	mov    %rax,%r13
   370c7:	c7 85 a0 3b fc ff 00 	movl   $0x0,-0x3c460(%rbp)
   370ce:	00 00 00 
   370d1:	4c 89 bd 58 3b fc ff 	mov    %r15,-0x3c4a8(%rbp)
   370d8:	e9 9c 00 00 00       	jmpq   37179 <hostlist_create_bracketed.isra.6.constprop.12+0x259>
   370dd:	0f 1f 00             	nopl   (%rax)
   370e0:	49 89 55 08          	mov    %rdx,0x8(%r13)
   370e4:	48 89 8d 70 3b fc ff 	mov    %rcx,-0x3c490(%rbp)
   370eb:	48 89 95 78 3b fc ff 	mov    %rdx,-0x3c488(%rbp)
   370f2:	e8 19 8a fd ff       	callq  fb10 <__errno_location@plt>
   370f7:	48 8b 8d 70 3b fc ff 	mov    -0x3c490(%rbp),%rcx
   370fe:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37104:	4c 39 f1             	cmp    %r14,%rcx
   37107:	0f 84 99 01 00 00    	je     372a6 <hostlist_create_bracketed.isra.6.constprop.12+0x386>
   3710d:	80 39 00             	cmpb   $0x0,(%rcx)
   37110:	0f 85 90 01 00 00    	jne    372a6 <hostlist_create_bracketed.isra.6.constprop.12+0x386>
   37116:	48 8b 95 78 3b fc ff 	mov    -0x3c488(%rbp),%rdx
   3711d:	4c 39 fa             	cmp    %r15,%rdx
   37120:	0f 82 80 01 00 00    	jb     372a6 <hostlist_create_bracketed.isra.6.constprop.12+0x386>
   37126:	48 83 c2 01          	add    $0x1,%rdx
   3712a:	4c 29 fa             	sub    %r15,%rdx
   3712d:	48 81 fa 00 00 10 00 	cmp    $0x100000,%rdx
   37134:	0f 87 66 01 00 00    	ja     372a0 <hostlist_create_bracketed.isra.6.constprop.12+0x380>
   3713a:	48 8b bd 88 3b fc ff 	mov    -0x3c478(%rbp),%rdi
   37141:	e8 6a 89 fd ff       	callq  fab0 <free@plt>
   37146:	48 89 df             	mov    %rbx,%rdi
   37149:	e8 d2 8c fd ff       	callq  fe20 <strlen@plt>
   3714e:	41 89 45 10          	mov    %eax,0x10(%r13)
   37152:	4d 85 e4             	test   %r12,%r12
   37155:	0f 84 75 02 00 00    	je     373d0 <hostlist_create_bracketed.isra.6.constprop.12+0x4b0>
   3715b:	8b 85 80 3b fc ff    	mov    -0x3c480(%rbp),%eax
   37161:	49 83 c5 18          	add    $0x18,%r13
   37165:	4c 89 e3             	mov    %r12,%rbx
   37168:	3d 00 28 00 00       	cmp    $0x2800,%eax
   3716d:	0f 84 3f 01 00 00    	je     372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   37173:	89 85 a0 3b fc ff    	mov    %eax,-0x3c460(%rbp)
   37179:	be 2c 00 00 00       	mov    $0x2c,%esi
   3717e:	48 89 df             	mov    %rbx,%rdi
   37181:	e8 2a 8d fd ff       	callq  feb0 <strchr@plt>
   37186:	49 89 c4             	mov    %rax,%r12
   37189:	48 85 c0             	test   %rax,%rax
   3718c:	74 07                	je     37195 <hostlist_create_bracketed.isra.6.constprop.12+0x275>
   3718e:	c6 00 00             	movb   $0x0,(%rax)
   37191:	49 83 c4 01          	add    $0x1,%r12
   37195:	8b 85 a0 3b fc ff    	mov    -0x3c460(%rbp),%eax
   3719b:	48 89 df             	mov    %rbx,%rdi
   3719e:	83 c0 01             	add    $0x1,%eax
   371a1:	89 85 80 3b fc ff    	mov    %eax,-0x3c480(%rbp)
   371a7:	e8 f4 97 fd ff       	callq  109a0 <strdup@plt>
   371ac:	48 89 85 88 3b fc ff 	mov    %rax,-0x3c478(%rbp)
   371b3:	48 85 c0             	test   %rax,%rax
   371b6:	0f 84 f6 00 00 00    	je     372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   371bc:	be 2d 00 00 00       	mov    $0x2d,%esi
   371c1:	48 89 df             	mov    %rbx,%rdi
   371c4:	e8 e7 8c fd ff       	callq  feb0 <strchr@plt>
   371c9:	48 85 c0             	test   %rax,%rax
   371cc:	0f 84 8e 00 00 00    	je     37260 <hostlist_create_bracketed.isra.6.constprop.12+0x340>
   371d2:	80 78 01 2d          	cmpb   $0x2d,0x1(%rax)
   371d6:	4c 8d 70 01          	lea    0x1(%rax),%r14
   371da:	c6 00 00             	movb   $0x0,(%rax)
   371dd:	0f 84 fd 03 00 00    	je     375e0 <hostlist_create_bracketed.isra.6.constprop.12+0x6c0>
   371e3:	48 8b b5 98 3b fc ff 	mov    -0x3c468(%rbp),%rsi
   371ea:	ba 0a 00 00 00       	mov    $0xa,%edx
   371ef:	48 89 df             	mov    %rbx,%rdi
   371f2:	48 89 85 78 3b fc ff 	mov    %rax,-0x3c488(%rbp)
   371f9:	e8 52 96 fd ff       	callq  10850 <strtoul@plt>
   371fe:	48 8b 8d b8 3b fc ff 	mov    -0x3c448(%rbp),%rcx
   37205:	4c 8b 8d 78 3b fc ff 	mov    -0x3c488(%rbp),%r9
   3720c:	49 89 c7             	mov    %rax,%r15
   3720f:	49 89 45 00          	mov    %rax,0x0(%r13)
   37213:	48 39 cb             	cmp    %rcx,%rbx
   37216:	0f 84 c4 03 00 00    	je     375e0 <hostlist_create_bracketed.isra.6.constprop.12+0x6c0>
   3721c:	48 89 c2             	mov    %rax,%rdx
   3721f:	4d 85 f6             	test   %r14,%r14
   37222:	0f 84 b8 fe ff ff    	je     370e0 <hostlist_create_bracketed.isra.6.constprop.12+0x1c0>
   37228:	41 80 79 01 00       	cmpb   $0x0,0x1(%r9)
   3722d:	0f 84 ad fe ff ff    	je     370e0 <hostlist_create_bracketed.isra.6.constprop.12+0x1c0>
   37233:	48 8b b5 98 3b fc ff 	mov    -0x3c468(%rbp),%rsi
   3723a:	ba 0a 00 00 00       	mov    $0xa,%edx
   3723f:	4c 89 f7             	mov    %r14,%rdi
   37242:	e8 09 96 fd ff       	callq  10850 <strtoul@plt>
   37247:	48 8b 8d b8 3b fc ff 	mov    -0x3c448(%rbp),%rcx
   3724e:	48 89 c2             	mov    %rax,%rdx
   37251:	e9 8a fe ff ff       	jmpq   370e0 <hostlist_create_bracketed.isra.6.constprop.12+0x1c0>
   37256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3725d:	00 00 00 
   37260:	48 8b b5 98 3b fc ff 	mov    -0x3c468(%rbp),%rsi
   37267:	ba 0a 00 00 00       	mov    $0xa,%edx
   3726c:	48 89 df             	mov    %rbx,%rdi
   3726f:	e8 dc 95 fd ff       	callq  10850 <strtoul@plt>
   37274:	48 8b 8d b8 3b fc ff 	mov    -0x3c448(%rbp),%rcx
   3727b:	48 89 c2             	mov    %rax,%rdx
   3727e:	49 89 45 00          	mov    %rax,0x0(%r13)
   37282:	48 39 cb             	cmp    %rcx,%rbx
   37285:	0f 84 55 03 00 00    	je     375e0 <hostlist_create_bracketed.isra.6.constprop.12+0x6c0>
   3728b:	45 31 f6             	xor    %r14d,%r14d
   3728e:	49 89 c7             	mov    %rax,%r15
   37291:	e9 4a fe ff ff       	jmpq   370e0 <hostlist_create_bracketed.isra.6.constprop.12+0x1c0>
   37296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3729d:	00 00 00 
   372a0:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   372a6:	48 8b bd 88 3b fc ff 	mov    -0x3c478(%rbp),%rdi
   372ad:	e8 fe 87 fd ff       	callq  fab0 <free@plt>
   372b2:	48 8b bd 90 3b fc ff 	mov    -0x3c470(%rbp),%rdi
   372b9:	e8 e2 fb ff ff       	callq  36ea0 <hostlist_destroy>
   372be:	48 8b bd 50 3b fc ff 	mov    -0x3c4b0(%rbp),%rdi
   372c5:	e8 e6 87 fd ff       	callq  fab0 <free@plt>
   372ca:	48 c7 85 90 3b fc ff 	movq   $0x0,-0x3c470(%rbp)
   372d1:	00 00 00 00 
   372d5:	e9 f0 fc ff ff       	jmpq   36fca <hostlist_create_bracketed.isra.6.constprop.12+0xaa>
   372da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   372e0:	be 5d 00 00 00       	mov    $0x5d,%esi
   372e5:	4c 89 ff             	mov    %r15,%rdi
   372e8:	e8 c3 8b fd ff       	callq  feb0 <strchr@plt>
   372ed:	48 85 c0             	test   %rax,%rax
   372f0:	0f 85 fa 02 00 00    	jne    375f0 <hostlist_create_bracketed.isra.6.constprop.12+0x6d0>
   372f6:	48 83 bd 90 3b fc ff 	cmpq   $0x0,-0x3c470(%rbp)
   372fd:	00 
   372fe:	0f 84 18 03 00 00    	je     3761c <hostlist_create_bracketed.isra.6.constprop.12+0x6fc>
   37304:	80 bd c0 fb ff ff 00 	cmpb   $0x0,-0x440(%rbp)
   3730b:	74 63                	je     37370 <hostlist_create_bracketed.isra.6.constprop.12+0x450>
   3730d:	48 89 df             	mov    %rbx,%rdi
   37310:	e8 db 0f 00 00       	callq  382f0 <hostname_create>
   37315:	49 89 c4             	mov    %rax,%r12
   37318:	48 85 c0             	test   %rax,%rax
   3731b:	74 53                	je     37370 <hostlist_create_bracketed.isra.6.constprop.12+0x450>
   3731d:	48 89 c7             	mov    %rax,%rdi
   37320:	e8 4b 10 00 00       	callq  38370 <hostname_suffix_is_valid>
   37325:	85 c0                	test   %eax,%eax
   37327:	0f 84 a3 02 00 00    	je     375d0 <hostlist_create_bracketed.isra.6.constprop.12+0x6b0>
   3732d:	4c 89 e7             	mov    %r12,%rdi
   37330:	e8 5b 10 00 00       	callq  38390 <hostname_suffix_width>
   37335:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   3733a:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   3733f:	89 c1                	mov    %eax,%ecx
   37341:	48 89 f2             	mov    %rsi,%rdx
   37344:	e8 c7 11 00 00       	callq  38510 <hostrange_create>
   37349:	48 89 c3             	mov    %rax,%rbx
   3734c:	48 85 db             	test   %rbx,%rbx
   3734f:	74 0f                	je     37360 <hostlist_create_bracketed.isra.6.constprop.12+0x440>
   37351:	48 8b bd 90 3b fc ff 	mov    -0x3c470(%rbp),%rdi
   37358:	48 89 de             	mov    %rbx,%rsi
   3735b:	e8 30 f6 ff ff       	callq  36990 <hostlist_append_range>
   37360:	48 89 df             	mov    %rbx,%rdi
   37363:	e8 b8 10 00 00       	callq  38420 <hostrange_destroy>
   37368:	4c 89 e7             	mov    %r12,%rdi
   3736b:	e8 80 0d 00 00       	callq  380f0 <hostname_destroy>
   37370:	4c 8b bd a8 3b fc ff 	mov    -0x3c458(%rbp),%r15
   37377:	e9 39 fc ff ff       	jmpq   36fb5 <hostlist_create_bracketed.isra.6.constprop.12+0x95>
   3737c:	0f 1f 40 00          	nopl   0x0(%rax)
   37380:	41 0f be 75 00       	movsbl 0x0(%r13),%esi
   37385:	4c 89 ad a8 3b fc ff 	mov    %r13,-0x3c458(%rbp)
   3738c:	40 84 f6             	test   %sil,%sil
   3738f:	0f 84 cd fc ff ff    	je     37062 <hostlist_create_bracketed.isra.6.constprop.12+0x142>
   37395:	48 8b 9d a8 3b fc ff 	mov    -0x3c458(%rbp),%rbx
   3739c:	eb 12                	jmp    373b0 <hostlist_create_bracketed.isra.6.constprop.12+0x490>
   3739e:	66 90                	xchg   %ax,%ax
   373a0:	48 83 c3 01          	add    $0x1,%rbx
   373a4:	0f be 33             	movsbl (%rbx),%esi
   373a7:	c6 43 ff 00          	movb   $0x0,-0x1(%rbx)
   373ab:	40 84 f6             	test   %sil,%sil
   373ae:	74 11                	je     373c1 <hostlist_create_bracketed.isra.6.constprop.12+0x4a1>
   373b0:	48 8d 3d 98 c7 00 00 	lea    0xc798(%rip),%rdi        # 43b4f <__PRETTY_FUNCTION__.6731+0x24f>
   373b7:	e8 f4 8a fd ff       	callq  feb0 <strchr@plt>
   373bc:	48 85 c0             	test   %rax,%rax
   373bf:	75 df                	jne    373a0 <hostlist_create_bracketed.isra.6.constprop.12+0x480>
   373c1:	48 89 9d a8 3b fc ff 	mov    %rbx,-0x3c458(%rbp)
   373c8:	e9 95 fc ff ff       	jmpq   37062 <hostlist_create_bracketed.isra.6.constprop.12+0x142>
   373cd:	0f 1f 00             	nopl   (%rax)
   373d0:	48 8b 85 68 3b fc ff 	mov    -0x3c498(%rbp),%rax
   373d7:	4c 8b bd 58 3b fc ff 	mov    -0x3c4a8(%rbp),%r15
   373de:	44 8b ad d0 3b fc ff 	mov    -0x3c430(%rbp),%r13d
   373e5:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
   373e9:	75 75                	jne    37460 <hostlist_create_bracketed.isra.6.constprop.12+0x540>
   373eb:	48 63 85 a0 3b fc ff 	movslq -0x3c460(%rbp),%rax
   373f2:	48 8b 9d 60 3b fc ff 	mov    -0x3c4a0(%rbp),%rbx
   373f9:	44 89 e9             	mov    %r13d,%ecx
   373fc:	48 8d 44 40 03       	lea    0x3(%rax,%rax,2),%rax
   37401:	4c 8d 24 c3          	lea    (%rbx,%rax,8),%r12
   37405:	eb 0c                	jmp    37413 <hostlist_create_bracketed.isra.6.constprop.12+0x4f3>
   37407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3740e:	00 00 
   37410:	8b 4b 10             	mov    0x10(%rbx),%ecx
   37413:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   37417:	48 8b 33             	mov    (%rbx),%rsi
   3741a:	4c 89 ff             	mov    %r15,%rdi
   3741d:	e8 ee 10 00 00       	callq  38510 <hostrange_create>
   37422:	49 89 c5             	mov    %rax,%r13
   37425:	48 85 c0             	test   %rax,%rax
   37428:	0f 84 84 fe ff ff    	je     372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   3742e:	48 8b bd 90 3b fc ff 	mov    -0x3c470(%rbp),%rdi
   37435:	48 89 c6             	mov    %rax,%rsi
   37438:	e8 53 f5 ff ff       	callq  36990 <hostlist_append_range>
   3743d:	4c 89 ef             	mov    %r13,%rdi
   37440:	41 89 c6             	mov    %eax,%r14d
   37443:	e8 d8 0f 00 00       	callq  38420 <hostrange_destroy>
   37448:	45 85 f6             	test   %r14d,%r14d
   3744b:	0f 88 61 fe ff ff    	js     372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   37451:	48 83 c3 18          	add    $0x18,%rbx
   37455:	49 39 dc             	cmp    %rbx,%r12
   37458:	75 b6                	jne    37410 <hostlist_create_bracketed.isra.6.constprop.12+0x4f0>
   3745a:	e9 11 ff ff ff       	jmpq   37370 <hostlist_create_bracketed.isra.6.constprop.12+0x450>
   3745f:	90                   	nop
   37460:	48 8b 85 68 3b fc ff 	mov    -0x3c498(%rbp),%rax
   37467:	4c 89 ff             	mov    %r15,%rdi
   3746a:	48 83 c0 01          	add    $0x1,%rax
   3746e:	49 89 c6             	mov    %rax,%r14
   37471:	48 89 85 88 3b fc ff 	mov    %rax,-0x3c478(%rbp)
   37478:	e8 a3 89 fd ff       	callq  fe20 <strlen@plt>
   3747d:	4c 89 f7             	mov    %r14,%rdi
   37480:	48 89 c3             	mov    %rax,%rbx
   37483:	e8 98 89 fd ff       	callq  fe20 <strlen@plt>
   37488:	41 8d 54 1d 14       	lea    0x14(%r13,%rbx,1),%edx
   3748d:	48 8b 9d 60 3b fc ff 	mov    -0x3c4a0(%rbp),%rbx
   37494:	4c 89 bd 78 3b fc ff 	mov    %r15,-0x3c488(%rbp)
   3749b:	01 c2                	add    %eax,%edx
   3749d:	48 63 85 a0 3b fc ff 	movslq -0x3c460(%rbp),%rax
   374a4:	48 63 d2             	movslq %edx,%rdx
   374a7:	48 8d 44 40 03       	lea    0x3(%rax,%rax,2),%rax
   374ac:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
   374b0:	48 89 85 68 3b fc ff 	mov    %rax,-0x3c498(%rbp)
   374b7:	48 8d 42 0f          	lea    0xf(%rdx),%rax
   374bb:	48 89 c1             	mov    %rax,%rcx
   374be:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   374c4:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
   374c8:	48 89 85 80 3b fc ff 	mov    %rax,-0x3c480(%rbp)
   374cf:	48 89 8d 70 3b fc ff 	mov    %rcx,-0x3c490(%rbp)
   374d6:	4c 8b a5 70 3b fc ff 	mov    -0x3c490(%rbp),%r12
   374dd:	4c 8b 3b             	mov    (%rbx),%r15
   374e0:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
   374e4:	41 81 e4 ff 0f 00 00 	and    $0xfff,%r12d
   374eb:	4d 39 fd             	cmp    %r15,%r13
   374ee:	0f 82 b1 00 00 00    	jb     375a5 <hostlist_create_bracketed.isra.6.constprop.12+0x685>
   374f4:	4c 89 ad a0 3b fc ff 	mov    %r13,-0x3c460(%rbp)
   374fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   37500:	48 89 e0             	mov    %rsp,%rax
   37503:	48 2b 85 80 3b fc ff 	sub    -0x3c480(%rbp),%rax
   3750a:	49 89 e6             	mov    %rsp,%r14
   3750d:	48 39 c4             	cmp    %rax,%rsp
   37510:	74 15                	je     37527 <hostlist_create_bracketed.isra.6.constprop.12+0x607>
   37512:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   37519:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   37520:	00 00 
   37522:	48 39 c4             	cmp    %rax,%rsp
   37525:	75 eb                	jne    37512 <hostlist_create_bracketed.isra.6.constprop.12+0x5f2>
   37527:	4d 85 e4             	test   %r12,%r12
   3752a:	74 09                	je     37535 <hostlist_create_bracketed.isra.6.constprop.12+0x615>
   3752c:	4c 29 e4             	sub    %r12,%rsp
   3752f:	4a 83 4c 24 f8 00    	orq    $0x0,-0x8(%rsp,%r12,1)
   37535:	49 89 e5             	mov    %rsp,%r13
  return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
   37538:	44 8b 4b 10          	mov    0x10(%rbx),%r9d
   3753c:	ff b5 88 3b fc ff    	pushq  -0x3c478(%rbp)
   37542:	31 c0                	xor    %eax,%eax
   37544:	41 57                	push   %r15
   37546:	4c 89 ef             	mov    %r13,%rdi
   37549:	48 8d 0d f5 c5 00 00 	lea    0xc5f5(%rip),%rcx        # 43b45 <__PRETTY_FUNCTION__.6731+0x245>
   37550:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   37557:	4c 8b 85 78 3b fc ff 	mov    -0x3c488(%rbp),%r8
   3755e:	be 01 00 00 00       	mov    $0x1,%esi
   37563:	e8 e8 95 fd ff       	callq  10b50 <__sprintf_chk@plt>
   37568:	58                   	pop    %rax
   37569:	4c 89 ef             	mov    %r13,%rdi
   3756c:	5a                   	pop    %rdx
   3756d:	e8 7e 0f 00 00       	callq  384f0 <hostrange_create_single>
   37572:	49 89 c5             	mov    %rax,%r13
   37575:	48 85 c0             	test   %rax,%rax
   37578:	74 46                	je     375c0 <hostlist_create_bracketed.isra.6.constprop.12+0x6a0>
   3757a:	48 8b bd 90 3b fc ff 	mov    -0x3c470(%rbp),%rdi
   37581:	48 89 c6             	mov    %rax,%rsi
   37584:	49 83 c7 01          	add    $0x1,%r15
   37588:	e8 03 f4 ff ff       	callq  36990 <hostlist_append_range>
   3758d:	4c 89 ef             	mov    %r13,%rdi
   37590:	e8 8b 0e 00 00       	callq  38420 <hostrange_destroy>
   37595:	4c 89 f4             	mov    %r14,%rsp
   37598:	4c 39 bd a0 3b fc ff 	cmp    %r15,-0x3c460(%rbp)
   3759f:	0f 83 5b ff ff ff    	jae    37500 <hostlist_create_bracketed.isra.6.constprop.12+0x5e0>
   375a5:	48 83 c3 18          	add    $0x18,%rbx
   375a9:	48 3b 9d 68 3b fc ff 	cmp    -0x3c498(%rbp),%rbx
   375b0:	0f 85 20 ff ff ff    	jne    374d6 <hostlist_create_bracketed.isra.6.constprop.12+0x5b6>
   375b6:	e9 b5 fd ff ff       	jmpq   37370 <hostlist_create_bracketed.isra.6.constprop.12+0x450>
   375bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   375c0:	4c 89 f4             	mov    %r14,%rsp
   375c3:	e9 ea fc ff ff       	jmpq   372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   375c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   375cf:	00 
   375d0:	48 89 df             	mov    %rbx,%rdi
   375d3:	e8 18 0f 00 00       	callq  384f0 <hostrange_create_single>
   375d8:	48 89 c3             	mov    %rax,%rbx
   375db:	e9 6c fd ff ff       	jmpq   3734c <hostlist_create_bracketed.isra.6.constprop.12+0x42c>
   375e0:	e8 2b 85 fd ff       	callq  fb10 <__errno_location@plt>
   375e5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   375eb:	e9 b6 fc ff ff       	jmpq   372a6 <hostlist_create_bracketed.isra.6.constprop.12+0x386>
   375f0:	e8 1b 85 fd ff       	callq  fb10 <__errno_location@plt>
   375f5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   375fb:	e9 b2 fc ff ff       	jmpq   372b2 <hostlist_create_bracketed.isra.6.constprop.12+0x392>
   37600:	48 8b bd 90 3b fc ff 	mov    -0x3c470(%rbp),%rdi
   37607:	e8 94 f8 ff ff       	callq  36ea0 <hostlist_destroy>
   3760c:	48 c7 85 90 3b fc ff 	movq   $0x0,-0x3c470(%rbp)
   37613:	00 00 00 00 
   37617:	e9 ae f9 ff ff       	jmpq   36fca <hostlist_create_bracketed.isra.6.constprop.12+0xaa>
   3761c:	48 8d 0d ad c5 00 00 	lea    0xc5ad(%rip),%rcx        # 43bd0 <__PRETTY_FUNCTION__.5410>
   37623:	ba 83 01 00 00       	mov    $0x183,%edx
   37628:	48 8d 35 db c4 00 00 	lea    0xc4db(%rip),%rsi        # 43b0a <__PRETTY_FUNCTION__.6731+0x20a>
   3762f:	48 8d 3d df c4 00 00 	lea    0xc4df(%rip),%rdi        # 43b15 <__PRETTY_FUNCTION__.6731+0x215>
   37636:	e8 c5 89 fd ff       	callq  10000 <__assert_fail@plt>
   3763b:	e8 10 88 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000037640 <hostlist_decode>:
   37640:	f3 0f 1e fa          	endbr64 
   37644:	48 85 ff             	test   %rdi,%rdi
   37647:	74 07                	je     37650 <hostlist_decode+0x10>
   37649:	e9 d2 f8 ff ff       	jmpq   36f20 <hostlist_create_bracketed.isra.6.constprop.12>
   3764e:	66 90                	xchg   %ax,%ax
   37650:	48 83 ec 08          	sub    $0x8,%rsp
   37654:	e8 b7 84 fd ff       	callq  fb10 <__errno_location@plt>
   37659:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3765f:	31 c0                	xor    %eax,%eax
   37661:	48 83 c4 08          	add    $0x8,%rsp
   37665:	c3                   	retq   

0000000000037666 <.annobin_hostlist_append_list.start>:
   37666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3766d:	00 00 00 

0000000000037670 <hostlist_append_list>:
   37670:	f3 0f 1e fa          	endbr64 
   37674:	41 55                	push   %r13
   37676:	41 54                	push   %r12
   37678:	55                   	push   %rbp
   37679:	53                   	push   %rbx
   3767a:	48 83 ec 08          	sub    $0x8,%rsp
   3767e:	48 85 ff             	test   %rdi,%rdi
   37681:	74 47                	je     376ca <hostlist_append_list+0x5a>
   37683:	48 89 f5             	mov    %rsi,%rbp
   37686:	48 85 f6             	test   %rsi,%rsi
   37689:	74 3f                	je     376ca <hostlist_append_list+0x5a>
   3768b:	8b 46 04             	mov    0x4(%rsi),%eax
   3768e:	49 89 fd             	mov    %rdi,%r13
   37691:	31 db                	xor    %ebx,%ebx
   37693:	45 31 e4             	xor    %r12d,%r12d
   37696:	85 c0                	test   %eax,%eax
   37698:	7e 22                	jle    376bc <hostlist_append_list+0x4c>
   3769a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   376a0:	48 8b 45 10          	mov    0x10(%rbp),%rax
   376a4:	4c 89 ef             	mov    %r13,%rdi
   376a7:	48 8b 34 d8          	mov    (%rax,%rbx,8),%rsi
   376ab:	48 83 c3 01          	add    $0x1,%rbx
   376af:	e8 dc f2 ff ff       	callq  36990 <hostlist_append_range>
   376b4:	41 01 c4             	add    %eax,%r12d
   376b7:	39 5d 04             	cmp    %ebx,0x4(%rbp)
   376ba:	7f e4                	jg     376a0 <hostlist_append_list+0x30>
   376bc:	48 83 c4 08          	add    $0x8,%rsp
   376c0:	44 89 e0             	mov    %r12d,%eax
   376c3:	5b                   	pop    %rbx
   376c4:	5d                   	pop    %rbp
   376c5:	41 5c                	pop    %r12
   376c7:	41 5d                	pop    %r13
   376c9:	c3                   	retq   
   376ca:	e8 41 84 fd ff       	callq  fb10 <__errno_location@plt>
   376cf:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   376d5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   376db:	eb df                	jmp    376bc <hostlist_append_list+0x4c>

00000000000376dd <.annobin_hostlist_append.start>:
   376dd:	0f 1f 00             	nopl   (%rax)

00000000000376e0 <hostlist_append>:
   376e0:	f3 0f 1e fa          	endbr64 
   376e4:	41 54                	push   %r12
   376e6:	55                   	push   %rbp
   376e7:	53                   	push   %rbx
   376e8:	48 85 ff             	test   %rdi,%rdi
   376eb:	74 3e                	je     3772b <hostlist_append+0x4b>
   376ed:	31 ed                	xor    %ebp,%ebp
   376ef:	48 85 f6             	test   %rsi,%rsi
   376f2:	74 29                	je     3771d <hostlist_append+0x3d>
   376f4:	49 89 fc             	mov    %rdi,%r12
   376f7:	48 89 f7             	mov    %rsi,%rdi
   376fa:	e8 41 ff ff ff       	callq  37640 <hostlist_decode>
   376ff:	48 89 c3             	mov    %rax,%rbx
   37702:	48 85 c0             	test   %rax,%rax
   37705:	74 1d                	je     37724 <hostlist_append+0x44>
   37707:	4c 89 e7             	mov    %r12,%rdi
   3770a:	48 89 c6             	mov    %rax,%rsi
   3770d:	8b 68 08             	mov    0x8(%rax),%ebp
   37710:	e8 5b ff ff ff       	callq  37670 <hostlist_append_list>
   37715:	48 89 df             	mov    %rbx,%rdi
   37718:	e8 83 f7 ff ff       	callq  36ea0 <hostlist_destroy>
   3771d:	89 e8                	mov    %ebp,%eax
   3771f:	5b                   	pop    %rbx
   37720:	5d                   	pop    %rbp
   37721:	41 5c                	pop    %r12
   37723:	c3                   	retq   
   37724:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   37729:	eb f2                	jmp    3771d <hostlist_append+0x3d>
   3772b:	e8 e0 83 fd ff       	callq  fb10 <__errno_location@plt>
   37730:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   37735:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3773b:	eb e0                	jmp    3771d <hostlist_append+0x3d>

000000000003773d <.annobin_hostlist_append.end>:
   3773d:	0f 1f 00             	nopl   (%rax)

0000000000037740 <hostlist_count>:
   37740:	f3 0f 1e fa          	endbr64 
   37744:	31 c0                	xor    %eax,%eax
   37746:	48 85 ff             	test   %rdi,%rdi
   37749:	74 03                	je     3774e <hostlist_count+0xe>
   3774b:	8b 47 08             	mov    0x8(%rdi),%eax
   3774e:	c3                   	retq   

000000000003774f <.annobin_hostlist_count.end>:
   3774f:	90                   	nop

0000000000037750 <hostlist_find>:
   37750:	f3 0f 1e fa          	endbr64 
   37754:	48 85 ff             	test   %rdi,%rdi
   37757:	74 1f                	je     37778 <hostlist_find+0x28>
   37759:	48 89 f2             	mov    %rsi,%rdx
   3775c:	48 85 f6             	test   %rsi,%rsi
   3775f:	74 17                	je     37778 <hostlist_find+0x28>
   37761:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   37765:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   37769:	48 83 c7 04          	add    $0x4,%rdi
   3776d:	e9 5e f5 ff ff       	jmpq   36cd0 <hostlist_find_host.isra.4>
   37772:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   37778:	48 83 ec 08          	sub    $0x8,%rsp
   3777c:	e8 8f 83 fd ff       	callq  fb10 <__errno_location@plt>
   37781:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37787:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3778c:	48 83 c4 08          	add    $0x8,%rsp
   37790:	c3                   	retq   

0000000000037791 <.annobin_hostlist_find.end>:
   37791:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37798:	00 00 00 00 
   3779c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000377a0 <hostlist_sort>:
   377a0:	f3 0f 1e fa          	endbr64 
   377a4:	48 85 ff             	test   %rdi,%rdi
   377a7:	0f 84 33 01 00 00    	je     378e0 <hostlist_sort+0x140>
   377ad:	48 63 77 04          	movslq 0x4(%rdi),%rsi
   377b1:	83 fe 01             	cmp    $0x1,%esi
   377b4:	0f 8e 26 01 00 00    	jle    378e0 <hostlist_sort+0x140>
   377ba:	41 57                	push   %r15
   377bc:	ba 08 00 00 00       	mov    $0x8,%edx
   377c1:	41 56                	push   %r14
   377c3:	41 55                	push   %r13
   377c5:	41 54                	push   %r12
   377c7:	55                   	push   %rbp
   377c8:	48 89 fd             	mov    %rdi,%rbp
   377cb:	53                   	push   %rbx
   377cc:	48 83 ec 18          	sub    $0x18,%rsp
   377d0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   377d4:	48 8d 0d b5 f0 ff ff 	lea    -0xf4b(%rip),%rcx        # 36890 <_cmp>
   377db:	e8 80 84 fd ff       	callq  fc60 <qsort@plt>
   377e0:	8b 45 04             	mov    0x4(%rbp),%eax
   377e3:	44 8d 70 ff          	lea    -0x1(%rax),%r14d
   377e7:	45 85 f6             	test   %r14d,%r14d
   377ea:	7f 19                	jg     37805 <hostlist_sort+0x65>
   377ec:	e9 5b 01 00 00       	jmpq   3794c <hostlist_sort+0x1ac>
   377f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   377f8:	41 83 ee 01          	sub    $0x1,%r14d
   377fc:	45 85 f6             	test   %r14d,%r14d
   377ff:	0f 8e fc 00 00 00    	jle    37901 <hostlist_sort+0x161>
   37805:	48 8b 45 10          	mov    0x10(%rbp),%rax
   37809:	49 63 d6             	movslq %r14d,%rdx
   3780c:	4c 8b 64 d0 f8       	mov    -0x8(%rax,%rdx,8),%r12
   37811:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   37815:	4c 89 e7             	mov    %r12,%rdi
   37818:	4c 89 ee             	mov    %r13,%rsi
   3781b:	e8 80 11 00 00       	callq  389a0 <hostrange_intersect>
   37820:	48 89 c3             	mov    %rax,%rbx
   37823:	48 85 c0             	test   %rax,%rax
   37826:	74 d0                	je     377f8 <hostlist_sort+0x58>
   37828:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   3782d:	48 39 43 10          	cmp    %rax,0x10(%rbx)
   37831:	73 04                	jae    37837 <hostlist_sort+0x97>
   37833:	49 89 45 10          	mov    %rax,0x10(%r13)
   37837:	48 8b 43 08          	mov    0x8(%rbx),%rax
   3783b:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   37840:	48 8b 43 10          	mov    0x10(%rbx),%rax
   37844:	49 89 45 08          	mov    %rax,0x8(%r13)
   37848:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   3784c:	48 39 f0             	cmp    %rsi,%rax
   3784f:	73 31                	jae    37882 <hostlist_sort+0xe2>
   37851:	e9 92 00 00 00       	jmpq   378e8 <hostlist_sort+0x148>
   37856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3785d:	00 00 00 
   37860:	49 39 45 08          	cmp    %rax,0x8(%r13)
   37864:	77 5b                	ja     378c1 <hostlist_sort+0x121>
   37866:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   3786b:	e8 b0 0b 00 00       	callq  38420 <hostrange_destroy>
   37870:	48 8b 43 08          	mov    0x8(%rbx),%rax
   37874:	48 8d 70 01          	lea    0x1(%rax),%rsi
   37878:	48 89 73 08          	mov    %rsi,0x8(%rbx)
   3787c:	48 3b 73 10          	cmp    0x10(%rbx),%rsi
   37880:	77 66                	ja     378e8 <hostlist_sort+0x148>
   37882:	8b 4b 18             	mov    0x18(%rbx),%ecx
   37885:	48 8b 3b             	mov    (%rbx),%rdi
   37888:	48 89 f2             	mov    %rsi,%rdx
   3788b:	e8 80 0c 00 00       	callq  38510 <hostrange_create>
   37890:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   37895:	48 8b 43 08          	mov    0x8(%rbx),%rax
   37899:	49 3b 44 24 10       	cmp    0x10(%r12),%rax
   3789e:	76 c0                	jbe    37860 <hostlist_sort+0xc0>
   378a0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   378a5:	44 89 f2             	mov    %r14d,%edx
   378a8:	45 8d 7e 01          	lea    0x1(%r14),%r15d
   378ac:	48 89 ef             	mov    %rbp,%rdi
   378af:	45 89 fe             	mov    %r15d,%r14d
   378b2:	e8 d9 f1 ff ff       	callq  36a90 <hostlist_insert_range>
   378b7:	48 8b 43 08          	mov    0x8(%rbx),%rax
   378bb:	49 39 45 08          	cmp    %rax,0x8(%r13)
   378bf:	76 a5                	jbe    37866 <hostlist_sort+0xc6>
   378c1:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   378c6:	44 89 f2             	mov    %r14d,%edx
   378c9:	45 8d 7e 01          	lea    0x1(%r14),%r15d
   378cd:	48 89 ef             	mov    %rbp,%rdi
   378d0:	45 89 fe             	mov    %r15d,%r14d
   378d3:	e8 b8 f1 ff ff       	callq  36a90 <hostlist_insert_range>
   378d8:	eb 8c                	jmp    37866 <hostlist_sort+0xc6>
   378da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   378e0:	c3                   	retq   
   378e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   378e8:	44 8b 75 04          	mov    0x4(%rbp),%r14d
   378ec:	48 89 df             	mov    %rbx,%rdi
   378ef:	e8 2c 0b 00 00       	callq  38420 <hostrange_destroy>
   378f4:	41 83 ee 01          	sub    $0x1,%r14d
   378f8:	45 85 f6             	test   %r14d,%r14d
   378fb:	0f 8f 04 ff ff ff    	jg     37805 <hostlist_sort+0x65>
   37901:	8b 45 04             	mov    0x4(%rbp),%eax
   37904:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
   37908:	45 85 e4             	test   %r12d,%r12d
   3790b:	7e 3f                	jle    3794c <hostlist_sort+0x1ac>
   3790d:	49 63 dc             	movslq %r12d,%rbx
   37910:	48 c1 e3 03          	shl    $0x3,%rbx
   37914:	0f 1f 40 00          	nopl   0x0(%rax)
   37918:	48 8b 45 10          	mov    0x10(%rbp),%rax
   3791c:	4c 8b 6c 18 f8       	mov    -0x8(%rax,%rbx,1),%r13
   37921:	4c 8b 34 18          	mov    (%rax,%rbx,1),%r14
   37925:	4c 89 ef             	mov    %r13,%rdi
   37928:	4c 89 f6             	mov    %r14,%rsi
   3792b:	e8 40 0d 00 00       	callq  38670 <hostrange_prefix_cmp>
   37930:	85 c0                	test   %eax,%eax
   37932:	75 0e                	jne    37942 <hostlist_sort+0x1a2>
   37934:	49 8b 46 08          	mov    0x8(%r14),%rax
   37938:	48 83 e8 01          	sub    $0x1,%rax
   3793c:	49 39 45 10          	cmp    %rax,0x10(%r13)
   37940:	74 1e                	je     37960 <hostlist_sort+0x1c0>
   37942:	48 83 eb 08          	sub    $0x8,%rbx
   37946:	41 83 ec 01          	sub    $0x1,%r12d
   3794a:	75 cc                	jne    37918 <hostlist_sort+0x178>
   3794c:	48 83 c4 18          	add    $0x18,%rsp
   37950:	5b                   	pop    %rbx
   37951:	5d                   	pop    %rbp
   37952:	41 5c                	pop    %r12
   37954:	41 5d                	pop    %r13
   37956:	41 5e                	pop    %r14
   37958:	41 5f                	pop    %r15
   3795a:	c3                   	retq   
   3795b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   37960:	4c 89 f6             	mov    %r14,%rsi
   37963:	4c 89 ef             	mov    %r13,%rdi
   37966:	e8 95 0d 00 00       	callq  38700 <hostrange_width_combine>
   3796b:	85 c0                	test   %eax,%eax
   3796d:	74 d3                	je     37942 <hostlist_sort+0x1a2>
   3796f:	49 8b 46 10          	mov    0x10(%r14),%rax
   37973:	44 89 e6             	mov    %r12d,%esi
   37976:	48 89 ef             	mov    %rbp,%rdi
   37979:	49 89 45 10          	mov    %rax,0x10(%r13)
   3797d:	e8 1e ee ff ff       	callq  367a0 <hostlist_delete_range>
   37982:	eb be                	jmp    37942 <hostlist_sort+0x1a2>

0000000000037984 <.annobin_hostlist_sort.end>:
   37984:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3798b:	00 00 00 00 
   3798f:	90                   	nop

0000000000037990 <hostlist_uniq>:
   37990:	f3 0f 1e fa          	endbr64 
   37994:	48 85 ff             	test   %rdi,%rdi
   37997:	74 5f                	je     379f8 <hostlist_uniq+0x68>
   37999:	48 63 77 04          	movslq 0x4(%rdi),%rsi
   3799d:	83 fe 01             	cmp    $0x1,%esi
   379a0:	7e 56                	jle    379f8 <hostlist_uniq+0x68>
   379a2:	41 54                	push   %r12
   379a4:	48 8d 0d e5 ee ff ff 	lea    -0x111b(%rip),%rcx        # 36890 <_cmp>
   379ab:	ba 08 00 00 00       	mov    $0x8,%edx
   379b0:	55                   	push   %rbp
   379b1:	bd 01 00 00 00       	mov    $0x1,%ebp
   379b6:	53                   	push   %rbx
   379b7:	48 89 fb             	mov    %rdi,%rbx
   379ba:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   379be:	e8 9d 82 fd ff       	callq  fc60 <qsort@plt>
   379c3:	39 6b 04             	cmp    %ebp,0x4(%rbx)
   379c6:	7e 24                	jle    379ec <hostlist_uniq+0x5c>
   379c8:	48 8b 43 10          	mov    0x10(%rbx),%rax
   379cc:	48 63 d5             	movslq %ebp,%rdx
   379cf:	48 8b 34 d0          	mov    (%rax,%rdx,8),%rsi
   379d3:	48 8b 7c d0 f8       	mov    -0x8(%rax,%rdx,8),%rdi
   379d8:	e8 83 0e 00 00       	callq  38860 <hostrange_join>
   379dd:	41 89 c4             	mov    %eax,%r12d
   379e0:	85 c0                	test   %eax,%eax
   379e2:	79 1c                	jns    37a00 <hostlist_uniq+0x70>
   379e4:	83 c5 01             	add    $0x1,%ebp
   379e7:	39 6b 04             	cmp    %ebp,0x4(%rbx)
   379ea:	7f dc                	jg     379c8 <hostlist_uniq+0x38>
   379ec:	5b                   	pop    %rbx
   379ed:	5d                   	pop    %rbp
   379ee:	41 5c                	pop    %r12
   379f0:	c3                   	retq   
   379f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   379f8:	c3                   	retq   
   379f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37a00:	89 ee                	mov    %ebp,%esi
   37a02:	48 89 df             	mov    %rbx,%rdi
   37a05:	e8 96 ed ff ff       	callq  367a0 <hostlist_delete_range>
   37a0a:	44 29 63 08          	sub    %r12d,0x8(%rbx)
   37a0e:	eb b3                	jmp    379c3 <hostlist_uniq+0x33>

0000000000037a10 <hostlist_encode>:
   37a10:	f3 0f 1e fa          	endbr64 
   37a14:	41 57                	push   %r15
   37a16:	41 56                	push   %r14
   37a18:	41 55                	push   %r13
   37a1a:	41 54                	push   %r12
   37a1c:	55                   	push   %rbp
   37a1d:	53                   	push   %rbx
   37a1e:	48 83 ec 38          	sub    $0x38,%rsp
   37a22:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   37a29:	00 00 
   37a2b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   37a30:	31 c0                	xor    %eax,%eax
   37a32:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   37a39:	00 00 
   37a3b:	48 85 ff             	test   %rdi,%rdi
   37a3e:	0f 84 ac 02 00 00    	je     37cf0 <hostlist_encode+0x2e0>
   37a44:	49 89 fd             	mov    %rdi,%r13
   37a47:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   37a4c:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   37a51:	e8 fa 80 fd ff       	callq  fb50 <open_memstream@plt>
   37a56:	48 89 c3             	mov    %rax,%rbx
   37a59:	48 85 c0             	test   %rax,%rax
   37a5c:	0f 84 76 02 00 00    	je     37cd8 <hostlist_encode+0x2c8>
   37a62:	45 31 e4             	xor    %r12d,%r12d
   37a65:	41 8b 45 04          	mov    0x4(%r13),%eax
   37a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37a70:	41 39 c4             	cmp    %eax,%r12d
   37a73:	0f 8d 46 02 00 00    	jge    37cbf <hostlist_encode+0x2af>
   37a79:	49 8b 6d 10          	mov    0x10(%r13),%rbp
   37a7d:	49 63 d4             	movslq %r12d,%rdx
   37a80:	83 e8 01             	sub    $0x1,%eax
   37a83:	31 f6                	xor    %esi,%esi
   37a85:	48 c1 e2 03          	shl    $0x3,%rdx
   37a89:	4c 8d 7c 15 00       	lea    0x0(%rbp,%rdx,1),%r15
   37a8e:	4d 8b 37             	mov    (%r15),%r14
   37a91:	44 39 e0             	cmp    %r12d,%eax
   37a94:	7e 05                	jle    37a9b <hostlist_encode+0x8b>
   37a96:	48 8b 74 15 08       	mov    0x8(%rbp,%rdx,1),%rsi
   37a9b:	4c 89 f7             	mov    %r14,%rdi
   37a9e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   37aa3:	e8 28 09 00 00       	callq  383d0 <hostrange_count>
   37aa8:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   37aad:	48 83 f8 01          	cmp    $0x1,%rax
   37ab1:	0f 86 a9 01 00 00    	jbe    37c60 <hostlist_encode+0x250>
   37ab7:	49 8b 07             	mov    (%r15),%rax
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   37aba:	48 8d 15 4b b7 00 00 	lea    0xb74b(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   37ac1:	be 01 00 00 00       	mov    $0x1,%esi
   37ac6:	48 89 df             	mov    %rbx,%rdi
   37ac9:	48 8b 08             	mov    (%rax),%rcx
   37acc:	31 c0                	xor    %eax,%eax
   37ace:	e8 8d 8e fd ff       	callq  10960 <__fprintf_chk@plt>
   37ad3:	85 c0                	test   %eax,%eax
   37ad5:	79 49                	jns    37b20 <hostlist_encode+0x110>
   37ad7:	e8 34 80 fd ff       	callq  fb10 <__errno_location@plt>
   37adc:	48 89 df             	mov    %rbx,%rdi
   37adf:	48 89 c5             	mov    %rax,%rbp
   37ae2:	44 8b 20             	mov    (%rax),%r12d
   37ae5:	e8 b6 82 fd ff       	callq  fda0 <fclose@plt>
   37aea:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   37aef:	e8 bc 7f fd ff       	callq  fab0 <free@plt>
   37af4:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   37af8:	31 c0                	xor    %eax,%eax
   37afa:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   37aff:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   37b06:	00 00 
   37b08:	0f 85 f4 01 00 00    	jne    37d02 <hostlist_encode+0x2f2>
   37b0e:	48 83 c4 38          	add    $0x38,%rsp
   37b12:	5b                   	pop    %rbx
   37b13:	5d                   	pop    %rbp
   37b14:	41 5c                	pop    %r12
   37b16:	41 5d                	pop    %r13
   37b18:	41 5e                	pop    %r14
   37b1a:	41 5f                	pop    %r15
   37b1c:	c3                   	retq   
   37b1d:	0f 1f 00             	nopl   (%rax)
   37b20:	48 89 de             	mov    %rbx,%rsi
   37b23:	bf 5b 00 00 00       	mov    $0x5b,%edi
   37b28:	e8 03 86 fd ff       	callq  10130 <fputc@plt>
   37b2d:	83 f8 ff             	cmp    $0xffffffff,%eax
   37b30:	74 a5                	je     37ad7 <hostlist_encode+0xc7>
   37b32:	41 be 01 00 00 00    	mov    $0x1,%r14d
   37b38:	41 83 c4 01          	add    $0x1,%r12d
   37b3c:	4d 63 fc             	movslq %r12d,%r15
   37b3f:	eb 3b                	jmp    37b7c <hostlist_encode+0x16c>
   37b41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37b48:	41 8b 45 04          	mov    0x4(%r13),%eax
   37b4c:	45 89 fc             	mov    %r15d,%r12d
   37b4f:	44 39 f8             	cmp    %r15d,%eax
   37b52:	0f 8e 98 00 00 00    	jle    37bf0 <hostlist_encode+0x1e0>
   37b58:	4a 8b 74 fd f8       	mov    -0x8(%rbp,%r15,8),%rsi
   37b5d:	4a 8b 7c fd 00       	mov    0x0(%rbp,%r15,8),%rdi
   37b62:	e8 59 0b 00 00       	callq  386c0 <hostrange_within_range>
   37b67:	85 c0                	test   %eax,%eax
   37b69:	0f 84 31 01 00 00    	je     37ca0 <hostlist_encode+0x290>
   37b6f:	45 85 f6             	test   %r14d,%r14d
   37b72:	0f 85 c8 00 00 00    	jne    37c40 <hostlist_encode+0x230>
   37b78:	49 83 c7 01          	add    $0x1,%r15
   37b7c:	4a 8b 44 fd f8       	mov    -0x8(%rbp,%r15,8),%rax
   37b81:	f6 40 1c 01          	testb  $0x1,0x1c(%rax)
   37b85:	75 c1                	jne    37b48 <hostlist_encode+0x138>
   37b87:	8b 48 18             	mov    0x18(%rax),%ecx
   37b8a:	4c 8b 40 08          	mov    0x8(%rax),%r8
   37b8e:	48 8d 15 bf bf 00 00 	lea    0xbfbf(%rip),%rdx        # 43b54 <__PRETTY_FUNCTION__.6731+0x254>
   37b95:	31 c0                	xor    %eax,%eax
   37b97:	be 01 00 00 00       	mov    $0x1,%esi
   37b9c:	48 89 df             	mov    %rbx,%rdi
   37b9f:	e8 bc 8d fd ff       	callq  10960 <__fprintf_chk@plt>
   37ba4:	85 c0                	test   %eax,%eax
   37ba6:	0f 88 2b ff ff ff    	js     37ad7 <hostlist_encode+0xc7>
   37bac:	4a 8b 44 fd f8       	mov    -0x8(%rbp,%r15,8),%rax
   37bb1:	4c 8b 40 10          	mov    0x10(%rax),%r8
   37bb5:	4c 39 40 08          	cmp    %r8,0x8(%rax)
   37bb9:	73 8d                	jae    37b48 <hostlist_encode+0x138>
   37bbb:	8b 48 18             	mov    0x18(%rax),%ecx
   37bbe:	48 8d 15 8e bf 00 00 	lea    0xbf8e(%rip),%rdx        # 43b53 <__PRETTY_FUNCTION__.6731+0x253>
   37bc5:	31 c0                	xor    %eax,%eax
   37bc7:	48 89 df             	mov    %rbx,%rdi
   37bca:	be 01 00 00 00       	mov    $0x1,%esi
   37bcf:	e8 8c 8d fd ff       	callq  10960 <__fprintf_chk@plt>
   37bd4:	85 c0                	test   %eax,%eax
   37bd6:	0f 88 fb fe ff ff    	js     37ad7 <hostlist_encode+0xc7>
   37bdc:	41 8b 45 04          	mov    0x4(%r13),%eax
   37be0:	45 89 fc             	mov    %r15d,%r12d
   37be3:	44 39 f8             	cmp    %r15d,%eax
   37be6:	0f 8f 6c ff ff ff    	jg     37b58 <hostlist_encode+0x148>
   37bec:	0f 1f 40 00          	nopl   0x0(%rax)
   37bf0:	45 85 f6             	test   %r14d,%r14d
   37bf3:	0f 84 77 fe ff ff    	je     37a70 <hostlist_encode+0x60>
   37bf9:	48 89 de             	mov    %rbx,%rsi
   37bfc:	bf 5d 00 00 00       	mov    $0x5d,%edi
   37c01:	e8 2a 85 fd ff       	callq  10130 <fputc@plt>
   37c06:	83 f8 ff             	cmp    $0xffffffff,%eax
   37c09:	0f 84 c8 fe ff ff    	je     37ad7 <hostlist_encode+0xc7>
   37c0f:	41 8b 45 04          	mov    0x4(%r13),%eax
   37c13:	44 39 e0             	cmp    %r12d,%eax
   37c16:	0f 8e 54 fe ff ff    	jle    37a70 <hostlist_encode+0x60>
   37c1c:	48 89 de             	mov    %rbx,%rsi
   37c1f:	bf 2c 00 00 00       	mov    $0x2c,%edi
   37c24:	e8 07 85 fd ff       	callq  10130 <fputc@plt>
   37c29:	83 f8 ff             	cmp    $0xffffffff,%eax
   37c2c:	0f 85 33 fe ff ff    	jne    37a65 <hostlist_encode+0x55>
   37c32:	e9 a0 fe ff ff       	jmpq   37ad7 <hostlist_encode+0xc7>
   37c37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   37c3e:	00 00 
   37c40:	48 89 de             	mov    %rbx,%rsi
   37c43:	bf 2c 00 00 00       	mov    $0x2c,%edi
   37c48:	e8 e3 84 fd ff       	callq  10130 <fputc@plt>
   37c4d:	83 f8 ff             	cmp    $0xffffffff,%eax
   37c50:	0f 85 22 ff ff ff    	jne    37b78 <hostlist_encode+0x168>
   37c56:	e9 7c fe ff ff       	jmpq   37ad7 <hostlist_encode+0xc7>
   37c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   37c60:	4c 89 f7             	mov    %r14,%rdi
   37c63:	e8 58 0a 00 00       	callq  386c0 <hostrange_within_range>
   37c68:	41 89 c6             	mov    %eax,%r14d
   37c6b:	85 c0                	test   %eax,%eax
   37c6d:	0f 85 44 fe ff ff    	jne    37ab7 <hostlist_encode+0xa7>
   37c73:	49 8b 07             	mov    (%r15),%rax
   37c76:	48 8d 15 8f b5 00 00 	lea    0xb58f(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   37c7d:	be 01 00 00 00       	mov    $0x1,%esi
   37c82:	48 89 df             	mov    %rbx,%rdi
   37c85:	48 8b 08             	mov    (%rax),%rcx
   37c88:	31 c0                	xor    %eax,%eax
   37c8a:	e8 d1 8c fd ff       	callq  10960 <__fprintf_chk@plt>
   37c8f:	85 c0                	test   %eax,%eax
   37c91:	0f 89 a1 fe ff ff    	jns    37b38 <hostlist_encode+0x128>
   37c97:	e9 3b fe ff ff       	jmpq   37ad7 <hostlist_encode+0xc7>
   37c9c:	0f 1f 40 00          	nopl   0x0(%rax)
   37ca0:	45 85 f6             	test   %r14d,%r14d
   37ca3:	0f 85 50 ff ff ff    	jne    37bf9 <hostlist_encode+0x1e9>
   37ca9:	41 8b 45 04          	mov    0x4(%r13),%eax
   37cad:	44 39 e0             	cmp    %r12d,%eax
   37cb0:	0f 8f 66 ff ff ff    	jg     37c1c <hostlist_encode+0x20c>
   37cb6:	41 39 c4             	cmp    %eax,%r12d
   37cb9:	0f 8c ba fd ff ff    	jl     37a79 <hostlist_encode+0x69>
   37cbf:	48 89 df             	mov    %rbx,%rdi
   37cc2:	e8 d9 80 fd ff       	callq  fda0 <fclose@plt>
   37cc7:	85 c0                	test   %eax,%eax
   37cc9:	78 0d                	js     37cd8 <hostlist_encode+0x2c8>
   37ccb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   37cd0:	e9 25 fe ff ff       	jmpq   37afa <hostlist_encode+0xea>
   37cd5:	0f 1f 00             	nopl   (%rax)
   37cd8:	e8 33 7e fd ff       	callq  fb10 <__errno_location@plt>
   37cdd:	48 89 c5             	mov    %rax,%rbp
   37ce0:	44 8b 20             	mov    (%rax),%r12d
   37ce3:	e9 02 fe ff ff       	jmpq   37aea <hostlist_encode+0xda>
   37ce8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   37cef:	00 
   37cf0:	e8 1b 7e fd ff       	callq  fb10 <__errno_location@plt>
   37cf5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37cfb:	31 c0                	xor    %eax,%eax
   37cfd:	e9 f8 fd ff ff       	jmpq   37afa <hostlist_encode+0xea>
   37d02:	e8 49 81 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000037d07 <.annobin_hostlist_current.start>:
   37d07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   37d0e:	00 00 

0000000000037d10 <hostlist_current>:
   37d10:	f3 0f 1e fa          	endbr64 
   37d14:	55                   	push   %rbp
   37d15:	53                   	push   %rbx
   37d16:	48 83 ec 08          	sub    $0x8,%rsp
   37d1a:	48 85 ff             	test   %rdi,%rdi
   37d1d:	74 59                	je     37d78 <hostlist_current+0x68>
   37d1f:	8b 6f 24             	mov    0x24(%rdi),%ebp
   37d22:	48 89 fb             	mov    %rdi,%rbx
   37d25:	85 ed                	test   %ebp,%ebp
   37d27:	78 1f                	js     37d48 <hostlist_current+0x38>
   37d29:	8b 47 20             	mov    0x20(%rdi),%eax
   37d2c:	39 47 08             	cmp    %eax,0x8(%rdi)
   37d2f:	7e 17                	jle    37d48 <hostlist_current+0x38>
   37d31:	48 8b 47 18          	mov    0x18(%rdi),%rax
   37d35:	48 85 c0             	test   %rax,%rax
   37d38:	74 1e                	je     37d58 <hostlist_current+0x48>
   37d3a:	48 83 c4 08          	add    $0x8,%rsp
   37d3e:	5b                   	pop    %rbx
   37d3f:	5d                   	pop    %rbp
   37d40:	c3                   	retq   
   37d41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37d48:	48 83 c4 08          	add    $0x8,%rsp
   37d4c:	31 c0                	xor    %eax,%eax
   37d4e:	5b                   	pop    %rbx
   37d4f:	5d                   	pop    %rbp
   37d50:	c3                   	retq   
   37d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37d58:	e8 43 eb ff ff       	callq  368a0 <hr_current>
   37d5d:	89 ee                	mov    %ebp,%esi
   37d5f:	48 89 c7             	mov    %rax,%rdi
   37d62:	e8 c9 0f 00 00       	callq  38d30 <hostrange_host_tostring>
   37d67:	48 89 43 18          	mov    %rax,0x18(%rbx)
   37d6b:	48 83 c4 08          	add    $0x8,%rsp
   37d6f:	5b                   	pop    %rbx
   37d70:	5d                   	pop    %rbp
   37d71:	c3                   	retq   
   37d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   37d78:	e8 93 7d fd ff       	callq  fb10 <__errno_location@plt>
   37d7d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37d83:	31 c0                	xor    %eax,%eax
   37d85:	eb b3                	jmp    37d3a <hostlist_current+0x2a>

0000000000037d87 <.annobin_hostlist_current.end>:
   37d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   37d8e:	00 00 

0000000000037d90 <hostlist_nth>:
   37d90:	f3 0f 1e fa          	endbr64 
   37d94:	41 55                	push   %r13
   37d96:	41 54                	push   %r12
   37d98:	55                   	push   %rbp
   37d99:	53                   	push   %rbx
   37d9a:	48 83 ec 08          	sub    $0x8,%rsp
   37d9e:	48 85 ff             	test   %rdi,%rdi
   37da1:	74 73                	je     37e16 <hostlist_nth+0x86>
   37da3:	41 89 f5             	mov    %esi,%r13d
   37da6:	85 f6                	test   %esi,%esi
   37da8:	78 6c                	js     37e16 <hostlist_nth+0x86>
   37daa:	49 89 fc             	mov    %rdi,%r12
   37dad:	3b 77 08             	cmp    0x8(%rdi),%esi
   37db0:	7d 7c                	jge    37e2e <hostlist_nth+0x9e>
   37db2:	8b 47 04             	mov    0x4(%rdi),%eax
   37db5:	31 db                	xor    %ebx,%ebx
   37db7:	31 ed                	xor    %ebp,%ebp
   37db9:	85 c0                	test   %eax,%eax
   37dbb:	7f 10                	jg     37dcd <hostlist_nth+0x3d>
   37dbd:	eb 62                	jmp    37e21 <hostlist_nth+0x91>
   37dbf:	90                   	nop
   37dc0:	01 c5                	add    %eax,%ebp
   37dc2:	48 83 c3 01          	add    $0x1,%rbx
   37dc6:	41 39 5c 24 04       	cmp    %ebx,0x4(%r12)
   37dcb:	7e 54                	jle    37e21 <hostlist_nth+0x91>
   37dcd:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   37dd2:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   37dd6:	e8 f5 05 00 00       	callq  383d0 <hostrange_count>
   37ddb:	8d 54 05 ff          	lea    -0x1(%rbp,%rax,1),%edx
   37ddf:	44 39 ea             	cmp    %r13d,%edx
   37de2:	7c dc                	jl     37dc0 <hostlist_nth+0x30>
   37de4:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
   37de9:	41 29 ed             	sub    %ebp,%r13d
   37dec:	e8 bf 7c fd ff       	callq  fab0 <free@plt>
   37df1:	41 89 5c 24 20       	mov    %ebx,0x20(%r12)
   37df6:	4c 89 e7             	mov    %r12,%rdi
   37df9:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
   37e00:	00 00 
   37e02:	45 89 6c 24 24       	mov    %r13d,0x24(%r12)
   37e07:	48 83 c4 08          	add    $0x8,%rsp
   37e0b:	5b                   	pop    %rbx
   37e0c:	5d                   	pop    %rbp
   37e0d:	41 5c                	pop    %r12
   37e0f:	41 5d                	pop    %r13
   37e11:	e9 fa fe ff ff       	jmpq   37d10 <hostlist_current>
   37e16:	e8 f5 7c fd ff       	callq  fb10 <__errno_location@plt>
   37e1b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37e21:	48 83 c4 08          	add    $0x8,%rsp
   37e25:	31 c0                	xor    %eax,%eax
   37e27:	5b                   	pop    %rbx
   37e28:	5d                   	pop    %rbp
   37e29:	41 5c                	pop    %r12
   37e2b:	41 5d                	pop    %r13
   37e2d:	c3                   	retq   
   37e2e:	e8 dd 7c fd ff       	callq  fb10 <__errno_location@plt>
   37e33:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   37e39:	eb e6                	jmp    37e21 <hostlist_nth+0x91>

0000000000037e3b <.annobin_hostlist_first.start>:
   37e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000037e40 <hostlist_first>:
   37e40:	f3 0f 1e fa          	endbr64 
   37e44:	53                   	push   %rbx
   37e45:	48 89 fb             	mov    %rdi,%rbx
   37e48:	e8 c3 7c fd ff       	callq  fb10 <__errno_location@plt>
   37e4d:	48 85 db             	test   %rbx,%rbx
   37e50:	74 36                	je     37e88 <hostlist_first+0x48>
   37e52:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   37e58:	8b 43 04             	mov    0x4(%rbx),%eax
   37e5b:	85 c0                	test   %eax,%eax
   37e5d:	74 2f                	je     37e8e <hostlist_first+0x4e>
   37e5f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   37e63:	e8 48 7c fd ff       	callq  fab0 <free@plt>
   37e68:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   37e6f:	00 
   37e70:	48 89 df             	mov    %rbx,%rdi
   37e73:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   37e7a:	00 
   37e7b:	5b                   	pop    %rbx
   37e7c:	e9 8f fe ff ff       	jmpq   37d10 <hostlist_current>
   37e81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   37e88:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37e8e:	31 c0                	xor    %eax,%eax
   37e90:	5b                   	pop    %rbx
   37e91:	c3                   	retq   

0000000000037e92 <.annobin_hostlist_first.end>:
   37e92:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37e99:	00 00 00 00 
   37e9d:	0f 1f 00             	nopl   (%rax)

0000000000037ea0 <hostlist_last>:
   37ea0:	f3 0f 1e fa          	endbr64 
   37ea4:	41 54                	push   %r12
   37ea6:	55                   	push   %rbp
   37ea7:	53                   	push   %rbx
   37ea8:	48 89 fb             	mov    %rdi,%rbx
   37eab:	e8 60 7c fd ff       	callq  fb10 <__errno_location@plt>
   37eb0:	48 85 db             	test   %rbx,%rbx
   37eb3:	74 53                	je     37f08 <hostlist_last+0x68>
   37eb5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   37ebb:	48 63 43 04          	movslq 0x4(%rbx),%rax
   37ebf:	85 c0                	test   %eax,%eax
   37ec1:	74 4b                	je     37f0e <hostlist_last+0x6e>
   37ec3:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   37ec7:	48 8b 7c c2 f8       	mov    -0x8(%rdx,%rax,8),%rdi
   37ecc:	e8 ff 04 00 00       	callq  383d0 <hostrange_count>
   37ed1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   37ed5:	48 89 c5             	mov    %rax,%rbp
   37ed8:	8b 43 04             	mov    0x4(%rbx),%eax
   37edb:	83 ed 01             	sub    $0x1,%ebp
   37ede:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
   37ee2:	e8 c9 7b fd ff       	callq  fab0 <free@plt>
   37ee7:	44 89 63 20          	mov    %r12d,0x20(%rbx)
   37eeb:	48 89 df             	mov    %rbx,%rdi
   37eee:	89 6b 24             	mov    %ebp,0x24(%rbx)
   37ef1:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   37ef8:	00 
   37ef9:	5b                   	pop    %rbx
   37efa:	5d                   	pop    %rbp
   37efb:	41 5c                	pop    %r12
   37efd:	e9 0e fe ff ff       	jmpq   37d10 <hostlist_current>
   37f02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   37f08:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37f0e:	5b                   	pop    %rbx
   37f0f:	31 c0                	xor    %eax,%eax
   37f11:	5d                   	pop    %rbp
   37f12:	41 5c                	pop    %r12
   37f14:	c3                   	retq   

0000000000037f15 <.annobin_hostlist_last.end>:
   37f15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   37f1c:	00 00 00 00 

0000000000037f20 <hostlist_next>:
   37f20:	f3 0f 1e fa          	endbr64 
   37f24:	53                   	push   %rbx
   37f25:	48 89 fb             	mov    %rdi,%rbx
   37f28:	e8 e3 7b fd ff       	callq  fb10 <__errno_location@plt>
   37f2d:	48 85 db             	test   %rbx,%rbx
   37f30:	74 5e                	je     37f90 <hostlist_next+0x70>
   37f32:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   37f38:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   37f3c:	e8 6f 7b fd ff       	callq  fab0 <free@plt>
   37f41:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   37f48:	00 
   37f49:	8b 43 20             	mov    0x20(%rbx),%eax
   37f4c:	39 43 04             	cmp    %eax,0x4(%rbx)
   37f4f:	7e 45                	jle    37f96 <hostlist_next+0x76>
   37f51:	48 89 df             	mov    %rbx,%rdi
   37f54:	e8 47 e9 ff ff       	callq  368a0 <hr_current>
   37f59:	48 89 c7             	mov    %rax,%rdi
   37f5c:	e8 6f 04 00 00       	callq  383d0 <hostrange_count>
   37f61:	8b 4b 24             	mov    0x24(%rbx),%ecx
   37f64:	8d 51 01             	lea    0x1(%rcx),%edx
   37f67:	89 53 24             	mov    %edx,0x24(%rbx)
   37f6a:	39 c2                	cmp    %eax,%edx
   37f6c:	7c 15                	jl     37f83 <hostlist_next+0x63>
   37f6e:	8b 43 20             	mov    0x20(%rbx),%eax
   37f71:	83 c0 01             	add    $0x1,%eax
   37f74:	89 43 20             	mov    %eax,0x20(%rbx)
   37f77:	3b 43 04             	cmp    0x4(%rbx),%eax
   37f7a:	7d 1a                	jge    37f96 <hostlist_next+0x76>
   37f7c:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%rbx)
   37f83:	48 89 df             	mov    %rbx,%rdi
   37f86:	5b                   	pop    %rbx
   37f87:	e9 84 fd ff ff       	jmpq   37d10 <hostlist_current>
   37f8c:	0f 1f 40 00          	nopl   0x0(%rax)
   37f90:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   37f96:	31 c0                	xor    %eax,%eax
   37f98:	5b                   	pop    %rbx
   37f99:	c3                   	retq   

0000000000037f9a <.annobin_hostlist_delete.start>:
   37f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000037fa0 <hostlist_delete>:
   37fa0:	f3 0f 1e fa          	endbr64 
   37fa4:	41 57                	push   %r15
   37fa6:	41 56                	push   %r14
   37fa8:	41 55                	push   %r13
   37faa:	41 54                	push   %r12
   37fac:	55                   	push   %rbp
   37fad:	53                   	push   %rbx
   37fae:	48 83 ec 28          	sub    $0x28,%rsp
   37fb2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   37fb9:	00 00 
   37fbb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   37fc0:	31 c0                	xor    %eax,%eax
   37fc2:	48 85 ff             	test   %rdi,%rdi
   37fc5:	0f 84 c9 00 00 00    	je     38094 <hostlist_delete+0xf4>
   37fcb:	48 85 f6             	test   %rsi,%rsi
   37fce:	0f 84 c0 00 00 00    	je     38094 <hostlist_delete+0xf4>
   37fd4:	49 89 ff             	mov    %rdi,%r15
   37fd7:	48 89 f7             	mov    %rsi,%rdi
   37fda:	e8 61 f6 ff ff       	callq  37640 <hostlist_decode>
   37fdf:	49 89 c4             	mov    %rax,%r12
   37fe2:	48 85 c0             	test   %rax,%rax
   37fe5:	0f 84 bb 00 00 00    	je     380a6 <hostlist_delete+0x106>
   37feb:	48 89 c7             	mov    %rax,%rdi
   37fee:	e8 4d fe ff ff       	callq  37e40 <hostlist_first>
   37ff3:	48 85 c0             	test   %rax,%rax
   37ff6:	0f 84 94 00 00 00    	je     38090 <hostlist_delete+0xf0>
   37ffc:	4d 8d 77 04          	lea    0x4(%r15),%r14
   38000:	4d 8d 6f 10          	lea    0x10(%r15),%r13
   38004:	31 db                	xor    %ebx,%ebx
   38006:	48 89 e5             	mov    %rsp,%rbp
   38009:	eb 1f                	jmp    3802a <hostlist_delete+0x8a>
   3800b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   38010:	4c 89 ff             	mov    %r15,%rdi
   38013:	48 89 ee             	mov    %rbp,%rsi
   38016:	e8 b5 eb ff ff       	callq  36bd0 <hostlist_remove_at>
   3801b:	4c 89 e7             	mov    %r12,%rdi
   3801e:	01 c3                	add    %eax,%ebx
   38020:	e8 fb fe ff ff       	callq  37f20 <hostlist_next>
   38025:	48 85 c0             	test   %rax,%rax
   38028:	74 3c                	je     38066 <hostlist_delete+0xc6>
   3802a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3802e:	48 89 e9             	mov    %rbp,%rcx
   38031:	48 89 c2             	mov    %rax,%rdx
   38034:	4c 89 ee             	mov    %r13,%rsi
   38037:	4c 89 f7             	mov    %r14,%rdi
   3803a:	0f 29 04 24          	movaps %xmm0,(%rsp)
   3803e:	e8 8d ec ff ff       	callq  36cd0 <hostlist_find_host.isra.4>
   38043:	85 c0                	test   %eax,%eax
   38045:	79 c9                	jns    38010 <hostlist_delete+0x70>
   38047:	e8 c4 7a fd ff       	callq  fb10 <__errno_location@plt>
   3804c:	4c 89 e7             	mov    %r12,%rdi
   3804f:	83 38 02             	cmpl   $0x2,(%rax)
   38052:	0f 95 c0             	setne  %al
   38055:	0f b6 c0             	movzbl %al,%eax
   38058:	f7 d8                	neg    %eax
   3805a:	01 c3                	add    %eax,%ebx
   3805c:	e8 bf fe ff ff       	callq  37f20 <hostlist_next>
   38061:	48 85 c0             	test   %rax,%rax
   38064:	75 c4                	jne    3802a <hostlist_delete+0x8a>
   38066:	4c 89 e7             	mov    %r12,%rdi
   38069:	e8 32 ee ff ff       	callq  36ea0 <hostlist_destroy>
   3806e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   38073:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3807a:	00 00 
   3807c:	89 d8                	mov    %ebx,%eax
   3807e:	75 2d                	jne    380ad <hostlist_delete+0x10d>
   38080:	48 83 c4 28          	add    $0x28,%rsp
   38084:	5b                   	pop    %rbx
   38085:	5d                   	pop    %rbp
   38086:	41 5c                	pop    %r12
   38088:	41 5d                	pop    %r13
   3808a:	41 5e                	pop    %r14
   3808c:	41 5f                	pop    %r15
   3808e:	c3                   	retq   
   3808f:	90                   	nop
   38090:	31 db                	xor    %ebx,%ebx
   38092:	eb d2                	jmp    38066 <hostlist_delete+0xc6>
   38094:	e8 77 7a fd ff       	callq  fb10 <__errno_location@plt>
   38099:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3809e:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   380a4:	eb c8                	jmp    3806e <hostlist_delete+0xce>
   380a6:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   380ab:	eb c1                	jmp    3806e <hostlist_delete+0xce>
   380ad:	e8 9e 7d fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000380b2 <.annobin_hostlist_delete.end>:
   380b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   380b9:	00 00 00 00 
   380bd:	0f 1f 00             	nopl   (%rax)

00000000000380c0 <hostlist_remove_current>:
   380c0:	f3 0f 1e fa          	endbr64 
   380c4:	48 85 ff             	test   %rdi,%rdi
   380c7:	74 09                	je     380d2 <hostlist_remove_current+0x12>
   380c9:	48 8d 77 18          	lea    0x18(%rdi),%rsi
   380cd:	e9 fe ea ff ff       	jmpq   36bd0 <hostlist_remove_at>
   380d2:	48 83 ec 08          	sub    $0x8,%rsp
   380d6:	e8 35 7a fd ff       	callq  fb10 <__errno_location@plt>
   380db:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   380e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   380e6:	48 83 c4 08          	add    $0x8,%rsp
   380ea:	c3                   	retq   

00000000000380eb <.annobin_hostlist.c_end>:
   380eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000380f0 <hostname_destroy>:
   380f0:	f3 0f 1e fa          	endbr64 
   380f4:	41 54                	push   %r12
   380f6:	55                   	push   %rbp
   380f7:	53                   	push   %rbx
   380f8:	48 89 fb             	mov    %rdi,%rbx
   380fb:	e8 10 7a fd ff       	callq  fb10 <__errno_location@plt>
   38100:	48 89 c5             	mov    %rax,%rbp
   38103:	44 8b 20             	mov    (%rax),%r12d
   38106:	48 85 db             	test   %rbx,%rbx
   38109:	74 19                	je     38124 <hostname_destroy+0x34>
   3810b:	48 8b 3b             	mov    (%rbx),%rdi
   3810e:	e8 9d 79 fd ff       	callq  fab0 <free@plt>
   38113:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   38117:	e8 94 79 fd ff       	callq  fab0 <free@plt>
   3811c:	48 89 df             	mov    %rbx,%rdi
   3811f:	e8 8c 79 fd ff       	callq  fab0 <free@plt>
   38124:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   38128:	5b                   	pop    %rbx
   38129:	5d                   	pop    %rbp
   3812a:	41 5c                	pop    %r12
   3812c:	c3                   	retq   

000000000003812d <.annobin_hostname_create_with_suffix.start>:
   3812d:	0f 1f 00             	nopl   (%rax)

0000000000038130 <hostname_create_with_suffix>:
   38130:	f3 0f 1e fa          	endbr64 
   38134:	41 57                	push   %r15
   38136:	41 56                	push   %r14
   38138:	41 55                	push   %r13
   3813a:	41 54                	push   %r12
   3813c:	55                   	push   %rbp
   3813d:	53                   	push   %rbx
   3813e:	48 83 ec 18          	sub    $0x18,%rsp
   38142:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   38149:	00 00 
   3814b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   38150:	31 c0                	xor    %eax,%eax
   38152:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   38159:	00 
   3815a:	48 85 ff             	test   %rdi,%rdi
   3815d:	74 42                	je     381a1 <hostname_create_with_suffix+0x71>
   3815f:	48 89 fd             	mov    %rdi,%rbp
   38162:	41 89 f5             	mov    %esi,%r13d
   38165:	e8 b6 7c fd ff       	callq  fe20 <strlen@plt>
   3816a:	49 89 c4             	mov    %rax,%r12
   3816d:	85 c0                	test   %eax,%eax
   3816f:	7e 67                	jle    381d8 <hostname_create_with_suffix+0xa8>
   38171:	8d 40 ff             	lea    -0x1(%rax),%eax
   38174:	48 89 eb             	mov    %rbp,%rbx
   38177:	4c 8d 35 98 ba 00 00 	lea    0xba98(%rip),%r14        # 43c16 <__PRETTY_FUNCTION__.5354+0x16>
   3817e:	4c 8d 7c 05 01       	lea    0x1(%rbp,%rax,1),%r15
   38183:	eb 0c                	jmp    38191 <hostname_create_with_suffix+0x61>
   38185:	0f 1f 00             	nopl   (%rax)
   38188:	48 83 c3 01          	add    $0x1,%rbx
   3818c:	4c 39 fb             	cmp    %r15,%rbx
   3818f:	74 49                	je     381da <hostname_create_with_suffix+0xaa>
   38191:	0f be 33             	movsbl (%rbx),%esi
   38194:	4c 89 f7             	mov    %r14,%rdi
   38197:	e8 14 7d fd ff       	callq  feb0 <strchr@plt>
   3819c:	48 85 c0             	test   %rax,%rax
   3819f:	74 e7                	je     38188 <hostname_create_with_suffix+0x58>
   381a1:	e8 6a 79 fd ff       	callq  fb10 <__errno_location@plt>
   381a6:	31 db                	xor    %ebx,%ebx
   381a8:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   381ae:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   381b3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   381ba:	00 00 
   381bc:	48 89 d8             	mov    %rbx,%rax
   381bf:	0f 85 22 01 00 00    	jne    382e7 <hostname_create_with_suffix+0x1b7>
   381c5:	48 83 c4 18          	add    $0x18,%rsp
   381c9:	5b                   	pop    %rbx
   381ca:	5d                   	pop    %rbp
   381cb:	41 5c                	pop    %r12
   381cd:	41 5d                	pop    %r13
   381cf:	41 5e                	pop    %r14
   381d1:	41 5f                	pop    %r15
   381d3:	c3                   	retq   
   381d4:	0f 1f 40 00          	nopl   0x0(%rax)
   381d8:	75 c7                	jne    381a1 <hostname_create_with_suffix+0x71>
   381da:	be 20 00 00 00       	mov    $0x20,%esi
   381df:	bf 01 00 00 00       	mov    $0x1,%edi
   381e4:	e8 27 80 fd ff       	callq  10210 <calloc@plt>
   381e9:	48 89 c3             	mov    %rax,%rbx
   381ec:	48 85 c0             	test   %rax,%rax
   381ef:	74 bd                	je     381ae <hostname_create_with_suffix+0x7e>
   381f1:	48 89 ef             	mov    %rbp,%rdi
   381f4:	e8 a7 87 fd ff       	callq  109a0 <strdup@plt>
   381f9:	48 89 03             	mov    %rax,(%rbx)
   381fc:	48 85 c0             	test   %rax,%rax
   381ff:	0f 84 b8 00 00 00    	je     382bd <hostname_create_with_suffix+0x18d>
   38205:	4d 63 f5             	movslq %r13d,%r14
   38208:	49 83 ec 01          	sub    $0x1,%r12
   3820c:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   38213:	00 
   38214:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   3821b:	00 
   3821c:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   38223:	00 
   38224:	4d 39 e6             	cmp    %r12,%r14
   38227:	74 7f                	je     382a8 <hostname_create_with_suffix+0x178>
   38229:	4e 8d 7c 30 01       	lea    0x1(%rax,%r14,1),%r15
   3822e:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
   38232:	e8 d9 78 fd ff       	callq  fb10 <__errno_location@plt>
   38237:	48 89 e6             	mov    %rsp,%rsi
   3823a:	ba 0a 00 00 00       	mov    $0xa,%edx
   3823f:	4c 89 ff             	mov    %r15,%rdi
   38242:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   38248:	49 89 c4             	mov    %rax,%r12
   3824b:	e8 00 86 fd ff       	callq  10850 <strtoul@plt>
   38250:	48 89 43 10          	mov    %rax,0x10(%rbx)
   38254:	48 8b 04 24          	mov    (%rsp),%rax
   38258:	48 39 43 18          	cmp    %rax,0x18(%rbx)
   3825c:	74 72                	je     382d0 <hostname_create_with_suffix+0x1a0>
   3825e:	41 8b 14 24          	mov    (%r12),%edx
   38262:	85 d2                	test   %edx,%edx
   38264:	75 6a                	jne    382d0 <hostname_create_with_suffix+0x1a0>
   38266:	80 38 00             	cmpb   $0x0,(%rax)
   38269:	0f 85 3f ff ff ff    	jne    381ae <hostname_create_with_suffix+0x7e>
   3826f:	41 8d 7d 02          	lea    0x2(%r13),%edi
   38273:	48 63 ff             	movslq %edi,%rdi
   38276:	e8 a5 81 fd ff       	callq  10420 <malloc@plt>
   3827b:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3827f:	48 85 c0             	test   %rax,%rax
   38282:	74 39                	je     382bd <hostname_create_with_suffix+0x18d>
   38284:	41 8d 55 01          	lea    0x1(%r13),%edx
  return __builtin___memcpy_chk (__dest, __src, __len,
   38288:	48 89 ee             	mov    %rbp,%rsi
   3828b:	48 89 c7             	mov    %rax,%rdi
   3828e:	48 63 d2             	movslq %edx,%rdx
   38291:	e8 7a 80 fd ff       	callq  10310 <memcpy@plt>
   38296:	42 c6 44 30 01 00    	movb   $0x0,0x1(%rax,%r14,1)
   3829c:	e9 0d ff ff ff       	jmpq   381ae <hostname_create_with_suffix+0x7e>
   382a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   382a8:	48 89 ef             	mov    %rbp,%rdi
   382ab:	e8 f0 86 fd ff       	callq  109a0 <strdup@plt>
   382b0:	48 89 43 08          	mov    %rax,0x8(%rbx)
   382b4:	48 85 c0             	test   %rax,%rax
   382b7:	0f 85 f1 fe ff ff    	jne    381ae <hostname_create_with_suffix+0x7e>
   382bd:	48 89 df             	mov    %rbx,%rdi
   382c0:	31 db                	xor    %ebx,%ebx
   382c2:	e8 29 fe ff ff       	callq  380f0 <hostname_destroy>
   382c7:	e9 e2 fe ff ff       	jmpq   381ae <hostname_create_with_suffix+0x7e>
   382cc:	0f 1f 40 00          	nopl   0x0(%rax)
   382d0:	48 89 df             	mov    %rbx,%rdi
   382d3:	31 db                	xor    %ebx,%ebx
   382d5:	e8 16 fe ff ff       	callq  380f0 <hostname_destroy>
   382da:	41 c7 04 24 16 00 00 	movl   $0x16,(%r12)
   382e1:	00 
   382e2:	e9 c7 fe ff ff       	jmpq   381ae <hostname_create_with_suffix+0x7e>
   382e7:	e8 64 7b fd ff       	callq  fe50 <__stack_chk_fail@plt>

00000000000382ec <.annobin_hostname_create.start>:
   382ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000382f0 <hostname_create>:
   382f0:	f3 0f 1e fa          	endbr64 
   382f4:	55                   	push   %rbp
   382f5:	53                   	push   %rbx
   382f6:	48 83 ec 08          	sub    $0x8,%rsp
   382fa:	48 85 ff             	test   %rdi,%rdi
   382fd:	74 51                	je     38350 <hostname_create+0x60>
   382ff:	48 89 fd             	mov    %rdi,%rbp
   38302:	e8 19 7b fd ff       	callq  fe20 <strlen@plt>
   38307:	89 c3                	mov    %eax,%ebx
   38309:	83 eb 01             	sub    $0x1,%ebx
   3830c:	78 29                	js     38337 <hostname_create+0x47>
   3830e:	e8 ed 87 fd ff       	callq  10b00 <__ctype_b_loc@plt>
   38313:	48 8b 08             	mov    (%rax),%rcx
   38316:	48 63 c3             	movslq %ebx,%rax
   38319:	48 01 e8             	add    %rbp,%rax
   3831c:	eb 0e                	jmp    3832c <hostname_create+0x3c>
   3831e:	66 90                	xchg   %ax,%ax
   38320:	83 eb 01             	sub    $0x1,%ebx
   38323:	48 83 e8 01          	sub    $0x1,%rax
   38327:	83 fb ff             	cmp    $0xffffffff,%ebx
   3832a:	74 0b                	je     38337 <hostname_create+0x47>
   3832c:	48 0f be 10          	movsbq (%rax),%rdx
   38330:	f6 44 51 01 08       	testb  $0x8,0x1(%rcx,%rdx,2)
   38335:	75 e9                	jne    38320 <hostname_create+0x30>
   38337:	48 83 c4 08          	add    $0x8,%rsp
   3833b:	89 de                	mov    %ebx,%esi
   3833d:	48 89 ef             	mov    %rbp,%rdi
   38340:	5b                   	pop    %rbx
   38341:	5d                   	pop    %rbp
   38342:	e9 e9 fd ff ff       	jmpq   38130 <hostname_create_with_suffix>
   38347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3834e:	00 00 
   38350:	e8 bb 77 fd ff       	callq  fb10 <__errno_location@plt>
   38355:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3835b:	48 83 c4 08          	add    $0x8,%rsp
   3835f:	31 c0                	xor    %eax,%eax
   38361:	5b                   	pop    %rbx
   38362:	5d                   	pop    %rbp
   38363:	c3                   	retq   

0000000000038364 <.annobin_hostname_create.end>:
   38364:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3836b:	00 00 00 00 
   3836f:	90                   	nop

0000000000038370 <hostname_suffix_is_valid>:
   38370:	f3 0f 1e fa          	endbr64 
   38374:	31 c0                	xor    %eax,%eax
   38376:	48 85 ff             	test   %rdi,%rdi
   38379:	74 0a                	je     38385 <hostname_suffix_is_valid+0x15>
   3837b:	31 c0                	xor    %eax,%eax
   3837d:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
   38382:	0f 95 c0             	setne  %al
   38385:	c3                   	retq   

0000000000038386 <.annobin_hostname_suffix_is_valid.end>:
   38386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3838d:	00 00 00 

0000000000038390 <hostname_suffix_width>:
   38390:	f3 0f 1e fa          	endbr64 
   38394:	48 83 ec 08          	sub    $0x8,%rsp
   38398:	48 85 ff             	test   %rdi,%rdi
   3839b:	74 1a                	je     383b7 <hostname_suffix_width+0x27>
   3839d:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   383a1:	48 85 ff             	test   %rdi,%rdi
   383a4:	74 0a                	je     383b0 <hostname_suffix_width+0x20>
   383a6:	e8 75 7a fd ff       	callq  fe20 <strlen@plt>
   383ab:	48 83 c4 08          	add    $0x8,%rsp
   383af:	c3                   	retq   
   383b0:	31 c0                	xor    %eax,%eax
   383b2:	48 83 c4 08          	add    $0x8,%rsp
   383b6:	c3                   	retq   
   383b7:	e8 54 77 fd ff       	callq  fb10 <__errno_location@plt>
   383bc:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   383c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   383c7:	eb e2                	jmp    383ab <hostname_suffix_width+0x1b>

00000000000383c9 <.annobin_hostname.c_end>:
   383c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000383d0 <hostrange_count>:
   383d0:	f3 0f 1e fa          	endbr64 
   383d4:	53                   	push   %rbx
   383d5:	48 89 fb             	mov    %rdi,%rbx
   383d8:	e8 33 77 fd ff       	callq  fb10 <__errno_location@plt>
   383dd:	48 85 db             	test   %rbx,%rbx
   383e0:	74 2e                	je     38410 <hostrange_count+0x40>
   383e2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   383e8:	b8 01 00 00 00       	mov    $0x1,%eax
   383ed:	f6 43 1c 01          	testb  $0x1,0x1c(%rbx)
   383f1:	74 05                	je     383f8 <hostrange_count+0x28>
   383f3:	5b                   	pop    %rbx
   383f4:	c3                   	retq   
   383f5:	0f 1f 00             	nopl   (%rax)
   383f8:	48 8b 43 10          	mov    0x10(%rbx),%rax
   383fc:	48 83 c0 01          	add    $0x1,%rax
   38400:	48 2b 43 08          	sub    0x8(%rbx),%rax
   38404:	5b                   	pop    %rbx
   38405:	c3                   	retq   
   38406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3840d:	00 00 00 
   38410:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   38416:	31 c0                	xor    %eax,%eax
   38418:	5b                   	pop    %rbx
   38419:	c3                   	retq   

000000000003841a <.annobin_hostrange_count.end>:
   3841a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000038420 <hostrange_destroy>:
   38420:	f3 0f 1e fa          	endbr64 
   38424:	48 85 ff             	test   %rdi,%rdi
   38427:	74 37                	je     38460 <hostrange_destroy+0x40>
   38429:	41 54                	push   %r12
   3842b:	55                   	push   %rbp
   3842c:	53                   	push   %rbx
   3842d:	48 89 fb             	mov    %rdi,%rbx
   38430:	e8 db 76 fd ff       	callq  fb10 <__errno_location@plt>
   38435:	48 8b 3b             	mov    (%rbx),%rdi
   38438:	48 89 c5             	mov    %rax,%rbp
   3843b:	44 8b 20             	mov    (%rax),%r12d
   3843e:	48 85 ff             	test   %rdi,%rdi
   38441:	74 05                	je     38448 <hostrange_destroy+0x28>
   38443:	e8 68 76 fd ff       	callq  fab0 <free@plt>
   38448:	48 89 df             	mov    %rbx,%rdi
   3844b:	e8 60 76 fd ff       	callq  fab0 <free@plt>
   38450:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   38454:	5b                   	pop    %rbx
   38455:	5d                   	pop    %rbp
   38456:	41 5c                	pop    %r12
   38458:	c3                   	retq   
   38459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38460:	c3                   	retq   

0000000000038461 <.annobin_hostrange_destroy.end>:
   38461:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   38468:	00 00 00 00 
   3846c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000038470 <hostrange_new>:
   38470:	55                   	push   %rbp
   38471:	53                   	push   %rbx
   38472:	48 83 ec 08          	sub    $0x8,%rsp
   38476:	48 85 ff             	test   %rdi,%rdi
   38479:	74 35                	je     384b0 <hostrange_new+0x40>
   3847b:	48 89 fd             	mov    %rdi,%rbp
   3847e:	be 20 00 00 00       	mov    $0x20,%esi
   38483:	bf 01 00 00 00       	mov    $0x1,%edi
   38488:	e8 83 7d fd ff       	callq  10210 <calloc@plt>
   3848d:	48 89 c3             	mov    %rax,%rbx
   38490:	48 85 c0             	test   %rax,%rax
   38493:	74 3b                	je     384d0 <hostrange_new+0x60>
   38495:	48 89 ef             	mov    %rbp,%rdi
   38498:	e8 03 85 fd ff       	callq  109a0 <strdup@plt>
   3849d:	48 89 03             	mov    %rax,(%rbx)
   384a0:	48 85 c0             	test   %rax,%rax
   384a3:	74 2b                	je     384d0 <hostrange_new+0x60>
   384a5:	48 83 c4 08          	add    $0x8,%rsp
   384a9:	48 89 d8             	mov    %rbx,%rax
   384ac:	5b                   	pop    %rbx
   384ad:	5d                   	pop    %rbp
   384ae:	c3                   	retq   
   384af:	90                   	nop
   384b0:	e8 5b 76 fd ff       	callq  fb10 <__errno_location@plt>
   384b5:	31 db                	xor    %ebx,%ebx
   384b7:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   384bd:	48 83 c4 08          	add    $0x8,%rsp
   384c1:	48 89 d8             	mov    %rbx,%rax
   384c4:	5b                   	pop    %rbx
   384c5:	5d                   	pop    %rbp
   384c6:	c3                   	retq   
   384c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   384ce:	00 00 
   384d0:	48 89 df             	mov    %rbx,%rdi
   384d3:	31 db                	xor    %ebx,%ebx
   384d5:	e8 46 ff ff ff       	callq  38420 <hostrange_destroy>
   384da:	48 83 c4 08          	add    $0x8,%rsp
   384de:	48 89 d8             	mov    %rbx,%rax
   384e1:	5b                   	pop    %rbx
   384e2:	5d                   	pop    %rbp
   384e3:	c3                   	retq   

00000000000384e4 <.annobin_hostrange_create_single.start>:
   384e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   384eb:	00 00 00 00 
   384ef:	90                   	nop

00000000000384f0 <hostrange_create_single>:
   384f0:	f3 0f 1e fa          	endbr64 
   384f4:	48 83 ec 08          	sub    $0x8,%rsp
   384f8:	e8 73 ff ff ff       	callq  38470 <hostrange_new>
   384fd:	48 85 c0             	test   %rax,%rax
   38500:	74 04                	je     38506 <hostrange_create_single+0x16>
   38502:	80 48 1c 01          	orb    $0x1,0x1c(%rax)
   38506:	48 83 c4 08          	add    $0x8,%rsp
   3850a:	c3                   	retq   

000000000003850b <.annobin_hostrange_create.start>:
   3850b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000038510 <hostrange_create>:
   38510:	f3 0f 1e fa          	endbr64 
   38514:	41 54                	push   %r12
   38516:	55                   	push   %rbp
   38517:	53                   	push   %rbx
   38518:	48 39 d6             	cmp    %rdx,%rsi
   3851b:	77 2b                	ja     38548 <hostrange_create+0x38>
   3851d:	41 89 cc             	mov    %ecx,%r12d
   38520:	85 c9                	test   %ecx,%ecx
   38522:	78 24                	js     38548 <hostrange_create+0x38>
   38524:	48 89 f5             	mov    %rsi,%rbp
   38527:	48 89 d3             	mov    %rdx,%rbx
   3852a:	e8 41 ff ff ff       	callq  38470 <hostrange_new>
   3852f:	48 85 c0             	test   %rax,%rax
   38532:	74 0c                	je     38540 <hostrange_create+0x30>
   38534:	48 89 68 08          	mov    %rbp,0x8(%rax)
   38538:	48 89 58 10          	mov    %rbx,0x10(%rax)
   3853c:	44 89 60 18          	mov    %r12d,0x18(%rax)
   38540:	5b                   	pop    %rbx
   38541:	5d                   	pop    %rbp
   38542:	41 5c                	pop    %r12
   38544:	c3                   	retq   
   38545:	0f 1f 00             	nopl   (%rax)
   38548:	e8 c3 75 fd ff       	callq  fb10 <__errno_location@plt>
   3854d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   38553:	31 c0                	xor    %eax,%eax
   38555:	5b                   	pop    %rbx
   38556:	5d                   	pop    %rbp
   38557:	41 5c                	pop    %r12
   38559:	c3                   	retq   

000000000003855a <.annobin_hostrange_copy.start>:
   3855a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000038560 <hostrange_copy>:
   38560:	f3 0f 1e fa          	endbr64 
   38564:	48 85 ff             	test   %rdi,%rdi
   38567:	74 27                	je     38590 <hostrange_copy+0x30>
   38569:	48 89 f8             	mov    %rdi,%rax
   3856c:	48 8b 3f             	mov    (%rdi),%rdi
   3856f:	f6 40 1c 01          	testb  $0x1,0x1c(%rax)
   38573:	74 0b                	je     38580 <hostrange_copy+0x20>
   38575:	e9 76 ff ff ff       	jmpq   384f0 <hostrange_create_single>
   3857a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38580:	8b 48 18             	mov    0x18(%rax),%ecx
   38583:	48 8b 50 10          	mov    0x10(%rax),%rdx
   38587:	48 8b 70 08          	mov    0x8(%rax),%rsi
   3858b:	e9 80 ff ff ff       	jmpq   38510 <hostrange_create>
   38590:	48 83 ec 08          	sub    $0x8,%rsp
   38594:	e8 77 75 fd ff       	callq  fb10 <__errno_location@plt>
   38599:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3859f:	31 c0                	xor    %eax,%eax
   385a1:	48 83 c4 08          	add    $0x8,%rsp
   385a5:	c3                   	retq   

00000000000385a6 <.annobin_hostrange_copy.end>:
   385a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   385ad:	00 00 00 

00000000000385b0 <hostrange_delete_host>:
   385b0:	f3 0f 1e fa          	endbr64 
   385b4:	55                   	push   %rbp
   385b5:	53                   	push   %rbx
   385b6:	48 83 ec 08          	sub    $0x8,%rsp
   385ba:	48 85 ff             	test   %rdi,%rdi
   385bd:	74 79                	je     38638 <hostrange_delete_host+0x88>
   385bf:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   385c3:	48 89 fd             	mov    %rdi,%rbp
   385c6:	48 89 f3             	mov    %rsi,%rbx
   385c9:	48 39 f2             	cmp    %rsi,%rdx
   385cc:	77 79                	ja     38647 <hostrange_delete_host+0x97>
   385ce:	48 8b 47 10          	mov    0x10(%rdi),%rax
   385d2:	48 39 f0             	cmp    %rsi,%rax
   385d5:	72 70                	jb     38647 <hostrange_delete_host+0x97>
   385d7:	48 39 f2             	cmp    %rsi,%rdx
   385da:	74 44                	je     38620 <hostrange_delete_host+0x70>
   385dc:	48 39 f0             	cmp    %rsi,%rax
   385df:	74 27                	je     38608 <hostrange_delete_host+0x58>
   385e1:	e8 7a ff ff ff       	callq  38560 <hostrange_copy>
   385e6:	48 85 c0             	test   %rax,%rax
   385e9:	74 10                	je     385fb <hostrange_delete_host+0x4b>
   385eb:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
   385ef:	48 83 c3 01          	add    $0x1,%rbx
   385f3:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   385f7:	48 89 58 08          	mov    %rbx,0x8(%rax)
   385fb:	48 83 c4 08          	add    $0x8,%rsp
   385ff:	5b                   	pop    %rbx
   38600:	5d                   	pop    %rbp
   38601:	c3                   	retq   
   38602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38608:	48 83 e8 01          	sub    $0x1,%rax
   3860c:	48 89 47 10          	mov    %rax,0x10(%rdi)
   38610:	48 83 c4 08          	add    $0x8,%rsp
   38614:	31 c0                	xor    %eax,%eax
   38616:	5b                   	pop    %rbx
   38617:	5d                   	pop    %rbp
   38618:	c3                   	retq   
   38619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38620:	48 83 c2 01          	add    $0x1,%rdx
   38624:	31 c0                	xor    %eax,%eax
   38626:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   3862a:	48 83 c4 08          	add    $0x8,%rsp
   3862e:	5b                   	pop    %rbx
   3862f:	5d                   	pop    %rbp
   38630:	c3                   	retq   
   38631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38638:	e8 d3 74 fd ff       	callq  fb10 <__errno_location@plt>
   3863d:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   38643:	31 c0                	xor    %eax,%eax
   38645:	eb b4                	jmp    385fb <hostrange_delete_host+0x4b>
   38647:	48 8d 0d e2 b6 00 00 	lea    0xb6e2(%rip),%rcx        # 43d30 <__PRETTY_FUNCTION__.5290>
   3864e:	ba 9f 00 00 00       	mov    $0x9f,%edx
   38653:	48 8d 35 c2 b5 00 00 	lea    0xb5c2(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   3865a:	48 8d 3d c7 b5 00 00 	lea    0xb5c7(%rip),%rdi        # 43c28 <__PRETTY_FUNCTION__.5354+0x28>
   38661:	e8 9a 79 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038666 <.annobin_hostrange_delete_host.end>:
   38666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3866d:	00 00 00 

0000000000038670 <hostrange_prefix_cmp>:
   38670:	f3 0f 1e fa          	endbr64 
   38674:	48 85 ff             	test   %rdi,%rdi
   38677:	74 3d                	je     386b6 <hostrange_prefix_cmp+0x46>
   38679:	48 85 f6             	test   %rsi,%rsi
   3867c:	74 32                	je     386b0 <hostrange_prefix_cmp+0x40>
   3867e:	55                   	push   %rbp
   3867f:	48 89 f5             	mov    %rsi,%rbp
   38682:	53                   	push   %rbx
   38683:	48 89 fb             	mov    %rdi,%rbx
   38686:	48 83 ec 08          	sub    $0x8,%rsp
   3868a:	48 8b 36             	mov    (%rsi),%rsi
   3868d:	48 8b 3f             	mov    (%rdi),%rdi
   38690:	e8 8b 7b fd ff       	callq  10220 <strcmp@plt>
   38695:	85 c0                	test   %eax,%eax
   38697:	75 10                	jne    386a9 <hostrange_prefix_cmp+0x39>
   38699:	0f b6 45 1c          	movzbl 0x1c(%rbp),%eax
   3869d:	0f b6 53 1c          	movzbl 0x1c(%rbx),%edx
   386a1:	83 e0 01             	and    $0x1,%eax
   386a4:	83 e2 01             	and    $0x1,%edx
   386a7:	29 d0                	sub    %edx,%eax
   386a9:	48 83 c4 08          	add    $0x8,%rsp
   386ad:	5b                   	pop    %rbx
   386ae:	5d                   	pop    %rbp
   386af:	c3                   	retq   
   386b0:	b8 01 00 00 00       	mov    $0x1,%eax
   386b5:	c3                   	retq   
   386b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   386bb:	c3                   	retq   

00000000000386bc <.annobin_hostrange_prefix_cmp.end>:
   386bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000386c0 <hostrange_within_range>:
   386c0:	f3 0f 1e fa          	endbr64 
   386c4:	55                   	push   %rbp
   386c5:	48 89 f5             	mov    %rsi,%rbp
   386c8:	53                   	push   %rbx
   386c9:	48 89 fb             	mov    %rdi,%rbx
   386cc:	48 83 ec 08          	sub    $0x8,%rsp
   386d0:	e8 9b ff ff ff       	callq  38670 <hostrange_prefix_cmp>
   386d5:	85 c0                	test   %eax,%eax
   386d7:	75 17                	jne    386f0 <hostrange_within_range+0x30>
   386d9:	f6 43 1c 01          	testb  $0x1,0x1c(%rbx)
   386dd:	75 0a                	jne    386e9 <hostrange_within_range+0x29>
   386df:	0f b6 45 1c          	movzbl 0x1c(%rbp),%eax
   386e3:	83 f0 01             	xor    $0x1,%eax
   386e6:	83 e0 01             	and    $0x1,%eax
   386e9:	48 83 c4 08          	add    $0x8,%rsp
   386ed:	5b                   	pop    %rbx
   386ee:	5d                   	pop    %rbp
   386ef:	c3                   	retq   
   386f0:	48 83 c4 08          	add    $0x8,%rsp
   386f4:	31 c0                	xor    %eax,%eax
   386f6:	5b                   	pop    %rbx
   386f7:	5d                   	pop    %rbp
   386f8:	c3                   	retq   

00000000000386f9 <.annobin_hostrange_width_combine.start>:
   386f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038700 <hostrange_width_combine>:
   38700:	f3 0f 1e fa          	endbr64 
   38704:	48 83 ec 08          	sub    $0x8,%rsp
   38708:	48 85 ff             	test   %rdi,%rdi
   3870b:	74 1e                	je     3872b <hostrange_width_combine+0x2b>
   3870d:	48 85 f6             	test   %rsi,%rsi
   38710:	74 38                	je     3874a <hostrange_width_combine+0x4a>
   38712:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   38716:	48 8d 4e 18          	lea    0x18(%rsi),%rcx
   3871a:	48 8d 77 18          	lea    0x18(%rdi),%rsi
   3871e:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   38722:	48 83 c4 08          	add    $0x8,%rsp
   38726:	e9 f5 06 00 00       	jmpq   38e20 <width_equiv>
   3872b:	48 8d 0d ce b5 00 00 	lea    0xb5ce(%rip),%rcx        # 43d00 <__PRETTY_FUNCTION__.5310>
   38732:	ba f7 00 00 00       	mov    $0xf7,%edx
   38737:	48 8d 35 de b4 00 00 	lea    0xb4de(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   3873e:	48 8d 3d fe b4 00 00 	lea    0xb4fe(%rip),%rdi        # 43c43 <__PRETTY_FUNCTION__.5354+0x43>
   38745:	e8 b6 78 fd ff       	callq  10000 <__assert_fail@plt>
   3874a:	48 8d 0d af b5 00 00 	lea    0xb5af(%rip),%rcx        # 43d00 <__PRETTY_FUNCTION__.5310>
   38751:	ba f8 00 00 00       	mov    $0xf8,%edx
   38756:	48 8d 35 bf b4 00 00 	lea    0xb4bf(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   3875d:	48 8d 3d ea b4 00 00 	lea    0xb4ea(%rip),%rdi        # 43c4e <__PRETTY_FUNCTION__.5354+0x4e>
   38764:	e8 97 78 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038769 <.annobin_hostrange_cmp.start>:
   38769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000038770 <hostrange_cmp>:
   38770:	f3 0f 1e fa          	endbr64 
   38774:	55                   	push   %rbp
   38775:	53                   	push   %rbx
   38776:	48 83 ec 08          	sub    $0x8,%rsp
   3877a:	48 85 ff             	test   %rdi,%rdi
   3877d:	74 4a                	je     387c9 <hostrange_cmp+0x59>
   3877f:	48 89 f5             	mov    %rsi,%rbp
   38782:	48 85 f6             	test   %rsi,%rsi
   38785:	74 61                	je     387e8 <hostrange_cmp+0x78>
   38787:	48 89 fb             	mov    %rdi,%rbx
   3878a:	e8 e1 fe ff ff       	callq  38670 <hostrange_prefix_cmp>
   3878f:	85 c0                	test   %eax,%eax
   38791:	74 0d                	je     387a0 <hostrange_cmp+0x30>
   38793:	48 83 c4 08          	add    $0x8,%rsp
   38797:	c1 f8 1f             	sar    $0x1f,%eax
   3879a:	83 c8 01             	or     $0x1,%eax
   3879d:	5b                   	pop    %rbx
   3879e:	5d                   	pop    %rbp
   3879f:	c3                   	retq   
   387a0:	48 89 ee             	mov    %rbp,%rsi
   387a3:	48 89 df             	mov    %rbx,%rdi
   387a6:	e8 55 ff ff ff       	callq  38700 <hostrange_width_combine>
   387ab:	85 c0                	test   %eax,%eax
   387ad:	75 11                	jne    387c0 <hostrange_cmp+0x50>
   387af:	8b 43 18             	mov    0x18(%rbx),%eax
   387b2:	2b 45 18             	sub    0x18(%rbp),%eax
   387b5:	85 c0                	test   %eax,%eax
   387b7:	75 da                	jne    38793 <hostrange_cmp+0x23>
   387b9:	48 83 c4 08          	add    $0x8,%rsp
   387bd:	5b                   	pop    %rbx
   387be:	5d                   	pop    %rbp
   387bf:	c3                   	retq   
   387c0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   387c4:	2b 45 08             	sub    0x8(%rbp),%eax
   387c7:	eb ec                	jmp    387b5 <hostrange_cmp+0x45>
   387c9:	48 8d 0d 48 b5 00 00 	lea    0xb548(%rip),%rcx        # 43d18 <__PRETTY_FUNCTION__.5301>
   387d0:	ba d1 00 00 00       	mov    $0xd1,%edx
   387d5:	48 8d 35 40 b4 00 00 	lea    0xb440(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   387dc:	48 8d 3d 6b b4 00 00 	lea    0xb46b(%rip),%rdi        # 43c4e <__PRETTY_FUNCTION__.5354+0x4e>
   387e3:	e8 18 78 fd ff       	callq  10000 <__assert_fail@plt>
   387e8:	48 8d 0d 29 b5 00 00 	lea    0xb529(%rip),%rcx        # 43d18 <__PRETTY_FUNCTION__.5301>
   387ef:	ba d2 00 00 00       	mov    $0xd2,%edx
   387f4:	48 8d 35 21 b4 00 00 	lea    0xb421(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   387fb:	48 8d 3d 57 b4 00 00 	lea    0xb457(%rip),%rdi        # 43c59 <__PRETTY_FUNCTION__.5354+0x59>
   38802:	e8 f9 77 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038807 <.annobin_hostrange_cmp.end>:
   38807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3880e:	00 00 

0000000000038810 <hostrange_empty>:
   38810:	f3 0f 1e fa          	endbr64 
   38814:	48 85 ff             	test   %rdi,%rdi
   38817:	74 18                	je     38831 <hostrange_empty+0x21>
   38819:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   3881d:	48 3b 57 08          	cmp    0x8(%rdi),%rdx
   38821:	0f 92 c0             	setb   %al
   38824:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   38828:	0f 94 c2             	sete   %dl
   3882b:	09 d0                	or     %edx,%eax
   3882d:	0f b6 c0             	movzbl %al,%eax
   38830:	c3                   	retq   
   38831:	50                   	push   %rax
   38832:	48 8d 0d b7 b4 00 00 	lea    0xb4b7(%rip),%rcx        # 43cf0 <__PRETTY_FUNCTION__.5314>
   38839:	ba 02 01 00 00       	mov    $0x102,%edx
   3883e:	48 8d 35 d7 b3 00 00 	lea    0xb3d7(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38845:	48 8d 3d ee b2 00 00 	lea    0xb2ee(%rip),%rdi        # 43b3a <__PRETTY_FUNCTION__.6731+0x23a>
   3884c:	e8 af 77 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038851 <.annobin_hostrange_empty.end>:
   38851:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   38858:	00 00 00 00 
   3885c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000038860 <hostrange_join>:
   38860:	f3 0f 1e fa          	endbr64 
   38864:	41 54                	push   %r12
   38866:	55                   	push   %rbp
   38867:	53                   	push   %rbx
   38868:	48 85 ff             	test   %rdi,%rdi
   3886b:	0f 84 0d 01 00 00    	je     3897e <hostrange_join+0x11e>
   38871:	48 89 f5             	mov    %rsi,%rbp
   38874:	48 85 f6             	test   %rsi,%rsi
   38877:	0f 84 e2 00 00 00    	je     3895f <hostrange_join+0xff>
   3887d:	48 89 fb             	mov    %rdi,%rbx
   38880:	e8 eb fe ff ff       	callq  38770 <hostrange_cmp>
   38885:	85 c0                	test   %eax,%eax
   38887:	0f 8f b3 00 00 00    	jg     38940 <hostrange_join+0xe0>
   3888d:	48 89 ee             	mov    %rbp,%rsi
   38890:	48 89 df             	mov    %rbx,%rdi
   38893:	e8 d8 fd ff ff       	callq  38670 <hostrange_prefix_cmp>
   38898:	41 89 c4             	mov    %eax,%r12d
   3889b:	85 c0                	test   %eax,%eax
   3889d:	0f 85 95 00 00 00    	jne    38938 <hostrange_join+0xd8>
   388a3:	48 89 ee             	mov    %rbp,%rsi
   388a6:	48 89 df             	mov    %rbx,%rdi
   388a9:	e8 52 fe ff ff       	callq  38700 <hostrange_width_combine>
   388ae:	85 c0                	test   %eax,%eax
   388b0:	0f 84 82 00 00 00    	je     38938 <hostrange_join+0xd8>
   388b6:	f6 43 1c 01          	testb  $0x1,0x1c(%rbx)
   388ba:	74 14                	je     388d0 <hostrange_join+0x70>
   388bc:	f6 45 1c 01          	testb  $0x1,0x1c(%rbp)
   388c0:	74 0e                	je     388d0 <hostrange_join+0x70>
   388c2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   388c8:	44 89 e0             	mov    %r12d,%eax
   388cb:	5b                   	pop    %rbx
   388cc:	5d                   	pop    %rbp
   388cd:	41 5c                	pop    %r12
   388cf:	c3                   	retq   
   388d0:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   388d4:	48 8b 43 10          	mov    0x10(%rbx),%rax
   388d8:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   388dc:	48 39 c8             	cmp    %rcx,%rax
   388df:	74 27                	je     38908 <hostrange_join+0xa8>
   388e1:	48 39 d0             	cmp    %rdx,%rax
   388e4:	72 52                	jb     38938 <hostrange_join+0xd8>
   388e6:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   388ea:	48 39 c8             	cmp    %rcx,%rax
   388ed:	73 31                	jae    38920 <hostrange_join+0xc0>
   388ef:	29 d0                	sub    %edx,%eax
   388f1:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   388f5:	5b                   	pop    %rbx
   388f6:	44 8d 60 01          	lea    0x1(%rax),%r12d
   388fa:	5d                   	pop    %rbp
   388fb:	44 89 e0             	mov    %r12d,%eax
   388fe:	41 5c                	pop    %r12
   38900:	c3                   	retq   
   38901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38908:	48 8b 45 10          	mov    0x10(%rbp),%rax
   3890c:	48 89 43 10          	mov    %rax,0x10(%rbx)
   38910:	44 89 e0             	mov    %r12d,%eax
   38913:	5b                   	pop    %rbx
   38914:	5d                   	pop    %rbp
   38915:	41 5c                	pop    %r12
   38917:	c3                   	retq   
   38918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3891f:	00 
   38920:	48 89 ef             	mov    %rbp,%rdi
   38923:	e8 a8 fa ff ff       	callq  383d0 <hostrange_count>
   38928:	5b                   	pop    %rbx
   38929:	5d                   	pop    %rbp
   3892a:	41 89 c4             	mov    %eax,%r12d
   3892d:	44 89 e0             	mov    %r12d,%eax
   38930:	41 5c                	pop    %r12
   38932:	c3                   	retq   
   38933:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   38938:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   3893e:	eb 88                	jmp    388c8 <hostrange_join+0x68>
   38940:	48 8d 0d 91 b3 00 00 	lea    0xb391(%rip),%rcx        # 43cd8 <__PRETTY_FUNCTION__.5320>
   38947:	ba 19 01 00 00       	mov    $0x119,%edx
   3894c:	48 8d 35 c9 b2 00 00 	lea    0xb2c9(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38953:	48 8d 3d 0a b3 00 00 	lea    0xb30a(%rip),%rdi        # 43c64 <__PRETTY_FUNCTION__.5354+0x64>
   3895a:	e8 a1 76 fd ff       	callq  10000 <__assert_fail@plt>
   3895f:	48 8d 0d 72 b3 00 00 	lea    0xb372(%rip),%rcx        # 43cd8 <__PRETTY_FUNCTION__.5320>
   38966:	ba 18 01 00 00       	mov    $0x118,%edx
   3896b:	48 8d 35 aa b2 00 00 	lea    0xb2aa(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38972:	48 8d 3d e0 b2 00 00 	lea    0xb2e0(%rip),%rdi        # 43c59 <__PRETTY_FUNCTION__.5354+0x59>
   38979:	e8 82 76 fd ff       	callq  10000 <__assert_fail@plt>
   3897e:	48 8d 0d 53 b3 00 00 	lea    0xb353(%rip),%rcx        # 43cd8 <__PRETTY_FUNCTION__.5320>
   38985:	ba 17 01 00 00       	mov    $0x117,%edx
   3898a:	48 8d 35 8b b2 00 00 	lea    0xb28b(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38991:	48 8d 3d b6 b2 00 00 	lea    0xb2b6(%rip),%rdi        # 43c4e <__PRETTY_FUNCTION__.5354+0x4e>
   38998:	e8 63 76 fd ff       	callq  10000 <__assert_fail@plt>

000000000003899d <.annobin_hostrange_intersect.start>:
   3899d:	0f 1f 00             	nopl   (%rax)

00000000000389a0 <hostrange_intersect>:
   389a0:	f3 0f 1e fa          	endbr64 
   389a4:	55                   	push   %rbp
   389a5:	53                   	push   %rbx
   389a6:	48 83 ec 08          	sub    $0x8,%rsp
   389aa:	48 85 ff             	test   %rdi,%rdi
   389ad:	0f 84 86 00 00 00    	je     38a39 <hostrange_intersect+0x99>
   389b3:	48 89 f5             	mov    %rsi,%rbp
   389b6:	48 85 f6             	test   %rsi,%rsi
   389b9:	0f 84 99 00 00 00    	je     38a58 <hostrange_intersect+0xb8>
   389bf:	48 89 fb             	mov    %rdi,%rbx
   389c2:	f6 47 1c 01          	testb  $0x1,0x1c(%rdi)
   389c6:	75 68                	jne    38a30 <hostrange_intersect+0x90>
   389c8:	f6 46 1c 01          	testb  $0x1,0x1c(%rsi)
   389cc:	75 62                	jne    38a30 <hostrange_intersect+0x90>
   389ce:	e8 9d fd ff ff       	callq  38770 <hostrange_cmp>
   389d3:	85 c0                	test   %eax,%eax
   389d5:	0f 8f 9c 00 00 00    	jg     38a77 <hostrange_intersect+0xd7>
   389db:	48 89 ee             	mov    %rbp,%rsi
   389de:	48 89 df             	mov    %rbx,%rdi
   389e1:	e8 8a fc ff ff       	callq  38670 <hostrange_prefix_cmp>
   389e6:	85 c0                	test   %eax,%eax
   389e8:	75 46                	jne    38a30 <hostrange_intersect+0x90>
   389ea:	48 8b 45 08          	mov    0x8(%rbp),%rax
   389ee:	48 39 43 10          	cmp    %rax,0x10(%rbx)
   389f2:	76 3c                	jbe    38a30 <hostrange_intersect+0x90>
   389f4:	48 89 ee             	mov    %rbp,%rsi
   389f7:	48 89 df             	mov    %rbx,%rdi
   389fa:	e8 01 fd ff ff       	callq  38700 <hostrange_width_combine>
   389ff:	85 c0                	test   %eax,%eax
   38a01:	74 2d                	je     38a30 <hostrange_intersect+0x90>
   38a03:	48 89 df             	mov    %rbx,%rdi
   38a06:	e8 55 fb ff ff       	callq  38560 <hostrange_copy>
   38a0b:	48 85 c0             	test   %rax,%rax
   38a0e:	74 22                	je     38a32 <hostrange_intersect+0x92>
   38a10:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   38a14:	48 89 50 08          	mov    %rdx,0x8(%rax)
   38a18:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   38a1c:	48 39 53 10          	cmp    %rdx,0x10(%rbx)
   38a20:	48 0f 46 53 10       	cmovbe 0x10(%rbx),%rdx
   38a25:	48 89 50 10          	mov    %rdx,0x10(%rax)
   38a29:	48 83 c4 08          	add    $0x8,%rsp
   38a2d:	5b                   	pop    %rbx
   38a2e:	5d                   	pop    %rbp
   38a2f:	c3                   	retq   
   38a30:	31 c0                	xor    %eax,%eax
   38a32:	48 83 c4 08          	add    $0x8,%rsp
   38a36:	5b                   	pop    %rbx
   38a37:	5d                   	pop    %rbp
   38a38:	c3                   	retq   
   38a39:	48 8d 0d 80 b2 00 00 	lea    0xb280(%rip),%rcx        # 43cc0 <__PRETTY_FUNCTION__.5326>
   38a40:	ba 3a 01 00 00       	mov    $0x13a,%edx
   38a45:	48 8d 35 d0 b1 00 00 	lea    0xb1d0(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38a4c:	48 8d 3d fb b1 00 00 	lea    0xb1fb(%rip),%rdi        # 43c4e <__PRETTY_FUNCTION__.5354+0x4e>
   38a53:	e8 a8 75 fd ff       	callq  10000 <__assert_fail@plt>
   38a58:	48 8d 0d 61 b2 00 00 	lea    0xb261(%rip),%rcx        # 43cc0 <__PRETTY_FUNCTION__.5326>
   38a5f:	ba 3b 01 00 00       	mov    $0x13b,%edx
   38a64:	48 8d 35 b1 b1 00 00 	lea    0xb1b1(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38a6b:	48 8d 3d e7 b1 00 00 	lea    0xb1e7(%rip),%rdi        # 43c59 <__PRETTY_FUNCTION__.5354+0x59>
   38a72:	e8 89 75 fd ff       	callq  10000 <__assert_fail@plt>
   38a77:	48 8d 0d 42 b2 00 00 	lea    0xb242(%rip),%rcx        # 43cc0 <__PRETTY_FUNCTION__.5326>
   38a7e:	ba 40 01 00 00       	mov    $0x140,%edx
   38a83:	48 8d 35 92 b1 00 00 	lea    0xb192(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38a8a:	48 8d 3d d3 b1 00 00 	lea    0xb1d3(%rip),%rdi        # 43c64 <__PRETTY_FUNCTION__.5354+0x64>
   38a91:	e8 6a 75 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038a96 <.annobin_hostrange_hn_within.start>:
   38a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   38a9d:	00 00 00 

0000000000038aa0 <hostrange_hn_within>:
   38aa0:	f3 0f 1e fa          	endbr64 
   38aa4:	41 57                	push   %r15
   38aa6:	41 56                	push   %r14
   38aa8:	41 55                	push   %r13
   38aaa:	41 54                	push   %r12
   38aac:	55                   	push   %rbp
   38aad:	48 89 f5             	mov    %rsi,%rbp
   38ab0:	53                   	push   %rbx
   38ab1:	48 89 fb             	mov    %rdi,%rbx
   38ab4:	48 83 ec 28          	sub    $0x28,%rsp
   38ab8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   38abf:	00 00 
   38ac1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   38ac6:	31 c0                	xor    %eax,%eax
   38ac8:	f6 47 1c 01          	testb  $0x1,0x1c(%rdi)
   38acc:	74 42                	je     38b10 <hostrange_hn_within+0x70>
   38ace:	48 8b 37             	mov    (%rdi),%rsi
   38ad1:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   38ad5:	e8 46 77 fd ff       	callq  10220 <strcmp@plt>
   38ada:	85 c0                	test   %eax,%eax
   38adc:	0f 95 c0             	setne  %al
   38adf:	0f b6 c0             	movzbl %al,%eax
   38ae2:	f7 d8                	neg    %eax
   38ae4:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   38ae9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   38af0:	00 00 
   38af2:	0f 85 31 01 00 00    	jne    38c29 <hostrange_hn_within+0x189>
   38af8:	48 83 c4 28          	add    $0x28,%rsp
   38afc:	5b                   	pop    %rbx
   38afd:	5d                   	pop    %rbp
   38afe:	41 5c                	pop    %r12
   38b00:	41 5d                	pop    %r13
   38b02:	41 5e                	pop    %r14
   38b04:	41 5f                	pop    %r15
   38b06:	c3                   	retq   
   38b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   38b0e:	00 00 
   38b10:	48 89 f7             	mov    %rsi,%rdi
   38b13:	e8 58 f8 ff ff       	callq  38370 <hostname_suffix_is_valid>
   38b18:	85 c0                	test   %eax,%eax
   38b1a:	74 6c                	je     38b88 <hostrange_hn_within+0xe8>
   38b1c:	4c 8b 65 08          	mov    0x8(%rbp),%r12
   38b20:	4c 89 e7             	mov    %r12,%rdi
   38b23:	e8 f8 72 fd ff       	callq  fe20 <strlen@plt>
   38b28:	4c 8b 3b             	mov    (%rbx),%r15
   38b2b:	4c 89 e6             	mov    %r12,%rsi
   38b2e:	4c 63 f0             	movslq %eax,%r14
   38b31:	49 89 c5             	mov    %rax,%r13
   38b34:	4c 89 f2             	mov    %r14,%rdx
   38b37:	4c 89 ff             	mov    %r15,%rdi
   38b3a:	e8 71 70 fd ff       	callq  fbb0 <strncmp@plt>
   38b3f:	85 c0                	test   %eax,%eax
   38b41:	75 45                	jne    38b88 <hostrange_hn_within+0xe8>
   38b43:	4c 89 ff             	mov    %r15,%rdi
   38b46:	e8 d5 72 fd ff       	callq  fe20 <strlen@plt>
   38b4b:	48 89 ef             	mov    %rbp,%rdi
   38b4e:	49 89 c4             	mov    %rax,%r12
   38b51:	e8 3a f8 ff ff       	callq  38390 <hostname_suffix_width>
   38b56:	45 39 e5             	cmp    %r12d,%r13d
   38b59:	7d 3d                	jge    38b98 <hostrange_hn_within+0xf8>
   38b5b:	83 f8 01             	cmp    $0x1,%eax
   38b5e:	7e 38                	jle    38b98 <hostrange_hn_within+0xf8>
   38b60:	e8 9b 7f fd ff       	callq  10b00 <__ctype_b_loc@plt>
   38b65:	48 8b 13             	mov    (%rbx),%rdx
   38b68:	4d 63 e4             	movslq %r12d,%r12
   38b6b:	48 8b 00             	mov    (%rax),%rax
   38b6e:	4a 0f be 4c 22 ff    	movsbq -0x1(%rdx,%r12,1),%rcx
   38b74:	f6 44 48 01 08       	testb  $0x8,0x1(%rax,%rcx,2)
   38b79:	74 0d                	je     38b88 <hostrange_hn_within+0xe8>
   38b7b:	48 8b 45 18          	mov    0x18(%rbp),%rax
   38b7f:	0f b6 00             	movzbl (%rax),%eax
   38b82:	42 38 04 32          	cmp    %al,(%rdx,%r14,1)
   38b86:	74 72                	je     38bfa <hostrange_hn_within+0x15a>
   38b88:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   38b8d:	e9 52 ff ff ff       	jmpq   38ae4 <hostrange_hn_within+0x44>
   38b92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38b98:	45 39 e5             	cmp    %r12d,%r13d
   38b9b:	75 eb                	jne    38b88 <hostrange_hn_within+0xe8>
   38b9d:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   38ba1:	48 8b 33             	mov    (%rbx),%rsi
   38ba4:	e8 77 76 fd ff       	callq  10220 <strcmp@plt>
   38ba9:	85 c0                	test   %eax,%eax
   38bab:	75 db                	jne    38b88 <hostrange_hn_within+0xe8>
   38bad:	48 8b 45 10          	mov    0x10(%rbp),%rax
   38bb1:	48 3b 43 10          	cmp    0x10(%rbx),%rax
   38bb5:	77 d1                	ja     38b88 <hostrange_hn_within+0xe8>
   38bb7:	48 3b 43 08          	cmp    0x8(%rbx),%rax
   38bbb:	72 cb                	jb     38b88 <hostrange_hn_within+0xe8>
   38bbd:	48 89 ef             	mov    %rbp,%rdi
   38bc0:	e8 cb f7 ff ff       	callq  38390 <hostname_suffix_width>
   38bc5:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   38bc9:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   38bcd:	48 8d 4c 24 14       	lea    0x14(%rsp),%rcx
   38bd2:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   38bd6:	89 44 24 14          	mov    %eax,0x14(%rsp)
   38bda:	e8 41 02 00 00       	callq  38e20 <width_equiv>
   38bdf:	89 c2                	mov    %eax,%edx
   38be1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   38be6:	85 d2                	test   %edx,%edx
   38be8:	0f 84 f6 fe ff ff    	je     38ae4 <hostrange_hn_within+0x44>
   38bee:	48 8b 45 10          	mov    0x10(%rbp),%rax
   38bf2:	2b 43 08             	sub    0x8(%rbx),%eax
   38bf5:	e9 ea fe ff ff       	jmpq   38ae4 <hostrange_hn_within+0x44>
   38bfa:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   38bfe:	44 89 ee             	mov    %r13d,%esi
   38c01:	e8 2a f5 ff ff       	callq  38130 <hostname_create_with_suffix>
   38c06:	48 89 df             	mov    %rbx,%rdi
   38c09:	48 89 c5             	mov    %rax,%rbp
   38c0c:	48 89 c6             	mov    %rax,%rsi
   38c0f:	e8 8c fe ff ff       	callq  38aa0 <hostrange_hn_within>
   38c14:	48 89 ef             	mov    %rbp,%rdi
   38c17:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   38c1b:	e8 d0 f4 ff ff       	callq  380f0 <hostname_destroy>
   38c20:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   38c24:	e9 bb fe ff ff       	jmpq   38ae4 <hostrange_hn_within+0x44>
   38c29:	e8 22 72 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000038c2e <.annobin_hostrange_hn_within.end>:
   38c2e:	66 90                	xchg   %ax,%ax

0000000000038c30 <hostrange_numstr>:
   38c30:	f3 0f 1e fa          	endbr64 
   38c34:	41 55                	push   %r13
   38c36:	41 54                	push   %r12
   38c38:	55                   	push   %rbp
   38c39:	53                   	push   %rbx
   38c3a:	48 83 ec 08          	sub    $0x8,%rsp
   38c3e:	48 85 ff             	test   %rdi,%rdi
   38c41:	0f 84 bd 00 00 00    	je     38d04 <hostrange_numstr+0xd4>
   38c47:	49 89 d4             	mov    %rdx,%r12
   38c4a:	48 85 d2             	test   %rdx,%rdx
   38c4d:	0f 84 b1 00 00 00    	je     38d04 <hostrange_numstr+0xd4>
   38c53:	48 89 f5             	mov    %rsi,%rbp
   38c56:	48 85 f6             	test   %rsi,%rsi
   38c59:	74 09                	je     38c64 <hostrange_numstr+0x34>
   38c5b:	48 89 fb             	mov    %rdi,%rbx
   38c5e:	f6 47 1c 01          	testb  $0x1,0x1c(%rdi)
   38c62:	74 14                	je     38c78 <hostrange_numstr+0x48>
   38c64:	31 c0                	xor    %eax,%eax
   38c66:	48 83 c4 08          	add    $0x8,%rsp
   38c6a:	5b                   	pop    %rbx
   38c6b:	5d                   	pop    %rbp
   38c6c:	41 5c                	pop    %r12
   38c6e:	41 5d                	pop    %r13
   38c70:	c3                   	retq   
   38c71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   38c78:	48 83 ec 08          	sub    $0x8,%rsp
   38c7c:	ff 77 08             	pushq  0x8(%rdi)
   38c7f:	44 8b 4f 18          	mov    0x18(%rdi),%r9d
   38c83:	ba 01 00 00 00       	mov    $0x1,%edx
   38c88:	4c 89 e7             	mov    %r12,%rdi
   38c8b:	4c 8d 05 c2 ae 00 00 	lea    0xaec2(%rip),%r8        # 43b54 <__PRETTY_FUNCTION__.6731+0x254>
   38c92:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   38c99:	31 c0                	xor    %eax,%eax
   38c9b:	e8 00 6e fd ff       	callq  faa0 <__snprintf_chk@plt>
   38ca0:	5e                   	pop    %rsi
   38ca1:	5f                   	pop    %rdi
   38ca2:	41 89 c5             	mov    %eax,%r13d
   38ca5:	48 98                	cltq   
   38ca7:	45 85 ed             	test   %r13d,%r13d
   38caa:	78 ba                	js     38c66 <hostrange_numstr+0x36>
   38cac:	48 39 e8             	cmp    %rbp,%rax
   38caf:	73 b5                	jae    38c66 <hostrange_numstr+0x36>
   38cb1:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   38cb5:	48 39 53 08          	cmp    %rdx,0x8(%rbx)
   38cb9:	73 ab                	jae    38c66 <hostrange_numstr+0x36>
   38cbb:	48 83 ec 08          	sub    $0x8,%rsp
   38cbf:	48 89 ee             	mov    %rbp,%rsi
   38cc2:	44 8b 4b 18          	mov    0x18(%rbx),%r9d
   38cc6:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
   38cca:	52                   	push   %rdx
   38ccb:	48 29 c6             	sub    %rax,%rsi
   38cce:	31 c0                	xor    %eax,%eax
   38cd0:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   38cd7:	ba 01 00 00 00       	mov    $0x1,%edx
   38cdc:	4c 8d 05 70 ae 00 00 	lea    0xae70(%rip),%r8        # 43b53 <__PRETTY_FUNCTION__.6731+0x253>
   38ce3:	e8 b8 6d fd ff       	callq  faa0 <__snprintf_chk@plt>
   38ce8:	89 c2                	mov    %eax,%edx
   38cea:	58                   	pop    %rax
   38ceb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   38cf2:	59                   	pop    %rcx
   38cf3:	41 01 d5             	add    %edx,%r13d
   38cf6:	85 d2                	test   %edx,%edx
   38cf8:	4d 63 ed             	movslq %r13d,%r13
   38cfb:	49 0f 49 c5          	cmovns %r13,%rax
   38cff:	e9 62 ff ff ff       	jmpq   38c66 <hostrange_numstr+0x36>
   38d04:	48 8d 0d 95 af 00 00 	lea    0xaf95(%rip),%rcx        # 43ca0 <__PRETTY_FUNCTION__.5343>
   38d0b:	ba b5 01 00 00       	mov    $0x1b5,%edx
   38d10:	48 8d 35 05 af 00 00 	lea    0xaf05(%rip),%rsi        # 43c1c <__PRETTY_FUNCTION__.5354+0x1c>
   38d17:	48 8d 3d 62 af 00 00 	lea    0xaf62(%rip),%rdi        # 43c80 <__PRETTY_FUNCTION__.5354+0x80>
   38d1e:	e8 dd 72 fd ff       	callq  10000 <__assert_fail@plt>

0000000000038d23 <.annobin_hostrange_host_tostring.start>:
   38d23:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   38d2a:	00 00 00 00 
   38d2e:	66 90                	xchg   %ax,%ax

0000000000038d30 <hostrange_host_tostring>:
   38d30:	f3 0f 1e fa          	endbr64 
   38d34:	41 54                	push   %r12
   38d36:	55                   	push   %rbp
   38d37:	53                   	push   %rbx
   38d38:	48 83 ec 60          	sub    $0x60,%rsp
   38d3c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   38d43:	00 00 
   38d45:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   38d4a:	31 c0                	xor    %eax,%eax
   38d4c:	48 85 ff             	test   %rdi,%rdi
   38d4f:	0f 84 9b 00 00 00    	je     38df0 <hostrange_host_tostring+0xc0>
   38d55:	48 63 ee             	movslq %esi,%rbp
   38d58:	85 ed                	test   %ebp,%ebp
   38d5a:	0f 88 90 00 00 00    	js     38df0 <hostrange_host_tostring+0xc0>
   38d60:	49 89 e4             	mov    %rsp,%r12
   38d63:	48 8b 0f             	mov    (%rdi),%rcx
   38d66:	48 89 fb             	mov    %rdi,%rbx
   38d69:	31 c0                	xor    %eax,%eax
   38d6b:	48 8d 15 9a a4 00 00 	lea    0xa49a(%rip),%rdx        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   38d72:	be 50 00 00 00       	mov    $0x50,%esi
   38d77:	4c 89 e7             	mov    %r12,%rdi
   38d7a:	e8 a1 71 fd ff       	callq  ff20 <snprintf@plt>
   38d7f:	83 f8 4f             	cmp    $0x4f,%eax
   38d82:	77 7c                	ja     38e00 <hostrange_host_tostring+0xd0>
   38d84:	f6 43 1c 01          	testb  $0x1,0x1c(%rbx)
   38d88:	75 3f                	jne    38dc9 <hostrange_host_tostring+0x99>
   38d8a:	48 03 6b 08          	add    0x8(%rbx),%rbp
   38d8e:	48 39 6b 10          	cmp    %rbp,0x10(%rbx)
   38d92:	72 74                	jb     38e08 <hostrange_host_tostring+0xd8>
   38d94:	48 83 ec 08          	sub    $0x8,%rsp
   38d98:	be 4f 00 00 00       	mov    $0x4f,%esi
   38d9d:	44 8b 4b 18          	mov    0x18(%rbx),%r9d
   38da1:	ba 01 00 00 00       	mov    $0x1,%edx
   38da6:	55                   	push   %rbp
   38da7:	29 c6                	sub    %eax,%esi
   38da9:	48 98                	cltq   
   38dab:	4c 8d 05 a2 ad 00 00 	lea    0xada2(%rip),%r8        # 43b54 <__PRETTY_FUNCTION__.6731+0x254>
   38db2:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
   38db6:	48 63 f6             	movslq %esi,%rsi
   38db9:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   38dc0:	31 c0                	xor    %eax,%eax
   38dc2:	e8 d9 6c fd ff       	callq  faa0 <__snprintf_chk@plt>
   38dc7:	58                   	pop    %rax
   38dc8:	5a                   	pop    %rdx
   38dc9:	4c 89 e7             	mov    %r12,%rdi
   38dcc:	e8 cf 7b fd ff       	callq  109a0 <strdup@plt>
   38dd1:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   38dd6:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   38ddd:	00 00 
   38ddf:	75 36                	jne    38e17 <hostrange_host_tostring+0xe7>
   38de1:	48 83 c4 60          	add    $0x60,%rsp
   38de5:	5b                   	pop    %rbx
   38de6:	5d                   	pop    %rbp
   38de7:	41 5c                	pop    %r12
   38de9:	c3                   	retq   
   38dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38df0:	e8 1b 6d fd ff       	callq  fb10 <__errno_location@plt>
   38df5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   38dfb:	31 c0                	xor    %eax,%eax
   38dfd:	eb d2                	jmp    38dd1 <hostrange_host_tostring+0xa1>
   38dff:	90                   	nop
   38e00:	31 c0                	xor    %eax,%eax
   38e02:	eb cd                	jmp    38dd1 <hostrange_host_tostring+0xa1>
   38e04:	0f 1f 40 00          	nopl   0x0(%rax)
   38e08:	e8 03 6d fd ff       	callq  fb10 <__errno_location@plt>
   38e0d:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   38e13:	31 c0                	xor    %eax,%eax
   38e15:	eb ba                	jmp    38dd1 <hostrange_host_tostring+0xa1>
   38e17:	e8 34 70 fd ff       	callq  fe50 <__stack_chk_fail@plt>

0000000000038e1c <.annobin_hostrange.c_end>:
   38e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000038e20 <width_equiv>:
   38e20:	f3 0f 1e fa          	endbr64 
   38e24:	48 39 ce             	cmp    %rcx,%rsi
   38e27:	0f 84 9b 01 00 00    	je     38fc8 <width_equiv+0x1a8>
   38e2d:	48 89 f8             	mov    %rdi,%rax
   38e30:	44 8b 16             	mov    (%rsi),%r10d
   38e33:	44 8b 09             	mov    (%rcx),%r9d
   38e36:	41 54                	push   %r12
   38e38:	49 bb cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r11
   38e3f:	cc cc cc 
   38e42:	55                   	push   %rbp
   38e43:	53                   	push   %rbx
   38e44:	48 89 d3             	mov    %rdx,%rbx
   38e47:	49 f7 e3             	mul    %r11
   38e4a:	48 c1 ea 03          	shr    $0x3,%rdx
   38e4e:	49 89 d0             	mov    %rdx,%r8
   38e51:	48 83 ff 09          	cmp    $0x9,%rdi
   38e55:	0f 86 75 01 00 00    	jbe    38fd0 <width_equiv+0x1b0>
   38e5b:	48 89 d7             	mov    %rdx,%rdi
   38e5e:	bd 01 00 00 00       	mov    $0x1,%ebp
   38e63:	eb 06                	jmp    38e6b <width_equiv+0x4b>
   38e65:	0f 1f 00             	nopl   (%rax)
   38e68:	48 89 d7             	mov    %rdx,%rdi
   38e6b:	48 89 f8             	mov    %rdi,%rax
   38e6e:	83 c5 01             	add    $0x1,%ebp
   38e71:	49 f7 e3             	mul    %r11
   38e74:	48 c1 ea 03          	shr    $0x3,%rdx
   38e78:	48 83 ff 09          	cmp    $0x9,%rdi
   38e7c:	77 ea                	ja     38e68 <width_equiv+0x48>
   38e7e:	45 89 d3             	mov    %r10d,%r11d
   38e81:	b8 00 00 00 00       	mov    $0x0,%eax
   38e86:	bf 01 00 00 00       	mov    $0x1,%edi
   38e8b:	41 29 eb             	sub    %ebp,%r11d
   38e8e:	41 39 ea             	cmp    %ebp,%r10d
   38e91:	48 bd cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rbp
   38e98:	cc cc cc 
   38e9b:	44 0f 4e d8          	cmovle %eax,%r11d
   38e9f:	eb 0a                	jmp    38eab <width_equiv+0x8b>
   38ea1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38ea8:	49 89 d0             	mov    %rdx,%r8
   38eab:	4c 89 c0             	mov    %r8,%rax
   38eae:	83 c7 01             	add    $0x1,%edi
   38eb1:	48 f7 e5             	mul    %rbp
   38eb4:	48 c1 ea 03          	shr    $0x3,%rdx
   38eb8:	49 83 f8 09          	cmp    $0x9,%r8
   38ebc:	77 ea                	ja     38ea8 <width_equiv+0x88>
   38ebe:	44 89 cd             	mov    %r9d,%ebp
   38ec1:	b8 00 00 00 00       	mov    $0x0,%eax
   38ec6:	49 bc cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r12
   38ecd:	cc cc cc 
   38ed0:	29 fd                	sub    %edi,%ebp
   38ed2:	44 39 cf             	cmp    %r9d,%edi
   38ed5:	0f 4d e8             	cmovge %eax,%ebp
   38ed8:	48 89 d8             	mov    %rbx,%rax
   38edb:	49 f7 e4             	mul    %r12
   38ede:	48 89 d7             	mov    %rdx,%rdi
   38ee1:	48 c1 ef 03          	shr    $0x3,%rdi
   38ee5:	48 83 fb 09          	cmp    $0x9,%rbx
   38ee9:	0f 86 a1 00 00 00    	jbe    38f90 <width_equiv+0x170>
   38eef:	49 89 f8             	mov    %rdi,%r8
   38ef2:	bb 01 00 00 00       	mov    $0x1,%ebx
   38ef7:	eb 0a                	jmp    38f03 <width_equiv+0xe3>
   38ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38f00:	49 89 d0             	mov    %rdx,%r8
   38f03:	4c 89 c0             	mov    %r8,%rax
   38f06:	83 c3 01             	add    $0x1,%ebx
   38f09:	49 f7 e4             	mul    %r12
   38f0c:	48 c1 ea 03          	shr    $0x3,%rdx
   38f10:	49 83 f8 09          	cmp    $0x9,%r8
   38f14:	77 ea                	ja     38f00 <width_equiv+0xe0>
   38f16:	45 89 cc             	mov    %r9d,%r12d
   38f19:	b8 00 00 00 00       	mov    $0x0,%eax
   38f1e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   38f24:	41 29 dc             	sub    %ebx,%r12d
   38f27:	44 39 cb             	cmp    %r9d,%ebx
   38f2a:	48 bb cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rbx
   38f31:	cc cc cc 
   38f34:	44 0f 4d e0          	cmovge %eax,%r12d
   38f38:	eb 09                	jmp    38f43 <width_equiv+0x123>
   38f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38f40:	48 89 d7             	mov    %rdx,%rdi
   38f43:	48 89 f8             	mov    %rdi,%rax
   38f46:	41 83 c0 01          	add    $0x1,%r8d
   38f4a:	48 f7 e3             	mul    %rbx
   38f4d:	48 c1 ea 03          	shr    $0x3,%rdx
   38f51:	48 83 ff 09          	cmp    $0x9,%rdi
   38f55:	77 e9                	ja     38f40 <width_equiv+0x120>
   38f57:	31 d2                	xor    %edx,%edx
   38f59:	45 39 c2             	cmp    %r8d,%r10d
   38f5c:	7f 4a                	jg     38fa8 <width_equiv+0x188>
   38f5e:	44 39 dd             	cmp    %r11d,%ebp
   38f61:	74 0d                	je     38f70 <width_equiv+0x150>
   38f63:	31 c0                	xor    %eax,%eax
   38f65:	44 39 e2             	cmp    %r12d,%edx
   38f68:	74 06                	je     38f70 <width_equiv+0x150>
   38f6a:	5b                   	pop    %rbx
   38f6b:	5d                   	pop    %rbp
   38f6c:	41 5c                	pop    %r12
   38f6e:	c3                   	retq   
   38f6f:	90                   	nop
   38f70:	44 39 dd             	cmp    %r11d,%ebp
   38f73:	74 40                	je     38fb5 <width_equiv+0x195>
   38f75:	31 c0                	xor    %eax,%eax
   38f77:	44 39 e2             	cmp    %r12d,%edx
   38f7a:	75 ee                	jne    38f6a <width_equiv+0x14a>
   38f7c:	5b                   	pop    %rbx
   38f7d:	b8 01 00 00 00       	mov    $0x1,%eax
   38f82:	5d                   	pop    %rbp
   38f83:	44 89 11             	mov    %r10d,(%rcx)
   38f86:	41 5c                	pop    %r12
   38f88:	c3                   	retq   
   38f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   38f90:	41 83 f9 01          	cmp    $0x1,%r9d
   38f94:	7f 4e                	jg     38fe4 <width_equiv+0x1c4>
   38f96:	41 83 fa 01          	cmp    $0x1,%r10d
   38f9a:	7e 14                	jle    38fb0 <width_equiv+0x190>
   38f9c:	45 31 e4             	xor    %r12d,%r12d
   38f9f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   38fa5:	0f 1f 00             	nopl   (%rax)
   38fa8:	44 89 d2             	mov    %r10d,%edx
   38fab:	44 29 c2             	sub    %r8d,%edx
   38fae:	eb ae                	jmp    38f5e <width_equiv+0x13e>
   38fb0:	44 39 dd             	cmp    %r11d,%ebp
   38fb3:	75 c7                	jne    38f7c <width_equiv+0x15c>
   38fb5:	5b                   	pop    %rbx
   38fb6:	b8 01 00 00 00       	mov    $0x1,%eax
   38fbb:	5d                   	pop    %rbp
   38fbc:	44 89 0e             	mov    %r9d,(%rsi)
   38fbf:	41 5c                	pop    %r12
   38fc1:	c3                   	retq   
   38fc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   38fc8:	b8 01 00 00 00       	mov    $0x1,%eax
   38fcd:	c3                   	retq   
   38fce:	66 90                	xchg   %ax,%ax
   38fd0:	41 83 fa 01          	cmp    $0x1,%r10d
   38fd4:	7e 1d                	jle    38ff3 <width_equiv+0x1d3>
   38fd6:	45 8d 5a ff          	lea    -0x1(%r10),%r11d
   38fda:	bf 01 00 00 00       	mov    $0x1,%edi
   38fdf:	e9 da fe ff ff       	jmpq   38ebe <width_equiv+0x9e>
   38fe4:	45 8d 61 ff          	lea    -0x1(%r9),%r12d
   38fe8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   38fee:	e9 64 ff ff ff       	jmpq   38f57 <width_equiv+0x137>
   38ff3:	45 31 db             	xor    %r11d,%r11d
   38ff6:	bf 01 00 00 00       	mov    $0x1,%edi
   38ffb:	e9 be fe ff ff       	jmpq   38ebe <width_equiv+0x9e>

0000000000039000 <fzstr_free>:
   39000:	f3 0f 1e fa          	endbr64 
   39004:	53                   	push   %rbx
   39005:	48 85 ff             	test   %rdi,%rdi
   39008:	74 14                	je     3901e <fzstr_free+0x1e>
   3900a:	48 89 fb             	mov    %rdi,%rbx
   3900d:	48 8b 3f             	mov    (%rdi),%rdi
   39010:	e8 9b 6a fd ff       	callq  fab0 <free@plt>
   39015:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   3901c:	5b                   	pop    %rbx
   3901d:	c3                   	retq   
   3901e:	48 8d 0d 3b ad 00 00 	lea    0xad3b(%rip),%rcx        # 43d60 <__PRETTY_FUNCTION__.3724>
   39025:	ba 16 00 00 00       	mov    $0x16,%edx
   3902a:	48 8d 35 15 ad 00 00 	lea    0xad15(%rip),%rsi        # 43d46 <__PRETTY_FUNCTION__.5290+0x16>
   39031:	48 8d 3d 1e ad 00 00 	lea    0xad1e(%rip),%rdi        # 43d56 <__PRETTY_FUNCTION__.5290+0x26>
   39038:	e8 c3 6f fd ff       	callq  10000 <__assert_fail@plt>

000000000003903d <.annobin_czmq_internal.c_end>:
   3903d:	0f 1f 00             	nopl   (%rax)

0000000000039040 <s_item_lookup>:
   39040:	55                   	push   %rbp
   39041:	53                   	push   %rbx
   39042:	48 89 f3             	mov    %rsi,%rbx
   39045:	48 83 ec 08          	sub    $0x8,%rsp
   39049:	0f be 16             	movsbl (%rsi),%edx
   3904c:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   39050:	84 d2                	test   %dl,%dl
   39052:	74 6c                	je     390c0 <s_item_lookup+0x80>
   39054:	48 89 f1             	mov    %rsi,%rcx
   39057:	31 c0                	xor    %eax,%eax
   39059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   39060:	89 c6                	mov    %eax,%esi
   39062:	48 83 c1 01          	add    $0x1,%rcx
   39066:	c1 e6 05             	shl    $0x5,%esi
   39069:	01 f0                	add    %esi,%eax
   3906b:	31 d0                	xor    %edx,%eax
   3906d:	0f be 11             	movsbl (%rcx),%edx
   39070:	84 d2                	test   %dl,%dl
   39072:	75 ec                	jne    39060 <s_item_lookup+0x20>
   39074:	31 d2                	xor    %edx,%edx
   39076:	49 f7 f0             	div    %r8
   39079:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
   39080:	00 
   39081:	48 8b 47 10          	mov    0x10(%rdi),%rax
   39085:	48 89 57 18          	mov    %rdx,0x18(%rdi)
   39089:	48 8b 2c 08          	mov    (%rax,%rcx,1),%rbp
   3908d:	48 85 ed             	test   %rbp,%rbp
   39090:	75 0f                	jne    390a1 <s_item_lookup+0x61>
   39092:	eb 1d                	jmp    390b1 <s_item_lookup+0x71>
   39094:	0f 1f 40 00          	nopl   0x0(%rax)
   39098:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
   3909c:	48 85 ed             	test   %rbp,%rbp
   3909f:	74 10                	je     390b1 <s_item_lookup+0x71>
   390a1:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   390a5:	48 89 de             	mov    %rbx,%rsi
   390a8:	e8 73 71 fd ff       	callq  10220 <strcmp@plt>
   390ad:	85 c0                	test   %eax,%eax
   390af:	75 e7                	jne    39098 <s_item_lookup+0x58>
   390b1:	48 83 c4 08          	add    $0x8,%rsp
   390b5:	48 89 e8             	mov    %rbp,%rax
   390b8:	5b                   	pop    %rbx
   390b9:	5d                   	pop    %rbp
   390ba:	c3                   	retq   
   390bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   390c0:	31 d2                	xor    %edx,%edx
   390c2:	31 c9                	xor    %ecx,%ecx
   390c4:	eb bb                	jmp    39081 <s_item_lookup+0x41>

00000000000390c6 <.annobin_s_item_destroy.start>:
   390c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   390cd:	00 00 00 

00000000000390d0 <s_item_destroy>:
   390d0:	55                   	push   %rbp
   390d1:	53                   	push   %rbx
   390d2:	48 83 ec 08          	sub    $0x8,%rsp
   390d6:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   390da:	48 8b 47 10          	mov    0x10(%rdi),%rax
   390de:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
   390e2:	48 8b 08             	mov    (%rax),%rcx
   390e5:	48 85 c9             	test   %rcx,%rcx
   390e8:	74 27                	je     39111 <s_item_destroy+0x41>
   390ea:	48 89 fd             	mov    %rdi,%rbp
   390ed:	48 89 f3             	mov    %rsi,%rbx
   390f0:	48 39 ce             	cmp    %rcx,%rsi
   390f3:	75 13                	jne    39108 <s_item_destroy+0x38>
   390f5:	eb 3d                	jmp    39134 <s_item_destroy+0x64>
   390f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   390fe:	00 00 
   39100:	48 39 c3             	cmp    %rax,%rbx
   39103:	74 2b                	je     39130 <s_item_destroy+0x60>
   39105:	48 89 c1             	mov    %rax,%rcx
   39108:	48 8b 41 08          	mov    0x8(%rcx),%rax
   3910c:	48 85 c0             	test   %rax,%rax
   3910f:	75 ef                	jne    39100 <s_item_destroy+0x30>
   39111:	48 8d 0d 98 ad 00 00 	lea    0xad98(%rip),%rcx        # 43eb0 <__PRETTY_FUNCTION__.3782>
   39118:	ba 83 00 00 00       	mov    $0x83,%edx
   3911d:	48 8d 35 47 ac 00 00 	lea    0xac47(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39124:	48 8d 3d 48 ac 00 00 	lea    0xac48(%rip),%rdi        # 43d73 <__PRETTY_FUNCTION__.3724+0x13>
   3912b:	e8 d0 6e fd ff       	callq  10000 <__assert_fail@plt>
   39130:	48 8d 41 08          	lea    0x8(%rcx),%rax
   39134:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   39138:	48 89 08             	mov    %rcx,(%rax)
   3913b:	48 83 6d 00 01       	subq   $0x1,0x0(%rbp)
   39140:	84 d2                	test   %dl,%dl
   39142:	74 3c                	je     39180 <s_item_destroy+0xb0>
   39144:	48 8b 43 20          	mov    0x20(%rbx),%rax
   39148:	48 85 c0             	test   %rax,%rax
   3914b:	74 43                	je     39190 <s_item_destroy+0xc0>
   3914d:	48 8b 3b             	mov    (%rbx),%rdi
   39150:	ff d0                	callq  *%rax
   39152:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   39156:	e8 55 69 fd ff       	callq  fab0 <free@plt>
   3915b:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
   39162:	00 
   39163:	48 89 df             	mov    %rbx,%rdi
   39166:	48 c7 45 38 00 00 00 	movq   $0x0,0x38(%rbp)
   3916d:	00 
   3916e:	48 83 c4 08          	add    $0x8,%rsp
   39172:	5b                   	pop    %rbx
   39173:	5d                   	pop    %rbp
   39174:	e9 37 69 fd ff       	jmpq   fab0 <free@plt>
   39179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   39180:	48 83 c4 08          	add    $0x8,%rsp
   39184:	5b                   	pop    %rbx
   39185:	5d                   	pop    %rbp
   39186:	c3                   	retq   
   39187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3918e:	00 00 
   39190:	80 7d 20 00          	cmpb   $0x0,0x20(%rbp)
   39194:	74 bc                	je     39152 <s_item_destroy+0x82>
   39196:	48 8b 3b             	mov    (%rbx),%rdi
   39199:	e8 12 69 fd ff       	callq  fab0 <free@plt>
   3919e:	eb b2                	jmp    39152 <s_item_destroy+0x82>

00000000000391a0 <fzhash_new>:
   391a0:	f3 0f 1e fa          	endbr64 
   391a4:	53                   	push   %rbx
   391a5:	be 58 00 00 00       	mov    $0x58,%esi
   391aa:	bf 01 00 00 00       	mov    $0x1,%edi
   391af:	e8 5c 70 fd ff       	callq  10210 <calloc@plt>
   391b4:	48 85 c0             	test   %rax,%rax
   391b7:	74 28                	je     391e1 <fzhash_new+0x41>
   391b9:	48 c7 40 08 ff 00 00 	movq   $0xff,0x8(%rax)
   391c0:	00 
   391c1:	be f8 07 00 00       	mov    $0x7f8,%esi
   391c6:	bf 01 00 00 00       	mov    $0x1,%edi
   391cb:	48 89 c3             	mov    %rax,%rbx
   391ce:	e8 3d 70 fd ff       	callq  10210 <calloc@plt>
   391d3:	48 85 c0             	test   %rax,%rax
   391d6:	74 59                	je     39231 <fzhash_new+0x91>
   391d8:	48 89 43 10          	mov    %rax,0x10(%rbx)
   391dc:	48 89 d8             	mov    %rbx,%rax
   391df:	5b                   	pop    %rbx
   391e0:	c3                   	retq   
   391e1:	48 8b 1d 00 9e 21 00 	mov    0x219e00(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
  return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
   391e8:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
   391ee:	31 c0                	xor    %eax,%eax
   391f0:	48 8d 0d 74 ab 00 00 	lea    0xab74(%rip),%rcx        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   391f7:	48 8d 15 7e ab 00 00 	lea    0xab7e(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   391fe:	be 01 00 00 00       	mov    $0x1,%esi
   39203:	48 8b 3b             	mov    (%rbx),%rdi
   39206:	e8 55 77 fd ff       	callq  10960 <__fprintf_chk@plt>
   3920b:	48 8b 0b             	mov    (%rbx),%rcx
   3920e:	ba 25 00 00 00       	mov    $0x25,%edx
   39213:	be 01 00 00 00       	mov    $0x1,%esi
   39218:	48 8d 3d 91 ab 00 00 	lea    0xab91(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3921f:	e8 2c 77 fd ff       	callq  10950 <fwrite@plt>
   39224:	48 8b 3b             	mov    (%rbx),%rdi
   39227:	e8 14 72 fd ff       	callq  10440 <fflush@plt>
   3922c:	e8 bf 68 fd ff       	callq  faf0 <abort@plt>
   39231:	48 8b 1d b0 9d 21 00 	mov    0x219db0(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   39238:	41 b8 4f 00 00 00    	mov    $0x4f,%r8d
   3923e:	48 8d 0d 26 ab 00 00 	lea    0xab26(%rip),%rcx        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39245:	48 8d 15 30 ab 00 00 	lea    0xab30(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3924c:	be 01 00 00 00       	mov    $0x1,%esi
   39251:	48 8b 3b             	mov    (%rbx),%rdi
   39254:	eb b0                	jmp    39206 <fzhash_new+0x66>

0000000000039256 <.annobin_fzhash_destroy.start>:
   39256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3925d:	00 00 00 

0000000000039260 <fzhash_destroy>:
   39260:	f3 0f 1e fa          	endbr64 
   39264:	41 55                	push   %r13
   39266:	41 54                	push   %r12
   39268:	55                   	push   %rbp
   39269:	53                   	push   %rbx
   3926a:	48 83 ec 08          	sub    $0x8,%rsp
   3926e:	48 85 ff             	test   %rdi,%rdi
   39271:	0f 84 a3 00 00 00    	je     3931a <fzhash_destroy+0xba>
   39277:	48 8b 2f             	mov    (%rdi),%rbp
   3927a:	49 89 fd             	mov    %rdi,%r13
   3927d:	48 85 ed             	test   %rbp,%rbp
   39280:	0f 84 89 00 00 00    	je     3930f <fzhash_destroy+0xaf>
   39286:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
   3928b:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   3928f:	74 4a                	je     392db <fzhash_destroy+0x7b>
   39291:	45 31 e4             	xor    %r12d,%r12d
   39294:	31 c0                	xor    %eax,%eax
   39296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3929d:	00 00 00 
   392a0:	48 8b 34 c7          	mov    (%rdi,%rax,8),%rsi
   392a4:	48 85 f6             	test   %rsi,%rsi
   392a7:	74 24                	je     392cd <fzhash_destroy+0x6d>
   392a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   392b0:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   392b4:	ba 01 00 00 00       	mov    $0x1,%edx
   392b9:	48 89 ef             	mov    %rbp,%rdi
   392bc:	e8 0f fe ff ff       	callq  390d0 <s_item_destroy>
   392c1:	48 89 de             	mov    %rbx,%rsi
   392c4:	48 85 db             	test   %rbx,%rbx
   392c7:	75 e7                	jne    392b0 <fzhash_destroy+0x50>
   392c9:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   392cd:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   392d2:	49 89 c4             	mov    %rax,%r12
   392d5:	48 3b 45 08          	cmp    0x8(%rbp),%rax
   392d9:	72 c5                	jb     392a0 <fzhash_destroy+0x40>
   392db:	48 85 ff             	test   %rdi,%rdi
   392de:	74 0d                	je     392ed <fzhash_destroy+0x8d>
   392e0:	e8 cb 67 fd ff       	callq  fab0 <free@plt>
   392e5:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   392ec:	00 
   392ed:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
   392f1:	e8 da 20 00 00       	callq  3b3d0 <fzlist_destroy>
   392f6:	48 8b 7d 50          	mov    0x50(%rbp),%rdi
   392fa:	e8 b1 67 fd ff       	callq  fab0 <free@plt>
   392ff:	48 89 ef             	mov    %rbp,%rdi
   39302:	e8 a9 67 fd ff       	callq  fab0 <free@plt>
   39307:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   3930e:	00 
   3930f:	48 83 c4 08          	add    $0x8,%rsp
   39313:	5b                   	pop    %rbx
   39314:	5d                   	pop    %rbp
   39315:	41 5c                	pop    %r12
   39317:	41 5d                	pop    %r13
   39319:	c3                   	retq   
   3931a:	48 8d 0d 9f ab 00 00 	lea    0xab9f(%rip),%rcx        # 43ec0 <__PRETTY_FUNCTION__.3761>
   39321:	ba 5b 00 00 00       	mov    $0x5b,%edx
   39326:	48 8d 35 3e aa 00 00 	lea    0xaa3e(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   3932d:	48 8d 3d 5e aa 00 00 	lea    0xaa5e(%rip),%rdi        # 43d92 <__PRETTY_FUNCTION__.3724+0x32>
   39334:	e8 c7 6c fd ff       	callq  10000 <__assert_fail@plt>

0000000000039339 <.annobin_fzhash_destroy.end>:
   39339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000039340 <fzhash_insert>:
   39340:	f3 0f 1e fa          	endbr64 
   39344:	41 57                	push   %r15
   39346:	41 56                	push   %r14
   39348:	41 55                	push   %r13
   3934a:	41 54                	push   %r12
   3934c:	55                   	push   %rbp
   3934d:	53                   	push   %rbx
   3934e:	48 83 ec 08          	sub    $0x8,%rsp
   39352:	48 85 ff             	test   %rdi,%rdi
   39355:	0f 84 e4 01 00 00    	je     3953f <fzhash_insert+0x1ff>
   3935b:	48 89 f3             	mov    %rsi,%rbx
   3935e:	48 85 f6             	test   %rsi,%rsi
   39361:	0f 84 b9 01 00 00    	je     39520 <fzhash_insert+0x1e0>
   39367:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
   3936b:	48 89 d5             	mov    %rdx,%rbp
   3936e:	49 89 fe             	mov    %rdi,%r14
   39371:	49 bc c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%r12
   39378:	c2 f5 28 
   3937b:	4b 8d 0c bf          	lea    (%r15,%r15,4),%rcx
   3937f:	48 89 ca             	mov    %rcx,%rdx
   39382:	48 c1 e2 04          	shl    $0x4,%rdx
   39386:	48 29 ca             	sub    %rcx,%rdx
   39389:	48 c1 ea 02          	shr    $0x2,%rdx
   3938d:	48 89 d0             	mov    %rdx,%rax
   39390:	49 f7 e4             	mul    %r12
   39393:	48 c1 ea 02          	shr    $0x2,%rdx
   39397:	48 39 17             	cmp    %rdx,(%rdi)
   3939a:	0f 82 c1 00 00 00    	jb     39461 <fzhash_insert+0x121>
   393a0:	48 8d 14 89          	lea    (%rcx,%rcx,4),%rdx
   393a4:	bf 01 00 00 00       	mov    $0x1,%edi
   393a9:	48 c1 e2 03          	shl    $0x3,%rdx
   393ad:	48 c1 ea 02          	shr    $0x2,%rdx
   393b1:	48 89 d0             	mov    %rdx,%rax
   393b4:	49 f7 e4             	mul    %r12
   393b7:	48 c1 ea 02          	shr    $0x2,%rdx
   393bb:	48 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%rsi
   393c2:	00 
   393c3:	49 89 d4             	mov    %rdx,%r12
   393c6:	e8 45 6e fd ff       	callq  10210 <calloc@plt>
   393cb:	49 89 c5             	mov    %rax,%r13
   393ce:	48 85 c0             	test   %rax,%rax
   393d1:	0f 84 87 01 00 00    	je     3955e <fzhash_insert+0x21e>
   393d7:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   393db:	45 31 c0             	xor    %r8d,%r8d
   393de:	31 c0                	xor    %eax,%eax
   393e0:	4d 85 ff             	test   %r15,%r15
   393e3:	74 6f                	je     39454 <fzhash_insert+0x114>
   393e5:	0f 1f 00             	nopl   (%rax)
   393e8:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
   393ec:	48 85 c9             	test   %rcx,%rcx
   393ef:	74 57                	je     39448 <fzhash_insert+0x108>
   393f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   393f8:	4c 8b 49 18          	mov    0x18(%rcx),%r9
   393fc:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   39400:	41 0f be 11          	movsbl (%r9),%edx
   39404:	84 d2                	test   %dl,%dl
   39406:	0f 84 84 00 00 00    	je     39490 <fzhash_insert+0x150>
   3940c:	31 c0                	xor    %eax,%eax
   3940e:	66 90                	xchg   %ax,%ax
   39410:	41 89 c2             	mov    %eax,%r10d
   39413:	49 83 c1 01          	add    $0x1,%r9
   39417:	41 c1 e2 05          	shl    $0x5,%r10d
   3941b:	44 01 d0             	add    %r10d,%eax
   3941e:	31 d0                	xor    %edx,%eax
   39420:	41 0f be 11          	movsbl (%r9),%edx
   39424:	84 d2                	test   %dl,%dl
   39426:	75 e8                	jne    39410 <fzhash_insert+0xd0>
   39428:	31 d2                	xor    %edx,%edx
   3942a:	49 f7 f4             	div    %r12
   3942d:	49 8d 44 d5 00       	lea    0x0(%r13,%rdx,8),%rax
   39432:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   39436:	48 8b 10             	mov    (%rax),%rdx
   39439:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   3943d:	48 89 08             	mov    %rcx,(%rax)
   39440:	48 89 f1             	mov    %rsi,%rcx
   39443:	48 85 f6             	test   %rsi,%rsi
   39446:	75 b0                	jne    393f8 <fzhash_insert+0xb8>
   39448:	41 8d 40 01          	lea    0x1(%r8),%eax
   3944c:	49 89 c0             	mov    %rax,%r8
   3944f:	49 39 c7             	cmp    %rax,%r15
   39452:	75 94                	jne    393e8 <fzhash_insert+0xa8>
   39454:	e8 57 66 fd ff       	callq  fab0 <free@plt>
   39459:	4d 89 6e 10          	mov    %r13,0x10(%r14)
   3945d:	4d 89 66 08          	mov    %r12,0x8(%r14)
   39461:	48 89 de             	mov    %rbx,%rsi
   39464:	4c 89 f7             	mov    %r14,%rdi
   39467:	e8 d4 fb ff ff       	callq  39040 <s_item_lookup>
   3946c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   39471:	48 85 c0             	test   %rax,%rax
   39474:	74 21                	je     39497 <fzhash_insert+0x157>
   39476:	48 83 c4 08          	add    $0x8,%rsp
   3947a:	89 d0                	mov    %edx,%eax
   3947c:	5b                   	pop    %rbx
   3947d:	5d                   	pop    %rbp
   3947e:	41 5c                	pop    %r12
   39480:	41 5d                	pop    %r13
   39482:	41 5e                	pop    %r14
   39484:	41 5f                	pop    %r15
   39486:	c3                   	retq   
   39487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3948e:	00 00 
   39490:	4c 89 e8             	mov    %r13,%rax
   39493:	31 d2                	xor    %edx,%edx
   39495:	eb 9b                	jmp    39432 <fzhash_insert+0xf2>
   39497:	be 28 00 00 00       	mov    $0x28,%esi
   3949c:	bf 01 00 00 00       	mov    $0x1,%edi
   394a1:	e8 6a 6d fd ff       	callq  10210 <calloc@plt>
   394a6:	49 89 c4             	mov    %rax,%r12
   394a9:	48 85 c0             	test   %rax,%rax
   394ac:	0f 84 fc 00 00 00    	je     395ae <fzhash_insert+0x26e>
   394b2:	41 80 7e 20 00       	cmpb   $0x0,0x20(%r14)
   394b7:	74 10                	je     394c9 <fzhash_insert+0x189>
   394b9:	48 89 ef             	mov    %rbp,%rdi
   394bc:	e8 df 74 fd ff       	callq  109a0 <strdup@plt>
   394c1:	48 89 c5             	mov    %rax,%rbp
   394c4:	48 85 c0             	test   %rax,%rax
   394c7:	74 38                	je     39501 <fzhash_insert+0x1c1>
   394c9:	49 89 2c 24          	mov    %rbp,(%r12)
   394cd:	48 89 df             	mov    %rbx,%rdi
   394d0:	e8 cb 74 fd ff       	callq  109a0 <strdup@plt>
   394d5:	49 8b 56 10          	mov    0x10(%r14),%rdx
   394d9:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   394de:	49 8b 46 18          	mov    0x18(%r14),%rax
   394e2:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   394e7:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   394eb:	48 8b 10             	mov    (%rax),%rdx
   394ee:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   394f3:	31 d2                	xor    %edx,%edx
   394f5:	4c 89 20             	mov    %r12,(%rax)
   394f8:	49 83 06 01          	addq   $0x1,(%r14)
   394fc:	e9 75 ff ff ff       	jmpq   39476 <fzhash_insert+0x136>
   39501:	48 8d 0d 88 a9 00 00 	lea    0xa988(%rip),%rcx        # 43e90 <__PRETTY_FUNCTION__.3815>
   39508:	ba e2 00 00 00       	mov    $0xe2,%edx
   3950d:	48 8d 35 57 a8 00 00 	lea    0xa857(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39514:	48 8d 3d 7b 9f 00 00 	lea    0x9f7b(%rip),%rdi        # 43496 <__PRETTY_FUNCTION__.11024+0x356>
   3951b:	e8 e0 6a fd ff       	callq  10000 <__assert_fail@plt>
   39520:	48 8d 0d 79 a9 00 00 	lea    0xa979(%rip),%rcx        # 43ea0 <__PRETTY_FUNCTION__.3788>
   39527:	ba 9e 00 00 00       	mov    $0x9e,%edx
   3952c:	48 8d 35 38 a8 00 00 	lea    0xa838(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39533:	48 8d 3d ab 9c 00 00 	lea    0x9cab(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3953a:	e8 c1 6a fd ff       	callq  10000 <__assert_fail@plt>
   3953f:	48 8d 0d 5a a9 00 00 	lea    0xa95a(%rip),%rcx        # 43ea0 <__PRETTY_FUNCTION__.3788>
   39546:	ba 9d 00 00 00       	mov    $0x9d,%edx
   3954b:	48 8d 35 19 a8 00 00 	lea    0xa819(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39552:	48 8d 3d 40 a8 00 00 	lea    0xa840(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39559:	e8 a2 6a fd ff       	callq  10000 <__assert_fail@plt>
   3955e:	48 8b 1d 83 9a 21 00 	mov    0x219a83(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   39565:	41 b8 a5 00 00 00    	mov    $0xa5,%r8d
   3956b:	48 8b 3b             	mov    (%rbx),%rdi
   3956e:	48 8d 0d f6 a7 00 00 	lea    0xa7f6(%rip),%rcx        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39575:	48 8d 15 00 a8 00 00 	lea    0xa800(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3957c:	31 c0                	xor    %eax,%eax
   3957e:	be 01 00 00 00       	mov    $0x1,%esi
   39583:	e8 d8 73 fd ff       	callq  10960 <__fprintf_chk@plt>
   39588:	48 8b 0b             	mov    (%rbx),%rcx
   3958b:	ba 25 00 00 00       	mov    $0x25,%edx
   39590:	be 01 00 00 00       	mov    $0x1,%esi
   39595:	48 8d 3d 14 a8 00 00 	lea    0xa814(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3959c:	e8 af 73 fd ff       	callq  10950 <fwrite@plt>
   395a1:	48 8b 3b             	mov    (%rbx),%rdi
   395a4:	e8 97 6e fd ff       	callq  10440 <fflush@plt>
   395a9:	e8 42 65 fd ff       	callq  faf0 <abort@plt>
   395ae:	48 8b 1d 33 9a 21 00 	mov    0x219a33(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   395b5:	41 b8 dc 00 00 00    	mov    $0xdc,%r8d
   395bb:	eb ae                	jmp    3956b <fzhash_insert+0x22b>

00000000000395bd <.annobin_fzhash_insert.end>:
   395bd:	0f 1f 00             	nopl   (%rax)

00000000000395c0 <fzhash_update>:
   395c0:	f3 0f 1e fa          	endbr64 
   395c4:	41 55                	push   %r13
   395c6:	41 54                	push   %r12
   395c8:	55                   	push   %rbp
   395c9:	53                   	push   %rbx
   395ca:	48 83 ec 08          	sub    $0x8,%rsp
   395ce:	48 85 ff             	test   %rdi,%rdi
   395d1:	0f 84 d0 00 00 00    	je     396a7 <fzhash_update+0xe7>
   395d7:	49 89 f4             	mov    %rsi,%r12
   395da:	48 85 f6             	test   %rsi,%rsi
   395dd:	0f 84 a5 00 00 00    	je     39688 <fzhash_update+0xc8>
   395e3:	48 89 fd             	mov    %rdi,%rbp
   395e6:	49 89 d5             	mov    %rdx,%r13
   395e9:	e8 52 fa ff ff       	callq  39040 <s_item_lookup>
   395ee:	48 89 c3             	mov    %rax,%rbx
   395f1:	48 85 c0             	test   %rax,%rax
   395f4:	74 7a                	je     39670 <fzhash_update+0xb0>
   395f6:	48 8b 40 20          	mov    0x20(%rax),%rax
   395fa:	48 85 c0             	test   %rax,%rax
   395fd:	74 51                	je     39650 <fzhash_update+0x90>
   395ff:	48 8b 3b             	mov    (%rbx),%rdi
   39602:	ff d0                	callq  *%rax
   39604:	80 7d 20 00          	cmpb   $0x0,0x20(%rbp)
   39608:	75 16                	jne    39620 <fzhash_update+0x60>
   3960a:	4c 89 2b             	mov    %r13,(%rbx)
   3960d:	48 83 c4 08          	add    $0x8,%rsp
   39611:	5b                   	pop    %rbx
   39612:	5d                   	pop    %rbp
   39613:	41 5c                	pop    %r12
   39615:	41 5d                	pop    %r13
   39617:	c3                   	retq   
   39618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3961f:	00 
   39620:	4c 89 ef             	mov    %r13,%rdi
   39623:	e8 78 73 fd ff       	callq  109a0 <strdup@plt>
   39628:	49 89 c5             	mov    %rax,%r13
   3962b:	48 85 c0             	test   %rax,%rax
   3962e:	75 da                	jne    3960a <fzhash_update+0x4a>
   39630:	48 8d 0d 49 a8 00 00 	lea    0xa849(%rip),%rcx        # 43e80 <__PRETTY_FUNCTION__.3829>
   39637:	ba 1d 01 00 00       	mov    $0x11d,%edx
   3963c:	48 8d 35 28 a7 00 00 	lea    0xa728(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39643:	48 8d 3d 4c 9e 00 00 	lea    0x9e4c(%rip),%rdi        # 43496 <__PRETTY_FUNCTION__.11024+0x356>
   3964a:	e8 b1 69 fd ff       	callq  10000 <__assert_fail@plt>
   3964f:	90                   	nop
   39650:	80 7d 20 00          	cmpb   $0x0,0x20(%rbp)
   39654:	74 b4                	je     3960a <fzhash_update+0x4a>
   39656:	48 8b 3b             	mov    (%rbx),%rdi
   39659:	e8 52 64 fd ff       	callq  fab0 <free@plt>
   3965e:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   39665:	eb 9d                	jmp    39604 <fzhash_update+0x44>
   39667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3966e:	00 00 
   39670:	48 83 c4 08          	add    $0x8,%rsp
   39674:	4c 89 ea             	mov    %r13,%rdx
   39677:	4c 89 e6             	mov    %r12,%rsi
   3967a:	48 89 ef             	mov    %rbp,%rdi
   3967d:	5b                   	pop    %rbx
   3967e:	5d                   	pop    %rbp
   3967f:	41 5c                	pop    %r12
   39681:	41 5d                	pop    %r13
   39683:	e9 b8 fc ff ff       	jmpq   39340 <fzhash_insert>
   39688:	48 8d 0d f1 a7 00 00 	lea    0xa7f1(%rip),%rcx        # 43e80 <__PRETTY_FUNCTION__.3829>
   3968f:	ba 10 01 00 00       	mov    $0x110,%edx
   39694:	48 8d 35 d0 a6 00 00 	lea    0xa6d0(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   3969b:	48 8d 3d 43 9b 00 00 	lea    0x9b43(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   396a2:	e8 59 69 fd ff       	callq  10000 <__assert_fail@plt>
   396a7:	48 8d 0d d2 a7 00 00 	lea    0xa7d2(%rip),%rcx        # 43e80 <__PRETTY_FUNCTION__.3829>
   396ae:	ba 0f 01 00 00       	mov    $0x10f,%edx
   396b3:	48 8d 35 b1 a6 00 00 	lea    0xa6b1(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   396ba:	48 8d 3d d8 a6 00 00 	lea    0xa6d8(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   396c1:	e8 3a 69 fd ff       	callq  10000 <__assert_fail@plt>

00000000000396c6 <.annobin_fzhash_delete.start>:
   396c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   396cd:	00 00 00 

00000000000396d0 <fzhash_delete>:
   396d0:	f3 0f 1e fa          	endbr64 
   396d4:	53                   	push   %rbx
   396d5:	48 85 ff             	test   %rdi,%rdi
   396d8:	74 47                	je     39721 <fzhash_delete+0x51>
   396da:	48 85 f6             	test   %rsi,%rsi
   396dd:	74 23                	je     39702 <fzhash_delete+0x32>
   396df:	48 89 fb             	mov    %rdi,%rbx
   396e2:	e8 59 f9 ff ff       	callq  39040 <s_item_lookup>
   396e7:	48 85 c0             	test   %rax,%rax
   396ea:	74 14                	je     39700 <fzhash_delete+0x30>
   396ec:	48 89 df             	mov    %rbx,%rdi
   396ef:	ba 01 00 00 00       	mov    $0x1,%edx
   396f4:	48 89 c6             	mov    %rax,%rsi
   396f7:	5b                   	pop    %rbx
   396f8:	e9 d3 f9 ff ff       	jmpq   390d0 <s_item_destroy>
   396fd:	0f 1f 00             	nopl   (%rax)
   39700:	5b                   	pop    %rbx
   39701:	c3                   	retq   
   39702:	48 8d 0d 67 a7 00 00 	lea    0xa767(%rip),%rcx        # 43e70 <__PRETTY_FUNCTION__.3835>
   39709:	ba 2e 01 00 00       	mov    $0x12e,%edx
   3970e:	48 8d 35 56 a6 00 00 	lea    0xa656(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39715:	48 8d 3d c9 9a 00 00 	lea    0x9ac9(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3971c:	e8 df 68 fd ff       	callq  10000 <__assert_fail@plt>
   39721:	48 8d 0d 48 a7 00 00 	lea    0xa748(%rip),%rcx        # 43e70 <__PRETTY_FUNCTION__.3835>
   39728:	ba 2d 01 00 00       	mov    $0x12d,%edx
   3972d:	48 8d 35 37 a6 00 00 	lea    0xa637(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39734:	48 8d 3d 5e a6 00 00 	lea    0xa65e(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3973b:	e8 c0 68 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039740 <fzhash_lookup>:
   39740:	f3 0f 1e fa          	endbr64 
   39744:	48 83 ec 08          	sub    $0x8,%rsp
   39748:	48 85 ff             	test   %rdi,%rdi
   3974b:	74 17                	je     39764 <fzhash_lookup+0x24>
   3974d:	48 85 f6             	test   %rsi,%rsi
   39750:	74 31                	je     39783 <fzhash_lookup+0x43>
   39752:	e8 e9 f8 ff ff       	callq  39040 <s_item_lookup>
   39757:	48 85 c0             	test   %rax,%rax
   3975a:	74 03                	je     3975f <fzhash_lookup+0x1f>
   3975c:	48 8b 00             	mov    (%rax),%rax
   3975f:	48 83 c4 08          	add    $0x8,%rsp
   39763:	c3                   	retq   
   39764:	48 8d 0d f5 a6 00 00 	lea    0xa6f5(%rip),%rcx        # 43e60 <__PRETTY_FUNCTION__.3841>
   3976b:	ba 3c 01 00 00       	mov    $0x13c,%edx
   39770:	48 8d 35 f4 a5 00 00 	lea    0xa5f4(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39777:	48 8d 3d 1b a6 00 00 	lea    0xa61b(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3977e:	e8 7d 68 fd ff       	callq  10000 <__assert_fail@plt>
   39783:	48 8d 0d d6 a6 00 00 	lea    0xa6d6(%rip),%rcx        # 43e60 <__PRETTY_FUNCTION__.3841>
   3978a:	ba 3d 01 00 00       	mov    $0x13d,%edx
   3978f:	48 8d 35 d5 a5 00 00 	lea    0xa5d5(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39796:	48 8d 3d 48 9a 00 00 	lea    0x9a48(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3979d:	e8 5e 68 fd ff       	callq  10000 <__assert_fail@plt>

00000000000397a2 <.annobin_fzhash_lookup.end>:
   397a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   397a9:	00 00 00 00 
   397ad:	0f 1f 00             	nopl   (%rax)

00000000000397b0 <fzhash_rename>:
   397b0:	f3 0f 1e fa          	endbr64 
   397b4:	41 54                	push   %r12
   397b6:	49 89 d4             	mov    %rdx,%r12
   397b9:	55                   	push   %rbp
   397ba:	48 89 fd             	mov    %rdi,%rbp
   397bd:	53                   	push   %rbx
   397be:	e8 7d f8 ff ff       	callq  39040 <s_item_lookup>
   397c3:	4c 89 e6             	mov    %r12,%rsi
   397c6:	48 89 ef             	mov    %rbp,%rdi
   397c9:	48 89 c3             	mov    %rax,%rbx
   397cc:	e8 6f f8 ff ff       	callq  39040 <s_item_lookup>
   397d1:	48 85 db             	test   %rbx,%rbx
   397d4:	74 5a                	je     39830 <fzhash_rename+0x80>
   397d6:	48 85 c0             	test   %rax,%rax
   397d9:	75 55                	jne    39830 <fzhash_rename+0x80>
   397db:	31 d2                	xor    %edx,%edx
   397dd:	48 89 de             	mov    %rbx,%rsi
   397e0:	48 89 ef             	mov    %rbp,%rdi
   397e3:	e8 e8 f8 ff ff       	callq  390d0 <s_item_destroy>
   397e8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   397ec:	e8 bf 62 fd ff       	callq  fab0 <free@plt>
   397f1:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   397f8:	00 
   397f9:	4c 89 e7             	mov    %r12,%rdi
   397fc:	e8 9f 71 fd ff       	callq  109a0 <strdup@plt>
   39801:	48 89 43 18          	mov    %rax,0x18(%rbx)
   39805:	48 85 c0             	test   %rax,%rax
   39808:	74 2d                	je     39837 <fzhash_rename+0x87>
   3980a:	48 8b 45 18          	mov    0x18(%rbp),%rax
   3980e:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   39812:	48 89 43 10          	mov    %rax,0x10(%rbx)
   39816:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   3981a:	48 8b 10             	mov    (%rax),%rdx
   3981d:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   39821:	48 89 18             	mov    %rbx,(%rax)
   39824:	31 c0                	xor    %eax,%eax
   39826:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
   3982b:	5b                   	pop    %rbx
   3982c:	5d                   	pop    %rbp
   3982d:	41 5c                	pop    %r12
   3982f:	c3                   	retq   
   39830:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   39835:	eb f4                	jmp    3982b <fzhash_rename+0x7b>
   39837:	48 8d 0d 12 a6 00 00 	lea    0xa612(%rip),%rcx        # 43e50 <__PRETTY_FUNCTION__.3850>
   3983e:	ba 54 01 00 00       	mov    $0x154,%edx
   39843:	48 8d 35 21 a5 00 00 	lea    0xa521(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   3984a:	48 8d 3d 4d a5 00 00 	lea    0xa54d(%rip),%rdi        # 43d9e <__PRETTY_FUNCTION__.3724+0x3e>
   39851:	e8 aa 67 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039856 <.annobin_fzhash_freefn.start>:
   39856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3985d:	00 00 00 

0000000000039860 <fzhash_freefn>:
   39860:	f3 0f 1e fa          	endbr64 
   39864:	53                   	push   %rbx
   39865:	48 85 ff             	test   %rdi,%rdi
   39868:	74 1b                	je     39885 <fzhash_freefn+0x25>
   3986a:	48 85 f6             	test   %rsi,%rsi
   3986d:	74 35                	je     398a4 <fzhash_freefn+0x44>
   3986f:	48 89 d3             	mov    %rdx,%rbx
   39872:	e8 c9 f7 ff ff       	callq  39040 <s_item_lookup>
   39877:	48 85 c0             	test   %rax,%rax
   3987a:	74 07                	je     39883 <fzhash_freefn+0x23>
   3987c:	48 89 58 20          	mov    %rbx,0x20(%rax)
   39880:	48 8b 00             	mov    (%rax),%rax
   39883:	5b                   	pop    %rbx
   39884:	c3                   	retq   
   39885:	48 8d 0d b4 a5 00 00 	lea    0xa5b4(%rip),%rcx        # 43e40 <__PRETTY_FUNCTION__.3856>
   3988c:	ba 6a 01 00 00       	mov    $0x16a,%edx
   39891:	48 8d 35 d3 a4 00 00 	lea    0xa4d3(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39898:	48 8d 3d fa a4 00 00 	lea    0xa4fa(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3989f:	e8 5c 67 fd ff       	callq  10000 <__assert_fail@plt>
   398a4:	48 8d 0d 95 a5 00 00 	lea    0xa595(%rip),%rcx        # 43e40 <__PRETTY_FUNCTION__.3856>
   398ab:	ba 6b 01 00 00       	mov    $0x16b,%edx
   398b0:	48 8d 35 b4 a4 00 00 	lea    0xa4b4(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   398b7:	48 8d 3d 27 99 00 00 	lea    0x9927(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   398be:	e8 3d 67 fd ff       	callq  10000 <__assert_fail@plt>

00000000000398c3 <.annobin_fzhash_freefn.end>:
   398c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   398ca:	00 00 00 00 
   398ce:	66 90                	xchg   %ax,%ax

00000000000398d0 <fzhash_size>:
   398d0:	f3 0f 1e fa          	endbr64 
   398d4:	48 85 ff             	test   %rdi,%rdi
   398d7:	74 04                	je     398dd <fzhash_size+0xd>
   398d9:	48 8b 07             	mov    (%rdi),%rax
   398dc:	c3                   	retq   
   398dd:	50                   	push   %rax
   398de:	48 8d 0d 4b a5 00 00 	lea    0xa54b(%rip),%rcx        # 43e30 <__PRETTY_FUNCTION__.3861>
   398e5:	ba 7d 01 00 00       	mov    $0x17d,%edx
   398ea:	48 8d 35 7a a4 00 00 	lea    0xa47a(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   398f1:	48 8d 3d a1 a4 00 00 	lea    0xa4a1(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   398f8:	e8 03 67 fd ff       	callq  10000 <__assert_fail@plt>

00000000000398fd <.annobin_fzhash_keys.start>:
   398fd:	0f 1f 00             	nopl   (%rax)

0000000000039900 <fzhash_keys>:
   39900:	f3 0f 1e fa          	endbr64 
   39904:	41 55                	push   %r13
   39906:	41 54                	push   %r12
   39908:	55                   	push   %rbp
   39909:	53                   	push   %rbx
   3990a:	48 83 ec 08          	sub    $0x8,%rsp
   3990e:	48 85 ff             	test   %rdi,%rdi
   39911:	74 6e                	je     39981 <fzhash_keys+0x81>
   39913:	49 89 fd             	mov    %rdi,%r13
   39916:	e8 45 14 00 00       	callq  3ad60 <fzlist_new>
   3991b:	48 89 c5             	mov    %rax,%rbp
   3991e:	48 85 c0             	test   %rax,%rax
   39921:	74 50                	je     39973 <fzhash_keys+0x73>
   39923:	48 89 c7             	mov    %rax,%rdi
   39926:	e8 e5 1c 00 00       	callq  3b610 <fzlist_autofree>
   3992b:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   39930:	74 41                	je     39973 <fzhash_keys+0x73>
   39932:	45 31 e4             	xor    %r12d,%r12d
   39935:	31 c0                	xor    %eax,%eax
   39937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3993e:	00 00 
   39940:	49 8b 55 10          	mov    0x10(%r13),%rdx
   39944:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   39948:	48 85 db             	test   %rbx,%rbx
   3994b:	74 18                	je     39965 <fzhash_keys+0x65>
   3994d:	0f 1f 00             	nopl   (%rax)
   39950:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   39954:	48 89 ef             	mov    %rbp,%rdi
   39957:	e8 04 16 00 00       	callq  3af60 <fzlist_append>
   3995c:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   39960:	48 85 db             	test   %rbx,%rbx
   39963:	75 eb                	jne    39950 <fzhash_keys+0x50>
   39965:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   3996a:	49 89 c4             	mov    %rax,%r12
   3996d:	49 3b 45 08          	cmp    0x8(%r13),%rax
   39971:	75 cd                	jne    39940 <fzhash_keys+0x40>
   39973:	48 83 c4 08          	add    $0x8,%rsp
   39977:	48 89 e8             	mov    %rbp,%rax
   3997a:	5b                   	pop    %rbx
   3997b:	5d                   	pop    %rbp
   3997c:	41 5c                	pop    %r12
   3997e:	41 5d                	pop    %r13
   39980:	c3                   	retq   
   39981:	48 8d 0d 98 a4 00 00 	lea    0xa498(%rip),%rcx        # 43e20 <__PRETTY_FUNCTION__.3877>
   39988:	ba a4 01 00 00       	mov    $0x1a4,%edx
   3998d:	48 8d 35 d7 a3 00 00 	lea    0xa3d7(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39994:	48 8d 3d fe a3 00 00 	lea    0xa3fe(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3999b:	e8 60 66 fd ff       	callq  10000 <__assert_fail@plt>

00000000000399a0 <fzhash_next>:
   399a0:	f3 0f 1e fa          	endbr64 
   399a4:	48 85 ff             	test   %rdi,%rdi
   399a7:	74 5c                	je     39a05 <fzhash_next+0x65>
   399a9:	48 8b 47 30          	mov    0x30(%rdi),%rax
   399ad:	48 85 c0             	test   %rax,%rax
   399b0:	75 38                	jne    399ea <fzhash_next+0x4a>
   399b2:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   399b6:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   399ba:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
   399be:	48 39 d1             	cmp    %rdx,%rcx
   399c1:	76 3a                	jbe    399fd <fzhash_next+0x5d>
   399c3:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   399c7:	eb 0c                	jmp    399d5 <fzhash_next+0x35>
   399c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   399d0:	48 39 ca             	cmp    %rcx,%rdx
   399d3:	73 2b                	jae    39a00 <fzhash_next+0x60>
   399d5:	48 83 c2 01          	add    $0x1,%rdx
   399d9:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
   399dd:	48 89 47 30          	mov    %rax,0x30(%rdi)
   399e1:	48 85 c0             	test   %rax,%rax
   399e4:	74 ea                	je     399d0 <fzhash_next+0x30>
   399e6:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   399ea:	48 8b 50 18          	mov    0x18(%rax),%rdx
   399ee:	48 89 57 38          	mov    %rdx,0x38(%rdi)
   399f2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   399f6:	48 8b 00             	mov    (%rax),%rax
   399f9:	48 89 57 30          	mov    %rdx,0x30(%rdi)
   399fd:	c3                   	retq   
   399fe:	66 90                	xchg   %ax,%ax
   39a00:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   39a04:	c3                   	retq   
   39a05:	50                   	push   %rax
   39a06:	48 8d 0d f3 a3 00 00 	lea    0xa3f3(%rip),%rcx        # 43e00 <__PRETTY_FUNCTION__.3894>
   39a0d:	ba d2 01 00 00       	mov    $0x1d2,%edx
   39a12:	48 8d 35 52 a3 00 00 	lea    0xa352(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39a19:	48 8d 3d 79 a3 00 00 	lea    0xa379(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39a20:	e8 db 65 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039a25 <.annobin_fzhash_first.start>:
   39a25:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   39a2c:	00 00 00 00 

0000000000039a30 <fzhash_first>:
   39a30:	f3 0f 1e fa          	endbr64 
   39a34:	48 85 ff             	test   %rdi,%rdi
   39a37:	74 18                	je     39a51 <fzhash_first+0x21>
   39a39:	48 8b 47 10          	mov    0x10(%rdi),%rax
   39a3d:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   39a44:	00 
   39a45:	48 8b 00             	mov    (%rax),%rax
   39a48:	48 89 47 30          	mov    %rax,0x30(%rdi)
   39a4c:	e9 4f ff ff ff       	jmpq   399a0 <fzhash_next>
   39a51:	50                   	push   %rax
   39a52:	48 8d 0d b7 a3 00 00 	lea    0xa3b7(%rip),%rcx        # 43e10 <__PRETTY_FUNCTION__.3890>
   39a59:	ba bf 01 00 00       	mov    $0x1bf,%edx
   39a5e:	48 8d 35 06 a3 00 00 	lea    0xa306(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39a65:	48 8d 3d 2d a3 00 00 	lea    0xa32d(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39a6c:	e8 8f 65 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039a71 <.annobin_fzhash_cursor.start>:
   39a71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   39a78:	00 00 00 00 
   39a7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000039a80 <fzhash_cursor>:
   39a80:	f3 0f 1e fa          	endbr64 
   39a84:	48 85 ff             	test   %rdi,%rdi
   39a87:	74 05                	je     39a8e <fzhash_cursor+0xe>
   39a89:	48 8b 47 38          	mov    0x38(%rdi),%rax
   39a8d:	c3                   	retq   
   39a8e:	50                   	push   %rax
   39a8f:	48 8d 0d 5a a3 00 00 	lea    0xa35a(%rip),%rcx        # 43df0 <__PRETTY_FUNCTION__.3902>
   39a96:	ba ef 01 00 00       	mov    $0x1ef,%edx
   39a9b:	48 8d 35 c9 a2 00 00 	lea    0xa2c9(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39aa2:	48 8d 3d f0 a2 00 00 	lea    0xa2f0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39aa9:	e8 52 65 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039aae <.annobin_fzhash_autofree.start>:
   39aae:	66 90                	xchg   %ax,%ax

0000000000039ab0 <fzhash_autofree>:
   39ab0:	f3 0f 1e fa          	endbr64 
   39ab4:	48 85 ff             	test   %rdi,%rdi
   39ab7:	74 05                	je     39abe <fzhash_autofree+0xe>
   39ab9:	c6 47 20 01          	movb   $0x1,0x20(%rdi)
   39abd:	c3                   	retq   
   39abe:	50                   	push   %rax
   39abf:	48 8d 0d 1a a3 00 00 	lea    0xa31a(%rip),%rcx        # 43de0 <__PRETTY_FUNCTION__.3906>
   39ac6:	ba 0d 03 00 00       	mov    $0x30d,%edx
   39acb:	48 8d 35 99 a2 00 00 	lea    0xa299(%rip),%rsi        # 43d6b <__PRETTY_FUNCTION__.3724+0xb>
   39ad2:	48 8d 3d c0 a2 00 00 	lea    0xa2c0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39ad9:	e8 22 65 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039ade <.annobin_fzhash_autofree.end>:
   39ade:	66 90                	xchg   %ax,%ax

0000000000039ae0 <fzhash_dup>:
   39ae0:	f3 0f 1e fa          	endbr64 
   39ae4:	41 55                	push   %r13
   39ae6:	41 54                	push   %r12
   39ae8:	55                   	push   %rbp
   39ae9:	53                   	push   %rbx
   39aea:	48 83 ec 08          	sub    $0x8,%rsp
   39aee:	48 85 ff             	test   %rdi,%rdi
   39af1:	74 71                	je     39b64 <fzhash_dup+0x84>
   39af3:	49 89 fd             	mov    %rdi,%r13
   39af6:	e8 a5 f6 ff ff       	callq  391a0 <fzhash_new>
   39afb:	48 89 c5             	mov    %rax,%rbp
   39afe:	48 89 c7             	mov    %rax,%rdi
   39b01:	e8 aa ff ff ff       	callq  39ab0 <fzhash_autofree>
   39b06:	48 85 ed             	test   %rbp,%rbp
   39b09:	74 59                	je     39b64 <fzhash_dup+0x84>
   39b0b:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   39b10:	74 44                	je     39b56 <fzhash_dup+0x76>
   39b12:	45 31 e4             	xor    %r12d,%r12d
   39b15:	31 c0                	xor    %eax,%eax
   39b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   39b1e:	00 00 
   39b20:	49 8b 55 10          	mov    0x10(%r13),%rdx
   39b24:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   39b28:	48 85 db             	test   %rbx,%rbx
   39b2b:	74 1b                	je     39b48 <fzhash_dup+0x68>
   39b2d:	0f 1f 00             	nopl   (%rax)
   39b30:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   39b34:	48 8b 13             	mov    (%rbx),%rdx
   39b37:	48 89 ef             	mov    %rbp,%rdi
   39b3a:	e8 01 f8 ff ff       	callq  39340 <fzhash_insert>
   39b3f:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   39b43:	48 85 db             	test   %rbx,%rbx
   39b46:	75 e8                	jne    39b30 <fzhash_dup+0x50>
   39b48:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   39b4d:	49 89 c4             	mov    %rax,%r12
   39b50:	49 3b 45 08          	cmp    0x8(%r13),%rax
   39b54:	75 ca                	jne    39b20 <fzhash_dup+0x40>
   39b56:	48 83 c4 08          	add    $0x8,%rsp
   39b5a:	48 89 e8             	mov    %rbp,%rax
   39b5d:	5b                   	pop    %rbx
   39b5e:	5d                   	pop    %rbp
   39b5f:	41 5c                	pop    %r12
   39b61:	41 5d                	pop    %r13
   39b63:	c3                   	retq   
   39b64:	48 83 c4 08          	add    $0x8,%rsp
   39b68:	31 ed                	xor    %ebp,%ebp
   39b6a:	5b                   	pop    %rbx
   39b6b:	48 89 e8             	mov    %rbp,%rax
   39b6e:	5d                   	pop    %rbp
   39b6f:	41 5c                	pop    %r12
   39b71:	41 5d                	pop    %r13
   39b73:	c3                   	retq   

0000000000039b74 <.annobin_fzhash_dup.end>:
   39b74:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39b7b:	00 00 00 
   39b7e:	66 90                	xchg   %ax,%ax

0000000000039b80 <s_bernstein_hash>:
   39b80:	f3 0f 1e fa          	endbr64 
   39b84:	0f b6 17             	movzbl (%rdi),%edx
   39b87:	31 c0                	xor    %eax,%eax
   39b89:	84 d2                	test   %dl,%dl
   39b8b:	74 23                	je     39bb0 <s_bernstein_hash+0x30>
   39b8d:	0f 1f 00             	nopl   (%rax)
   39b90:	48 89 c1             	mov    %rax,%rcx
   39b93:	48 83 c7 01          	add    $0x1,%rdi
   39b97:	48 c1 e1 05          	shl    $0x5,%rcx
   39b9b:	48 01 c1             	add    %rax,%rcx
   39b9e:	48 0f be c2          	movsbq %dl,%rax
   39ba2:	0f b6 17             	movzbl (%rdi),%edx
   39ba5:	48 31 c8             	xor    %rcx,%rax
   39ba8:	84 d2                	test   %dl,%dl
   39baa:	75 e4                	jne    39b90 <s_bernstein_hash+0x10>
   39bac:	c3                   	retq   
   39bad:	0f 1f 00             	nopl   (%rax)
   39bb0:	c3                   	retq   

0000000000039bb1 <.annobin_s_bernstein_hash.end>:
   39bb1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   39bb8:	00 00 00 00 
   39bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000039bc0 <s_item_destroy>:
   39bc0:	55                   	push   %rbp
   39bc1:	53                   	push   %rbx
   39bc2:	48 83 ec 08          	sub    $0x8,%rsp
   39bc6:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   39bca:	48 8b 47 10          	mov    0x10(%rdi),%rax
   39bce:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
   39bd2:	48 8b 08             	mov    (%rax),%rcx
   39bd5:	48 85 c9             	test   %rcx,%rcx
   39bd8:	74 27                	je     39c01 <s_item_destroy+0x41>
   39bda:	48 89 fd             	mov    %rdi,%rbp
   39bdd:	48 89 f3             	mov    %rsi,%rbx
   39be0:	48 39 ce             	cmp    %rcx,%rsi
   39be3:	75 13                	jne    39bf8 <s_item_destroy+0x38>
   39be5:	eb 3d                	jmp    39c24 <s_item_destroy+0x64>
   39be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   39bee:	00 00 
   39bf0:	48 39 c3             	cmp    %rax,%rbx
   39bf3:	74 2b                	je     39c20 <s_item_destroy+0x60>
   39bf5:	48 89 c1             	mov    %rax,%rcx
   39bf8:	48 8b 41 08          	mov    0x8(%rcx),%rax
   39bfc:	48 85 c0             	test   %rax,%rax
   39bff:	75 ef                	jne    39bf0 <s_item_destroy+0x30>
   39c01:	48 8d 0d f8 a4 00 00 	lea    0xa4f8(%rip),%rcx        # 44100 <__PRETTY_FUNCTION__.3799>
   39c08:	ba bc 00 00 00       	mov    $0xbc,%edx
   39c0d:	48 8d 35 bb a2 00 00 	lea    0xa2bb(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39c14:	48 8d 3d 58 a1 00 00 	lea    0xa158(%rip),%rdi        # 43d73 <__PRETTY_FUNCTION__.3724+0x13>
   39c1b:	e8 e0 63 fd ff       	callq  10000 <__assert_fail@plt>
   39c20:	48 8d 41 08          	lea    0x8(%rcx),%rax
   39c24:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   39c28:	48 89 08             	mov    %rcx,(%rax)
   39c2b:	48 83 6d 00 01       	subq   $0x1,0x0(%rbp)
   39c30:	84 d2                	test   %dl,%dl
   39c32:	74 3c                	je     39c70 <s_item_destroy+0xb0>
   39c34:	48 8b 45 58          	mov    0x58(%rbp),%rax
   39c38:	48 85 c0             	test   %rax,%rax
   39c3b:	74 43                	je     39c80 <s_item_destroy+0xc0>
   39c3d:	48 89 df             	mov    %rbx,%rdi
   39c40:	ff d0                	callq  *%rax
   39c42:	48 8b 45 68          	mov    0x68(%rbp),%rax
   39c46:	48 c7 45 28 00 00 00 	movq   $0x0,0x28(%rbp)
   39c4d:	00 
   39c4e:	48 c7 45 30 00 00 00 	movq   $0x0,0x30(%rbp)
   39c55:	00 
   39c56:	48 85 c0             	test   %rax,%rax
   39c59:	74 06                	je     39c61 <s_item_destroy+0xa1>
   39c5b:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   39c5f:	ff d0                	callq  *%rax
   39c61:	48 83 c4 08          	add    $0x8,%rsp
   39c65:	48 89 df             	mov    %rbx,%rdi
   39c68:	5b                   	pop    %rbx
   39c69:	5d                   	pop    %rbp
   39c6a:	e9 41 5e fd ff       	jmpq   fab0 <free@plt>
   39c6f:	90                   	nop
   39c70:	48 83 c4 08          	add    $0x8,%rsp
   39c74:	5b                   	pop    %rbx
   39c75:	5d                   	pop    %rbp
   39c76:	c3                   	retq   
   39c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   39c7e:	00 00 
   39c80:	48 8b 43 20          	mov    0x20(%rbx),%rax
   39c84:	48 85 c0             	test   %rax,%rax
   39c87:	74 b9                	je     39c42 <s_item_destroy+0x82>
   39c89:	48 8b 3b             	mov    (%rbx),%rdi
   39c8c:	ff d0                	callq  *%rax
   39c8e:	eb b2                	jmp    39c42 <s_item_destroy+0x82>

0000000000039c90 <s_purge>:
   39c90:	41 56                	push   %r14
   39c92:	48 8d 05 87 a4 00 00 	lea    0xa487(%rip),%rax        # 44120 <primes>
   39c99:	41 55                	push   %r13
   39c9b:	41 54                	push   %r12
   39c9d:	55                   	push   %rbp
   39c9e:	53                   	push   %rbx
   39c9f:	8b 57 08             	mov    0x8(%rdi),%edx
   39ca2:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   39ca6:	4d 85 ed             	test   %r13,%r13
   39ca9:	74 62                	je     39d0d <s_purge+0x7d>
   39cab:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   39caf:	48 89 fd             	mov    %rdi,%rbp
   39cb2:	45 31 e4             	xor    %r12d,%r12d
   39cb5:	31 c0                	xor    %eax,%eax
   39cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   39cbe:	00 00 
   39cc0:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
   39cc7:	00 
   39cc8:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
   39ccc:	48 8b 30             	mov    (%rax),%rsi
   39ccf:	48 85 f6             	test   %rsi,%rsi
   39cd2:	74 25                	je     39cf9 <s_purge+0x69>
   39cd4:	0f 1f 40 00          	nopl   0x0(%rax)
   39cd8:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   39cdc:	ba 01 00 00 00       	mov    $0x1,%edx
   39ce1:	48 89 ef             	mov    %rbp,%rdi
   39ce4:	e8 d7 fe ff ff       	callq  39bc0 <s_item_destroy>
   39ce9:	48 89 de             	mov    %rbx,%rsi
   39cec:	48 85 db             	test   %rbx,%rbx
   39cef:	75 e7                	jne    39cd8 <s_purge+0x48>
   39cf1:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   39cf5:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
   39cf9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   39d00:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   39d05:	49 89 c4             	mov    %rax,%r12
   39d08:	4c 39 e8             	cmp    %r13,%rax
   39d0b:	72 b3                	jb     39cc0 <s_purge+0x30>
   39d0d:	5b                   	pop    %rbx
   39d0e:	5d                   	pop    %rbp
   39d0f:	41 5c                	pop    %r12
   39d11:	41 5d                	pop    %r13
   39d13:	41 5e                	pop    %r14
   39d15:	c3                   	retq   

0000000000039d16 <.annobin_s_purge.end>:
   39d16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39d1d:	00 00 00 

0000000000039d20 <s_zhashx_rehash>:
   39d20:	41 57                	push   %r15
   39d22:	41 56                	push   %r14
   39d24:	41 55                	push   %r13
   39d26:	41 54                	push   %r12
   39d28:	55                   	push   %rbp
   39d29:	53                   	push   %rbx
   39d2a:	48 83 ec 18          	sub    $0x18,%rsp
   39d2e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   39d32:	48 85 ff             	test   %rdi,%rdi
   39d35:	0f 84 cd 00 00 00    	je     39e08 <s_zhashx_rehash+0xe8>
   39d3b:	81 7c 24 0c 5f 09 00 	cmpl   $0x95f,0xc(%rsp)
   39d42:	00 
   39d43:	0f 87 2e 01 00 00    	ja     39e77 <s_zhashx_rehash+0x157>
   39d49:	8b 57 08             	mov    0x8(%rdi),%edx
   39d4c:	48 8d 05 cd a3 00 00 	lea    0xa3cd(%rip),%rax        # 44120 <primes>
   39d53:	49 89 fc             	mov    %rdi,%r12
   39d56:	bf 01 00 00 00       	mov    $0x1,%edi
   39d5b:	4c 8b 3c d0          	mov    (%rax,%rdx,8),%r15
   39d5f:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   39d63:	48 8b 1c d0          	mov    (%rax,%rdx,8),%rbx
   39d67:	4c 89 3c 24          	mov    %r15,(%rsp)
   39d6b:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
   39d72:	00 
   39d73:	e8 98 64 fd ff       	callq  10210 <calloc@plt>
   39d78:	49 89 c5             	mov    %rax,%r13
   39d7b:	48 85 c0             	test   %rax,%rax
   39d7e:	0f 84 a3 00 00 00    	je     39e27 <s_zhashx_rehash+0x107>
   39d84:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   39d89:	45 31 f6             	xor    %r14d,%r14d
   39d8c:	4d 85 ff             	test   %r15,%r15
   39d8f:	74 53                	je     39de4 <s_zhashx_rehash+0xc4>
   39d91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   39d98:	4e 8b 3c f7          	mov    (%rdi,%r14,8),%r15
   39d9c:	4d 85 ff             	test   %r15,%r15
   39d9f:	74 39                	je     39dda <s_zhashx_rehash+0xba>
   39da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   39da8:	49 8b 6f 08          	mov    0x8(%r15),%rbp
   39dac:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   39db0:	41 ff 54 24 78       	callq  *0x78(%r12)
   39db5:	31 d2                	xor    %edx,%edx
   39db7:	48 f7 f3             	div    %rbx
   39dba:	49 8d 44 d5 00       	lea    0x0(%r13,%rdx,8),%rax
   39dbf:	49 89 57 10          	mov    %rdx,0x10(%r15)
   39dc3:	48 8b 10             	mov    (%rax),%rdx
   39dc6:	49 89 57 08          	mov    %rdx,0x8(%r15)
   39dca:	4c 89 38             	mov    %r15,(%rax)
   39dcd:	49 89 ef             	mov    %rbp,%r15
   39dd0:	48 85 ed             	test   %rbp,%rbp
   39dd3:	75 d3                	jne    39da8 <s_zhashx_rehash+0x88>
   39dd5:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   39dda:	49 83 c6 01          	add    $0x1,%r14
   39dde:	4c 39 34 24          	cmp    %r14,(%rsp)
   39de2:	75 b4                	jne    39d98 <s_zhashx_rehash+0x78>
   39de4:	e8 c7 5c fd ff       	callq  fab0 <free@plt>
   39de9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   39ded:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
   39df2:	41 89 44 24 08       	mov    %eax,0x8(%r12)
   39df7:	48 83 c4 18          	add    $0x18,%rsp
   39dfb:	31 c0                	xor    %eax,%eax
   39dfd:	5b                   	pop    %rbx
   39dfe:	5d                   	pop    %rbp
   39dff:	41 5c                	pop    %r12
   39e01:	41 5d                	pop    %r13
   39e03:	41 5e                	pop    %r14
   39e05:	41 5f                	pop    %r15
   39e07:	c3                   	retq   
   39e08:	48 8d 0d d1 a2 00 00 	lea    0xa2d1(%rip),%rcx        # 440e0 <__PRETTY_FUNCTION__.3804>
   39e0f:	ba d8 00 00 00       	mov    $0xd8,%edx
   39e14:	48 8d 35 b4 a0 00 00 	lea    0xa0b4(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39e1b:	48 8d 3d 77 9f 00 00 	lea    0x9f77(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   39e22:	e8 d9 61 fd ff       	callq  10000 <__assert_fail@plt>
   39e27:	48 8b 1d ba 91 21 00 	mov    0x2191ba(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   39e2e:	41 b8 dd 00 00 00    	mov    $0xdd,%r8d
   39e34:	31 c0                	xor    %eax,%eax
   39e36:	48 8d 0d 92 a0 00 00 	lea    0xa092(%rip),%rcx        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39e3d:	48 8d 15 38 9f 00 00 	lea    0x9f38(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   39e44:	be 01 00 00 00       	mov    $0x1,%esi
   39e49:	48 8b 3b             	mov    (%rbx),%rdi
   39e4c:	e8 0f 6b fd ff       	callq  10960 <__fprintf_chk@plt>
   39e51:	48 8b 0b             	mov    (%rbx),%rcx
   39e54:	ba 25 00 00 00       	mov    $0x25,%edx
   39e59:	be 01 00 00 00       	mov    $0x1,%esi
   39e5e:	48 8d 3d 4b 9f 00 00 	lea    0x9f4b(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   39e65:	e8 e6 6a fd ff       	callq  10950 <fwrite@plt>
   39e6a:	48 8b 3b             	mov    (%rbx),%rdi
   39e6d:	e8 ce 65 fd ff       	callq  10440 <fflush@plt>
   39e72:	e8 79 5c fd ff       	callq  faf0 <abort@plt>
   39e77:	48 8d 0d 62 a2 00 00 	lea    0xa262(%rip),%rcx        # 440e0 <__PRETTY_FUNCTION__.3804>
   39e7e:	ba d9 00 00 00       	mov    $0xd9,%edx
   39e83:	48 8d 35 45 a0 00 00 	lea    0xa045(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39e8a:	48 8d 3d 5f a0 00 00 	lea    0xa05f(%rip),%rdi        # 43ef0 <__PRETTY_FUNCTION__.3761+0x30>
   39e91:	e8 6a 61 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039e96 <.annobin_s_item_lookup.start>:
   39e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   39e9d:	00 00 00 

0000000000039ea0 <s_item_lookup>:
   39ea0:	41 56                	push   %r14
   39ea2:	4c 8d 35 77 a2 00 00 	lea    0xa277(%rip),%r14        # 44120 <primes>
   39ea9:	41 55                	push   %r13
   39eab:	49 89 f5             	mov    %rsi,%r13
   39eae:	41 54                	push   %r12
   39eb0:	49 89 fc             	mov    %rdi,%r12
   39eb3:	55                   	push   %rbp
   39eb4:	53                   	push   %rbx
   39eb5:	8b 47 08             	mov    0x8(%rdi),%eax
   39eb8:	48 89 f7             	mov    %rsi,%rdi
   39ebb:	49 8b 1c c6          	mov    (%r14,%rax,8),%rbx
   39ebf:	41 ff 54 24 78       	callq  *0x78(%r12)
   39ec4:	31 d2                	xor    %edx,%edx
   39ec6:	48 f7 f3             	div    %rbx
   39ec9:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   39ece:	48 8b 1c d0          	mov    (%rax,%rdx,8),%rbx
   39ed2:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
   39ed7:	48 85 db             	test   %rbx,%rbx
   39eda:	74 27                	je     39f03 <s_item_lookup+0x63>
   39edc:	31 ed                	xor    %ebp,%ebp
   39ede:	eb 0c                	jmp    39eec <s_item_lookup+0x4c>
   39ee0:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   39ee4:	83 c5 01             	add    $0x1,%ebp
   39ee7:	48 85 db             	test   %rbx,%rbx
   39eea:	74 10                	je     39efc <s_item_lookup+0x5c>
   39eec:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   39ef0:	4c 89 ee             	mov    %r13,%rsi
   39ef3:	41 ff 54 24 70       	callq  *0x70(%r12)
   39ef8:	85 c0                	test   %eax,%eax
   39efa:	75 e4                	jne    39ee0 <s_item_lookup+0x40>
   39efc:	41 39 6c 24 0c       	cmp    %ebp,0xc(%r12)
   39f01:	72 0d                	jb     39f10 <s_item_lookup+0x70>
   39f03:	48 89 d8             	mov    %rbx,%rax
   39f06:	5b                   	pop    %rbx
   39f07:	5d                   	pop    %rbp
   39f08:	41 5c                	pop    %r12
   39f0a:	41 5d                	pop    %r13
   39f0c:	41 5e                	pop    %r14
   39f0e:	c3                   	retq   
   39f0f:	90                   	nop
   39f10:	41 8b 44 24 08       	mov    0x8(%r12),%eax
   39f15:	4c 89 e7             	mov    %r12,%rdi
   39f18:	8d 70 05             	lea    0x5(%rax),%esi
   39f1b:	e8 00 fe ff ff       	callq  39d20 <s_zhashx_rehash>
   39f20:	85 c0                	test   %eax,%eax
   39f22:	75 2d                	jne    39f51 <s_item_lookup+0xb1>
   39f24:	41 8b 44 24 08       	mov    0x8(%r12),%eax
   39f29:	4c 89 ef             	mov    %r13,%rdi
   39f2c:	49 8b 2c c6          	mov    (%r14,%rax,8),%rbp
   39f30:	41 ff 54 24 78       	callq  *0x78(%r12)
   39f35:	31 d2                	xor    %edx,%edx
   39f37:	41 83 44 24 0c 01    	addl   $0x1,0xc(%r12)
   39f3d:	48 f7 f5             	div    %rbp
   39f40:	48 89 d8             	mov    %rbx,%rax
   39f43:	5b                   	pop    %rbx
   39f44:	5d                   	pop    %rbp
   39f45:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
   39f4a:	41 5c                	pop    %r12
   39f4c:	41 5d                	pop    %r13
   39f4e:	41 5e                	pop    %r14
   39f50:	c3                   	retq   
   39f51:	48 8d 0d 70 a1 00 00 	lea    0xa170(%rip),%rcx        # 440c8 <__PRETTY_FUNCTION__.3844>
   39f58:	ba 54 01 00 00       	mov    $0x154,%edx
   39f5d:	48 8d 35 6b 9f 00 00 	lea    0x9f6b(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39f64:	48 8d 3d ad 9f 00 00 	lea    0x9fad(%rip),%rdi        # 43f18 <__PRETTY_FUNCTION__.3761+0x58>
   39f6b:	e8 90 60 fd ff       	callq  10000 <__assert_fail@plt>

0000000000039f70 <fzhashx_new>:
   39f70:	f3 0f 1e fa          	endbr64 
   39f74:	53                   	push   %rbx
   39f75:	be 80 00 00 00       	mov    $0x80,%esi
   39f7a:	bf 01 00 00 00       	mov    $0x1,%edi
   39f7f:	e8 8c 62 fd ff       	callq  10210 <calloc@plt>
   39f84:	48 85 c0             	test   %rax,%rax
   39f87:	74 5e                	je     39fe7 <fzhashx_new+0x77>
   39f89:	48 89 c3             	mov    %rax,%rbx
   39f8c:	be 18 00 00 00       	mov    $0x18,%esi
   39f91:	bf 01 00 00 00       	mov    $0x1,%edi
   39f96:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   39f9d:	00 00 00 
   39fa0:	48 89 43 08          	mov    %rax,0x8(%rbx)
   39fa4:	e8 67 62 fd ff       	callq  10210 <calloc@plt>
   39fa9:	48 85 c0             	test   %rax,%rax
   39fac:	0f 84 85 00 00 00    	je     3a037 <fzhashx_new+0xc7>
   39fb2:	48 89 43 10          	mov    %rax,0x10(%rbx)
   39fb6:	48 8d 05 c3 fb ff ff 	lea    -0x43d(%rip),%rax        # 39b80 <s_bernstein_hash>
   39fbd:	48 89 43 78          	mov    %rax,0x78(%rbx)
   39fc1:	48 8d 05 38 f0 ff ff 	lea    -0xfc8(%rip),%rax        # 39000 <fzstr_free>
   39fc8:	48 89 43 68          	mov    %rax,0x68(%rbx)
   39fcc:	48 8b 05 05 90 21 00 	mov    0x219005(%rip),%rax        # 252fd8 <strdup@GLIBC_2.2.5>
   39fd3:	48 89 43 60          	mov    %rax,0x60(%rbx)
   39fd7:	48 8b 05 da 8f 21 00 	mov    0x218fda(%rip),%rax        # 252fb8 <strcmp@GLIBC_2.2.5>
   39fde:	48 89 43 70          	mov    %rax,0x70(%rbx)
   39fe2:	48 89 d8             	mov    %rbx,%rax
   39fe5:	5b                   	pop    %rbx
   39fe6:	c3                   	retq   
   39fe7:	48 8b 1d fa 8f 21 00 	mov    0x218ffa(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   39fee:	41 b8 72 00 00 00    	mov    $0x72,%r8d
   39ff4:	31 c0                	xor    %eax,%eax
   39ff6:	48 8d 0d d2 9e 00 00 	lea    0x9ed2(%rip),%rcx        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   39ffd:	48 8d 15 78 9d 00 00 	lea    0x9d78(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3a004:	be 01 00 00 00       	mov    $0x1,%esi
   3a009:	48 8b 3b             	mov    (%rbx),%rdi
   3a00c:	e8 4f 69 fd ff       	callq  10960 <__fprintf_chk@plt>
   3a011:	48 8b 0b             	mov    (%rbx),%rcx
   3a014:	ba 25 00 00 00       	mov    $0x25,%edx
   3a019:	be 01 00 00 00       	mov    $0x1,%esi
   3a01e:	48 8d 3d 8b 9d 00 00 	lea    0x9d8b(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3a025:	e8 26 69 fd ff       	callq  10950 <fwrite@plt>
   3a02a:	48 8b 3b             	mov    (%rbx),%rdi
   3a02d:	e8 0e 64 fd ff       	callq  10440 <fflush@plt>
   3a032:	e8 b9 5a fd ff       	callq  faf0 <abort@plt>
   3a037:	48 8b 1d aa 8f 21 00 	mov    0x218faa(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3a03e:	41 b8 77 00 00 00    	mov    $0x77,%r8d
   3a044:	48 8d 0d 84 9e 00 00 	lea    0x9e84(%rip),%rcx        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a04b:	48 8d 15 2a 9d 00 00 	lea    0x9d2a(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3a052:	be 01 00 00 00       	mov    $0x1,%esi
   3a057:	48 8b 3b             	mov    (%rbx),%rdi
   3a05a:	eb b0                	jmp    3a00c <fzhashx_new+0x9c>

000000000003a05c <.annobin_fzhashx_destroy.start>:
   3a05c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003a060 <fzhashx_destroy>:
   3a060:	f3 0f 1e fa          	endbr64 
   3a064:	55                   	push   %rbp
   3a065:	53                   	push   %rbx
   3a066:	48 83 ec 08          	sub    $0x8,%rsp
   3a06a:	48 85 ff             	test   %rdi,%rdi
   3a06d:	74 54                	je     3a0c3 <fzhashx_destroy+0x63>
   3a06f:	48 8b 1f             	mov    (%rdi),%rbx
   3a072:	48 89 fd             	mov    %rdi,%rbp
   3a075:	48 85 db             	test   %rbx,%rbx
   3a078:	74 42                	je     3a0bc <fzhashx_destroy+0x5c>
   3a07a:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   3a07f:	74 19                	je     3a09a <fzhashx_destroy+0x3a>
   3a081:	48 89 df             	mov    %rbx,%rdi
   3a084:	e8 07 fc ff ff       	callq  39c90 <s_purge>
   3a089:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   3a08d:	e8 1e 5a fd ff       	callq  fab0 <free@plt>
   3a092:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   3a099:	00 
   3a09a:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   3a09e:	e8 bd 20 00 00       	callq  3c160 <fzlistx_destroy>
   3a0a3:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   3a0a7:	e8 04 5a fd ff       	callq  fab0 <free@plt>
   3a0ac:	48 89 df             	mov    %rbx,%rdi
   3a0af:	e8 fc 59 fd ff       	callq  fab0 <free@plt>
   3a0b4:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   3a0bb:	00 
   3a0bc:	48 83 c4 08          	add    $0x8,%rsp
   3a0c0:	5b                   	pop    %rbx
   3a0c1:	5d                   	pop    %rbp
   3a0c2:	c3                   	retq   
   3a0c3:	48 8d 0d 46 a0 00 00 	lea    0xa046(%rip),%rcx        # 44110 <__PRETTY_FUNCTION__.3787>
   3a0ca:	ba 9d 00 00 00       	mov    $0x9d,%edx
   3a0cf:	48 8d 35 f9 9d 00 00 	lea    0x9df9(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a0d6:	48 8d 3d b5 9c 00 00 	lea    0x9cb5(%rip),%rdi        # 43d92 <__PRETTY_FUNCTION__.3724+0x32>
   3a0dd:	e8 1e 5f fd ff       	callq  10000 <__assert_fail@plt>

000000000003a0e2 <.annobin_fzhashx_destroy.end>:
   3a0e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3a0e9:	00 00 00 00 
   3a0ed:	0f 1f 00             	nopl   (%rax)

000000000003a0f0 <fzhashx_insert>:
   3a0f0:	f3 0f 1e fa          	endbr64 
   3a0f4:	41 55                	push   %r13
   3a0f6:	41 54                	push   %r12
   3a0f8:	55                   	push   %rbp
   3a0f9:	53                   	push   %rbx
   3a0fa:	48 83 ec 08          	sub    $0x8,%rsp
   3a0fe:	48 85 ff             	test   %rdi,%rdi
   3a101:	0f 84 3c 01 00 00    	je     3a243 <fzhashx_insert+0x153>
   3a107:	48 89 f3             	mov    %rsi,%rbx
   3a10a:	48 85 f6             	test   %rsi,%rsi
   3a10d:	0f 84 11 01 00 00    	je     3a224 <fzhashx_insert+0x134>
   3a113:	48 89 d5             	mov    %rdx,%rbp
   3a116:	8b 57 08             	mov    0x8(%rdi),%edx
   3a119:	48 8d 05 00 a0 00 00 	lea    0xa000(%rip),%rax        # 44120 <primes>
   3a120:	49 89 fc             	mov    %rdi,%r12
   3a123:	48 b9 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rcx
   3a12a:	c2 f5 28 
   3a12d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   3a131:	48 89 d6             	mov    %rdx,%rsi
   3a134:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   3a138:	48 89 c2             	mov    %rax,%rdx
   3a13b:	48 c1 e2 04          	shl    $0x4,%rdx
   3a13f:	48 29 c2             	sub    %rax,%rdx
   3a142:	48 c1 ea 02          	shr    $0x2,%rdx
   3a146:	48 89 d0             	mov    %rdx,%rax
   3a149:	48 f7 e1             	mul    %rcx
   3a14c:	48 c1 ea 02          	shr    $0x2,%rdx
   3a150:	48 39 17             	cmp    %rdx,(%rdi)
   3a153:	72 16                	jb     3a16b <fzhashx_insert+0x7b>
   3a155:	83 c6 05             	add    $0x5,%esi
   3a158:	e8 c3 fb ff ff       	callq  39d20 <s_zhashx_rehash>
   3a15d:	85 c0                	test   %eax,%eax
   3a15f:	0f 85 fd 00 00 00    	jne    3a262 <fzhashx_insert+0x172>
   3a165:	41 83 44 24 0c 01    	addl   $0x1,0xc(%r12)
   3a16b:	48 89 de             	mov    %rbx,%rsi
   3a16e:	4c 89 e7             	mov    %r12,%rdi
   3a171:	e8 2a fd ff ff       	callq  39ea0 <s_item_lookup>
   3a176:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   3a17b:	48 85 c0             	test   %rax,%rax
   3a17e:	74 10                	je     3a190 <fzhashx_insert+0xa0>
   3a180:	48 83 c4 08          	add    $0x8,%rsp
   3a184:	89 d0                	mov    %edx,%eax
   3a186:	5b                   	pop    %rbx
   3a187:	5d                   	pop    %rbp
   3a188:	41 5c                	pop    %r12
   3a18a:	41 5d                	pop    %r13
   3a18c:	c3                   	retq   
   3a18d:	0f 1f 00             	nopl   (%rax)
   3a190:	be 28 00 00 00       	mov    $0x28,%esi
   3a195:	bf 01 00 00 00       	mov    $0x1,%edi
   3a19a:	e8 71 60 fd ff       	callq  10210 <calloc@plt>
   3a19f:	49 89 c5             	mov    %rax,%r13
   3a1a2:	48 85 c0             	test   %rax,%rax
   3a1a5:	0f 84 d6 00 00 00    	je     3a281 <fzhashx_insert+0x191>
   3a1ab:	49 8b 44 24 60       	mov    0x60(%r12),%rax
   3a1b0:	48 85 c0             	test   %rax,%rax
   3a1b3:	74 5b                	je     3a210 <fzhashx_insert+0x120>
   3a1b5:	48 89 df             	mov    %rbx,%rdi
   3a1b8:	ff d0                	callq  *%rax
   3a1ba:	49 89 45 18          	mov    %rax,0x18(%r13)
   3a1be:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   3a1c3:	48 85 c0             	test   %rax,%rax
   3a1c6:	74 56                	je     3a21e <fzhashx_insert+0x12e>
   3a1c8:	48 89 ef             	mov    %rbp,%rdi
   3a1cb:	ff d0                	callq  *%rax
   3a1cd:	49 89 45 00          	mov    %rax,0x0(%r13)
   3a1d1:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   3a1d6:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   3a1db:	49 89 45 10          	mov    %rax,0x10(%r13)
   3a1df:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   3a1e3:	48 8b 10             	mov    (%rax),%rdx
   3a1e6:	49 89 55 08          	mov    %rdx,0x8(%r13)
   3a1ea:	31 d2                	xor    %edx,%edx
   3a1ec:	4c 89 28             	mov    %r13,(%rax)
   3a1ef:	49 8b 45 18          	mov    0x18(%r13),%rax
   3a1f3:	49 83 04 24 01       	addq   $0x1,(%r12)
   3a1f8:	49 89 44 24 30       	mov    %rax,0x30(%r12)
   3a1fd:	89 d0                	mov    %edx,%eax
   3a1ff:	4d 89 6c 24 28       	mov    %r13,0x28(%r12)
   3a204:	48 83 c4 08          	add    $0x8,%rsp
   3a208:	5b                   	pop    %rbx
   3a209:	5d                   	pop    %rbp
   3a20a:	41 5c                	pop    %r12
   3a20c:	41 5d                	pop    %r13
   3a20e:	c3                   	retq   
   3a20f:	90                   	nop
   3a210:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   3a215:	49 89 5d 18          	mov    %rbx,0x18(%r13)
   3a219:	48 85 c0             	test   %rax,%rax
   3a21c:	75 aa                	jne    3a1c8 <fzhashx_insert+0xd8>
   3a21e:	49 89 6d 00          	mov    %rbp,0x0(%r13)
   3a222:	eb ad                	jmp    3a1d1 <fzhashx_insert+0xe1>
   3a224:	48 8d 0d c5 9e 00 00 	lea    0x9ec5(%rip),%rcx        # 440f0 <__PRETTY_FUNCTION__.3823>
   3a22b:	ba 02 01 00 00       	mov    $0x102,%edx
   3a230:	48 8d 35 98 9c 00 00 	lea    0x9c98(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a237:	48 8d 3d a7 8f 00 00 	lea    0x8fa7(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3a23e:	e8 bd 5d fd ff       	callq  10000 <__assert_fail@plt>
   3a243:	48 8d 0d a6 9e 00 00 	lea    0x9ea6(%rip),%rcx        # 440f0 <__PRETTY_FUNCTION__.3823>
   3a24a:	ba 01 01 00 00       	mov    $0x101,%edx
   3a24f:	48 8d 35 79 9c 00 00 	lea    0x9c79(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a256:	48 8d 3d 3c 9b 00 00 	lea    0x9b3c(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a25d:	e8 9e 5d fd ff       	callq  10000 <__assert_fail@plt>
   3a262:	48 8d 0d 87 9e 00 00 	lea    0x9e87(%rip),%rcx        # 440f0 <__PRETTY_FUNCTION__.3823>
   3a269:	ba 0a 01 00 00       	mov    $0x10a,%edx
   3a26e:	48 8d 35 5a 9c 00 00 	lea    0x9c5a(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a275:	48 8d 3d 9c 9c 00 00 	lea    0x9c9c(%rip),%rdi        # 43f18 <__PRETTY_FUNCTION__.3761+0x58>
   3a27c:	e8 7f 5d fd ff       	callq  10000 <__assert_fail@plt>
   3a281:	48 8b 1d 60 8d 21 00 	mov    0x218d60(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3a288:	41 b8 1e 01 00 00    	mov    $0x11e,%r8d
   3a28e:	31 c0                	xor    %eax,%eax
   3a290:	48 8d 0d 38 9c 00 00 	lea    0x9c38(%rip),%rcx        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a297:	48 8d 15 de 9a 00 00 	lea    0x9ade(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3a29e:	be 01 00 00 00       	mov    $0x1,%esi
   3a2a3:	48 8b 3b             	mov    (%rbx),%rdi
   3a2a6:	e8 b5 66 fd ff       	callq  10960 <__fprintf_chk@plt>
   3a2ab:	48 8b 0b             	mov    (%rbx),%rcx
   3a2ae:	ba 25 00 00 00       	mov    $0x25,%edx
   3a2b3:	be 01 00 00 00       	mov    $0x1,%esi
   3a2b8:	48 8d 3d f1 9a 00 00 	lea    0x9af1(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3a2bf:	e8 8c 66 fd ff       	callq  10950 <fwrite@plt>
   3a2c4:	48 8b 3b             	mov    (%rbx),%rdi
   3a2c7:	e8 74 61 fd ff       	callq  10440 <fflush@plt>
   3a2cc:	e8 1f 58 fd ff       	callq  faf0 <abort@plt>

000000000003a2d1 <.annobin_fzhashx_insert.end>:
   3a2d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3a2d8:	00 00 00 00 
   3a2dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003a2e0 <fzhashx_update>:
   3a2e0:	f3 0f 1e fa          	endbr64 
   3a2e4:	41 55                	push   %r13
   3a2e6:	41 54                	push   %r12
   3a2e8:	55                   	push   %rbp
   3a2e9:	53                   	push   %rbx
   3a2ea:	48 83 ec 08          	sub    $0x8,%rsp
   3a2ee:	48 85 ff             	test   %rdi,%rdi
   3a2f1:	0f 84 b0 00 00 00    	je     3a3a7 <fzhashx_update+0xc7>
   3a2f7:	49 89 f4             	mov    %rsi,%r12
   3a2fa:	48 85 f6             	test   %rsi,%rsi
   3a2fd:	0f 84 85 00 00 00    	je     3a388 <fzhashx_update+0xa8>
   3a303:	48 89 fb             	mov    %rdi,%rbx
   3a306:	49 89 d5             	mov    %rdx,%r13
   3a309:	e8 92 fb ff ff       	callq  39ea0 <s_item_lookup>
   3a30e:	48 89 c5             	mov    %rax,%rbp
   3a311:	48 85 c0             	test   %rax,%rax
   3a314:	74 5a                	je     3a370 <fzhashx_update+0x90>
   3a316:	48 8b 43 58          	mov    0x58(%rbx),%rax
   3a31a:	48 85 c0             	test   %rax,%rax
   3a31d:	74 29                	je     3a348 <fzhashx_update+0x68>
   3a31f:	48 89 ef             	mov    %rbp,%rdi
   3a322:	ff d0                	callq  *%rax
   3a324:	48 8b 43 50          	mov    0x50(%rbx),%rax
   3a328:	48 85 c0             	test   %rax,%rax
   3a32b:	74 33                	je     3a360 <fzhashx_update+0x80>
   3a32d:	4c 89 ef             	mov    %r13,%rdi
   3a330:	ff d0                	callq  *%rax
   3a332:	48 89 45 00          	mov    %rax,0x0(%rbp)
   3a336:	48 83 c4 08          	add    $0x8,%rsp
   3a33a:	5b                   	pop    %rbx
   3a33b:	5d                   	pop    %rbp
   3a33c:	41 5c                	pop    %r12
   3a33e:	41 5d                	pop    %r13
   3a340:	c3                   	retq   
   3a341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3a348:	48 8b 45 20          	mov    0x20(%rbp),%rax
   3a34c:	48 85 c0             	test   %rax,%rax
   3a34f:	74 d3                	je     3a324 <fzhashx_update+0x44>
   3a351:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3a355:	ff d0                	callq  *%rax
   3a357:	48 8b 43 50          	mov    0x50(%rbx),%rax
   3a35b:	48 85 c0             	test   %rax,%rax
   3a35e:	75 cd                	jne    3a32d <fzhashx_update+0x4d>
   3a360:	4c 89 6d 00          	mov    %r13,0x0(%rbp)
   3a364:	48 83 c4 08          	add    $0x8,%rsp
   3a368:	5b                   	pop    %rbx
   3a369:	5d                   	pop    %rbp
   3a36a:	41 5c                	pop    %r12
   3a36c:	41 5d                	pop    %r13
   3a36e:	c3                   	retq   
   3a36f:	90                   	nop
   3a370:	48 83 c4 08          	add    $0x8,%rsp
   3a374:	4c 89 ea             	mov    %r13,%rdx
   3a377:	4c 89 e6             	mov    %r12,%rsi
   3a37a:	48 89 df             	mov    %rbx,%rdi
   3a37d:	5b                   	pop    %rbx
   3a37e:	5d                   	pop    %rbp
   3a37f:	41 5c                	pop    %r12
   3a381:	41 5d                	pop    %r13
   3a383:	e9 68 fd ff ff       	jmpq   3a0f0 <fzhashx_insert>
   3a388:	48 8d 0d 29 9d 00 00 	lea    0x9d29(%rip),%rcx        # 440b8 <__PRETTY_FUNCTION__.3850>
   3a38f:	ba 68 01 00 00       	mov    $0x168,%edx
   3a394:	48 8d 35 34 9b 00 00 	lea    0x9b34(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a39b:	48 8d 3d 43 8e 00 00 	lea    0x8e43(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3a3a2:	e8 59 5c fd ff       	callq  10000 <__assert_fail@plt>
   3a3a7:	48 8d 0d 0a 9d 00 00 	lea    0x9d0a(%rip),%rcx        # 440b8 <__PRETTY_FUNCTION__.3850>
   3a3ae:	ba 67 01 00 00       	mov    $0x167,%edx
   3a3b3:	48 8d 35 15 9b 00 00 	lea    0x9b15(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a3ba:	48 8d 3d d8 99 00 00 	lea    0x99d8(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a3c1:	e8 3a 5c fd ff       	callq  10000 <__assert_fail@plt>

000000000003a3c6 <.annobin_fzhashx_delete.start>:
   3a3c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3a3cd:	00 00 00 

000000000003a3d0 <fzhashx_delete>:
   3a3d0:	f3 0f 1e fa          	endbr64 
   3a3d4:	53                   	push   %rbx
   3a3d5:	48 85 ff             	test   %rdi,%rdi
   3a3d8:	74 47                	je     3a421 <fzhashx_delete+0x51>
   3a3da:	48 85 f6             	test   %rsi,%rsi
   3a3dd:	74 23                	je     3a402 <fzhashx_delete+0x32>
   3a3df:	48 89 fb             	mov    %rdi,%rbx
   3a3e2:	e8 b9 fa ff ff       	callq  39ea0 <s_item_lookup>
   3a3e7:	48 85 c0             	test   %rax,%rax
   3a3ea:	74 14                	je     3a400 <fzhashx_delete+0x30>
   3a3ec:	48 89 df             	mov    %rbx,%rdi
   3a3ef:	ba 01 00 00 00       	mov    $0x1,%edx
   3a3f4:	48 89 c6             	mov    %rax,%rsi
   3a3f7:	5b                   	pop    %rbx
   3a3f8:	e9 c3 f7 ff ff       	jmpq   39bc0 <s_item_destroy>
   3a3fd:	0f 1f 00             	nopl   (%rax)
   3a400:	5b                   	pop    %rbx
   3a401:	c3                   	retq   
   3a402:	48 8d 0d 9f 9c 00 00 	lea    0x9c9f(%rip),%rcx        # 440a8 <__PRETTY_FUNCTION__.3856>
   3a409:	ba 85 01 00 00       	mov    $0x185,%edx
   3a40e:	48 8d 35 ba 9a 00 00 	lea    0x9aba(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a415:	48 8d 3d c9 8d 00 00 	lea    0x8dc9(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3a41c:	e8 df 5b fd ff       	callq  10000 <__assert_fail@plt>
   3a421:	48 8d 0d 80 9c 00 00 	lea    0x9c80(%rip),%rcx        # 440a8 <__PRETTY_FUNCTION__.3856>
   3a428:	ba 84 01 00 00       	mov    $0x184,%edx
   3a42d:	48 8d 35 9b 9a 00 00 	lea    0x9a9b(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a434:	48 8d 3d 5e 99 00 00 	lea    0x995e(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a43b:	e8 c0 5b fd ff       	callq  10000 <__assert_fail@plt>

000000000003a440 <fzhashx_purge>:
   3a440:	f3 0f 1e fa          	endbr64 
   3a444:	55                   	push   %rbp
   3a445:	53                   	push   %rbx
   3a446:	48 83 ec 08          	sub    $0x8,%rsp
   3a44a:	48 85 ff             	test   %rdi,%rdi
   3a44d:	74 52                	je     3a4a1 <fzhashx_purge+0x61>
   3a44f:	48 89 fb             	mov    %rdi,%rbx
   3a452:	e8 39 f8 ff ff       	callq  39c90 <s_purge>
   3a457:	8b 43 08             	mov    0x8(%rbx),%eax
   3a45a:	85 c0                	test   %eax,%eax
   3a45c:	75 0a                	jne    3a468 <fzhashx_purge+0x28>
   3a45e:	48 83 c4 08          	add    $0x8,%rsp
   3a462:	5b                   	pop    %rbx
   3a463:	5d                   	pop    %rbp
   3a464:	c3                   	retq   
   3a465:	0f 1f 00             	nopl   (%rax)
   3a468:	be 18 00 00 00       	mov    $0x18,%esi
   3a46d:	bf 01 00 00 00       	mov    $0x1,%edi
   3a472:	e8 99 5d fd ff       	callq  10210 <calloc@plt>
   3a477:	48 89 c5             	mov    %rax,%rbp
   3a47a:	48 85 c0             	test   %rax,%rax
   3a47d:	74 41                	je     3a4c0 <fzhashx_purge+0x80>
   3a47f:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   3a483:	e8 28 56 fd ff       	callq  fab0 <free@plt>
   3a488:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   3a48c:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   3a493:	00 00 00 
   3a496:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3a49a:	48 83 c4 08          	add    $0x8,%rsp
   3a49e:	5b                   	pop    %rbx
   3a49f:	5d                   	pop    %rbp
   3a4a0:	c3                   	retq   
   3a4a1:	48 8d 0d f0 9b 00 00 	lea    0x9bf0(%rip),%rcx        # 44098 <__PRETTY_FUNCTION__.3861>
   3a4a8:	ba 94 01 00 00       	mov    $0x194,%edx
   3a4ad:	48 8d 35 1b 9a 00 00 	lea    0x9a1b(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a4b4:	48 8d 3d de 98 00 00 	lea    0x98de(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a4bb:	e8 40 5b fd ff       	callq  10000 <__assert_fail@plt>
   3a4c0:	48 8b 1d 21 8b 21 00 	mov    0x218b21(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3a4c7:	41 b8 9a 01 00 00    	mov    $0x19a,%r8d
   3a4cd:	31 c0                	xor    %eax,%eax
   3a4cf:	48 8d 0d f9 99 00 00 	lea    0x99f9(%rip),%rcx        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a4d6:	48 8d 15 9f 98 00 00 	lea    0x989f(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3a4dd:	be 01 00 00 00       	mov    $0x1,%esi
   3a4e2:	48 8b 3b             	mov    (%rbx),%rdi
   3a4e5:	e8 76 64 fd ff       	callq  10960 <__fprintf_chk@plt>
   3a4ea:	48 8b 0b             	mov    (%rbx),%rcx
   3a4ed:	ba 25 00 00 00       	mov    $0x25,%edx
   3a4f2:	be 01 00 00 00       	mov    $0x1,%esi
   3a4f7:	48 8d 3d b2 98 00 00 	lea    0x98b2(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3a4fe:	e8 4d 64 fd ff       	callq  10950 <fwrite@plt>
   3a503:	48 8b 3b             	mov    (%rbx),%rdi
   3a506:	e8 35 5f fd ff       	callq  10440 <fflush@plt>
   3a50b:	e8 e0 55 fd ff       	callq  faf0 <abort@plt>

000000000003a510 <fzhashx_lookup>:
   3a510:	f3 0f 1e fa          	endbr64 
   3a514:	53                   	push   %rbx
   3a515:	48 85 ff             	test   %rdi,%rdi
   3a518:	74 23                	je     3a53d <fzhashx_lookup+0x2d>
   3a51a:	48 85 f6             	test   %rsi,%rsi
   3a51d:	74 3d                	je     3a55c <fzhashx_lookup+0x4c>
   3a51f:	48 89 fb             	mov    %rdi,%rbx
   3a522:	e8 79 f9 ff ff       	callq  39ea0 <s_item_lookup>
   3a527:	48 85 c0             	test   %rax,%rax
   3a52a:	74 0f                	je     3a53b <fzhashx_lookup+0x2b>
   3a52c:	48 8b 50 18          	mov    0x18(%rax),%rdx
   3a530:	48 89 43 28          	mov    %rax,0x28(%rbx)
   3a534:	48 8b 00             	mov    (%rax),%rax
   3a537:	48 89 53 30          	mov    %rdx,0x30(%rbx)
   3a53b:	5b                   	pop    %rbx
   3a53c:	c3                   	retq   
   3a53d:	48 8d 0d 44 9b 00 00 	lea    0x9b44(%rip),%rcx        # 44088 <__PRETTY_FUNCTION__.3868>
   3a544:	ba ab 01 00 00       	mov    $0x1ab,%edx
   3a549:	48 8d 35 7f 99 00 00 	lea    0x997f(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a550:	48 8d 3d 42 98 00 00 	lea    0x9842(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a557:	e8 a4 5a fd ff       	callq  10000 <__assert_fail@plt>
   3a55c:	48 8d 0d 25 9b 00 00 	lea    0x9b25(%rip),%rcx        # 44088 <__PRETTY_FUNCTION__.3868>
   3a563:	ba ac 01 00 00       	mov    $0x1ac,%edx
   3a568:	48 8d 35 60 99 00 00 	lea    0x9960(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a56f:	48 8d 3d 6f 8c 00 00 	lea    0x8c6f(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3a576:	e8 85 5a fd ff       	callq  10000 <__assert_fail@plt>

000000000003a57b <.annobin_fzhashx_lookup.end>:
   3a57b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003a580 <fzhashx_rename>:
   3a580:	f3 0f 1e fa          	endbr64 
   3a584:	41 54                	push   %r12
   3a586:	49 89 d4             	mov    %rdx,%r12
   3a589:	55                   	push   %rbp
   3a58a:	53                   	push   %rbx
   3a58b:	48 89 fb             	mov    %rdi,%rbx
   3a58e:	e8 0d f9 ff ff       	callq  39ea0 <s_item_lookup>
   3a593:	4c 89 e6             	mov    %r12,%rsi
   3a596:	48 89 df             	mov    %rbx,%rdi
   3a599:	48 89 c5             	mov    %rax,%rbp
   3a59c:	e8 ff f8 ff ff       	callq  39ea0 <s_item_lookup>
   3a5a1:	48 85 ed             	test   %rbp,%rbp
   3a5a4:	74 7a                	je     3a620 <fzhashx_rename+0xa0>
   3a5a6:	48 85 c0             	test   %rax,%rax
   3a5a9:	75 75                	jne    3a620 <fzhashx_rename+0xa0>
   3a5ab:	31 d2                	xor    %edx,%edx
   3a5ad:	48 89 ee             	mov    %rbp,%rsi
   3a5b0:	48 89 df             	mov    %rbx,%rdi
   3a5b3:	e8 08 f6 ff ff       	callq  39bc0 <s_item_destroy>
   3a5b8:	48 8b 43 68          	mov    0x68(%rbx),%rax
   3a5bc:	48 85 c0             	test   %rax,%rax
   3a5bf:	74 06                	je     3a5c7 <fzhashx_rename+0x47>
   3a5c1:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   3a5c5:	ff d0                	callq  *%rax
   3a5c7:	48 8b 43 60          	mov    0x60(%rbx),%rax
   3a5cb:	48 85 c0             	test   %rax,%rax
   3a5ce:	74 40                	je     3a610 <fzhashx_rename+0x90>
   3a5d0:	4c 89 e7             	mov    %r12,%rdi
   3a5d3:	ff d0                	callq  *%rax
   3a5d5:	48 89 45 18          	mov    %rax,0x18(%rbp)
   3a5d9:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3a5dd:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   3a5e1:	48 89 45 10          	mov    %rax,0x10(%rbp)
   3a5e5:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   3a5e9:	48 8b 10             	mov    (%rax),%rdx
   3a5ec:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   3a5f0:	48 89 28             	mov    %rbp,(%rax)
   3a5f3:	48 8b 45 18          	mov    0x18(%rbp),%rax
   3a5f7:	48 83 03 01          	addq   $0x1,(%rbx)
   3a5fb:	48 89 6b 28          	mov    %rbp,0x28(%rbx)
   3a5ff:	48 89 43 30          	mov    %rax,0x30(%rbx)
   3a603:	31 c0                	xor    %eax,%eax
   3a605:	5b                   	pop    %rbx
   3a606:	5d                   	pop    %rbp
   3a607:	41 5c                	pop    %r12
   3a609:	c3                   	retq   
   3a60a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3a610:	4c 89 65 18          	mov    %r12,0x18(%rbp)
   3a614:	eb c3                	jmp    3a5d9 <fzhashx_rename+0x59>
   3a616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3a61d:	00 00 00 
   3a620:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3a625:	eb de                	jmp    3a605 <fzhashx_rename+0x85>

000000000003a627 <.annobin_fzhashx_freefn.start>:
   3a627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3a62e:	00 00 

000000000003a630 <fzhashx_freefn>:
   3a630:	f3 0f 1e fa          	endbr64 
   3a634:	53                   	push   %rbx
   3a635:	48 85 ff             	test   %rdi,%rdi
   3a638:	74 1b                	je     3a655 <fzhashx_freefn+0x25>
   3a63a:	48 85 f6             	test   %rsi,%rsi
   3a63d:	74 35                	je     3a674 <fzhashx_freefn+0x44>
   3a63f:	48 89 d3             	mov    %rdx,%rbx
   3a642:	e8 59 f8 ff ff       	callq  39ea0 <s_item_lookup>
   3a647:	48 85 c0             	test   %rax,%rax
   3a64a:	74 07                	je     3a653 <fzhashx_freefn+0x23>
   3a64c:	48 89 58 20          	mov    %rbx,0x20(%rax)
   3a650:	48 8b 00             	mov    (%rax),%rax
   3a653:	5b                   	pop    %rbx
   3a654:	c3                   	retq   
   3a655:	48 8d 0d 1c 9a 00 00 	lea    0x9a1c(%rip),%rcx        # 44078 <__PRETTY_FUNCTION__.3882>
   3a65c:	ba e4 01 00 00       	mov    $0x1e4,%edx
   3a661:	48 8d 35 67 98 00 00 	lea    0x9867(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a668:	48 8d 3d 2a 97 00 00 	lea    0x972a(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a66f:	e8 8c 59 fd ff       	callq  10000 <__assert_fail@plt>
   3a674:	48 8d 0d fd 99 00 00 	lea    0x99fd(%rip),%rcx        # 44078 <__PRETTY_FUNCTION__.3882>
   3a67b:	ba e5 01 00 00       	mov    $0x1e5,%edx
   3a680:	48 8d 35 48 98 00 00 	lea    0x9848(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a687:	48 8d 3d 57 8b 00 00 	lea    0x8b57(%rip),%rdi        # 431e5 <__PRETTY_FUNCTION__.11024+0xa5>
   3a68e:	e8 6d 59 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a693 <.annobin_fzhashx_freefn.end>:
   3a693:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3a69a:	00 00 00 00 
   3a69e:	66 90                	xchg   %ax,%ax

000000000003a6a0 <fzhashx_size>:
   3a6a0:	f3 0f 1e fa          	endbr64 
   3a6a4:	48 85 ff             	test   %rdi,%rdi
   3a6a7:	74 04                	je     3a6ad <fzhashx_size+0xd>
   3a6a9:	48 8b 07             	mov    (%rdi),%rax
   3a6ac:	c3                   	retq   
   3a6ad:	50                   	push   %rax
   3a6ae:	48 8d 0d b3 99 00 00 	lea    0x99b3(%rip),%rcx        # 44068 <__PRETTY_FUNCTION__.3887>
   3a6b5:	ba f7 01 00 00       	mov    $0x1f7,%edx
   3a6ba:	48 8d 35 0e 98 00 00 	lea    0x980e(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a6c1:	48 8d 3d d1 96 00 00 	lea    0x96d1(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a6c8:	e8 33 59 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a6cd <.annobin_fzhashx_keys.start>:
   3a6cd:	0f 1f 00             	nopl   (%rax)

000000000003a6d0 <fzhashx_keys>:
   3a6d0:	f3 0f 1e fa          	endbr64 
   3a6d4:	41 55                	push   %r13
   3a6d6:	41 54                	push   %r12
   3a6d8:	55                   	push   %rbp
   3a6d9:	53                   	push   %rbx
   3a6da:	48 83 ec 28          	sub    $0x28,%rsp
   3a6de:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3a6e5:	00 00 
   3a6e7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3a6ec:	31 c0                	xor    %eax,%eax
   3a6ee:	48 85 ff             	test   %rdi,%rdi
   3a6f1:	0f 84 c2 00 00 00    	je     3a7b9 <fzhashx_keys+0xe9>
   3a6f7:	48 89 fd             	mov    %rdi,%rbp
   3a6fa:	e8 b1 10 00 00       	callq  3b7b0 <fzlistx_new>
   3a6ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   3a704:	48 85 c0             	test   %rax,%rax
   3a707:	74 77                	je     3a780 <fzhashx_keys+0xb0>
   3a709:	48 8b 75 68          	mov    0x68(%rbp),%rsi
   3a70d:	48 89 c7             	mov    %rax,%rdi
   3a710:	e8 ab 1e 00 00       	callq  3c5c0 <fzlistx_set_destructor>
   3a715:	48 8b 75 60          	mov    0x60(%rbp),%rsi
   3a719:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3a71e:	e8 cd 1e 00 00       	callq  3c5f0 <fzlistx_set_duplicator>
   3a723:	8b 55 08             	mov    0x8(%rbp),%edx
   3a726:	48 8d 05 f3 99 00 00 	lea    0x99f3(%rip),%rax        # 44120 <primes>
   3a72d:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   3a731:	4d 85 ed             	test   %r13,%r13
   3a734:	74 77                	je     3a7ad <fzhashx_keys+0xdd>
   3a736:	45 31 e4             	xor    %r12d,%r12d
   3a739:	31 c0                	xor    %eax,%eax
   3a73b:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   3a73f:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   3a743:	48 85 db             	test   %rbx,%rbx
   3a746:	75 11                	jne    3a759 <fzhashx_keys+0x89>
   3a748:	eb 56                	jmp    3a7a0 <fzhashx_keys+0xd0>
   3a74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3a750:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3a754:	48 85 db             	test   %rbx,%rbx
   3a757:	74 47                	je     3a7a0 <fzhashx_keys+0xd0>
   3a759:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3a75d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3a762:	e8 e9 11 00 00       	callq  3b950 <fzlistx_add_end>
   3a767:	48 85 c0             	test   %rax,%rax
   3a76a:	75 e4                	jne    3a750 <fzhashx_keys+0x80>
   3a76c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   3a771:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3a776:	e8 e5 19 00 00       	callq  3c160 <fzlistx_destroy>
   3a77b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3a780:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3a785:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3a78c:	00 00 
   3a78e:	75 24                	jne    3a7b4 <fzhashx_keys+0xe4>
   3a790:	48 83 c4 28          	add    $0x28,%rsp
   3a794:	5b                   	pop    %rbx
   3a795:	5d                   	pop    %rbp
   3a796:	41 5c                	pop    %r12
   3a798:	41 5d                	pop    %r13
   3a79a:	c3                   	retq   
   3a79b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3a7a0:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   3a7a5:	49 89 c4             	mov    %rax,%r12
   3a7a8:	4c 39 e8             	cmp    %r13,%rax
   3a7ab:	72 8e                	jb     3a73b <fzhashx_keys+0x6b>
   3a7ad:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3a7b2:	eb cc                	jmp    3a780 <fzhashx_keys+0xb0>
   3a7b4:	e8 97 56 fd ff       	callq  fe50 <__stack_chk_fail@plt>
   3a7b9:	48 8d 0d 98 98 00 00 	lea    0x9898(%rip),%rcx        # 44058 <__PRETTY_FUNCTION__.3891>
   3a7c0:	ba 04 02 00 00       	mov    $0x204,%edx
   3a7c5:	48 8d 35 03 97 00 00 	lea    0x9703(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a7cc:	48 8d 3d c6 95 00 00 	lea    0x95c6(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a7d3:	e8 28 58 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a7d8 <.annobin_fzhashx_keys.end>:
   3a7d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3a7df:	00 

000000000003a7e0 <fzhashx_values>:
   3a7e0:	f3 0f 1e fa          	endbr64 
   3a7e4:	41 55                	push   %r13
   3a7e6:	41 54                	push   %r12
   3a7e8:	55                   	push   %rbp
   3a7e9:	53                   	push   %rbx
   3a7ea:	48 83 ec 28          	sub    $0x28,%rsp
   3a7ee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3a7f5:	00 00 
   3a7f7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3a7fc:	31 c0                	xor    %eax,%eax
   3a7fe:	48 85 ff             	test   %rdi,%rdi
   3a801:	0f 84 c2 00 00 00    	je     3a8c9 <fzhashx_values+0xe9>
   3a807:	48 89 fd             	mov    %rdi,%rbp
   3a80a:	e8 a1 0f 00 00       	callq  3b7b0 <fzlistx_new>
   3a80f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   3a814:	48 85 c0             	test   %rax,%rax
   3a817:	74 76                	je     3a88f <fzhashx_values+0xaf>
   3a819:	48 8b 75 58          	mov    0x58(%rbp),%rsi
   3a81d:	48 89 c7             	mov    %rax,%rdi
   3a820:	e8 9b 1d 00 00       	callq  3c5c0 <fzlistx_set_destructor>
   3a825:	48 8b 75 50          	mov    0x50(%rbp),%rsi
   3a829:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3a82e:	e8 bd 1d 00 00       	callq  3c5f0 <fzlistx_set_duplicator>
   3a833:	8b 55 08             	mov    0x8(%rbp),%edx
   3a836:	48 8d 05 e3 98 00 00 	lea    0x98e3(%rip),%rax        # 44120 <primes>
   3a83d:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   3a841:	4d 85 ed             	test   %r13,%r13
   3a844:	74 77                	je     3a8bd <fzhashx_values+0xdd>
   3a846:	45 31 e4             	xor    %r12d,%r12d
   3a849:	31 c0                	xor    %eax,%eax
   3a84b:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   3a84f:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   3a853:	48 85 db             	test   %rbx,%rbx
   3a856:	75 11                	jne    3a869 <fzhashx_values+0x89>
   3a858:	eb 56                	jmp    3a8b0 <fzhashx_values+0xd0>
   3a85a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3a860:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3a864:	48 85 db             	test   %rbx,%rbx
   3a867:	74 47                	je     3a8b0 <fzhashx_values+0xd0>
   3a869:	48 8b 33             	mov    (%rbx),%rsi
   3a86c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   3a871:	e8 da 10 00 00       	callq  3b950 <fzlistx_add_end>
   3a876:	48 85 c0             	test   %rax,%rax
   3a879:	75 e5                	jne    3a860 <fzhashx_values+0x80>
   3a87b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   3a880:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3a885:	e8 d6 18 00 00       	callq  3c160 <fzlistx_destroy>
   3a88a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3a88f:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3a894:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3a89b:	00 00 
   3a89d:	75 25                	jne    3a8c4 <fzhashx_values+0xe4>
   3a89f:	48 83 c4 28          	add    $0x28,%rsp
   3a8a3:	5b                   	pop    %rbx
   3a8a4:	5d                   	pop    %rbp
   3a8a5:	41 5c                	pop    %r12
   3a8a7:	41 5d                	pop    %r13
   3a8a9:	c3                   	retq   
   3a8aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3a8b0:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   3a8b5:	49 89 c4             	mov    %rax,%r12
   3a8b8:	4c 39 e8             	cmp    %r13,%rax
   3a8bb:	72 8e                	jb     3a84b <fzhashx_values+0x6b>
   3a8bd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3a8c2:	eb cb                	jmp    3a88f <fzhashx_values+0xaf>
   3a8c4:	e8 87 55 fd ff       	callq  fe50 <__stack_chk_fail@plt>
   3a8c9:	48 8d 0d 78 97 00 00 	lea    0x9778(%rip),%rcx        # 44048 <__PRETTY_FUNCTION__.3905>
   3a8d0:	ba 21 02 00 00       	mov    $0x221,%edx
   3a8d5:	48 8d 35 f3 95 00 00 	lea    0x95f3(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a8dc:	48 8d 3d b6 94 00 00 	lea    0x94b6(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a8e3:	e8 18 57 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a8e8 <.annobin_fzhashx_next.start>:
   3a8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3a8ef:	00 

000000000003a8f0 <fzhashx_next>:
   3a8f0:	f3 0f 1e fa          	endbr64 
   3a8f4:	48 85 ff             	test   %rdi,%rdi
   3a8f7:	74 6c                	je     3a965 <fzhashx_next+0x75>
   3a8f9:	8b 57 08             	mov    0x8(%rdi),%edx
   3a8fc:	48 8d 05 1d 98 00 00 	lea    0x981d(%rip),%rax        # 44120 <primes>
   3a903:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
   3a907:	48 8b 47 28          	mov    0x28(%rdi),%rax
   3a90b:	48 85 c0             	test   %rax,%rax
   3a90e:	75 32                	jne    3a942 <fzhashx_next+0x52>
   3a910:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   3a914:	48 83 e9 01          	sub    $0x1,%rcx
   3a918:	48 39 d1             	cmp    %rdx,%rcx
   3a91b:	76 38                	jbe    3a955 <fzhashx_next+0x65>
   3a91d:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   3a921:	eb 0a                	jmp    3a92d <fzhashx_next+0x3d>
   3a923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3a928:	48 39 ca             	cmp    %rcx,%rdx
   3a92b:	73 33                	jae    3a960 <fzhashx_next+0x70>
   3a92d:	48 83 c2 01          	add    $0x1,%rdx
   3a931:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
   3a935:	48 89 47 28          	mov    %rax,0x28(%rdi)
   3a939:	48 85 c0             	test   %rax,%rax
   3a93c:	74 ea                	je     3a928 <fzhashx_next+0x38>
   3a93e:	48 89 57 20          	mov    %rdx,0x20(%rdi)
   3a942:	48 8b 50 18          	mov    0x18(%rax),%rdx
   3a946:	48 89 57 30          	mov    %rdx,0x30(%rdi)
   3a94a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   3a94e:	48 8b 00             	mov    (%rax),%rax
   3a951:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   3a955:	c3                   	retq   
   3a956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3a95d:	00 00 00 
   3a960:	48 89 57 20          	mov    %rdx,0x20(%rdi)
   3a964:	c3                   	retq   
   3a965:	50                   	push   %rax
   3a966:	48 8d 0d bb 96 00 00 	lea    0x96bb(%rip),%rcx        # 44028 <__PRETTY_FUNCTION__.3923>
   3a96d:	ba 56 02 00 00       	mov    $0x256,%edx
   3a972:	48 8d 35 56 95 00 00 	lea    0x9556(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a979:	48 8d 3d 19 94 00 00 	lea    0x9419(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a980:	e8 7b 56 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a985 <.annobin_fzhashx_first.start>:
   3a985:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3a98c:	00 00 00 00 

000000000003a990 <fzhashx_first>:
   3a990:	f3 0f 1e fa          	endbr64 
   3a994:	48 85 ff             	test   %rdi,%rdi
   3a997:	74 18                	je     3a9b1 <fzhashx_first+0x21>
   3a999:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3a99d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   3a9a4:	00 
   3a9a5:	48 8b 00             	mov    (%rax),%rax
   3a9a8:	48 89 47 28          	mov    %rax,0x28(%rdi)
   3a9ac:	e9 3f ff ff ff       	jmpq   3a8f0 <fzhashx_next>
   3a9b1:	50                   	push   %rax
   3a9b2:	48 8d 0d 7f 96 00 00 	lea    0x967f(%rip),%rcx        # 44038 <__PRETTY_FUNCTION__.3919>
   3a9b9:	ba 43 02 00 00       	mov    $0x243,%edx
   3a9be:	48 8d 35 0a 95 00 00 	lea    0x950a(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3a9c5:	48 8d 3d cd 93 00 00 	lea    0x93cd(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3a9cc:	e8 2f 56 fd ff       	callq  10000 <__assert_fail@plt>

000000000003a9d1 <.annobin_fzhashx_cursor.start>:
   3a9d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3a9d8:	00 00 00 00 
   3a9dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003a9e0 <fzhashx_cursor>:
   3a9e0:	f3 0f 1e fa          	endbr64 
   3a9e4:	48 85 ff             	test   %rdi,%rdi
   3a9e7:	74 05                	je     3a9ee <fzhashx_cursor+0xe>
   3a9e9:	48 8b 47 30          	mov    0x30(%rdi),%rax
   3a9ed:	c3                   	retq   
   3a9ee:	50                   	push   %rax
   3a9ef:	48 8d 0d 22 96 00 00 	lea    0x9622(%rip),%rcx        # 44018 <__PRETTY_FUNCTION__.3932>
   3a9f6:	ba 74 02 00 00       	mov    $0x274,%edx
   3a9fb:	48 8d 35 cd 94 00 00 	lea    0x94cd(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3aa02:	48 8d 3d 90 93 00 00 	lea    0x9390(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3aa09:	e8 f2 55 fd ff       	callq  10000 <__assert_fail@plt>

000000000003aa0e <.annobin_fzhashx_cursor.end>:
   3aa0e:	66 90                	xchg   %ax,%ax

000000000003aa10 <fzhashx_dup>:
   3aa10:	f3 0f 1e fa          	endbr64 
   3aa14:	41 56                	push   %r14
   3aa16:	41 55                	push   %r13
   3aa18:	41 54                	push   %r12
   3aa1a:	55                   	push   %rbp
   3aa1b:	53                   	push   %rbx
   3aa1c:	48 83 ec 10          	sub    $0x10,%rsp
   3aa20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3aa27:	00 00 
   3aa29:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3aa2e:	31 c0                	xor    %eax,%eax
   3aa30:	48 85 ff             	test   %rdi,%rdi
   3aa33:	0f 84 db 00 00 00    	je     3ab14 <fzhashx_dup+0x104>
   3aa39:	49 89 fc             	mov    %rdi,%r12
   3aa3c:	e8 2f f5 ff ff       	callq  39f70 <fzhashx_new>
   3aa41:	48 89 c7             	mov    %rax,%rdi
   3aa44:	48 89 04 24          	mov    %rax,(%rsp)
   3aa48:	48 85 c0             	test   %rax,%rax
   3aa4b:	0f 84 a3 00 00 00    	je     3aaf4 <fzhashx_dup+0xe4>
   3aa51:	49 8b 44 24 58       	mov    0x58(%r12),%rax
   3aa56:	41 8b 54 24 08       	mov    0x8(%r12),%edx
   3aa5b:	48 89 47 58          	mov    %rax,0x58(%rdi)
   3aa5f:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   3aa64:	48 89 47 50          	mov    %rax,0x50(%rdi)
   3aa68:	49 8b 44 24 60       	mov    0x60(%r12),%rax
   3aa6d:	48 89 47 60          	mov    %rax,0x60(%rdi)
   3aa71:	49 8b 44 24 68       	mov    0x68(%r12),%rax
   3aa76:	48 89 47 68          	mov    %rax,0x68(%rdi)
   3aa7a:	49 8b 44 24 70       	mov    0x70(%r12),%rax
   3aa7f:	48 89 47 70          	mov    %rax,0x70(%rdi)
   3aa83:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   3aa88:	48 89 47 78          	mov    %rax,0x78(%rdi)
   3aa8c:	48 8d 05 8d 96 00 00 	lea    0x968d(%rip),%rax        # 44120 <primes>
   3aa93:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   3aa97:	4d 85 ed             	test   %r13,%r13
   3aa9a:	74 58                	je     3aaf4 <fzhashx_dup+0xe4>
   3aa9c:	31 ed                	xor    %ebp,%ebp
   3aa9e:	31 c0                	xor    %eax,%eax
   3aaa0:	49 89 e6             	mov    %rsp,%r14
   3aaa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3aaa8:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   3aaad:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   3aab1:	48 85 db             	test   %rbx,%rbx
   3aab4:	75 17                	jne    3aacd <fzhashx_dup+0xbd>
   3aab6:	eb 31                	jmp    3aae9 <fzhashx_dup+0xd9>
   3aab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3aabf:	00 
   3aac0:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3aac4:	48 8b 3c 24          	mov    (%rsp),%rdi
   3aac8:	48 85 db             	test   %rbx,%rbx
   3aacb:	74 1c                	je     3aae9 <fzhashx_dup+0xd9>
   3aacd:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3aad1:	48 8b 13             	mov    (%rbx),%rdx
   3aad4:	e8 17 f6 ff ff       	callq  3a0f0 <fzhashx_insert>
   3aad9:	85 c0                	test   %eax,%eax
   3aadb:	74 e3                	je     3aac0 <fzhashx_dup+0xb0>
   3aadd:	4c 89 f7             	mov    %r14,%rdi
   3aae0:	e8 7b f5 ff ff       	callq  3a060 <fzhashx_destroy>
   3aae5:	48 8b 3c 24          	mov    (%rsp),%rdi
   3aae9:	8d 45 01             	lea    0x1(%rbp),%eax
   3aaec:	48 89 c5             	mov    %rax,%rbp
   3aaef:	4c 39 e8             	cmp    %r13,%rax
   3aaf2:	72 b4                	jb     3aaa8 <fzhashx_dup+0x98>
   3aaf4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   3aaf9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3ab00:	00 00 
   3ab02:	48 89 f8             	mov    %rdi,%rax
   3ab05:	75 11                	jne    3ab18 <fzhashx_dup+0x108>
   3ab07:	48 83 c4 10          	add    $0x10,%rsp
   3ab0b:	5b                   	pop    %rbx
   3ab0c:	5d                   	pop    %rbp
   3ab0d:	41 5c                	pop    %r12
   3ab0f:	41 5d                	pop    %r13
   3ab11:	41 5e                	pop    %r14
   3ab13:	c3                   	retq   
   3ab14:	31 ff                	xor    %edi,%edi
   3ab16:	eb dc                	jmp    3aaf4 <fzhashx_dup+0xe4>
   3ab18:	e8 33 53 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003ab1d <.annobin_fzhashx_dup.end>:
   3ab1d:	0f 1f 00             	nopl   (%rax)

000000000003ab20 <fzhashx_set_destructor>:
   3ab20:	f3 0f 1e fa          	endbr64 
   3ab24:	48 85 ff             	test   %rdi,%rdi
   3ab27:	74 05                	je     3ab2e <fzhashx_set_destructor+0xe>
   3ab29:	48 89 77 58          	mov    %rsi,0x58(%rdi)
   3ab2d:	c3                   	retq   
   3ab2e:	50                   	push   %rax
   3ab2f:	48 8d 0d ca 94 00 00 	lea    0x94ca(%rip),%rcx        # 44000 <__PRETTY_FUNCTION__.3950>
   3ab36:	ba f3 03 00 00       	mov    $0x3f3,%edx
   3ab3b:	48 8d 35 8d 93 00 00 	lea    0x938d(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3ab42:	48 8d 3d 50 92 00 00 	lea    0x9250(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ab49:	e8 b2 54 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ab4e <.annobin_fzhashx_set_destructor.end>:
   3ab4e:	66 90                	xchg   %ax,%ax

000000000003ab50 <fzhashx_set_duplicator>:
   3ab50:	f3 0f 1e fa          	endbr64 
   3ab54:	48 85 ff             	test   %rdi,%rdi
   3ab57:	74 05                	je     3ab5e <fzhashx_set_duplicator+0xe>
   3ab59:	48 89 77 50          	mov    %rsi,0x50(%rdi)
   3ab5d:	c3                   	retq   
   3ab5e:	50                   	push   %rax
   3ab5f:	48 8d 0d 7a 94 00 00 	lea    0x947a(%rip),%rcx        # 43fe0 <__PRETTY_FUNCTION__.3955>
   3ab66:	ba ff 03 00 00       	mov    $0x3ff,%edx
   3ab6b:	48 8d 35 5d 93 00 00 	lea    0x935d(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3ab72:	48 8d 3d 20 92 00 00 	lea    0x9220(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ab79:	e8 82 54 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ab7e <.annobin_fzhashx_set_duplicator.end>:
   3ab7e:	66 90                	xchg   %ax,%ax

000000000003ab80 <fzhashx_set_key_destructor>:
   3ab80:	f3 0f 1e fa          	endbr64 
   3ab84:	48 85 ff             	test   %rdi,%rdi
   3ab87:	74 05                	je     3ab8e <fzhashx_set_key_destructor+0xe>
   3ab89:	48 89 77 68          	mov    %rsi,0x68(%rdi)
   3ab8d:	c3                   	retq   
   3ab8e:	50                   	push   %rax
   3ab8f:	48 8d 0d 2a 94 00 00 	lea    0x942a(%rip),%rcx        # 43fc0 <__PRETTY_FUNCTION__.3960>
   3ab96:	ba 0b 04 00 00       	mov    $0x40b,%edx
   3ab9b:	48 8d 35 2d 93 00 00 	lea    0x932d(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3aba2:	48 8d 3d f0 91 00 00 	lea    0x91f0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3aba9:	e8 52 54 fd ff       	callq  10000 <__assert_fail@plt>

000000000003abae <.annobin_fzhashx_set_key_destructor.end>:
   3abae:	66 90                	xchg   %ax,%ax

000000000003abb0 <fzhashx_set_key_duplicator>:
   3abb0:	f3 0f 1e fa          	endbr64 
   3abb4:	48 85 ff             	test   %rdi,%rdi
   3abb7:	74 05                	je     3abbe <fzhashx_set_key_duplicator+0xe>
   3abb9:	48 89 77 60          	mov    %rsi,0x60(%rdi)
   3abbd:	c3                   	retq   
   3abbe:	50                   	push   %rax
   3abbf:	48 8d 0d da 93 00 00 	lea    0x93da(%rip),%rcx        # 43fa0 <__PRETTY_FUNCTION__.3965>
   3abc6:	ba 17 04 00 00       	mov    $0x417,%edx
   3abcb:	48 8d 35 fd 92 00 00 	lea    0x92fd(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3abd2:	48 8d 3d c0 91 00 00 	lea    0x91c0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3abd9:	e8 22 54 fd ff       	callq  10000 <__assert_fail@plt>

000000000003abde <.annobin_fzhashx_set_key_comparator.start>:
   3abde:	66 90                	xchg   %ax,%ax

000000000003abe0 <fzhashx_set_key_comparator>:
   3abe0:	f3 0f 1e fa          	endbr64 
   3abe4:	48 83 ec 08          	sub    $0x8,%rsp
   3abe8:	48 85 ff             	test   %rdi,%rdi
   3abeb:	74 0e                	je     3abfb <fzhashx_set_key_comparator+0x1b>
   3abed:	48 85 f6             	test   %rsi,%rsi
   3abf0:	74 28                	je     3ac1a <fzhashx_set_key_comparator+0x3a>
   3abf2:	48 89 77 70          	mov    %rsi,0x70(%rdi)
   3abf6:	48 83 c4 08          	add    $0x8,%rsp
   3abfa:	c3                   	retq   
   3abfb:	48 8d 0d 7e 93 00 00 	lea    0x937e(%rip),%rcx        # 43f80 <__PRETTY_FUNCTION__.3970>
   3ac02:	ba 23 04 00 00       	mov    $0x423,%edx
   3ac07:	48 8d 35 c1 92 00 00 	lea    0x92c1(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3ac0e:	48 8d 3d 84 91 00 00 	lea    0x9184(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ac15:	e8 e6 53 fd ff       	callq  10000 <__assert_fail@plt>
   3ac1a:	48 8d 0d 5f 93 00 00 	lea    0x935f(%rip),%rcx        # 43f80 <__PRETTY_FUNCTION__.3970>
   3ac21:	ba 24 04 00 00       	mov    $0x424,%edx
   3ac26:	48 8d 35 a2 92 00 00 	lea    0x92a2(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3ac2d:	48 8d 3d a4 92 00 00 	lea    0x92a4(%rip),%rdi        # 43ed8 <__PRETTY_FUNCTION__.3761+0x18>
   3ac34:	e8 c7 53 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ac39 <.annobin_fzhashx_set_key_comparator.end>:
   3ac39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003ac40 <fzhashx_set_key_hasher>:
   3ac40:	f3 0f 1e fa          	endbr64 
   3ac44:	48 85 ff             	test   %rdi,%rdi
   3ac47:	74 05                	je     3ac4e <fzhashx_set_key_hasher+0xe>
   3ac49:	48 89 77 78          	mov    %rsi,0x78(%rdi)
   3ac4d:	c3                   	retq   
   3ac4e:	50                   	push   %rax
   3ac4f:	48 8d 0d 0a 93 00 00 	lea    0x930a(%rip),%rcx        # 43f60 <__PRETTY_FUNCTION__.3975>
   3ac56:	ba 30 04 00 00       	mov    $0x430,%edx
   3ac5b:	48 8d 35 6d 92 00 00 	lea    0x926d(%rip),%rsi        # 43ecf <__PRETTY_FUNCTION__.3761+0xf>
   3ac62:	48 8d 3d 30 91 00 00 	lea    0x9130(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ac69:	e8 92 53 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ac6e <.annobin_fzhashx_dup_v2.start>:
   3ac6e:	66 90                	xchg   %ax,%ax

000000000003ac70 <fzhashx_dup_v2>:
   3ac70:	f3 0f 1e fa          	endbr64 
   3ac74:	41 56                	push   %r14
   3ac76:	41 55                	push   %r13
   3ac78:	41 54                	push   %r12
   3ac7a:	55                   	push   %rbp
   3ac7b:	53                   	push   %rbx
   3ac7c:	48 83 ec 10          	sub    $0x10,%rsp
   3ac80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3ac87:	00 00 
   3ac89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3ac8e:	31 c0                	xor    %eax,%eax
   3ac90:	48 85 ff             	test   %rdi,%rdi
   3ac93:	0f 84 b8 00 00 00    	je     3ad51 <fzhashx_dup_v2+0xe1>
   3ac99:	49 89 fc             	mov    %rdi,%r12
   3ac9c:	e8 cf f2 ff ff       	callq  39f70 <fzhashx_new>
   3aca1:	48 89 04 24          	mov    %rax,(%rsp)
   3aca5:	48 85 c0             	test   %rax,%rax
   3aca8:	0f 84 86 00 00 00    	je     3ad34 <fzhashx_dup_v2+0xc4>
   3acae:	48 8d 35 4b e3 ff ff 	lea    -0x1cb5(%rip),%rsi        # 39000 <fzstr_free>
   3acb5:	48 89 c7             	mov    %rax,%rdi
   3acb8:	31 ed                	xor    %ebp,%ebp
   3acba:	49 89 e6             	mov    %rsp,%r14
   3acbd:	e8 5e fe ff ff       	callq  3ab20 <fzhashx_set_destructor>
   3acc2:	48 8b 35 0f 83 21 00 	mov    0x21830f(%rip),%rsi        # 252fd8 <strdup@GLIBC_2.2.5>
   3acc9:	48 8b 3c 24          	mov    (%rsp),%rdi
   3accd:	e8 7e fe ff ff       	callq  3ab50 <fzhashx_set_duplicator>
   3acd2:	41 8b 54 24 08       	mov    0x8(%r12),%edx
   3acd7:	48 8d 05 42 94 00 00 	lea    0x9442(%rip),%rax        # 44120 <primes>
   3acde:	4c 8b 2c d0          	mov    (%rax,%rdx,8),%r13
   3ace2:	31 c0                	xor    %eax,%eax
   3ace4:	4d 85 ed             	test   %r13,%r13
   3ace7:	74 47                	je     3ad30 <fzhashx_dup_v2+0xc0>
   3ace9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3acf0:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   3acf5:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
   3acf9:	48 85 db             	test   %rbx,%rbx
   3acfc:	75 0b                	jne    3ad09 <fzhashx_dup_v2+0x99>
   3acfe:	eb 25                	jmp    3ad25 <fzhashx_dup_v2+0xb5>
   3ad00:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3ad04:	48 85 db             	test   %rbx,%rbx
   3ad07:	74 1c                	je     3ad25 <fzhashx_dup_v2+0xb5>
   3ad09:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3ad0d:	48 8b 13             	mov    (%rbx),%rdx
   3ad10:	48 8b 3c 24          	mov    (%rsp),%rdi
   3ad14:	e8 d7 f3 ff ff       	callq  3a0f0 <fzhashx_insert>
   3ad19:	85 c0                	test   %eax,%eax
   3ad1b:	74 e3                	je     3ad00 <fzhashx_dup_v2+0x90>
   3ad1d:	4c 89 f7             	mov    %r14,%rdi
   3ad20:	e8 3b f3 ff ff       	callq  3a060 <fzhashx_destroy>
   3ad25:	8d 45 01             	lea    0x1(%rbp),%eax
   3ad28:	48 89 c5             	mov    %rax,%rbp
   3ad2b:	4c 39 e8             	cmp    %r13,%rax
   3ad2e:	72 c0                	jb     3acf0 <fzhashx_dup_v2+0x80>
   3ad30:	48 8b 04 24          	mov    (%rsp),%rax
   3ad34:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   3ad39:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3ad40:	00 00 
   3ad42:	75 11                	jne    3ad55 <fzhashx_dup_v2+0xe5>
   3ad44:	48 83 c4 10          	add    $0x10,%rsp
   3ad48:	5b                   	pop    %rbx
   3ad49:	5d                   	pop    %rbp
   3ad4a:	41 5c                	pop    %r12
   3ad4c:	41 5d                	pop    %r13
   3ad4e:	41 5e                	pop    %r14
   3ad50:	c3                   	retq   
   3ad51:	31 c0                	xor    %eax,%eax
   3ad53:	eb df                	jmp    3ad34 <fzhashx_dup_v2+0xc4>
   3ad55:	e8 f6 50 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003ad5a <.annobin_fzhashx_dup_v2.end>:
   3ad5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003ad60 <fzlist_new>:
   3ad60:	f3 0f 1e fa          	endbr64 
   3ad64:	53                   	push   %rbx
   3ad65:	be 30 00 00 00       	mov    $0x30,%esi
   3ad6a:	bf 01 00 00 00       	mov    $0x1,%edi
   3ad6f:	e8 9c 54 fd ff       	callq  10210 <calloc@plt>
   3ad74:	48 85 c0             	test   %rax,%rax
   3ad77:	74 02                	je     3ad7b <fzlist_new+0x1b>
   3ad79:	5b                   	pop    %rbx
   3ad7a:	c3                   	retq   
   3ad7b:	48 8b 1d 66 82 21 00 	mov    0x218266(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3ad82:	41 b8 3a 00 00 00    	mov    $0x3a,%r8d
   3ad88:	48 8d 0d f1 9c 00 00 	lea    0x9cf1(%rip),%rcx        # 44a80 <primes+0x960>
   3ad8f:	48 8d 15 e6 8f 00 00 	lea    0x8fe6(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3ad96:	be 01 00 00 00       	mov    $0x1,%esi
   3ad9b:	48 8b 3b             	mov    (%rbx),%rdi
   3ad9e:	e8 bd 5b fd ff       	callq  10960 <__fprintf_chk@plt>
   3ada3:	48 8b 0b             	mov    (%rbx),%rcx
   3ada6:	ba 25 00 00 00       	mov    $0x25,%edx
   3adab:	be 01 00 00 00       	mov    $0x1,%esi
   3adb0:	48 8d 3d f9 8f 00 00 	lea    0x8ff9(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3adb7:	e8 94 5b fd ff       	callq  10950 <fwrite@plt>
   3adbc:	48 8b 3b             	mov    (%rbx),%rdi
   3adbf:	e8 7c 56 fd ff       	callq  10440 <fflush@plt>
   3adc4:	e8 27 4d fd ff       	callq  faf0 <abort@plt>

000000000003adc9 <.annobin_fzlist_first.start>:
   3adc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003add0 <fzlist_first>:
   3add0:	f3 0f 1e fa          	endbr64 
   3add4:	48 85 ff             	test   %rdi,%rdi
   3add7:	74 11                	je     3adea <fzlist_first+0x1a>
   3add9:	48 8b 07             	mov    (%rdi),%rax
   3addc:	48 89 47 10          	mov    %rax,0x10(%rdi)
   3ade0:	48 85 c0             	test   %rax,%rax
   3ade3:	74 04                	je     3ade9 <fzlist_first+0x19>
   3ade5:	48 8b 40 08          	mov    0x8(%rax),%rax
   3ade9:	c3                   	retq   
   3adea:	50                   	push   %rax
   3adeb:	48 8d 0d 66 9d 00 00 	lea    0x9d66(%rip),%rcx        # 44b58 <__PRETTY_FUNCTION__.3745>
   3adf2:	ba 57 00 00 00       	mov    $0x57,%edx
   3adf7:	48 8d 35 82 9c 00 00 	lea    0x9c82(%rip),%rsi        # 44a80 <primes+0x960>
   3adfe:	48 8d 3d 94 8f 00 00 	lea    0x8f94(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ae05:	e8 f6 51 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ae0a <.annobin_fzlist_first.end>:
   3ae0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003ae10 <fzlist_next>:
   3ae10:	f3 0f 1e fa          	endbr64 
   3ae14:	48 85 ff             	test   %rdi,%rdi
   3ae17:	74 1c                	je     3ae35 <fzlist_next+0x25>
   3ae19:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3ae1d:	48 85 c0             	test   %rax,%rax
   3ae20:	48 0f 44 c7          	cmove  %rdi,%rax
   3ae24:	48 8b 00             	mov    (%rax),%rax
   3ae27:	48 89 47 10          	mov    %rax,0x10(%rdi)
   3ae2b:	48 85 c0             	test   %rax,%rax
   3ae2e:	74 04                	je     3ae34 <fzlist_next+0x24>
   3ae30:	48 8b 40 08          	mov    0x8(%rax),%rax
   3ae34:	c3                   	retq   
   3ae35:	50                   	push   %rax
   3ae36:	48 8d 0d 0b 9d 00 00 	lea    0x9d0b(%rip),%rcx        # 44b48 <__PRETTY_FUNCTION__.3749>
   3ae3d:	ba 67 00 00 00       	mov    $0x67,%edx
   3ae42:	48 8d 35 37 9c 00 00 	lea    0x9c37(%rip),%rsi        # 44a80 <primes+0x960>
   3ae49:	48 8d 3d 49 8f 00 00 	lea    0x8f49(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ae50:	e8 ab 51 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ae55 <.annobin_fzlist_last.start>:
   3ae55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3ae5c:	00 00 00 00 

000000000003ae60 <fzlist_last>:
   3ae60:	f3 0f 1e fa          	endbr64 
   3ae64:	48 85 ff             	test   %rdi,%rdi
   3ae67:	74 12                	je     3ae7b <fzlist_last+0x1b>
   3ae69:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3ae6d:	48 89 47 10          	mov    %rax,0x10(%rdi)
   3ae71:	48 85 c0             	test   %rax,%rax
   3ae74:	74 04                	je     3ae7a <fzlist_last+0x1a>
   3ae76:	48 8b 40 08          	mov    0x8(%rax),%rax
   3ae7a:	c3                   	retq   
   3ae7b:	50                   	push   %rax
   3ae7c:	48 8d 0d b5 9c 00 00 	lea    0x9cb5(%rip),%rcx        # 44b38 <__PRETTY_FUNCTION__.3753>
   3ae83:	ba 7a 00 00 00       	mov    $0x7a,%edx
   3ae88:	48 8d 35 f1 9b 00 00 	lea    0x9bf1(%rip),%rsi        # 44a80 <primes+0x960>
   3ae8f:	48 8d 3d 03 8f 00 00 	lea    0x8f03(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ae96:	e8 65 51 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ae9b <.annobin_fzlist_head.start>:
   3ae9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003aea0 <fzlist_head>:
   3aea0:	f3 0f 1e fa          	endbr64 
   3aea4:	48 85 ff             	test   %rdi,%rdi
   3aea7:	74 0d                	je     3aeb6 <fzlist_head+0x16>
   3aea9:	48 8b 07             	mov    (%rdi),%rax
   3aeac:	48 85 c0             	test   %rax,%rax
   3aeaf:	74 04                	je     3aeb5 <fzlist_head+0x15>
   3aeb1:	48 8b 40 08          	mov    0x8(%rax),%rax
   3aeb5:	c3                   	retq   
   3aeb6:	50                   	push   %rax
   3aeb7:	48 8d 0d 6a 9c 00 00 	lea    0x9c6a(%rip),%rcx        # 44b28 <__PRETTY_FUNCTION__.3757>
   3aebe:	ba 8a 00 00 00       	mov    $0x8a,%edx
   3aec3:	48 8d 35 b6 9b 00 00 	lea    0x9bb6(%rip),%rsi        # 44a80 <primes+0x960>
   3aeca:	48 8d 3d c8 8e 00 00 	lea    0x8ec8(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3aed1:	e8 2a 51 fd ff       	callq  10000 <__assert_fail@plt>

000000000003aed6 <.annobin_fzlist_head.end>:
   3aed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3aedd:	00 00 00 

000000000003aee0 <fzlist_tail>:
   3aee0:	f3 0f 1e fa          	endbr64 
   3aee4:	48 85 ff             	test   %rdi,%rdi
   3aee7:	74 0e                	je     3aef7 <fzlist_tail+0x17>
   3aee9:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3aeed:	48 85 c0             	test   %rax,%rax
   3aef0:	74 04                	je     3aef6 <fzlist_tail+0x16>
   3aef2:	48 8b 40 08          	mov    0x8(%rax),%rax
   3aef6:	c3                   	retq   
   3aef7:	50                   	push   %rax
   3aef8:	48 8d 0d 19 9c 00 00 	lea    0x9c19(%rip),%rcx        # 44b18 <__PRETTY_FUNCTION__.3761>
   3aeff:	ba 96 00 00 00       	mov    $0x96,%edx
   3af04:	48 8d 35 75 9b 00 00 	lea    0x9b75(%rip),%rsi        # 44a80 <primes+0x960>
   3af0b:	48 8d 3d 87 8e 00 00 	lea    0x8e87(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3af12:	e8 e9 50 fd ff       	callq  10000 <__assert_fail@plt>

000000000003af17 <.annobin_fzlist_item.start>:
   3af17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3af1e:	00 00 

000000000003af20 <fzlist_item>:
   3af20:	f3 0f 1e fa          	endbr64 
   3af24:	48 85 ff             	test   %rdi,%rdi
   3af27:	74 0e                	je     3af37 <fzlist_item+0x17>
   3af29:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3af2d:	48 85 c0             	test   %rax,%rax
   3af30:	74 04                	je     3af36 <fzlist_item+0x16>
   3af32:	48 8b 40 08          	mov    0x8(%rax),%rax
   3af36:	c3                   	retq   
   3af37:	50                   	push   %rax
   3af38:	48 8d 0d c9 9b 00 00 	lea    0x9bc9(%rip),%rcx        # 44b08 <__PRETTY_FUNCTION__.3765>
   3af3f:	ba a2 00 00 00       	mov    $0xa2,%edx
   3af44:	48 8d 35 35 9b 00 00 	lea    0x9b35(%rip),%rsi        # 44a80 <primes+0x960>
   3af4b:	48 8d 3d 47 8e 00 00 	lea    0x8e47(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3af52:	e8 a9 50 fd ff       	callq  10000 <__assert_fail@plt>

000000000003af57 <.annobin_fzlist_append.start>:
   3af57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3af5e:	00 00 

000000000003af60 <fzlist_append>:
   3af60:	f3 0f 1e fa          	endbr64 
   3af64:	48 85 f6             	test   %rsi,%rsi
   3af67:	0f 84 98 00 00 00    	je     3b005 <fzlist_append+0xa5>
   3af6d:	41 54                	push   %r12
   3af6f:	49 89 f4             	mov    %rsi,%r12
   3af72:	be 18 00 00 00       	mov    $0x18,%esi
   3af77:	55                   	push   %rbp
   3af78:	53                   	push   %rbx
   3af79:	48 89 fb             	mov    %rdi,%rbx
   3af7c:	bf 01 00 00 00       	mov    $0x1,%edi
   3af81:	e8 8a 52 fd ff       	callq  10210 <calloc@plt>
   3af86:	48 89 c5             	mov    %rax,%rbp
   3af89:	48 85 c0             	test   %rax,%rax
   3af8c:	74 7d                	je     3b00b <fzlist_append+0xab>
   3af8e:	80 7b 20 00          	cmpb   $0x0,0x20(%rbx)
   3af92:	75 34                	jne    3afc8 <fzlist_append+0x68>
   3af94:	48 8b 43 08          	mov    0x8(%rbx),%rax
   3af98:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   3af9c:	48 85 c0             	test   %rax,%rax
   3af9f:	74 5f                	je     3b000 <fzlist_append+0xa0>
   3afa1:	48 89 28             	mov    %rbp,(%rax)
   3afa4:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
   3afa8:	31 c0                	xor    %eax,%eax
   3afaa:	48 83 43 18 01       	addq   $0x1,0x18(%rbx)
   3afaf:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   3afb6:	00 
   3afb7:	5b                   	pop    %rbx
   3afb8:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   3afbf:	00 
   3afc0:	5d                   	pop    %rbp
   3afc1:	41 5c                	pop    %r12
   3afc3:	c3                   	retq   
   3afc4:	0f 1f 40 00          	nopl   0x0(%rax)
   3afc8:	4c 89 e7             	mov    %r12,%rdi
   3afcb:	e8 d0 59 fd ff       	callq  109a0 <strdup@plt>
   3afd0:	49 89 c4             	mov    %rax,%r12
   3afd3:	48 85 c0             	test   %rax,%rax
   3afd6:	75 bc                	jne    3af94 <fzlist_append+0x34>
   3afd8:	48 8d 0d 19 9b 00 00 	lea    0x9b19(%rip),%rcx        # 44af8 <__PRETTY_FUNCTION__.3771>
   3afdf:	ba ba 00 00 00       	mov    $0xba,%edx
   3afe4:	48 8d 35 95 9a 00 00 	lea    0x9a95(%rip),%rsi        # 44a80 <primes+0x960>
   3afeb:	48 8d 3d 85 8d 00 00 	lea    0x8d85(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3aff2:	e8 09 50 fd ff       	callq  10000 <__assert_fail@plt>
   3aff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3affe:	00 00 
   3b000:	48 89 2b             	mov    %rbp,(%rbx)
   3b003:	eb 9f                	jmp    3afa4 <fzlist_append+0x44>
   3b005:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3b00a:	c3                   	retq   
   3b00b:	48 8b 1d d6 7f 21 00 	mov    0x217fd6(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3b012:	41 b8 b4 00 00 00    	mov    $0xb4,%r8d
   3b018:	31 c0                	xor    %eax,%eax
   3b01a:	48 8d 0d 5f 9a 00 00 	lea    0x9a5f(%rip),%rcx        # 44a80 <primes+0x960>
   3b021:	48 8d 15 54 8d 00 00 	lea    0x8d54(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3b028:	be 01 00 00 00       	mov    $0x1,%esi
   3b02d:	48 8b 3b             	mov    (%rbx),%rdi
   3b030:	e8 2b 59 fd ff       	callq  10960 <__fprintf_chk@plt>
   3b035:	48 8b 0b             	mov    (%rbx),%rcx
   3b038:	ba 25 00 00 00       	mov    $0x25,%edx
   3b03d:	be 01 00 00 00       	mov    $0x1,%esi
   3b042:	48 8d 3d 67 8d 00 00 	lea    0x8d67(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3b049:	e8 02 59 fd ff       	callq  10950 <fwrite@plt>
   3b04e:	48 8b 3b             	mov    (%rbx),%rdi
   3b051:	e8 ea 53 fd ff       	callq  10440 <fflush@plt>
   3b056:	e8 95 4a fd ff       	callq  faf0 <abort@plt>

000000000003b05b <.annobin_fzlist_append.end>:
   3b05b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003b060 <fzlist_push>:
   3b060:	f3 0f 1e fa          	endbr64 
   3b064:	48 85 f6             	test   %rsi,%rsi
   3b067:	0f 84 89 00 00 00    	je     3b0f6 <fzlist_push+0x96>
   3b06d:	41 54                	push   %r12
   3b06f:	49 89 f4             	mov    %rsi,%r12
   3b072:	be 18 00 00 00       	mov    $0x18,%esi
   3b077:	55                   	push   %rbp
   3b078:	53                   	push   %rbx
   3b079:	48 89 fb             	mov    %rdi,%rbx
   3b07c:	bf 01 00 00 00       	mov    $0x1,%edi
   3b081:	e8 8a 51 fd ff       	callq  10210 <calloc@plt>
   3b086:	48 89 c5             	mov    %rax,%rbp
   3b089:	48 85 c0             	test   %rax,%rax
   3b08c:	74 6e                	je     3b0fc <fzlist_push+0x9c>
   3b08e:	80 7b 20 00          	cmpb   $0x0,0x20(%rbx)
   3b092:	75 2c                	jne    3b0c0 <fzlist_push+0x60>
   3b094:	48 8b 03             	mov    (%rbx),%rax
   3b097:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   3b09c:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   3b0a0:	48 89 2b             	mov    %rbp,(%rbx)
   3b0a3:	48 89 45 00          	mov    %rax,0x0(%rbp)
   3b0a7:	74 47                	je     3b0f0 <fzlist_push+0x90>
   3b0a9:	48 83 43 18 01       	addq   $0x1,0x18(%rbx)
   3b0ae:	31 c0                	xor    %eax,%eax
   3b0b0:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   3b0b7:	00 
   3b0b8:	5b                   	pop    %rbx
   3b0b9:	5d                   	pop    %rbp
   3b0ba:	41 5c                	pop    %r12
   3b0bc:	c3                   	retq   
   3b0bd:	0f 1f 00             	nopl   (%rax)
   3b0c0:	4c 89 e7             	mov    %r12,%rdi
   3b0c3:	e8 d8 58 fd ff       	callq  109a0 <strdup@plt>
   3b0c8:	49 89 c4             	mov    %rax,%r12
   3b0cb:	48 85 c0             	test   %rax,%rax
   3b0ce:	75 c4                	jne    3b094 <fzlist_push+0x34>
   3b0d0:	48 8d 0d 11 9a 00 00 	lea    0x9a11(%rip),%rcx        # 44ae8 <__PRETTY_FUNCTION__.3777>
   3b0d7:	ba db 00 00 00       	mov    $0xdb,%edx
   3b0dc:	48 8d 35 9d 99 00 00 	lea    0x999d(%rip),%rsi        # 44a80 <primes+0x960>
   3b0e3:	48 8d 3d 8d 8c 00 00 	lea    0x8c8d(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3b0ea:	e8 11 4f fd ff       	callq  10000 <__assert_fail@plt>
   3b0ef:	90                   	nop
   3b0f0:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
   3b0f4:	eb b3                	jmp    3b0a9 <fzlist_push+0x49>
   3b0f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3b0fb:	c3                   	retq   
   3b0fc:	48 8b 1d e5 7e 21 00 	mov    0x217ee5(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3b103:	41 b8 d5 00 00 00    	mov    $0xd5,%r8d
   3b109:	31 c0                	xor    %eax,%eax
   3b10b:	48 8d 0d 6e 99 00 00 	lea    0x996e(%rip),%rcx        # 44a80 <primes+0x960>
   3b112:	48 8d 15 63 8c 00 00 	lea    0x8c63(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3b119:	be 01 00 00 00       	mov    $0x1,%esi
   3b11e:	48 8b 3b             	mov    (%rbx),%rdi
   3b121:	e8 3a 58 fd ff       	callq  10960 <__fprintf_chk@plt>
   3b126:	48 8b 0b             	mov    (%rbx),%rcx
   3b129:	ba 25 00 00 00       	mov    $0x25,%edx
   3b12e:	be 01 00 00 00       	mov    $0x1,%esi
   3b133:	48 8d 3d 76 8c 00 00 	lea    0x8c76(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3b13a:	e8 11 58 fd ff       	callq  10950 <fwrite@plt>
   3b13f:	48 8b 3b             	mov    (%rbx),%rdi
   3b142:	e8 f9 52 fd ff       	callq  10440 <fflush@plt>
   3b147:	e8 a4 49 fd ff       	callq  faf0 <abort@plt>

000000000003b14c <.annobin_fzlist_pop.start>:
   3b14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003b150 <fzlist_pop>:
   3b150:	f3 0f 1e fa          	endbr64 
   3b154:	55                   	push   %rbp
   3b155:	53                   	push   %rbx
   3b156:	48 89 fb             	mov    %rdi,%rbx
   3b159:	48 83 ec 08          	sub    $0x8,%rsp
   3b15d:	48 8b 3f             	mov    (%rdi),%rdi
   3b160:	48 85 ff             	test   %rdi,%rdi
   3b163:	74 43                	je     3b1a8 <fzlist_pop+0x58>
   3b165:	48 8b 07             	mov    (%rdi),%rax
   3b168:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
   3b16c:	48 89 03             	mov    %rax,(%rbx)
   3b16f:	48 39 7b 08          	cmp    %rdi,0x8(%rbx)
   3b173:	74 23                	je     3b198 <fzlist_pop+0x48>
   3b175:	e8 36 49 fd ff       	callq  fab0 <free@plt>
   3b17a:	48 83 6b 18 01       	subq   $0x1,0x18(%rbx)
   3b17f:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   3b186:	00 
   3b187:	48 83 c4 08          	add    $0x8,%rsp
   3b18b:	48 89 e8             	mov    %rbp,%rax
   3b18e:	5b                   	pop    %rbx
   3b18f:	5d                   	pop    %rbp
   3b190:	c3                   	retq   
   3b191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3b198:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   3b19f:	00 
   3b1a0:	eb d3                	jmp    3b175 <fzlist_pop+0x25>
   3b1a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3b1a8:	31 ed                	xor    %ebp,%ebp
   3b1aa:	eb d3                	jmp    3b17f <fzlist_pop+0x2f>

000000000003b1ac <.annobin_fzlist_exists.start>:
   3b1ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003b1b0 <fzlist_exists>:
   3b1b0:	f3 0f 1e fa          	endbr64 
   3b1b4:	41 54                	push   %r12
   3b1b6:	55                   	push   %rbp
   3b1b7:	53                   	push   %rbx
   3b1b8:	48 85 ff             	test   %rdi,%rdi
   3b1bb:	74 71                	je     3b22e <fzlist_exists+0x7e>
   3b1bd:	49 89 f4             	mov    %rsi,%r12
   3b1c0:	48 85 f6             	test   %rsi,%rsi
   3b1c3:	74 4a                	je     3b20f <fzlist_exists+0x5f>
   3b1c5:	48 8b 1f             	mov    (%rdi),%rbx
   3b1c8:	48 89 fd             	mov    %rdi,%rbp
   3b1cb:	48 85 db             	test   %rbx,%rbx
   3b1ce:	75 19                	jne    3b1e9 <fzlist_exists+0x39>
   3b1d0:	eb 36                	jmp    3b208 <fzlist_exists+0x58>
   3b1d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3b1d8:	4c 89 e6             	mov    %r12,%rsi
   3b1db:	ff d0                	callq  *%rax
   3b1dd:	85 c0                	test   %eax,%eax
   3b1df:	74 1a                	je     3b1fb <fzlist_exists+0x4b>
   3b1e1:	48 8b 1b             	mov    (%rbx),%rbx
   3b1e4:	48 85 db             	test   %rbx,%rbx
   3b1e7:	74 1f                	je     3b208 <fzlist_exists+0x58>
   3b1e9:	48 8b 45 28          	mov    0x28(%rbp),%rax
   3b1ed:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b1f1:	48 85 c0             	test   %rax,%rax
   3b1f4:	75 e2                	jne    3b1d8 <fzlist_exists+0x28>
   3b1f6:	4c 39 e7             	cmp    %r12,%rdi
   3b1f9:	75 e6                	jne    3b1e1 <fzlist_exists+0x31>
   3b1fb:	5b                   	pop    %rbx
   3b1fc:	b8 01 00 00 00       	mov    $0x1,%eax
   3b201:	5d                   	pop    %rbp
   3b202:	41 5c                	pop    %r12
   3b204:	c3                   	retq   
   3b205:	0f 1f 00             	nopl   (%rax)
   3b208:	5b                   	pop    %rbx
   3b209:	31 c0                	xor    %eax,%eax
   3b20b:	5d                   	pop    %rbp
   3b20c:	41 5c                	pop    %r12
   3b20e:	c3                   	retq   
   3b20f:	48 8d 0d c2 98 00 00 	lea    0x98c2(%rip),%rcx        # 44ad8 <__PRETTY_FUNCTION__.3787>
   3b216:	ba 07 01 00 00       	mov    $0x107,%edx
   3b21b:	48 8d 35 5e 98 00 00 	lea    0x985e(%rip),%rsi        # 44a80 <primes+0x960>
   3b222:	48 8d 3d 4e 8b 00 00 	lea    0x8b4e(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3b229:	e8 d2 4d fd ff       	callq  10000 <__assert_fail@plt>
   3b22e:	48 8d 0d a3 98 00 00 	lea    0x98a3(%rip),%rcx        # 44ad8 <__PRETTY_FUNCTION__.3787>
   3b235:	ba 06 01 00 00       	mov    $0x106,%edx
   3b23a:	48 8d 35 3f 98 00 00 	lea    0x983f(%rip),%rsi        # 44a80 <primes+0x960>
   3b241:	48 8d 3d 51 8b 00 00 	lea    0x8b51(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b248:	e8 b3 4d fd ff       	callq  10000 <__assert_fail@plt>

000000000003b24d <.annobin_fzlist_exists.end>:
   3b24d:	0f 1f 00             	nopl   (%rax)

000000000003b250 <fzlist_remove>:
   3b250:	f3 0f 1e fa          	endbr64 
   3b254:	41 55                	push   %r13
   3b256:	49 89 f5             	mov    %rsi,%r13
   3b259:	41 54                	push   %r12
   3b25b:	45 31 e4             	xor    %r12d,%r12d
   3b25e:	55                   	push   %rbp
   3b25f:	48 89 fd             	mov    %rdi,%rbp
   3b262:	53                   	push   %rbx
   3b263:	48 83 ec 08          	sub    $0x8,%rsp
   3b267:	48 8b 1f             	mov    (%rdi),%rbx
   3b26a:	48 85 db             	test   %rbx,%rbx
   3b26d:	75 20                	jne    3b28f <fzlist_remove+0x3f>
   3b26f:	eb 6c                	jmp    3b2dd <fzlist_remove+0x8d>
   3b271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3b278:	4c 89 ee             	mov    %r13,%rsi
   3b27b:	ff d0                	callq  *%rax
   3b27d:	85 c0                	test   %eax,%eax
   3b27f:	74 20                	je     3b2a1 <fzlist_remove+0x51>
   3b281:	48 8b 03             	mov    (%rbx),%rax
   3b284:	49 89 dc             	mov    %rbx,%r12
   3b287:	48 85 c0             	test   %rax,%rax
   3b28a:	74 51                	je     3b2dd <fzlist_remove+0x8d>
   3b28c:	48 89 c3             	mov    %rax,%rbx
   3b28f:	48 8b 45 28          	mov    0x28(%rbp),%rax
   3b293:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b297:	48 85 c0             	test   %rax,%rax
   3b29a:	75 dc                	jne    3b278 <fzlist_remove+0x28>
   3b29c:	4c 39 ef             	cmp    %r13,%rdi
   3b29f:	75 e0                	jne    3b281 <fzlist_remove+0x31>
   3b2a1:	4d 85 e4             	test   %r12,%r12
   3b2a4:	74 4a                	je     3b2f0 <fzlist_remove+0xa0>
   3b2a6:	48 8b 03             	mov    (%rbx),%rax
   3b2a9:	49 89 04 24          	mov    %rax,(%r12)
   3b2ad:	48 8b 03             	mov    (%rbx),%rax
   3b2b0:	48 85 c0             	test   %rax,%rax
   3b2b3:	74 47                	je     3b2fc <fzlist_remove+0xac>
   3b2b5:	48 39 5d 10          	cmp    %rbx,0x10(%rbp)
   3b2b9:	74 4b                	je     3b306 <fzlist_remove+0xb6>
   3b2bb:	80 7d 20 00          	cmpb   $0x0,0x20(%rbp)
   3b2bf:	75 4f                	jne    3b310 <fzlist_remove+0xc0>
   3b2c1:	48 8b 43 10          	mov    0x10(%rbx),%rax
   3b2c5:	48 85 c0             	test   %rax,%rax
   3b2c8:	74 06                	je     3b2d0 <fzlist_remove+0x80>
   3b2ca:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b2ce:	ff d0                	callq  *%rax
   3b2d0:	48 89 df             	mov    %rbx,%rdi
   3b2d3:	e8 d8 47 fd ff       	callq  fab0 <free@plt>
   3b2d8:	48 83 6d 18 01       	subq   $0x1,0x18(%rbp)
   3b2dd:	48 83 c4 08          	add    $0x8,%rsp
   3b2e1:	5b                   	pop    %rbx
   3b2e2:	5d                   	pop    %rbp
   3b2e3:	41 5c                	pop    %r12
   3b2e5:	41 5d                	pop    %r13
   3b2e7:	c3                   	retq   
   3b2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3b2ef:	00 
   3b2f0:	48 8b 03             	mov    (%rbx),%rax
   3b2f3:	48 89 45 00          	mov    %rax,0x0(%rbp)
   3b2f7:	48 85 c0             	test   %rax,%rax
   3b2fa:	75 b9                	jne    3b2b5 <fzlist_remove+0x65>
   3b2fc:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   3b300:	48 39 5d 10          	cmp    %rbx,0x10(%rbp)
   3b304:	75 b5                	jne    3b2bb <fzlist_remove+0x6b>
   3b306:	80 7d 20 00          	cmpb   $0x0,0x20(%rbp)
   3b30a:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   3b30e:	74 b1                	je     3b2c1 <fzlist_remove+0x71>
   3b310:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b314:	e8 97 47 fd ff       	callq  fab0 <free@plt>
   3b319:	eb b5                	jmp    3b2d0 <fzlist_remove+0x80>

000000000003b31b <.annobin_fzlist_purge.start>:
   3b31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003b320 <fzlist_purge>:
   3b320:	f3 0f 1e fa          	endbr64 
   3b324:	41 54                	push   %r12
   3b326:	55                   	push   %rbp
   3b327:	53                   	push   %rbx
   3b328:	48 85 ff             	test   %rdi,%rdi
   3b32b:	74 7e                	je     3b3ab <fzlist_purge+0x8b>
   3b32d:	48 8b 1f             	mov    (%rdi),%rbx
   3b330:	49 89 fc             	mov    %rdi,%r12
   3b333:	48 85 db             	test   %rbx,%rbx
   3b336:	75 27                	jne    3b35f <fzlist_purge+0x3f>
   3b338:	eb 49                	jmp    3b383 <fzlist_purge+0x63>
   3b33a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3b340:	48 8b 43 10          	mov    0x10(%rbx),%rax
   3b344:	48 85 c0             	test   %rax,%rax
   3b347:	74 06                	je     3b34f <fzlist_purge+0x2f>
   3b349:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b34d:	ff d0                	callq  *%rax
   3b34f:	48 89 df             	mov    %rbx,%rdi
   3b352:	48 89 eb             	mov    %rbp,%rbx
   3b355:	e8 56 47 fd ff       	callq  fab0 <free@plt>
   3b35a:	48 85 ed             	test   %rbp,%rbp
   3b35d:	74 24                	je     3b383 <fzlist_purge+0x63>
   3b35f:	41 80 7c 24 20 00    	cmpb   $0x0,0x20(%r12)
   3b365:	48 8b 2b             	mov    (%rbx),%rbp
   3b368:	74 d6                	je     3b340 <fzlist_purge+0x20>
   3b36a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3b36e:	e8 3d 47 fd ff       	callq  fab0 <free@plt>
   3b373:	48 89 df             	mov    %rbx,%rdi
   3b376:	48 89 eb             	mov    %rbp,%rbx
   3b379:	e8 32 47 fd ff       	callq  fab0 <free@plt>
   3b37e:	48 85 ed             	test   %rbp,%rbp
   3b381:	75 dc                	jne    3b35f <fzlist_purge+0x3f>
   3b383:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   3b38a:	00 
   3b38b:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
   3b392:	00 00 
   3b394:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   3b39b:	00 00 
   3b39d:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
   3b3a4:	00 00 
   3b3a6:	5b                   	pop    %rbx
   3b3a7:	5d                   	pop    %rbp
   3b3a8:	41 5c                	pop    %r12
   3b3aa:	c3                   	retq   
   3b3ab:	48 8d 0d 06 97 00 00 	lea    0x9706(%rip),%rcx        # 44ab8 <__PRETTY_FUNCTION__.3813>
   3b3b2:	ba 6a 01 00 00       	mov    $0x16a,%edx
   3b3b7:	48 8d 35 c2 96 00 00 	lea    0x96c2(%rip),%rsi        # 44a80 <primes+0x960>
   3b3be:	48 8d 3d d4 89 00 00 	lea    0x89d4(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b3c5:	e8 36 4c fd ff       	callq  10000 <__assert_fail@plt>

000000000003b3ca <.annobin_fzlist_destroy.start>:
   3b3ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003b3d0 <fzlist_destroy>:
   3b3d0:	f3 0f 1e fa          	endbr64 
   3b3d4:	55                   	push   %rbp
   3b3d5:	53                   	push   %rbx
   3b3d6:	48 83 ec 08          	sub    $0x8,%rsp
   3b3da:	48 85 ff             	test   %rdi,%rdi
   3b3dd:	74 29                	je     3b408 <fzlist_destroy+0x38>
   3b3df:	48 8b 2f             	mov    (%rdi),%rbp
   3b3e2:	48 89 fb             	mov    %rdi,%rbx
   3b3e5:	48 85 ed             	test   %rbp,%rbp
   3b3e8:	74 17                	je     3b401 <fzlist_destroy+0x31>
   3b3ea:	48 89 ef             	mov    %rbp,%rdi
   3b3ed:	e8 2e ff ff ff       	callq  3b320 <fzlist_purge>
   3b3f2:	48 89 ef             	mov    %rbp,%rdi
   3b3f5:	e8 b6 46 fd ff       	callq  fab0 <free@plt>
   3b3fa:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   3b401:	48 83 c4 08          	add    $0x8,%rsp
   3b405:	5b                   	pop    %rbx
   3b406:	5d                   	pop    %rbp
   3b407:	c3                   	retq   
   3b408:	48 8d 0d 59 97 00 00 	lea    0x9759(%rip),%rcx        # 44b68 <__PRETTY_FUNCTION__.3740>
   3b40f:	ba 46 00 00 00       	mov    $0x46,%edx
   3b414:	48 8d 35 65 96 00 00 	lea    0x9665(%rip),%rsi        # 44a80 <primes+0x960>
   3b41b:	48 8d 3d 70 89 00 00 	lea    0x8970(%rip),%rdi        # 43d92 <__PRETTY_FUNCTION__.3724+0x32>
   3b422:	e8 d9 4b fd ff       	callq  10000 <__assert_fail@plt>

000000000003b427 <.annobin_fzlist_destroy.end>:
   3b427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3b42e:	00 00 

000000000003b430 <fzlist_size>:
   3b430:	f3 0f 1e fa          	endbr64 
   3b434:	48 8b 47 18          	mov    0x18(%rdi),%rax
   3b438:	c3                   	retq   

000000000003b439 <.annobin_fzlist_size.end>:
   3b439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003b440 <fzlist_sort>:
   3b440:	f3 0f 1e fa          	endbr64 
   3b444:	41 57                	push   %r15
   3b446:	41 56                	push   %r14
   3b448:	41 55                	push   %r13
   3b44a:	41 54                	push   %r12
   3b44c:	55                   	push   %rbp
   3b44d:	48 89 f5             	mov    %rsi,%rbp
   3b450:	53                   	push   %rbx
   3b451:	48 83 ec 18          	sub    $0x18,%rsp
   3b455:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   3b45a:	48 85 f6             	test   %rsi,%rsi
   3b45d:	0f 84 1c 01 00 00    	je     3b57f <fzlist_sort+0x13f>
   3b463:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3b468:	45 31 ed             	xor    %r13d,%r13d
   3b46b:	4c 8b 60 18          	mov    0x18(%rax),%r12
   3b46f:	90                   	nop
   3b470:	49 83 fc 01          	cmp    $0x1,%r12
   3b474:	77 09                	ja     3b47f <fzlist_sort+0x3f>
   3b476:	45 84 ed             	test   %r13b,%r13b
   3b479:	0f 84 f1 00 00 00    	je     3b570 <fzlist_sort+0x130>
   3b47f:	49 83 fc 01          	cmp    $0x1,%r12
   3b483:	76 2d                	jbe    3b4b2 <fzlist_sort+0x72>
   3b485:	4d 85 e4             	test   %r12,%r12
   3b488:	0f 88 c2 00 00 00    	js     3b550 <fzlist_sort+0x110>
   3b48e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3b492:	f2 49 0f 2a c4       	cvtsi2sd %r12,%xmm0
   3b497:	f2 0f 5e 05 d9 96 00 	divsd  0x96d9(%rip),%xmm0        # 44b78 <__PRETTY_FUNCTION__.3740+0x10>
   3b49e:	00 
   3b49f:	66 0f 2f 05 d9 96 00 	comisd 0x96d9(%rip),%xmm0        # 44b80 <__PRETTY_FUNCTION__.3740+0x18>
   3b4a6:	00 
   3b4a7:	0f 83 83 00 00 00    	jae    3b530 <fzlist_sort+0xf0>
   3b4ad:	f2 4c 0f 2c e0       	cvttsd2si %xmm0,%r12
   3b4b2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3b4b7:	4c 8b 30             	mov    (%rax),%r14
   3b4ba:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   3b4bf:	4d 89 f7             	mov    %r14,%r15
   3b4c2:	4d 85 e4             	test   %r12,%r12
   3b4c5:	74 16                	je     3b4dd <fzlist_sort+0x9d>
   3b4c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3b4ce:	00 00 
   3b4d0:	48 83 e8 01          	sub    $0x1,%rax
   3b4d4:	4d 8b 3f             	mov    (%r15),%r15
   3b4d7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3b4db:	75 f3                	jne    3b4d0 <fzlist_sort+0x90>
   3b4dd:	4d 85 ff             	test   %r15,%r15
   3b4e0:	0f 95 c3             	setne  %bl
   3b4e3:	4d 85 f6             	test   %r14,%r14
   3b4e6:	0f 95 c0             	setne  %al
   3b4e9:	45 31 ed             	xor    %r13d,%r13d
   3b4ec:	20 c3                	and    %al,%bl
   3b4ee:	74 80                	je     3b470 <fzlist_sort+0x30>
   3b4f0:	49 8b 77 08          	mov    0x8(%r15),%rsi
   3b4f4:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   3b4f8:	ff d5                	callq  *%rbp
   3b4fa:	85 c0                	test   %eax,%eax
   3b4fc:	7e 13                	jle    3b511 <fzlist_sort+0xd1>
   3b4fe:	49 8b 46 08          	mov    0x8(%r14),%rax
   3b502:	49 8b 77 08          	mov    0x8(%r15),%rsi
   3b506:	41 89 dd             	mov    %ebx,%r13d
   3b509:	49 89 76 08          	mov    %rsi,0x8(%r14)
   3b50d:	49 89 47 08          	mov    %rax,0x8(%r15)
   3b511:	4d 8b 36             	mov    (%r14),%r14
   3b514:	4d 8b 3f             	mov    (%r15),%r15
   3b517:	4d 85 f6             	test   %r14,%r14
   3b51a:	0f 84 50 ff ff ff    	je     3b470 <fzlist_sort+0x30>
   3b520:	4d 85 ff             	test   %r15,%r15
   3b523:	75 cb                	jne    3b4f0 <fzlist_sort+0xb0>
   3b525:	e9 46 ff ff ff       	jmpq   3b470 <fzlist_sort+0x30>
   3b52a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3b530:	f2 0f 5c 05 48 96 00 	subsd  0x9648(%rip),%xmm0        # 44b80 <__PRETTY_FUNCTION__.3740+0x18>
   3b537:	00 
   3b538:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   3b53f:	00 00 80 
   3b542:	f2 4c 0f 2c e0       	cvttsd2si %xmm0,%r12
   3b547:	49 31 c4             	xor    %rax,%r12
   3b54a:	e9 63 ff ff ff       	jmpq   3b4b2 <fzlist_sort+0x72>
   3b54f:	90                   	nop
   3b550:	4c 89 e0             	mov    %r12,%rax
   3b553:	41 83 e4 01          	and    $0x1,%r12d
   3b557:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3b55b:	48 d1 e8             	shr    %rax
   3b55e:	4c 09 e0             	or     %r12,%rax
   3b561:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   3b566:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   3b56a:	e9 28 ff ff ff       	jmpq   3b497 <fzlist_sort+0x57>
   3b56f:	90                   	nop
   3b570:	48 83 c4 18          	add    $0x18,%rsp
   3b574:	5b                   	pop    %rbx
   3b575:	5d                   	pop    %rbp
   3b576:	41 5c                	pop    %r12
   3b578:	41 5d                	pop    %r13
   3b57a:	41 5e                	pop    %r14
   3b57c:	41 5f                	pop    %r15
   3b57e:	c3                   	retq   
   3b57f:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   3b583:	48 85 ed             	test   %rbp,%rbp
   3b586:	0f 85 d7 fe ff ff    	jne    3b463 <fzlist_sort+0x23>
   3b58c:	48 8b 2d 25 7a 21 00 	mov    0x217a25(%rip),%rbp        # 252fb8 <strcmp@GLIBC_2.2.5>
   3b593:	e9 cb fe ff ff       	jmpq   3b463 <fzlist_sort+0x23>

000000000003b598 <.annobin_fzlist_comparefn.start>:
   3b598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3b59f:	00 

000000000003b5a0 <fzlist_comparefn>:
   3b5a0:	f3 0f 1e fa          	endbr64 
   3b5a4:	48 85 ff             	test   %rdi,%rdi
   3b5a7:	74 05                	je     3b5ae <fzlist_comparefn+0xe>
   3b5a9:	48 89 77 28          	mov    %rsi,0x28(%rdi)
   3b5ad:	c3                   	retq   
   3b5ae:	50                   	push   %rax
   3b5af:	48 8d 0d ea 94 00 00 	lea    0x94ea(%rip),%rcx        # 44aa0 <__PRETTY_FUNCTION__.3846>
   3b5b6:	ba bf 01 00 00       	mov    $0x1bf,%edx
   3b5bb:	48 8d 35 be 94 00 00 	lea    0x94be(%rip),%rsi        # 44a80 <primes+0x960>
   3b5c2:	48 8d 3d d0 87 00 00 	lea    0x87d0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b5c9:	e8 32 4a fd ff       	callq  10000 <__assert_fail@plt>

000000000003b5ce <.annobin_fzlist_comparefn.end>:
   3b5ce:	66 90                	xchg   %ax,%ax

000000000003b5d0 <fzlist_freefn>:
   3b5d0:	f3 0f 1e fa          	endbr64 
   3b5d4:	48 8b 07             	mov    (%rdi),%rax
   3b5d7:	84 c9                	test   %cl,%cl
   3b5d9:	74 04                	je     3b5df <fzlist_freefn+0xf>
   3b5db:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3b5df:	48 85 c0             	test   %rax,%rax
   3b5e2:	74 1a                	je     3b5fe <fzlist_freefn+0x2e>
   3b5e4:	48 3b 70 08          	cmp    0x8(%rax),%rsi
   3b5e8:	75 0c                	jne    3b5f6 <fzlist_freefn+0x26>
   3b5ea:	eb 14                	jmp    3b600 <fzlist_freefn+0x30>
   3b5ec:	0f 1f 40 00          	nopl   0x0(%rax)
   3b5f0:	48 39 70 08          	cmp    %rsi,0x8(%rax)
   3b5f4:	74 0a                	je     3b600 <fzlist_freefn+0x30>
   3b5f6:	48 8b 00             	mov    (%rax),%rax
   3b5f9:	48 85 c0             	test   %rax,%rax
   3b5fc:	75 f2                	jne    3b5f0 <fzlist_freefn+0x20>
   3b5fe:	c3                   	retq   
   3b5ff:	90                   	nop
   3b600:	48 89 50 10          	mov    %rdx,0x10(%rax)
   3b604:	48 89 f0             	mov    %rsi,%rax
   3b607:	c3                   	retq   

000000000003b608 <.annobin_fzlist_autofree.start>:
   3b608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3b60f:	00 

000000000003b610 <fzlist_autofree>:
   3b610:	f3 0f 1e fa          	endbr64 
   3b614:	48 85 ff             	test   %rdi,%rdi
   3b617:	74 05                	je     3b61e <fzlist_autofree+0xe>
   3b619:	c6 47 20 01          	movb   $0x1,0x20(%rdi)
   3b61d:	c3                   	retq   
   3b61e:	50                   	push   %rax
   3b61f:	48 8d 0d 6a 94 00 00 	lea    0x946a(%rip),%rcx        # 44a90 <__PRETTY_FUNCTION__.3860>
   3b626:	ba e9 01 00 00       	mov    $0x1e9,%edx
   3b62b:	48 8d 35 4e 94 00 00 	lea    0x944e(%rip),%rsi        # 44a80 <primes+0x960>
   3b632:	48 8d 3d 60 87 00 00 	lea    0x8760(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b639:	e8 c2 49 fd ff       	callq  10000 <__assert_fail@plt>

000000000003b63e <.annobin_fzlist_autofree.end>:
   3b63e:	66 90                	xchg   %ax,%ax

000000000003b640 <fzlist_dup>:
   3b640:	f3 0f 1e fa          	endbr64 
   3b644:	53                   	push   %rbx
   3b645:	48 83 ec 10          	sub    $0x10,%rsp
   3b649:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3b650:	00 00 
   3b652:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3b657:	31 c0                	xor    %eax,%eax
   3b659:	48 85 ff             	test   %rdi,%rdi
   3b65c:	0f 84 7e 00 00 00    	je     3b6e0 <fzlist_dup+0xa0>
   3b662:	48 89 fb             	mov    %rdi,%rbx
   3b665:	e8 f6 f6 ff ff       	callq  3ad60 <fzlist_new>
   3b66a:	48 89 c7             	mov    %rax,%rdi
   3b66d:	48 89 04 24          	mov    %rax,(%rsp)
   3b671:	48 85 c0             	test   %rax,%rax
   3b674:	74 73                	je     3b6e9 <fzlist_dup+0xa9>
   3b676:	80 7b 20 00          	cmpb   $0x0,0x20(%rbx)
   3b67a:	75 54                	jne    3b6d0 <fzlist_dup+0x90>
   3b67c:	48 8b 43 28          	mov    0x28(%rbx),%rax
   3b680:	48 8b 1b             	mov    (%rbx),%rbx
   3b683:	48 89 47 28          	mov    %rax,0x28(%rdi)
   3b687:	48 85 db             	test   %rbx,%rbx
   3b68a:	75 10                	jne    3b69c <fzlist_dup+0x5c>
   3b68c:	eb 28                	jmp    3b6b6 <fzlist_dup+0x76>
   3b68e:	66 90                	xchg   %ax,%ax
   3b690:	48 8b 1b             	mov    (%rbx),%rbx
   3b693:	48 8b 3c 24          	mov    (%rsp),%rdi
   3b697:	48 85 db             	test   %rbx,%rbx
   3b69a:	74 1a                	je     3b6b6 <fzlist_dup+0x76>
   3b69c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   3b6a0:	e8 bb f8 ff ff       	callq  3af60 <fzlist_append>
   3b6a5:	83 f8 ff             	cmp    $0xffffffff,%eax
   3b6a8:	75 e6                	jne    3b690 <fzlist_dup+0x50>
   3b6aa:	48 89 e7             	mov    %rsp,%rdi
   3b6ad:	e8 1e fd ff ff       	callq  3b3d0 <fzlist_destroy>
   3b6b2:	48 8b 3c 24          	mov    (%rsp),%rdi
   3b6b6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   3b6bb:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3b6c2:	00 00 
   3b6c4:	48 89 f8             	mov    %rdi,%rax
   3b6c7:	75 1b                	jne    3b6e4 <fzlist_dup+0xa4>
   3b6c9:	48 83 c4 10          	add    $0x10,%rsp
   3b6cd:	5b                   	pop    %rbx
   3b6ce:	c3                   	retq   
   3b6cf:	90                   	nop
   3b6d0:	e8 3b ff ff ff       	callq  3b610 <fzlist_autofree>
   3b6d5:	48 8b 3c 24          	mov    (%rsp),%rdi
   3b6d9:	eb a1                	jmp    3b67c <fzlist_dup+0x3c>
   3b6db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3b6e0:	31 ff                	xor    %edi,%edi
   3b6e2:	eb d2                	jmp    3b6b6 <fzlist_dup+0x76>
   3b6e4:	e8 67 47 fd ff       	callq  fe50 <__stack_chk_fail@plt>
   3b6e9:	48 8d 0d d8 93 00 00 	lea    0x93d8(%rip),%rcx        # 44ac8 <__PRETTY_FUNCTION__.3805>
   3b6f0:	ba 52 01 00 00       	mov    $0x152,%edx
   3b6f5:	48 8d 35 84 93 00 00 	lea    0x9384(%rip),%rsi        # 44a80 <primes+0x960>
   3b6fc:	48 8d 3d af 2f 00 00 	lea    0x2faf(%rip),%rdi        # 3e6b2 <__PRETTY_FUNCTION__.5439+0x372>
   3b703:	e8 f8 48 fd ff       	callq  10000 <__assert_fail@plt>

000000000003b708 <.annobin_fzlist_dup.end>:
   3b708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3b70f:	00 

000000000003b710 <s_comparator>:
   3b710:	f3 0f 1e fa          	endbr64 
   3b714:	48 39 f7             	cmp    %rsi,%rdi
   3b717:	74 07                	je     3b720 <s_comparator+0x10>
   3b719:	19 c0                	sbb    %eax,%eax
   3b71b:	83 c8 01             	or     $0x1,%eax
   3b71e:	c3                   	retq   
   3b71f:	90                   	nop
   3b720:	31 c0                	xor    %eax,%eax
   3b722:	c3                   	retq   

000000000003b723 <.annobin_s_comparator.end>:
   3b723:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3b72a:	00 00 00 00 
   3b72e:	66 90                	xchg   %ax,%ax

000000000003b730 <s_node_new>:
   3b730:	53                   	push   %rbx
   3b731:	be 20 00 00 00       	mov    $0x20,%esi
   3b736:	48 89 fb             	mov    %rdi,%rbx
   3b739:	bf 01 00 00 00       	mov    $0x1,%edi
   3b73e:	e8 cd 4a fd ff       	callq  10210 <calloc@plt>
   3b743:	48 85 c0             	test   %rax,%rax
   3b746:	74 14                	je     3b75c <s_node_new+0x2c>
   3b748:	c7 00 06 00 fe ca    	movl   $0xcafe0006,(%rax)
   3b74e:	48 89 40 10          	mov    %rax,0x10(%rax)
   3b752:	48 89 40 08          	mov    %rax,0x8(%rax)
   3b756:	48 89 58 18          	mov    %rbx,0x18(%rax)
   3b75a:	5b                   	pop    %rbx
   3b75b:	c3                   	retq   
   3b75c:	48 8b 1d 85 78 21 00 	mov    0x217885(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3b763:	41 b8 3f 00 00 00    	mov    $0x3f,%r8d
   3b769:	48 8d 0d 18 94 00 00 	lea    0x9418(%rip),%rcx        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b770:	48 8d 15 05 86 00 00 	lea    0x8605(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3b777:	be 01 00 00 00       	mov    $0x1,%esi
   3b77c:	48 8b 3b             	mov    (%rbx),%rdi
   3b77f:	e8 dc 51 fd ff       	callq  10960 <__fprintf_chk@plt>
   3b784:	48 8b 0b             	mov    (%rbx),%rcx
   3b787:	ba 25 00 00 00       	mov    $0x25,%edx
   3b78c:	be 01 00 00 00       	mov    $0x1,%esi
   3b791:	48 8d 3d 18 86 00 00 	lea    0x8618(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3b798:	e8 b3 51 fd ff       	callq  10950 <fwrite@plt>
   3b79d:	48 8b 3b             	mov    (%rbx),%rdi
   3b7a0:	e8 9b 4c fd ff       	callq  10440 <fflush@plt>
   3b7a5:	e8 46 43 fd ff       	callq  faf0 <abort@plt>

000000000003b7aa <.annobin_fzlistx_new.start>:
   3b7aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003b7b0 <fzlistx_new>:
   3b7b0:	f3 0f 1e fa          	endbr64 
   3b7b4:	53                   	push   %rbx
   3b7b5:	be 30 00 00 00       	mov    $0x30,%esi
   3b7ba:	bf 01 00 00 00       	mov    $0x1,%edi
   3b7bf:	e8 4c 4a fd ff       	callq  10210 <calloc@plt>
   3b7c4:	48 85 c0             	test   %rax,%rax
   3b7c7:	74 26                	je     3b7ef <fzlistx_new+0x3f>
   3b7c9:	31 ff                	xor    %edi,%edi
   3b7cb:	48 89 c3             	mov    %rax,%rbx
   3b7ce:	e8 5d ff ff ff       	callq  3b730 <s_node_new>
   3b7d3:	48 89 03             	mov    %rax,(%rbx)
   3b7d6:	48 85 c0             	test   %rax,%rax
   3b7d9:	74 64                	je     3b83f <fzlistx_new+0x8f>
   3b7db:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3b7df:	48 8d 05 2a ff ff ff 	lea    -0xd6(%rip),%rax        # 3b710 <s_comparator>
   3b7e6:	48 89 43 28          	mov    %rax,0x28(%rbx)
   3b7ea:	48 89 d8             	mov    %rbx,%rax
   3b7ed:	5b                   	pop    %rbx
   3b7ee:	c3                   	retq   
   3b7ef:	48 8b 1d f2 77 21 00 	mov    0x2177f2(%rip),%rbx        # 252fe8 <stderr@GLIBC_2.2.5>
   3b7f6:	41 b8 6f 00 00 00    	mov    $0x6f,%r8d
   3b7fc:	31 c0                	xor    %eax,%eax
   3b7fe:	48 8d 0d 83 93 00 00 	lea    0x9383(%rip),%rcx        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b805:	48 8d 15 70 85 00 00 	lea    0x8570(%rip),%rdx        # 43d7c <__PRETTY_FUNCTION__.3724+0x1c>
   3b80c:	be 01 00 00 00       	mov    $0x1,%esi
   3b811:	48 8b 3b             	mov    (%rbx),%rdi
   3b814:	e8 47 51 fd ff       	callq  10960 <__fprintf_chk@plt>
   3b819:	48 8b 0b             	mov    (%rbx),%rcx
   3b81c:	ba 25 00 00 00       	mov    $0x25,%edx
   3b821:	be 01 00 00 00       	mov    $0x1,%esi
   3b826:	48 8d 3d 83 85 00 00 	lea    0x8583(%rip),%rdi        # 43db0 <__PRETTY_FUNCTION__.3724+0x50>
   3b82d:	e8 1e 51 fd ff       	callq  10950 <fwrite@plt>
   3b832:	48 8b 3b             	mov    (%rbx),%rdi
   3b835:	e8 06 4c fd ff       	callq  10440 <fflush@plt>
   3b83a:	e8 b1 42 fd ff       	callq  faf0 <abort@plt>
   3b83f:	48 8d 0d 8a 95 00 00 	lea    0x958a(%rip),%rcx        # 44dd0 <__PRETTY_FUNCTION__.3752>
   3b846:	ba 72 00 00 00       	mov    $0x72,%edx
   3b84b:	48 8d 35 36 93 00 00 	lea    0x9336(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b852:	48 8d 3d 38 93 00 00 	lea    0x9338(%rip),%rdi        # 44b91 <__PRETTY_FUNCTION__.3740+0x29>
   3b859:	e8 a2 47 fd ff       	callq  10000 <__assert_fail@plt>

000000000003b85e <.annobin_fzlistx_add_start.start>:
   3b85e:	66 90                	xchg   %ax,%ax

000000000003b860 <fzlistx_add_start>:
   3b860:	f3 0f 1e fa          	endbr64 
   3b864:	53                   	push   %rbx
   3b865:	48 89 fb             	mov    %rdi,%rbx
   3b868:	48 85 ff             	test   %rdi,%rdi
   3b86b:	74 5e                	je     3b8cb <fzlistx_add_start+0x6b>
   3b86d:	48 89 f7             	mov    %rsi,%rdi
   3b870:	48 85 f6             	test   %rsi,%rsi
   3b873:	0f 84 90 00 00 00    	je     3b909 <fzlistx_add_start+0xa9>
   3b879:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3b87d:	48 85 c0             	test   %rax,%rax
   3b880:	74 0e                	je     3b890 <fzlistx_add_start+0x30>
   3b882:	ff d0                	callq  *%rax
   3b884:	48 89 c7             	mov    %rax,%rdi
   3b887:	48 85 c0             	test   %rax,%rax
   3b88a:	0f 84 98 00 00 00    	je     3b928 <fzlistx_add_start+0xc8>
   3b890:	e8 9b fe ff ff       	callq  3b730 <s_node_new>
   3b895:	48 85 c0             	test   %rax,%rax
   3b898:	74 50                	je     3b8ea <fzlistx_add_start+0x8a>
   3b89a:	48 8b 0b             	mov    (%rbx),%rcx
   3b89d:	48 8b 70 08          	mov    0x8(%rax),%rsi
   3b8a1:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   3b8a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   3b8a9:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   3b8ad:	48 8b 72 10          	mov    0x10(%rdx),%rsi
   3b8b1:	48 8b 48 10          	mov    0x10(%rax),%rcx
   3b8b5:	48 89 70 10          	mov    %rsi,0x10(%rax)
   3b8b9:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
   3b8bd:	48 8b 13             	mov    (%rbx),%rdx
   3b8c0:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   3b8c5:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   3b8c9:	5b                   	pop    %rbx
   3b8ca:	c3                   	retq   
   3b8cb:	48 8d 0d ce 94 00 00 	lea    0x94ce(%rip),%rcx        # 44da0 <__PRETTY_FUNCTION__.3762>
   3b8d2:	ba 93 00 00 00       	mov    $0x93,%edx
   3b8d7:	48 8d 35 aa 92 00 00 	lea    0x92aa(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b8de:	48 8d 3d b4 84 00 00 	lea    0x84b4(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b8e5:	e8 16 47 fd ff       	callq  10000 <__assert_fail@plt>
   3b8ea:	48 8d 0d af 94 00 00 	lea    0x94af(%rip),%rcx        # 44da0 <__PRETTY_FUNCTION__.3762>
   3b8f1:	ba 9b 00 00 00       	mov    $0x9b,%edx
   3b8f6:	48 8d 35 8b 92 00 00 	lea    0x928b(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b8fd:	48 8d 3d 98 92 00 00 	lea    0x9298(%rip),%rdi        # 44b9c <__PRETTY_FUNCTION__.3740+0x34>
   3b904:	e8 f7 46 fd ff       	callq  10000 <__assert_fail@plt>
   3b909:	48 8d 0d 90 94 00 00 	lea    0x9490(%rip),%rcx        # 44da0 <__PRETTY_FUNCTION__.3762>
   3b910:	ba 94 00 00 00       	mov    $0x94,%edx
   3b915:	48 8d 35 6c 92 00 00 	lea    0x926c(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b91c:	48 8d 3d 54 84 00 00 	lea    0x8454(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3b923:	e8 d8 46 fd ff       	callq  10000 <__assert_fail@plt>
   3b928:	48 8d 0d 71 94 00 00 	lea    0x9471(%rip),%rcx        # 44da0 <__PRETTY_FUNCTION__.3762>
   3b92f:	ba 98 00 00 00       	mov    $0x98,%edx
   3b934:	48 8d 35 4d 92 00 00 	lea    0x924d(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b93b:	48 8d 3d 35 84 00 00 	lea    0x8435(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3b942:	e8 b9 46 fd ff       	callq  10000 <__assert_fail@plt>

000000000003b947 <.annobin_fzlistx_add_end.start>:
   3b947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3b94e:	00 00 

000000000003b950 <fzlistx_add_end>:
   3b950:	f3 0f 1e fa          	endbr64 
   3b954:	53                   	push   %rbx
   3b955:	48 89 fb             	mov    %rdi,%rbx
   3b958:	48 85 ff             	test   %rdi,%rdi
   3b95b:	74 62                	je     3b9bf <fzlistx_add_end+0x6f>
   3b95d:	48 89 f7             	mov    %rsi,%rdi
   3b960:	48 85 f6             	test   %rsi,%rsi
   3b963:	0f 84 94 00 00 00    	je     3b9fd <fzlistx_add_end+0xad>
   3b969:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3b96d:	48 85 c0             	test   %rax,%rax
   3b970:	74 0e                	je     3b980 <fzlistx_add_end+0x30>
   3b972:	ff d0                	callq  *%rax
   3b974:	48 89 c7             	mov    %rax,%rdi
   3b977:	48 85 c0             	test   %rax,%rax
   3b97a:	0f 84 9c 00 00 00    	je     3ba1c <fzlistx_add_end+0xcc>
   3b980:	e8 ab fd ff ff       	callq  3b730 <s_node_new>
   3b985:	48 85 c0             	test   %rax,%rax
   3b988:	74 54                	je     3b9de <fzlistx_add_end+0x8e>
   3b98a:	48 8b 13             	mov    (%rbx),%rdx
   3b98d:	48 8b 70 08          	mov    0x8(%rax),%rsi
   3b991:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   3b995:	48 8b 79 08          	mov    0x8(%rcx),%rdi
   3b999:	48 89 78 08          	mov    %rdi,0x8(%rax)
   3b99d:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   3b9a1:	48 8b 72 10          	mov    0x10(%rdx),%rsi
   3b9a5:	48 8b 48 10          	mov    0x10(%rax),%rcx
   3b9a9:	48 89 70 10          	mov    %rsi,0x10(%rax)
   3b9ad:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
   3b9b1:	48 8b 13             	mov    (%rbx),%rdx
   3b9b4:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   3b9b9:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   3b9bd:	5b                   	pop    %rbx
   3b9be:	c3                   	retq   
   3b9bf:	48 8d 0d ca 93 00 00 	lea    0x93ca(%rip),%rcx        # 44d90 <__PRETTY_FUNCTION__.3768>
   3b9c6:	ba ad 00 00 00       	mov    $0xad,%edx
   3b9cb:	48 8d 35 b6 91 00 00 	lea    0x91b6(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b9d2:	48 8d 3d c0 83 00 00 	lea    0x83c0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3b9d9:	e8 22 46 fd ff       	callq  10000 <__assert_fail@plt>
   3b9de:	48 8d 0d ab 93 00 00 	lea    0x93ab(%rip),%rcx        # 44d90 <__PRETTY_FUNCTION__.3768>
   3b9e5:	ba b5 00 00 00       	mov    $0xb5,%edx
   3b9ea:	48 8d 35 97 91 00 00 	lea    0x9197(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3b9f1:	48 8d 3d a4 91 00 00 	lea    0x91a4(%rip),%rdi        # 44b9c <__PRETTY_FUNCTION__.3740+0x34>
   3b9f8:	e8 03 46 fd ff       	callq  10000 <__assert_fail@plt>
   3b9fd:	48 8d 0d 8c 93 00 00 	lea    0x938c(%rip),%rcx        # 44d90 <__PRETTY_FUNCTION__.3768>
   3ba04:	ba ae 00 00 00       	mov    $0xae,%edx
   3ba09:	48 8d 35 78 91 00 00 	lea    0x9178(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3ba10:	48 8d 3d 60 83 00 00 	lea    0x8360(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3ba17:	e8 e4 45 fd ff       	callq  10000 <__assert_fail@plt>
   3ba1c:	48 8d 0d 6d 93 00 00 	lea    0x936d(%rip),%rcx        # 44d90 <__PRETTY_FUNCTION__.3768>
   3ba23:	ba b2 00 00 00       	mov    $0xb2,%edx
   3ba28:	48 8d 35 59 91 00 00 	lea    0x9159(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3ba2f:	48 8d 3d 41 83 00 00 	lea    0x8341(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3ba36:	e8 c5 45 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ba3b <.annobin_fzlistx_add_end.end>:
   3ba3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003ba40 <fzlistx_size>:
   3ba40:	f3 0f 1e fa          	endbr64 
   3ba44:	48 85 ff             	test   %rdi,%rdi
   3ba47:	74 05                	je     3ba4e <fzlistx_size+0xe>
   3ba49:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3ba4d:	c3                   	retq   
   3ba4e:	50                   	push   %rax
   3ba4f:	48 8d 0d 22 93 00 00 	lea    0x9322(%rip),%rcx        # 44d78 <__PRETTY_FUNCTION__.3773>
   3ba56:	ba c5 00 00 00       	mov    $0xc5,%edx
   3ba5b:	48 8d 35 26 91 00 00 	lea    0x9126(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3ba62:	48 8d 3d 30 83 00 00 	lea    0x8330(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3ba69:	e8 92 45 fd ff       	callq  10000 <__assert_fail@plt>

000000000003ba6e <.annobin_fzlistx_head.start>:
   3ba6e:	66 90                	xchg   %ax,%ax

000000000003ba70 <fzlistx_head>:
   3ba70:	f3 0f 1e fa          	endbr64 
   3ba74:	48 85 ff             	test   %rdi,%rdi
   3ba77:	74 11                	je     3ba8a <fzlistx_head+0x1a>
   3ba79:	48 8b 07             	mov    (%rdi),%rax
   3ba7c:	48 85 c0             	test   %rax,%rax
   3ba7f:	74 08                	je     3ba89 <fzlistx_head+0x19>
   3ba81:	48 8b 40 08          	mov    0x8(%rax),%rax
   3ba85:	48 8b 40 18          	mov    0x18(%rax),%rax
   3ba89:	c3                   	retq   
   3ba8a:	50                   	push   %rax
   3ba8b:	48 8d 0d d6 92 00 00 	lea    0x92d6(%rip),%rcx        # 44d68 <__PRETTY_FUNCTION__.3777>
   3ba92:	ba d1 00 00 00       	mov    $0xd1,%edx
   3ba97:	48 8d 35 ea 90 00 00 	lea    0x90ea(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3ba9e:	48 8d 3d f4 82 00 00 	lea    0x82f4(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3baa5:	e8 56 45 fd ff       	callq  10000 <__assert_fail@plt>

000000000003baaa <.annobin_fzlistx_head.end>:
   3baaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003bab0 <fzlistx_tail>:
   3bab0:	f3 0f 1e fa          	endbr64 
   3bab4:	48 85 ff             	test   %rdi,%rdi
   3bab7:	74 11                	je     3baca <fzlistx_tail+0x1a>
   3bab9:	48 8b 07             	mov    (%rdi),%rax
   3babc:	48 85 c0             	test   %rax,%rax
   3babf:	74 08                	je     3bac9 <fzlistx_tail+0x19>
   3bac1:	48 8b 40 10          	mov    0x10(%rax),%rax
   3bac5:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bac9:	c3                   	retq   
   3baca:	50                   	push   %rax
   3bacb:	48 8d 0d 86 92 00 00 	lea    0x9286(%rip),%rcx        # 44d58 <__PRETTY_FUNCTION__.3781>
   3bad2:	ba de 00 00 00       	mov    $0xde,%edx
   3bad7:	48 8d 35 aa 90 00 00 	lea    0x90aa(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bade:	48 8d 3d b4 82 00 00 	lea    0x82b4(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bae5:	e8 16 45 fd ff       	callq  10000 <__assert_fail@plt>

000000000003baea <.annobin_fzlistx_first.start>:
   3baea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003baf0 <fzlistx_first>:
   3baf0:	f3 0f 1e fa          	endbr64 
   3baf4:	48 85 ff             	test   %rdi,%rdi
   3baf7:	74 1a                	je     3bb13 <fzlistx_first+0x23>
   3baf9:	48 8b 17             	mov    (%rdi),%rdx
   3bafc:	48 8b 42 08          	mov    0x8(%rdx),%rax
   3bb00:	48 89 47 08          	mov    %rax,0x8(%rdi)
   3bb04:	48 39 c2             	cmp    %rax,%rdx
   3bb07:	74 07                	je     3bb10 <fzlistx_first+0x20>
   3bb09:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bb0d:	c3                   	retq   
   3bb0e:	66 90                	xchg   %ax,%ax
   3bb10:	31 c0                	xor    %eax,%eax
   3bb12:	c3                   	retq   
   3bb13:	50                   	push   %rax
   3bb14:	48 8d 0d 2d 92 00 00 	lea    0x922d(%rip),%rcx        # 44d48 <__PRETTY_FUNCTION__.3785>
   3bb1b:	ba ea 00 00 00       	mov    $0xea,%edx
   3bb20:	48 8d 35 61 90 00 00 	lea    0x9061(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bb27:	48 8d 3d 6b 82 00 00 	lea    0x826b(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bb2e:	e8 cd 44 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bb33 <.annobin_fzlistx_first.end>:
   3bb33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bb3a:	00 00 00 00 
   3bb3e:	66 90                	xchg   %ax,%ax

000000000003bb40 <fzlistx_next>:
   3bb40:	f3 0f 1e fa          	endbr64 
   3bb44:	48 85 ff             	test   %rdi,%rdi
   3bb47:	74 1a                	je     3bb63 <fzlistx_next+0x23>
   3bb49:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3bb4d:	48 8b 40 08          	mov    0x8(%rax),%rax
   3bb51:	48 89 47 08          	mov    %rax,0x8(%rdi)
   3bb55:	48 3b 07             	cmp    (%rdi),%rax
   3bb58:	74 06                	je     3bb60 <fzlistx_next+0x20>
   3bb5a:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bb5e:	c3                   	retq   
   3bb5f:	90                   	nop
   3bb60:	31 c0                	xor    %eax,%eax
   3bb62:	c3                   	retq   
   3bb63:	50                   	push   %rax
   3bb64:	48 8d 0d cd 91 00 00 	lea    0x91cd(%rip),%rcx        # 44d38 <__PRETTY_FUNCTION__.3789>
   3bb6b:	ba f8 00 00 00       	mov    $0xf8,%edx
   3bb70:	48 8d 35 11 90 00 00 	lea    0x9011(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bb77:	48 8d 3d 1b 82 00 00 	lea    0x821b(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bb7e:	e8 7d 44 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bb83 <.annobin_fzlistx_next.end>:
   3bb83:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bb8a:	00 00 00 00 
   3bb8e:	66 90                	xchg   %ax,%ax

000000000003bb90 <fzlistx_prev>:
   3bb90:	f3 0f 1e fa          	endbr64 
   3bb94:	48 85 ff             	test   %rdi,%rdi
   3bb97:	74 1a                	je     3bbb3 <fzlistx_prev+0x23>
   3bb99:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3bb9d:	48 8b 40 10          	mov    0x10(%rax),%rax
   3bba1:	48 89 47 08          	mov    %rax,0x8(%rdi)
   3bba5:	48 3b 07             	cmp    (%rdi),%rax
   3bba8:	74 06                	je     3bbb0 <fzlistx_prev+0x20>
   3bbaa:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bbae:	c3                   	retq   
   3bbaf:	90                   	nop
   3bbb0:	31 c0                	xor    %eax,%eax
   3bbb2:	c3                   	retq   
   3bbb3:	50                   	push   %rax
   3bbb4:	48 8d 0d 6d 91 00 00 	lea    0x916d(%rip),%rcx        # 44d28 <__PRETTY_FUNCTION__.3793>
   3bbbb:	ba 06 01 00 00       	mov    $0x106,%edx
   3bbc0:	48 8d 35 c1 8f 00 00 	lea    0x8fc1(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bbc7:	48 8d 3d cb 81 00 00 	lea    0x81cb(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bbce:	e8 2d 44 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bbd3 <.annobin_fzlistx_last.start>:
   3bbd3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bbda:	00 00 00 00 
   3bbde:	66 90                	xchg   %ax,%ax

000000000003bbe0 <fzlistx_last>:
   3bbe0:	f3 0f 1e fa          	endbr64 
   3bbe4:	48 85 ff             	test   %rdi,%rdi
   3bbe7:	74 1a                	je     3bc03 <fzlistx_last+0x23>
   3bbe9:	48 8b 17             	mov    (%rdi),%rdx
   3bbec:	48 8b 42 10          	mov    0x10(%rdx),%rax
   3bbf0:	48 89 47 08          	mov    %rax,0x8(%rdi)
   3bbf4:	48 39 c2             	cmp    %rax,%rdx
   3bbf7:	74 07                	je     3bc00 <fzlistx_last+0x20>
   3bbf9:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bbfd:	c3                   	retq   
   3bbfe:	66 90                	xchg   %ax,%ax
   3bc00:	31 c0                	xor    %eax,%eax
   3bc02:	c3                   	retq   
   3bc03:	50                   	push   %rax
   3bc04:	48 8d 0d 0d 91 00 00 	lea    0x910d(%rip),%rcx        # 44d18 <__PRETTY_FUNCTION__.3797>
   3bc0b:	ba 13 01 00 00       	mov    $0x113,%edx
   3bc10:	48 8d 35 71 8f 00 00 	lea    0x8f71(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bc17:	48 8d 3d 7b 81 00 00 	lea    0x817b(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bc1e:	e8 dd 43 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bc23 <.annobin_fzlistx_item.start>:
   3bc23:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bc2a:	00 00 00 00 
   3bc2e:	66 90                	xchg   %ax,%ax

000000000003bc30 <fzlistx_item>:
   3bc30:	f3 0f 1e fa          	endbr64 
   3bc34:	48 85 ff             	test   %rdi,%rdi
   3bc37:	74 1a                	je     3bc53 <fzlistx_item+0x23>
   3bc39:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3bc3d:	48 3b 07             	cmp    (%rdi),%rax
   3bc40:	74 0e                	je     3bc50 <fzlistx_item+0x20>
   3bc42:	48 8b 40 18          	mov    0x18(%rax),%rax
   3bc46:	c3                   	retq   
   3bc47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3bc4e:	00 00 
   3bc50:	31 c0                	xor    %eax,%eax
   3bc52:	c3                   	retq   
   3bc53:	50                   	push   %rax
   3bc54:	48 8d 0d ad 90 00 00 	lea    0x90ad(%rip),%rcx        # 44d08 <__PRETTY_FUNCTION__.3801>
   3bc5b:	ba 20 01 00 00       	mov    $0x120,%edx
   3bc60:	48 8d 35 21 8f 00 00 	lea    0x8f21(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bc67:	48 8d 3d 2b 81 00 00 	lea    0x812b(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bc6e:	e8 8d 43 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bc73 <.annobin_fzlistx_cursor.start>:
   3bc73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bc7a:	00 00 00 00 
   3bc7e:	66 90                	xchg   %ax,%ax

000000000003bc80 <fzlistx_cursor>:
   3bc80:	f3 0f 1e fa          	endbr64 
   3bc84:	48 85 ff             	test   %rdi,%rdi
   3bc87:	74 11                	je     3bc9a <fzlistx_cursor+0x1a>
   3bc89:	48 8b 47 08          	mov    0x8(%rdi),%rax
   3bc8d:	ba 00 00 00 00       	mov    $0x0,%edx
   3bc92:	48 3b 07             	cmp    (%rdi),%rax
   3bc95:	48 0f 44 c2          	cmove  %rdx,%rax
   3bc99:	c3                   	retq   
   3bc9a:	50                   	push   %rax
   3bc9b:	48 8d 0d 56 90 00 00 	lea    0x9056(%rip),%rcx        # 44cf8 <__PRETTY_FUNCTION__.3805>
   3bca2:	ba 2c 01 00 00       	mov    $0x12c,%edx
   3bca7:	48 8d 35 da 8e 00 00 	lea    0x8eda(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bcae:	48 8d 3d e4 80 00 00 	lea    0x80e4(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bcb5:	e8 46 43 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bcba <.annobin_fzlistx_cursor.end>:
   3bcba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003bcc0 <fzlistx_handle_item>:
   3bcc0:	f3 0f 1e fa          	endbr64 
   3bcc4:	48 85 ff             	test   %rdi,%rdi
   3bcc7:	74 17                	je     3bce0 <fzlistx_handle_item+0x20>
   3bcc9:	81 3f 06 00 fe ca    	cmpl   $0xcafe0006,(%rdi)
   3bccf:	75 12                	jne    3bce3 <fzlistx_handle_item+0x23>
   3bcd1:	48 8b 47 18          	mov    0x18(%rdi),%rax
   3bcd5:	c3                   	retq   
   3bcd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3bcdd:	00 00 00 
   3bce0:	31 c0                	xor    %eax,%eax
   3bce2:	c3                   	retq   
   3bce3:	50                   	push   %rax
   3bce4:	48 8d 0d f5 8f 00 00 	lea    0x8ff5(%rip),%rcx        # 44ce0 <__PRETTY_FUNCTION__.3810>
   3bceb:	ba 3b 01 00 00       	mov    $0x13b,%edx
   3bcf0:	48 8d 35 91 8e 00 00 	lea    0x8e91(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bcf7:	48 8d 3d a3 8e 00 00 	lea    0x8ea3(%rip),%rdi        # 44ba1 <__PRETTY_FUNCTION__.3740+0x39>
   3bcfe:	e8 fd 42 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bd03 <.annobin_fzlistx_find.start>:
   3bd03:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bd0a:	00 00 00 00 
   3bd0e:	66 90                	xchg   %ax,%ax

000000000003bd10 <fzlistx_find>:
   3bd10:	f3 0f 1e fa          	endbr64 
   3bd14:	41 54                	push   %r12
   3bd16:	55                   	push   %rbp
   3bd17:	53                   	push   %rbx
   3bd18:	48 85 ff             	test   %rdi,%rdi
   3bd1b:	74 74                	je     3bd91 <fzlistx_find+0x81>
   3bd1d:	49 89 f4             	mov    %rsi,%r12
   3bd20:	48 85 f6             	test   %rsi,%rsi
   3bd23:	74 4d                	je     3bd72 <fzlistx_find+0x62>
   3bd25:	48 8b 07             	mov    (%rdi),%rax
   3bd28:	48 89 fd             	mov    %rdi,%rbp
   3bd2b:	48 8b 58 08          	mov    0x8(%rax),%rbx
   3bd2f:	48 39 d8             	cmp    %rbx,%rax
   3bd32:	75 16                	jne    3bd4a <fzlistx_find+0x3a>
   3bd34:	eb 32                	jmp    3bd68 <fzlistx_find+0x58>
   3bd36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3bd3d:	00 00 00 
   3bd40:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3bd44:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
   3bd48:	74 1e                	je     3bd68 <fzlistx_find+0x58>
   3bd4a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   3bd4e:	4c 89 e6             	mov    %r12,%rsi
   3bd51:	ff 55 28             	callq  *0x28(%rbp)
   3bd54:	85 c0                	test   %eax,%eax
   3bd56:	75 e8                	jne    3bd40 <fzlistx_find+0x30>
   3bd58:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   3bd5c:	48 89 d8             	mov    %rbx,%rax
   3bd5f:	5b                   	pop    %rbx
   3bd60:	5d                   	pop    %rbp
   3bd61:	41 5c                	pop    %r12
   3bd63:	c3                   	retq   
   3bd64:	0f 1f 40 00          	nopl   0x0(%rax)
   3bd68:	31 db                	xor    %ebx,%ebx
   3bd6a:	48 89 d8             	mov    %rbx,%rax
   3bd6d:	5b                   	pop    %rbx
   3bd6e:	5d                   	pop    %rbp
   3bd6f:	41 5c                	pop    %r12
   3bd71:	c3                   	retq   
   3bd72:	48 8d 0d 4f 8f 00 00 	lea    0x8f4f(%rip),%rcx        # 44cc8 <__PRETTY_FUNCTION__.3815>
   3bd79:	ba 49 01 00 00       	mov    $0x149,%edx
   3bd7e:	48 8d 35 03 8e 00 00 	lea    0x8e03(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bd85:	48 8d 3d eb 7f 00 00 	lea    0x7feb(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3bd8c:	e8 6f 42 fd ff       	callq  10000 <__assert_fail@plt>
   3bd91:	48 8d 0d 30 8f 00 00 	lea    0x8f30(%rip),%rcx        # 44cc8 <__PRETTY_FUNCTION__.3815>
   3bd98:	ba 48 01 00 00       	mov    $0x148,%edx
   3bd9d:	48 8d 35 e4 8d 00 00 	lea    0x8de4(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bda4:	48 8d 3d ee 7f 00 00 	lea    0x7fee(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bdab:	e8 50 42 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bdb0 <fzlistx_detach>:
   3bdb0:	f3 0f 1e fa          	endbr64 
   3bdb4:	55                   	push   %rbp
   3bdb5:	53                   	push   %rbx
   3bdb6:	48 83 ec 08          	sub    $0x8,%rsp
   3bdba:	48 85 ff             	test   %rdi,%rdi
   3bdbd:	0f 84 84 00 00 00    	je     3be47 <fzlistx_detach+0x97>
   3bdc3:	48 89 fb             	mov    %rdi,%rbx
   3bdc6:	48 85 f6             	test   %rsi,%rsi
   3bdc9:	74 45                	je     3be10 <fzlistx_detach+0x60>
   3bdcb:	48 39 73 08          	cmp    %rsi,0x8(%rbx)
   3bdcf:	74 5f                	je     3be30 <fzlistx_detach+0x80>
   3bdd1:	81 3e 06 00 fe ca    	cmpl   $0xcafe0006,(%rsi)
   3bdd7:	0f 85 89 00 00 00    	jne    3be66 <fzlistx_detach+0xb6>
   3bddd:	48 8b 46 08          	mov    0x8(%rsi),%rax
   3bde1:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   3bde5:	48 89 f7             	mov    %rsi,%rdi
   3bde8:	48 89 42 08          	mov    %rax,0x8(%rdx)
   3bdec:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   3bdf0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   3bdf4:	48 8b 6e 18          	mov    0x18(%rsi),%rbp
   3bdf8:	e8 b3 3c fd ff       	callq  fab0 <free@plt>
   3bdfd:	48 83 6b 10 01       	subq   $0x1,0x10(%rbx)
   3be02:	48 83 c4 08          	add    $0x8,%rsp
   3be06:	48 89 e8             	mov    %rbp,%rax
   3be09:	5b                   	pop    %rbx
   3be0a:	5d                   	pop    %rbp
   3be0b:	c3                   	retq   
   3be0c:	0f 1f 40 00          	nopl   0x0(%rax)
   3be10:	48 8b 07             	mov    (%rdi),%rax
   3be13:	48 8b 70 08          	mov    0x8(%rax),%rsi
   3be17:	48 39 f0             	cmp    %rsi,%rax
   3be1a:	75 24                	jne    3be40 <fzlistx_detach+0x90>
   3be1c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   3be21:	75 62                	jne    3be85 <fzlistx_detach+0xd5>
   3be23:	31 ed                	xor    %ebp,%ebp
   3be25:	48 83 c4 08          	add    $0x8,%rsp
   3be29:	48 89 e8             	mov    %rbp,%rax
   3be2c:	5b                   	pop    %rbx
   3be2d:	5d                   	pop    %rbp
   3be2e:	c3                   	retq   
   3be2f:	90                   	nop
   3be30:	48 8b 46 10          	mov    0x10(%rsi),%rax
   3be34:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3be38:	eb 97                	jmp    3bdd1 <fzlistx_detach+0x21>
   3be3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3be40:	48 85 f6             	test   %rsi,%rsi
   3be43:	74 d7                	je     3be1c <fzlistx_detach+0x6c>
   3be45:	eb 84                	jmp    3bdcb <fzlistx_detach+0x1b>
   3be47:	48 8d 0d 6a 8e 00 00 	lea    0x8e6a(%rip),%rcx        # 44cb8 <__PRETTY_FUNCTION__.3824>
   3be4e:	ba 62 01 00 00       	mov    $0x162,%edx
   3be53:	48 8d 35 2e 8d 00 00 	lea    0x8d2e(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3be5a:	48 8d 3d 38 7f 00 00 	lea    0x7f38(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3be61:	e8 9a 41 fd ff       	callq  10000 <__assert_fail@plt>
   3be66:	48 8d 0d 4b 8e 00 00 	lea    0x8e4b(%rip),%rcx        # 44cb8 <__PRETTY_FUNCTION__.3824>
   3be6d:	ba 6e 01 00 00       	mov    $0x16e,%edx
   3be72:	48 8d 35 0f 8d 00 00 	lea    0x8d0f(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3be79:	48 8d 3d 21 8d 00 00 	lea    0x8d21(%rip),%rdi        # 44ba1 <__PRETTY_FUNCTION__.3740+0x39>
   3be80:	e8 7b 41 fd ff       	callq  10000 <__assert_fail@plt>
   3be85:	48 8d 0d 2c 8e 00 00 	lea    0x8e2c(%rip),%rcx        # 44cb8 <__PRETTY_FUNCTION__.3824>
   3be8c:	ba 77 01 00 00       	mov    $0x177,%edx
   3be91:	48 8d 35 f0 8c 00 00 	lea    0x8cf0(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3be98:	48 8d 3d 18 8d 00 00 	lea    0x8d18(%rip),%rdi        # 44bb7 <__PRETTY_FUNCTION__.3740+0x4f>
   3be9f:	e8 5c 41 fd ff       	callq  10000 <__assert_fail@plt>

000000000003bea4 <.annobin_fzlistx_detach.end>:
   3bea4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3beab:	00 00 00 00 
   3beaf:	90                   	nop

000000000003beb0 <fzlistx_detach_cur>:
   3beb0:	f3 0f 1e fa          	endbr64 
   3beb4:	53                   	push   %rbx
   3beb5:	48 89 fb             	mov    %rdi,%rbx
   3beb8:	e8 c3 fd ff ff       	callq  3bc80 <fzlistx_cursor>
   3bebd:	48 89 df             	mov    %rbx,%rdi
   3bec0:	5b                   	pop    %rbx
   3bec1:	48 89 c6             	mov    %rax,%rsi
   3bec4:	e9 e7 fe ff ff       	jmpq   3bdb0 <fzlistx_detach>

000000000003bec9 <.annobin_fzlistx_delete.start>:
   3bec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003bed0 <fzlistx_delete>:
   3bed0:	f3 0f 1e fa          	endbr64 
   3bed4:	53                   	push   %rbx
   3bed5:	48 83 ec 10          	sub    $0x10,%rsp
   3bed9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3bee0:	00 00 
   3bee2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3bee7:	31 c0                	xor    %eax,%eax
   3bee9:	48 85 ff             	test   %rdi,%rdi
   3beec:	74 40                	je     3bf2e <fzlistx_delete+0x5e>
   3beee:	48 89 fb             	mov    %rdi,%rbx
   3bef1:	e8 ba fe ff ff       	callq  3bdb0 <fzlistx_detach>
   3bef6:	48 89 04 24          	mov    %rax,(%rsp)
   3befa:	48 85 c0             	test   %rax,%rax
   3befd:	74 28                	je     3bf27 <fzlistx_delete+0x57>
   3beff:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   3bf03:	31 db                	xor    %ebx,%ebx
   3bf05:	48 85 d2             	test   %rdx,%rdx
   3bf08:	74 05                	je     3bf0f <fzlistx_delete+0x3f>
   3bf0a:	48 89 e7             	mov    %rsp,%rdi
   3bf0d:	ff d2                	callq  *%rdx
   3bf0f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   3bf14:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3bf1b:	00 00 
   3bf1d:	89 d8                	mov    %ebx,%eax
   3bf1f:	75 2c                	jne    3bf4d <fzlistx_delete+0x7d>
   3bf21:	48 83 c4 10          	add    $0x10,%rsp
   3bf25:	5b                   	pop    %rbx
   3bf26:	c3                   	retq   
   3bf27:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3bf2c:	eb e1                	jmp    3bf0f <fzlistx_delete+0x3f>
   3bf2e:	48 8d 0d 73 8d 00 00 	lea    0x8d73(%rip),%rcx        # 44ca8 <__PRETTY_FUNCTION__.3834>
   3bf35:	ba 94 01 00 00       	mov    $0x194,%edx
   3bf3a:	48 8d 35 47 8c 00 00 	lea    0x8c47(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bf41:	48 8d 3d 51 7e 00 00 	lea    0x7e51(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bf48:	e8 b3 40 fd ff       	callq  10000 <__assert_fail@plt>
   3bf4d:	e8 fe 3e fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003bf52 <.annobin_fzlistx_delete.end>:
   3bf52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3bf59:	00 00 00 00 
   3bf5d:	0f 1f 00             	nopl   (%rax)

000000000003bf60 <fzlistx_move_start>:
   3bf60:	f3 0f 1e fa          	endbr64 
   3bf64:	48 83 ec 08          	sub    $0x8,%rsp
   3bf68:	48 85 ff             	test   %rdi,%rdi
   3bf6b:	74 6a                	je     3bfd7 <fzlistx_move_start+0x77>
   3bf6d:	48 85 f6             	test   %rsi,%rsi
   3bf70:	0f 84 9f 00 00 00    	je     3c015 <fzlistx_move_start+0xb5>
   3bf76:	81 3e 06 00 fe ca    	cmpl   $0xcafe0006,(%rsi)
   3bf7c:	75 78                	jne    3bff6 <fzlistx_move_start+0x96>
   3bf7e:	48 8b 07             	mov    (%rdi),%rax
   3bf81:	48 8b 40 08          	mov    0x8(%rax),%rax
   3bf85:	48 39 c6             	cmp    %rax,%rsi
   3bf88:	74 48                	je     3bfd2 <fzlistx_move_start+0x72>
   3bf8a:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   3bf8e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   3bf92:	48 8b 79 08          	mov    0x8(%rcx),%rdi
   3bf96:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
   3bf9a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   3bf9e:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
   3bfa2:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   3bfa6:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   3bfaa:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
   3bfae:	48 8b 50 10          	mov    0x10(%rax),%rdx
   3bfb2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   3bfb6:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   3bfba:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
   3bfbe:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   3bfc2:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   3bfc6:	48 8b 48 10          	mov    0x10(%rax),%rcx
   3bfca:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   3bfce:	48 89 50 10          	mov    %rdx,0x10(%rax)
   3bfd2:	48 83 c4 08          	add    $0x8,%rsp
   3bfd6:	c3                   	retq   
   3bfd7:	48 8d 0d b2 8c 00 00 	lea    0x8cb2(%rip),%rcx        # 44c90 <__PRETTY_FUNCTION__.3840>
   3bfde:	ba a6 01 00 00       	mov    $0x1a6,%edx
   3bfe3:	48 8d 35 9e 8b 00 00 	lea    0x8b9e(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3bfea:	48 8d 3d a8 7d 00 00 	lea    0x7da8(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3bff1:	e8 0a 40 fd ff       	callq  10000 <__assert_fail@plt>
   3bff6:	48 8d 0d 93 8c 00 00 	lea    0x8c93(%rip),%rcx        # 44c90 <__PRETTY_FUNCTION__.3840>
   3bffd:	ba a9 01 00 00       	mov    $0x1a9,%edx
   3c002:	48 8d 35 7f 8b 00 00 	lea    0x8b7f(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c009:	48 8d 3d 91 8b 00 00 	lea    0x8b91(%rip),%rdi        # 44ba1 <__PRETTY_FUNCTION__.3740+0x39>
   3c010:	e8 eb 3f fd ff       	callq  10000 <__assert_fail@plt>
   3c015:	48 8d 0d 74 8c 00 00 	lea    0x8c74(%rip),%rcx        # 44c90 <__PRETTY_FUNCTION__.3840>
   3c01c:	ba a7 01 00 00       	mov    $0x1a7,%edx
   3c021:	48 8d 35 60 8b 00 00 	lea    0x8b60(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c028:	48 8d 3d 98 8b 00 00 	lea    0x8b98(%rip),%rdi        # 44bc7 <__PRETTY_FUNCTION__.3740+0x5f>
   3c02f:	e8 cc 3f fd ff       	callq  10000 <__assert_fail@plt>

000000000003c034 <.annobin_fzlistx_move_end.start>:
   3c034:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3c03b:	00 00 00 00 
   3c03f:	90                   	nop

000000000003c040 <fzlistx_move_end>:
   3c040:	f3 0f 1e fa          	endbr64 
   3c044:	48 83 ec 08          	sub    $0x8,%rsp
   3c048:	48 85 ff             	test   %rdi,%rdi
   3c04b:	74 66                	je     3c0b3 <fzlistx_move_end+0x73>
   3c04d:	48 85 f6             	test   %rsi,%rsi
   3c050:	0f 84 9b 00 00 00    	je     3c0f1 <fzlistx_move_end+0xb1>
   3c056:	81 3e 06 00 fe ca    	cmpl   $0xcafe0006,(%rsi)
   3c05c:	75 74                	jne    3c0d2 <fzlistx_move_end+0x92>
   3c05e:	48 8b 07             	mov    (%rdi),%rax
   3c061:	48 8b 40 10          	mov    0x10(%rax),%rax
   3c065:	48 39 c6             	cmp    %rax,%rsi
   3c068:	74 44                	je     3c0ae <fzlistx_move_end+0x6e>
   3c06a:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   3c06e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   3c072:	48 8b 79 08          	mov    0x8(%rcx),%rdi
   3c076:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
   3c07a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   3c07e:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
   3c082:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   3c086:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   3c08a:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
   3c08e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   3c092:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   3c096:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   3c09a:	48 89 48 08          	mov    %rcx,0x8(%rax)
   3c09e:	48 8b 46 10          	mov    0x10(%rsi),%rax
   3c0a2:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   3c0a6:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   3c0aa:	48 89 42 10          	mov    %rax,0x10(%rdx)
   3c0ae:	48 83 c4 08          	add    $0x8,%rsp
   3c0b2:	c3                   	retq   
   3c0b3:	48 8d 0d b6 8b 00 00 	lea    0x8bb6(%rip),%rcx        # 44c70 <__PRETTY_FUNCTION__.3847>
   3c0ba:	ba ba 01 00 00       	mov    $0x1ba,%edx
   3c0bf:	48 8d 35 c2 8a 00 00 	lea    0x8ac2(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c0c6:	48 8d 3d cc 7c 00 00 	lea    0x7ccc(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c0cd:	e8 2e 3f fd ff       	callq  10000 <__assert_fail@plt>
   3c0d2:	48 8d 0d 97 8b 00 00 	lea    0x8b97(%rip),%rcx        # 44c70 <__PRETTY_FUNCTION__.3847>
   3c0d9:	ba bd 01 00 00       	mov    $0x1bd,%edx
   3c0de:	48 8d 35 a3 8a 00 00 	lea    0x8aa3(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c0e5:	48 8d 3d b5 8a 00 00 	lea    0x8ab5(%rip),%rdi        # 44ba1 <__PRETTY_FUNCTION__.3740+0x39>
   3c0ec:	e8 0f 3f fd ff       	callq  10000 <__assert_fail@plt>
   3c0f1:	48 8d 0d 78 8b 00 00 	lea    0x8b78(%rip),%rcx        # 44c70 <__PRETTY_FUNCTION__.3847>
   3c0f8:	ba bb 01 00 00       	mov    $0x1bb,%edx
   3c0fd:	48 8d 35 84 8a 00 00 	lea    0x8a84(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c104:	48 8d 3d bc 8a 00 00 	lea    0x8abc(%rip),%rdi        # 44bc7 <__PRETTY_FUNCTION__.3740+0x5f>
   3c10b:	e8 f0 3e fd ff       	callq  10000 <__assert_fail@plt>

000000000003c110 <fzlistx_purge>:
   3c110:	f3 0f 1e fa          	endbr64 
   3c114:	53                   	push   %rbx
   3c115:	48 85 ff             	test   %rdi,%rdi
   3c118:	74 1f                	je     3c139 <fzlistx_purge+0x29>
   3c11a:	48 89 fb             	mov    %rdi,%rbx
   3c11d:	eb 0b                	jmp    3c12a <fzlistx_purge+0x1a>
   3c11f:	90                   	nop
   3c120:	31 f6                	xor    %esi,%esi
   3c122:	48 89 df             	mov    %rbx,%rdi
   3c125:	e8 a6 fd ff ff       	callq  3bed0 <fzlistx_delete>
   3c12a:	48 89 df             	mov    %rbx,%rdi
   3c12d:	e8 0e f9 ff ff       	callq  3ba40 <fzlistx_size>
   3c132:	48 85 c0             	test   %rax,%rax
   3c135:	75 e9                	jne    3c120 <fzlistx_purge+0x10>
   3c137:	5b                   	pop    %rbx
   3c138:	c3                   	retq   
   3c139:	48 8d 0d 20 8b 00 00 	lea    0x8b20(%rip),%rcx        # 44c60 <__PRETTY_FUNCTION__.3853>
   3c140:	ba cf 01 00 00       	mov    $0x1cf,%edx
   3c145:	48 8d 35 3c 8a 00 00 	lea    0x8a3c(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c14c:	48 8d 3d 46 7c 00 00 	lea    0x7c46(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c153:	e8 a8 3e fd ff       	callq  10000 <__assert_fail@plt>

000000000003c158 <.annobin_fzlistx_destroy.start>:
   3c158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3c15f:	00 

000000000003c160 <fzlistx_destroy>:
   3c160:	f3 0f 1e fa          	endbr64 
   3c164:	55                   	push   %rbp
   3c165:	53                   	push   %rbx
   3c166:	48 83 ec 08          	sub    $0x8,%rsp
   3c16a:	48 85 ff             	test   %rdi,%rdi
   3c16d:	74 32                	je     3c1a1 <fzlistx_destroy+0x41>
   3c16f:	48 8b 1f             	mov    (%rdi),%rbx
   3c172:	48 89 fd             	mov    %rdi,%rbp
   3c175:	48 85 db             	test   %rbx,%rbx
   3c178:	74 20                	je     3c19a <fzlistx_destroy+0x3a>
   3c17a:	48 89 df             	mov    %rbx,%rdi
   3c17d:	e8 8e ff ff ff       	callq  3c110 <fzlistx_purge>
   3c182:	48 8b 3b             	mov    (%rbx),%rdi
   3c185:	e8 26 39 fd ff       	callq  fab0 <free@plt>
   3c18a:	48 89 df             	mov    %rbx,%rdi
   3c18d:	e8 1e 39 fd ff       	callq  fab0 <free@plt>
   3c192:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   3c199:	00 
   3c19a:	48 83 c4 08          	add    $0x8,%rsp
   3c19e:	5b                   	pop    %rbx
   3c19f:	5d                   	pop    %rbp
   3c1a0:	c3                   	retq   
   3c1a1:	48 8d 0d 18 8c 00 00 	lea    0x8c18(%rip),%rcx        # 44dc0 <__PRETTY_FUNCTION__.3756>
   3c1a8:	ba 80 00 00 00       	mov    $0x80,%edx
   3c1ad:	48 8d 35 d4 89 00 00 	lea    0x89d4(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c1b4:	48 8d 3d d7 7b 00 00 	lea    0x7bd7(%rip),%rdi        # 43d92 <__PRETTY_FUNCTION__.3724+0x32>
   3c1bb:	e8 40 3e fd ff       	callq  10000 <__assert_fail@plt>

000000000003c1c0 <fzlistx_sort>:
   3c1c0:	f3 0f 1e fa          	endbr64 
   3c1c4:	41 57                	push   %r15
   3c1c6:	41 56                	push   %r14
   3c1c8:	41 55                	push   %r13
   3c1ca:	41 54                	push   %r12
   3c1cc:	55                   	push   %rbp
   3c1cd:	53                   	push   %rbx
   3c1ce:	48 83 ec 08          	sub    $0x8,%rsp
   3c1d2:	48 85 ff             	test   %rdi,%rdi
   3c1d5:	0f 84 24 01 00 00    	je     3c2ff <fzlistx_sort+0x13f>
   3c1db:	4c 8b 6f 10          	mov    0x10(%rdi),%r13
   3c1df:	49 89 fe             	mov    %rdi,%r14
   3c1e2:	45 31 ff             	xor    %r15d,%r15d
   3c1e5:	0f 1f 00             	nopl   (%rax)
   3c1e8:	49 83 fd 01          	cmp    $0x1,%r13
   3c1ec:	77 09                	ja     3c1f7 <fzlistx_sort+0x37>
   3c1ee:	45 84 ff             	test   %r15b,%r15b
   3c1f1:	0f 84 f9 00 00 00    	je     3c2f0 <fzlistx_sort+0x130>
   3c1f7:	4d 85 ed             	test   %r13,%r13
   3c1fa:	0f 88 d0 00 00 00    	js     3c2d0 <fzlistx_sort+0x110>
   3c200:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3c204:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
   3c209:	f2 0f 5e 05 67 89 00 	divsd  0x8967(%rip),%xmm0        # 44b78 <__PRETTY_FUNCTION__.3740+0x10>
   3c210:	00 
   3c211:	66 0f 2f 05 67 89 00 	comisd 0x8967(%rip),%xmm0        # 44b80 <__PRETTY_FUNCTION__.3740+0x18>
   3c218:	00 
   3c219:	0f 83 91 00 00 00    	jae    3c2b0 <fzlistx_sort+0xf0>
   3c21f:	f2 4c 0f 2c e8       	cvttsd2si %xmm0,%r13
   3c224:	49 8b 0e             	mov    (%r14),%rcx
   3c227:	49 8d 45 ff          	lea    -0x1(%r13),%rax
   3c22b:	48 8b 69 08          	mov    0x8(%rcx),%rbp
   3c22f:	48 89 eb             	mov    %rbp,%rbx
   3c232:	4d 85 ed             	test   %r13,%r13
   3c235:	74 17                	je     3c24e <fzlistx_sort+0x8e>
   3c237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3c23e:	00 00 
   3c240:	48 83 e8 01          	sub    $0x1,%rax
   3c244:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3c248:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3c24c:	75 f2                	jne    3c240 <fzlistx_sort+0x80>
   3c24e:	48 39 d9             	cmp    %rbx,%rcx
   3c251:	41 0f 95 c4          	setne  %r12b
   3c255:	48 39 e9             	cmp    %rbp,%rcx
   3c258:	0f 95 c0             	setne  %al
   3c25b:	45 31 ff             	xor    %r15d,%r15d
   3c25e:	41 20 c4             	and    %al,%r12b
   3c261:	75 0e                	jne    3c271 <fzlistx_sort+0xb1>
   3c263:	eb 83                	jmp    3c1e8 <fzlistx_sort+0x28>
   3c265:	0f 1f 00             	nopl   (%rax)
   3c268:	48 39 d8             	cmp    %rbx,%rax
   3c26b:	0f 84 77 ff ff ff    	je     3c1e8 <fzlistx_sort+0x28>
   3c271:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3c275:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   3c279:	41 ff 56 28          	callq  *0x28(%r14)
   3c27d:	85 c0                	test   %eax,%eax
   3c27f:	7e 13                	jle    3c294 <fzlistx_sort+0xd4>
   3c281:	48 8b 45 18          	mov    0x18(%rbp),%rax
   3c285:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   3c289:	45 89 e7             	mov    %r12d,%r15d
   3c28c:	48 89 4d 18          	mov    %rcx,0x18(%rbp)
   3c290:	48 89 43 18          	mov    %rax,0x18(%rbx)
   3c294:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
   3c298:	49 8b 06             	mov    (%r14),%rax
   3c29b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3c29f:	48 39 e8             	cmp    %rbp,%rax
   3c2a2:	75 c4                	jne    3c268 <fzlistx_sort+0xa8>
   3c2a4:	e9 3f ff ff ff       	jmpq   3c1e8 <fzlistx_sort+0x28>
   3c2a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3c2b0:	f2 0f 5c 05 c8 88 00 	subsd  0x88c8(%rip),%xmm0        # 44b80 <__PRETTY_FUNCTION__.3740+0x18>
   3c2b7:	00 
   3c2b8:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   3c2bf:	00 00 80 
   3c2c2:	f2 4c 0f 2c e8       	cvttsd2si %xmm0,%r13
   3c2c7:	49 31 c5             	xor    %rax,%r13
   3c2ca:	e9 55 ff ff ff       	jmpq   3c224 <fzlistx_sort+0x64>
   3c2cf:	90                   	nop
   3c2d0:	4c 89 e8             	mov    %r13,%rax
   3c2d3:	41 83 e5 01          	and    $0x1,%r13d
   3c2d7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3c2db:	48 d1 e8             	shr    %rax
   3c2de:	4c 09 e8             	or     %r13,%rax
   3c2e1:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   3c2e6:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   3c2ea:	e9 1a ff ff ff       	jmpq   3c209 <fzlistx_sort+0x49>
   3c2ef:	90                   	nop
   3c2f0:	48 83 c4 08          	add    $0x8,%rsp
   3c2f4:	5b                   	pop    %rbx
   3c2f5:	5d                   	pop    %rbp
   3c2f6:	41 5c                	pop    %r12
   3c2f8:	41 5d                	pop    %r13
   3c2fa:	41 5e                	pop    %r14
   3c2fc:	41 5f                	pop    %r15
   3c2fe:	c3                   	retq   
   3c2ff:	48 8d 0d 4a 89 00 00 	lea    0x894a(%rip),%rcx        # 44c50 <__PRETTY_FUNCTION__.3860>
   3c306:	ba df 01 00 00       	mov    $0x1df,%edx
   3c30b:	48 8d 35 76 88 00 00 	lea    0x8876(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c312:	48 8d 3d 80 7a 00 00 	lea    0x7a80(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c319:	e8 e2 3c fd ff       	callq  10000 <__assert_fail@plt>

000000000003c31e <.annobin_fzlistx_reorder.start>:
   3c31e:	66 90                	xchg   %ax,%ax

000000000003c320 <fzlistx_reorder>:
   3c320:	f3 0f 1e fa          	endbr64 
   3c324:	41 54                	push   %r12
   3c326:	55                   	push   %rbp
   3c327:	53                   	push   %rbx
   3c328:	48 85 ff             	test   %rdi,%rdi
   3c32b:	0f 84 2f 01 00 00    	je     3c460 <fzlistx_reorder+0x140>
   3c331:	48 89 f3             	mov    %rsi,%rbx
   3c334:	48 85 f6             	test   %rsi,%rsi
   3c337:	0f 84 04 01 00 00    	je     3c441 <fzlistx_reorder+0x121>
   3c33d:	81 3e 06 00 fe ca    	cmpl   $0xcafe0006,(%rsi)
   3c343:	0f 85 d9 00 00 00    	jne    3c422 <fzlistx_reorder+0x102>
   3c349:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   3c34d:	48 8b 46 08          	mov    0x8(%rsi),%rax
   3c351:	48 89 fd             	mov    %rdi,%rbp
   3c354:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   3c358:	48 89 73 08          	mov    %rsi,0x8(%rbx)
   3c35c:	48 89 41 08          	mov    %rax,0x8(%rcx)
   3c360:	48 8b 70 10          	mov    0x10(%rax),%rsi
   3c364:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   3c368:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   3c36c:	48 89 48 10          	mov    %rcx,0x10(%rax)
   3c370:	48 8b 07             	mov    (%rdi),%rax
   3c373:	84 d2                	test   %dl,%dl
   3c375:	74 59                	je     3c3d0 <fzlistx_reorder+0xb0>
   3c377:	4c 8b 60 08          	mov    0x8(%rax),%r12
   3c37b:	4c 39 e0             	cmp    %r12,%rax
   3c37e:	75 13                	jne    3c393 <fzlistx_reorder+0x73>
   3c380:	eb 21                	jmp    3c3a3 <fzlistx_reorder+0x83>
   3c382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3c388:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
   3c38d:	4c 39 65 00          	cmp    %r12,0x0(%rbp)
   3c391:	74 10                	je     3c3a3 <fzlistx_reorder+0x83>
   3c393:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   3c398:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   3c39c:	ff 55 28             	callq  *0x28(%rbp)
   3c39f:	85 c0                	test   %eax,%eax
   3c3a1:	7f e5                	jg     3c388 <fzlistx_reorder+0x68>
   3c3a3:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   3c3a8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3c3ac:	48 8b 48 08          	mov    0x8(%rax),%rcx
   3c3b0:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
   3c3b4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   3c3b8:	48 8b 43 10          	mov    0x10(%rbx),%rax
   3c3bc:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   3c3c1:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   3c3c5:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   3c3ca:	5b                   	pop    %rbx
   3c3cb:	5d                   	pop    %rbp
   3c3cc:	41 5c                	pop    %r12
   3c3ce:	c3                   	retq   
   3c3cf:	90                   	nop
   3c3d0:	4c 8b 60 10          	mov    0x10(%rax),%r12
   3c3d4:	4c 39 e0             	cmp    %r12,%rax
   3c3d7:	75 12                	jne    3c3eb <fzlistx_reorder+0xcb>
   3c3d9:	eb 20                	jmp    3c3fb <fzlistx_reorder+0xdb>
   3c3db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3c3e0:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
   3c3e5:	4c 39 65 00          	cmp    %r12,0x0(%rbp)
   3c3e9:	74 10                	je     3c3fb <fzlistx_reorder+0xdb>
   3c3eb:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3c3ef:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
   3c3f4:	ff 55 28             	callq  *0x28(%rbp)
   3c3f7:	85 c0                	test   %eax,%eax
   3c3f9:	7f e5                	jg     3c3e0 <fzlistx_reorder+0xc0>
   3c3fb:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   3c400:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3c404:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3c408:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   3c40d:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   3c411:	48 8b 48 10          	mov    0x10(%rax),%rcx
   3c415:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   3c419:	48 89 50 10          	mov    %rdx,0x10(%rax)
   3c41d:	5b                   	pop    %rbx
   3c41e:	5d                   	pop    %rbp
   3c41f:	41 5c                	pop    %r12
   3c421:	c3                   	retq   
   3c422:	48 8d 0d 07 88 00 00 	lea    0x8807(%rip),%rcx        # 44c30 <__PRETTY_FUNCTION__.3888>
   3c429:	ba 22 02 00 00       	mov    $0x222,%edx
   3c42e:	48 8d 35 53 87 00 00 	lea    0x8753(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c435:	48 8d 3d 65 87 00 00 	lea    0x8765(%rip),%rdi        # 44ba1 <__PRETTY_FUNCTION__.3740+0x39>
   3c43c:	e8 bf 3b fd ff       	callq  10000 <__assert_fail@plt>
   3c441:	48 8d 0d e8 87 00 00 	lea    0x87e8(%rip),%rcx        # 44c30 <__PRETTY_FUNCTION__.3888>
   3c448:	ba 20 02 00 00       	mov    $0x220,%edx
   3c44d:	48 8d 35 34 87 00 00 	lea    0x8734(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c454:	48 8d 3d 6c 87 00 00 	lea    0x876c(%rip),%rdi        # 44bc7 <__PRETTY_FUNCTION__.3740+0x5f>
   3c45b:	e8 a0 3b fd ff       	callq  10000 <__assert_fail@plt>
   3c460:	48 8d 0d c9 87 00 00 	lea    0x87c9(%rip),%rcx        # 44c30 <__PRETTY_FUNCTION__.3888>
   3c467:	ba 1f 02 00 00       	mov    $0x21f,%edx
   3c46c:	48 8d 35 15 87 00 00 	lea    0x8715(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c473:	48 8d 3d 1f 79 00 00 	lea    0x791f(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c47a:	e8 81 3b fd ff       	callq  10000 <__assert_fail@plt>

000000000003c47f <.annobin_fzlistx_insert.start>:
   3c47f:	90                   	nop

000000000003c480 <fzlistx_insert>:
   3c480:	f3 0f 1e fa          	endbr64 
   3c484:	41 54                	push   %r12
   3c486:	55                   	push   %rbp
   3c487:	53                   	push   %rbx
   3c488:	48 89 fb             	mov    %rdi,%rbx
   3c48b:	48 85 ff             	test   %rdi,%rdi
   3c48e:	74 49                	je     3c4d9 <fzlistx_insert+0x59>
   3c490:	48 8b 43 18          	mov    0x18(%rbx),%rax
   3c494:	48 89 f7             	mov    %rsi,%rdi
   3c497:	41 89 d4             	mov    %edx,%r12d
   3c49a:	48 85 c0             	test   %rax,%rax
   3c49d:	74 0a                	je     3c4a9 <fzlistx_insert+0x29>
   3c49f:	ff d0                	callq  *%rax
   3c4a1:	48 89 c7             	mov    %rax,%rdi
   3c4a4:	48 85 c0             	test   %rax,%rax
   3c4a7:	74 6e                	je     3c517 <fzlistx_insert+0x97>
   3c4a9:	e8 82 f2 ff ff       	callq  3b730 <s_node_new>
   3c4ae:	48 89 c5             	mov    %rax,%rbp
   3c4b1:	48 85 c0             	test   %rax,%rax
   3c4b4:	74 42                	je     3c4f8 <fzlistx_insert+0x78>
   3c4b6:	41 0f b6 d4          	movzbl %r12b,%edx
   3c4ba:	48 89 c6             	mov    %rax,%rsi
   3c4bd:	48 89 df             	mov    %rbx,%rdi
   3c4c0:	e8 5b fe ff ff       	callq  3c320 <fzlistx_reorder>
   3c4c5:	48 8b 03             	mov    (%rbx),%rax
   3c4c8:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   3c4cd:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3c4d1:	48 89 e8             	mov    %rbp,%rax
   3c4d4:	5b                   	pop    %rbx
   3c4d5:	5d                   	pop    %rbp
   3c4d6:	41 5c                	pop    %r12
   3c4d8:	c3                   	retq   
   3c4d9:	48 8d 0d 60 87 00 00 	lea    0x8760(%rip),%rcx        # 44c40 <__PRETTY_FUNCTION__.3881>
   3c4e0:	ba 08 02 00 00       	mov    $0x208,%edx
   3c4e5:	48 8d 35 9c 86 00 00 	lea    0x869c(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c4ec:	48 8d 3d a6 78 00 00 	lea    0x78a6(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c4f3:	e8 08 3b fd ff       	callq  10000 <__assert_fail@plt>
   3c4f8:	48 8d 0d 41 87 00 00 	lea    0x8741(%rip),%rcx        # 44c40 <__PRETTY_FUNCTION__.3881>
   3c4ff:	ba 0e 02 00 00       	mov    $0x20e,%edx
   3c504:	48 8d 35 7d 86 00 00 	lea    0x867d(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c50b:	48 8d 3d 8a 86 00 00 	lea    0x868a(%rip),%rdi        # 44b9c <__PRETTY_FUNCTION__.3740+0x34>
   3c512:	e8 e9 3a fd ff       	callq  10000 <__assert_fail@plt>
   3c517:	48 8d 0d 22 87 00 00 	lea    0x8722(%rip),%rcx        # 44c40 <__PRETTY_FUNCTION__.3881>
   3c51e:	ba 0b 02 00 00       	mov    $0x20b,%edx
   3c523:	48 8d 35 5e 86 00 00 	lea    0x865e(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c52a:	48 8d 3d 46 78 00 00 	lea    0x7846(%rip),%rdi        # 43d77 <__PRETTY_FUNCTION__.3724+0x17>
   3c531:	e8 ca 3a fd ff       	callq  10000 <__assert_fail@plt>

000000000003c536 <.annobin_fzlistx_dup.start>:
   3c536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3c53d:	00 00 00 

000000000003c540 <fzlistx_dup>:
   3c540:	f3 0f 1e fa          	endbr64 
   3c544:	41 54                	push   %r12
   3c546:	55                   	push   %rbp
   3c547:	53                   	push   %rbx
   3c548:	48 85 ff             	test   %rdi,%rdi
   3c54b:	74 63                	je     3c5b0 <fzlistx_dup+0x70>
   3c54d:	48 89 fd             	mov    %rdi,%rbp
   3c550:	e8 5b f2 ff ff       	callq  3b7b0 <fzlistx_new>
   3c555:	49 89 c4             	mov    %rax,%r12
   3c558:	48 85 c0             	test   %rax,%rax
   3c55b:	74 53                	je     3c5b0 <fzlistx_dup+0x70>
   3c55d:	48 8b 45 20          	mov    0x20(%rbp),%rax
   3c561:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   3c566:	48 8b 45 18          	mov    0x18(%rbp),%rax
   3c56a:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   3c56f:	48 8b 45 28          	mov    0x28(%rbp),%rax
   3c573:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   3c578:	48 8b 45 00          	mov    0x0(%rbp),%rax
   3c57c:	48 8b 58 08          	mov    0x8(%rax),%rbx
   3c580:	48 39 d8             	cmp    %rbx,%rax
   3c583:	74 19                	je     3c59e <fzlistx_dup+0x5e>
   3c585:	0f 1f 00             	nopl   (%rax)
   3c588:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   3c58c:	4c 89 e7             	mov    %r12,%rdi
   3c58f:	e8 bc f3 ff ff       	callq  3b950 <fzlistx_add_end>
   3c594:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   3c598:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
   3c59c:	75 ea                	jne    3c588 <fzlistx_dup+0x48>
   3c59e:	4c 89 e0             	mov    %r12,%rax
   3c5a1:	5b                   	pop    %rbx
   3c5a2:	5d                   	pop    %rbp
   3c5a3:	41 5c                	pop    %r12
   3c5a5:	c3                   	retq   
   3c5a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3c5ad:	00 00 00 
   3c5b0:	45 31 e4             	xor    %r12d,%r12d
   3c5b3:	5b                   	pop    %rbx
   3c5b4:	5d                   	pop    %rbp
   3c5b5:	4c 89 e0             	mov    %r12,%rax
   3c5b8:	41 5c                	pop    %r12
   3c5ba:	c3                   	retq   

000000000003c5bb <.annobin_fzlistx_dup.end>:
   3c5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003c5c0 <fzlistx_set_destructor>:
   3c5c0:	f3 0f 1e fa          	endbr64 
   3c5c4:	48 85 ff             	test   %rdi,%rdi
   3c5c7:	74 05                	je     3c5ce <fzlistx_set_destructor+0xe>
   3c5c9:	48 89 77 20          	mov    %rsi,0x20(%rdi)
   3c5cd:	c3                   	retq   
   3c5ce:	50                   	push   %rax
   3c5cf:	48 8d 0d 3a 86 00 00 	lea    0x863a(%rip),%rcx        # 44c10 <__PRETTY_FUNCTION__.3910>
   3c5d6:	ba 60 02 00 00       	mov    $0x260,%edx
   3c5db:	48 8d 35 a6 85 00 00 	lea    0x85a6(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c5e2:	48 8d 3d b0 77 00 00 	lea    0x77b0(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c5e9:	e8 12 3a fd ff       	callq  10000 <__assert_fail@plt>

000000000003c5ee <.annobin_fzlistx_set_destructor.end>:
   3c5ee:	66 90                	xchg   %ax,%ax

000000000003c5f0 <fzlistx_set_duplicator>:
   3c5f0:	f3 0f 1e fa          	endbr64 
   3c5f4:	48 85 ff             	test   %rdi,%rdi
   3c5f7:	74 05                	je     3c5fe <fzlistx_set_duplicator+0xe>
   3c5f9:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   3c5fd:	c3                   	retq   
   3c5fe:	50                   	push   %rax
   3c5ff:	48 8d 0d ea 85 00 00 	lea    0x85ea(%rip),%rcx        # 44bf0 <__PRETTY_FUNCTION__.3915>
   3c606:	ba 6c 02 00 00       	mov    $0x26c,%edx
   3c60b:	48 8d 35 76 85 00 00 	lea    0x8576(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c612:	48 8d 3d 80 77 00 00 	lea    0x7780(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c619:	e8 e2 39 fd ff       	callq  10000 <__assert_fail@plt>

000000000003c61e <.annobin_fzlistx_set_comparator.start>:
   3c61e:	66 90                	xchg   %ax,%ax

000000000003c620 <fzlistx_set_comparator>:
   3c620:	f3 0f 1e fa          	endbr64 
   3c624:	48 85 ff             	test   %rdi,%rdi
   3c627:	74 05                	je     3c62e <fzlistx_set_comparator+0xe>
   3c629:	48 89 77 28          	mov    %rsi,0x28(%rdi)
   3c62d:	c3                   	retq   
   3c62e:	50                   	push   %rax
   3c62f:	48 8d 0d 9a 85 00 00 	lea    0x859a(%rip),%rcx        # 44bd0 <__PRETTY_FUNCTION__.3920>
   3c636:	ba 79 02 00 00       	mov    $0x279,%edx
   3c63b:	48 8d 35 46 85 00 00 	lea    0x8546(%rip),%rsi        # 44b88 <__PRETTY_FUNCTION__.3740+0x20>
   3c642:	48 8d 3d 50 77 00 00 	lea    0x7750(%rip),%rdi        # 43d99 <__PRETTY_FUNCTION__.3724+0x39>
   3c649:	e8 b2 39 fd ff       	callq  10000 <__assert_fail@plt>

000000000003c64e <.annobin_fzlistx_set_comparator.end>:
   3c64e:	66 90                	xchg   %ax,%ax

000000000003c650 <content_register_backing_store>:
   3c650:	f3 0f 1e fa          	endbr64 
   3c654:	55                   	push   %rbp
   3c655:	31 c9                	xor    %ecx,%ecx
   3c657:	31 d2                	xor    %edx,%edx
   3c659:	4c 8d 0d 35 72 00 00 	lea    0x7235(%rip),%r9        # 43895 <__PRETTY_FUNCTION__.3519+0xd>
   3c660:	53                   	push   %rbx
   3c661:	4c 8d 05 f4 5a 00 00 	lea    0x5af4(%rip),%r8        # 4215c <k+0x15c>
   3c668:	31 c0                	xor    %eax,%eax
   3c66a:	48 89 fd             	mov    %rdi,%rbp
   3c66d:	48 83 ec 10          	sub    $0x10,%rsp
   3c671:	56                   	push   %rsi
   3c672:	48 8d 35 63 87 00 00 	lea    0x8763(%rip),%rsi        # 44ddc <__PRETTY_FUNCTION__.3752+0xc>
   3c679:	e8 22 36 fd ff       	callq  fca0 <flux_rpc_pack@plt>
   3c67e:	5a                   	pop    %rdx
   3c67f:	59                   	pop    %rcx
   3c680:	48 85 c0             	test   %rax,%rax
   3c683:	74 56                	je     3c6db <content_register_backing_store+0x8b>
   3c685:	48 89 c7             	mov    %rax,%rdi
   3c688:	31 f6                	xor    %esi,%esi
   3c68a:	48 89 c3             	mov    %rax,%rbx
   3c68d:	e8 9e 37 fd ff       	callq  fe30 <flux_future_get@plt>
   3c692:	48 89 df             	mov    %rbx,%rdi
   3c695:	85 c0                	test   %eax,%eax
   3c697:	78 0e                	js     3c6a7 <content_register_backing_store+0x57>
   3c699:	e8 b2 36 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c69e:	31 c0                	xor    %eax,%eax
   3c6a0:	48 83 c4 08          	add    $0x8,%rsp
   3c6a4:	5b                   	pop    %rbx
   3c6a5:	5d                   	pop    %rbp
   3c6a6:	c3                   	retq   
   3c6a7:	e8 74 35 fd ff       	callq  fc20 <flux_future_has_error@plt>
   3c6ac:	84 c0                	test   %al,%al
   3c6ae:	74 43                	je     3c6f3 <content_register_backing_store+0xa3>
   3c6b0:	48 89 df             	mov    %rbx,%rdi
   3c6b3:	e8 b8 40 fd ff       	callq  10770 <flux_future_error_string@plt>
   3c6b8:	48 89 c2             	mov    %rax,%rdx
   3c6bb:	31 c0                	xor    %eax,%eax
   3c6bd:	48 8d 35 4e 87 00 00 	lea    0x874e(%rip),%rsi        # 44e12 <__PRETTY_FUNCTION__.3752+0x42>
   3c6c4:	48 89 ef             	mov    %rbp,%rdi
   3c6c7:	e8 14 35 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c6cc:	48 89 df             	mov    %rbx,%rdi
   3c6cf:	e8 7c 36 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c6d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c6d9:	eb c5                	jmp    3c6a0 <content_register_backing_store+0x50>
   3c6db:	31 c0                	xor    %eax,%eax
   3c6dd:	48 8d 35 00 87 00 00 	lea    0x8700(%rip),%rsi        # 44de4 <__PRETTY_FUNCTION__.3752+0x14>
   3c6e4:	48 89 ef             	mov    %rbp,%rdi
   3c6e7:	e8 f4 34 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c6ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c6f1:	eb ad                	jmp    3c6a0 <content_register_backing_store+0x50>
   3c6f3:	e8 18 34 fd ff       	callq  fb10 <__errno_location@plt>
   3c6f8:	8b 38                	mov    (%rax),%edi
   3c6fa:	e8 91 36 fd ff       	callq  fd90 <flux_strerror@plt>
   3c6ff:	48 89 c2             	mov    %rax,%rdx
   3c702:	eb b7                	jmp    3c6bb <content_register_backing_store+0x6b>

000000000003c704 <.annobin_content_register_backing_store.end>:
   3c704:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3c70b:	00 00 00 00 
   3c70f:	90                   	nop

000000000003c710 <content_unregister_backing_store>:
   3c710:	f3 0f 1e fa          	endbr64 
   3c714:	55                   	push   %rbp
   3c715:	45 31 c0             	xor    %r8d,%r8d
   3c718:	31 c9                	xor    %ecx,%ecx
   3c71a:	31 d2                	xor    %edx,%edx
   3c71c:	53                   	push   %rbx
   3c71d:	48 8d 35 d1 86 00 00 	lea    0x86d1(%rip),%rsi        # 44df5 <__PRETTY_FUNCTION__.3752+0x25>
   3c724:	48 89 fd             	mov    %rdi,%rbp
   3c727:	48 83 ec 08          	sub    $0x8,%rsp
   3c72b:	e8 80 41 fd ff       	callq  108b0 <flux_rpc@plt>
   3c730:	48 85 c0             	test   %rax,%rax
   3c733:	74 56                	je     3c78b <content_unregister_backing_store+0x7b>
   3c735:	48 89 c7             	mov    %rax,%rdi
   3c738:	31 f6                	xor    %esi,%esi
   3c73a:	48 89 c3             	mov    %rax,%rbx
   3c73d:	e8 ee 36 fd ff       	callq  fe30 <flux_future_get@plt>
   3c742:	48 89 df             	mov    %rbx,%rdi
   3c745:	85 c0                	test   %eax,%eax
   3c747:	78 0e                	js     3c757 <content_unregister_backing_store+0x47>
   3c749:	e8 02 36 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c74e:	31 c0                	xor    %eax,%eax
   3c750:	48 83 c4 08          	add    $0x8,%rsp
   3c754:	5b                   	pop    %rbx
   3c755:	5d                   	pop    %rbp
   3c756:	c3                   	retq   
   3c757:	e8 c4 34 fd ff       	callq  fc20 <flux_future_has_error@plt>
   3c75c:	84 c0                	test   %al,%al
   3c75e:	74 43                	je     3c7a3 <content_unregister_backing_store+0x93>
   3c760:	48 89 df             	mov    %rbx,%rdi
   3c763:	e8 08 40 fd ff       	callq  10770 <flux_future_error_string@plt>
   3c768:	48 89 c2             	mov    %rax,%rdx
   3c76b:	31 c0                	xor    %eax,%eax
   3c76d:	48 8d 35 9c 86 00 00 	lea    0x869c(%rip),%rsi        # 44e10 <__PRETTY_FUNCTION__.3752+0x40>
   3c774:	48 89 ef             	mov    %rbp,%rdi
   3c777:	e8 64 34 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c77c:	48 89 df             	mov    %rbx,%rdi
   3c77f:	e8 cc 35 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c784:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c789:	eb c5                	jmp    3c750 <content_unregister_backing_store+0x40>
   3c78b:	31 c0                	xor    %eax,%eax
   3c78d:	48 8d 35 69 86 00 00 	lea    0x8669(%rip),%rsi        # 44dfd <__PRETTY_FUNCTION__.3752+0x2d>
   3c794:	48 89 ef             	mov    %rbp,%rdi
   3c797:	e8 44 34 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c79c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c7a1:	eb ad                	jmp    3c750 <content_unregister_backing_store+0x40>
   3c7a3:	e8 68 33 fd ff       	callq  fb10 <__errno_location@plt>
   3c7a8:	8b 38                	mov    (%rax),%edi
   3c7aa:	e8 e1 35 fd ff       	callq  fd90 <flux_strerror@plt>
   3c7af:	48 89 c2             	mov    %rax,%rdx
   3c7b2:	eb b7                	jmp    3c76b <content_unregister_backing_store+0x5b>

000000000003c7b4 <.annobin_content_register_service.start>:
   3c7b4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3c7bb:	00 00 00 00 
   3c7bf:	90                   	nop

000000000003c7c0 <content_register_service>:
   3c7c0:	f3 0f 1e fa          	endbr64 
   3c7c4:	41 54                	push   %r12
   3c7c6:	49 89 f4             	mov    %rsi,%r12
   3c7c9:	55                   	push   %rbp
   3c7ca:	48 89 fd             	mov    %rdi,%rbp
   3c7cd:	53                   	push   %rbx
   3c7ce:	e8 1d 3f fd ff       	callq  106f0 <flux_service_register@plt>
   3c7d3:	48 85 c0             	test   %rax,%rax
   3c7d6:	74 57                	je     3c82f <content_register_service+0x6f>
   3c7d8:	48 89 c7             	mov    %rax,%rdi
   3c7db:	31 f6                	xor    %esi,%esi
   3c7dd:	48 89 c3             	mov    %rax,%rbx
   3c7e0:	e8 4b 36 fd ff       	callq  fe30 <flux_future_get@plt>
   3c7e5:	48 89 df             	mov    %rbx,%rdi
   3c7e8:	85 c0                	test   %eax,%eax
   3c7ea:	78 0c                	js     3c7f8 <content_register_service+0x38>
   3c7ec:	e8 5f 35 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c7f1:	31 c0                	xor    %eax,%eax
   3c7f3:	5b                   	pop    %rbx
   3c7f4:	5d                   	pop    %rbp
   3c7f5:	41 5c                	pop    %r12
   3c7f7:	c3                   	retq   
   3c7f8:	e8 23 34 fd ff       	callq  fc20 <flux_future_has_error@plt>
   3c7fd:	84 c0                	test   %al,%al
   3c7ff:	74 49                	je     3c84a <content_register_service+0x8a>
   3c801:	48 89 df             	mov    %rbx,%rdi
   3c804:	e8 67 3f fd ff       	callq  10770 <flux_future_error_string@plt>
   3c809:	48 89 c1             	mov    %rax,%rcx
   3c80c:	31 c0                	xor    %eax,%eax
   3c80e:	4c 89 e2             	mov    %r12,%rdx
   3c811:	48 8d 35 1b 86 00 00 	lea    0x861b(%rip),%rsi        # 44e33 <__PRETTY_FUNCTION__.3752+0x63>
   3c818:	48 89 ef             	mov    %rbp,%rdi
   3c81b:	e8 c0 33 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c820:	48 89 df             	mov    %rbx,%rdi
   3c823:	e8 28 35 fd ff       	callq  fd50 <flux_future_destroy@plt>
   3c828:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c82d:	eb c4                	jmp    3c7f3 <content_register_service+0x33>
   3c82f:	31 c0                	xor    %eax,%eax
   3c831:	4c 89 e2             	mov    %r12,%rdx
   3c834:	48 8d 35 ec 85 00 00 	lea    0x85ec(%rip),%rsi        # 44e27 <__PRETTY_FUNCTION__.3752+0x57>
   3c83b:	48 89 ef             	mov    %rbp,%rdi
   3c83e:	e8 9d 33 fd ff       	callq  fbe0 <flux_log_error@plt>
   3c843:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3c848:	eb a9                	jmp    3c7f3 <content_register_service+0x33>
   3c84a:	e8 c1 32 fd ff       	callq  fb10 <__errno_location@plt>
   3c84f:	8b 38                	mov    (%rax),%edi
   3c851:	e8 3a 35 fd ff       	callq  fd90 <flux_strerror@plt>
   3c856:	48 89 c1             	mov    %rax,%rcx
   3c859:	eb b1                	jmp    3c80c <content_register_service+0x4c>

000000000003c85b <.annobin_content_register_service.end>:
   3c85b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003c860 <content_load_byhash>:
   3c860:	f3 0f 1e fa          	endbr64 
   3c864:	48 85 ff             	test   %rdi,%rdi
   3c867:	74 47                	je     3c8b0 <content_load_byhash+0x50>
   3c869:	48 85 f6             	test   %rsi,%rsi
   3c86c:	74 42                	je     3c8b0 <content_load_byhash+0x50>
   3c86e:	45 31 c0             	xor    %r8d,%r8d
   3c871:	f6 c1 02             	test   $0x2,%cl
   3c874:	b8 00 00 00 00       	mov    $0x0,%eax
   3c879:	41 0f 94 c0          	sete   %r8b
   3c87d:	41 83 e8 02          	sub    $0x2,%r8d
   3c881:	83 e1 01             	and    $0x1,%ecx
   3c884:	48 8d 0d c5 85 00 00 	lea    0x85c5(%rip),%rcx        # 44e50 <__PRETTY_FUNCTION__.3752+0x80>
   3c88b:	44 0f 45 c0          	cmovne %eax,%r8d
   3c88f:	48 8d 05 ad 85 00 00 	lea    0x85ad(%rip),%rax        # 44e43 <__PRETTY_FUNCTION__.3752+0x73>
   3c896:	48 0f 45 c1          	cmovne %rcx,%rax
   3c89a:	89 d1                	mov    %edx,%ecx
   3c89c:	45 31 c9             	xor    %r9d,%r9d
   3c89f:	48 89 f2             	mov    %rsi,%rdx
   3c8a2:	48 89 c6             	mov    %rax,%rsi
   3c8a5:	e9 56 40 fd ff       	jmpq   10900 <flux_rpc_raw@plt>
   3c8aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3c8b0:	48 83 ec 08          	sub    $0x8,%rsp
   3c8b4:	e8 57 32 fd ff       	callq  fb10 <__errno_location@plt>
   3c8b9:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3c8bf:	31 c0                	xor    %eax,%eax
   3c8c1:	48 83 c4 08          	add    $0x8,%rsp
   3c8c5:	c3                   	retq   

000000000003c8c6 <.annobin_content_load_byblobref.start>:
   3c8c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3c8cd:	00 00 00 

000000000003c8d0 <content_load_byblobref>:
   3c8d0:	f3 0f 1e fa          	endbr64 
   3c8d4:	41 54                	push   %r12
   3c8d6:	41 89 d4             	mov    %edx,%r12d
   3c8d9:	ba 80 00 00 00       	mov    $0x80,%edx
   3c8de:	55                   	push   %rbp
   3c8df:	48 89 fd             	mov    %rdi,%rbp
   3c8e2:	48 89 f7             	mov    %rsi,%rdi
   3c8e5:	53                   	push   %rbx
   3c8e6:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   3c8ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3c8f4:	00 00 
   3c8f6:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   3c8fd:	00 
   3c8fe:	31 c0                	xor    %eax,%eax
   3c900:	48 89 e3             	mov    %rsp,%rbx
   3c903:	48 89 de             	mov    %rbx,%rsi
   3c906:	e8 75 d4 fd ff       	callq  19d80 <blobref_strtohash>
   3c90b:	89 c2                	mov    %eax,%edx
   3c90d:	31 c0                	xor    %eax,%eax
   3c90f:	85 d2                	test   %edx,%edx
   3c911:	78 0e                	js     3c921 <content_load_byblobref+0x51>
   3c913:	44 89 e1             	mov    %r12d,%ecx
   3c916:	48 89 de             	mov    %rbx,%rsi
   3c919:	48 89 ef             	mov    %rbp,%rdi
   3c91c:	e8 3f ff ff ff       	callq  3c860 <content_load_byhash>
   3c921:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   3c928:	00 
   3c929:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3c930:	00 00 
   3c932:	75 0c                	jne    3c940 <content_load_byblobref+0x70>
   3c934:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   3c93b:	5b                   	pop    %rbx
   3c93c:	5d                   	pop    %rbp
   3c93d:	41 5c                	pop    %r12
   3c93f:	c3                   	retq   
   3c940:	e8 0b 35 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003c945 <.annobin_content_load_byblobref.end>:
   3c945:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3c94c:	00 00 00 00 

000000000003c950 <content_load_get>:
   3c950:	f3 0f 1e fa          	endbr64 
   3c954:	e9 17 32 fd ff       	jmpq   fb70 <flux_rpc_get_raw@plt>

000000000003c959 <.annobin_content_load_get.end>:
   3c959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003c960 <content_store>:
   3c960:	f3 0f 1e fa          	endbr64 
   3c964:	45 31 c0             	xor    %r8d,%r8d
   3c967:	f6 c1 02             	test   $0x2,%cl
   3c96a:	b8 00 00 00 00       	mov    $0x0,%eax
   3c96f:	49 89 f2             	mov    %rsi,%r10
   3c972:	41 0f 94 c0          	sete   %r8b
   3c976:	48 8d 35 f6 84 00 00 	lea    0x84f6(%rip),%rsi        # 44e73 <__PRETTY_FUNCTION__.3752+0xa3>
   3c97d:	41 83 e8 02          	sub    $0x2,%r8d
   3c981:	83 e1 01             	and    $0x1,%ecx
   3c984:	89 d1                	mov    %edx,%ecx
   3c986:	4c 89 d2             	mov    %r10,%rdx
   3c989:	44 0f 45 c0          	cmovne %eax,%r8d
   3c98d:	48 8d 05 d1 84 00 00 	lea    0x84d1(%rip),%rax        # 44e65 <__PRETTY_FUNCTION__.3752+0x95>
   3c994:	48 0f 44 f0          	cmove  %rax,%rsi
   3c998:	45 31 c9             	xor    %r9d,%r9d
   3c99b:	e9 60 3f fd ff       	jmpq   10900 <flux_rpc_raw@plt>

000000000003c9a0 <content_store_get_hash>:
   3c9a0:	f3 0f 1e fa          	endbr64 
   3c9a4:	55                   	push   %rbp
   3c9a5:	48 89 f5             	mov    %rsi,%rbp
   3c9a8:	53                   	push   %rbx
   3c9a9:	48 89 d3             	mov    %rdx,%rbx
   3c9ac:	48 83 ec 28          	sub    $0x28,%rsp
   3c9b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3c9b7:	00 00 
   3c9b9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3c9be:	31 c0                	xor    %eax,%eax
   3c9c0:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   3c9c5:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   3c9ca:	e8 a1 31 fd ff       	callq  fb70 <flux_rpc_get_raw@plt>
   3c9cf:	85 c0                	test   %eax,%eax
   3c9d1:	78 32                	js     3ca05 <content_store_get_hash+0x65>
   3c9d3:	48 85 ed             	test   %rbp,%rbp
   3c9d6:	74 09                	je     3c9e1 <content_store_get_hash+0x41>
   3c9d8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3c9dd:	48 89 45 00          	mov    %rax,0x0(%rbp)
   3c9e1:	31 c0                	xor    %eax,%eax
   3c9e3:	48 85 db             	test   %rbx,%rbx
   3c9e6:	74 06                	je     3c9ee <content_store_get_hash+0x4e>
   3c9e8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   3c9ec:	89 13                	mov    %edx,(%rbx)
   3c9ee:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3c9f3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3c9fa:	00 00 
   3c9fc:	75 0e                	jne    3ca0c <content_store_get_hash+0x6c>
   3c9fe:	48 83 c4 28          	add    $0x28,%rsp
   3ca02:	5b                   	pop    %rbx
   3ca03:	5d                   	pop    %rbp
   3ca04:	c3                   	retq   
   3ca05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3ca0a:	eb e2                	jmp    3c9ee <content_store_get_hash+0x4e>
   3ca0c:	e8 3f 34 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003ca11 <.annobin_content_store_get_blobref.start>:
   3ca11:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3ca18:	00 00 00 00 
   3ca1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003ca20 <content_store_get_blobref>:
   3ca20:	f3 0f 1e fa          	endbr64 
   3ca24:	41 56                	push   %r14
   3ca26:	41 55                	push   %r13
   3ca28:	41 54                	push   %r12
   3ca2a:	49 89 f4             	mov    %rsi,%r12
   3ca2d:	55                   	push   %rbp
   3ca2e:	53                   	push   %rbx
   3ca2f:	48 89 fb             	mov    %rdi,%rbx
   3ca32:	48 83 ec 60          	sub    $0x60,%rsp
   3ca36:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3ca3d:	00 00 
   3ca3f:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3ca44:	31 c0                	xor    %eax,%eax
   3ca46:	e8 15 35 fd ff       	callq  ff60 <flux_future_get_flux@plt>
   3ca4b:	48 8d 35 37 84 00 00 	lea    0x8437(%rip),%rsi        # 44e89 <__PRETTY_FUNCTION__.3752+0xb9>
   3ca52:	48 89 df             	mov    %rbx,%rdi
   3ca55:	49 89 c5             	mov    %rax,%r13
   3ca58:	e8 03 33 fd ff       	callq  fd60 <flux_future_aux_get@plt>
   3ca5d:	48 89 c5             	mov    %rax,%rbp
   3ca60:	48 85 c0             	test   %rax,%rax
   3ca63:	74 33                	je     3ca98 <content_store_get_blobref+0x78>
   3ca65:	31 c0                	xor    %eax,%eax
   3ca67:	4d 85 e4             	test   %r12,%r12
   3ca6a:	74 04                	je     3ca70 <content_store_get_blobref+0x50>
   3ca6c:	49 89 2c 24          	mov    %rbp,(%r12)
   3ca70:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   3ca75:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3ca7c:	00 00 
   3ca7e:	0f 85 a5 00 00 00    	jne    3cb29 <content_store_get_blobref+0x109>
   3ca84:	48 83 c4 60          	add    $0x60,%rsp
   3ca88:	5b                   	pop    %rbx
   3ca89:	5d                   	pop    %rbp
   3ca8a:	41 5c                	pop    %r12
   3ca8c:	41 5d                	pop    %r13
   3ca8e:	41 5e                	pop    %r14
   3ca90:	c3                   	retq   
   3ca91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3ca98:	48 8d 35 f8 83 00 00 	lea    0x83f8(%rip),%rsi        # 44e97 <__PRETTY_FUNCTION__.3752+0xc7>
   3ca9f:	4c 89 ef             	mov    %r13,%rdi
   3caa2:	e8 99 3c fd ff       	callq  10740 <flux_attr_get@plt>
   3caa7:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   3caac:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   3cab1:	48 89 df             	mov    %rbx,%rdi
   3cab4:	49 89 c6             	mov    %rax,%r14
   3cab7:	e8 e4 fe ff ff       	callq  3c9a0 <content_store_get_hash>
   3cabc:	85 c0                	test   %eax,%eax
   3cabe:	78 57                	js     3cb17 <content_store_get_blobref+0xf7>
   3cac0:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   3cac5:	8b 54 24 04          	mov    0x4(%rsp),%edx
   3cac9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   3cace:	4c 89 f7             	mov    %r14,%rdi
   3cad1:	41 b8 48 00 00 00    	mov    $0x48,%r8d
   3cad7:	4c 89 e9             	mov    %r13,%rcx
   3cada:	e8 51 d3 fd ff       	callq  19e30 <blobref_hashtostr>
   3cadf:	85 c0                	test   %eax,%eax
   3cae1:	78 34                	js     3cb17 <content_store_get_blobref+0xf7>
   3cae3:	4c 89 ef             	mov    %r13,%rdi
   3cae6:	e8 b5 3e fd ff       	callq  109a0 <strdup@plt>
   3caeb:	49 89 c5             	mov    %rax,%r13
   3caee:	48 85 c0             	test   %rax,%rax
   3caf1:	74 24                	je     3cb17 <content_store_get_blobref+0xf7>
   3caf3:	48 8b 0d ae 64 21 00 	mov    0x2164ae(%rip),%rcx        # 252fa8 <free@GLIBC_2.2.5>
   3cafa:	48 89 c2             	mov    %rax,%rdx
   3cafd:	48 89 df             	mov    %rbx,%rdi
   3cb00:	4c 89 ed             	mov    %r13,%rbp
   3cb03:	48 8d 35 7f 83 00 00 	lea    0x837f(%rip),%rsi        # 44e89 <__PRETTY_FUNCTION__.3752+0xb9>
   3cb0a:	e8 b1 3d fd ff       	callq  108c0 <flux_future_aux_set@plt>
   3cb0f:	85 c0                	test   %eax,%eax
   3cb11:	0f 89 4e ff ff ff    	jns    3ca65 <content_store_get_blobref+0x45>
   3cb17:	48 89 ef             	mov    %rbp,%rdi
   3cb1a:	e8 91 2f fd ff       	callq  fab0 <free@plt>
   3cb1f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3cb24:	e9 47 ff ff ff       	jmpq   3ca70 <content_store_get_blobref+0x50>
   3cb29:	e8 22 33 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003cb2e <.annobin_content.c_end>:
   3cb2e:	66 90                	xchg   %ax,%ax

000000000003cb30 <list_join>:
   3cb30:	41 57                	push   %r15
   3cb32:	41 56                	push   %r14
   3cb34:	49 89 f6             	mov    %rsi,%r14
   3cb37:	41 55                	push   %r13
   3cb39:	41 54                	push   %r12
   3cb3b:	49 89 fc             	mov    %rdi,%r12
   3cb3e:	48 89 f7             	mov    %rsi,%rdi
   3cb41:	55                   	push   %rbp
   3cb42:	53                   	push   %rbx
   3cb43:	48 83 ec 18          	sub    $0x18,%rsp
   3cb47:	e8 d4 32 fd ff       	callq  fe20 <strlen@plt>
   3cb4c:	4c 89 e7             	mov    %r12,%rdi
   3cb4f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3cb54:	e8 e7 ee ff ff       	callq  3ba40 <fzlistx_size>
   3cb59:	48 85 c0             	test   %rax,%rax
   3cb5c:	0f 84 be 00 00 00    	je     3cc20 <list_join+0xf0>
   3cb62:	4c 89 e7             	mov    %r12,%rdi
   3cb65:	e8 86 ef ff ff       	callq  3baf0 <fzlistx_first>
   3cb6a:	48 85 c0             	test   %rax,%rax
   3cb6d:	0f 84 cd 00 00 00    	je     3cc40 <list_join+0x110>
   3cb73:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   3cb77:	31 db                	xor    %ebx,%ebx
   3cb79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3cb80:	48 89 c7             	mov    %rax,%rdi
   3cb83:	01 eb                	add    %ebp,%ebx
   3cb85:	e8 96 32 fd ff       	callq  fe20 <strlen@plt>
   3cb8a:	4c 89 e7             	mov    %r12,%rdi
   3cb8d:	01 c3                	add    %eax,%ebx
   3cb8f:	e8 ac ef ff ff       	callq  3bb40 <fzlistx_next>
   3cb94:	48 85 c0             	test   %rax,%rax
   3cb97:	75 e7                	jne    3cb80 <list_join+0x50>
   3cb99:	8d 7b 01             	lea    0x1(%rbx),%edi
   3cb9c:	48 63 ff             	movslq %edi,%rdi
   3cb9f:	e8 7c 38 fd ff       	callq  10420 <malloc@plt>
   3cba4:	49 89 c5             	mov    %rax,%r13
   3cba7:	48 85 c0             	test   %rax,%rax
   3cbaa:	74 5a                	je     3cc06 <list_join+0xd6>
   3cbac:	4c 89 e7             	mov    %r12,%rdi
   3cbaf:	31 ed                	xor    %ebp,%ebp
  return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
   3cbb1:	4c 8d 3d ec 82 00 00 	lea    0x82ec(%rip),%r15        # 44ea4 <__PRETTY_FUNCTION__.3752+0xd4>
   3cbb8:	e8 33 ef ff ff       	callq  3baf0 <fzlistx_first>
   3cbbd:	49 89 c0             	mov    %rax,%r8
   3cbc0:	48 85 c0             	test   %rax,%rax
   3cbc3:	74 34                	je     3cbf9 <list_join+0xc9>
   3cbc5:	0f 1f 00             	nopl   (%rax)
   3cbc8:	48 63 fd             	movslq %ebp,%rdi
   3cbcb:	4d 89 f1             	mov    %r14,%r9
   3cbce:	4c 89 f9             	mov    %r15,%rcx
   3cbd1:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   3cbd8:	4c 01 ef             	add    %r13,%rdi
   3cbdb:	be 01 00 00 00       	mov    $0x1,%esi
   3cbe0:	31 c0                	xor    %eax,%eax
   3cbe2:	e8 69 3f fd ff       	callq  10b50 <__sprintf_chk@plt>
   3cbe7:	4c 89 e7             	mov    %r12,%rdi
   3cbea:	01 c5                	add    %eax,%ebp
   3cbec:	e8 4f ef ff ff       	callq  3bb40 <fzlistx_next>
   3cbf1:	49 89 c0             	mov    %rax,%r8
   3cbf4:	48 85 c0             	test   %rax,%rax
   3cbf7:	75 cf                	jne    3cbc8 <list_join+0x98>
   3cbf9:	2b 5c 24 08          	sub    0x8(%rsp),%ebx
   3cbfd:	48 63 db             	movslq %ebx,%rbx
   3cc00:	41 c6 44 1d 00 00    	movb   $0x0,0x0(%r13,%rbx,1)
   3cc06:	48 83 c4 18          	add    $0x18,%rsp
   3cc0a:	4c 89 e8             	mov    %r13,%rax
   3cc0d:	5b                   	pop    %rbx
   3cc0e:	5d                   	pop    %rbp
   3cc0f:	41 5c                	pop    %r12
   3cc11:	41 5d                	pop    %r13
   3cc13:	41 5e                	pop    %r14
   3cc15:	41 5f                	pop    %r15
   3cc17:	c3                   	retq   
   3cc18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3cc1f:	00 
   3cc20:	48 83 c4 18          	add    $0x18,%rsp
   3cc24:	48 8d 3d ee 66 00 00 	lea    0x66ee(%rip),%rdi        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   3cc2b:	5b                   	pop    %rbx
   3cc2c:	5d                   	pop    %rbp
   3cc2d:	41 5c                	pop    %r12
   3cc2f:	41 5d                	pop    %r13
   3cc31:	41 5e                	pop    %r14
   3cc33:	41 5f                	pop    %r15
   3cc35:	e9 66 3d fd ff       	jmpq   109a0 <strdup@plt>
   3cc3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3cc40:	bf 01 00 00 00       	mov    $0x1,%edi
   3cc45:	31 db                	xor    %ebx,%ebx
   3cc47:	e9 53 ff ff ff       	jmpq   3cb9f <list_join+0x6f>

000000000003cc4c <.annobin_item_destructor.start>:
   3cc4c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003cc50 <item_destructor>:
   3cc50:	f3 0f 1e fa          	endbr64 
   3cc54:	48 85 ff             	test   %rdi,%rdi
   3cc57:	74 17                	je     3cc70 <item_destructor+0x20>
   3cc59:	53                   	push   %rbx
   3cc5a:	48 89 fb             	mov    %rdi,%rbx
   3cc5d:	48 8b 3f             	mov    (%rdi),%rdi
   3cc60:	e8 4b 2e fd ff       	callq  fab0 <free@plt>
   3cc65:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   3cc6c:	5b                   	pop    %rbx
   3cc6d:	c3                   	retq   
   3cc6e:	66 90                	xchg   %ax,%ax
   3cc70:	c3                   	retq   

000000000003cc71 <.annobin_item_destructor.end>:
   3cc71:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3cc78:	00 00 00 00 
   3cc7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003cc80 <taskmap_find_repeats.isra.5>:
   3cc80:	41 54                	push   %r12
   3cc82:	49 89 fc             	mov    %rdi,%r12
   3cc85:	55                   	push   %rbp
   3cc86:	53                   	push   %rbx
   3cc87:	48 8b 3f             	mov    (%rdi),%rdi
   3cc8a:	e8 61 ee ff ff       	callq  3baf0 <fzlistx_first>
   3cc8f:	49 8b 3c 24          	mov    (%r12),%rdi
   3cc93:	48 89 c5             	mov    %rax,%rbp
   3cc96:	e8 a5 ee ff ff       	callq  3bb40 <fzlistx_next>
   3cc9b:	48 89 c3             	mov    %rax,%rbx
   3cc9e:	48 85 c0             	test   %rax,%rax
   3cca1:	75 15                	jne    3ccb8 <taskmap_find_repeats.isra.5+0x38>
   3cca3:	eb 56                	jmp    3ccfb <taskmap_find_repeats.isra.5+0x7b>
   3cca5:	0f 1f 00             	nopl   (%rax)
   3cca8:	e8 93 ee ff ff       	callq  3bb40 <fzlistx_next>
   3ccad:	48 85 c0             	test   %rax,%rax
   3ccb0:	74 49                	je     3ccfb <taskmap_find_repeats.isra.5+0x7b>
   3ccb2:	48 89 dd             	mov    %rbx,%rbp
   3ccb5:	48 89 c3             	mov    %rax,%rbx
   3ccb8:	49 8b 3c 24          	mov    (%r12),%rdi
   3ccbc:	8b 45 00             	mov    0x0(%rbp),%eax
   3ccbf:	39 03                	cmp    %eax,(%rbx)
   3ccc1:	75 e5                	jne    3cca8 <taskmap_find_repeats.isra.5+0x28>
   3ccc3:	8b 45 04             	mov    0x4(%rbp),%eax
   3ccc6:	39 43 04             	cmp    %eax,0x4(%rbx)
   3ccc9:	75 dd                	jne    3cca8 <taskmap_find_repeats.isra.5+0x28>
   3cccb:	8b 45 08             	mov    0x8(%rbp),%eax
   3ccce:	39 43 08             	cmp    %eax,0x8(%rbx)
   3ccd1:	75 d5                	jne    3cca8 <taskmap_find_repeats.isra.5+0x28>
   3ccd3:	8b 43 0c             	mov    0xc(%rbx),%eax
   3ccd6:	01 45 0c             	add    %eax,0xc(%rbp)
   3ccd9:	48 89 eb             	mov    %rbp,%rbx
   3ccdc:	e8 9f ef ff ff       	callq  3bc80 <fzlistx_cursor>
   3cce1:	49 8b 3c 24          	mov    (%r12),%rdi
   3cce5:	48 89 c6             	mov    %rax,%rsi
   3cce8:	e8 e3 f1 ff ff       	callq  3bed0 <fzlistx_delete>
   3cced:	49 8b 3c 24          	mov    (%r12),%rdi
   3ccf1:	e8 4a ee ff ff       	callq  3bb40 <fzlistx_next>
   3ccf6:	48 85 c0             	test   %rax,%rax
   3ccf9:	75 b7                	jne    3ccb2 <taskmap_find_repeats.isra.5+0x32>
   3ccfb:	5b                   	pop    %rbx
   3ccfc:	5d                   	pop    %rbp
   3ccfd:	41 5c                	pop    %r12
   3ccff:	c3                   	retq   

000000000003cd00 <taskmap_block_destructor>:
   3cd00:	f3 0f 1e fa          	endbr64 
   3cd04:	48 85 ff             	test   %rdi,%rdi
   3cd07:	74 47                	je     3cd50 <taskmap_block_destructor+0x50>
   3cd09:	41 55                	push   %r13
   3cd0b:	41 54                	push   %r12
   3cd0d:	55                   	push   %rbp
   3cd0e:	53                   	push   %rbx
   3cd0f:	48 89 fb             	mov    %rdi,%rbx
   3cd12:	48 83 ec 08          	sub    $0x8,%rsp
   3cd16:	48 8b 2f             	mov    (%rdi),%rbp
   3cd19:	48 85 ed             	test   %rbp,%rbp
   3cd1c:	74 17                	je     3cd35 <taskmap_block_destructor+0x35>
   3cd1e:	e8 ed 2d fd ff       	callq  fb10 <__errno_location@plt>
   3cd23:	48 89 ef             	mov    %rbp,%rdi
   3cd26:	44 8b 28             	mov    (%rax),%r13d
   3cd29:	49 89 c4             	mov    %rax,%r12
   3cd2c:	e8 7f 2d fd ff       	callq  fab0 <free@plt>
   3cd31:	45 89 2c 24          	mov    %r13d,(%r12)
   3cd35:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   3cd3c:	48 83 c4 08          	add    $0x8,%rsp
   3cd40:	5b                   	pop    %rbx
   3cd41:	5d                   	pop    %rbp
   3cd42:	41 5c                	pop    %r12
   3cd44:	41 5d                	pop    %r13
   3cd46:	c3                   	retq   
   3cd47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3cd4e:	00 00 
   3cd50:	c3                   	retq   

000000000003cd51 <.annobin_taskmap_block_destructor.end>:
   3cd51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3cd58:	00 00 00 00 
   3cd5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003cd60 <taskmap_destroy>:
   3cd60:	f3 0f 1e fa          	endbr64 
   3cd64:	48 85 ff             	test   %rdi,%rdi
   3cd67:	74 37                	je     3cda0 <taskmap_destroy+0x40>
   3cd69:	41 54                	push   %r12
   3cd6b:	55                   	push   %rbp
   3cd6c:	53                   	push   %rbx
   3cd6d:	48 89 fb             	mov    %rdi,%rbx
   3cd70:	e8 9b 2d fd ff       	callq  fb10 <__errno_location@plt>
   3cd75:	48 89 df             	mov    %rbx,%rdi
   3cd78:	48 89 c5             	mov    %rax,%rbp
   3cd7b:	44 8b 20             	mov    (%rax),%r12d
   3cd7e:	e8 dd f3 ff ff       	callq  3c160 <fzlistx_destroy>
   3cd83:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3cd87:	e8 a4 35 fe ff       	callq  20330 <lru_cache_destroy>
   3cd8c:	48 89 df             	mov    %rbx,%rdi
   3cd8f:	e8 1c 2d fd ff       	callq  fab0 <free@plt>
   3cd94:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   3cd98:	5b                   	pop    %rbx
   3cd99:	5d                   	pop    %rbp
   3cd9a:	41 5c                	pop    %r12
   3cd9c:	c3                   	retq   
   3cd9d:	0f 1f 00             	nopl   (%rax)
   3cda0:	c3                   	retq   

000000000003cda1 <.annobin_taskmap_create.start>:
   3cda1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3cda8:	00 00 00 00 
   3cdac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000003cdb0 <taskmap_create>:
   3cdb0:	f3 0f 1e fa          	endbr64 
   3cdb4:	53                   	push   %rbx
   3cdb5:	be 10 00 00 00       	mov    $0x10,%esi
   3cdba:	bf 01 00 00 00       	mov    $0x1,%edi
   3cdbf:	e8 4c 34 fd ff       	callq  10210 <calloc@plt>
   3cdc4:	48 89 c3             	mov    %rax,%rbx
   3cdc7:	48 85 c0             	test   %rax,%rax
   3cdca:	74 44                	je     3ce10 <taskmap_create+0x60>
   3cdcc:	e8 df e9 ff ff       	callq  3b7b0 <fzlistx_new>
   3cdd1:	48 89 03             	mov    %rax,(%rbx)
   3cdd4:	48 85 c0             	test   %rax,%rax
   3cdd7:	74 37                	je     3ce10 <taskmap_create+0x60>
   3cdd9:	bf 10 00 00 00       	mov    $0x10,%edi
   3cdde:	e8 6d 35 fe ff       	callq  20350 <lru_cache_create>
   3cde3:	48 89 43 08          	mov    %rax,0x8(%rbx)
   3cde7:	48 85 c0             	test   %rax,%rax
   3cdea:	74 24                	je     3ce10 <taskmap_create+0x60>
   3cdec:	48 8b 3b             	mov    (%rbx),%rdi
   3cdef:	48 8d 35 0a ff ff ff 	lea    -0xf6(%rip),%rsi        # 3cd00 <taskmap_block_destructor>
   3cdf6:	e8 c5 f7 ff ff       	callq  3c5c0 <fzlistx_set_destructor>
   3cdfb:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   3cdff:	48 8d 35 9a 93 fe ff 	lea    -0x16c66(%rip),%rsi        # 261a0 <idset_destroy>
   3ce06:	e8 b5 35 fe ff       	callq  203c0 <lru_cache_set_free_f>
   3ce0b:	48 89 d8             	mov    %rbx,%rax
   3ce0e:	5b                   	pop    %rbx
   3ce0f:	c3                   	retq   
   3ce10:	e8 fb 2c fd ff       	callq  fb10 <__errno_location@plt>
   3ce15:	48 89 df             	mov    %rbx,%rdi
   3ce18:	31 db                	xor    %ebx,%ebx
   3ce1a:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3ce20:	e8 3b ff ff ff       	callq  3cd60 <taskmap_destroy>
   3ce25:	48 89 d8             	mov    %rbx,%rax
   3ce28:	5b                   	pop    %rbx
   3ce29:	c3                   	retq   

000000000003ce2a <.annobin_taskmap_create.end>:
   3ce2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000003ce30 <taskmap_unknown>:
   3ce30:	f3 0f 1e fa          	endbr64 
   3ce34:	48 83 ec 08          	sub    $0x8,%rsp
   3ce38:	48 8b 3f             	mov    (%rdi),%rdi
   3ce3b:	e8 00 ec ff ff       	callq  3ba40 <fzlistx_size>
   3ce40:	48 85 c0             	test   %rax,%rax
   3ce43:	0f 94 c0             	sete   %al
   3ce46:	48 83 c4 08          	add    $0x8,%rsp
   3ce4a:	c3                   	retq   

000000000003ce4b <.annobin_taskmap_append.start>:
   3ce4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003ce50 <taskmap_append>:
   3ce50:	f3 0f 1e fa          	endbr64 
   3ce54:	41 57                	push   %r15
   3ce56:	41 56                	push   %r14
   3ce58:	41 55                	push   %r13
   3ce5a:	41 54                	push   %r12
   3ce5c:	55                   	push   %rbp
   3ce5d:	53                   	push   %rbx
   3ce5e:	48 83 ec 28          	sub    $0x28,%rsp
   3ce62:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3ce69:	00 00 
   3ce6b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3ce70:	31 c0                	xor    %eax,%eax
   3ce72:	48 85 ff             	test   %rdi,%rdi
   3ce75:	0f 84 65 01 00 00    	je     3cfe0 <taskmap_append+0x190>
   3ce7b:	89 f5                	mov    %esi,%ebp
   3ce7d:	85 f6                	test   %esi,%esi
   3ce7f:	0f 88 5b 01 00 00    	js     3cfe0 <taskmap_append+0x190>
   3ce85:	41 89 d5             	mov    %edx,%r13d
   3ce88:	85 d2                	test   %edx,%edx
   3ce8a:	0f 8e 50 01 00 00    	jle    3cfe0 <taskmap_append+0x190>
   3ce90:	41 89 ce             	mov    %ecx,%r14d
   3ce93:	85 c9                	test   %ecx,%ecx
   3ce95:	0f 8e 45 01 00 00    	jle    3cfe0 <taskmap_append+0x190>
  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
   3ce9b:	48 89 e3             	mov    %rsp,%rbx
   3ce9e:	49 89 fc             	mov    %rdi,%r12
   3cea1:	41 89 f1             	mov    %esi,%r9d
   3cea4:	b9 18 00 00 00       	mov    $0x18,%ecx
   3cea9:	ba 01 00 00 00       	mov    $0x1,%edx
   3ceae:	be 18 00 00 00       	mov    $0x18,%esi
   3ceb3:	48 89 df             	mov    %rbx,%rdi
   3ceb6:	31 c0                	xor    %eax,%eax
   3ceb8:	4c 8d 05 0e 81 00 00 	lea    0x810e(%rip),%r8        # 44fcd <__PRETTY_FUNCTION__.3752+0x1fd>
   3cebf:	e8 dc 2b fd ff       	callq  faa0 <__snprintf_chk@plt>
   3cec4:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   3cec9:	48 89 de             	mov    %rbx,%rsi
   3cecc:	e8 ef 36 fe ff       	callq  205c0 <lru_cache_remove>
   3ced1:	49 8b 3c 24          	mov    (%r12),%rdi
   3ced5:	e8 d6 eb ff ff       	callq  3bab0 <fzlistx_tail>
   3ceda:	48 85 c0             	test   %rax,%rax
   3cedd:	74 14                	je     3cef3 <taskmap_append+0xa3>
   3cedf:	8b 10                	mov    (%rax),%edx
   3cee1:	8b 48 04             	mov    0x4(%rax),%ecx
   3cee4:	8d 34 0a             	lea    (%rdx,%rcx,1),%esi
   3cee7:	39 f5                	cmp    %esi,%ebp
   3cee9:	74 75                	je     3cf60 <taskmap_append+0x110>
   3ceeb:	39 d5                	cmp    %edx,%ebp
   3ceed:	0f 84 95 00 00 00    	je     3cf88 <taskmap_append+0x138>
   3cef3:	be 10 00 00 00       	mov    $0x10,%esi
   3cef8:	bf 01 00 00 00       	mov    $0x1,%edi
   3cefd:	41 bf ff ff ff ff    	mov    $0xffffffff,%r15d
   3cf03:	e8 08 33 fd ff       	callq  10210 <calloc@plt>
   3cf08:	48 89 c3             	mov    %rax,%rbx
   3cf0b:	48 85 c0             	test   %rax,%rax
   3cf0e:	74 29                	je     3cf39 <taskmap_append+0xe9>
   3cf10:	89 28                	mov    %ebp,(%rax)
   3cf12:	49 8b 3c 24          	mov    (%r12),%rdi
   3cf16:	48 89 c6             	mov    %rax,%rsi
   3cf19:	44 89 68 04          	mov    %r13d,0x4(%rax)
   3cf1d:	44 89 70 08          	mov    %r14d,0x8(%rax)
   3cf21:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
   3cf28:	e8 23 ea ff ff       	callq  3b950 <fzlistx_add_end>
   3cf2d:	48 85 c0             	test   %rax,%rax
   3cf30:	0f 84 8e 00 00 00    	je     3cfc4 <taskmap_append+0x174>
   3cf36:	45 31 ff             	xor    %r15d,%r15d
   3cf39:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   3cf3e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3cf45:	00 00 
   3cf47:	44 89 f8             	mov    %r15d,%eax
   3cf4a:	0f 85 a6 00 00 00    	jne    3cff6 <taskmap_append+0x1a6>
   3cf50:	48 83 c4 28          	add    $0x28,%rsp
   3cf54:	5b                   	pop    %rbx
   3cf55:	5d                   	pop    %rbp
   3cf56:	41 5c                	pop    %r12
   3cf58:	41 5d                	pop    %r13
   3cf5a:	41 5e                	pop    %r14
   3cf5c:	41 5f                	pop    %r15
   3cf5e:	c3                   	retq   
   3cf5f:	90                   	nop
   3cf60:	44 39 70 08          	cmp    %r14d,0x8(%rax)
   3cf64:	75 85                	jne    3ceeb <taskmap_append+0x9b>
   3cf66:	83 78 0c 01          	cmpl   $0x1,0xc(%rax)
   3cf6a:	0f 85 7b ff ff ff    	jne    3ceeb <taskmap_append+0x9b>
   3cf70:	44 01 e9             	add    %r13d,%ecx
   3cf73:	4c 89 e7             	mov    %r12,%rdi
   3cf76:	45 31 ff             	xor    %r15d,%r15d
   3cf79:	89 48 04             	mov    %ecx,0x4(%rax)
   3cf7c:	e8 ff fc ff ff       	callq  3cc80 <taskmap_find_repeats.isra.5>
   3cf81:	eb b6                	jmp    3cf39 <taskmap_append+0xe9>
   3cf83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3cf88:	41 83 fd 01          	cmp    $0x1,%r13d
   3cf8c:	75 05                	jne    3cf93 <taskmap_append+0x143>
   3cf8e:	83 f9 01             	cmp    $0x1,%ecx
   3cf91:	74 1d                	je     3cfb0 <taskmap_append+0x160>
   3cf93:	41 39 cd             	cmp    %ecx,%r13d
   3cf96:	0f 85 57 ff ff ff    	jne    3cef3 <taskmap_append+0xa3>
   3cf9c:	44 39 70 08          	cmp    %r14d,0x8(%rax)
   3cfa0:	0f 85 4d ff ff ff    	jne    3cef3 <taskmap_append+0xa3>
   3cfa6:	83 40 0c 01          	addl   $0x1,0xc(%rax)
   3cfaa:	45 31 ff             	xor    %r15d,%r15d
   3cfad:	eb 8a                	jmp    3cf39 <taskmap_append+0xe9>
   3cfaf:	90                   	nop
   3cfb0:	44 01 70 08          	add    %r14d,0x8(%rax)
   3cfb4:	4c 89 e7             	mov    %r12,%rdi
   3cfb7:	45 31 ff             	xor    %r15d,%r15d
   3cfba:	e8 c1 fc ff ff       	callq  3cc80 <taskmap_find_repeats.isra.5>
   3cfbf:	e9 75 ff ff ff       	jmpq   3cf39 <taskmap_append+0xe9>
   3cfc4:	e8 47 2b fd ff       	callq  fb10 <__errno_location@plt>
   3cfc9:	48 89 df             	mov    %rbx,%rdi
   3cfcc:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3cfd2:	e8 d9 2a fd ff       	callq  fab0 <free@plt>
   3cfd7:	e9 5d ff ff ff       	jmpq   3cf39 <taskmap_append+0xe9>
   3cfdc:	0f 1f 40 00          	nopl   0x0(%rax)
   3cfe0:	e8 2b 2b fd ff       	callq  fb10 <__errno_location@plt>
   3cfe5:	41 bf ff ff ff ff    	mov    $0xffffffff,%r15d
   3cfeb:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3cff1:	e9 43 ff ff ff       	jmpq   3cf39 <taskmap_append+0xe9>
   3cff6:	e8 55 2e fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003cffb <.annobin_taskmap_append.end>:
   3cffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000003d000 <taskmap_decode_json>:
   3d000:	f3 0f 1e fa          	endbr64 
   3d004:	41 57                	push   %r15
   3d006:	41 56                	push   %r14
   3d008:	41 55                	push   %r13
   3d00a:	41 54                	push   %r12
   3d00c:	55                   	push   %rbp
   3d00d:	48 89 f5             	mov    %rsi,%rbp
   3d010:	53                   	push   %rbx
   3d011:	48 89 fb             	mov    %rdi,%rbx
   3d014:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   3d01b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3d022:	00 00 
   3d024:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   3d02b:	00 
   3d02c:	31 c0                	xor    %eax,%eax
   3d02e:	48 85 f6             	test   %rsi,%rsi
   3d031:	74 2c                	je     3d05f <taskmap_decode_json+0x5f>
  return __builtin___memset_chk (__dest, __ch, __len,
   3d033:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   3d037:	48 89 f1             	mov    %rsi,%rcx
   3d03a:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   3d041:	48 c7 86 98 00 00 00 	movq   $0x0,0x98(%rsi)
   3d048:	00 00 00 00 
   3d04c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   3d050:	48 29 f9             	sub    %rdi,%rcx
   3d053:	81 c1 a0 00 00 00    	add    $0xa0,%ecx
   3d059:	c1 e9 03             	shr    $0x3,%ecx
   3d05c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   3d05f:	48 85 db             	test   %rbx,%rbx
   3d062:	0f 84 c8 02 00 00    	je     3d330 <taskmap_decode_json+0x330>
   3d068:	8b 03                	mov    (%rbx),%eax
   3d06a:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   3d06f:	85 c0                	test   %eax,%eax
   3d071:	0f 84 89 01 00 00    	je     3d200 <taskmap_decode_json+0x200>
   3d077:	83 f8 01             	cmp    $0x1,%eax
   3d07a:	0f 85 38 02 00 00    	jne    3d2b8 <taskmap_decode_json+0x2b8>
   3d080:	e8 2b fd ff ff       	callq  3cdb0 <taskmap_create>
   3d085:	45 31 ed             	xor    %r13d,%r13d
   3d088:	49 89 c4             	mov    %rax,%r12
   3d08b:	48 85 c0             	test   %rax,%rax
   3d08e:	0f 84 64 02 00 00    	je     3d2f8 <taskmap_decode_json+0x2f8>
   3d094:	48 8d 44 24 3c       	lea    0x3c(%rsp),%rax
   3d099:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3d09e:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   3d0a3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   3d0a8:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   3d0ad:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   3d0b2:	48 8d 44 24 44       	lea    0x44(%rsp),%rax
   3d0b7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3d0bc:	eb 56                	jmp    3d114 <taskmap_decode_json+0x114>
   3d0be:	66 90                	xchg   %ax,%ax
   3d0c0:	be 10 00 00 00       	mov    $0x10,%esi
   3d0c5:	bf 01 00 00 00       	mov    $0x1,%edi
   3d0ca:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   3d0cf:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
   3d0d4:	e8 37 31 fd ff       	callq  10210 <calloc@plt>
   3d0d9:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
   3d0de:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
   3d0e3:	48 85 c0             	test   %rax,%rax
   3d0e6:	0f 84 b4 01 00 00    	je     3d2a0 <taskmap_decode_json+0x2a0>
   3d0ec:	44 89 38             	mov    %r15d,(%rax)
   3d0ef:	49 8b 3c 24          	mov    (%r12),%rdi
   3d0f3:	48 89 c6             	mov    %rax,%rsi
   3d0f6:	44 89 70 04          	mov    %r14d,0x4(%rax)
   3d0fa:	44 89 40 08          	mov    %r8d,0x8(%rax)
   3d0fe:	44 89 48 0c          	mov    %r9d,0xc(%rax)
   3d102:	e8 49 e8 ff ff       	callq  3b950 <fzlistx_add_end>
   3d107:	48 85 c0             	test   %rax,%rax
   3d10a:	0f 84 60 02 00 00    	je     3d370 <taskmap_decode_json+0x370>
   3d110:	49 83 c5 01          	add    $0x1,%r13
   3d114:	48 89 df             	mov    %rbx,%rdi
   3d117:	e8 04 2c fd ff       	callq  fd20 <json_array_size@plt>
   3d11c:	49 39 c5             	cmp    %rax,%r13
   3d11f:	0f 83 a8 00 00 00    	jae    3d1cd <taskmap_decode_json+0x1cd>
   3d125:	4c 89 ee             	mov    %r13,%rsi
   3d128:	48 89 df             	mov    %rbx,%rdi
   3d12b:	e8 b0 33 fd ff       	callq  104e0 <json_array_get@plt>
   3d130:	48 85 c0             	test   %rax,%rax
   3d133:	0f 84 94 00 00 00    	je     3d1cd <taskmap_decode_json+0x1cd>
   3d139:	83 38 01             	cmpl   $0x1,(%rax)
   3d13c:	0f 85 96 01 00 00    	jne    3d2d8 <taskmap_decode_json+0x2d8>
   3d142:	ff 74 24 28          	pushq  0x28(%rsp)
   3d146:	48 8d 0d bd 7d 00 00 	lea    0x7dbd(%rip),%rcx        # 44f0a <__PRETTY_FUNCTION__.3752+0x13a>
   3d14d:	48 89 c7             	mov    %rax,%rdi
   3d150:	31 c0                	xor    %eax,%eax
   3d152:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   3d157:	52                   	push   %rdx
   3d158:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   3d15d:	ba 04 00 00 00       	mov    $0x4,%edx
   3d162:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
   3d167:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   3d16c:	e8 cf 36 fd ff       	callq  10840 <json_unpack_ex@plt>
   3d171:	5a                   	pop    %rdx
   3d172:	59                   	pop    %rcx
   3d173:	85 c0                	test   %eax,%eax
   3d175:	0f 88 05 01 00 00    	js     3d280 <taskmap_decode_json+0x280>
   3d17b:	44 8b 7c 24 38       	mov    0x38(%rsp),%r15d
   3d180:	44 8b 74 24 3c       	mov    0x3c(%rsp),%r14d
   3d185:	44 8b 44 24 40       	mov    0x40(%rsp),%r8d
   3d18a:	44 8b 4c 24 44       	mov    0x44(%rsp),%r9d
   3d18f:	45 85 ff             	test   %r15d,%r15d
   3d192:	78 13                	js     3d1a7 <taskmap_decode_json+0x1a7>
   3d194:	45 85 f6             	test   %r14d,%r14d
   3d197:	7e 0e                	jle    3d1a7 <taskmap_decode_json+0x1a7>
   3d199:	45 85 c0             	test   %r8d,%r8d
   3d19c:	7e 09                	jle    3d1a7 <taskmap_decode_json+0x1a7>
   3d19e:	45 85 c9             	test   %r9d,%r9d
   3d1a1:	0f 8f 19 ff ff ff    	jg     3d0c0 <taskmap_decode_json+0xc0>
   3d1a7:	44 89 f1             	mov    %r14d,%ecx
   3d1aa:	44 89 fa             	mov    %r15d,%edx
   3d1ad:	48 8d 35 78 7d 00 00 	lea    0x7d78(%rip),%rsi        # 44f2c <__PRETTY_FUNCTION__.3752+0x15c>
   3d1b4:	48 89 ef             	mov    %rbp,%rdi
   3d1b7:	31 c0                	xor    %eax,%eax
   3d1b9:	e8 f2 ee fd ff       	callq  1c0b0 <errprintf>
   3d1be:	4c 89 e7             	mov    %r12,%rdi
   3d1c1:	e8 9a fb ff ff       	callq  3cd60 <taskmap_destroy>
   3d1c6:	45 31 e4             	xor    %r12d,%r12d
   3d1c9:	f3 0f 1e fa          	endbr64 
   3d1cd:	48 8b 94 24 58 01 00 	mov    0x158(%rsp),%rdx
   3d1d4:	00 
   3d1d5:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3d1dc:	00 00 
   3d1de:	4c 89 e0             	mov    %r12,%rax
   3d1e1:	0f 85 99 01 00 00    	jne    3d380 <taskmap_decode_json+0x380>
   3d1e7:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   3d1ee:	5b                   	pop    %rbx
   3d1ef:	5d                   	pop    %rbp
   3d1f0:	41 5c                	pop    %r12
   3d1f2:	41 5d                	pop    %r13
   3d1f4:	41 5e                	pop    %r14
   3d1f6:	41 5f                	pop    %r15
   3d1f8:	c3                   	retq   
   3d1f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d200:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   3d205:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   3d20a:	48 89 df             	mov    %rbx,%rdi
   3d20d:	31 d2                	xor    %edx,%edx
   3d20f:	50                   	push   %rax
   3d210:	48 8d 05 ad 7c 00 00 	lea    0x7cad(%rip),%rax        # 44ec4 <__PRETTY_FUNCTION__.3752+0xf4>
   3d217:	4c 89 e6             	mov    %r12,%rsi
   3d21a:	4c 8d 05 5c 44 00 00 	lea    0x445c(%rip),%r8        # 4167d <f58_prefix+0x221a>
   3d221:	50                   	push   %rax
   3d222:	48 8d 0d 91 7c 00 00 	lea    0x7c91(%rip),%rcx        # 44eba <__PRETTY_FUNCTION__.3752+0xea>
   3d229:	31 c0                	xor    %eax,%eax
   3d22b:	4c 8d 4c 24 54       	lea    0x54(%rsp),%r9
   3d230:	e8 0b 36 fd ff       	callq  10840 <json_unpack_ex@plt>
   3d235:	5e                   	pop    %rsi
   3d236:	5f                   	pop    %rdi
   3d237:	85 c0                	test   %eax,%eax
   3d239:	0f 88 11 01 00 00    	js     3d350 <taskmap_decode_json+0x350>
   3d23f:	8b 54 24 44          	mov    0x44(%rsp),%edx
   3d243:	83 fa 01             	cmp    $0x1,%edx
   3d246:	0f 85 c4 00 00 00    	jne    3d310 <taskmap_decode_json+0x310>
   3d24c:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   3d251:	48 85 db             	test   %rbx,%rbx
   3d254:	74 09                	je     3d25f <taskmap_decode_json+0x25f>
   3d256:	83 3b 01             	cmpl   $0x1,(%rbx)
   3d259:	0f 84 21 fe ff ff    	je     3d080 <taskmap_decode_json+0x80>
   3d25f:	48 8d 35 7d 7c 00 00 	lea    0x7c7d(%rip),%rsi        # 44ee3 <__PRETTY_FUNCTION__.3752+0x113>
   3d266:	48 89 ef             	mov    %rbp,%rdi
   3d269:	31 c0                	xor    %eax,%eax
   3d26b:	45 31 e4             	xor    %r12d,%r12d
   3d26e:	e8 3d ee fd ff       	callq  1c0b0 <errprintf>
   3d273:	e9 46 ff ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3d27f:	00 
   3d280:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3d285:	48 8d 35 85 7c 00 00 	lea    0x7c85(%rip),%rsi        # 44f11 <__PRETTY_FUNCTION__.3752+0x141>
   3d28c:	48 89 ef             	mov    %rbp,%rdi
   3d28f:	31 c0                	xor    %eax,%eax
   3d291:	48 83 c2 5c          	add    $0x5c,%rdx
   3d295:	e8 16 ee fd ff       	callq  1c0b0 <errprintf>
   3d29a:	e9 1f ff ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d29f:	90                   	nop
   3d2a0:	48 8d 35 55 7c 00 00 	lea    0x7c55(%rip),%rsi        # 44efc <__PRETTY_FUNCTION__.3752+0x12c>
   3d2a7:	48 89 ef             	mov    %rbp,%rdi
   3d2aa:	e8 01 ee fd ff       	callq  1c0b0 <errprintf>
   3d2af:	e9 0a ff ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d2b4:	0f 1f 40 00          	nopl   0x0(%rax)
   3d2b8:	48 8d 35 11 7d 00 00 	lea    0x7d11(%rip),%rsi        # 44fd0 <__PRETTY_FUNCTION__.3752+0x200>
   3d2bf:	48 89 ef             	mov    %rbp,%rdi
   3d2c2:	31 c0                	xor    %eax,%eax
   3d2c4:	45 31 e4             	xor    %r12d,%r12d
   3d2c7:	e8 e4 ed fd ff       	callq  1c0b0 <errprintf>
   3d2cc:	e9 fc fe ff ff       	jmpq   3d1cd <taskmap_decode_json+0x1cd>
   3d2d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d2d8:	4c 89 ea             	mov    %r13,%rdx
   3d2db:	48 8d 35 16 7d 00 00 	lea    0x7d16(%rip),%rsi        # 44ff8 <__PRETTY_FUNCTION__.3752+0x228>
   3d2e2:	48 89 ef             	mov    %rbp,%rdi
   3d2e5:	31 c0                	xor    %eax,%eax
   3d2e7:	e8 c4 ed fd ff       	callq  1c0b0 <errprintf>
   3d2ec:	e9 cd fe ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d2f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d2f8:	48 8d 35 fd 7b 00 00 	lea    0x7bfd(%rip),%rsi        # 44efc <__PRETTY_FUNCTION__.3752+0x12c>
   3d2ff:	48 89 ef             	mov    %rbp,%rdi
   3d302:	31 c0                	xor    %eax,%eax
   3d304:	e8 a7 ed fd ff       	callq  1c0b0 <errprintf>
   3d309:	e9 b0 fe ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d30e:	66 90                	xchg   %ax,%ax
   3d310:	48 8d 35 b1 7b 00 00 	lea    0x7bb1(%rip),%rsi        # 44ec8 <__PRETTY_FUNCTION__.3752+0xf8>
   3d317:	48 89 ef             	mov    %rbp,%rdi
   3d31a:	31 c0                	xor    %eax,%eax
   3d31c:	e8 8f ed fd ff       	callq  1c0b0 <errprintf>
   3d321:	e9 a0 fe ff ff       	jmpq   3d1c6 <taskmap_decode_json+0x1c6>
   3d326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d32d:	00 00 00 
   3d330:	48 8d 35 72 7b 00 00 	lea    0x7b72(%rip),%rsi        # 44ea9 <__PRETTY_FUNCTION__.3752+0xd9>
   3d337:	48 89 ef             	mov    %rbp,%rdi
   3d33a:	31 c0                	xor    %eax,%eax
   3d33c:	45 31 e4             	xor    %r12d,%r12d
   3d33f:	e8 6c ed fd ff       	callq  1c0b0 <errprintf>
   3d344:	e9 84 fe ff ff       	jmpq   3d1cd <taskmap_decode_json+0x1cd>
   3d349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d350:	49 8d 54 24 5c       	lea    0x5c(%r12),%rdx
   3d355:	48 8d 35 b0 5e 00 00 	lea    0x5eb0(%rip),%rsi        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   3d35c:	48 89 ef             	mov    %rbp,%rdi
   3d35f:	31 c0                	xor    %eax,%eax
   3d361:	e8 4a ed fd ff       	callq  1c0b0 <errprintf>
   3d366:	e9 5b fe ff ff       	jmpq   3d1c6 <taskmap_decode_json+0x1c6>
   3d36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3d370:	e8 9b 27 fd ff       	callq  fb10 <__errno_location@plt>
   3d375:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3d37b:	e9 3e fe ff ff       	jmpq   3d1be <taskmap_decode_json+0x1be>
   3d380:	e8 cb 2a fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003d385 <.annobin_taskmap_decode_json.end>:
   3d385:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3d38c:	00 00 00 00 

000000000003d390 <taskmap_taskids>:
   3d390:	f3 0f 1e fa          	endbr64 
   3d394:	41 57                	push   %r15
   3d396:	41 56                	push   %r14
   3d398:	41 55                	push   %r13
   3d39a:	41 54                	push   %r12
   3d39c:	55                   	push   %rbp
   3d39d:	53                   	push   %rbx
   3d39e:	48 83 ec 38          	sub    $0x38,%rsp
   3d3a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3d3a9:	00 00 
   3d3ab:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3d3b0:	31 c0                	xor    %eax,%eax
   3d3b2:	48 85 ff             	test   %rdi,%rdi
   3d3b5:	0f 84 6d 01 00 00    	je     3d528 <taskmap_taskids+0x198>
   3d3bb:	41 89 f7             	mov    %esi,%r15d
   3d3be:	85 f6                	test   %esi,%esi
   3d3c0:	0f 88 62 01 00 00    	js     3d528 <taskmap_taskids+0x198>
   3d3c6:	49 89 fc             	mov    %rdi,%r12
   3d3c9:	e8 62 fa ff ff       	callq  3ce30 <taskmap_unknown>
   3d3ce:	84 c0                	test   %al,%al
   3d3d0:	0f 85 52 01 00 00    	jne    3d528 <taskmap_taskids+0x198>
   3d3d6:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   3d3db:	45 89 f9             	mov    %r15d,%r9d
   3d3de:	b9 18 00 00 00       	mov    $0x18,%ecx
   3d3e3:	ba 01 00 00 00       	mov    $0x1,%edx
   3d3e8:	4c 8d 05 de 7b 00 00 	lea    0x7bde(%rip),%r8        # 44fcd <__PRETTY_FUNCTION__.3752+0x1fd>
   3d3ef:	be 18 00 00 00       	mov    $0x18,%esi
   3d3f4:	48 89 df             	mov    %rbx,%rdi
   3d3f7:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   3d3fc:	e8 9f 26 fd ff       	callq  faa0 <__snprintf_chk@plt>
   3d401:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   3d406:	48 89 de             	mov    %rbx,%rsi
   3d409:	e8 c2 2f fe ff       	callq  203d0 <lru_cache_get>
   3d40e:	49 89 c5             	mov    %rax,%r13
   3d411:	48 85 c0             	test   %rax,%rax
   3d414:	0f 85 1c 01 00 00    	jne    3d536 <taskmap_taskids+0x1a6>
   3d41a:	be 01 00 00 00       	mov    $0x1,%esi
   3d41f:	31 ff                	xor    %edi,%edi
   3d421:	e8 ea 8c fe ff       	callq  26110 <idset_create>
   3d426:	48 89 04 24          	mov    %rax,(%rsp)
   3d42a:	48 85 c0             	test   %rax,%rax
   3d42d:	0f 84 03 01 00 00    	je     3d536 <taskmap_taskids+0x1a6>
   3d433:	49 8b 3c 24          	mov    (%r12),%rdi
   3d437:	45 31 f6             	xor    %r14d,%r14d
   3d43a:	e8 b1 e6 ff ff       	callq  3baf0 <fzlistx_first>
   3d43f:	48 89 c5             	mov    %rax,%rbp
   3d442:	48 85 c0             	test   %rax,%rax
   3d445:	0f 84 8a 00 00 00    	je     3d4d5 <taskmap_taskids+0x145>
   3d44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3d450:	8b 45 0c             	mov    0xc(%rbp),%eax
   3d453:	85 c0                	test   %eax,%eax
   3d455:	7e 69                	jle    3d4c0 <taskmap_taskids+0x130>
   3d457:	8b 55 04             	mov    0x4(%rbp),%edx
   3d45a:	8b 7d 08             	mov    0x8(%rbp),%edi
   3d45d:	31 db                	xor    %ebx,%ebx
   3d45f:	eb 17                	jmp    3d478 <taskmap_taskids+0xe8>
   3d461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d468:	89 d0                	mov    %edx,%eax
   3d46a:	83 c3 01             	add    $0x1,%ebx
   3d46d:	0f af c7             	imul   %edi,%eax
   3d470:	41 01 c6             	add    %eax,%r14d
   3d473:	3b 5d 0c             	cmp    0xc(%rbp),%ebx
   3d476:	7d 48                	jge    3d4c0 <taskmap_taskids+0x130>
   3d478:	8b 45 00             	mov    0x0(%rbp),%eax
   3d47b:	41 39 c7             	cmp    %eax,%r15d
   3d47e:	7c e8                	jl     3d468 <taskmap_taskids+0xd8>
   3d480:	8d 34 10             	lea    (%rax,%rdx,1),%esi
   3d483:	41 39 f7             	cmp    %esi,%r15d
   3d486:	7d e0                	jge    3d468 <taskmap_taskids+0xd8>
   3d488:	44 89 fe             	mov    %r15d,%esi
   3d48b:	83 c3 01             	add    $0x1,%ebx
   3d48e:	29 c6                	sub    %eax,%esi
   3d490:	0f af f7             	imul   %edi,%esi
   3d493:	44 01 f6             	add    %r14d,%esi
   3d496:	8d 54 3e ff          	lea    -0x1(%rsi,%rdi,1),%edx
   3d49a:	48 8b 3c 24          	mov    (%rsp),%rdi
   3d49e:	e8 0d 8f fe ff       	callq  263b0 <idset_range_set>
   3d4a3:	8b 55 04             	mov    0x4(%rbp),%edx
   3d4a6:	8b 7d 08             	mov    0x8(%rbp),%edi
   3d4a9:	89 d0                	mov    %edx,%eax
   3d4ab:	0f af c7             	imul   %edi,%eax
   3d4ae:	41 01 c6             	add    %eax,%r14d
   3d4b1:	3b 5d 0c             	cmp    0xc(%rbp),%ebx
   3d4b4:	7c c2                	jl     3d478 <taskmap_taskids+0xe8>
   3d4b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d4bd:	00 00 00 
   3d4c0:	49 8b 3c 24          	mov    (%r12),%rdi
   3d4c4:	e8 77 e6 ff ff       	callq  3bb40 <fzlistx_next>
   3d4c9:	48 89 c5             	mov    %rax,%rbp
   3d4cc:	48 85 c0             	test   %rax,%rax
   3d4cf:	0f 85 7b ff ff ff    	jne    3d450 <taskmap_taskids+0xc0>
   3d4d5:	48 8b 3c 24          	mov    (%rsp),%rdi
   3d4d9:	e8 12 91 fe ff       	callq  265f0 <idset_count>
   3d4de:	48 85 c0             	test   %rax,%rax
   3d4e1:	74 75                	je     3d558 <taskmap_taskids+0x1c8>
   3d4e3:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   3d4e8:	45 89 f9             	mov    %r15d,%r9d
   3d4eb:	b9 18 00 00 00       	mov    $0x18,%ecx
   3d4f0:	31 c0                	xor    %eax,%eax
   3d4f2:	4c 8d 05 d4 7a 00 00 	lea    0x7ad4(%rip),%r8        # 44fcd <__PRETTY_FUNCTION__.3752+0x1fd>
   3d4f9:	ba 01 00 00 00       	mov    $0x1,%edx
   3d4fe:	be 18 00 00 00       	mov    $0x18,%esi
   3d503:	48 89 df             	mov    %rbx,%rdi
   3d506:	e8 95 25 fd ff       	callq  faa0 <__snprintf_chk@plt>
   3d50b:	4c 8b 2c 24          	mov    (%rsp),%r13
   3d50f:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   3d514:	48 89 de             	mov    %rbx,%rsi
   3d517:	4c 89 ea             	mov    %r13,%rdx
   3d51a:	e8 61 2f fe ff       	callq  20480 <lru_cache_put>
   3d51f:	eb 15                	jmp    3d536 <taskmap_taskids+0x1a6>
   3d521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3d528:	e8 e3 25 fd ff       	callq  fb10 <__errno_location@plt>
   3d52d:	45 31 ed             	xor    %r13d,%r13d
   3d530:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3d536:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   3d53b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3d542:	00 00 
   3d544:	4c 89 e8             	mov    %r13,%rax
   3d547:	75 25                	jne    3d56e <taskmap_taskids+0x1de>
   3d549:	48 83 c4 38          	add    $0x38,%rsp
   3d54d:	5b                   	pop    %rbx
   3d54e:	5d                   	pop    %rbp
   3d54f:	41 5c                	pop    %r12
   3d551:	41 5d                	pop    %r13
   3d553:	41 5e                	pop    %r14
   3d555:	41 5f                	pop    %r15
   3d557:	c3                   	retq   
   3d558:	48 8b 3c 24          	mov    (%rsp),%rdi
   3d55c:	e8 3f 8c fe ff       	callq  261a0 <idset_destroy>
   3d561:	e8 aa 25 fd ff       	callq  fb10 <__errno_location@plt>
   3d566:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   3d56c:	eb c8                	jmp    3d536 <taskmap_taskids+0x1a6>
   3d56e:	e8 dd 28 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003d573 <.annobin_taskmap_nodeid.start>:
   3d573:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3d57a:	00 00 00 00 
   3d57e:	66 90                	xchg   %ax,%ax

000000000003d580 <taskmap_nodeid>:
   3d580:	f3 0f 1e fa          	endbr64 
   3d584:	41 54                	push   %r12
   3d586:	55                   	push   %rbp
   3d587:	53                   	push   %rbx
   3d588:	48 85 ff             	test   %rdi,%rdi
   3d58b:	0f 84 9f 00 00 00    	je     3d630 <taskmap_nodeid+0xb0>
   3d591:	89 f3                	mov    %esi,%ebx
   3d593:	85 f6                	test   %esi,%esi
   3d595:	0f 88 95 00 00 00    	js     3d630 <taskmap_nodeid+0xb0>
   3d59b:	48 89 fd             	mov    %rdi,%rbp
   3d59e:	e8 8d f8 ff ff       	callq  3ce30 <taskmap_unknown>
   3d5a3:	84 c0                	test   %al,%al
   3d5a5:	0f 85 85 00 00 00    	jne    3d630 <taskmap_nodeid+0xb0>
   3d5ab:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d5af:	45 31 e4             	xor    %r12d,%r12d
   3d5b2:	e8 39 e5 ff ff       	callq  3baf0 <fzlistx_first>
   3d5b7:	48 89 c6             	mov    %rax,%rsi
   3d5ba:	48 85 c0             	test   %rax,%rax
   3d5bd:	74 42                	je     3d601 <taskmap_nodeid+0x81>
   3d5bf:	8b 46 0c             	mov    0xc(%rsi),%eax
   3d5c2:	85 c0                	test   %eax,%eax
   3d5c4:	7e 2a                	jle    3d5f0 <taskmap_nodeid+0x70>
   3d5c6:	44 8b 46 08          	mov    0x8(%rsi),%r8d
   3d5ca:	8b 56 04             	mov    0x4(%rsi),%edx
   3d5cd:	41 0f af d0          	imul   %r8d,%edx
   3d5d1:	42 8d 0c 22          	lea    (%rdx,%r12,1),%ecx
   3d5d5:	39 cb                	cmp    %ecx,%ebx
   3d5d7:	7c 47                	jl     3d620 <taskmap_nodeid+0xa0>
   3d5d9:	31 ff                	xor    %edi,%edi
   3d5db:	eb 09                	jmp    3d5e6 <taskmap_nodeid+0x66>
   3d5dd:	0f 1f 00             	nopl   (%rax)
   3d5e0:	01 d1                	add    %edx,%ecx
   3d5e2:	39 d9                	cmp    %ebx,%ecx
   3d5e4:	7f 3a                	jg     3d620 <taskmap_nodeid+0xa0>
   3d5e6:	83 c7 01             	add    $0x1,%edi
   3d5e9:	41 89 cc             	mov    %ecx,%r12d
   3d5ec:	39 f8                	cmp    %edi,%eax
   3d5ee:	75 f0                	jne    3d5e0 <taskmap_nodeid+0x60>
   3d5f0:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d5f4:	e8 47 e5 ff ff       	callq  3bb40 <fzlistx_next>
   3d5f9:	48 89 c6             	mov    %rax,%rsi
   3d5fc:	48 85 c0             	test   %rax,%rax
   3d5ff:	75 be                	jne    3d5bf <taskmap_nodeid+0x3f>
   3d601:	e8 0a 25 fd ff       	callq  fb10 <__errno_location@plt>
   3d606:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   3d60c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3d611:	5b                   	pop    %rbx
   3d612:	5d                   	pop    %rbp
   3d613:	41 5c                	pop    %r12
   3d615:	c3                   	retq   
   3d616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d61d:	00 00 00 
   3d620:	89 d8                	mov    %ebx,%eax
   3d622:	44 29 e0             	sub    %r12d,%eax
   3d625:	99                   	cltd   
   3d626:	41 f7 f8             	idiv   %r8d
   3d629:	03 06                	add    (%rsi),%eax
   3d62b:	5b                   	pop    %rbx
   3d62c:	5d                   	pop    %rbp
   3d62d:	41 5c                	pop    %r12
   3d62f:	c3                   	retq   
   3d630:	e8 db 24 fd ff       	callq  fb10 <__errno_location@plt>
   3d635:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3d63b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3d640:	eb e9                	jmp    3d62b <taskmap_nodeid+0xab>

000000000003d642 <.annobin_taskmap_nodeid.end>:
   3d642:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3d649:	00 00 00 00 
   3d64d:	0f 1f 00             	nopl   (%rax)

000000000003d650 <taskmap_ntasks>:
   3d650:	f3 0f 1e fa          	endbr64 
   3d654:	48 83 ec 08          	sub    $0x8,%rsp
   3d658:	e8 33 fd ff ff       	callq  3d390 <taskmap_taskids>
   3d65d:	48 85 c0             	test   %rax,%rax
   3d660:	74 0d                	je     3d66f <taskmap_ntasks+0x1f>
   3d662:	48 89 c7             	mov    %rax,%rdi
   3d665:	e8 86 8f fe ff       	callq  265f0 <idset_count>
   3d66a:	48 83 c4 08          	add    $0x8,%rsp
   3d66e:	c3                   	retq   
   3d66f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   3d674:	eb f4                	jmp    3d66a <taskmap_ntasks+0x1a>

000000000003d676 <.annobin_taskmap_nnodes.start>:
   3d676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d67d:	00 00 00 

000000000003d680 <taskmap_nnodes>:
   3d680:	f3 0f 1e fa          	endbr64 
   3d684:	55                   	push   %rbp
   3d685:	53                   	push   %rbx
   3d686:	48 83 ec 08          	sub    $0x8,%rsp
   3d68a:	48 85 ff             	test   %rdi,%rdi
   3d68d:	74 42                	je     3d6d1 <taskmap_nnodes+0x51>
   3d68f:	48 89 fd             	mov    %rdi,%rbp
   3d692:	e8 99 f7 ff ff       	callq  3ce30 <taskmap_unknown>
   3d697:	84 c0                	test   %al,%al
   3d699:	75 36                	jne    3d6d1 <taskmap_nnodes+0x51>
   3d69b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d69f:	31 db                	xor    %ebx,%ebx
   3d6a1:	e8 4a e4 ff ff       	callq  3baf0 <fzlistx_first>
   3d6a6:	48 85 c0             	test   %rax,%rax
   3d6a9:	74 1d                	je     3d6c8 <taskmap_nnodes+0x48>
   3d6ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3d6b0:	8b 50 04             	mov    0x4(%rax),%edx
   3d6b3:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d6b7:	03 10                	add    (%rax),%edx
   3d6b9:	39 d3                	cmp    %edx,%ebx
   3d6bb:	0f 4c da             	cmovl  %edx,%ebx
   3d6be:	e8 7d e4 ff ff       	callq  3bb40 <fzlistx_next>
   3d6c3:	48 85 c0             	test   %rax,%rax
   3d6c6:	75 e8                	jne    3d6b0 <taskmap_nnodes+0x30>
   3d6c8:	48 83 c4 08          	add    $0x8,%rsp
   3d6cc:	89 d8                	mov    %ebx,%eax
   3d6ce:	5b                   	pop    %rbx
   3d6cf:	5d                   	pop    %rbp
   3d6d0:	c3                   	retq   
   3d6d1:	e8 3a 24 fd ff       	callq  fb10 <__errno_location@plt>
   3d6d6:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3d6db:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3d6e1:	eb e5                	jmp    3d6c8 <taskmap_nnodes+0x48>

000000000003d6e3 <.annobin_taskmap_encode_raw.start>:
   3d6e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3d6ea:	00 00 00 00 
   3d6ee:	66 90                	xchg   %ax,%ax

000000000003d6f0 <taskmap_encode_raw>:
   3d6f0:	41 57                	push   %r15
   3d6f2:	41 56                	push   %r14
   3d6f4:	41 89 f6             	mov    %esi,%r14d
   3d6f7:	41 55                	push   %r13
   3d6f9:	41 54                	push   %r12
   3d6fb:	49 89 fc             	mov    %rdi,%r12
   3d6fe:	55                   	push   %rbp
   3d6ff:	53                   	push   %rbx
   3d700:	48 83 ec 18          	sub    $0x18,%rsp
   3d704:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3d70b:	00 00 
   3d70d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3d712:	31 c0                	xor    %eax,%eax
   3d714:	e8 97 e0 ff ff       	callq  3b7b0 <fzlistx_new>
   3d719:	48 89 c3             	mov    %rax,%rbx
   3d71c:	48 89 04 24          	mov    %rax,(%rsp)
   3d720:	e8 eb 23 fd ff       	callq  fb10 <__errno_location@plt>
   3d725:	49 89 c7             	mov    %rax,%r15
   3d728:	48 85 db             	test   %rbx,%rbx
   3d72b:	0f 84 cf 00 00 00    	je     3d800 <taskmap_encode_raw+0x110>
   3d731:	48 8d 35 18 f5 ff ff 	lea    -0xae8(%rip),%rsi        # 3cc50 <item_destructor>
   3d738:	48 89 df             	mov    %rbx,%rdi
   3d73b:	31 ed                	xor    %ebp,%ebp
   3d73d:	e8 7e ee ff ff       	callq  3c5c0 <fzlistx_set_destructor>
   3d742:	4c 89 e7             	mov    %r12,%rdi
   3d745:	e8 36 ff ff ff       	callq  3d680 <taskmap_nnodes>
   3d74a:	41 89 c5             	mov    %eax,%r13d
   3d74d:	85 c0                	test   %eax,%eax
   3d74f:	7f 3f                	jg     3d790 <taskmap_encode_raw+0xa0>
   3d751:	e9 8a 00 00 00       	jmpq   3d7e0 <taskmap_encode_raw+0xf0>
   3d756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d75d:	00 00 00 
   3d760:	44 89 f6             	mov    %r14d,%esi
   3d763:	48 89 c7             	mov    %rax,%rdi
   3d766:	e8 85 97 fe ff       	callq  26ef0 <idset_encode>
   3d76b:	48 89 c3             	mov    %rax,%rbx
   3d76e:	48 85 c0             	test   %rax,%rax
   3d771:	74 2f                	je     3d7a2 <taskmap_encode_raw+0xb2>
   3d773:	48 8b 3c 24          	mov    (%rsp),%rdi
   3d777:	48 89 c6             	mov    %rax,%rsi
   3d77a:	e8 d1 e1 ff ff       	callq  3b950 <fzlistx_add_end>
   3d77f:	48 85 c0             	test   %rax,%rax
   3d782:	0f 84 80 00 00 00    	je     3d808 <taskmap_encode_raw+0x118>
   3d788:	83 c5 01             	add    $0x1,%ebp
   3d78b:	41 39 ed             	cmp    %ebp,%r13d
   3d78e:	74 50                	je     3d7e0 <taskmap_encode_raw+0xf0>
   3d790:	89 ee                	mov    %ebp,%esi
   3d792:	4c 89 e7             	mov    %r12,%rdi
   3d795:	e8 f6 fb ff ff       	callq  3d390 <taskmap_taskids>
   3d79a:	48 89 c3             	mov    %rax,%rbx
   3d79d:	48 85 c0             	test   %rax,%rax
   3d7a0:	75 be                	jne    3d760 <taskmap_encode_raw+0x70>
   3d7a2:	41 8b 2f             	mov    (%r15),%ebp
   3d7a5:	48 89 df             	mov    %rbx,%rdi
   3d7a8:	31 db                	xor    %ebx,%ebx
   3d7aa:	e8 01 23 fd ff       	callq  fab0 <free@plt>
   3d7af:	41 89 2f             	mov    %ebp,(%r15)
   3d7b2:	48 89 e7             	mov    %rsp,%rdi
   3d7b5:	e8 a6 e9 ff ff       	callq  3c160 <fzlistx_destroy>
   3d7ba:	41 89 2f             	mov    %ebp,(%r15)
   3d7bd:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   3d7c2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   3d7c9:	00 00 
   3d7cb:	48 89 d8             	mov    %rbx,%rax
   3d7ce:	75 3f                	jne    3d80f <taskmap_encode_raw+0x11f>
   3d7d0:	48 83 c4 18          	add    $0x18,%rsp
   3d7d4:	5b                   	pop    %rbx
   3d7d5:	5d                   	pop    %rbp
   3d7d6:	41 5c                	pop    %r12
   3d7d8:	41 5d                	pop    %r13
   3d7da:	41 5e                	pop    %r14
   3d7dc:	41 5f                	pop    %r15
   3d7de:	c3                   	retq   
   3d7df:	90                   	nop
   3d7e0:	48 8b 3c 24          	mov    (%rsp),%rdi
   3d7e4:	48 8d 35 5d 77 00 00 	lea    0x775d(%rip),%rsi        # 44f48 <__PRETTY_FUNCTION__.3752+0x178>
   3d7eb:	e8 40 f3 ff ff       	callq  3cb30 <list_join>
   3d7f0:	41 8b 2f             	mov    (%r15),%ebp
   3d7f3:	48 89 c3             	mov    %rax,%rbx
   3d7f6:	eb ba                	jmp    3d7b2 <taskmap_encode_raw+0xc2>
   3d7f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3d7ff:	00 
   3d800:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3d806:	eb b5                	jmp    3d7bd <taskmap_encode_raw+0xcd>
   3d808:	bd 0c 00 00 00       	mov    $0xc,%ebp
   3d80d:	eb 96                	jmp    3d7a5 <taskmap_encode_raw+0xb5>
   3d80f:	e8 3c 26 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003d814 <.annobin_taskmap_encode_raw.end>:
   3d814:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3d81b:	00 00 00 00 
   3d81f:	90                   	nop

000000000003d820 <taskmap_total_ntasks>:
   3d820:	f3 0f 1e fa          	endbr64 
   3d824:	55                   	push   %rbp
   3d825:	53                   	push   %rbx
   3d826:	48 83 ec 08          	sub    $0x8,%rsp
   3d82a:	48 85 ff             	test   %rdi,%rdi
   3d82d:	74 45                	je     3d874 <taskmap_total_ntasks+0x54>
   3d82f:	48 89 fd             	mov    %rdi,%rbp
   3d832:	e8 f9 f5 ff ff       	callq  3ce30 <taskmap_unknown>
   3d837:	84 c0                	test   %al,%al
   3d839:	75 39                	jne    3d874 <taskmap_total_ntasks+0x54>
   3d83b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d83f:	31 db                	xor    %ebx,%ebx
   3d841:	e8 aa e2 ff ff       	callq  3baf0 <fzlistx_first>
   3d846:	48 85 c0             	test   %rax,%rax
   3d849:	74 20                	je     3d86b <taskmap_total_ntasks+0x4b>
   3d84b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   3d850:	8b 50 04             	mov    0x4(%rax),%edx
   3d853:	0f af 50 0c          	imul   0xc(%rax),%edx
   3d857:	0f af 50 08          	imul   0x8(%rax),%edx
   3d85b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3d85f:	01 d3                	add    %edx,%ebx
   3d861:	e8 da e2 ff ff       	callq  3bb40 <fzlistx_next>
   3d866:	48 85 c0             	test   %rax,%rax
   3d869:	75 e5                	jne    3d850 <taskmap_total_ntasks+0x30>
   3d86b:	48 83 c4 08          	add    $0x8,%rsp
   3d86f:	89 d8                	mov    %ebx,%eax
   3d871:	5b                   	pop    %rbx
   3d872:	5d                   	pop    %rbp
   3d873:	c3                   	retq   
   3d874:	e8 97 22 fd ff       	callq  fb10 <__errno_location@plt>
   3d879:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   3d87e:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3d884:	eb e5                	jmp    3d86b <taskmap_total_ntasks+0x4b>

000000000003d886 <.annobin_taskmap_decode.start>:
   3d886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3d88d:	00 00 00 

000000000003d890 <taskmap_decode>:
   3d890:	f3 0f 1e fa          	endbr64 
   3d894:	41 57                	push   %r15
   3d896:	41 56                	push   %r14
   3d898:	41 55                	push   %r13
   3d89a:	41 54                	push   %r12
   3d89c:	55                   	push   %rbp
   3d89d:	48 89 f5             	mov    %rsi,%rbp
   3d8a0:	53                   	push   %rbx
   3d8a1:	48 89 fb             	mov    %rdi,%rbx
   3d8a4:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   3d8ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3d8b2:	00 00 
   3d8b4:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   3d8bb:	00 
   3d8bc:	31 c0                	xor    %eax,%eax
   3d8be:	48 85 f6             	test   %rsi,%rsi
   3d8c1:	74 2c                	je     3d8ef <taskmap_decode+0x5f>
   3d8c3:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   3d8c7:	48 89 f1             	mov    %rsi,%rcx
   3d8ca:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   3d8d1:	48 c7 86 98 00 00 00 	movq   $0x0,0x98(%rsi)
   3d8d8:	00 00 00 00 
   3d8dc:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   3d8e0:	48 29 f9             	sub    %rdi,%rcx
   3d8e3:	81 c1 a0 00 00 00    	add    $0xa0,%ecx
   3d8e9:	c1 e9 03             	shr    $0x3,%ecx
   3d8ec:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   3d8ef:	48 85 db             	test   %rbx,%rbx
   3d8f2:	0f 84 e8 02 00 00    	je     3dbe0 <taskmap_decode+0x350>
   3d8f8:	80 3b 00             	cmpb   $0x0,(%rbx)
   3d8fb:	0f 84 8f 00 00 00    	je     3d990 <taskmap_decode+0x100>
   3d901:	48 8d 35 42 76 00 00 	lea    0x7642(%rip),%rsi        # 44f4a <__PRETTY_FUNCTION__.3752+0x17a>
   3d908:	48 89 df             	mov    %rbx,%rdi
   3d90b:	e8 a0 31 fd ff       	callq  10ab0 <strstr@plt>
   3d910:	48 85 c0             	test   %rax,%rax
   3d913:	0f 84 87 00 00 00    	je     3d9a0 <taskmap_decode+0x110>
   3d919:	e8 92 f4 ff ff       	callq  3cdb0 <taskmap_create>
   3d91e:	49 89 c4             	mov    %rax,%r12
   3d921:	48 85 c0             	test   %rax,%rax
   3d924:	74 14                	je     3d93a <taskmap_decode+0xaa>
   3d926:	48 89 df             	mov    %rbx,%rdi
   3d929:	e8 72 30 fd ff       	callq  109a0 <strdup@plt>
   3d92e:	49 89 c6             	mov    %rax,%r14
   3d931:	48 85 c0             	test   %rax,%rax
   3d934:	0f 85 be 00 00 00    	jne    3d9f8 <taskmap_decode+0x168>
   3d93a:	48 8d 35 bb 75 00 00 	lea    0x75bb(%rip),%rsi        # 44efc <__PRETTY_FUNCTION__.3752+0x12c>
   3d941:	48 89 ef             	mov    %rbp,%rdi
   3d944:	31 c0                	xor    %eax,%eax
   3d946:	45 31 f6             	xor    %r14d,%r14d
   3d949:	e8 62 e7 fd ff       	callq  1c0b0 <errprintf>
   3d94e:	4c 89 e7             	mov    %r12,%rdi
   3d951:	45 31 e4             	xor    %r12d,%r12d
   3d954:	e8 07 f4 ff ff       	callq  3cd60 <taskmap_destroy>
   3d959:	4c 89 f7             	mov    %r14,%rdi
   3d95c:	e8 4f 21 fd ff       	callq  fab0 <free@plt>
   3d961:	48 8b b4 24 38 01 00 	mov    0x138(%rsp),%rsi
   3d968:	00 
   3d969:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   3d970:	00 00 
   3d972:	4c 89 e0             	mov    %r12,%rax
   3d975:	0f 85 d3 02 00 00    	jne    3dc4e <taskmap_decode+0x3be>
   3d97b:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   3d982:	5b                   	pop    %rbx
   3d983:	5d                   	pop    %rbp
   3d984:	41 5c                	pop    %r12
   3d986:	41 5d                	pop    %r13
   3d988:	41 5e                	pop    %r14
   3d98a:	41 5f                	pop    %r15
   3d98c:	c3                   	retq   
   3d98d:	0f 1f 00             	nopl   (%rax)
   3d990:	e8 1b f4 ff ff       	callq  3cdb0 <taskmap_create>
   3d995:	49 89 c4             	mov    %rax,%r12
   3d998:	eb c7                	jmp    3d961 <taskmap_decode+0xd1>
   3d99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3d9a0:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   3d9a5:	48 89 df             	mov    %rbx,%rdi
   3d9a8:	be 04 00 00 00       	mov    $0x4,%esi
   3d9ad:	4c 89 e2             	mov    %r12,%rdx
   3d9b0:	e8 5b 2b fd ff       	callq  10510 <json_loads@plt>
   3d9b5:	48 89 c3             	mov    %rax,%rbx
   3d9b8:	48 85 c0             	test   %rax,%rax
   3d9bb:	0f 84 ff 01 00 00    	je     3dbc0 <taskmap_decode+0x330>
   3d9c1:	48 89 ee             	mov    %rbp,%rsi
   3d9c4:	48 89 c7             	mov    %rax,%rdi
   3d9c7:	e8 34 f6 ff ff       	callq  3d000 <taskmap_decode_json>
   3d9cc:	49 89 c4             	mov    %rax,%r12
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3d9cf:	48 8b 43 08          	mov    0x8(%rbx),%rax
   3d9d3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3d9d7:	74 88                	je     3d961 <taskmap_decode+0xd1>
   3d9d9:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   3d9df:	0f 85 7c ff ff ff    	jne    3d961 <taskmap_decode+0xd1>
        json_delete(json);
   3d9e5:	48 89 df             	mov    %rbx,%rdi
   3d9e8:	e8 33 26 fd ff       	callq  10020 <json_delete@plt>
   3d9ed:	e9 6f ff ff ff       	jmpq   3d961 <taskmap_decode+0xd1>
   3d9f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3d9f8:	48 89 c7             	mov    %rax,%rdi
   3d9fb:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   3da00:	4c 8d 7c 24 28       	lea    0x28(%rsp),%r15
   3da05:	45 31 ed             	xor    %r13d,%r13d
   3da08:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   3da0d:	0f 1f 00             	nopl   (%rax)
   3da10:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3da15:	48 8d 35 81 75 00 00 	lea    0x7581(%rip),%rsi        # 44f9d <__PRETTY_FUNCTION__.3752+0x1cd>
   3da1c:	e8 4f 27 fd ff       	callq  10170 <strtok_r@plt>
   3da21:	48 89 c3             	mov    %rax,%rbx
   3da24:	48 85 c0             	test   %rax,%rax
   3da27:	0f 84 53 01 00 00    	je     3db80 <taskmap_decode+0x2f0>
   3da2d:	e8 ce 30 fd ff       	callq  10b00 <__ctype_b_loc@plt>
   3da32:	48 8b 00             	mov    (%rax),%rax
   3da35:	eb 0d                	jmp    3da44 <taskmap_decode+0x1b4>
   3da37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3da3e:	00 00 
   3da40:	48 83 c3 01          	add    $0x1,%rbx
   3da44:	48 0f be 0b          	movsbq (%rbx),%rcx
   3da48:	48 89 ca             	mov    %rcx,%rdx
   3da4b:	f6 44 48 01 20       	testb  $0x20,0x1(%rax,%rcx,2)
   3da50:	75 ee                	jne    3da40 <taskmap_decode+0x1b0>
   3da52:	b9 07 00 00 00       	mov    $0x7,%ecx
   3da57:	48 89 de             	mov    %rbx,%rsi
   3da5a:	48 8d 3d e9 74 00 00 	lea    0x74e9(%rip),%rdi        # 44f4a <__PRETTY_FUNCTION__.3752+0x17a>
   3da61:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   3da63:	0f 97 c0             	seta   %al
   3da66:	1c 00                	sbb    $0x0,%al
   3da68:	84 c0                	test   %al,%al
   3da6a:	75 14                	jne    3da80 <taskmap_decode+0x1f0>
   3da6c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   3da72:	31 ff                	xor    %edi,%edi
   3da74:	eb 9a                	jmp    3da10 <taskmap_decode+0x180>
   3da76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3da7d:	00 00 00 
   3da80:	84 d2                	test   %dl,%dl
   3da82:	74 ee                	je     3da72 <taskmap_decode+0x1e2>
   3da84:	45 84 ed             	test   %r13b,%r13b
   3da87:	0f 84 ab 01 00 00    	je     3dc38 <taskmap_decode+0x3a8>
   3da8d:	e8 7e 20 fd ff       	callq  fb10 <__errno_location@plt>
   3da92:	4c 89 fe             	mov    %r15,%rsi
   3da95:	ba 0a 00 00 00       	mov    $0xa,%edx
   3da9a:	48 89 df             	mov    %rbx,%rdi
   3da9d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   3daa3:	49 89 c5             	mov    %rax,%r13
   3daa6:	e8 a5 2d fd ff       	callq  10850 <strtoul@plt>
   3daab:	41 8b 75 00          	mov    0x0(%r13),%esi
   3daaf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3dab4:	85 f6                	test   %esi,%esi
   3dab6:	0f 85 e4 00 00 00    	jne    3dba0 <taskmap_decode+0x310>
   3dabc:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   3dac1:	80 3f 2c             	cmpb   $0x2c,(%rdi)
   3dac4:	0f 85 d6 00 00 00    	jne    3dba0 <taskmap_decode+0x310>
   3daca:	48 83 c7 01          	add    $0x1,%rdi
   3dace:	ba 0a 00 00 00       	mov    $0xa,%edx
   3dad3:	4c 89 fe             	mov    %r15,%rsi
   3dad6:	e8 75 2d fd ff       	callq  10850 <strtoul@plt>
   3dadb:	41 8b 4d 00          	mov    0x0(%r13),%ecx
   3dadf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3dae4:	85 c9                	test   %ecx,%ecx
   3dae6:	0f 85 b4 00 00 00    	jne    3dba0 <taskmap_decode+0x310>
   3daec:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   3daf1:	80 3f 2c             	cmpb   $0x2c,(%rdi)
   3daf4:	0f 85 a6 00 00 00    	jne    3dba0 <taskmap_decode+0x310>
   3dafa:	ba 0a 00 00 00       	mov    $0xa,%edx
   3daff:	48 83 c7 01          	add    $0x1,%rdi
   3db03:	4c 89 fe             	mov    %r15,%rsi
   3db06:	e8 45 2d fd ff       	callq  10850 <strtoul@plt>
   3db0b:	41 8b 55 00          	mov    0x0(%r13),%edx
   3db0f:	85 d2                	test   %edx,%edx
   3db11:	0f 85 89 00 00 00    	jne    3dba0 <taskmap_decode+0x310>
   3db17:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   3db1c:	80 3a 29             	cmpb   $0x29,(%rdx)
   3db1f:	75 7f                	jne    3dba0 <taskmap_decode+0x310>
   3db21:	8b 54 24 08          	mov    0x8(%rsp),%edx
   3db25:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   3db2a:	c1 ea 1f             	shr    $0x1f,%edx
   3db2d:	45 85 c0             	test   %r8d,%r8d
   3db30:	0f 9e c1             	setle  %cl
   3db33:	08 d1                	or     %dl,%cl
   3db35:	0f 85 c5 00 00 00    	jne    3dc00 <taskmap_decode+0x370>
   3db3b:	85 c0                	test   %eax,%eax
   3db3d:	0f 8e bd 00 00 00    	jle    3dc00 <taskmap_decode+0x370>
   3db43:	8b 74 24 08          	mov    0x8(%rsp),%esi
   3db47:	89 c1                	mov    %eax,%ecx
   3db49:	44 89 c2             	mov    %r8d,%edx
   3db4c:	4c 89 e7             	mov    %r12,%rdi
   3db4f:	e8 fc f2 ff ff       	callq  3ce50 <taskmap_append>
   3db54:	85 c0                	test   %eax,%eax
   3db56:	0f 89 10 ff ff ff    	jns    3da6c <taskmap_decode+0x1dc>
   3db5c:	41 8b 7d 00          	mov    0x0(%r13),%edi
   3db60:	e8 6b 2e fd ff       	callq  109d0 <strerror@plt>
   3db65:	48 8d 35 1e 74 00 00 	lea    0x741e(%rip),%rsi        # 44f8a <__PRETTY_FUNCTION__.3752+0x1ba>
   3db6c:	48 89 ef             	mov    %rbp,%rdi
   3db6f:	48 89 c2             	mov    %rax,%rdx
   3db72:	31 c0                	xor    %eax,%eax
   3db74:	e8 37 e5 fd ff       	callq  1c0b0 <errprintf>
   3db79:	e9 d0 fd ff ff       	jmpq   3d94e <taskmap_decode+0xbe>
   3db7e:	66 90                	xchg   %ax,%ax
   3db80:	4c 89 e7             	mov    %r12,%rdi
   3db83:	e8 98 fc ff ff       	callq  3d820 <taskmap_total_ntasks>
   3db88:	85 c0                	test   %eax,%eax
   3db8a:	0f 84 90 00 00 00    	je     3dc20 <taskmap_decode+0x390>
   3db90:	4c 89 f7             	mov    %r14,%rdi
   3db93:	e8 18 1f fd ff       	callq  fab0 <free@plt>
   3db98:	e9 c4 fd ff ff       	jmpq   3d961 <taskmap_decode+0xd1>
   3db9d:	0f 1f 00             	nopl   (%rax)
   3dba0:	48 89 da             	mov    %rbx,%rdx
   3dba3:	48 8d 35 a8 73 00 00 	lea    0x73a8(%rip),%rsi        # 44f52 <__PRETTY_FUNCTION__.3752+0x182>
   3dbaa:	48 89 ef             	mov    %rbp,%rdi
   3dbad:	31 c0                	xor    %eax,%eax
   3dbaf:	e8 fc e4 fd ff       	callq  1c0b0 <errprintf>
   3dbb4:	e9 95 fd ff ff       	jmpq   3d94e <taskmap_decode+0xbe>
   3dbb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3dbc0:	49 8d 54 24 5c       	lea    0x5c(%r12),%rdx
   3dbc5:	48 8d 35 40 56 00 00 	lea    0x5640(%rip),%rsi        # 4320c <__PRETTY_FUNCTION__.11024+0xcc>
   3dbcc:	48 89 ef             	mov    %rbp,%rdi
   3dbcf:	31 c0                	xor    %eax,%eax
   3dbd1:	e8 da e4 fd ff       	callq  1c0b0 <errprintf>
   3dbd6:	45 31 e4             	xor    %r12d,%r12d
   3dbd9:	e9 83 fd ff ff       	jmpq   3d961 <taskmap_decode+0xd1>
   3dbde:	66 90                	xchg   %ax,%ax
   3dbe0:	48 8d 35 c2 72 00 00 	lea    0x72c2(%rip),%rsi        # 44ea9 <__PRETTY_FUNCTION__.3752+0xd9>
   3dbe7:	48 89 ef             	mov    %rbp,%rdi
   3dbea:	31 c0                	xor    %eax,%eax
   3dbec:	45 31 e4             	xor    %r12d,%r12d
   3dbef:	e8 bc e4 fd ff       	callq  1c0b0 <errprintf>
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3dbf4:	e9 68 fd ff ff       	jmpq   3d961 <taskmap_decode+0xd1>
   3dbf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3dc00:	48 89 da             	mov    %rbx,%rdx
   3dc03:	48 8d 35 63 73 00 00 	lea    0x7363(%rip),%rsi        # 44f6d <__PRETTY_FUNCTION__.3752+0x19d>
   3dc0a:	48 89 ef             	mov    %rbp,%rdi
   3dc0d:	31 c0                	xor    %eax,%eax
   3dc0f:	e8 9c e4 fd ff       	callq  1c0b0 <errprintf>
   3dc14:	e9 35 fd ff ff       	jmpq   3d94e <taskmap_decode+0xbe>
   3dc19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3dc20:	48 8d 35 21 74 00 00 	lea    0x7421(%rip),%rsi        # 45048 <__PRETTY_FUNCTION__.3752+0x278>
   3dc27:	48 89 ef             	mov    %rbp,%rdi
   3dc2a:	e8 81 e4 fd ff       	callq  1c0b0 <errprintf>
   3dc2f:	e9 1a fd ff ff       	jmpq   3d94e <taskmap_decode+0xbe>
   3dc34:	0f 1f 40 00          	nopl   0x0(%rax)
   3dc38:	48 8d 35 e1 73 00 00 	lea    0x73e1(%rip),%rsi        # 45020 <__PRETTY_FUNCTION__.3752+0x250>
   3dc3f:	48 89 ef             	mov    %rbp,%rdi
   3dc42:	31 c0                	xor    %eax,%eax
   3dc44:	e8 67 e4 fd ff       	callq  1c0b0 <errprintf>
   3dc49:	e9 00 fd ff ff       	jmpq   3d94e <taskmap_decode+0xbe>
   3dc4e:	e8 fd 21 fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003dc53 <.annobin_taskmap_decode.end>:
   3dc53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3dc5a:	00 00 00 00 
   3dc5e:	66 90                	xchg   %ax,%ax

000000000003dc60 <taskmap_encode_json>:
   3dc60:	f3 0f 1e fa          	endbr64 
   3dc64:	41 56                	push   %r14
   3dc66:	41 89 f6             	mov    %esi,%r14d
   3dc69:	41 55                	push   %r13
   3dc6b:	41 54                	push   %r12
   3dc6d:	49 89 fc             	mov    %rdi,%r12
   3dc70:	55                   	push   %rbp
   3dc71:	53                   	push   %rbx
   3dc72:	e8 a9 2d fd ff       	callq  10a20 <json_array@plt>
   3dc77:	48 85 c0             	test   %rax,%rax
   3dc7a:	74 6d                	je     3dce9 <taskmap_encode_json+0x89>
   3dc7c:	49 8b 3c 24          	mov    (%r12),%rdi
   3dc80:	48 89 c5             	mov    %rax,%rbp
   3dc83:	e8 68 de ff ff       	callq  3baf0 <fzlistx_first>
   3dc88:	48 85 c0             	test   %rax,%rax
   3dc8b:	0f 84 8f 00 00 00    	je     3dd20 <taskmap_encode_json+0xc0>
   3dc91:	4c 8d 2d 72 72 00 00 	lea    0x7272(%rip),%r13        # 44f0a <__PRETTY_FUNCTION__.3752+0x13a>
   3dc98:	eb 27                	jmp    3dcc1 <taskmap_encode_json+0x61>
   3dc9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3dca0:	48 89 c6             	mov    %rax,%rsi
   3dca3:	48 89 ef             	mov    %rbp,%rdi
   3dca6:	e8 15 2e fd ff       	callq  10ac0 <json_array_append_new@plt>
   3dcab:	85 c0                	test   %eax,%eax
   3dcad:	0f 88 ad 00 00 00    	js     3dd60 <taskmap_encode_json+0x100>
   3dcb3:	49 8b 3c 24          	mov    (%r12),%rdi
   3dcb7:	e8 84 de ff ff       	callq  3bb40 <fzlistx_next>
   3dcbc:	48 85 c0             	test   %rax,%rax
   3dcbf:	74 5f                	je     3dd20 <taskmap_encode_json+0xc0>
   3dcc1:	8b 48 08             	mov    0x8(%rax),%ecx
   3dcc4:	8b 50 04             	mov    0x4(%rax),%edx
   3dcc7:	4c 89 ef             	mov    %r13,%rdi
   3dcca:	44 8b 40 0c          	mov    0xc(%rax),%r8d
   3dcce:	8b 30                	mov    (%rax),%esi
   3dcd0:	31 c0                	xor    %eax,%eax
   3dcd2:	e8 99 26 fd ff       	callq  10370 <json_pack@plt>
   3dcd7:	48 89 c3             	mov    %rax,%rbx
   3dcda:	48 85 c0             	test   %rax,%rax
   3dcdd:	75 c1                	jne    3dca0 <taskmap_encode_json+0x40>
   3dcdf:	48 8b 45 08          	mov    0x8(%rbp),%rax
   3dce3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3dce7:	75 1f                	jne    3dd08 <taskmap_encode_json+0xa8>
   3dce9:	e8 22 1e fd ff       	callq  fb10 <__errno_location@plt>
   3dcee:	31 ed                	xor    %ebp,%ebp
   3dcf0:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3dcf6:	5b                   	pop    %rbx
   3dcf7:	48 89 e8             	mov    %rbp,%rax
   3dcfa:	5d                   	pop    %rbp
   3dcfb:	41 5c                	pop    %r12
   3dcfd:	41 5d                	pop    %r13
   3dcff:	41 5e                	pop    %r14
   3dd01:	c3                   	retq   
   3dd02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3dd08:	f0 48 83 6d 08 01    	lock subq $0x1,0x8(%rbp)
   3dd0e:	75 d9                	jne    3dce9 <taskmap_encode_json+0x89>
        json_delete(json);
   3dd10:	48 89 ef             	mov    %rbp,%rdi
   3dd13:	e8 08 23 fd ff       	callq  10020 <json_delete@plt>
   3dd18:	eb cf                	jmp    3dce9 <taskmap_encode_json+0x89>
   3dd1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3dd20:	41 83 e6 01          	and    $0x1,%r14d
   3dd24:	74 d0                	je     3dcf6 <taskmap_encode_json+0x96>
   3dd26:	31 c0                	xor    %eax,%eax
   3dd28:	49 89 e8             	mov    %rbp,%r8
   3dd2b:	48 8d 0d 92 71 00 00 	lea    0x7192(%rip),%rcx        # 44ec4 <__PRETTY_FUNCTION__.3752+0xf4>
   3dd32:	ba 01 00 00 00       	mov    $0x1,%edx
   3dd37:	48 8d 35 3f 39 00 00 	lea    0x393f(%rip),%rsi        # 4167d <f58_prefix+0x221a>
   3dd3e:	48 8d 3d 75 71 00 00 	lea    0x7175(%rip),%rdi        # 44eba <__PRETTY_FUNCTION__.3752+0xea>
   3dd45:	e8 26 26 fd ff       	callq  10370 <json_pack@plt>
   3dd4a:	48 85 c0             	test   %rax,%rax
   3dd4d:	74 90                	je     3dcdf <taskmap_encode_json+0x7f>
   3dd4f:	48 89 c5             	mov    %rax,%rbp
   3dd52:	5b                   	pop    %rbx
   3dd53:	48 89 e8             	mov    %rbp,%rax
   3dd56:	5d                   	pop    %rbp
   3dd57:	41 5c                	pop    %r12
   3dd59:	41 5d                	pop    %r13
   3dd5b:	41 5e                	pop    %r14
   3dd5d:	c3                   	retq   
   3dd5e:	66 90                	xchg   %ax,%ax
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3dd60:	48 8b 43 08          	mov    0x8(%rbx),%rax
   3dd64:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3dd68:	0f 84 71 ff ff ff    	je     3dcdf <taskmap_encode_json+0x7f>
   3dd6e:	f0 48 83 6b 08 01    	lock subq $0x1,0x8(%rbx)
   3dd74:	0f 85 65 ff ff ff    	jne    3dcdf <taskmap_encode_json+0x7f>
        json_delete(json);
   3dd7a:	48 89 df             	mov    %rbx,%rdi
   3dd7d:	e8 9e 22 fd ff       	callq  10020 <json_delete@plt>
   3dd82:	e9 58 ff ff ff       	jmpq   3dcdf <taskmap_encode_json+0x7f>

000000000003dd87 <.annobin_taskmap_encode.start>:
   3dd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3dd8e:	00 00 

000000000003dd90 <taskmap_encode>:
   3dd90:	f3 0f 1e fa          	endbr64 
   3dd94:	41 57                	push   %r15
   3dd96:	41 56                	push   %r14
   3dd98:	41 55                	push   %r13
   3dd9a:	41 54                	push   %r12
   3dd9c:	55                   	push   %rbp
   3dd9d:	53                   	push   %rbx
   3dd9e:	48 83 ec 38          	sub    $0x38,%rsp
   3dda2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   3dda9:	00 00 
   3ddab:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   3ddb0:	31 c0                	xor    %eax,%eax
   3ddb2:	48 85 ff             	test   %rdi,%rdi
   3ddb5:	74 0c                	je     3ddc3 <taskmap_encode+0x33>
   3ddb7:	48 89 fd             	mov    %rdi,%rbp
   3ddba:	89 f7                	mov    %esi,%edi
   3ddbc:	83 e7 0f             	and    $0xf,%edi
   3ddbf:	39 fe                	cmp    %edi,%esi
   3ddc1:	74 3d                	je     3de00 <taskmap_encode+0x70>
   3ddc3:	e8 48 1d fd ff       	callq  fb10 <__errno_location@plt>
   3ddc8:	31 db                	xor    %ebx,%ebx
   3ddca:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   3ddd0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   3ddd5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   3dddc:	00 00 
   3ddde:	48 89 d8             	mov    %rbx,%rax
   3dde1:	0f 85 ad 02 00 00    	jne    3e094 <taskmap_encode+0x304>
   3dde7:	48 83 c4 38          	add    $0x38,%rsp
   3ddeb:	5b                   	pop    %rbx
   3ddec:	5d                   	pop    %rbp
   3dded:	41 5c                	pop    %r12
   3ddef:	41 5d                	pop    %r13
   3ddf1:	41 5e                	pop    %r14
   3ddf3:	41 5f                	pop    %r15
   3ddf5:	c3                   	retq   
   3ddf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3ddfd:	00 00 00 
   3de00:	85 f6                	test   %esi,%esi
   3de02:	0f 84 38 01 00 00    	je     3df40 <taskmap_encode+0x1b0>
   3de08:	89 f0                	mov    %esi,%eax
   3de0a:	31 c9                	xor    %ecx,%ecx
   3de0c:	0f 1f 40 00          	nopl   0x0(%rax)
   3de10:	8d 50 ff             	lea    -0x1(%rax),%edx
   3de13:	83 c1 01             	add    $0x1,%ecx
   3de16:	21 d0                	and    %edx,%eax
   3de18:	75 f6                	jne    3de10 <taskmap_encode+0x80>
   3de1a:	83 f9 01             	cmp    $0x1,%ecx
   3de1d:	75 a4                	jne    3ddc3 <taskmap_encode+0x33>
   3de1f:	40 f6 c6 04          	test   $0x4,%sil
   3de23:	0f 85 ff 00 00 00    	jne    3df28 <taskmap_encode+0x198>
   3de29:	40 f6 c6 08          	test   $0x8,%sil
   3de2d:	0f 85 ad 01 00 00    	jne    3dfe0 <taskmap_encode+0x250>
   3de33:	83 e6 02             	and    $0x2,%esi
   3de36:	0f 84 04 01 00 00    	je     3df40 <taskmap_encode+0x1b0>
   3de3c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   3de43:	00 00 
   3de45:	48 89 ef             	mov    %rbp,%rdi
   3de48:	e8 e3 ef ff ff       	callq  3ce30 <taskmap_unknown>
   3de4d:	84 c0                	test   %al,%al
   3de4f:	0f 85 57 01 00 00    	jne    3dfac <taskmap_encode+0x21c>
   3de55:	e8 56 d9 ff ff       	callq  3b7b0 <fzlistx_new>
   3de5a:	48 89 c3             	mov    %rax,%rbx
   3de5d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   3de62:	e8 a9 1c fd ff       	callq  fb10 <__errno_location@plt>
   3de67:	49 89 c6             	mov    %rax,%r14
   3de6a:	48 85 db             	test   %rbx,%rbx
   3de6d:	0f 84 05 02 00 00    	je     3e078 <taskmap_encode+0x2e8>
   3de73:	48 89 df             	mov    %rbx,%rdi
   3de76:	48 8d 35 d3 ed ff ff 	lea    -0x122d(%rip),%rsi        # 3cc50 <item_destructor>
   3de7d:	4c 8d 7c 24 18       	lea    0x18(%rsp),%r15
   3de82:	e8 39 e7 ff ff       	callq  3c5c0 <fzlistx_set_destructor>
   3de87:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
   3de8b:	4c 8d 2d 0d 71 00 00 	lea    0x710d(%rip),%r13        # 44f9f <__PRETTY_FUNCTION__.3752+0x1cf>
   3de92:	e8 59 dc ff ff       	callq  3baf0 <fzlistx_first>
   3de97:	48 89 c3             	mov    %rax,%rbx
   3de9a:	48 85 c0             	test   %rax,%rax
   3de9d:	0f 84 64 01 00 00    	je     3e007 <taskmap_encode+0x277>
   3dea3:	8b 43 0c             	mov    0xc(%rbx),%eax
   3dea6:	45 31 e4             	xor    %r12d,%r12d
   3dea9:	85 c0                	test   %eax,%eax
   3deab:	7f 31                	jg     3dede <taskmap_encode+0x14e>
   3dead:	e9 40 01 00 00       	jmpq   3dff2 <taskmap_encode+0x262>
   3deb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3deb8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   3debd:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   3dec2:	e8 89 da ff ff       	callq  3b950 <fzlistx_add_end>
   3dec7:	48 85 c0             	test   %rax,%rax
   3deca:	0f 84 b3 01 00 00    	je     3e083 <taskmap_encode+0x2f3>
   3ded0:	41 83 c4 01          	add    $0x1,%r12d
   3ded4:	44 3b 63 0c          	cmp    0xc(%rbx),%r12d
   3ded8:	0f 8d 14 01 00 00    	jge    3dff2 <taskmap_encode+0x262>
   3dede:	44 8b 4b 08          	mov    0x8(%rbx),%r9d
   3dee2:	44 8b 43 04          	mov    0x4(%rbx),%r8d
   3dee6:	31 c0                	xor    %eax,%eax
   3dee8:	4c 89 ea             	mov    %r13,%rdx
   3deeb:	8b 0b                	mov    (%rbx),%ecx
   3deed:	be 01 00 00 00       	mov    $0x1,%esi
   3def2:	4c 89 ff             	mov    %r15,%rdi
   3def5:	e8 f6 22 fd ff       	callq  101f0 <__asprintf_chk@plt>
   3defa:	85 c0                	test   %eax,%eax
   3defc:	79 ba                	jns    3deb8 <taskmap_encode+0x128>
   3defe:	41 8b 1e             	mov    (%r14),%ebx
   3df01:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   3df06:	e8 a5 1b fd ff       	callq  fab0 <free@plt>
   3df0b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   3df10:	e8 4b e2 ff ff       	callq  3c160 <fzlistx_destroy>
   3df15:	41 89 1e             	mov    %ebx,(%r14)
   3df18:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   3df1d:	e9 ae fe ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3df22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3df28:	be 04 00 00 00       	mov    $0x4,%esi
   3df2d:	48 89 ef             	mov    %rbp,%rdi
   3df30:	e8 bb f7 ff ff       	callq  3d6f0 <taskmap_encode_raw>
   3df35:	48 89 c3             	mov    %rax,%rbx
   3df38:	e9 93 fe ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3df3d:	0f 1f 00             	nopl   (%rax)
   3df40:	89 fe                	mov    %edi,%esi
   3df42:	48 89 ef             	mov    %rbp,%rdi
   3df45:	e8 16 fd ff ff       	callq  3dc60 <taskmap_encode_json>
   3df4a:	48 89 c5             	mov    %rax,%rbp
   3df4d:	48 85 c0             	test   %rax,%rax
   3df50:	0f 84 1b 01 00 00    	je     3e071 <taskmap_encode+0x2e1>
   3df56:	be 20 00 00 00       	mov    $0x20,%esi
   3df5b:	48 89 c7             	mov    %rax,%rdi
   3df5e:	e8 9d 22 fd ff       	callq  10200 <json_dumps@plt>
   3df63:	48 89 c3             	mov    %rax,%rbx
   3df66:	e8 a5 1b fd ff       	callq  fb10 <__errno_location@plt>
   3df6b:	48 85 db             	test   %rbx,%rbx
   3df6e:	0f 84 ec 00 00 00    	je     3e060 <taskmap_encode+0x2d0>
   3df74:	44 8b 20             	mov    (%rax),%r12d
    if (json && json->refcount != (size_t)-1 && JSON_INTERNAL_DECREF(json) == 0)
   3df77:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   3df7b:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   3df7f:	75 0f                	jne    3df90 <taskmap_encode+0x200>
   3df81:	44 89 20             	mov    %r12d,(%rax)
   3df84:	e9 47 fe ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3df89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3df90:	f0 48 83 6d 08 01    	lock subq $0x1,0x8(%rbp)
   3df96:	75 e9                	jne    3df81 <taskmap_encode+0x1f1>
        json_delete(json);
   3df98:	48 89 ef             	mov    %rbp,%rdi
   3df9b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3dfa0:	e8 7b 20 fd ff       	callq  10020 <json_delete@plt>
   3dfa5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3dfaa:	eb d5                	jmp    3df81 <taskmap_encode+0x1f1>
   3dfac:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   3dfb1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   3dfb8:	00 00 
   3dfba:	0f 85 d4 00 00 00    	jne    3e094 <taskmap_encode+0x304>
   3dfc0:	48 83 c4 38          	add    $0x38,%rsp
   3dfc4:	48 8d 3d 4e 53 00 00 	lea    0x534e(%rip),%rdi        # 43319 <__PRETTY_FUNCTION__.11024+0x1d9>
   3dfcb:	5b                   	pop    %rbx
   3dfcc:	5d                   	pop    %rbp
   3dfcd:	41 5c                	pop    %r12
   3dfcf:	41 5d                	pop    %r13
   3dfd1:	41 5e                	pop    %r14
   3dfd3:	41 5f                	pop    %r15
   3dfd5:	e9 c6 29 fd ff       	jmpq   109a0 <strdup@plt>
   3dfda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   3dfe0:	31 f6                	xor    %esi,%esi
   3dfe2:	48 89 ef             	mov    %rbp,%rdi
   3dfe5:	e8 06 f7 ff ff       	callq  3d6f0 <taskmap_encode_raw>
   3dfea:	48 89 c3             	mov    %rax,%rbx
   3dfed:	e9 de fd ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3dff2:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   3dff6:	e8 45 db ff ff       	callq  3bb40 <fzlistx_next>
   3dffb:	48 89 c3             	mov    %rax,%rbx
   3dffe:	48 85 c0             	test   %rax,%rax
   3e001:	0f 85 9c fe ff ff    	jne    3dea3 <taskmap_encode+0x113>
   3e007:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   3e00c:	48 8d 35 3d 6f 00 00 	lea    0x6f3d(%rip),%rsi        # 44f50 <__PRETTY_FUNCTION__.3752+0x180>
   3e013:	e8 18 eb ff ff       	callq  3cb30 <list_join>
   3e018:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   3e01d:	48 85 c0             	test   %rax,%rax
   3e020:	0f 84 d8 fe ff ff    	je     3defe <taskmap_encode+0x16e>
   3e026:	48 89 c1             	mov    %rax,%rcx
   3e029:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   3e02e:	31 c0                	xor    %eax,%eax
   3e030:	be 01 00 00 00       	mov    $0x1,%esi
   3e035:	48 8d 15 6e 6f 00 00 	lea    0x6f6e(%rip),%rdx        # 44faa <__PRETTY_FUNCTION__.3752+0x1da>
   3e03c:	e8 af 21 fd ff       	callq  101f0 <__asprintf_chk@plt>
   3e041:	85 c0                	test   %eax,%eax
   3e043:	0f 89 b5 fe ff ff    	jns    3defe <taskmap_encode+0x16e>
   3e049:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   3e050:	00 00 
   3e052:	e9 a7 fe ff ff       	jmpq   3defe <taskmap_encode+0x16e>
   3e057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3e05e:	00 00 
   3e060:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3e066:	41 bc 0c 00 00 00    	mov    $0xc,%r12d
   3e06c:	e9 06 ff ff ff       	jmpq   3df77 <taskmap_encode+0x1e7>
   3e071:	31 db                	xor    %ebx,%ebx
   3e073:	e9 58 fd ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3e078:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   3e07e:	e9 4d fd ff ff       	jmpq   3ddd0 <taskmap_encode+0x40>
   3e083:	41 c7 06 0c 00 00 00 	movl   $0xc,(%r14)
   3e08a:	bb 0c 00 00 00       	mov    $0xc,%ebx
   3e08f:	e9 6d fe ff ff       	jmpq   3df01 <taskmap_encode+0x171>
   3e094:	e8 b7 1d fd ff       	callq  fe50 <__stack_chk_fail@plt>

000000000003e099 <.annobin_taskmap_check.start>:
   3e099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000003e0a0 <taskmap_check>:
   3e0a0:	f3 0f 1e fa          	endbr64 
   3e0a4:	48 85 ff             	test   %rdi,%rdi
   3e0a7:	0f 84 db 00 00 00    	je     3e188 <taskmap_check+0xe8>
   3e0ad:	48 85 f6             	test   %rsi,%rsi
   3e0b0:	0f 84 d2 00 00 00    	je     3e188 <taskmap_check+0xe8>
   3e0b6:	41 57                	push   %r15
   3e0b8:	49 89 d7             	mov    %rdx,%r15
   3e0bb:	41 56                	push   %r14
   3e0bd:	41 55                	push   %r13
   3e0bf:	41 54                	push   %r12
   3e0c1:	49 89 f4             	mov    %rsi,%r12
   3e0c4:	55                   	push   %rbp
   3e0c5:	48 89 fd             	mov    %rdi,%rbp
   3e0c8:	53                   	push   %rbx
   3e0c9:	48 83 ec 08          	sub    $0x8,%rsp
   3e0cd:	e8 ae f5 ff ff       	callq  3d680 <taskmap_nnodes>
   3e0d2:	4c 89 e7             	mov    %r12,%rdi
   3e0d5:	41 89 c6             	mov    %eax,%r14d
   3e0d8:	e8 a3 f5 ff ff       	callq  3d680 <taskmap_nnodes>
   3e0dd:	41 39 c6             	cmp    %eax,%r14d
   3e0e0:	75 7e                	jne    3e160 <taskmap_check+0xc0>
   3e0e2:	48 89 ef             	mov    %rbp,%rdi
   3e0e5:	e8 36 f7 ff ff       	callq  3d820 <taskmap_total_ntasks>
   3e0ea:	4c 89 e7             	mov    %r12,%rdi
   3e0ed:	89 c3                	mov    %eax,%ebx
   3e0ef:	e8 2c f7 ff ff       	callq  3d820 <taskmap_total_ntasks>
   3e0f4:	39 c3                	cmp    %eax,%ebx
   3e0f6:	0f 85 bc 00 00 00    	jne    3e1b8 <taskmap_check+0x118>
   3e0fc:	31 db                	xor    %ebx,%ebx
   3e0fe:	45 85 f6             	test   %r14d,%r14d
   3e101:	7f 19                	jg     3e11c <taskmap_check+0x7c>
   3e103:	e9 98 00 00 00       	jmpq   3e1a0 <taskmap_check+0x100>
   3e108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3e10f:	00 
   3e110:	83 c3 01             	add    $0x1,%ebx
   3e113:	41 39 de             	cmp    %ebx,%r14d
   3e116:	0f 84 84 00 00 00    	je     3e1a0 <taskmap_check+0x100>
   3e11c:	89 de                	mov    %ebx,%esi
   3e11e:	48 89 ef             	mov    %rbp,%rdi
   3e121:	e8 2a f5 ff ff       	callq  3d650 <taskmap_ntasks>
   3e126:	89 de                	mov    %ebx,%esi
   3e128:	4c 89 e7             	mov    %r12,%rdi
   3e12b:	41 89 c5             	mov    %eax,%r13d
   3e12e:	e8 1d f5 ff ff       	callq  3d650 <taskmap_ntasks>
   3e133:	41 39 c5             	cmp    %eax,%r13d
   3e136:	74 d8                	je     3e110 <taskmap_check+0x70>
   3e138:	48 83 c4 08          	add    $0x8,%rsp
   3e13c:	45 89 e8             	mov    %r13d,%r8d
   3e13f:	89 c1                	mov    %eax,%ecx
   3e141:	89 da                	mov    %ebx,%edx
   3e143:	4c 89 ff             	mov    %r15,%rdi
   3e146:	5b                   	pop    %rbx
   3e147:	48 8d 35 42 6f 00 00 	lea    0x6f42(%rip),%rsi        # 45090 <__PRETTY_FUNCTION__.3752+0x2c0>
   3e14e:	5d                   	pop    %rbp
   3e14f:	31 c0                	xor    %eax,%eax
   3e151:	41 5c                	pop    %r12
   3e153:	41 5d                	pop    %r13
   3e155:	41 5e                	pop    %r14
   3e157:	41 5f                	pop    %r15
   3e159:	e9 52 df fd ff       	jmpq   1c0b0 <errprintf>
   3e15e:	66 90                	xchg   %ax,%ax
   3e160:	44 89 f1             	mov    %r14d,%ecx
   3e163:	89 c2                	mov    %eax,%edx
   3e165:	48 8d 35 4a 6e 00 00 	lea    0x6e4a(%rip),%rsi        # 44fb6 <__PRETTY_FUNCTION__.3752+0x1e6>
   3e16c:	48 83 c4 08          	add    $0x8,%rsp
   3e170:	4c 89 ff             	mov    %r15,%rdi
   3e173:	31 c0                	xor    %eax,%eax
   3e175:	5b                   	pop    %rbx
   3e176:	5d                   	pop    %rbp
   3e177:	41 5c                	pop    %r12
   3e179:	41 5d                	pop    %r13
   3e17b:	41 5e                	pop    %r14
   3e17d:	41 5f                	pop    %r15
   3e17f:	e9 2c df fd ff       	jmpq   1c0b0 <errprintf>
   3e184:	0f 1f 40 00          	nopl   0x0(%rax)
   3e188:	48 8d 35 1a 6d 00 00 	lea    0x6d1a(%rip),%rsi        # 44ea9 <__PRETTY_FUNCTION__.3752+0xd9>
   3e18f:	48 89 d7             	mov    %rdx,%rdi
   3e192:	31 c0                	xor    %eax,%eax
   3e194:	e9 17 df fd ff       	jmpq   1c0b0 <errprintf>
   3e199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3e1a0:	48 83 c4 08          	add    $0x8,%rsp
   3e1a4:	31 c0                	xor    %eax,%eax
   3e1a6:	5b                   	pop    %rbx
   3e1a7:	5d                   	pop    %rbp
   3e1a8:	41 5c                	pop    %r12
   3e1aa:	41 5d                	pop    %r13
   3e1ac:	41 5e                	pop    %r14
   3e1ae:	41 5f                	pop    %r15
   3e1b0:	c3                   	retq   
   3e1b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   3e1b8:	89 d9                	mov    %ebx,%ecx
   3e1ba:	89 c2                	mov    %eax,%edx
   3e1bc:	48 8d 35 ad 6e 00 00 	lea    0x6ead(%rip),%rsi        # 45070 <__PRETTY_FUNCTION__.3752+0x2a0>
   3e1c3:	eb a7                	jmp    3e16c <taskmap_check+0xcc>

000000000003e1c5 <.annobin_taskmap.c_end>:
   3e1c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3e1cc:	00 00 00 
   3e1cf:	90                   	nop

000000000003e1d0 <atexit>:
   3e1d0:	f3 0f 1e fa          	endbr64 
   3e1d4:	48 8b 15 45 40 21 00 	mov    0x214045(%rip),%rdx        # 252220 <__dso_handle>
   3e1db:	31 f6                	xor    %esi,%esi
   3e1dd:	e9 9e 26 fd ff       	jmpq   10880 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000003e1e4 <_fini>:
   3e1e4:	f3 0f 1e fa          	endbr64 
   3e1e8:	48 83 ec 08          	sub    $0x8,%rsp
   3e1ec:	48 83 c4 08          	add    $0x8,%rsp
   3e1f0:	c3                   	retq   
